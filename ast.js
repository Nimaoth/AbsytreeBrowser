/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI3271557124 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681170 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681169 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681249 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2365587461 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291846985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2063597631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2063597572 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2063597571 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847196 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2684354564 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225617 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170894057 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818584500 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584575 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483731 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146948 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919237549 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2919237548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122473 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122266 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122193 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122407 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122122 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121945 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121817 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121881 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121744 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899096 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899029 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898950 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952791526 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952796958 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578071 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033043 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033041 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033037 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033039 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033038 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483029956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028483 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850224 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587477 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849428 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849434 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146958 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111654 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3305111653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111650 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111647 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111644 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111622 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111627 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111639 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111594 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111598 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111589 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111588 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111578 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3305111577 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111576 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3305111570 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3305111564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3305111563 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291854977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291854984 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854983 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854982 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854990 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791550 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791549 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791548 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791545 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791544 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791533 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291853660 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848518 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291848512 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818584054 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291848455 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225479 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225686 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3221225512 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225500 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3221225499 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3221225480 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3221225475 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3221225495 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3221225494 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2046821074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667577354 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577353 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2701131794 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2701131791 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2701131788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2701131780 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153289 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153242 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153195 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003153062 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152921 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152874 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152821 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152768 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152715 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003152662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952800745 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007896 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007967 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2365587460 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893834 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893832 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893831 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3170893830 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3170893829 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791520 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791522 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2952791519 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791514 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791498 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952791497 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572509 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3170893828 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952792468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344588 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572565 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572562 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369743 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2818572554 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572544 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572541 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572518 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572516 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572426 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845734 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845728 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845726 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845720 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924163 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845714 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845709 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845706 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027991 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2483027980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028021 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028018 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028003 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028000 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027992 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027973 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2046820367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2046820366 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820365 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820364 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2231369731 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2147483652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2147483651 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845698 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2650800131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2667577352 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667577348 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2667577351 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577347 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845696 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845693 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820358 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820357 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845678 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845675 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033034 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033027 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2332033045 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255911 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255910 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255909 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255903 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483666 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2147483665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483664 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2147483658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255891 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255890 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255889 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255874 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255872 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255866 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255852 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255851 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255844 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255827 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255825 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255812 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2315255811 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2231369745 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845665 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818572422 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572425 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572424 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572423 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572501 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681160 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681159 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681162 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681161 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681156 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2885681155 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681158 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681157 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572480 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572479 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572476 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572475 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572474 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572459 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572458 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572457 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572442 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2818572441 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572440 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572434 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572427 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2952795068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952795063 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952794161 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791523 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952791524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3170893842 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572428 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345785 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121730 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121733 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121726 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791367 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2952791370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952791368 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2952794769 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2952791546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121803 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121806 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121827 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121835 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121799 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2952792127 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2365587459 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122009 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121995 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121992 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121989 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003150847 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122534 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122537 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122558 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122586 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007842 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007840 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007837 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007834 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007776 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122530 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120562388 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120563809 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563706 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563236 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120563334 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3120563270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3120562359 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008997 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2097152288 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007774 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007824 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007821 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007818 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007798 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007803 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007783 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3087007788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007780 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007779 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007843 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2080374789 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007771 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007778 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007773 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007775 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003146250 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122459 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122462 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122483 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122491 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122455 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3137340402 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122417 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122425 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122389 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122318 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122321 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122342 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122252 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122255 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122276 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122284 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008709 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122248 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003186895 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008730 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344567 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008718 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008715 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008653 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122182 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122203 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122211 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122175 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121867 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121870 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121891 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121899 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121863 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008383 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122108 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122111 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122140 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122104 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003166612 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003185988 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121931 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121934 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121955 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121963 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121782 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007767 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007766 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007765 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121927 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087008193 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899213 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087008199 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122033 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122036 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122057 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003122065 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122029 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122012 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121681 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121678 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121668 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003122000 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007752 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007762 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007754 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087008904 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003164608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007753 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087008054 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007757 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3087007756 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007748 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344455 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344451 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2986344454 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344452 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3087007763 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3087007751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3087007750 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3087007747 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3019899082 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899085 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899106 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899114 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899064 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899015 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899018 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019899039 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019899047 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898904 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019899011 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898936 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019898939 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898960 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3019898968 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898932 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898910 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2281701407 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121684 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121667 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121672 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3019898907 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3019898905 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3019898908 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121692 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003122624 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2181038083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583992 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818583991 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235627 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2919235630 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235662 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235625 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235622 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235593 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2919235608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2919235602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2919235590 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2919235589 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818572486 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572547 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2852126727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572524 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818582817 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572610 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818578025 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818577993 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818577951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2818576220 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576290 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576295 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369858 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369867 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369787 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2868903940 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818579270 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818575674 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818578754 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818576035 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572296 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572295 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572294 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572292 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2818575703 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572291 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2885681165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2885681176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2885681166 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2818572624 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572635 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572804 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2818572689 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369747 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369739 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369737 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2046820387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI2516582404 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2516582404.node = NNI2516582404;
var NNI2499805188 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2499805188.node = NNI2499805188;
NTI2499805188.base = NTI33555171;
NTI2516582404.base = NTI2499805188;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2046820387 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2046820387.node = NNI2046820387;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2231369737 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2231369737.node = NNI2231369737;
var NNI2231369739 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2231369739.node = NNI2231369739;
NTI2231369747.base = NTI2231369739;
NTI2818572689.base = NTI2231369747;
NTI2818572804.base = NTI2231369739;
NTI2818572635.base = NTI2231369739;
NTI2818572624.base = NTI2231369739;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2885681166 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2885681166.node = NNI2885681166;
NTI2885681166.base = NTI33555171;
NTI2885681165.base = NTI2885681166;
var NNI2885681176 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2885681165, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2885681165, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2885681165, name: "newEndPosition", sons: null}]};
NTI2885681176.node = NNI2885681176;
NTI2885681176.base = NTI33555171;
var NNI2818572291 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2818572291, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2818572291, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2818572291, name: "Nested", len: 0, sons: null}}};
NTI2818572291.node = NNI2818572291;
NTI2818572295.base = NTI2231369739;
NTI2818572296.base = NTI2818572292;
var NNI2818572294 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2818572295, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2818572291, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2231369739, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2231369737, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2818572296, name: "children", sons: null}]]}]};
NTI2818572294.node = NNI2818572294;
NTI2818572292.base = NTI2818572294;
NTI2818575703.base = NTI2818572292;
NTI2818576035.base = NTI2231369739;
NTI2818578754.base = NTI2231369739;
NTI2818575674.base = NTI2231369739;
NTI2818579270.base = NTI2231369739;
var NNI2868903940 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2868903940.node = NNI2868903940;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2868903940.base = NTI33555181;
NTI2868903939.base = NTI2868903940;
var NNI2852126723 = {kind: 1, offset: "impl", len: 0, typ: NTI2868903939, name: "impl", sons: null};
NTI2852126723.node = NNI2852126723;
NTI2231369787.base = NTI2231369739;
NTI2231369867.base = NTI2231369739;
NTI2231369858.base = NTI2231369739;
NTI2818576290.base = NTI2231369739;
var NNI2818576295 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2818576290, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818576295.node = NNI2818576295;
NTI2818576220.base = NTI2231369739;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2818572535.base = NTI2231369739;
var NNI2818577951 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2818577951.node = NNI2818577951;
var NNI2818577993 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2818577993.node = NNI2818577993;
var NNI2818578025 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2818578025.node = NNI2818578025;
var NNI2768240657 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2768240657.node = NNI2768240657;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2818572610.base = NTI2231369739;
NTI2818582817.base = NTI2231369739;
var NNI2818572524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2852126723, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572524.node = NNI2818572524;
var NNI2852126727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2852126727.node = NNI2852126727;
var NNI2818572547 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572535, name: "Field2", sons: null}]};
NTI2818572547.node = NNI2818572547;
var NNI2919235608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235593, name: "Field2", sons: null}]};
NTI2919235608.node = NNI2919235608;
NTI2919235605.base = NTI2919235608;
var NNI2919235602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235602.node = NNI2919235602;
NTI2919235613.base = NTI33554435;
var NNI2919235625 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2919235613, name: "Field2", sons: null}]};
NTI2919235625.node = NNI2919235625;
NTI2919235622.base = NTI2919235625;
var NNI2919235619 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2919235622, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2919235619.node = NNI2919235619;
var NNI2919235590 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2919235602, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2919235619, name: "onRequestSaveIndex", sons: null}]};
NTI2919235590.node = NNI2919235590;
NTI2919235590.base = NTI33555171;
NTI2919235589.base = NTI2919235590;
var NNI2818572486 = {kind: 1, offset: "val", len: 0, typ: NTI2919235589, name: "val", sons: null};
NTI2818572486.node = NNI2818572486;
var NNI2919235627 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2919235627, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2919235627, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2919235627, name: "Function", len: 0, sons: null}}};
NTI2919235627.node = NNI2919235627;
var NNI2919235630 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2231369737, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2919235627, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2919235630.node = NNI2919235630;
NTI2919235662.base = NTI2919235630;
var NNI2818583992 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818583992.node = NNI2818583992;
var NNI2818583991 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2818583992, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2818583991.node = NNI2818583991;
var NNI2181038083 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554438, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2181038083.node = NNI2181038083;
var NNI3019898905 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3019898905.node = NNI3019898905;
var NNI3019898908 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898907, name: "Field1", sons: null}]};
NTI3019898908.node = NNI3019898908;
NTI3003121692.base = NTI3019898908;
NTI3003122624.base = NTI3003121692;
NTI2986345537.base = NTI33554435;
var NNI3003121667 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI3003121667.node = NNI3003121667;
NTI3003121672.base = NTI3003121667;
var NNI3003121684 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121672, name: "Field2", sons: null}]};
NTI3003121684.node = NNI3003121684;
var NNI2281701407 = {kind: 1, offset: "start", len: 0, typ: NTI33554439, name: "start", sons: null};
NTI2281701407.node = NNI2281701407;
var NNI3019898910 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3019898910, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3019898910, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3019898910, name: "Green", len: 0, sons: null}}};
NTI3019898910.node = NNI3019898910;
var NNI3019898932 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898908, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}]};
NTI3019898932.node = NNI3019898932;
var NNI3019898988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}]};
NTI3019898988.node = NNI3019898988;
NTI3019898936.base = NTI3019898939;
var NNI3019898939 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3019898936, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3019898936, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3019898932, name: "value", sons: null}]};
NTI3019898939.node = NNI3019898939;
NTI3019898960.base = NTI3019898939;
var NNI3019898968 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019898960, name: "Field2", sons: null}]};
NTI3019898968.node = NNI3019898968;
NTI3019898904.base = NTI33554439;
var NNI3019899011 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898908, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3019898904, name: "val", sons: null}]};
NTI3019899011.node = NNI3019899011;
NTI3019899015.base = NTI3019899018;
var NNI3019899018 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3019899015, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3019899015, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3019899011, name: "value", sons: null}]};
NTI3019899018.node = NNI3019899018;
NTI3019899039.base = NTI3019899018;
var NNI3019899047 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019899039, name: "Field2", sons: null}]};
NTI3019899047.node = NNI3019899047;
NTI3019899064.base = NTI3019898908;
var NNI3019899078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898908, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3019899064, name: "val", sons: null}]};
NTI3019899078.node = NNI3019899078;
NTI3019899082.base = NTI3019899085;
var NNI3019899085 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3019899082, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3019899082, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3019899078, name: "value", sons: null}]};
NTI3019899085.node = NNI3019899085;
NTI3019899106.base = NTI3019899085;
var NNI3019899114 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3019899106, name: "Field2", sons: null}]};
NTI3019899114.node = NNI3019899114;
var NNI3087007747 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007747, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007747, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007747, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007747, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007747, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007747, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007747, name: "tType", len: 0, sons: null}}};
NTI3087007747.node = NNI3087007747;
var NNI3087007750 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007750, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007750, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007750, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007750, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007750, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3087007750, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3087007750, name: "vkType", len: 0, sons: null}}};
NTI3087007750.node = NNI3087007750;
var NNI2986344451 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI2986344451, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2986344451, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2986344451, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2986344451, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2986344451, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2986344451, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2986344451, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2986344451, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2986344451, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2986344451, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2986344451, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2986344451, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2986344451, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI2986344451, name: "Assignment", len: 0, sons: null}}};
NTI2986344451.node = NNI2986344451;
NTI2986344455.base = NTI2986344452;
var NNI2986344454 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2986344452, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2181038083, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2986344451, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2986344455, name: "children", sons: null}]};
NTI2986344454.node = NNI2986344454;
NTI2986344452.base = NTI2986344454;
NTI3087007757.base = NTI3087007748;
var NNI3087007756 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007747, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3087007748, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3087007757, name: "paramTypes", sons: null}]}]]};
NTI3087007756.node = NNI3087007756;
NTI3087007748.base = NTI3087007756;
var NNI3087007751 = {kind: 3, offset: "kind", len: 7, typ: NTI3087007750, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3087007763, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}]]};
NTI3087007751.node = NNI3087007751;
NTI3087008054.base = NTI3087007748;
var NNI3087007753 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007753, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007753, name: "skBuiltin", len: 0, sons: null}}};
NTI3087007753.node = NNI3087007753;
var NNI3003164608 = {kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null};
NTI3003164608.node = NNI3003164608;
var NNI3087007752 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007752, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007752, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3087007752, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3087007752, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3087007752, name: "Scope", len: 0, sons: null}}};
NTI3087007752.node = NNI3087007752;
var NNI3087007762 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3087007753, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3087007748, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3087007751, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3087007752, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3087007762.node = NNI3087007762;
NTI3087007754.base = NTI3087007762;
var NNI3087008904 = {kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null};
NTI3087008904.node = NNI3087008904;
NTI3003122000.base = NTI2181038083;
NTI3003121681.base = NTI3003121684;
var NNI3003121678 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003121681, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003121678.node = NNI3003121678;
var NNI3003121668 = {kind: 1, offset: "queries", len: 0, typ: NTI3003121678, name: "queries", sons: null};
NTI3003121668.node = NNI3003121668;
var NNI3003122012 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898908, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122000, name: "Field2", sons: null}]};
NTI3003122012.node = NNI3003122012;
var NNI3003122029 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null}]};
NTI3003122029.node = NNI3003122029;
var NNI3003122085 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI3003122085.node = NNI3003122085;
NTI3003122033.base = NTI3003122036;
var NNI3003122036 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122033, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122033, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122029, name: "value", sons: null}]};
NTI3003122036.node = NNI3003122036;
NTI3003122057.base = NTI3003122036;
var NNI3003122065 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122057, name: "Field2", sons: null}]};
NTI3003122065.node = NNI3003122065;
NTI3087008199.base = NTI33554439;
NTI3019899213.base = NTI33554439;
NTI3087008193.base = NTI33554439;
NTI3087007767.base = NTI3087007751;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI3087007766 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI3087007767, name: "arguments", sons: null}, 
{kind: 1, offset: "maxLoopIterations", len: 0, typ: NTI1191183280, name: "maxLoopIterations", sons: null}]};
NTI3087007766.node = NNI3087007766;
NTI3087007765.base = NTI3087007766;
var NNI3003121927 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007765, name: "val", sons: null}]};
NTI3003121927.node = NNI3003121927;
var NNI3003121782 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}]};
NTI3003121782.node = NNI3003121782;
NTI3003121931.base = NTI3003121934;
var NNI3003121934 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121931, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121931, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121927, name: "value", sons: null}]};
NTI3003121934.node = NNI3003121934;
NTI3003121955.base = NTI3003121934;
var NNI3003121963 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121955, name: "Field2", sons: null}]};
NTI3003121963.node = NNI3003121963;
NTI3003185988.base = NTI3087007751;
var NNI3003166612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3003166612.node = NNI3003166612;
var NNI3003122104 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}]};
NTI3003122104.node = NNI3003122104;
NTI3003122108.base = NTI3003122111;
var NNI3003122111 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122108, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122108, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122104, name: "value", sons: null}]};
NTI3003122111.node = NNI3003122111;
NTI3003122132.base = NTI3003122111;
var NNI3003122140 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122132, name: "Field2", sons: null}]};
NTI3003122140.node = NNI3003122140;
NTI2013268507.base = NTI33554439;
NTI3087008383.base = NTI33554439;
var NNI3003121863 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007754, name: "val", sons: null}]};
NTI3003121863.node = NNI3003121863;
NTI3003121867.base = NTI3003121870;
var NNI3003121870 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121867, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121867, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121863, name: "value", sons: null}]};
NTI3003121870.node = NNI3003121870;
NTI3003121891.base = NTI3003121870;
var NNI3003121899 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121891, name: "Field2", sons: null}]};
NTI3003121899.node = NNI3003121899;
var NNI3003122175 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087008904, name: "val", sons: null}]};
NTI3003122175.node = NNI3003122175;
NTI3003122179.base = NTI3003122182;
var NNI3003122182 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122179, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122179, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122175, name: "value", sons: null}]};
NTI3003122182.node = NNI3003122182;
NTI3003122203.base = NTI3003122182;
var NNI3003122211 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122203, name: "Field2", sons: null}]};
NTI3003122211.node = NNI3003122211;
NTI3087008653.base = NTI33554439;
var NNI3087008718 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007754, name: "Field2", sons: null}]};
NTI3087008718.node = NNI3087008718;
NTI3087008715.base = NTI3087008718;
var NNI3087008712 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087008715, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087008712.node = NNI3087008712;
var NNI2986344567 = {kind: 1, offset: "val", len: 0, typ: NTI2986344452, name: "val", sons: null};
NTI2986344567.node = NNI2986344567;
var NNI3087008730 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3087008730.node = NNI3087008730;
var NNI3003186895 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3003186895.node = NNI3003186895;
NTI3087008709.base = NTI3087008712;
var NNI3003122248 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2986344452, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087008709, name: "val", sons: null}]};
NTI3003122248.node = NNI3003122248;
NTI3003122252.base = NTI3003122255;
var NNI3003122255 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122252, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122252, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122248, name: "value", sons: null}]};
NTI3003122255.node = NNI3003122255;
NTI3003122276.base = NTI3003122255;
var NNI3003122284 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122276, name: "Field2", sons: null}]};
NTI3003122284.node = NNI3003122284;
var NNI3003122314 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007754, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007748, name: "val", sons: null}]};
NTI3003122314.node = NNI3003122314;
var NNI3003122370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3003122370.node = NNI3003122370;
NTI3003122318.base = NTI3003122321;
var NNI3003122321 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122318, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122318, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122314, name: "value", sons: null}]};
NTI3003122321.node = NNI3003122321;
NTI3003122342.base = NTI3003122321;
var NNI3003122350 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122342, name: "Field2", sons: null}]};
NTI3003122350.node = NNI3003122350;
var NNI3003122389 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007754, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}]};
NTI3003122389.node = NNI3003122389;
NTI3003122393.base = NTI3003122396;
var NNI3003122396 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122393, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122393, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122389, name: "value", sons: null}]};
NTI3003122396.node = NNI3003122396;
NTI3003122417.base = NTI3003122396;
var NNI3003122425 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122417, name: "Field2", sons: null}]};
NTI3003122425.node = NNI3003122425;
NTI3137340402.base = NTI3087007751;
var NNI3003122455 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007765, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007751, name: "val", sons: null}]};
NTI3003122455.node = NNI3003122455;
var NNI3003122511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007765, name: "Field1", sons: null}]};
NTI3003122511.node = NNI3003122511;
NTI3003122459.base = NTI3003122462;
var NNI3003122462 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122459, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122459, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122455, name: "value", sons: null}]};
NTI3003122462.node = NNI3003122462;
NTI3003122483.base = NTI3003122462;
var NNI3003122491 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007765, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122483, name: "Field2", sons: null}]};
NTI3003122491.node = NNI3003122491;
NTI3003146250.base = NTI33554439;
var NNI3087007771 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3087007771, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3087007771, name: "Vertical", len: 0, sons: null}}};
NTI3087007771.node = NNI3087007771;
var NNI2080374789 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2080374789.node = NNI2080374789;
NTI3087007779.base = NTI3087007773;
NTI3087007780.base = NTI33554449;
var NNI2483027971 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2483027971, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2483027971, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2483027971, name: "Bold", len: 0, sons: null}}};
NTI2483027971.node = NNI2483027971;
NTI3087007783.base = NTI2483027971;
var NNI3087007788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007783, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007788.node = NNI3087007788;
NTI3087007798.base = NTI33554449;
var NNI3087007803 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3087007798, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3087007803.node = NNI3087007803;
var NNI3087007778 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3087007771, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2080374789, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3087007843, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3087007779, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3087007780, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3087007788, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3087007803, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI3087007778.node = NNI3087007778;
NTI3087007773.base = NTI3087007778;
var NNI3087007774 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3087007773, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3087007774.node = NNI3087007774;
var NNI3087007824 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007774, name: "Field2", sons: null}]};
NTI3087007824.node = NNI3087007824;
NTI3087007821.base = NTI3087007824;
var NNI3087007818 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007821, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007818.node = NNI3087007818;
var NNI3087007775 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3087007773, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3087007818, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}]};
NTI3087007775.node = NNI3087007775;
var NNI2097152288 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}]};
NTI2097152288.node = NNI2097152288;
NTI3087008997.base = NTI3087007773;
NTI3120562359.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3120563270.base = NTI33554449;
NTI3120563334.base = NTI2483027971;
NTI3120563236.base = NTI33554449;
var NNI3120563706 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3120563236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3120563706.node = NNI3120563706;
var NNI3120563809 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3120563236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007788, name: "Field1", sons: null}]};
NTI3120563809.node = NNI3120563809;
NTI3120562388.base = NTI33554449;
var NNI3087007840 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3087007773, name: "Field2", sons: null}]};
NTI3087007840.node = NNI3087007840;
NTI3087007837.base = NTI3087007840;
var NNI3087007834 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3087007837, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3087007834.node = NNI3087007834;
var NNI3087007826 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2181038083, name: "selectedNode", sons: null}, 
{kind: 1, offset: "replacements", len: 0, typ: NTI3087007834, name: "replacements", sons: null}, 
{kind: 1, offset: "measureText", len: 0, typ: NTI3087007842, name: "measureText", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "renderDivisionVertically", len: 0, typ: NTI33554466, name: "renderDivisionVertically", sons: null}]};
NTI3087007826.node = NNI3087007826;
NTI3087007776.base = NTI3087007826;
var NNI3003122530 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3087007776, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007775, name: "val", sons: null}]};
NTI3003122530.node = NNI3003122530;
var NNI3003122586 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007776, name: "Field1", sons: null}]};
NTI3003122586.node = NNI3003122586;
NTI3003122534.base = NTI3003122537;
var NNI3003122537 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003122534, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003122534, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003122530, name: "value", sons: null}]};
NTI3003122537.node = NNI3003122537;
NTI3003122558.base = NTI3003122537;
var NNI3003122566 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007776, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003122558, name: "Field2", sons: null}]};
NTI3003122566.node = NNI3003122566;
NTI3003150847.base = NTI33554439;
var NNI3003121995 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121668, name: "Field2", sons: null}]};
NTI3003121995.node = NNI3003121995;
NTI3003121992.base = NTI3003121995;
var NNI3003121989 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003121992, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003121989.node = NNI3003121989;
NTI3003122009.base = NTI3003122012;
var NNI3003122006 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3003122009, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3003122006.node = NNI3003122006;
var NNI2365587459 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2365587459.node = NNI2365587459;
NTI2952792127.base = NTI2986344452;
var NNI3003121799 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3087007776, name: "val", sons: null}]};
NTI3003121799.node = NNI3003121799;
NTI3003121803.base = NTI3003121806;
var NNI3003121806 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121803, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121803, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121799, name: "value", sons: null}]};
NTI3003121806.node = NNI3003121806;
NTI3003121827.base = NTI3003121806;
var NNI3003121835 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121827, name: "Field2", sons: null}]};
NTI3003121835.node = NNI3003121835;
var NNI2952791546 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007775, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2097152288, name: "Field1", sons: null}]};
NTI2952791546.node = NNI2952791546;
var NNI2952791367 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2952791367, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952791367, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2952791367, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2952791367, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2952791367, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2952791367.node = NNI2952791367;
var NNI2952791370 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2952791367, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2986344452, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2986344452, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2952791370.node = NNI2952791370;
NTI2952791368.base = NTI2952791370;
NTI2952794769.base = NTI2952791368;
var NNI2952791517 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344452, name: "Field2", sons: null}]};
NTI2952791517.node = NNI2952791517;
var NNI3003121726 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3019898905, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2986344452, name: "val", sons: null}]};
NTI3003121726.node = NNI3003121726;
NTI3003121730.base = NTI3003121733;
var NNI3003121733 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121730, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121730, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121726, name: "value", sons: null}]};
NTI3003121733.node = NNI3003121733;
NTI3003121754.base = NTI3003121733;
var NNI3003121762 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3019898905, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121754, name: "Field2", sons: null}]};
NTI3003121762.node = NNI3003121762;
var NNI2986345785 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI2986345785.node = NNI2986345785;
NTI2818572428.base = NTI33554449;
var NNI2952791523 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2952791523, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2952791523, name: "AstCompletion", len: 0, sons: null}}};
NTI2952791523.node = NNI2952791523;
var NNI2952791524 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2952791523, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI2986344451, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2952791524.node = NNI2952791524;
NTI3170893842.base = NTI2952791524;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2952794161.base = NTI2952791524;
var NNI2952795063 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2952795063.node = NNI2952795063;
var NNI2952795068 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952795063, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2952795068.node = NNI2952795068;
var NNI2818572441 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572442, name: "Field1", sons: null}]};
NTI2818572441.node = NNI2818572441;
NTI2818572440.base = NTI2818572441;
var NNI2818572434 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572440, name: "handlers", sons: null};
NTI2818572434.node = NNI2818572434;
var NNI2818572458 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572459, name: "Field1", sons: null}]};
NTI2818572458.node = NNI2818572458;
NTI2818572457.base = NTI2818572458;
var NNI2818572451 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572457, name: "handlers", sons: null};
NTI2818572451.node = NNI2818572451;
var NNI2818572475 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2818572476, name: "Field1", sons: null}]};
NTI2818572475.node = NNI2818572475;
NTI2818572474.base = NTI2818572475;
var NNI2818572468 = {kind: 1, offset: "handlers", len: 0, typ: NTI2818572474, name: "handlers", sons: null};
NTI2818572468.node = NNI2818572468;
NTI2818572479.base = NTI2818572292;
NTI2818572480.base = NTI2818572292;
var NNI2885681158 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681158.node = NNI2885681158;
NTI2885681158.base = NTI33555171;
NTI2885681157.base = NTI2885681158;
var NNI2885681156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681156.node = NNI2885681156;
NTI2885681155.base = NTI2885681156;
var NNI2885681162 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681162.node = NNI2885681162;
NTI2885681162.base = NTI33555171;
NTI2885681161.base = NTI2885681162;
var NNI2885681160 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681160.node = NNI2885681160;
NTI2885681160.base = NTI33555171;
NTI2885681159.base = NTI2885681160;
var NNI2818572422 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2080374789, name: "bounds", sons: null}]};
NTI2818572422.node = NNI2818572422;
NTI2818572425.base = NTI2818572422;
var NNI2818572424 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2818572425, name: "parts", sons: null}]};
NTI2818572424.node = NNI2818572424;
NTI2818572423.base = NTI2818572424;
var NNI2818572507 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2818572423, name: "Field2", sons: null}]};
NTI2818572507.node = NNI2818572507;
NTI2818572504.base = NTI2818572507;
var NNI2818572501 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572504, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572501.node = NNI2818572501;
var NNI2818572427 = {kind: 2, len: 17, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2818572428, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2818572434, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2818572451, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2818572468, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2818572479, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2818572480, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2885681157, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2885681155, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2885681161, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2885681159, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2818572486, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}, 
{kind: 1, offset: "styledTextCache", len: 0, typ: NTI2818572501, name: "styledTextCache", sons: null}]};
NTI2818572427.node = NNI2818572427;
var NNI2130706436 = {kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null};
NTI2130706436.node = NNI2130706436;
NTI2130706436.base = NTI33555171;
NTI2818572427.base = NTI2130706436;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2231369745 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2231369745, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2231369745, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2231369745, name: "browser", len: 0, sons: null}}};
NTI2231369745.node = NNI2231369745;
var NNI2315255826 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255827, name: "Field1", sons: null}]};
NTI2315255826.node = NNI2315255826;
NTI2315255825.base = NTI2315255826;
var NNI2315255819 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255825, name: "handlers", sons: null};
NTI2315255819.node = NNI2315255819;
var NNI2315255851 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255852, name: "Field1", sons: null}]};
NTI2315255851.node = NNI2315255851;
NTI2315255850.base = NTI2315255851;
var NNI2315255844 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255850, name: "handlers", sons: null};
NTI2315255844.node = NNI2315255844;
var NNI2315255873 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255874, name: "Field1", sons: null}]};
NTI2315255873.node = NNI2315255873;
NTI2315255872.base = NTI2315255873;
var NNI2315255866 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255872, name: "handlers", sons: null};
NTI2315255866.node = NNI2315255866;
var NNI2315255890 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255891, name: "Field1", sons: null}]};
NTI2315255890.node = NNI2315255890;
NTI2315255889.base = NTI2315255890;
var NNI2315255883 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255889, name: "handlers", sons: null};
NTI2315255883.node = NNI2315255883;
var NNI2147483665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483666, name: "Field1", sons: null}]};
NTI2147483665.node = NNI2147483665;
NTI2147483664.base = NTI2147483665;
var NNI2147483658 = {kind: 1, offset: "handlers", len: 0, typ: NTI2147483664, name: "handlers", sons: null};
NTI2147483658.node = NNI2147483658;
var NNI2315255910 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255911, name: "Field1", sons: null}]};
NTI2315255910.node = NNI2315255910;
NTI2315255909.base = NTI2315255910;
var NNI2315255903 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255909, name: "handlers", sons: null};
NTI2315255903.node = NNI2315255903;
var NNI2332033033 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2332033045, name: "getTextBounds", sons: null};
NTI2332033033.node = NNI2332033033;
var NNI2315255812 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2315255819, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2315255819, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2315255819, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2315255844, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2315255844, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2315255866, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2315255883, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2147483658, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "onDropFile", len: 0, typ: NTI2315255903, name: "onDropFile", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2332033033, name: "layoutOptions", sons: null}]};
NTI2315255812.node = NNI2315255812;
NTI2315255812.base = NTI33555171;
NTI2315255811.base = NTI2315255812;
var NNI2332033035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2097152288, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2097152288, name: "Field1", sons: null}]};
NTI2332033035.node = NNI2332033035;
var NNI2332033034 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2332033035, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2097152288, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2365587459, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2365587459, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2080374789, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2332033034.node = NNI2332033034;
NTI2332033034.base = NTI33555171;
NTI2332033027.base = NTI2332033034;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2046820358 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2046820358.node = NNI2046820358;
NTI2046820357.base = NTI2046820358;
var NNI1291845681 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2046820357, name: "Field2", sons: null}]};
NTI1291845681.node = NNI1291845681;
NTI1291845678.base = NTI1291845681;
var NNI1291845675 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845678, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845675.node = NNI1291845675;
var NNI1291845696 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845696.node = NNI1291845696;
NTI1291845693.base = NTI1291845696;
var NNI1291845690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845693, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845690.node = NNI1291845690;
NTI1174405131.base = NTI1174405133;
var NNI2667577352 = {kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null};
NTI2667577352.node = NNI2667577352;
NTI2667577352.base = NTI33555171;
NTI2667577348.base = NTI2667577352;
NTI2667577351.base = NTI2667577348;
var NNI2667577350 = {kind: 1, offset: "folders", len: 0, typ: NTI2667577351, name: "folders", sons: null};
NTI2667577350.node = NNI2667577350;
NTI2667577347.base = NTI2667577350;
var NNI2650800132 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2650800132.node = NNI2650800132;
NTI2650800132.base = NTI33555171;
NTI2650800131.base = NTI2650800132;
NTI2130706435.base = NTI2130706436;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2046820365 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2046820357, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2046820366, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2046820367, name: "handleInput", sons: null}]};
NTI2046820365.node = NNI2046820365;
NTI2046820364.base = NTI2046820365;
var NNI2147483652 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2231369731, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2147483658, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2147483652.node = NNI2147483652;
NTI2147483652.base = NTI33555171;
NTI2147483651.base = NTI2147483652;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2130706435, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2147483651, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845698.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2483028006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2365587459, name: "Field2", sons: null}]};
NTI2483028006.node = NNI2483028006;
NTI2483028003.base = NTI2483028006;
var NNI2483028000 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2483028003, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2483028000.node = NNI2483028000;
var NNI2483027980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2365587459, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2483027980.node = NNI2483027980;
NTI2483027991.base = NTI2483027971;
var NNI2483027972 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2483027980, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2483027980, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2483027991, name: "fontStyle", sons: null}]};
NTI2483027972.node = NNI2483027972;
var NNI2483028021 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2483027972, name: "Field2", sons: null}]};
NTI2483028021.node = NNI2483028021;
NTI2483028018.base = NTI2483028021;
var NNI2483028015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2483028018, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2483028015.node = NNI2483028015;
var NNI2483027992 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2483028000, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2483028015, name: "tokenColors", sons: null}]};
NTI2483027992.node = NNI2483027992;
NTI2483027973.base = NTI2483027992;
var NNI1291845712 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369731, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2147483651, name: "Field2", sons: null}]};
NTI1291845712.node = NNI1291845712;
NTI1291845709.base = NTI1291845712;
var NNI1291845706 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845709, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845706.node = NNI1291845706;
var NNI2264924164 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2231369731, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2147483658, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI33555171;
NTI2264924163.base = NTI2264924164;
NTI1291845714.base = NTI2264924163;
var NNI1291845727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845728, name: "Field1", sons: null}]};
NTI1291845727.node = NNI1291845727;
NTI1291845726.base = NTI1291845727;
var NNI1291845720 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845726, name: "handlers", sons: null};
NTI1291845720.node = NNI1291845720;
NTI1291845734.base = NTI2147483651;
var NNI1291845666 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2231369745, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2315255811, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI2281701407, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI2281701407, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI2281701407, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2332033027, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845675, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845690, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2667577347, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2650800131, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845698, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2483027973, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845706, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845714, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845720, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845720, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2147483651, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2046820364, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845734, name: "editor_defaults", sons: null}]};
NTI1291845666.node = NNI1291845666;
NTI1291845665.base = NTI1291845666;
NTI2818572426.base = NTI2818572427;
NTI2818572518.base = NTI2231369747;
var NNI2818572516 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572518, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2818572516.node = NNI2818572516;
NTI2818572544.base = NTI2818572547;
var NNI2818572541 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2818572544, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2818572541.node = NNI2818572541;
var NNI2231369743 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2231369743, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2231369743, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2231369743, name: "relative", len: 0, sons: null}}};
NTI2231369743.node = NNI2231369743;
var NNI2818572554 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2231369743, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818572554.node = NNI2818572554;
NTI2818572562.base = NTI2818572423;
NTI2818572563.base = NTI2919235630;
var NNI2818572565 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2818572565.node = NNI2818572565;
NTI2818572564.base = NTI2818572565;
var NNI2818572510 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2818572426, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2231369747, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2818572516, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2818572524, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2818572541, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2046820364, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2818572554, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2818572562, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2818572563, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2818572564, name: "lastItems", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}]};
NTI2818572510.node = NNI2818572510;
NTI2818572510.base = NTI2147483652;
var NNI2986344588 = {kind: 1, offset: "val", len: 0, typ: NTI2986344452, name: "val", sons: null};
NTI2986344588.node = NNI2986344588;
var NNI2952792468 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI2952792468.node = NNI2952792468;
NTI2818572509.base = NTI2818572510;
NTI2952791514.base = NTI2952791517;
var NNI2952791511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952791514, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2952791511.node = NNI2952791511;
NTI2952791519.base = NTI2952791522;
NTI2952791520.base = NTI2952791368;
NTI2952791521.base = NTI2952791368;
var NNI2952791498 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3087008712, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI2986344452, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2952791511, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2952791519, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2952791520, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2952791521, name: "redoOps", sons: null}]};
NTI2952791498.node = NNI2952791498;
NTI2952791498.base = NTI2130706436;
NTI2952791497.base = NTI2952791498;
NTI3170893829.base = NTI2952791524;
var NNI3170893832 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI3170893832.node = NNI3170893832;
NTI3170893831.base = NTI3170893832;
var NNI3170893828 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2952791497, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3170893829, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3170893830, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3170893831, name: "lastItems", sons: null}]};
NTI3170893828.node = NNI3170893828;
NTI3170893828.base = NTI2264924164;
NTI1979711564.base = NTI33554449;
NTI3170893834.base = NTI2952791524;
var NNI2365587460 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2365587460.node = NNI2365587460;
var NNI3087007967 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI3087007967.node = NNI3087007967;
var NNI3087007896 = {kind: 1, offset: "val", len: 0, typ: NTI3087007773, name: "val", sons: null};
NTI3087007896.node = NNI3087007896;
var NNI2952800745 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007773, name: "Field1", sons: null}]};
NTI2952800745.node = NNI2952800745;
var NNI3003152662 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2986344452, name: "Field1", sons: null}]};
NTI3003152662.node = NNI3003152662;
var NNI3003152715 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007776, name: "Field1", sons: null}]};
NTI3003152715.node = NNI3003152715;
var NNI3003152768 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007754, name: "Field1", sons: null}]};
NTI3003152768.node = NNI3003152768;
var NNI3003152821 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3019898905, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007765, name: "Field1", sons: null}]};
NTI3003152821.node = NNI3003152821;
var NNI3003152874 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007748, name: "Field1", sons: null}]};
NTI3003152874.node = NNI3003152874;
var NNI3003152921 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007751, name: "Field1", sons: null}]};
NTI3003152921.node = NNI3003152921;
var NNI3003152968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087008904, name: "Field1", sons: null}]};
NTI3003152968.node = NNI3003152968;
var NNI3003153062 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2986344452, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087008709, name: "Field1", sons: null}]};
NTI3003153062.node = NNI3003153062;
var NNI3003153195 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007754, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007748, name: "Field1", sons: null}]};
NTI3003153195.node = NNI3003153195;
var NNI3003153242 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007754, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007751, name: "Field1", sons: null}]};
NTI3003153242.node = NNI3003153242;
var NNI3003153289 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007765, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007751, name: "Field1", sons: null}]};
NTI3003153289.node = NNI3003153289;
var NNI3003153336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3087007776, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3087007775, name: "Field1", sons: null}]};
NTI3003153336.node = NNI3003153336;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
NTI2667577353.base = NTI33554449;
NTI2667577354.base = NTI33554449;
var NNI2667577349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2667577353, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2667577354, name: "folders", sons: null}]};
NTI2667577349.node = NNI2667577349;
var NNI2701131794 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2667577349, name: "Field2", sons: null}]};
NTI2701131794.node = NNI2701131794;
NTI2701131791.base = NTI2701131794;
var NNI2701131788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2701131791, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2701131788.node = NNI2701131788;
var NNI2701131780 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2701131788, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2701131780.node = NNI2701131780;
NTI2701131780.base = NTI2667577352;
var NNI2785017860 = {kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null};
NTI2785017860.node = NNI2785017860;
NTI2785017860.base = NTI2667577352;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2046821074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2046821074.node = NNI2046821074;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI3221225480 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3221225480.node = NNI3221225480;
NTI3221225480.base = NTI33555171;
NTI3221225475.base = NTI3221225480;
NTI3221225495.base = NTI3221225475;
var NNI3221225500 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI3221225500.node = NNI3221225500;
NTI3221225499.base = NTI3221225500;
var NNI3221225494 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3221225495, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3221225496, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3221225497, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3221225498, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3221225501, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3221225503, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "getCompletionsAsyncIter", len: 0, typ: NTI3221225506, name: "getCompletionsAsyncIter", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3221225499, name: "lastItems", sons: null}]};
NTI3221225494.node = NNI3221225494;
NTI3221225494.base = NTI2264924164;
NTI3221225512.base = NTI3221225475;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
NTI3221225479.base = NTI3221225494;
var NNI3221225686 = {kind: 1, offset: "val", len: 0, typ: NTI3221225479, name: "val", sons: null};
NTI3221225686.node = NNI3221225686;
var NNI1291848455 = {kind: 1, offset: "val", len: 0, typ: NTI2264924163, name: "val", sons: null};
NTI1291848455.node = NNI1291848455;
var NNI2818584054 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2818584054.node = NNI2818584054;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848510 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848510.node = NNI1291848510;
NTI1291848510.base = NTI3221225480;
var NNI1291848518 = {kind: 1, offset: "val", len: 0, typ: NTI2667577348, name: "val", sons: null};
NTI1291848518.node = NNI1291848518;
var NNI1291848512 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI1291848518, name: "workspaceFolder", sons: null}]};
NTI1291848512.node = NNI1291848512;
NTI1291848512.base = NTI3221225480;
NTI1291853660.base = NTI2231369731;
var NNI1291848323 = {kind: 1, offset: "val", len: 0, typ: NTI2147483651, name: "val", sons: null};
NTI1291848323.node = NNI1291848323;
NTI2952791535.base = NTI2986344452;
var NNI2952791533 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2952791535, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2952791533.node = NNI2952791533;
NTI2952791542.base = NTI2952791524;
var NNI2952791544 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2952791544.node = NNI2952791544;
NTI2952791543.base = NTI2952791544;
NTI2952791545.base = NTI2952791546;
var NNI2952791547 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791547.node = NNI2952791547;
var NNI2952791548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791548.node = NNI2952791548;
var NNI2952791549 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791549.node = NNI2952791549;
var NNI2952791550 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2952791550.node = NNI2952791550;
var NNI2952791527 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2952791497, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2986344452, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2952791533, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2952791533, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI2986344567, name: "deletedNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2181038083, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI2986344452, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2818572509, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2818572426, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2046820364, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2952791542, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2952791543, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2952791545, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2952791547, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2952791548, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2952791549, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2952791550, name: "lastCommand", sons: null}]};
NTI2952791527.node = NNI2952791527;
NTI2952791527.base = NTI2147483652;
var NNI1291854983 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291854983.node = NNI1291854983;
var NNI1291854984 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291854984.node = NNI1291854984;
var NNI1291854982 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291854983, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291854984, name: "Field1", sons: null}]};
NTI1291854982.node = NNI1291854982;
NTI1291854990.base = NTI1291854982;
NTI1291854977.base = NTI2231369739;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3305111564.base = NTI2080374789;
var NNI3305111577 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3305111578, name: "Field1", sons: null}]};
NTI3305111577.node = NNI3305111577;
NTI3305111576.base = NTI3305111577;
var NNI3305111570 = {kind: 1, offset: "handlers", len: 0, typ: NTI3305111576, name: "handlers", sons: null};
NTI3305111570.node = NNI3305111570;
var NNI3305111594 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3305111594.node = NNI3305111594;
var NNI3305111601 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3305111598, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3305111598, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3305111594, name: "value", sons: null}]};
NTI3305111601.node = NNI3305111601;
NTI3305111598.base = NTI3305111601;
var NNI3305111612 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3305111598, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3305111598, name: "tail", sons: null}]};
NTI3305111612.node = NNI3305111612;
NTI3305111622.base = NTI3305111601;
var NNI3305111630 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3305111622, name: "Field2", sons: null}]};
NTI3305111630.node = NNI3305111630;
NTI3305111627.base = NTI3305111630;
var NNI3305111639 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3305111627, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3305111639.node = NNI3305111639;
var NNI3305111650 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3305111650.node = NNI3305111650;
NTI3305111647.base = NTI3305111650;
var NNI3305111644 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3305111647, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3305111644.node = NNI3305111644;
var NNI3305111589 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3305111612, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3305111639, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI3305111644, name: "removedKeys", sons: null}]};
NTI3305111589.node = NNI3305111589;
NTI3305111588.base = NTI3305111589;
NTI3305111653.base = NTI3305111654;
var NNI3305111563 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3305111564, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3305111570, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3305111588, name: "escapedText", sons: null}, 
{kind: 1, offset: "domUpdates", len: 0, typ: NTI3305111653, name: "domUpdates", sons: null}]};
NTI3305111563.node = NNI3305111563;
NTI3305111563.base = NTI2315255812;
NTI2248146958.base = NTI2046820364;
NTI1291849428.base = NTI2147483652;
NTI1291849434.base = NTI1291849428;
var NNI2365587477 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587477.node = NNI2365587477;
NTI2365587477.base = NTI134217746;
var NNI2348810397 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2348810397.node = NNI2348810397;
var NNI1291850224 = {kind: 1, offset: "val", len: 0, typ: NTI1291845665, name: "val", sons: null};
NTI1291850224.node = NNI1291850224;
NTI1627390088.base = NTI1627389956;
var NNI1291845662 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}, 
{kind: 1, offset: "appFile", len: 0, typ: NTI33554466, name: "appFile", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845664.base = NTI1291845662;
var NNI1291845663 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845664, name: "openEditors", sons: null}]};
NTI1291845663.node = NNI1291845663;
var NNI2801795076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2801795076.node = NNI2801795076;
NTI2801795076.base = NTI2650800132;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2483028483.base = NTI2483027971;
var NNI2483029956 = {kind: 1, offset: "val", len: 0, typ: NTI2483027973, name: "val", sons: null};
NTI2483029956.node = NNI2483029956;
NTI2332033039.base = NTI2332033027;
var NNI2332033038 = {kind: 1, offset: "children", len: 0, typ: NTI2332033039, name: "children", sons: null};
NTI2332033038.node = NNI2332033038;
NTI2332033038.base = NTI2332033034;
NTI2332033037.base = NTI2332033027;
var NNI2332033036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2332033037, name: "children", sons: null}]};
NTI2332033036.node = NNI2332033036;
NTI2332033036.base = NTI2332033034;
NTI2332033041.base = NTI2332033027;
var NNI2332033040 = {kind: 1, offset: "children", len: 0, typ: NTI2332033041, name: "children", sons: null};
NTI2332033040.node = NNI2332033040;
NTI2332033040.base = NTI2332033034;
NTI2332033043.base = NTI2332033027;
var NNI2332033042 = {kind: 1, offset: "children", len: 0, typ: NTI2332033043, name: "children", sons: null};
NTI2332033042.node = NNI2332033042;
NTI2332033042.base = NTI2332033034;
var NNI2332033044 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2483027972, name: "style", sons: null}]};
NTI2332033044.node = NNI2332033044;
NTI2332033044.base = NTI2332033034;
var NNI2818578071 = {kind: 1, offset: "val", len: 0, typ: NTI2818572509, name: "val", sons: null};
NTI2818578071.node = NNI2818578071;
NTI2952791526.base = NTI2952791527;
var NNI2952796958 = {kind: 1, offset: "val", len: 0, typ: NTI2952791526, name: "val", sons: null};
NTI2952796958.node = NNI2952796958;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
var NNI3019898950 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3019898936, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3019898936, name: "tail", sons: null}]};
NTI3019898950.node = NNI3019898950;
var NNI3019899029 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3019899015, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3019899015, name: "tail", sons: null}]};
NTI3019899029.node = NNI3019899029;
var NNI3019899096 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3019899082, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3019899082, name: "tail", sons: null}]};
NTI3019899096.node = NNI3019899096;
var NNI3003121744 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121730, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121730, name: "tail", sons: null}]};
NTI3003121744.node = NNI3003121744;
var NNI3003121881 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121867, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121867, name: "tail", sons: null}]};
NTI3003121881.node = NNI3003121881;
var NNI3003121817 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121803, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121803, name: "tail", sons: null}]};
NTI3003121817.node = NNI3003121817;
var NNI3003121945 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121931, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121931, name: "tail", sons: null}]};
NTI3003121945.node = NNI3003121945;
var NNI3003122047 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122033, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122033, name: "tail", sons: null}]};
NTI3003122047.node = NNI3003122047;
var NNI3003122122 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122108, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122108, name: "tail", sons: null}]};
NTI3003122122.node = NNI3003122122;
var NNI3003122332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122318, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122318, name: "tail", sons: null}]};
NTI3003122332.node = NNI3003122332;
var NNI3003122407 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122393, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122393, name: "tail", sons: null}]};
NTI3003122407.node = NNI3003122407;
var NNI3003122193 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122179, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122179, name: "tail", sons: null}]};
NTI3003122193.node = NNI3003122193;
var NNI3003122266 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122252, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122252, name: "tail", sons: null}]};
NTI3003122266.node = NNI3003122266;
var NNI3003122473 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122459, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122459, name: "tail", sons: null}]};
NTI3003122473.node = NNI3003122473;
var NNI3003122548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003122534, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003122534, name: "tail", sons: null}]};
NTI3003122548.node = NNI3003122548;
NTI2919237549.base = NTI2919235613;
var NNI2919237548 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2919237549, name: "Field1", sons: null}]};
NTI2919237548.node = NNI2919237548;
var NNI2248146948 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2248146948.node = NNI2248146948;
NTI2248146948.base = NTI2147483652;
NTI2147483731.base = NTI2046820364;
var NNI2818584575 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2818584575.node = NNI2818584575;
var NNI2818584500 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2231369737, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2818584500.node = NNI2818584500;
NTI3170894057.base = NTI2046820364;
var NNI3221225617 = {kind: 1, offset: "val", len: 0, typ: NTI3221225475, name: "val", sons: null};
NTI3221225617.node = NNI3221225617;
var NNI3170893968 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2952791524, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3170893968.node = NNI3170893968;
var NNI2332033454 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2080374789, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2332033454.node = NNI2332033454;
var NNI2684354564 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2684354564.node = NNI2684354564;
NTI2684354564.base = NTI2667577352;
NTI1291847196.base = NTI2080374789;
var NNI2063597571 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2063597571, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2063597571, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2063597571, name: "Percent", len: 0, sons: null}}};
NTI2063597571.node = NNI2063597571;
var NNI2063597572 = {kind: 3, offset: "kind", len: 3, typ: NTI2063597571, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2063597572.node = NNI2063597572;
var NNI2063597631 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2080374789, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2063597631.node = NNI2063597631;
NTI1291846985.base = NTI2080374789;
var NNI2365587461 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2365587461.node = NNI2365587461;
var NNI2885681170 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2885681170.node = NNI2885681170;
NTI2885681170.base = NTI33555171;
NTI2885681169.base = NTI2885681170;
NTI2885681249.base = NTI2885681169;
var NNI3271557124 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3271557124.node = NNI3271557124;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}
                      var helper_2197815350 = new Uint32Array([3198944359, 3630892171]);

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
    var names_2986346468 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet58 = setConstr([48, 57]);
var ConstSet59 = setConstr([48, 57]);
var ConstSet60 = setConstr(4);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(5);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(3);
var ConstSet65 = setConstr(5);
var ConstSet66 = setConstr(6);
var ConstSet67 = setConstr(6);
var ConstSet68 = setConstr(4);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(5);
var ConstSet75 = setConstr(4);
var ConstSet76 = setConstr(4);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(6);
var ConstSet85 = setConstr(6);
var ConstSet86 = setConstr(0);
var ConstSet87 = setConstr(1);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(3);
var ConstSet92 = setConstr(3);
var ConstSet93 = setConstr(2);
var ConstSet94 = setConstr(2);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(5);
var ConstSet98 = setConstr(5);
var ConstSet99 = setConstr(6);
var ConstSet100 = setConstr(6);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(1);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(1);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(1);
var ConstSet107 = setConstr(0);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(0);
var ConstSet110 = setConstr(4);
var ConstSet111 = setConstr(4);
var ConstSet112 = setConstr(5);
var ConstSet113 = setConstr(4);
var ConstSet114 = setConstr(4);
var ConstSet115 = setConstr(3);
var ConstSet116 = setConstr(2);
var ConstSet117 = setConstr(5);
var ConstSet118 = setConstr(4);
var ConstSet119 = setConstr(4);
var ConstSet120 = setConstr(5);
var ConstSet121 = setConstr(6);
var ConstSet122 = setConstr(5);
var ConstSet123 = setConstr(5);
var ConstSet124 = setConstr(3);
var ConstSet125 = setConstr(2);
var ConstSet126 = setConstr(5);
var ConstSet127 = setConstr(5);
var ConstSet128 = setConstr(6);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(1);
var ConstSet134 = setConstr(0);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(3);
var ConstSet139 = setConstr(3);
var ConstSet140 = setConstr(4);
var ConstSet141 = setConstr(5);
var ConstSet142 = setConstr(4);
var ConstSet143 = setConstr(10, 9, 7);
var ConstSet144 = setConstr(8);
var ConstSet145 = setConstr(1);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(0);
var ConstSet148 = setConstr(0);
var ConstSet149 = setConstr(0);
var ConstSet150 = setConstr();
var ConstSet151 = setConstr(0);
var ConstSet152 = setConstr(0);
var ConstSet153 = setConstr(0);
var ConstSet154 = setConstr(2);
var ConstSet155 = setConstr(1);
var ConstSet156 = setConstr();
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(3);
var ConstSet161 = setConstr(3);
var ConstSet162 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet163 = setConstr(2);
var ConstSet164 = setConstr(1);
var ConstSet165 = setConstr(1);
var ConstSet166 = setConstr(0);
var ConstSet167 = setConstr(0);
var ConstSet168 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet169 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet170 = setConstr([48, 57]);
var ConstSet171 = setConstr([48, 57]);
var ConstSet172 = setConstr(101, 69);
var ConstSet173 = setConstr([48, 57]);
var ConstSet174 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet168[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet169[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet170[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet171[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet172[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet173[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet174[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet175 = setConstr(0);
var ConstSet176 = setConstr(0);
var ConstSet177 = setConstr(0);
var ConstSet178 = setConstr(0);
var ConstSet179 = setConstr(1);
var ConstSet180 = setConstr(4);
var ConstSet181 = setConstr(4);
var ConstSet182 = setConstr(4);
var ConstSet183 = setConstr(4);
var ConstSet184 = setConstr(1);
var ConstSet185 = setConstr(4);
var ConstSet186 = setConstr(0);
var ConstSet187 = setConstr(13, 10);
var ConstSet188 = setConstr(0);
var ConstSet189 = setConstr(1);
var ConstSet190 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet191 = setConstr(0);
var ConstSet192 = setConstr(46, 44);
var ConstSet193 = setConstr([65, 90]);
var ConstSet194 = setConstr([97, 122]);
var ConstSet195 = setConstr(4);
var ConstSet196 = setConstr(13, 10);
var ConstSet197 = setConstr(6);
var ConstSet198 = setConstr(5);
var ConstSet199 = setConstr(5);
var ConstSet200 = setConstr(6);
var ConstSet201 = setConstr(5);
var ConstSet202 = setConstr(4);
var ConstSet203 = setConstr(4);
var ConstSet204 = setConstr(2);
var ConstSet205 = setConstr(3);
var ConstSet206 = setConstr(1);
var ConstSet207 = setConstr(2);
var ConstSet208 = setConstr(3);
var ConstSet209 = setConstr(1);
var ConstSet210 = setConstr(6);
var ConstSet211 = setConstr(6);
var ConstSet212 = setConstr(6);
var ConstSet213 = setConstr(1);
var ConstSet214 = setConstr(4);
var ConstSet215 = setConstr(4);
var ConstSet216 = setConstr(2);
var ConstSet217 = setConstr(2);
var ConstSet218 = setConstr(3);
var ConstSet219 = setConstr(3);
var ConstSet220 = setConstr(1);
var ConstSet221 = setConstr(1);
var ConstSet222 = setConstr(6);
var ConstSet223 = setConstr(6);
var ConstSet224 = setConstr(5);
var ConstSet225 = setConstr(5);
var ConstSet226 = setConstr(5);
var ConstSet227 = setConstr(5);
var ConstSet228 = setConstr(5);
var ConstSet229 = setConstr(6);
var ConstSet230 = setConstr(5);
var ConstSet231 = setConstr(4);
var ConstSet232 = setConstr(4);
var ConstSet233 = setConstr(4, 0);
var ConstSet234 = setConstr([48, 57]);
var ConstSet235 = setConstr(0, 125);
var ConstSet236 = setConstr([48, 57]);
var ConstSet237 = setConstr([65, 90]);
var ConstSet238 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet239 = setConstr(4, 0);
var ConstSet240 = setConstr(4);
var ConstSet241 = setConstr(6);
var ConstSet242 = setConstr(13, 10);
var ConstSet243 = setConstr([48, 57]);
var ConstSet244 = setConstr([48, 57]);
var ConstSet245 = setConstr(69, 101);
var ConstSet246 = setConstr(43, 45);
var ConstSet247 = setConstr([48, 57]);
var ConstSet248 = setConstr(46, 101, 69);
var ConstSet249 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet250 = setConstr([97, 122], [65, 90], 95);
var ConstSet251 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet252 = setConstr(4);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet253 = setConstr(2);
var ConstSet254 = setConstr(2);
var ConstSet255 = setConstr(2);
var ConstSet256 = setConstr(6);
var ConstSet257 = setConstr(47, 47);
var ConstSet258 = setConstr(47, 47);
var ConstSet259 = setConstr(47, 47);
var ConstSet260 = setConstr(47, 47);
var ConstSet261 = setConstr(47, 47);
var ConstSet262 = setConstr(47, 47);
var ConstSet263 = setConstr(47, 47);
var ConstSet264 = setConstr(47, 47);
var ConstSet265 = setConstr(47, 47);
var ConstSet266 = setConstr(47, 47);
var ConstSet267 = setConstr(47, 47);
var ConstSet268 = setConstr(47, 47);
var ConstSet269 = setConstr(47, 47);
var ConstSet270 = setConstr(2, 3);
var ConstSet271 = setConstr(2);
var ConstSet272 = setConstr(0);
var ConstSet273 = setConstr(1);
var ConstSet274 = setConstr(1);
var ConstSet275 = setConstr();
var ConstSet276 = setConstr();
var ConstSet277 = setConstr();
var ConstSet278 = setConstr();
var ConstSet279 = setConstr();
var ConstSet280 = setConstr(120, 88);
var ConstSet281 = setConstr(0);
    var names_1291853881 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet282 = setConstr(1);
var ConstSet283 = setConstr(1);
var ConstSet284 = setConstr(1);
var ConstSet285 = setConstr(4);
var ConstSet286 = setConstr(4);
var ConstSet287 = setConstr(2, 3);
var ConstSet288 = setConstr(2, 3);
var ConstSet289 = setConstr(3);
var ConstSet290 = setConstr(2);
var ConstSet291 = setConstr(6);
var ConstSet292 = setConstr(4);
var ConstSet293 = setConstr(4);
var ConstSet294 = setConstr(2, 3);
var ConstSet295 = setConstr(2, 3);
var ConstSet296 = setConstr(3);
var ConstSet297 = setConstr(2);
var ConstSet298 = setConstr(6);
var ConstSet299 = setConstr(5);
var ConstSet300 = setConstr(4);
var ConstSet301 = setConstr(6);
var ConstSet302 = setConstr(4);
var ConstSet303 = setConstr(6);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr();
var ConstSet306 = setConstr(4);
var ConstSet307 = setConstr(6);
var ConstSet308 = setConstr(2);
var ConstSet309 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet310 = setConstr([65, 90]);
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet311 = setConstr(0);
var ConstSet312 = setConstr(10, 13, 32, 61);
var ConstSet313 = setConstr(10, 13, 32);
          var decodeTable_2734686693 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet314 = setConstr(6);
var ConstSet315 = setConstr(6);
var ConstSet316 = setConstr(6);
var ConstSet317 = setConstr(0);
var ConstSet318 = setConstr(1);
var ConstSet319 = setConstr(2);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2197815309 = [{a0: 1773455756, a1: 4275166512}];

function toUnix_1191183338(t_1191183339) {
  var result_1191183340 = 0;

    result_1191183340 = t_1191183339.seconds;

  return result_1191183340;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2181038241 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2181038241 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2181038241;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2181038241 = addInt(i_2181038241, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function rotl_2197815327(x_2197815328, k_2197815329) {
  var result_2197815330 = 0;

    result_2197815330 = ((x_2197815328 << k_2197815329) | (x_2197815328 >>> ((64 - k_2197815329) >>> 0)));

  return result_2197815330;

}

function next_2197815339(r_2197815340) {
  var result_2197815341 = 0;

    var s0_2197815342 = r_2197815340.a0;
    var s1_2197815343 = r_2197815340.a1;
    result_2197815341 = ((s0_2197815342 + s1_2197815343) >>> 0);
    s1_2197815343 = (s1_2197815343 ^ s0_2197815342);
    r_2197815340.a0 = ((rotl_2197815327(s0_2197815342, 55) ^ s1_2197815343) ^ (s1_2197815343 << 14));
    r_2197815340.a1 = rotl_2197815327(s1_2197815343, 36);

  return result_2197815341;

}

function skipRandomNumbers_2197815348(s_2197815349) {
    var s0_2197815351 = 0;
    var s1_2197815352 = 0;
    Label1: {
      var i_2197815361 = 0;
      var res_2181038247 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2181038247 <= 1)) break Label3;
            i_2197815361 = res_2181038247;
            Label4: {
              var b_2197815366 = 0;
              var i_2181038245 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2181038245 < 64)) break Label6;
                    b_2197815366 = i_2181038245;
                    if (!(((helper_2197815350[chckIndx(i_2197815361, 0, (helper_2197815350).length - 1)] & (1 << b_2197815366)) == 0))) {
                    s0_2197815351 = (s0_2197815351 ^ s_2197815349.a0);
                    s1_2197815352 = (s1_2197815352 ^ s_2197815349.a1);
                    }
                    
                    var _ = next_2197815339(s_2197815349);
                    i_2181038245 = addInt(i_2181038245, 1);
                  }
              };
            };
            res_2181038247 = addInt(res_2181038247, 1);
          }
      };
    };
    s_2197815349.a0 = s0_2197815351;
    s_2197815349.a1 = s1_2197815352;

  
}

function initRand_2197815525(seed_2197815526) {
    var Temporary1;

  var result_2197815527 = [({a0: 0, a1: 0})];

    if (!((seed_2197815526 == 0))) {
    Temporary1 = seed_2197815526;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2197815533 = Temporary1;
    result_2197815527[0].a0 = Math.floor(seed_2197815533 / Math.pow(2, 16));
    result_2197815527[0].a1 = (seed_2197815533 & 65535);
    skipRandomNumbers_2197815348(result_2197815527[0]);
    var _ = next_2197815339(result_2197815527[0]);

  return result_2197815527[0];

}

function rand_2197815400(r_2197815402, max_2197815403) {
  var result_2197815404 = 0;

  BeforeRet: {
    if ((max_2197815403 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2197815405 = max_2197815403;
      if ((max_2197815405 == -1)) {
      result_2197815404 = next_2197815339(r_2197815402);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2197815418 = next_2197815339(r_2197815402);
            if ((x_2197815418 <= ((4294967295 - (4294967295 % max_2197815405)) ))) {
            result_2197815404 = (x_2197815418 % ((max_2197815405 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2197815404;

}

function rand_2197815396(r_2197815397, max_2197815398) {
  var result_2197815399 = 0;

    result_2197815399 = rand_2197815400(r_2197815397, max_2197815398);

  return result_2197815399;

}
var t_2181038225 = toUnix_1191183338(getTime_1191183389());
var seed_2181038226 = [initRand_2197815525(t_2181038225)];
var incr_2181038231 = [rand_2197815396(seed_2181038226[0], 2147483647)];
var fuzz_2181038236 = rand_2197815396(seed_2181038226[0], 2147483647);

function idNone_2181038338() {
  var result_2181038339 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  return result_2181038339;

}
var null_2181038340 = idNone_2181038338();
var nextEditorId_2231370042 = [0];

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}
var cachedAppFiles_2516582422 = [initTable_1795162117(32)];

function new_2499805210() {
  var result_2499805213 = null;

  BeforeRet: {
    var r_2499805215 = null;
    r_2499805215 = ({m_type: NTI2516582404});
    result_2499805213 = r_2499805215;
    break BeforeRet;
  };

  return result_2499805213;

}
var fs_2499805237 = new_2499805210();
var cb64_2734686212 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2734686213 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);
var gEditor = null;
var handleIdCounter_2919235663 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2583691920 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2583691920 < L_855639328)) break Label3;
            i_855639333 = i_2583691920;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2583691920 = addInt(i_2583691920, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2818583535 = 0;
      colontmp__2818583535 = subInt(count_855639134, 1);
      var res_2818583536 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818583536 <= colontmp__2818583535)) break Label3;
            i_855639140 = res_2818583536;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2818583536 = addInt(res_2818583536, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849213(t_1291849216, key_1291849217, hc_1291849218, hc_1291849218_Idx) {
  var result_1291849219 = 0;

  BeforeRet: {
    hc_1291849218[hc_1291849218_Idx] = hash_1325400491(key_1291849217);
    if ((hc_1291849218[hc_1291849218_Idx] == 0)) {
    hc_1291849218[hc_1291849218_Idx] = 314159265;
    }
    
    if (((t_1291849216.data).length == 0)) {
    result_1291849219 = -1;
    break BeforeRet;
    }
    
    var h_1291849271 = (hc_1291849218[hc_1291849218_Idx] & (t_1291849216.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849216.data[chckIndx(h_1291849271, 0, (t_1291849216.data).length - 1)].Field0)) break Label2;
          if (((t_1291849216.data[chckIndx(h_1291849271, 0, (t_1291849216.data).length - 1)].Field0 == hc_1291849218[hc_1291849218_Idx]) && eqStrings(t_1291849216.data[chckIndx(h_1291849271, 0, (t_1291849216.data).length - 1)].Field1, key_1291849217))) {
          result_1291849219 = h_1291849271;
          break BeforeRet;
          }
          
          h_1291849271 = nextTry_1308622883(h_1291849271, (t_1291849216.data).length - 1);
        }
    };
    result_1291849219 = subInt(-1, h_1291849271);
  };

  return result_1291849219;

}

function hasKey_1291849206(t_1291849209, key_1291849210) {
  var result_1291849211 = false;

    var hc_1291849212 = [0];
    result_1291849211 = (0 <= rawGet_1291849213(t_1291849209, key_1291849210, hc_1291849212, 0));

  return result_1291849211;

}

function contains_1291849200(t_1291849203, key_1291849204) {
  var result_1291849205 = false;

  BeforeRet: {
    result_1291849205 = hasKey_1291849206(t_1291849203, key_1291849204);
    break BeforeRet;
  };

  return result_1291849205;

}

function mustRehash_1291849665(t_1291849667) {
  var result_1291849668 = false;

    if (!((t_1291849667.counter < (t_1291849667.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849668 = ((mulInt((t_1291849667.data).length, 2) < mulInt(t_1291849667.counter, 3)) || (subInt((t_1291849667.data).length, t_1291849667.counter) < 4));

  return result_1291849668;

}

function rawInsert_1291850114(t_1291850118, data_1291850119, data_1291850119_Idx, key_1291850120, val_1291850121, hc_1291850122, h_1291850123) {
    data_1291850119[data_1291850119_Idx][chckIndx(h_1291850123, 0, (data_1291850119[data_1291850119_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850120, NTI33554449);
    data_1291850119[data_1291850119_Idx][chckIndx(h_1291850123, 0, (data_1291850119[data_1291850119_Idx]).length - 1)].Field2 = val_1291850121;
    data_1291850119[data_1291850119_Idx][chckIndx(h_1291850123, 0, (data_1291850119[data_1291850119_Idx]).length - 1)].Field0 = hc_1291850122;

  
}

function enlarge_1291849820(t_1291849823) {
    var n_1291849826 = [];
    n_1291849826 = new Array(chckRange(mulInt((t_1291849823.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849823.data).length, 2), 0, 2147483647) ; ++i) { n_1291849826[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849823.data; t_1291849823.data = n_1291849826; n_1291849826 = Temporary1;    Label2: {
      var i_1291849890 = 0;
      var colontmp__2818583544 = 0;
      colontmp__2818583544 = (n_1291849826).length - 1;
      var res_2818583546 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583546 <= colontmp__2818583544)) break Label4;
            i_1291849890 = res_2818583546;
            var eh_1291849944 = n_1291849826[chckIndx(i_1291849890, 0, (n_1291849826).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849944)) {
            var j_1291849948 = (eh_1291849944 & (t_1291849823.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849823.data[chckIndx(j_1291849948, 0, (t_1291849823.data).length - 1)].Field0)) break Label6;
                  j_1291849948 = nextTry_1308622883(j_1291849948, (t_1291849823.data).length - 1);
                }
            };
            rawInsert_1291850114(t_1291849823, t_1291849823, "data", n_1291849826[chckIndx(i_1291849890, 0, (n_1291849826).length - 1)].Field1, n_1291849826[chckIndx(i_1291849890, 0, (n_1291849826).length - 1)].Field2, eh_1291849944, j_1291849948);
            }
            
            res_2818583546 = addInt(res_2818583546, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850283(t_1291850286, key_1291850287, hc_1291850288) {
  var result_1291850289 = 0;

  BeforeRet: {
    if (((t_1291850286.data).length == 0)) {
    result_1291850289 = -1;
    break BeforeRet;
    }
    
    var h_1291850340 = (hc_1291850288 & (t_1291850286.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850286.data[chckIndx(h_1291850340, 0, (t_1291850286.data).length - 1)].Field0)) break Label2;
          if (((t_1291850286.data[chckIndx(h_1291850340, 0, (t_1291850286.data).length - 1)].Field0 == hc_1291850288) && eqStrings(t_1291850286.data[chckIndx(h_1291850340, 0, (t_1291850286.data).length - 1)].Field1, key_1291850287))) {
          result_1291850289 = h_1291850340;
          break BeforeRet;
          }
          
          h_1291850340 = nextTry_1308622883(h_1291850340, (t_1291850286.data).length - 1);
        }
    };
    result_1291850289 = subInt(-1, h_1291850340);
  };

  return result_1291850289;

}

function HEX5BHEX5DHEX3D_1291849492(t_1291849495, key_1291849496, val_1291849497) {
    if (((t_1291849495.data).length == 0)) {
    var correctSizeHEX60gensym38_1291849546 = slotsNeeded_1308622891(32);
    t_1291849495.counter = 0;
    t_1291849495.data = new Array(chckRange(correctSizeHEX60gensym38_1291849546, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym38_1291849546, 0, 2147483647) ; ++i) { t_1291849495.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849551 = [0];
    var index_1291849558 = rawGet_1291849213(t_1291849495, key_1291849496, hc_1291849551, 0);
    if ((0 <= index_1291849558)) {
    t_1291849495.data[chckIndx(index_1291849558, 0, (t_1291849495.data).length - 1)].Field2 = val_1291849497;
    }
    else {
      if (((t_1291849495.data).length == 0)) {
      var correctSizeHEX60gensym41_1291849660 = slotsNeeded_1308622891(32);
      t_1291849495.counter = 0;
      t_1291849495.data = new Array(chckRange(correctSizeHEX60gensym41_1291849660, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_1291849660, 0, 2147483647) ; ++i) { t_1291849495.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849665(t_1291849495)) {
      enlarge_1291849820(t_1291849495);
      index_1291849558 = rawGetKnownHC_1291850283(t_1291849495, key_1291849496, hc_1291849551[0]);
      }
      
      index_1291849558 = subInt(-1, index_1291849558);
      rawInsert_1291850114(t_1291849495, t_1291849495, "data", key_1291849496, val_1291849497, hc_1291849551[0], index_1291849558);
      t_1291849495.counter = addInt(t_1291849495.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2046820391(context_2046820392) {
  var result_2046820393 = null;

    result_2046820393 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2046820393.handleActions = true;
    result_2046820393.handleInputs = false;
    result_2046820393.context = nimCopy(null, context_2046820392, NTI33554449);

  return result_2046820393;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850574(t_1291850577, key_1291850578) {
  var result_1291850579 = null;
  var result_1291850579_Idx = 0;

    var hcHEX60gensym22_1291850580 = [0];
    var indexHEX60gensym22_1291850587 = rawGet_1291849213(t_1291850577, key_1291850578, hcHEX60gensym22_1291850580, 0);
    if ((0 <= indexHEX60gensym22_1291850587)) {
    result_1291850579 = t_1291850577.data[chckIndx(indexHEX60gensym22_1291850587, 0, (t_1291850577.data).length - 1)]; result_1291850579_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850578);
    }
    

  return [result_1291850579, result_1291850579_Idx];

}

function getEventHandlerConfig_1291849154(self_1291849155, context_1291849156) {
    var Temporary1;

  var result_1291849157 = null;

  BeforeRet: {
    if (!(contains_1291849200(self_1291849155.eventHandlerConfigs, context_1291849156))) {
    HEX5BHEX5DHEX3D_1291849492(self_1291849155.eventHandlerConfigs, context_1291849156, newEventHandlerConfig_2046820391(context_1291849156));
    }
    
    result_1291849157 = (Temporary1 = HEX5BHEX5D_1291850574(self_1291849155.eventHandlerConfigs, context_1291849156), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849157;

}

function getModeConfig_2818583167(self_2818583168, mode_2818583169) {
  var result_2818583170 = null;

  BeforeRet: {
    result_2818583170 = getEventHandlerConfig_1291849154(self_2818583168.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2818583169 || []));
    break BeforeRet;
  };

  return result_2818583170;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2818583576 = 0;
      var result_2818583577 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583576 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] <= 127)) {
            result_2818583577 = chckRange(s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2818583576 = addInt(i_2818583576, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2818583576 <= subInt((s_788533333).length, 2))) {
            result_2818583577 = chckRange((((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2818583576, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583576 = addInt(i_2818583576, 2);
            }
            else {
              result_2818583577 = 65533;
              i_2818583576 = addInt(i_2818583576, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2818583576 <= subInt((s_788533333).length, 3))) {
            result_2818583577 = chckRange(((((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2818583576, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583576, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583576 = addInt(i_2818583576, 3);
            }
            else {
              result_2818583577 = 65533;
              i_2818583576 = addInt(i_2818583576, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2818583576 <= subInt((s_788533333).length, 4))) {
            result_2818583577 = chckRange((((((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2818583576, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818583576, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583576, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583576 = addInt(i_2818583576, 4);
            }
            else {
              result_2818583577 = 65533;
              i_2818583576 = addInt(i_2818583576, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2818583576 <= subInt((s_788533333).length, 5))) {
            result_2818583577 = chckRange(((((((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2818583576, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818583576, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818583576, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583576, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583576 = addInt(i_2818583576, 5);
            }
            else {
              result_2818583577 = 65533;
              i_2818583576 = addInt(i_2818583576, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2818583576 <= subInt((s_788533333).length, 6))) {
            result_2818583577 = chckRange((((((((s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2818583576, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2818583576, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2818583576, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2818583576, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2818583576, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2818583576 = addInt(i_2818583576, 6);
            }
            else {
              result_2818583577 = 65533;
              i_2818583576 = addInt(i_2818583576, 1);
            }
            
            }
            else {
              result_2818583577 = chckRange(s_788533333[chckIndx(i_2818583576, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2818583576 = addInt(i_2818583576, 1);
            }
            }}}}}
            r_788533347 = result_2818583577;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2818583583 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583583 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2818583583, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2818583583, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2818583583 = addInt(i_2818583583, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2818583586 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583586 <= 3)) break Label3;
            if ((x_2013267026[i_2818583586] != undefined)) {
            value_2013267035 = i_2818583586;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2818583586 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2818583590 = 0;
      colontmp__2818583590 = (n_2013268694).length - 1;
      var res_2818583591 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583591 <= colontmp__2818583590)) break Label4;
            i_2013268758 = res_2818583591;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2818583591 = addInt(res_2818583591, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2818583596 = 0;
      colontmp__2818583596 = (n_2013267558).length - 1;
      var res_2818583597 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583597 <= colontmp__2818583596)) break Label4;
            i_2013267622 = res_2818583597;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2818583597 = addInt(res_2818583597, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2818583571 = 0;
      colontmp__2818583571 = (input_2013269802).length;
      var i_2818583572 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583572 < colontmp__2818583571)) break Label3;
            i_2013269829 = i_2818583572;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2818583568 = 0;
                  var L_2818583569 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2818583568 < L_2818583569)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2818583568, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2818583568 = addInt(i_2818583568, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2818583569))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2818583572 = addInt(i_2818583572, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2818583562 = 0;
      var L_2818583563 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583562 < L_2818583563)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2818583562, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2818583562 = addInt(i_2818583562, 1);
            if (!(((commands_2013269906).length == L_2818583563))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2046820466(t_2046820469) {
  var result_2046820470 = 0;

    result_2046820470 = t_2046820469.counter;

  return result_2046820470;

}

function buildDFA_2046820415(config_2046820416) {
  var result_2046820417 = null;

  BeforeRet: {
    var resultHEX60gensym2_2046820697 = [];
    Label1: {
      var xHEX60gensym2_2046820698 = {Field0: [], Field1: []};
      var L_2818583554 = len_2046820466(config_2046820416.commands);
      Label2: {
        var h_2818583556 = 0;
        var colontmp__2818583557 = 0;
        colontmp__2818583557 = (config_2046820416.commands.data).length - 1;
        var res_2818583558 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818583558 <= colontmp__2818583557)) break Label4;
              h_2818583556 = res_2818583558;
              if (isFilled_1308622880(config_2046820416.commands.data[chckIndx(h_2818583556, 0, (config_2046820416.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2046820698 = nimCopy(xHEX60gensym2_2046820698, {Field0: nimCopy(null, config_2046820416.commands.data[chckIndx(h_2818583556, 0, (config_2046820416.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2046820416.commands.data[chckIndx(h_2818583556, 0, (config_2046820416.commands.data).length - 1)].Field2, NTI33554449)}, NTI2046820387);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2046820698, NTI2046820387);
              resultHEX60gensym2_2046820697.push(Temporary5);;
              if (!((len_2046820466(config_2046820416.commands) == L_2818583554))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818583558 = addInt(res_2818583558, 1);
            }
        };
      };
    };
    result_2046820417 = buildDFA_2013269905(resultHEX60gensym2_2046820697);
    break BeforeRet;
  };

  return result_2046820417;

}

function invoke_2147483710(event_2147483712) {
    Label1: {
      var h_2147483735 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818583603 = 0;
      var L_2818583604 = (event_2147483712.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583603 < L_2818583604)) break Label3;
            h_2147483735 = event_2147483712.handlers[chckIndx(i_2818583603, 0, (event_2147483712.handlers).length - 1)];
            h_2147483735.Field1();
            i_2818583603 = addInt(i_2818583603, 1);
            if (!(((event_2147483712.handlers).length == L_2818583604))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2147483686(self_2147483687) {
    if (!(self_2147483687.mDirty)) {
    invoke_2147483710(self_2147483687.onMarkedDirty);
    }
    
    self_2147483687.mDirty = true;

  
}

function setMode_2818583356(self_2818583357, mode_2818583358) {
        
function HEX3Aanonymous_2818583384(actionHEX60gensym178HEX60gensym179_2818583385, argHEX60gensym178HEX60gensym179_2818583386) {
          var result_2818583387 = 0;

          BeforeRet: {
            if (handlerHEX60gensym178_2818583372.config.handleActions) {
            var action_2818583388 = nimCopy(null, actionHEX60gensym178HEX60gensym179_2818583385, NTI33554449);
            var arg_2818583389 = nimCopy(null, argHEX60gensym178HEX60gensym179_2818583386, NTI33554449);
            var responseHEX60gensym178HEX60gensym179_2818583390 = handleAction_2818572642(self_2818583357, action_2818583388, arg_2818583389);
            if (handlerHEX60gensym178_2818583372.config.consumeAllActions) {
            result_2818583387 = 3;
            break BeforeRet;
            }
            
            result_2818583387 = responseHEX60gensym178HEX60gensym179_2818583390;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym178_2818583372.config.consumeAllActions) {
            result_2818583387 = 3;
            break BeforeRet;
            }
            else {
              result_2818583387 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2818583387;

        }
        
function HEX3Aanonymous_2818583392(inputHEX60gensym178HEX60gensym180_2818583393) {
          var result_2818583394 = 0;

          BeforeRet: {
            if (handlerHEX60gensym178_2818583372.config.handleInputs) {
            var input_2818583395 = nimCopy(null, inputHEX60gensym178HEX60gensym180_2818583393, NTI33554449);
            result_2818583394 = handleInput_2818572650(self_2818583357, input_2818583395);
            break BeforeRet;
            }
            else {
              result_2818583394 = 1;
              break BeforeRet;
            }
            
          };

          return result_2818583394;

        }

  BeforeRet: {
    if (eqStrings(mode_2818583358, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2818583363 = [mnewString(0)];
    fmtRes_2818583363[0].push.apply(fmtRes_2818583363[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2818583363, 0, mode_2818583358, []);
    fmtRes_2818583363[0].push.apply(fmtRes_2818583363[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818583363[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2818583358).length == 0)) {
    self_2818583357.modeEventHandler = null;
    }
    else {
      var config_2818583364 = getModeConfig_2818583167(self_2818583357, mode_2818583358);
      Label1: {
        var handlerHEX60gensym178_2818583372 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym178_2818583372.config = config_2818583364;
        handlerHEX60gensym178_2818583372.dfaInternal = buildDFA_2046820415(config_2818583364);
        handlerHEX60gensym178_2818583372.handleAction = HEX3Aanonymous_2818583384;
        handlerHEX60gensym178_2818583372.handleInput = HEX3Aanonymous_2818583392;
      };
      self_2818583357.modeEventHandler = handlerHEX60gensym178_2818583372;
    }
    
    self_2818583357.currentMode = nimCopy(null, mode_2818583358, NTI33554449);
    markDirty_2147483686(self_2818583357);
  };

  
}

function setModeJsWrapper_2818583317(self_2818583481, mode_2818583482) {
    setMode_2818583356(self_2818583481, mode_2818583482);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2818583317(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2818583612(self_2818583613) {
  var result_2818583614 = [];

  BeforeRet: {
    result_2818583614 = nimCopy(null, self_2818583613.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2818583614;

}

function modeJsWrapper_2818583608(self_2818583643) {
  var result_2818583644 = [];

    result_2818583644 = nimCopy(null, mode_2818583612(self_2818583643), NTI33554449);

  return result_2818583644;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2818583608(this));};

function getContextWithMode_2818582795(self_2818582796, context_2818582797) {
  var result_2818583672 = [];

  BeforeRet: {
    result_2818583672 = nimCopy(null, (context_2818582797 || []).concat([46] || [],self_2818582796.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2818583672;

}

function getContextWithModeJsWrapper_2818583665(self_2818583702, context_2818583703) {
  var result_2818583704 = [];

    result_2818583704 = nimCopy(null, getContextWithMode_2818582795(self_2818583702, context_2818583703), NTI33554449);

  return result_2818583704;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2818583665(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2818582855(s_2818582857, default_2818582858) {
    var Temporary1;

  var result_2818582859 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818582857))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2818582858;
      break;
    }
    result_2818582859 = Temporary1;

  return result_2818582859;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2818583833 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818583833 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2818583833, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2818583833 = addInt(i_2818583833, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2583691801 = 0;
      colontmp__2583691801 = subInt(L_33557827, 1);
      var res_2583691802 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2583691802 <= colontmp__2583691801)) break Label3;
            i_33557832 = res_2583691802;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2583691802 = addInt(res_2583691802, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2818583839 = 0;
      var splitsHEX60gensym40_2818583840 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2818583839 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2818583842 = lastHEX60gensym40_2818583839;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2818583839 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2818583839, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2818583839 = addInt(lastHEX60gensym40_2818583839, 1);
                }
            };
            if ((splitsHEX60gensym40_2818583840 == 0)) {
            lastHEX60gensym40_2818583839 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2818583842, subInt(lastHEX60gensym40_2818583839, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2818583840 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2818583840 = subInt(splitsHEX60gensym40_2818583840, 1);
            lastHEX60gensym40_2818583839 = addInt(lastHEX60gensym40_2818583839, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2818582829(editor_2818582831, path_2818582832, default_2818582833) {
  var result_2818582839 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818582831 == null)) {
      result_2818582839 = default_2818582833;
      break BeforeRet;
      }
      
      var nodeHEX60gensym157_2818582851 = HEX7BHEX7D_1627393316(editor_2818582831.options, nsuSplitString(path_2818582832, [46], -1));
      if ((nodeHEX60gensym157_2818582851 == null)) {
      result_2818582839 = default_2818582833;
      break BeforeRet;
      }
      
    };
    result_2818582839 = parseEnum_2818582855(getStr_1627390106(nodeHEX60gensym157_2818582851, []), default_2818582833);
    break BeforeRet;
  };

  return result_2818582839;

}

function selection_2818572792(self_2818572793) {
  var result_2818572794 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572794 = nimCopy(result_2818572794, self_2818572793.selectionsInternal[chckIndx((self_2818572793.selectionsInternal).length - 1, 0, (self_2818572793.selectionsInternal).length - 1)], NTI2231369739);

  return result_2818572794;

}

function getCursor_2818582825(self_2818582826, cursor_2818582827) {
  var result_2818582828 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2818582827) {
    case 0:
      var configCursor_2818582889 = getOption_2818582829(self_2818582826.editor, getContextWithMode_2818582795(self_2818582826, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2818582828 = nimCopy(result_2818582828, getCursor_2818582825(self_2818582826, configCursor_2818582889), NTI2231369737);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2818582828 = nimCopy(result_2818582828, selection_2818572792(self_2818582826).Field1, NTI2231369737);
      break BeforeRet;
      break;
    case 2:
      result_2818582828 = nimCopy(result_2818582828, selection_2818572792(self_2818582826).Field0, NTI2231369737);
      break BeforeRet;
      break;
    }
  };

  return result_2818582828;

}

function updateTargetColumn_2818583734(self_2818583735, cursor_2818583736) {
    self_2818583735.targetColumn = getCursor_2818582825(self_2818583735, cursor_2818583736).Field1;

  
}

function updateTargetColumnJsWrapper_2818583730(self_2818583765, cursor_2818583766) {
    updateTargetColumn_2818583734(self_2818583765, cursor_2818583766);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2818583730(this, cursor_));};

function HEX3DHEX3D_2231369801(x_2231369803, y_2231369804) {
  var result_2231369805 = false;

  BeforeRet: {
    if (!((x_2231369803["Field0"] == y_2231369804["Field0"]))) {
    result_2231369805 = false;
    break BeforeRet;
    }
    
    if (!((x_2231369803["Field1"] == y_2231369804["Field1"]))) {
    result_2231369805 = false;
    break BeforeRet;
    }
    
    result_2231369805 = true;
    break BeforeRet;
  };

  return result_2231369805;

}

function HEX3DHEX3D_2231369791(x_2231369793, y_2231369794) {
  var result_2231369795 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2231369801(x_2231369793["Field0"], y_2231369794["Field0"]))) {
    result_2231369795 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2231369801(x_2231369793["Field1"], y_2231369794["Field1"]))) {
    result_2231369795 = false;
    break BeforeRet;
    }
    
    result_2231369795 = true;
    break BeforeRet;
  };

  return result_2231369795;

}

function newSeq_2818572832(len_2818572834) {
  var result_2818572835 = [];

    result_2818572835 = new Array(len_2818572834); for (var i = 0 ; i < len_2818572834 ; ++i) { result_2818572835[i] = []; }
  return result_2818572835;

}

function expandIfNeeded_2818572822(deq_2818572824) {
              var Temporary5;
    var Temporary6;

    if ((deq_2818572824.mask == 0)) {
    var correctSizeHEX60gensym9_2818572826 = nextPowerOfTwo_872415437(4);
    deq_2818572824.mask = subInt(correctSizeHEX60gensym9_2818572826, 1);
    deq_2818572824.data = new Array(chckRange(correctSizeHEX60gensym9_2818572826, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2818572826, 0, 2147483647) ; ++i) { deq_2818572824.data[i] = []; }    }
    
    var cap_2818572831 = addInt(deq_2818572824.mask, 1);
    if ((cap_2818572831 <= deq_2818572824.count)) {
    var n_2818572849 = newSeq_2818572832(chckRange(mulInt(cap_2818572831, 2), 0, 2147483647));
    var i_2818572850 = 0;
    Label1: {
      var x_2818572860 = null;
      var x_2818572860_Idx = 0;
      var i_2818583899 = deq_2818572824.head;
      Label2: {
        var c_2818583901 = 0;
        var i_2818583902 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2818583902 < deq_2818572824.count)) break Label4;
              c_2818583901 = i_2818583902;
              x_2818572860 = deq_2818572824.data; x_2818572860_Idx = chckIndx(i_2818583899, 0, (deq_2818572824.data).length - 1);
              Temporary5 = x_2818572860[x_2818572860_Idx];
              x_2818572860[x_2818572860_Idx] = genericReset(x_2818572860[x_2818572860_Idx], NTI2231369747);
              n_2818572849[chckIndx(i_2818572850, 0, (n_2818572849).length - 1)] = nimCopy(null, Temporary5, NTI2231369747);
              i_2818572850 = addInt(i_2818572850, 1);
              i_2818583899 = (addInt(i_2818583899, 1) & deq_2818572824.mask);
              i_2818583902 = addInt(i_2818583902, 1);
            }
        };
      };
    };
    Temporary6 = n_2818572849;
    n_2818572849 = genericReset(n_2818572849, NTI2818572689);
    deq_2818572824.data = nimCopy(null, Temporary6, NTI2818572689);
    deq_2818572824.mask = subInt(mulInt(cap_2818572831, 2), 1);
    deq_2818572824.tail = deq_2818572824.count;
    deq_2818572824.head = 0;
    }
    

  
}

function addLast_2818572813(deq_2818572815, item_2818572816) {
    expandIfNeeded_2818572822(deq_2818572815);
    deq_2818572815.count = addInt(deq_2818572815.count, 1);
    deq_2818572815.data[chckIndx(deq_2818572815.tail, 0, (deq_2818572815.data).length - 1)] = nimCopy(null, item_2818572816, NTI2231369747);
    deq_2818572815.tail = (addInt(deq_2818572815.tail, 1) & deq_2818572815.mask);

  
}

function len_2818572952(deq_2818572954) {
  var result_2818572955 = 0;

    result_2818572955 = deq_2818572954.count;

  return result_2818572955;

}

function popFirst_2818573013(deq_2818573015) {
    var Temporary1;

  var result_2818573016 = [];

    if ((deq_2818573015.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818573015.count = subInt(deq_2818573015.count, 1);
    Temporary1 = deq_2818573015.data[chckIndx(deq_2818573015.head, 0, (deq_2818573015.data).length - 1)];
    deq_2818573015.data[chckIndx(deq_2818573015.head, 0, (deq_2818573015.data).length - 1)] = genericReset(deq_2818573015.data[chckIndx(deq_2818573015.head, 0, (deq_2818573015.data).length - 1)], NTI2231369747);
    result_2818573016 = nimCopy(null, Temporary1, NTI2231369747);
    deq_2818573015.head = (addInt(deq_2818573015.head, 1) & deq_2818573015.mask);

  return result_2818573016;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2818572660(self_2818572661, line_2818572662) {
  var result_2818572663 = 0;

  BeforeRet: {
    if ((line_2818572662 < (self_2818572661.lines).length)) {
    result_2818572663 = (self_2818572661.lines[chckIndx(line_2818572662, 0, (self_2818572661.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572663 = 0;
    break BeforeRet;
  };

  return result_2818572663;

}

function clampCursor_2818572674(self_2818572675, cursor_2818572676) {
  var result_2818572677 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818572678 = nimCopy(null, cursor_2818572676, NTI2231369737);
    if (((self_2818572675.lines).length == 0)) {
    var colontmp__2818583906 = 0;
    var colontmp__2818583907 = 0;
    result_2818572677 = nimCopy(result_2818572677, {Field0: colontmp__2818583906, Field1: colontmp__2818583907}, NTI2231369737);
    break BeforeRet;
    }
    
    cursor_2818572678.Field0 = clamp_1660945119(cursor_2818572678.Field0, 0, subInt((self_2818572675.lines).length, 1));
    cursor_2818572678.Field1 = clamp_1660945119(cursor_2818572678.Field1, 0, lineLength_2818572660(self_2818572675, cursor_2818572678.Field0));
    result_2818572677 = nimCopy(result_2818572677, cursor_2818572678, NTI2231369737);
    break BeforeRet;
  };

  return result_2818572677;

}

function clampSelection_2818572699(self_2818572700, selection_2818572701) {
  var result_2818572702 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818583904 = clampCursor_2818572674(self_2818572700, selection_2818572701.Field0);
    var colontmp__2818583905 = clampCursor_2818572674(self_2818572700, selection_2818572701.Field1);
    result_2818572702 = nimCopy(result_2818572702, {Field0: nimCopy(null, colontmp__2818583904, NTI2231369737), Field1: nimCopy(null, colontmp__2818583905, NTI2231369737)}, NTI2231369739);

  return result_2818572702;

}

function clampSelection_2818572703(self_2818572704, selection_2818572705) {
  var result_2818572706 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818572706 = nimCopy(result_2818572706, clampSelection_2818572699(self_2818572704.document, selection_2818572705), NTI2231369739);

  return result_2818572706;

}

function selectionHEX3D_2818572798(self_2818572799, selection_2818572800) {
  BeforeRet: {
    if ((((self_2818572799.selectionsInternal).length == 1) && HEX3DHEX3D_2231369791(self_2818572799.selectionsInternal[chckIndx(0, 0, (self_2818572799.selectionsInternal).length - 1)], selection_2818572800))) {
    break BeforeRet;
    }
    
    addLast_2818572813(self_2818572799.selectionHistory, self_2818572799.selectionsInternal);
    if ((100 < len_2818572952(self_2818572799.selectionHistory))) {
    var _ = popFirst_2818573013(self_2818572799.selectionHistory);
    }
    
    self_2818572799.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2818572703(self_2818572799, selection_2818572800), NTI2231369739)], NTI2818572804);
    markDirty_2147483686(self_2818572799);
  };

  
}

function invertSelection_2818583851(self_2818583852) {
    selectionHEX3D_2818572798(self_2818583852, {Field0: nimCopy(null, selection_2818572792(self_2818583852).Field1, NTI2231369737), Field1: nimCopy(null, selection_2818572792(self_2818583852).Field0, NTI2231369737)});

  
}

function invertSelectionJsWrapper_2818583847(self_2818583880) {
    invertSelection_2818583851(self_2818583880);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2818583847(this));};

function any_2231370161(s_2231370163, pred_2231370165) {
  var result_2231370166 = false;

  BeforeRet: {
    Label1: {
      var i_2231370179 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818584353 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584353 < (s_2231370163).length)) break Label3;
            i_2231370179 = s_2231370163[chckIndx(i_2818584353, 0, (s_2231370163).length - 1)];
            if (pred_2231370165(i_2231370179)) {
            result_2231370166 = true;
            break BeforeRet;
            }
            
            i_2818584353 = addInt(i_2818584353, 1);
          }
      };
    };
    result_2231370166 = false;
  };

  return result_2231370166;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2231370071(x_2231370073, y_2231370074) {
  var result_2231370075 = false;

  BeforeRet: {
    var c_2231370085 = cmp_33557727(x_2231370073["Field0"], y_2231370074["Field0"]);
    if ((c_2231370085 < 0)) {
    result_2231370075 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231370085)) {
    result_2231370075 = false;
    break BeforeRet;
    }
    
    var c_2231370090 = cmp_33557727(x_2231370073["Field1"], y_2231370074["Field1"]);
    if ((c_2231370090 < 0)) {
    result_2231370075 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231370090)) {
    result_2231370075 = false;
    break BeforeRet;
    }
    
    result_2231370075 = true;
    break BeforeRet;
  };

  return result_2231370075;

}

function contains_2231370119(selection_2231370120, other_2231370121) {
  var result_2231370122 = false;

    result_2231370122 = (HEX3CHEX3D_2231370071(selection_2231370120.Field0, other_2231370121.Field0) && HEX3CHEX3D_2231370071(other_2231370121.Field1, selection_2231370120.Field1));

  return result_2231370122;

}

function contains_2231370198(self_2231370199, other_2231370200) {
    other_2231370200 = nimCopy(null, other_2231370200, NTI2231369739);
    
function HEX3Aanonymous_2231370202(s_2231370205) {
      var result_2231370208 = false;

        result_2231370208 = contains_2231370119(s_2231370205, other_2231370200);

      return result_2231370208;

    }

  var result_2231370201 = false;

    result_2231370201 = any_2231370161(self_2231370199, HEX3Aanonymous_2231370202);

  return result_2231370201;

}

function deduplicate_2818572744(s_2818572746, isSorted_2818572747) {
  var result_2818572748 = [];

    result_2818572748 = nimCopy(null, [], NTI2818572635);
    if ((0 < (s_2818572746).length)) {
    if (isSorted_2818572747) {
    var prev_2818572756 = nimCopy(null, s_2818572746[chckIndx(0, 0, (s_2818572746).length - 1)], NTI2231369739);
    var Temporary1 = nimCopy(null, prev_2818572756, NTI2231369739);
    result_2818572748.push(Temporary1);;
    Label2: {
      var i_2818572768 = 0;
      var colontmp__2818584345 = 0;
      colontmp__2818584345 = (s_2818572746).length - 1;
      var res_2818584346 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2818584346 <= colontmp__2818584345)) break Label4;
            i_2818572768 = res_2818584346;
            if (!(HEX3DHEX3D_2231369791(s_2818572746[chckIndx(i_2818572768, 0, (s_2818572746).length - 1)], prev_2818572756))) {
            prev_2818572756 = nimCopy(prev_2818572756, s_2818572746[chckIndx(i_2818572768, 0, (s_2818572746).length - 1)], NTI2231369739);
            var Temporary5 = nimCopy(null, prev_2818572756, NTI2231369739);
            result_2818572748.push(Temporary5);;
            }
            
            res_2818584346 = addInt(res_2818584346, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2818572780 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2818584350 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2818584350 < (s_2818572746).length)) break Label8;
              itm_2818572780 = s_2818572746[chckIndx(i_2818584350, 0, (s_2818572746).length - 1)];
              if (!(contains_2231370198(result_2818572748, itm_2818572780))) {
              var Temporary9 = nimCopy(null, itm_2818572780, NTI2231369739);
              result_2818572748.push(Temporary9);;
              }
              
              i_2818584350 = addInt(i_2818584350, 1);
            }
        };
      };
    }
    
    }
    

  return result_2818572748;

}

function map_2818572722(s_2818572725, op_2818572727) {
  var result_2818572728 = [];

    result_2818572728 = new Array(chckRange((s_2818572725).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818572725).length, 0, 2147483647) ; ++i) { result_2818572728[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818572743 = 0;
      var colontmp__2818584356 = 0;
      colontmp__2818584356 = (s_2818572725).length;
      var i_2818584357 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584357 < colontmp__2818584356)) break Label3;
            i_2818572743 = i_2818584357;
            result_2818572728[chckIndx(i_2818572743, 0, (result_2818572728).length - 1)] = nimCopy(result_2818572728[chckIndx(i_2818572743, 0, (result_2818572728).length - 1)], op_2818572727(s_2818572725[chckIndx(i_2818572743, 0, (s_2818572725).length - 1)]), NTI2231369739);
            i_2818584357 = addInt(i_2818584357, 1);
          }
      };
    };

  return result_2818572728;

}

function clampAndMergeSelections_2818572707(self_2818572708, selections_2818572709) {
    
function HEX3Aanonymous_2818572711(s_2818572718) {
      var result_2818572721 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818572721 = nimCopy(result_2818572721, clampSelection_2818572699(self_2818572708, s_2818572718), NTI2231369739);

      return result_2818572721;

    }

  var result_2818572710 = [];

    result_2818572710 = nimCopy(null, deduplicate_2818572744(map_2818572722(selections_2818572709, HEX3Aanonymous_2818572711), false), NTI2818572624);

  return result_2818572710;

}

function HEX40_2818578750(a_2818578752) {
  var result_2818578753 = [];

    result_2818578753 = new Array(chckRange((a_2818578752).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2818578752).length, 0, 2147483647) ; ++i) { result_2818578753[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818578768 = 0;
      var colontmp__2818584360 = 0;
      colontmp__2818584360 = subInt((a_2818578752).length, 1);
      var res_2818584361 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584361 <= colontmp__2818584360)) break Label3;
            i_2818578768 = res_2818584361;
            result_2818578753[chckIndx(i_2818578768, 0, (result_2818578753).length - 1)] = nimCopy(result_2818578753[chckIndx(i_2818578768, 0, (result_2818578753).length - 1)], a_2818578752[chckIndx(i_2818578768, 0, (a_2818578752).length - 1)], NTI2231369739);
            res_2818584361 = addInt(res_2818584361, 1);
          }
      };
    };

  return result_2818578753;

}

function byteOffset_2818578730(self_2818578731, cursor_2818578732) {
  var result_2818578733 = 0;

    result_2818578733 = cursor_2818578732.Field1;
    Label1: {
      var i_2818578738 = 0;
      var i_2818584364 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584364 < cursor_2818578732.Field0)) break Label3;
            i_2818578738 = i_2818584364;
            result_2818578733 = addInt(result_2818578733, addInt((self_2818578731.lines[chckIndx(i_2818578738, 0, (self_2818578731.lines).length - 1)]).length, 1));
            i_2818584364 = addInt(i_2818584364, 1);
          }
      };
    };

  return result_2818578733;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2818583345 = 0;
      colontmp__2818583345 = start_855639700;
      var res_2818583346 = colontmp__2818583345;
      Label3: {
          Label4: while (true) {
          if (!(res_2818583346 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2818583346;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2818583346 = addInt(res_2818583346, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2818584367 = 0;
      colontmp__2818584367 = subInt(m_855639633, 1);
      var i_2818584368 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584368 < colontmp__2818584367)) break Label3;
            i_855639653 = i_2818584368;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2818584368 = addInt(i_2818584368, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2818579314(x_2818579316, x_2818579316_Idx, item_2818579317, i_2818579318) {
    var it_2818579338 = [];
    x_2818579316[x_2818579316_Idx] = x_2818579316[x_2818579316_Idx] || []; x_2818579316[x_2818579316_Idx].splice(i_2818579318, 0, it_2818579338);
    x_2818579316[x_2818579316_Idx][chckIndx(i_2818579318, 0, (x_2818579316[x_2818579316_Idx]).length - 1)] = nimCopy(null, item_2818579317, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2231370221(cursor_2231370222) {
  var result_2231370223 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818584377 = nimCopy(null, cursor_2231370222, NTI2231369737);
    var colontmp__2818584378 = nimCopy(null, cursor_2231370222, NTI2231369737);
    result_2231370223 = nimCopy(result_2231370223, {Field0: nimCopy(null, colontmp__2818584377, NTI2231369737), Field1: nimCopy(null, colontmp__2818584378, NTI2231369737)}, NTI2231369739);

  return result_2231370223;

}

function add_2231370245(cursor_2231370246, selection_2231370247) {
  var result_2231370248 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(cursor_2231370246, selection_2231370247.Field0)) {
    result_2231370248 = nimCopy(result_2231370248, cursor_2231370246, NTI2231369737);
    break BeforeRet;
    }
    
    if ((selection_2231370247.Field0.Field0 == selection_2231370247.Field1.Field0)) {
    if ((cursor_2231370246.Field0 == selection_2231370247.Field0.Field0)) {
    var colontmp__2818584381 = cursor_2231370246.Field0;
    var colontmp__2818584382 = addInt(cursor_2231370246.Field1, subInt(selection_2231370247.Field1.Field1, selection_2231370247.Field0.Field1));
    result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2818584381, Field1: colontmp__2818584382}, NTI2231369737);
    break BeforeRet;
    }
    else {
      result_2231370248 = nimCopy(result_2231370248, cursor_2231370246, NTI2231369737);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2231370246.Field0 == selection_2231370247.Field0.Field0)) {
    var colontmp__2818584383 = selection_2231370247.Field1.Field0;
    var colontmp__2818584384 = addInt(selection_2231370247.Field1.Field1, subInt(cursor_2231370246.Field1, selection_2231370247.Field0.Field1));
    result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2818584383, Field1: colontmp__2818584384}, NTI2231369737);
    break BeforeRet;
    }
    else {
      var colontmp__2818584385 = addInt(cursor_2231370246.Field0, subInt(selection_2231370247.Field1.Field0, selection_2231370247.Field0.Field0));
      var colontmp__2818584386 = cursor_2231370246.Field1;
      result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2818584385, Field1: colontmp__2818584386}, NTI2231369737);
      break BeforeRet;
    }
    }
  };

  return result_2231370248;

}

function add_2231370253(self_2231370254, other_2231370255) {
  var result_2231370256 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818584379 = add_2231370245(self_2231370254.Field0, other_2231370255);
    var colontmp__2818584380 = add_2231370245(self_2231370254.Field1, other_2231370255);
    result_2231370256 = nimCopy(result_2231370256, {Field0: nimCopy(null, colontmp__2818584379, NTI2231369737), Field1: nimCopy(null, colontmp__2818584380, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370256;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2818584388 = 0;
      colontmp__2818584388 = (a_855639591).length - 1;
      var res_2818584389 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818584389 <= colontmp__2818584388)) break Label3;
            i_855639608 = res_2818584389;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2818584389 = addInt(res_2818584389, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2818584392 = 0;
      colontmp__2818584392 = (a_855639591).length - 1;
      var res_2818584393 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2818584393 <= colontmp__2818584392)) break Label6;
            i_855639621 = res_2818584393;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2818584393 = addInt(res_2818584393, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2885681248(self_2885681250) {
  var result_2885681251 = false;

    result_2885681251 = !((self_2885681250.val == null));

  return result_2885681251;

}

function get_2885681239(self_2885681241, otherwise_2885681242) {
    var Temporary1;

  var result_2885681243 = null;

    if (isSome_2885681248(self_2885681241)) {
    Temporary1 = self_2885681241.val;
    }
    else {
    Temporary1 = otherwise_2885681242;
    }
    
    result_2885681243 = Temporary1;

  return result_2885681243;

}

function parseString_2885681211(self_2885681212, text_2885681213, oldTree_2885681225) {
  var result_2885681226 = null;

  BeforeRet: {
    result_2885681226 = self_2885681212.parse(toJSStr(text_2885681213), get_2885681239(oldTree_2885681225, null));
    break BeforeRet;
  };

  return result_2885681226;

}

function some_2818578924(val_2818578926) {
  var result_2818578927 = ({val: null});

    if (!(!((val_2818578926 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818578927.val = val_2818578926;

  return result_2818578927;

}

function invoke_2818579405(event_2818579407, arg_2818579408) {
    Label1: {
      var h_2818579431 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584397 = 0;
      var L_2818584398 = (event_2818579407.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584397 < L_2818584398)) break Label3;
            h_2818579431 = event_2818579407.handlers[chckIndx(i_2818584397, 0, (event_2818579407.handlers).length - 1)];
            h_2818579431.Field1(arg_2818579408);
            i_2818584397 = addInt(i_2818584397, 1);
            if (!(((event_2818579407.handlers).length == L_2818584398))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2818573235(event_2818573237, arg_2818573238) {
    Label1: {
      var h_2818573261 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584402 = 0;
      var L_2818584403 = (event_2818573237.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584402 < L_2818584403)) break Label3;
            h_2818573261 = event_2818573237.handlers[chckIndx(i_2818584402, 0, (event_2818573237.handlers).length - 1)];
            h_2818573261.Field1(arg_2818573238);
            i_2818584402 = addInt(i_2818584402, 1);
            if (!(((event_2818573237.handlers).length == L_2818584403))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function clear_2818573327(t_2818573330) {
    Label1: {
      var i_2818573388 = 0;
      var colontmp__2818584406 = 0;
      colontmp__2818584406 = (t_2818573330.data).length;
      var i_2818584407 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584407 < colontmp__2818584406)) break Label3;
            i_2818573388 = i_2818584407;
            t_2818573330.data[chckIndx(i_2818573388, 0, (t_2818573330.data).length - 1)].Field0 = 0;
            t_2818573330.data[chckIndx(i_2818573388, 0, (t_2818573330.data).length - 1)].Field1 = 0;
            t_2818573330.data[chckIndx(i_2818573388, 0, (t_2818573330.data).length - 1)].Field2 = null;
            i_2818584407 = addInt(i_2818584407, 1);
          }
      };
    };
    t_2818573330.counter = 0;

  
}

function notifyTextChanged_2818573211(self_2818573212) {
    invoke_2818573235(self_2818573212.textChanged, self_2818573212);
    clear_2818573327(self_2818573212.styledTextCache);

  
}

function insert_2818579249(self_2818579250, selections_2818579251, oldSelection_2818579252, text_2818579253, notify_2818579254, record_2818579255, autoIndent_2818579256) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2818579257 = [];

    var newEmptyLines_2818579258 = [];
    result_2818579257 = nimCopy(null, clampAndMergeSelections_2818572707(self_2818579250, selections_2818579251), NTI2231369747);
    var undoOp_2818579266 = {kind: 2, children: [], oldSelection: HEX40_2818578750(oldSelection_2818579252), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818579272 = 0;
      var selection_2818579273 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818584341 = 0;
      var L_2818584342 = (result_2818579257).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584341 < L_2818584342)) break Label3;
            i_2818579272 = i_2818584341;
            selection_2818579273 = nimCopy(selection_2818579273, result_2818579257[chckIndx(i_2818584341, 0, (result_2818579257).length - 1)], NTI2231369739);
            var oldCursor_2818579274 = nimCopy(null, selection_2818579273.Field1, NTI2231369737);
            var cursor_2818579275 = nimCopy(null, selection_2818579273.Field1, NTI2231369737);
            var startByte_2818579276 = byteOffset_2818578730(self_2818579250, cursor_2818579275);
            var lineCounter_2818579277 = 0;
            if (self_2818579250.singleLine) {
            var text_2818579278 = nsuReplaceStr(text_2818579253, [10], [32]);
            if (((self_2818579250.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2818579278, NTI33554449);
            self_2818579250.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2818579250.lines, chckIndx(0, 0, (self_2818579250.lines).length - 1), text_2818579278, chckRange(cursor_2818579275.Field1, 0, 2147483647));
            }
            
            cursor_2818579275.Field1 = addInt(cursor_2818579275.Field1, (text_2818579278).length);
            }
            else {
              Label5: {
                var line_2818579290 = [];
                var first_2818584330 = 0;
                var last_2818584331 = 0;
                var eolpos_2818584332 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2818584331 < (text_2818579253).length) && !((ConstSet23[text_2818579253[chckIndx(last_2818584331, 0, (text_2818579253).length - 1)]] != undefined)))) break Label9;
                            last_2818584331 = addInt(last_2818584331, 1);
                          }
                      };
                      eolpos_2818584332 = last_2818584331;
                      if ((last_2818584331 < (text_2818579253).length)) {
                      if ((text_2818579253[chckIndx(last_2818584331, 0, (text_2818579253).length - 1)] == 10)) {
                      last_2818584331 = addInt(last_2818584331, 1);
                      }
                      else {
                      if ((text_2818579253[chckIndx(last_2818584331, 0, (text_2818579253).length - 1)] == 13)) {
                      last_2818584331 = addInt(last_2818584331, 1);
                      if (((last_2818584331 < (text_2818579253).length) && (text_2818579253[chckIndx(last_2818584331, 0, (text_2818579253).length - 1)] == 10))) {
                      last_2818584331 = addInt(last_2818584331, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2818584331, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2818584332, 1);
                      }
                      
                      line_2818579290 = substr_33557821(text_2818579253, first_2818584330, Temporary10);
                      try {
                      if ((0 < lineCounter_2818579277)) {
                      insert_2818579314(self_2818579250, "lines", HEX5BHEX5D_855639319(self_2818579250.lines[chckIndx(cursor_2818579275.Field0, 0, (self_2818579250.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2818579275.Field1, 1)), chckRange(addInt(cursor_2818579275.Field0, 1), 0, 2147483647));
                      newEmptyLines_2818579258.push(addInt(cursor_2818579275.Field0, 1));;
                      if ((cursor_2818579275.Field1 < lineLength_2818572660(self_2818579250, cursor_2818579275.Field0))) {
                      delete_855639365(self_2818579250.lines, chckIndx(cursor_2818579275.Field0, 0, (self_2818579250.lines).length - 1), HEX2EHEX2E_805306418(cursor_2818579275.Field1, subInt(lineLength_2818572660(self_2818579250, cursor_2818579275.Field0), 1)));
                      }
                      
                      var colontmp__2818584326 = addInt(cursor_2818579275.Field0, 1);
                      var colontmp__2818584327 = 0;
                      cursor_2818579275 = nimCopy(cursor_2818579275, {Field0: colontmp__2818584326, Field1: colontmp__2818584327}, NTI2231369737);
                      }
                      
                      if ((0 < (line_2818579290).length)) {
                      insert_33557745(self_2818579250.lines, chckIndx(cursor_2818579275.Field0, 0, (self_2818579250.lines).length - 1), line_2818579290, chckRange(cursor_2818579275.Field1, 0, 2147483647));
                      cursor_2818579275.Field1 = addInt(cursor_2818579275.Field1, (line_2818579290).length);
                      }
                      
                      if ((eolpos_2818584332 == last_2818584331)) {
                      break Label6;
                      }
                      
                      first_2818584330 = last_2818584331;
                      } finally {
                      lineCounter_2818579277 = addInt(lineCounter_2818579277, 1);
                      }
                    }
                };
              };
            }
            
            result_2818579257[chckIndx(i_2818579272, 0, (result_2818579257).length - 1)] = nimCopy(result_2818579257[chckIndx(i_2818579272, 0, (result_2818579257).length - 1)], toSelection_2231370221(cursor_2818579275), NTI2231369739);
            Label12: {
              var k_2818579365 = 0;
              var colontmp__2818584336 = 0;
              var colontmp__2818584337 = 0;
              colontmp__2818584336 = addInt(i_2818579272, 1);
              colontmp__2818584337 = (result_2818579257).length - 1;
              var res_2818584338 = colontmp__2818584336;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2818584338 <= colontmp__2818584337)) break Label14;
                    k_2818579365 = res_2818584338;
                    result_2818579257[chckIndx(k_2818579365, 0, (result_2818579257).length - 1)] = nimCopy(result_2818579257[chckIndx(k_2818579365, 0, (result_2818579257).length - 1)], add_2231370253(result_2818579257[chckIndx(k_2818579365, 0, (result_2818579257).length - 1)], {Field0: nimCopy(null, oldCursor_2818579274, NTI2231369737), Field1: nimCopy(null, cursor_2818579275, NTI2231369737)}), NTI2231369739);
                    res_2818584338 = addInt(res_2818584338, 1);
                  }
              };
            };
            if (!((self_2818579250.tsParser == null))) {
            var edit_2818579369 = {startIndex: startByte_2818579276, oldEndIndex: startByte_2818579276, newEndIndex: addInt(startByte_2818579276, (text_2818579253).length), startPosition: {row: oldCursor_2818579274.Field0, column: oldCursor_2818579274.Field1, m_type: NTI2885681166}, oldEndPosition: {row: oldCursor_2818579274.Field0, column: oldCursor_2818579274.Field1, m_type: NTI2885681166}, newEndPosition: {row: cursor_2818579275.Field0, column: cursor_2818579275.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
            var _ = self_2818579250.currentTree.edit(edit_2818579369);
            var strValue_2818579370 = nsuJoinSep(self_2818579250.lines, [10]);
            self_2818579250.currentTree = parseString_2885681211(self_2818579250.tsParser, strValue_2818579370, some_2818578924(self_2818579250.currentTree));
            }
            
            self_2818579250.version = addInt(self_2818579250.version, 1);
            if (record_2818579255) {
            var Temporary15 = undoOp_2818579266;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2818572291)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2818579274, NTI2231369737), Field1: nimCopy(null, cursor_2818579275, NTI2231369737)}, NTI2231369739), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2818579254) {
            invoke_2818579405(self_2818579250.textInserted, {Field0: self_2818579250, Field1: nimCopy(null, oldCursor_2818579274, NTI2231369737), Field2: nimCopy(null, text_2818579253, NTI33554449)});
            }
            
            i_2818584341 = addInt(i_2818584341, 1);
            if (!(((result_2818579257).length == L_2818584342))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818579254) {
    notifyTextChanged_2818573211(self_2818579250);
    }
    
      if (!record_2818579255) Temporary16 = false; else {        var Temporary17 = undoOp_2818579266;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2818572291)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2818579250.undoOps.push(undoOp_2818579266);;
    self_2818579250.redoOps = nimCopy(null, [], NTI2818575703);
    }
    

  return result_2818579257;

}

function selections_2818572789(self_2818572790) {
  var result_2818572791 = [];

    result_2818572791 = nimCopy(null, self_2818572790.selectionsInternal, NTI2231369747);

  return result_2818572791;

}

function insert_2818583914(self_2818583915, selections_2818583916, text_2818583917, notify_2818583918, record_2818583919, autoIndent_2818583920) {
  var result_2818583921 = [];

  BeforeRet: {
    result_2818583921 = nimCopy(null, insert_2818579249(self_2818583915.document, selections_2818583916, selections_2818572789(self_2818583915), text_2818583917, notify_2818583918, record_2818583919, autoIndent_2818583920), NTI2818576035);
    break BeforeRet;
  };

  return result_2818583921;

}

function insertJsWrapper_2818583910(self_2818583955, selections_2818583956, text_2818583957, notify_2818583958, record_2818583959, autoIndent_2818583960) {
  var result_2818583961 = [];

    result_2818583961 = nimCopy(null, insert_2818583914(self_2818583955, selections_2818583956, text_2818583957, notify_2818583958, record_2818583959, autoIndent_2818583960), NTI2818578754);

  return result_2818583961;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2818583910(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2231370100(selection_2231370101) {
  var result_2231370102 = false;

    result_2231370102 = HEX3DHEX3D_2231369801(selection_2231370101.Field0, selection_2231370101.Field1);

  return result_2231370102;

}

function HEX3E_2231370059(a_2231370060, b_2231370061) {
  var result_2231370062 = false;

  BeforeRet: {
    if ((b_2231370061.Field0 < a_2231370060.Field0)) {
    result_2231370062 = true;
    break BeforeRet;
    }
    else {
    if (((a_2231370060.Field0 == b_2231370061.Field0) && (b_2231370061.Field1 < a_2231370060.Field1))) {
    result_2231370062 = true;
    break BeforeRet;
    }
    else {
      result_2231370062 = false;
      break BeforeRet;
    }
    }
  };

  return result_2231370062;

}

function isBackwards_2231370091(selection_2231370092) {
  var result_2231370093 = false;

  BeforeRet: {
    result_2231370093 = HEX3E_2231370059(selection_2231370092.Field0, selection_2231370092.Field1);
    break BeforeRet;
  };

  return result_2231370093;

}

function normalized_2231370094(selection_2231370095) {
  var result_2231370096 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2231370091(selection_2231370095)) {
    var colontmp__2818584500 = nimCopy(null, selection_2231370095.Field1, NTI2231369737);
    var colontmp__2818584501 = nimCopy(null, selection_2231370095.Field0, NTI2231369737);
    result_2231370096 = nimCopy(result_2231370096, {Field0: nimCopy(null, colontmp__2818584500, NTI2231369737), Field1: nimCopy(null, colontmp__2818584501, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    }
    else {
      result_2231370096 = nimCopy(result_2231370096, selection_2231370095, NTI2231369739);
      break BeforeRet;
    }
    
  };

  return result_2231370096;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2818584508 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584508 < L_855639300)) break Label3;
            i_855639305 = i_2818584508;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2818584508 = addInt(i_2818584508, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2818573988(self_2818573989, selection_2818573990) {
  var result_2818573991 = [];

  BeforeRet: {
    var colontmp__2818584506 = normalized_2231370094(selection_2818573990);
    var first_2818573992 = nimCopy(null, colontmp__2818584506["Field0"], NTI2231369737);
    var last_2818573993 = nimCopy(null, colontmp__2818584506["Field1"], NTI2231369737);
    if ((first_2818573992.Field0 == last_2818573993.Field0)) {
    result_2818573991 = nimCopy(null, HEX5BHEX5D_855639291(self_2818573989.lines[chckIndx(first_2818573992.Field0, 0, (self_2818573989.lines).length - 1)], HEX2EHEX2E_805306418(first_2818573992.Field1, subInt(last_2818573993.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2818573991 = nimCopy(null, HEX5BHEX5D_855639319(self_2818573989.lines[chckIndx(first_2818573992.Field0, 0, (self_2818573989.lines).length - 1)], HEX2EHEX2E_1040187488(first_2818573992.Field1, 1)), NTI33554449);
    Label1: {
      var i_2818574040 = 0;
      var colontmp__2818584503 = 0;
      colontmp__2818584503 = addInt(first_2818573992.Field0, 1);
      var i_2818584504 = colontmp__2818584503;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584504 < last_2818573993.Field0)) break Label3;
            i_2818574040 = i_2818584504;
            result_2818573991.push.apply(result_2818573991, [10]);;
            result_2818573991.push.apply(result_2818573991, self_2818573989.lines[chckIndx(i_2818574040, 0, (self_2818573989.lines).length - 1)]);;
            i_2818584504 = addInt(i_2818584504, 1);
          }
      };
    };
    result_2818573991.push.apply(result_2818573991, [10]);;
    result_2818573991.push.apply(result_2818573991, HEX5BHEX5D_855639291(self_2818573989.lines[chckIndx(last_2818573993.Field0, 0, (self_2818573989.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2818573993.Field1, 1))));;
  };

  return result_2818573991;

}

function delete_2818578859(s_2818578861, s_2818578861_Idx, slice_2818578862) {
    if (!((((slice_2818578862.a < (s_2818578861[s_2818578861_Idx]).length) && (0 <= slice_2818578862.a)) && (slice_2818578862.b < (s_2818578861[s_2818578861_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2818578862, NTI805306392), Field1: (s_2818578861[s_2818578861_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2818578862.a <= slice_2818578862.b)) {
    var n_2818578909 = addInt(subInt(slice_2818578862.b, slice_2818578862.a), 1);
    var first_2818578910 = slice_2818578862.a;
    s_2818578861[s_2818578861_Idx].splice(first_2818578910, n_2818578909);
    }
    

  
}

function subtract_2231370229(cursor_2231370230, selection_2231370231) {
  var result_2231370232 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(cursor_2231370230, selection_2231370231.Field0)) {
    result_2231370232 = nimCopy(result_2231370232, cursor_2231370230, NTI2231369737);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2231370071(cursor_2231370230, selection_2231370231.Field1)) {
    result_2231370232 = nimCopy(result_2231370232, selection_2231370231.Field0, NTI2231369737);
    break BeforeRet;
    }
    
    if ((cursor_2231370230.Field0 == selection_2231370231.Field1.Field0)) {
    if ((selection_2231370231.Field0.Field0 == selection_2231370231.Field1.Field0)) {
    var colontmp__2818584514 = cursor_2231370230.Field0;
    var colontmp__2818584515 = subInt(cursor_2231370230.Field1, subInt(selection_2231370231.Field1.Field1, selection_2231370231.Field0.Field1));
    result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2818584514, Field1: colontmp__2818584515}, NTI2231369737);
    break BeforeRet;
    }
    else {
      var colontmp__2818584516 = selection_2231370231.Field0.Field0;
      var colontmp__2818584517 = addInt(selection_2231370231.Field0.Field1, subInt(cursor_2231370230.Field1, selection_2231370231.Field1.Field1));
      result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2818584516, Field1: colontmp__2818584517}, NTI2231369737);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2818584518 = subInt(cursor_2231370230.Field0, subInt(selection_2231370231.Field1.Field0, selection_2231370231.Field0.Field0));
    var colontmp__2818584519 = cursor_2231370230.Field1;
    result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2818584518, Field1: colontmp__2818584519}, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370232;

}

function subtract_2231370241(self_2231370242, other_2231370243) {
  var result_2231370244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2818584512 = subtract_2231370229(self_2231370242.Field0, other_2231370243);
    var colontmp__2818584513 = subtract_2231370229(self_2231370242.Field1, other_2231370243);
    result_2231370244 = nimCopy(result_2231370244, {Field0: nimCopy(null, colontmp__2818584512, NTI2231369737), Field1: nimCopy(null, colontmp__2818584513, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370244;

}

function invoke_2818578968(event_2818578970, arg_2818578971) {
    Label1: {
      var h_2818578994 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2818584522 = 0;
      var L_2818584523 = (event_2818578970.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584522 < L_2818584523)) break Label3;
            h_2818578994 = event_2818578970.handlers[chckIndx(i_2818584522, 0, (event_2818578970.handlers).length - 1)];
            h_2818578994.Field1(arg_2818578971);
            i_2818584522 = addInt(i_2818584522, 1);
            if (!(((event_2818578970.handlers).length == L_2818584523))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2818578743(self_2818578744, selections_2818578745, oldSelection_2818578746, notify_2818578747, record_2818578748) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2818578749 = [];

    result_2818578749 = nimCopy(null, clampAndMergeSelections_2818572707(self_2818578744, selections_2818578745), NTI2231369747);
    var undoOp_2818578773 = {kind: 2, children: [], oldSelection: HEX40_2818578750(oldSelection_2818578746), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2818578806 = 0;
      var selection_2818578807 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818584497 = 0;
      var L_2818584498 = (result_2818578749).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818584497 < L_2818584498)) break Label3;
            i_2818578806 = i_2818584497;
            selection_2818578807 = nimCopy(selection_2818578807, result_2818578749[chckIndx(i_2818584497, 0, (result_2818578749).length - 1)], NTI2231369739);
            Label4: {
              if (isEmpty_2231370100(selection_2818578807)) {
              break Label4;
              }
              
              var selection_2818578808 = normalized_2231370094(selection_2818578807);
              var startByte_2818578809 = byteOffset_2818578730(self_2818578744, selection_2818578808.Field0);
              var endByte_2818578810 = byteOffset_2818578730(self_2818578744, selection_2818578808.Field1);
              var deletedText_2818578811 = contentString_2818573988(self_2818578744, selection_2818578808);
              var colontmp__2818584510 = normalized_2231370094(selection_2818578808);
              var first_2818578812 = nimCopy(null, colontmp__2818584510["Field0"], NTI2231369737);
              var last_2818578813 = nimCopy(null, colontmp__2818584510["Field1"], NTI2231369737);
              if ((first_2818578812.Field0 == last_2818578813.Field0)) {
              delete_855639365(self_2818578744.lines, chckIndx(last_2818578813.Field0, 0, (self_2818578744.lines).length - 1), HEX2EHEX2E_805306418(first_2818578812.Field1, subInt(last_2818578813.Field1, 1)));
              }
              else {
                if ((first_2818578812.Field1 < lineLength_2818572660(self_2818578744, first_2818578812.Field0))) {
                delete_855639365(self_2818578744.lines, chckIndx(first_2818578812.Field0, 0, (self_2818578744.lines).length - 1), HEX2EHEX2E_805306418(first_2818578812.Field1, subInt(lineLength_2818572660(self_2818578744, first_2818578812.Field0), 1)));
                }
                
                self_2818578744.lines[chckIndx(first_2818578812.Field0, 0, (self_2818578744.lines).length - 1)].push.apply(self_2818578744.lines[chckIndx(first_2818578812.Field0, 0, (self_2818578744.lines).length - 1)], HEX5BHEX5D_855639319(self_2818578744.lines[chckIndx(last_2818578813.Field0, 0, (self_2818578744.lines).length - 1)], HEX2EHEX2E_1040187488(last_2818578813.Field1, 1)));;
                delete_2818578859(self_2818578744, "lines", HEX2EHEX2E_805306418(addInt(first_2818578812.Field0, 1), last_2818578813.Field0));
              }
              
              result_2818578749[chckIndx(i_2818578806, 0, (result_2818578749).length - 1)] = nimCopy(result_2818578749[chckIndx(i_2818578806, 0, (result_2818578749).length - 1)], toSelection_2231370221(selection_2818578808.Field0), NTI2231369739);
              Label5: {
                var k_2818578918 = 0;
                var colontmp__2818584493 = 0;
                var colontmp__2818584494 = 0;
                colontmp__2818584493 = addInt(i_2818578806, 1);
                colontmp__2818584494 = (result_2818578749).length - 1;
                var res_2818584495 = colontmp__2818584493;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2818584495 <= colontmp__2818584494)) break Label7;
                      k_2818578918 = res_2818584495;
                      result_2818578749[chckIndx(k_2818578918, 0, (result_2818578749).length - 1)] = nimCopy(result_2818578749[chckIndx(k_2818578918, 0, (result_2818578749).length - 1)], subtract_2231370241(result_2818578749[chckIndx(k_2818578918, 0, (result_2818578749).length - 1)], selection_2818578808), NTI2231369739);
                      res_2818584495 = addInt(res_2818584495, 1);
                    }
                };
              };
              if (!((self_2818578744.tsParser == null))) {
              var edit_2818578922 = {startIndex: startByte_2818578809, oldEndIndex: endByte_2818578810, newEndIndex: startByte_2818578809, startPosition: {row: selection_2818578808.Field0.Field0, column: selection_2818578808.Field0.Field1, m_type: NTI2885681166}, oldEndPosition: {row: selection_2818578808.Field1.Field0, column: selection_2818578808.Field1.Field1, m_type: NTI2885681166}, newEndPosition: {row: selection_2818578808.Field0.Field0, column: selection_2818578808.Field0.Field1, m_type: NTI2885681166}, m_type: NTI2885681176};
              var _ = self_2818578744.currentTree.edit(edit_2818578922);
              var strValue_2818578923 = nsuJoinSep(self_2818578744.lines, [10]);
              self_2818578744.currentTree = parseString_2885681211(self_2818578744.tsParser, strValue_2818578923, some_2818578924(self_2818578744.currentTree));
              }
              
              self_2818578744.version = addInt(self_2818578744.version, 1);
              if (record_2818578748) {
              var Temporary8 = undoOp_2818578773;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2818578808.Field0, NTI2231369737), text: nimCopy(null, deletedText_2818578811, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2818578747) {
              invoke_2818578968(self_2818578744.textDeleted, {Field0: self_2818578744, Field1: nimCopy(null, selection_2818578808, NTI2231369739)});
              }
              
            };
            i_2818584497 = addInt(i_2818584497, 1);
            if (!(((result_2818578749).length == L_2818584498))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2818578747) {
    notifyTextChanged_2818573211(self_2818578744);
    }
    
      if (!record_2818578748) Temporary9 = false; else {        var Temporary10 = undoOp_2818578773;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2818572291)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2818578744.undoOps.push(undoOp_2818578773);;
    self_2818578744.redoOps = nimCopy(null, [], NTI2818575703);
    }
    

  return result_2818578749;

}

function delete_2818584415(self_2818584416, selections_2818584417, notify_2818584418, record_2818584419) {
  var result_2818584420 = [];

  BeforeRet: {
    result_2818584420 = nimCopy(null, delete_2818578743(self_2818584416.document, selections_2818584417, selections_2818572789(self_2818584416), notify_2818584418, record_2818584419), NTI2818575674);
    break BeforeRet;
  };

  return result_2818584420;

}

function deleteJsWrapper_2818584411(self_2818584452, selections_2818584453, notify_2818584454, record_2818584455) {
  var result_2818584456 = [];

    result_2818584456 = nimCopy(null, delete_2818584415(self_2818584452, selections_2818584453, notify_2818584454, record_2818584455), NTI2818579270);

  return result_2818584456;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2818584411(this, selections_, notify_, record_));};

function popLast_2818584642(deq_2818584644) {
    var Temporary1;

  var result_2818584645 = [];

    if ((deq_2818584644.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2818584644.count = subInt(deq_2818584644.count, 1);
    deq_2818584644.tail = (subInt(deq_2818584644.tail, 1) & deq_2818584644.mask);
    Temporary1 = deq_2818584644.data[chckIndx(deq_2818584644.tail, 0, (deq_2818584644.data).length - 1)];
    deq_2818584644.data[chckIndx(deq_2818584644.tail, 0, (deq_2818584644.data).length - 1)] = genericReset(deq_2818584644.data[chckIndx(deq_2818584644.tail, 0, (deq_2818584644.data).length - 1)], NTI2231369747);
    result_2818584645 = nimCopy(null, Temporary1, NTI2231369747);

  return result_2818584645;

}

function addFirst_2818584661(deq_2818584663, item_2818584664) {
    expandIfNeeded_2818572822(deq_2818584663);
    deq_2818584663.count = addInt(deq_2818584663.count, 1);
    deq_2818584663.head = (subInt(deq_2818584663.head, 1) & deq_2818584663.mask);
    deq_2818584663.data[chckIndx(deq_2818584663.head, 0, (deq_2818584663.data).length - 1)] = nimCopy(null, item_2818584664, NTI2231369747);

  
}

function totalLineHeight_2315255975(self_2315255976) {
  var result_2315255977 = 0.0;

    result_2315255977 = (lineHeight_2315255962(self_2315255976) + lineDistance_2315255957(self_2315255976));

  return result_2315255977;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2818582750(editor_2818582752, path_2818582753, default_2818582754) {
  var result_2818582760 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818582752 == null)) {
      result_2818582760 = default_2818582754;
      break BeforeRet;
      }
      
      var nodeHEX60gensym154_2818582773 = HEX7BHEX7D_1627393316(editor_2818582752.options, nsuSplitString(path_2818582753, [46], -1));
      if ((nodeHEX60gensym154_2818582773 == null)) {
      result_2818582760 = default_2818582754;
      break BeforeRet;
      }
      
    };
    result_2818582760 = getFloat_1627390140(nodeHEX60gensym154_2818582773, default_2818582754);
    break BeforeRet;
  };

  return result_2818582760;

}

function clamp_2449473689(x_2449473691, a_2449473692, b_2449473693) {
  var result_2449473694 = 0.0;

  BeforeRet: {
    if ((x_2449473691 < a_2449473692)) {
    result_2449473694 = a_2449473692;
    break BeforeRet;
    }
    
    if ((b_2449473693 < x_2449473691)) {
    result_2449473694 = b_2449473693;
    break BeforeRet;
    }
    
    result_2449473694 = x_2449473691;
    break BeforeRet;
  };

  return result_2449473694;

}

function scrollToCursor_2818582742(self_2818582743, cursor_2818582744, keepVerticalOffset_2818582745) {
    var Temporary1;

    var targetLine_2818582746 = cursor_2818582744.Field0;
    if (!((self_2818582743.editor.platform == null))) {
    Temporary1 = totalLineHeight_2315255975(self_2818582743.editor.platform);
    }
    else {
    Temporary1 = (lineHeight_2315255962(self_2818582743.editor.platform) + getOption_2818582750(self_2818582743.editor, [116,101,120,116,46,108,105,110,101,45,100,105,115,116,97,110,99,101], 0.0));
    }
    
    var totalLineHeight_2818582777 = Temporary1;
    if (keepVerticalOffset_2818582745) {
    var currentLineY_2818582778 = ((subInt(selection_2818572792(self_2818582743).Field1.Field0, self_2818582743.previousBaseIndex) * totalLineHeight_2818582777) + self_2818582743.scrollOffset);
    self_2818582743.previousBaseIndex = targetLine_2818582746;
    self_2818582743.scrollOffset = currentLineY_2818582778;
    }
    else {
      var targetLineY_2818582779 = ((subInt(targetLine_2818582746, self_2818582743.previousBaseIndex) * totalLineHeight_2818582777) + self_2818582743.scrollOffset);
      var margin_2818582794 = clamp_2449473689(getOption_2818582750(self_2818582743.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2818582743.lastContentBounds.h * 0.5) - (totalLineHeight_2818582777 * 0.5)));
      if ((targetLineY_2818582779 < margin_2818582794)) {
      self_2818582743.scrollOffset = margin_2818582794;
      self_2818582743.previousBaseIndex = targetLine_2818582746;
      }
      else {
      if (((self_2818582743.lastContentBounds.h - margin_2818582794) < (targetLineY_2818582779 + totalLineHeight_2818582777))) {
      self_2818582743.scrollOffset = ((self_2818582743.lastContentBounds.h - margin_2818582794) - totalLineHeight_2818582777);
      self_2818582743.previousBaseIndex = targetLine_2818582746;
      }
      }
    }
    
    markDirty_2147483686(self_2818582743);

  
}

function selectPrev_2818584531(self_2818584532) {
    if ((0 < len_2818572952(self_2818584532.selectionHistory))) {
    var selection_2818584655 = popLast_2818584642(self_2818584532.selectionHistory);
    addFirst_2818584661(self_2818584532.selectionHistory, selections_2818572789(self_2818584532));
    self_2818584532.selectionsInternal = nimCopy(null, selection_2818584655, NTI2231369747);
    }
    
    scrollToCursor_2818582742(self_2818584532, selection_2818572792(self_2818584532).Field1, false);

  
}

function selectPrevJsWrapper_2818584527(self_2818584705) {
    selectPrev_2818584531(self_2818584705);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2818584527(this));};

function selectNext_2818584727(self_2818584728) {
    if ((0 < len_2818572952(self_2818584728.selectionHistory))) {
    var selection_2818584841 = popFirst_2818573013(self_2818584728.selectionHistory);
    addLast_2818572813(self_2818584728.selectionHistory, selections_2818572789(self_2818584728));
    self_2818584728.selectionsInternal = nimCopy(null, selection_2818584841, NTI2231369747);
    }
    
    scrollToCursor_2818582742(self_2818584728, selection_2818572792(self_2818584728).Field1, false);

  
}

function selectNextJsWrapper_2818584723(self_2818584878) {
    selectNext_2818584727(self_2818584878);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2818584723(this));};

function re_2852126779(text_2852126780) {
  var result_2852126781 = ({impl: null});

  BeforeRet: {
    result_2852126781 = nimCopy(result_2852126781, {impl: new RegExp(toJSStr(text_2852126780), "dg")}, NTI2852126723);
    break BeforeRet;
  };

  return result_2852126781;

}

function matchLen_2852126756(text_2852126757, regex_2852126758, start_2852126759) {
  var result_2852126760 = 0;

    regex_2852126758.impl.lastIndex = 0;
    result_2852126760 = ((regex_2852126758.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126757, HEX2EHEX2E_1040187488(start_2852126759, 1))))) || {index:-1}).index;

  return result_2852126760;

}

function selectInside_2818584899(self_2818584900, cursor_2818584901) {
    var regex_2818584902 = re_2852126779([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2818584903 = cursor_2818584901.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2818584903) && (matchLen_2852126756(self_2818584900.document.lines[chckIndx(cursor_2818584901.Field0, 0, (self_2818584900.document.lines).length - 1)], regex_2818584902, subInt(first_2818584903, 1)) == 1))) break Label2;
          first_2818584903 = subInt(first_2818584903, 1);
        }
    };
    var last_2818584908 = cursor_2818584901.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2818584908 < (self_2818584900.document.lines[chckIndx(cursor_2818584901.Field0, 0, (self_2818584900.document.lines).length - 1)]).length) && (matchLen_2852126756(self_2818584900.document.lines[chckIndx(cursor_2818584901.Field0, 0, (self_2818584900.document.lines).length - 1)], regex_2818584902, last_2818584908) == 1))) break Label4;
          last_2818584908 = addInt(last_2818584908, 1);
        }
    };
    selectionHEX3D_2818572798(self_2818584900, {Field0: {Field0: cursor_2818584901.Field0, Field1: first_2818584903}, Field1: {Field0: cursor_2818584901.Field0, Field1: last_2818584908}});

  
}

function selectInsideJsWrapper_2818584895(self_2818584941, cursor_2818584942) {
    selectInside_2818584899(self_2818584941, cursor_2818584942);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2818584895(this, cursor_));};

function selectInsideCurrent_2818584976(self_2818584977) {
    selectInside_2818584899(self_2818584977, selection_2818572792(self_2818584977).Field1);

  
}

function selectInsideCurrentJsWrapper_2818584972(self_2818585005) {
    selectInsideCurrent_2818584976(self_2818585005);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2818584972(this));};

function lineLength_2818572667(self_2818572668, line_2818572669) {
  var result_2818572670 = 0;

  BeforeRet: {
    if ((line_2818572669 < (self_2818572668.document.lines).length)) {
    result_2818572670 = (self_2818572668.document.lines[chckIndx(line_2818572669, 0, (self_2818572668.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2818572670 = 0;
    break BeforeRet;
  };

  return result_2818572670;

}

function selectLine_2818585026(self_2818585027, line_2818585028) {
    selectionHEX3D_2818572798(self_2818585027, {Field0: {Field0: line_2818585028, Field1: 0}, Field1: {Field0: line_2818585028, Field1: lineLength_2818572667(self_2818585027, line_2818585028)}});

  
}

function selectLineJsWrapper_2818585022(self_2818585057, line_2818585058) {
    selectLine_2818585026(self_2818585057, line_2818585058);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2818585022(this, line_));};

function selectLineCurrent_2818585084(self_2818585085) {
    selectLine_2818585026(self_2818585085, selection_2818572792(self_2818585085).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2818585080(self_2818585113) {
    selectLineCurrent_2818585084(self_2818585113);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2818585080(this));};

function toTsPoint_2885681339(cursor_2885681340) {
  var result_2885681341 = null;

    result_2885681341 = {row: cursor_2885681340.Field0, column: cursor_2885681340.Field1, m_type: NTI2885681166};

  return result_2885681341;

}

function descendantForRange_2885681405(node_2885681406, selection_2885681407) {
  var result_2885681408 = null;

    result_2885681408 = node_2885681406.descendantForPosition(toTsPoint_2885681339(selection_2885681407.Field0), toTsPoint_2885681339(selection_2885681407.Field1));

  return result_2885681408;

}

function startPoint_2885681328(node_2885681329) {
  var result_2885681330 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681331 = node_2885681329.startPosition;
    var colontmp__2818585207 = point_2885681331.row;
    var colontmp__2818585208 = point_2885681331.column;
    result_2885681330 = nimCopy(result_2885681330, {Field0: colontmp__2818585207, Field1: colontmp__2818585208}, NTI2231369737);
    break BeforeRet;
  };

  return result_2885681330;

}

function endPoint_2885681332(node_2885681333) {
  var result_2885681334 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2885681335 = node_2885681333.endPosition;
    var colontmp__2818585209 = point_2885681335.row;
    var colontmp__2818585210 = point_2885681335.column;
    result_2885681334 = nimCopy(result_2885681334, {Field0: colontmp__2818585209, Field1: colontmp__2818585210}, NTI2231369737);
    break BeforeRet;
  };

  return result_2885681334;

}

function getRange_2885681336(node_2885681337) {
  var result_2885681338 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818585205 = startPoint_2885681328(node_2885681337);
    var colontmp__2818585206 = endPoint_2885681332(node_2885681337);
    result_2885681338 = nimCopy(result_2885681338, {Field0: nimCopy(null, colontmp__2818585205, NTI2231369737), Field1: nimCopy(null, colontmp__2818585206, NTI2231369737)}, NTI2231369739);

  return result_2885681338;

}

function selectParentTs_2818585134(self_2818585135, selection_2818585136) {
  BeforeRet: {
    if ((self_2818585135.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2818585140 = descendantForRange_2885681405(self_2818585135.document.currentTree.rootNode, selection_2818585136);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2231369791(getRange_2885681336(node_2818585140), selection_2818585136) && !((node_2818585140 == self_2818585135.document.currentTree.rootNode)))) break Label2;
          node_2818585140 = node_2818585140.parent;
        }
    };
    selectionHEX3D_2818572798(self_2818585135, getRange_2885681336(node_2818585140));
  };

  
}

function selectParentTsJsWrapper_2818585130(self_2818585177, selection_2818585178) {
    selectParentTs_2818585134(self_2818585177, selection_2818585178);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2818585130(this, selection_));};

function selectParentCurrentTs_2818585217(self_2818585218) {
    selectParentTs_2818585134(self_2818585218, selection_2818572792(self_2818585218));

  
}

function selectParentCurrentTsJsWrapper_2818585213(self_2818585246) {
    selectParentCurrentTs_2818585217(self_2818585246);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2818585213(this));};

function newSeq_2231369874(len_2231369876) {
  var result_2231369877 = [];

    result_2231369877 = new Array(len_2231369876); for (var i = 0 ; i < len_2231369876 ; ++i) { result_2231369877[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2231369877;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2231369903(a_2231369905, b_2231369906, lo_2231369907, m_2231369908, hi_2231369909, cmp_2231369912, order_2231369913) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2231369912(a_2231369905[chckIndx(m_2231369908, 0, (a_2231369905).length - 1)], a_2231369905[chckIndx(addInt(m_2231369908, 1), 0, (a_2231369905).length - 1)]), order_2231369913) <= 0)) {
    break BeforeRet;
    }
    
    var j_2231369914 = lo_2231369907;
    if (!((j_2231369914 <= m_2231369908))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2231369920 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2231369914 <= m_2231369908)) break Label2;
          b_2231369906[chckIndx(bb_2231369920, 0, (b_2231369906).length - 1)] = nimCopy(b_2231369906[chckIndx(bb_2231369920, 0, (b_2231369906).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)], NTI2231369739);
          bb_2231369920 = addInt(bb_2231369920, 1);
          j_2231369914 = addInt(j_2231369914, 1);
        }
    };
    var i_2231369931 = 0;
    var k_2231369932 = lo_2231369907;
    Label3: {
        Label4: while (true) {
        if (!((k_2231369932 < j_2231369914) && (j_2231369914 <= hi_2231369909))) break Label4;
          if ((HEX2A_1023410184(cmp_2231369912(b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)]), order_2231369913) <= 0)) {
          a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], NTI2231369739);
          i_2231369931 = addInt(i_2231369931, 1);
          }
          else {
            a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)], NTI2231369739);
            j_2231369914 = addInt(j_2231369914, 1);
          }
          
          k_2231369932 = addInt(k_2231369932, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2231369932 < j_2231369914)) break Label6;
          a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], NTI2231369739);
          k_2231369932 = addInt(k_2231369932, 1);
          i_2231369931 = addInt(i_2231369931, 1);
        }
    };
  };

  
}

function sort_2231369862(a_2231369864, cmp_2231369867, order_2231369868) {
    var n_2231369873 = (a_2231369864).length;
    var b_2231369900 = newSeq_2231369874(chckRange(divInt(n_2231369873, 2), 0, 2147483647));
    var s_2231369901 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2231369901 < n_2231369873)) break Label2;
          var m_2231369902 = subInt(subInt(n_2231369873, 1), s_2231369901);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2231369902)) break Label4;
                mergeAlt_2231369903(a_2231369864, b_2231369900, nimMax(addInt(subInt(m_2231369902, s_2231369901), 1), 0), m_2231369902, addInt(m_2231369902, s_2231369901), cmp_2231369867, order_2231369868);
                m_2231369902 = subInt(m_2231369902, mulInt(s_2231369901, 2));
              }
          };
          s_2231369901 = mulInt(s_2231369901, 2);
        }
    };

  
}

function sorted_2231370004(a_2231370006, cmp_2231370009, order_2231370010) {
  var result_2231370011 = [];

    result_2231370011 = nimCopy(null, newSeq_2231369874(chckRange((a_2231370006).length, 0, 2147483647)), NTI2231369787);
    Label1: {
      var i_2231370025 = 0;
      var colontmp__2818585324 = 0;
      colontmp__2818585324 = (a_2231370006).length - 1;
      var res_2818585325 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585325 <= colontmp__2818585324)) break Label3;
            i_2231370025 = res_2818585325;
            result_2231370011[chckIndx(i_2231370025, 0, (result_2231370011).length - 1)] = nimCopy(result_2231370011[chckIndx(i_2231370025, 0, (result_2231370011).length - 1)], a_2231370006[chckIndx(i_2231370025, 0, (a_2231370006).length - 1)], NTI2231369739);
            res_2818585325 = addInt(res_2818585325, 1);
          }
      };
    };
    sort_2231369862(result_2231370011, cmp_2231370009, order_2231370010);

  return result_2231370011;

}

function HEX3C_2231369834(x_2231369836, y_2231369837) {
  var result_2231369838 = false;

  BeforeRet: {
    var c_2231369848 = cmp_33557727(x_2231369836["Field0"], y_2231369837["Field0"]);
    if ((c_2231369848 < 0)) {
    result_2231369838 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369848)) {
    result_2231369838 = false;
    break BeforeRet;
    }
    
    var c_2231369853 = cmp_33557727(x_2231369836["Field1"], y_2231369837["Field1"]);
    if ((c_2231369853 < 0)) {
    result_2231369838 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369853)) {
    result_2231369838 = false;
    break BeforeRet;
    }
    
    result_2231369838 = false;
    break BeforeRet;
  };

  return result_2231369838;

}

function cmp_2231369825(x_2231369827, y_2231369828) {
  var result_2231369829 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2231369801(x_2231369827, y_2231369828)) {
    result_2231369829 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2231369834(x_2231369827, y_2231369828)) {
    result_2231369829 = -1;
    break BeforeRet;
    }
    
    result_2231369829 = 1;
    break BeforeRet;
  };

  return result_2231369829;

}

function HEX3C_2231369815(x_2231369817, y_2231369818) {
  var result_2231369819 = false;

  BeforeRet: {
    var c_2231369854 = cmp_2231369825(x_2231369817["Field0"], y_2231369818["Field0"]);
    if ((c_2231369854 < 0)) {
    result_2231369819 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369854)) {
    result_2231369819 = false;
    break BeforeRet;
    }
    
    var c_2231369859 = cmp_2231369825(x_2231369817["Field1"], y_2231369818["Field1"]);
    if ((c_2231369859 < 0)) {
    result_2231369819 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369859)) {
    result_2231369819 = false;
    break BeforeRet;
    }
    
    result_2231369819 = false;
    break BeforeRet;
  };

  return result_2231369819;

}

function cmp_2231369786(x_2231369788, y_2231369789) {
  var result_2231369790 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2231369791(x_2231369788, y_2231369789)) {
    result_2231369790 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2231369815(x_2231369788, y_2231369789)) {
    result_2231369790 = -1;
    break BeforeRet;
    }
    
    result_2231369790 = 1;
    break BeforeRet;
  };

  return result_2231369790;

}

function sorted_2231369993(a_2231369995, order_2231369996) {
  var result_2231369997 = [];

    result_2231369997 = nimCopy(null, sorted_2231370004(a_2231369995, cmp_2231369786, order_2231369996), NTI2231369867);

  return result_2231369997;

}

function normalized_2231369990(self_2231369991) {
  var result_2231369992 = [];

  BeforeRet: {
    result_2231369992 = nimCopy(null, sorted_2231369993(self_2231369991, 1), NTI2231369858);
    break BeforeRet;
  };

  return result_2231369992;

}

function HEX3DHEX3D_2818573051(x_2818573053, y_2818573054) {
  var result_2818573055 = false;

  BeforeRet: {
    var sameObject_2818573062 = false;
    sameObject_2818573062 = x_2818573053 === y_2818573054
    if (sameObject_2818573062) {
    result_2818573055 = true;
    break BeforeRet;
    }
    
    if (!(((x_2818573053).length == (y_2818573054).length))) {
    result_2818573055 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2818573076 = 0;
      var colontmp__2818585333 = 0;
      colontmp__2818585333 = subInt((x_2818573053).length, 1);
      var res_2818585334 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585334 <= colontmp__2818585333)) break Label3;
            i_2818573076 = res_2818585334;
            if (!(HEX3DHEX3D_2231369791(x_2818573053[chckIndx(i_2818573076, 0, (x_2818573053).length - 1)], y_2818573054[chckIndx(i_2818573076, 0, (y_2818573054).length - 1)]))) {
            result_2818573055 = false;
            break BeforeRet;
            }
            
            res_2818585334 = addInt(res_2818585334, 1);
          }
      };
    };
    result_2818573055 = true;
    break BeforeRet;
  };

  return result_2818573055;

}

function clampAndMergeSelections_2818572785(self_2818572786, selections_2818572787) {
  var result_2818572788 = [];

    result_2818572788 = nimCopy(null, clampAndMergeSelections_2818572707(self_2818572786.document, selections_2818572787), NTI2231369747);

  return result_2818572788;

}

function selectionsHEX3D_2818573048(self_2818573049, selections_2818573050) {
  BeforeRet: {
    if (HEX3DHEX3D_2818573051(self_2818573049.selectionsInternal, selections_2818573050)) {
    break BeforeRet;
    }
    
    addLast_2818572813(self_2818573049.selectionHistory, self_2818573049.selectionsInternal);
    if ((100 < len_2818572952(self_2818573049.selectionHistory))) {
    var _ = popFirst_2818573013(self_2818573049.selectionHistory);
    }
    
    self_2818573049.selectionsInternal = nimCopy(null, clampAndMergeSelections_2818572785(self_2818573049, selections_2818573050), NTI2231369747);
    if (((self_2818573049.selectionsInternal).length == 0)) {
    self_2818573049.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2231370221({Field0: 0, Field1: 0}), NTI2231369739)], NTI2818572804);
    }
    
    markDirty_2147483686(self_2818573049);
  };

  
}

function edit_2818579466(self_2818579467, selections_2818579468, oldSelection_2818579469, text_2818579470, notify_2818579471) {
    
function HEX3Aanonymous_2818579473(s_2818579481) {
      var result_2818579484 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818579484 = nimCopy(result_2818579484, normalized_2231370094(s_2818579481), NTI2231369739);

      return result_2818579484;

    }

  var result_2818579472 = [];

    var selections_2818579492 = map_2818572722(selections_2818579468, HEX3Aanonymous_2818579473);
    result_2818579472 = nimCopy(null, delete_2818578743(self_2818579467, selections_2818579492, oldSelection_2818579469, false, true), NTI2818575674);
    result_2818579472 = nimCopy(null, insert_2818579249(self_2818579467, result_2818579472, oldSelection_2818579469, text_2818579470, true, true, true), NTI2818576035);

  return result_2818579472;

}

function insertText_2818585270(self_2818585271, text_2818585272) {
  BeforeRet: {
    if ((self_2818585271.document.singleLine && eqStrings(text_2818585272, [10]))) {
    break BeforeRet;
    }
    
    var selections_2818585273 = normalized_2231369990(selections_2818572789(self_2818585271));
    selectionsHEX3D_2818573048(self_2818585271, edit_2818579466(self_2818585271.document, selections_2818572789(self_2818585271), selections_2818572789(self_2818585271), text_2818585272, true));
    updateTargetColumn_2818583734(self_2818585271, 3);
    if ((eqStrings(text_2818585272, [46]) || eqStrings(text_2818585272, [44]))) {
    self_2818585271.showCompletions = true;
    var _ = getCompletionsAsync_2818585261(self_2818585271);
    }
    else {
    if (self_2818585271.showCompletions) {
    var _ = getCompletionsAsync_2818585261(self_2818585271);
    }
    }
  };

  
}

function insertTextJsWrapper_2818585266(self_2818585302, text_2818585303) {
    insertText_2818585270(self_2818585302, text_2818585303);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2818585266(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2818579561() {
  var result_2818579568 = ({val: [], has: false});

  return result_2818579568;

}

function pop_2818579572(s_2818579574, s_2818579574_Idx) {
  var result_2818579575 = null;

    var L_2818579579 = subInt((s_2818579574[s_2818579574_Idx]).length, 1);
    result_2818579575 = s_2818579574[s_2818579574_Idx][chckIndx(L_2818579579, 0, (s_2818579574[s_2818579574_Idx]).length - 1)];
    if (s_2818579574[s_2818579574_Idx].length < chckRange(L_2818579579, 0, 2147483647)) { for (var i = s_2818579574[s_2818579574_Idx].length ; i < chckRange(L_2818579579, 0, 2147483647) ; ++i) s_2818579574[s_2818579574_Idx].push(null); }
               else { s_2818579574[s_2818579574_Idx].length = chckRange(L_2818579579, 0, 2147483647); };

  return result_2818579575;

}

function some_2818579585(val_2818579587) {
  var result_2818579588 = ({val: [], has: false});

    result_2818579588.has = true;
    result_2818579588.val = nimCopy(null, val_2818579587, NTI2818576220);

  return result_2818579588;

}

function doUndo_2818579502(document_2818579503, op_2818579504, oldSelection_2818579505, useOldSelection_2818579506, redoOps_2818579507, redoOps_2818579507_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2818579508 = [];

    switch (op_2818579504.kind) {
    case 0:
      var Temporary1 = op_2818579504;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818579509 = contentString_2818573988(document_2818579503, Temporary1.selection);
      var Temporary2 = op_2818579504;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818579508 = nimCopy(null, delete_2818578743(document_2818579503, [nimCopy(null, Temporary2.selection, NTI2231369739)], op_2818579504.oldSelection, true, false), NTI2818575674);
      var Temporary3 = op_2818579504;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      redoOps_2818579507[redoOps_2818579507_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2231369737), text: nimCopy(null, text_2818579509, NTI33554449), oldSelection: HEX40_2818578750(oldSelection_2818579505), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818579504;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818579504;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var selections_2818579517 = insert_2818579249(document_2818579503, [nimCopy(null, toSelection_2231370221(Temporary4.cursor), NTI2231369739)], op_2818579504.oldSelection, Temporary5.text, true, false, false);
      result_2818579508 = nimCopy(null, selections_2818579517, NTI2818576035);
      var Temporary6 = op_2818579504;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      redoOps_2818579507[redoOps_2818579507_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2231369737), Field1: nimCopy(null, selections_2818579517[chckIndx(0, 0, (selections_2818579517).length - 1)].Field1, NTI2231369737)}, NTI2231369739), oldSelection: HEX40_2818578750(oldSelection_2818579505), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818579508 = nimCopy(null, op_2818579504.oldSelection, NTI2818572295);
      var redoOp_2818579528 = {kind: 2, oldSelection: HEX40_2818578750(oldSelection_2818579505), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2818579537 = 0;
        var colontmp__2818585435 = 0;
        var Temporary8 = op_2818579504;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2818572291)); }
        colontmp__2818585435 = (Temporary8.children).length - 1;
        var res_2818585436 = colontmp__2818585435;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2818585436)) break Label10;
              i_2818579537 = res_2818585436;
              var Temporary11 = op_2818579504;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2818572291)); }
              var Temporary13 = redoOp_2818579528;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2818572291)); }
              var _ = doUndo_2818579502(document_2818579503, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2818579537, 0, (Temporary12).length - 1)], oldSelection_2818579505, useOldSelection_2818579506, Temporary13, "children");
              res_2818585436 = subInt(res_2818585436, 1);
            }
        };
      };
      redoOps_2818579507[redoOps_2818579507_Idx].push(redoOp_2818579528);;
      break;
    }
    if (useOldSelection_2818579506) {
    result_2818579508 = nimCopy(null, op_2818579504.oldSelection, NTI2818572295);
    }
    

  return result_2818579508;

}

function undo_2818579551(document_2818579552, oldSelection_2818579553, useOldSelection_2818579554) {
  var result_2818579560 = ({val: [], has: false});

  BeforeRet: {
    result_2818579560 = nimCopy(result_2818579560, none_2818579561(), NTI2818576295);
    if (((document_2818579552.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818579584 = pop_2818579572(document_2818579552, "undoOps");
    result_2818579560 = nimCopy(result_2818579560, some_2818579585(doUndo_2818579502(document_2818579552, op_2818579584, oldSelection_2818579553, useOldSelection_2818579554, document_2818579552, "redoOps")), NTI2818576295);
    break BeforeRet;
  };

  return result_2818579560;

}

function isSome_2818585351(self_2818585353) {
  var result_2818585354 = false;

    result_2818585354 = self_2818585353.has;

  return result_2818585354;

}

function isNone_2818585376(self_2818585378) {
  var result_2818585379 = false;

    result_2818585379 = !(self_2818585378.has);

  return result_2818585379;

}

function get_2818585368(self_2818585370) {
  var result_2818585371 = [];

    if (isNone_2818585376(self_2818585370)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818585371 = self_2818585370["val"];

  return result_2818585371;

}

function undo_2818585342(self_2818585343) {
      var Temporary1;

      var oHEX60gensym367_2818585346 = undo_2818579551(self_2818585343.document, selections_2818572789(self_2818585343), true);
      if (!isSome_2818585351(oHEX60gensym367_2818585346)) Temporary1 = false; else {        var selections_2818585391 = nimCopy(null, get_2818585368(oHEX60gensym367_2818585346), NTI2818576290);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573048(self_2818585343, selections_2818585391);
    }
    

  
}

function undoJsWrapper_2818585338(self_2818585419) {
    undo_2818585342(self_2818585419);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2818585338(this));};

function doRedo_2818579599(document_2818579600, op_2818579601, oldSelection_2818579602, useOldSelection_2818579603, undoOps_2818579604, undoOps_2818579604_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2818579605 = [];

    switch (op_2818579601.kind) {
    case 0:
      var Temporary1 = op_2818579601;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2818572291)); }
      var text_2818579606 = contentString_2818573988(document_2818579600, Temporary1.selection);
      var Temporary2 = op_2818579601;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2818572291)); }
      result_2818579605 = nimCopy(null, delete_2818578743(document_2818579600, [nimCopy(null, Temporary2.selection, NTI2231369739)], op_2818579601.oldSelection, true, false), NTI2818575674);
      var Temporary3 = op_2818579601;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2818572291)); }
      undoOps_2818579604[undoOps_2818579604_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2231369737), text: nimCopy(null, text_2818579606, NTI33554449), oldSelection: HEX40_2818578750(oldSelection_2818579602), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2818579601;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2818572291)); }
      var Temporary5 = op_2818579601;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2818572291)); }
      var Temporary6 = op_2818579601;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2818572291)); }
      result_2818579605 = nimCopy(null, insert_2818579249(document_2818579600, [nimCopy(null, toSelection_2231370221(Temporary4.cursor), NTI2231369739)], [nimCopy(null, toSelection_2231370221(Temporary5.cursor), NTI2231369739)], Temporary6.text, true, false, false), NTI2818576035);
      var Temporary7 = op_2818579601;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2818572291)); }
      undoOps_2818579604[undoOps_2818579604_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2231369737), Field1: nimCopy(null, result_2818579605[chckIndx(0, 0, (result_2818579605).length - 1)].Field1, NTI2231369737)}, NTI2231369739), oldSelection: HEX40_2818578750(oldSelection_2818579602), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2818579605 = nimCopy(null, op_2818579601.oldSelection, NTI2818572295);
      var undoOp_2818579624 = {kind: 2, oldSelection: HEX40_2818578750(oldSelection_2818579602), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2818579633 = 0;
        var colontmp__2818585515 = 0;
        var Temporary9 = op_2818579601;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2818572291)); }
        colontmp__2818585515 = (Temporary9.children).length - 1;
        var res_2818585516 = colontmp__2818585515;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2818585516)) break Label11;
              i_2818579633 = res_2818585516;
              var Temporary12 = op_2818579601;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2818572291)); }
              var Temporary14 = undoOp_2818579624;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2818572291)); }
              var _ = doRedo_2818579599(document_2818579600, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2818579633, 0, (Temporary13).length - 1)], oldSelection_2818579602, useOldSelection_2818579603, Temporary14, "children");
              res_2818585516 = subInt(res_2818585516, 1);
            }
        };
      };
      undoOps_2818579604[undoOps_2818579604_Idx].push(undoOp_2818579624);;
      break;
    }
    if (useOldSelection_2818579603) {
    result_2818579605 = nimCopy(null, op_2818579601.oldSelection, NTI2818572295);
    }
    

  return result_2818579605;

}

function redo_2818579638(document_2818579639, oldSelection_2818579640, useOldSelection_2818579641) {
  var result_2818579643 = ({val: [], has: false});

  BeforeRet: {
    result_2818579643 = nimCopy(result_2818579643, none_2818579561(), NTI2818576295);
    if (((document_2818579639.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2818579657 = pop_2818579572(document_2818579639, "redoOps");
    result_2818579643 = nimCopy(result_2818579643, some_2818579585(doRedo_2818579599(document_2818579639, op_2818579657, oldSelection_2818579640, useOldSelection_2818579641, document_2818579639, "undoOps")), NTI2818576295);
    break BeforeRet;
  };

  return result_2818579643;

}

function redo_2818585444(self_2818585445) {
      var Temporary1;

      var oHEX60gensym377_2818585448 = redo_2818579638(self_2818585445.document, selections_2818572789(self_2818585445), true);
      if (!isSome_2818585351(oHEX60gensym377_2818585448)) Temporary1 = false; else {        var selections_2818585471 = nimCopy(null, get_2818585368(oHEX60gensym377_2818585448), NTI2818576290);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2818573048(self_2818585445, selections_2818585471);
    }
    

  
}

function redoJsWrapper_2818585440(self_2818585499) {
    redo_2818585444(self_2818585499);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2818585440(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2818585524(self_2818585525, amount_2818585526) {
    HEX2BHEX3D_855640304(self_2818585525, "scrollOffset", amount_2818585526);
    markDirty_2147483686(self_2818585525);

  
}

function scrollTextJsWrapper_2818585520(self_2818585559, amount_2818585560) {
    scrollText_2818585524(self_2818585559, amount_2818585560);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2818585520(this, amount_));};

function clampCursor_2818572695(self_2818572696, cursor_2818572697) {
  var result_2818572698 = {Field0: 0, Field1: 0};

    result_2818572698 = nimCopy(result_2818572698, clampCursor_2818572674(self_2818572696.document, cursor_2818572697), NTI2231369737);

  return result_2818572698;

}

function doMoveCursorColumn_2818582691(self_2818582692, cursor_2818582693, offset_2818582694) {
  var result_2818582695 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818582696 = nimCopy(null, cursor_2818582693, NTI2231369737);
    var column_2818582697 = addInt(cursor_2818582696.Field1, offset_2818582694);
    if ((column_2818582697 < 0)) {
    if ((0 < cursor_2818582696.Field0)) {
    cursor_2818582696.Field0 = subInt(cursor_2818582696.Field0, 1);
    cursor_2818582696.Field1 = lineLength_2818572667(self_2818582692, cursor_2818582696.Field0);
    }
    else {
      cursor_2818582696.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2818572667(self_2818582692, cursor_2818582696.Field0) < column_2818582697)) {
    if ((cursor_2818582696.Field0 < subInt((self_2818582692.document.lines).length, 1))) {
    cursor_2818582696.Field0 = addInt(cursor_2818582696.Field0, 1);
    cursor_2818582696.Field1 = 0;
    }
    else {
      cursor_2818582696.Field1 = lineLength_2818572667(self_2818582692, cursor_2818582696.Field0);
    }
    
    }
    else {
      cursor_2818582696.Field1 = column_2818582697;
    }
    }
    result_2818582695 = nimCopy(result_2818582695, clampCursor_2818572695(self_2818582692, cursor_2818582696), NTI2231369737);
    break BeforeRet;
  };

  return result_2818582695;

}

function HEX26_2818585654(x_2818585656, y_2818585657) {
  var result_2818585658 = [];

    result_2818585658 = new Array(chckRange(addInt((x_2818585656).length, (y_2818585657).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2818585656).length, (y_2818585657).length), 0, 2147483647) ; ++i) { result_2818585658[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818585676 = 0;
      var colontmp__2818585731 = 0;
      colontmp__2818585731 = subInt((x_2818585656).length, 1);
      var res_2818585732 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818585732 <= colontmp__2818585731)) break Label3;
            i_2818585676 = res_2818585732;
            result_2818585658[chckIndx(i_2818585676, 0, (result_2818585658).length - 1)] = nimCopy(result_2818585658[chckIndx(i_2818585676, 0, (result_2818585658).length - 1)], x_2818585656[chckIndx(i_2818585676, 0, (x_2818585656).length - 1)], NTI2231369739);
            res_2818585732 = addInt(res_2818585732, 1);
          }
      };
    };
    Label4: {
      var i_2818585684 = 0;
      var colontmp__2818585735 = 0;
      colontmp__2818585735 = subInt((y_2818585657).length, 1);
      var res_2818585736 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2818585736 <= colontmp__2818585735)) break Label6;
            i_2818585684 = res_2818585736;
            result_2818585658[chckIndx(addInt(i_2818585684, (x_2818585656).length), 0, (result_2818585658).length - 1)] = nimCopy(result_2818585658[chckIndx(addInt(i_2818585684, (x_2818585656).length), 0, (result_2818585658).length - 1)], y_2818585657[chckIndx(i_2818585684, 0, (y_2818585657).length - 1)], NTI2231369739);
            res_2818585736 = addInt(res_2818585736, 1);
          }
      };
    };

  return result_2818585658;

}

function duplicateLastSelection_2818585644(self_2818585645) {
    var Temporary1;

    var newSelection_2818585649 = toSelection_2231370221(doMoveCursorColumn_2818582691(self_2818585645, (Temporary1 = selections_2818572789(self_2818585645), Temporary1)[chckIndx((selections_2818572789(self_2818585645)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2818573048(self_2818585645, HEX26_2818585654(selections_2818572789(self_2818585645), [nimCopy(null, newSelection_2818585649, NTI2231369739)]));

  
}

function duplicateLastSelectionJsWrapper_2818585640(self_2818585715) {
    duplicateLastSelection_2818585644(self_2818585715);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2818585640(this));};

function doMoveCursorLine_2818582701(self_2818582702, cursor_2818582703, offset_2818582704) {
  var result_2818582705 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2818582706 = nimCopy(null, cursor_2818582703, NTI2231369737);
    var line_2818582707 = addInt(cursor_2818582706.Field0, offset_2818582704);
    if ((line_2818582707 < 0)) {
    var colontmp__2818585800 = 0;
    var colontmp__2818585801 = cursor_2818582706.Field1;
    cursor_2818582706 = nimCopy(cursor_2818582706, {Field0: colontmp__2818585800, Field1: colontmp__2818585801}, NTI2231369737);
    }
    else {
    if (((self_2818582702.document.lines).length <= line_2818582707)) {
    var colontmp__2818585802 = subInt((self_2818582702.document.lines).length, 1);
    var colontmp__2818585803 = cursor_2818582706.Field1;
    cursor_2818582706 = nimCopy(cursor_2818582706, {Field0: colontmp__2818585802, Field1: colontmp__2818585803}, NTI2231369737);
    }
    else {
      cursor_2818582706.Field0 = line_2818582707;
      cursor_2818582706.Field1 = self_2818582702.targetColumn;
    }
    }
    result_2818582705 = nimCopy(result_2818582705, clampCursor_2818572695(self_2818582702, cursor_2818582706), NTI2231369737);
    break BeforeRet;
  };

  return result_2818582705;

}

function addCursorBelow_2818585744(self_2818585745) {
    var Temporary1;

    var newCursor_2818585749 = toSelection_2231370221(doMoveCursorLine_2818582701(self_2818585745, (Temporary1 = selections_2818572789(self_2818585745), Temporary1)[chckIndx((selections_2818572789(self_2818585745)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2231370198(selections_2818572789(self_2818585745), newCursor_2818585749))) {
    selectionsHEX3D_2818573048(self_2818585745, HEX26_2818585654(selections_2818572789(self_2818585745), [nimCopy(null, newCursor_2818585749, NTI2231369739)]));
    }
    

  
}

function addCursorBelowJsWrapper_2818585740(self_2818585785) {
    addCursorBelow_2818585744(self_2818585785);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2818585740(this));};

function addCursorAbove_2818585810(self_2818585811) {
    var Temporary1;

    var newCursor_2818585815 = toSelection_2231370221(doMoveCursorLine_2818582701(self_2818585811, (Temporary1 = selections_2818572789(self_2818585811), Temporary1)[chckIndx((selections_2818572789(self_2818585811)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2231370198(selections_2818572789(self_2818585811), newCursor_2818585815))) {
    selectionsHEX3D_2818573048(self_2818585811, HEX26_2818585654(selections_2818572789(self_2818585811), [nimCopy(null, newCursor_2818585815, NTI2231369739)]));
    }
    

  
}

function addCursorAboveJsWrapper_2818585806(self_2818585851) {
    addCursorAbove_2818585810(self_2818585851);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2818585806(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2818580445(t_2818580448, key_2818580449, hc_2818580450, hc_2818580450_Idx) {
  var result_2818580451 = 0;

  BeforeRet: {
    hc_2818580450[hc_2818580450_Idx] = hash_1325400236(key_2818580449);
    if ((hc_2818580450[hc_2818580450_Idx] == 0)) {
    hc_2818580450[hc_2818580450_Idx] = 314159265;
    }
    
    if (((t_2818580448.data).length == 0)) {
    result_2818580451 = -1;
    break BeforeRet;
    }
    
    var h_2818580510 = (hc_2818580450[hc_2818580450_Idx] & (t_2818580448.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818580448.data[chckIndx(h_2818580510, 0, (t_2818580448.data).length - 1)].Field0)) break Label2;
          if (((t_2818580448.data[chckIndx(h_2818580510, 0, (t_2818580448.data).length - 1)].Field0 == hc_2818580450[hc_2818580450_Idx]) && (t_2818580448.data[chckIndx(h_2818580510, 0, (t_2818580448.data).length - 1)].Field1 == key_2818580449))) {
          result_2818580451 = h_2818580510;
          break BeforeRet;
          }
          
          h_2818580510 = nextTry_1308622883(h_2818580510, (t_2818580448.data).length - 1);
        }
    };
    result_2818580451 = subInt(-1, h_2818580510);
  };

  return result_2818580451;

}

function hasKey_2818585937(t_2818585940, key_2818585941) {
  var result_2818585942 = false;

    var hc_2818585943 = [0];
    result_2818585942 = (0 <= rawGet_2818580445(t_2818585940, key_2818585941, hc_2818585943, 0));

  return result_2818585942;

}

function contains_2818585931(t_2818585934, key_2818585935) {
  var result_2818585936 = false;

  BeforeRet: {
    result_2818585936 = hasKey_2818585937(t_2818585934, key_2818585935);
    break BeforeRet;
  };

  return result_2818585936;

}

function raiseKeyError_1291850842(key_1291850844) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850844) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2818586023(t_2818586026, key_2818586027) {
  var result_2818586028 = null;
  var result_2818586028_Idx = 0;

    var hcHEX60gensym22_2818586029 = [0];
    var indexHEX60gensym22_2818586036 = rawGet_2818580445(t_2818586026, key_2818586027, hcHEX60gensym22_2818586029, 0);
    if ((0 <= indexHEX60gensym22_2818586036)) {
    result_2818586028 = t_2818586026.data[chckIndx(indexHEX60gensym22_2818586036, 0, (t_2818586026.data).length - 1)]; result_2818586028_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850842(key_2818586027);
    }
    

  return [result_2818586028, result_2818586028_Idx];

}

function HEX3C_2231370055(a_2231370056, b_2231370057) {
  var result_2231370058 = false;

  BeforeRet: {
    if ((a_2231370056.Field0 < b_2231370057.Field0)) {
    result_2231370058 = true;
    break BeforeRet;
    }
    else {
    if (((a_2231370056.Field0 == b_2231370057.Field0) && (a_2231370056.Field1 < b_2231370057.Field1))) {
    result_2231370058 = true;
    break BeforeRet;
    }
    else {
      result_2231370058 = false;
      break BeforeRet;
    }
    }
  };

  return result_2231370058;

}

function getPrevFindResult_2818582724(self_2818582725, cursor_2818582726, offset_2818582727) {
            var Temporary4;

  var result_2818585876 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818585877 = 0;
    Label1: {
      var line_2818585883 = 0;
      var res_2818586195 = cursor_2818582726.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818586195)) break Label3;
            line_2818585883 = res_2818586195;
            if (contains_2818585931(self_2818582725.searchResults, line_2818585883)) {
            var selections_2818586113 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2818586023(self_2818582725.searchResults, line_2818585883), Temporary4)[0][Temporary4[1]], NTI2818572535);
            Label5: {
              var k_2818586122 = 0;
              var colontmp__2818586192 = 0;
              colontmp__2818586192 = (selections_2818586113).length - 1;
              var res_2818586193 = colontmp__2818586192;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2818586193)) break Label7;
                    k_2818586122 = res_2818586193;
                    if (HEX3C_2231370055(selections_2818586113[chckIndx(k_2818586122, 0, (selections_2818586113).length - 1)].Field1, cursor_2818582726)) {
                    if ((i_2818585877 == offset_2818582727)) {
                    result_2818585876 = nimCopy(result_2818585876, selections_2818586113[chckIndx(k_2818586122, 0, (selections_2818586113).length - 1)], NTI2231369739);
                    break BeforeRet;
                    }
                    
                    i_2818585877 = addInt(i_2818585877, 1);
                    }
                    
                    res_2818586193 = subInt(res_2818586193, 1);
                  }
              };
            };
            }
            
            res_2818586195 = subInt(res_2818586195, 1);
          }
      };
    };
    result_2818585876 = nimCopy(result_2818585876, toSelection_2231370221(cursor_2818582726), NTI2231369739);
    break BeforeRet;
  };

  return result_2818585876;

}

function getPrevFindResultJsWrapper_2818585868(self_2818586158, cursor_2818586159, offset_2818586160) {
  var result_2818586161 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818586161 = nimCopy(result_2818586161, getPrevFindResult_2818582724(self_2818586158, cursor_2818586159, offset_2818586160), NTI2231369739);

  return result_2818586161;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2818585868(this, cursor_, offset_));};

function getNextFindResult_2818582728(self_2818582729, cursor_2818582730, offset_2818582731) {
              var Temporary5;

  var result_2818586208 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2818586209 = 0;
    Label1: {
      var line_2818586217 = 0;
      var colontmp__2818586426 = 0;
      colontmp__2818586426 = (self_2818582729.document.lines).length - 1;
      var res_2818586427 = cursor_2818582730.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2818586427 <= colontmp__2818586426)) break Label3;
            line_2818586217 = res_2818586427;
            if (contains_2818585931(self_2818582729.searchResults, line_2818586217)) {
            Label4: {
              var selection_2818586351 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2818586421 = [];
              colontmp__2818586421 = (Temporary5 = HEX5BHEX5D_2818586023(self_2818582729.searchResults, line_2818586217), Temporary5)[0][Temporary5[1]];
              var i_2818586423 = 0;
              var L_2818586424 = (colontmp__2818586421).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2818586423 < L_2818586424)) break Label7;
                    selection_2818586351 = colontmp__2818586421[chckIndx(i_2818586423, 0, (colontmp__2818586421).length - 1)];
                    if (HEX3C_2231370055(cursor_2818582730, selection_2818586351.Field0)) {
                    if ((i_2818586209 == offset_2818582731)) {
                    result_2818586208 = nimCopy(result_2818586208, selection_2818586351, NTI2231369739);
                    break BeforeRet;
                    }
                    
                    i_2818586209 = addInt(i_2818586209, 1);
                    }
                    
                    i_2818586423 = addInt(i_2818586423, 1);
                    if (!(((colontmp__2818586421).length == L_2818586424))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2818586427 = addInt(res_2818586427, 1);
          }
      };
    };
    result_2818586208 = nimCopy(result_2818586208, toSelection_2231370221(cursor_2818582730), NTI2231369739);
    break BeforeRet;
  };

  return result_2818586208;

}

function getNextFindResultJsWrapper_2818586200(self_2818586387, cursor_2818586388, offset_2818586389) {
  var result_2818586390 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818586390 = nimCopy(result_2818586390, getNextFindResult_2818582728(self_2818586387, cursor_2818586388, offset_2818586389), NTI2231369739);

  return result_2818586390;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2818586200(this, cursor_, offset_));};

function addNextFindResultToSelection_2818586435(self_2818586436) {
    selectionsHEX3D_2818573048(self_2818586436, HEX26_2818585654(selections_2818572789(self_2818586436), [nimCopy(null, getNextFindResult_2818582728(self_2818586436, selection_2818572792(self_2818586436).Field1, 0), NTI2231369739)]));

  
}

function addNextFindResultToSelectionJsWrapper_2818586431(self_2818586472) {
    addNextFindResultToSelection_2818586435(self_2818586472);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2818586431(this));};

function addPrevFindResultToSelection_2818586493(self_2818586494) {
    selectionsHEX3D_2818573048(self_2818586494, HEX26_2818585654(selections_2818572789(self_2818586494), [nimCopy(null, getPrevFindResult_2818582724(self_2818586494, selection_2818572792(self_2818586494).Field0, 0), NTI2231369739)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2818586489(self_2818586530) {
    addPrevFindResultToSelection_2818586493(self_2818586530);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2818586489(this));};

function len_2818586611(t_2818586614) {
  var result_2818586615 = 0;

    result_2818586615 = t_2818586614.counter;

  return result_2818586615;

}

function setAllFindResultToSelection_2818586551(self_2818586552) {
    var selections_2818586557 = [];
    Label1: {
      var searchResults_2818586829 = [];
      var L_2818586898 = len_2818586611(self_2818586552.searchResults);
      Label2: {
        var h_2818586900 = 0;
        var colontmp__2818586901 = 0;
        colontmp__2818586901 = (self_2818586552.searchResults.data).length - 1;
        var res_2818586902 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2818586902 <= colontmp__2818586901)) break Label4;
              h_2818586900 = res_2818586902;
              if (isFilled_1308622880(self_2818586552.searchResults.data[chckIndx(h_2818586900, 0, (self_2818586552.searchResults.data).length - 1)].Field0)) {
              searchResults_2818586829 = self_2818586552.searchResults.data[chckIndx(h_2818586900, 0, (self_2818586552.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2818586833 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2818586891 = 0;
                var L_2818586892 = (searchResults_2818586829).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2818586891 < L_2818586892)) break Label7;
                      s_2818586833 = searchResults_2818586829[chckIndx(i_2818586891, 0, (searchResults_2818586829).length - 1)];
                      var Temporary8 = nimCopy(null, s_2818586833, NTI2231369739);
                      selections_2818586557.push(Temporary8);;
                      i_2818586891 = addInt(i_2818586891, 1);
                      if (!(((searchResults_2818586829).length == L_2818586892))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2818586611(self_2818586552.searchResults) == L_2818586898))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2818586902 = addInt(res_2818586902, 1);
            }
        };
      };
    };
    selectionsHEX3D_2818573048(self_2818586552, selections_2818586557);

  
}

function setAllFindResultToSelectionJsWrapper_2818586547(self_2818586874) {
    setAllFindResultToSelection_2818586551(self_2818586874);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2818586547(this));};

function map_2818582945(s_2818582948, op_2818582950) {
  var result_2818582951 = [];

    result_2818582951 = new Array(chckRange((s_2818582948).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2818582948).length, 0, 2147483647) ; ++i) { result_2818582951[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2818582966 = 0;
      var colontmp__2818587009 = 0;
      colontmp__2818587009 = (s_2818582948).length;
      var i_2818587010 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587010 < colontmp__2818587009)) break Label3;
            i_2818582966 = i_2818587010;
            result_2818582951[chckIndx(i_2818582966, 0, (result_2818582951).length - 1)] = nimCopy(result_2818582951[chckIndx(i_2818582966, 0, (result_2818582951).length - 1)], op_2818582950(s_2818582948[chckIndx(i_2818582966, 0, (s_2818582948).length - 1)]), NTI2818577951);
            i_2818587010 = addInt(i_2818587010, 1);
          }
      };
    };

  return result_2818582951;

}

function moveCursor_2818582890(self_2818582891, cursor_2818582892, movement_2818582897, offset_2818582898, all_2818582899) {
      
function HEX3Aanonymous_2818582910(s_2818582917) {
        var result_2818582920 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818582920 = nimCopy(result_2818582920, toSelection_2231370221(movement_2818582897(self_2818582891, s_2818582917.Field1, offset_2818582898)), NTI2231369739);

        return result_2818582920;

      }
      
function HEX3Aanonymous_2818582934(s_2818582941) {
        var result_2818582944 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818586996 = movement_2818582897(self_2818582891, s_2818582941.Field0, offset_2818582898);
          var colontmp__2818586997 = nimCopy(null, s_2818582941.Field1, NTI2231369737);
          result_2818582944 = nimCopy(result_2818582944, {Field0: nimCopy(null, colontmp__2818586996, NTI2231369737), Field1: nimCopy(null, colontmp__2818586997, NTI2231369737)}, NTI2818577951);

        return result_2818582944;

      }
      
function HEX3Aanonymous_2818582977(s_2818582984) {
        var result_2818582987 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587000 = nimCopy(null, s_2818582984.Field0, NTI2231369737);
          var colontmp__2818587001 = movement_2818582897(self_2818582891, s_2818582984.Field1, offset_2818582898);
          result_2818582987 = nimCopy(result_2818582987, {Field0: nimCopy(null, colontmp__2818587000, NTI2231369737), Field1: nimCopy(null, colontmp__2818587001, NTI2231369737)}, NTI2818577993);

        return result_2818582987;

      }
      
function HEX3Aanonymous_2818583004(s_2818583011) {
        var result_2818583014 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2818587004 = nimCopy(null, s_2818583011.Field1, NTI2231369737);
          var colontmp__2818587005 = movement_2818582897(self_2818582891, s_2818583011.Field1, offset_2818582898);
          result_2818583014 = nimCopy(result_2818583014, {Field0: nimCopy(null, colontmp__2818587004, NTI2231369737), Field1: nimCopy(null, colontmp__2818587005, NTI2231369737)}, NTI2818578025);

        return result_2818583014;

      }

    switch (cursor_2818582892) {
    case 0:
      var configCursor_2818582909 = getOption_2818582829(self_2818582891.editor, getContextWithMode_2818582795(self_2818582891, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2818582890(self_2818582891, configCursor_2818582909, movement_2818582897, offset_2818582898, all_2818582899);
      break;
    case 1:
      if (all_2818582899) {
      selectionsHEX3D_2818573048(self_2818582891, map_2818572722(selections_2818572789(self_2818582891), HEX3Aanonymous_2818582910));
      }
      else {
        var selections_2818582927 = selections_2818572789(self_2818582891);
        selections_2818582927[chckIndx((selections_2818582927).length - 1, 0, (selections_2818582927).length - 1)] = nimCopy(selections_2818582927[chckIndx((selections_2818582927).length - 1, 0, (selections_2818582927).length - 1)], toSelection_2231370221(movement_2818582897(self_2818582891, selections_2818582927[chckIndx((selections_2818582927).length - 1, 0, (selections_2818582927).length - 1)].Field1, offset_2818582898)), NTI2231369739);
        selectionsHEX3D_2818573048(self_2818582891, selections_2818582927);
      }
      
      scrollToCursor_2818582742(self_2818582891, selection_2818572792(self_2818582891).Field1, false);
      break;
    case 2:
      if (all_2818582899) {
      selectionsHEX3D_2818573048(self_2818582891, map_2818582945(selections_2818572789(self_2818582891), HEX3Aanonymous_2818582934));
      }
      else {
        var selections_2818582967 = selections_2818572789(self_2818582891);
        var colontmp__2818586998 = movement_2818582897(self_2818582891, selections_2818582967[chckIndx((selections_2818582967).length - 1, 0, (selections_2818582967).length - 1)].Field0, offset_2818582898);
        var colontmp__2818586999 = nimCopy(null, selections_2818582967[chckIndx((selections_2818582967).length - 1, 0, (selections_2818582967).length - 1)].Field1, NTI2231369737);
        selections_2818582967[chckIndx((selections_2818582967).length - 1, 0, (selections_2818582967).length - 1)] = nimCopy(selections_2818582967[chckIndx((selections_2818582967).length - 1, 0, (selections_2818582967).length - 1)], {Field0: nimCopy(null, colontmp__2818586998, NTI2231369737), Field1: nimCopy(null, colontmp__2818586999, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2818573048(self_2818582891, selections_2818582967);
      }
      
      scrollToCursor_2818582742(self_2818582891, selection_2818572792(self_2818582891).Field0, false);
      break;
    case 3:
      if (all_2818582899) {
      selectionsHEX3D_2818573048(self_2818582891, map_2818582945(selections_2818572789(self_2818582891), HEX3Aanonymous_2818582977));
      }
      else {
        var selections_2818582994 = selections_2818572789(self_2818582891);
        var colontmp__2818587002 = nimCopy(null, selections_2818582994[chckIndx((selections_2818582994).length - 1, 0, (selections_2818582994).length - 1)].Field0, NTI2231369737);
        var colontmp__2818587003 = movement_2818582897(self_2818582891, selections_2818582994[chckIndx((selections_2818582994).length - 1, 0, (selections_2818582994).length - 1)].Field1, offset_2818582898);
        selections_2818582994[chckIndx((selections_2818582994).length - 1, 0, (selections_2818582994).length - 1)] = nimCopy(selections_2818582994[chckIndx((selections_2818582994).length - 1, 0, (selections_2818582994).length - 1)], {Field0: nimCopy(null, colontmp__2818587002, NTI2231369737), Field1: nimCopy(null, colontmp__2818587003, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2818573048(self_2818582891, selections_2818582994);
      }
      
      scrollToCursor_2818582742(self_2818582891, selection_2818572792(self_2818582891).Field1, false);
      break;
    case 4:
      if (all_2818582899) {
      selectionsHEX3D_2818573048(self_2818582891, map_2818582945(selections_2818572789(self_2818582891), HEX3Aanonymous_2818583004));
      }
      else {
        var selections_2818583021 = selections_2818572789(self_2818582891);
        var colontmp__2818587006 = nimCopy(null, selections_2818583021[chckIndx((selections_2818583021).length - 1, 0, (selections_2818583021).length - 1)].Field1, NTI2231369737);
        var colontmp__2818587007 = movement_2818582897(self_2818582891, selections_2818583021[chckIndx((selections_2818583021).length - 1, 0, (selections_2818583021).length - 1)].Field1, offset_2818582898);
        selections_2818583021[chckIndx((selections_2818583021).length - 1, 0, (selections_2818583021).length - 1)] = nimCopy(selections_2818583021[chckIndx((selections_2818583021).length - 1, 0, (selections_2818583021).length - 1)], {Field0: nimCopy(null, colontmp__2818587006, NTI2231369737), Field1: nimCopy(null, colontmp__2818587007, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2818573048(self_2818582891, selections_2818583021);
      }
      
      scrollToCursor_2818582742(self_2818582891, selection_2818572792(self_2818582891).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2818586910(self_2818586911, distance_2818586912, cursor_2818586913, all_2818586914) {
    moveCursor_2818582890(self_2818586911, cursor_2818586913, doMoveCursorColumn_2818582691, distance_2818586912, all_2818586914);
    updateTargetColumn_2818583734(self_2818586911, cursor_2818586913);

  
}

function moveCursorColumnJsWrapper_2818586906(self_2818586963, distance_2818586964, cursor_2818586965, all_2818586966) {
    moveCursorColumn_2818586910(self_2818586963, distance_2818586964, cursor_2818586965, all_2818586966);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2818586906(this, distance_, cursor_, all_));};

function moveCursorLine_2818587018(self_2818587019, distance_2818587020, cursor_2818587021, all_2818587022) {
    moveCursor_2818582890(self_2818587019, cursor_2818587021, doMoveCursorLine_2818582701, distance_2818587020, all_2818587022);

  
}

function moveCursorLineJsWrapper_2818587014(self_2818587053, distance_2818587054, cursor_2818587055, all_2818587056) {
    moveCursorLine_2818587018(self_2818587053, distance_2818587054, cursor_2818587055, all_2818587056);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2818587014(this, distance_, cursor_, all_));};

function doMoveCursorHome_2818582714(self_2818582715, cursor_2818582716, offset_2818582717) {
  var result_2818582718 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818587152 = cursor_2818582716.Field0;
    var colontmp__2818587153 = 0;
    result_2818582718 = nimCopy(result_2818582718, {Field0: colontmp__2818587152, Field1: colontmp__2818587153}, NTI2231369737);
    break BeforeRet;
  };

  return result_2818582718;

}

function moveCursorHome_2818587092(self_2818587093, cursor_2818587094, all_2818587095) {
    moveCursor_2818582890(self_2818587093, cursor_2818587094, doMoveCursorHome_2818582714, 0, all_2818587095);
    updateTargetColumn_2818583734(self_2818587093, cursor_2818587094);

  
}

function moveCursorHomeJsWrapper_2818587088(self_2818587125, cursor_2818587126, all_2818587127) {
    moveCursorHome_2818587092(self_2818587125, cursor_2818587126, all_2818587127);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2818587088(this, cursor_, all_));};

function doMoveCursorEnd_2818582719(self_2818582720, cursor_2818582721, offset_2818582722) {
  var result_2818582723 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2818587220 = cursor_2818582721.Field0;
    var colontmp__2818587221 = lineLength_2818572660(self_2818582720.document, cursor_2818582721.Field0);
    result_2818582723 = nimCopy(result_2818582723, {Field0: colontmp__2818587220, Field1: colontmp__2818587221}, NTI2231369737);
    break BeforeRet;
  };

  return result_2818582723;

}

function moveCursorEnd_2818587160(self_2818587161, cursor_2818587162, all_2818587163) {
    moveCursor_2818582890(self_2818587161, cursor_2818587162, doMoveCursorEnd_2818582719, 0, all_2818587163);
    updateTargetColumn_2818583734(self_2818587161, cursor_2818587162);

  
}

function moveCursorEndJsWrapper_2818587156(self_2818587193, cursor_2818587194, all_2818587195) {
    moveCursorEnd_2818587160(self_2818587193, cursor_2818587194, all_2818587195);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2818587156(this, cursor_, all_));};

function getLine_2818572653(self_2818572654, line_2818572655) {
  var result_2818572656 = [];

  BeforeRet: {
    if ((line_2818572655 < (self_2818572654.lines).length)) {
    result_2818572656 = nimCopy(null, self_2818572654.lines[chckIndx(line_2818572655, 0, (self_2818572654.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2818572656 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2818572656;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2818587228(self_2818587229, str_2818587230, cursor_2818587231, all_2818587232) {
    str_2818587230 = nimCopy(null, str_2818587230, NTI33554449);
    
function doMoveCursorTo_2818587233(self_2818587234, cursor_2818587235, offset_2818587236) {
      var result_2818587237 = {Field0: 0, Field1: 0};

        var line_2818587238 = getLine_2818572653(self_2818587234.document, cursor_2818587235.Field0);
        result_2818587237 = nimCopy(result_2818587237, cursor_2818587235, NTI2231369737);
        var index_2818587239 = nsuFindStr(line_2818587238, str_2818587230, chckRange(addInt(cursor_2818587235.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2818587239)) {
        var colontmp__2818587303 = cursor_2818587235.Field0;
        var colontmp__2818587304 = index_2818587239;
        result_2818587237 = nimCopy(result_2818587237, {Field0: colontmp__2818587303, Field1: colontmp__2818587304}, NTI2231369737);
        }
        

      return result_2818587237;

    }

    moveCursor_2818582890(self_2818587229, cursor_2818587231, doMoveCursorTo_2818587233, 0, all_2818587232);
    updateTargetColumn_2818583734(self_2818587229, cursor_2818587231);

  
}

function moveCursorToJsWrapper_2818587224(self_2818587270, str_2818587271, cursor_2818587272, all_2818587273) {
    moveCursorTo_2818587228(self_2818587270, str_2818587271, cursor_2818587272, all_2818587273);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2818587224(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2818587311(self_2818587312, str_2818587313, cursor_2818587314, all_2818587315) {
    str_2818587313 = nimCopy(null, str_2818587313, NTI33554449);
    
function doMoveCursorBefore_2818587316(self_2818587317, cursor_2818587318, offset_2818587319) {
      var result_2818587320 = {Field0: 0, Field1: 0};

        var line_2818587321 = getLine_2818572653(self_2818587317.document, cursor_2818587318.Field0);
        result_2818587320 = nimCopy(result_2818587320, cursor_2818587318, NTI2231369737);
        var index_2818587322 = nsuFindStr(line_2818587321, str_2818587313, chckRange(cursor_2818587318.Field1, 0, 2147483647), -1);
        if ((0 < index_2818587322)) {
        var colontmp__2818587386 = cursor_2818587318.Field0;
        var colontmp__2818587387 = subInt(index_2818587322, 1);
        result_2818587320 = nimCopy(result_2818587320, {Field0: colontmp__2818587386, Field1: colontmp__2818587387}, NTI2231369737);
        }
        

      return result_2818587320;

    }

    moveCursor_2818582890(self_2818587312, cursor_2818587314, doMoveCursorBefore_2818587316, 0, all_2818587315);
    updateTargetColumn_2818583734(self_2818587312, cursor_2818587314);

  
}

function moveCursorBeforeJsWrapper_2818587307(self_2818587353, str_2818587354, cursor_2818587355, all_2818587356) {
    moveCursorBefore_2818587311(self_2818587353, str_2818587354, cursor_2818587355, all_2818587356);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2818587307(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2818582737(self_2818582738, cursor_2818582739, offset_2818582740) {
  var result_2818582741 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818582741 = nimCopy(result_2818582741, getNextFindResult_2818582728(self_2818582738, cursor_2818582739, offset_2818582740).Field0, NTI2231369737);
    break BeforeRet;
  };

  return result_2818582741;

}

function moveCursorNextFindResult_2818587394(self_2818587395, cursor_2818587396, all_2818587397) {
    moveCursor_2818582890(self_2818587395, cursor_2818587396, doMoveCursorNextFindResult_2818582737, 0, all_2818587397);
    updateTargetColumn_2818583734(self_2818587395, cursor_2818587396);

  
}

function moveCursorNextFindResultJsWrapper_2818587390(self_2818587427, cursor_2818587428, all_2818587429) {
    moveCursorNextFindResult_2818587394(self_2818587427, cursor_2818587428, all_2818587429);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2818587390(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2818582732(self_2818582733, cursor_2818582734, offset_2818582735) {
  var result_2818582736 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2818582736 = nimCopy(result_2818582736, getPrevFindResult_2818582724(self_2818582733, cursor_2818582734, offset_2818582735).Field0, NTI2231369737);
    break BeforeRet;
  };

  return result_2818582736;

}

function moveCursorPrevFindResult_2818587460(self_2818587461, cursor_2818587462, all_2818587463) {
    moveCursor_2818582890(self_2818587461, cursor_2818587462, doMoveCursorPrevFindResult_2818582732, 0, all_2818587463);
    updateTargetColumn_2818583734(self_2818587461, cursor_2818587462);

  
}

function moveCursorPrevFindResultJsWrapper_2818587456(self_2818587493, cursor_2818587494, all_2818587495) {
    moveCursorPrevFindResult_2818587460(self_2818587493, cursor_2818587494, all_2818587495);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2818587456(this, cursor_, all_));};

function scrollToCursor_2818583171(self_2818583172, cursor_2818583173) {
    scrollToCursor_2818582742(self_2818583172, getCursor_2818582825(self_2818583172, cursor_2818583173), false);

  
}

function scrollToCursorJsWrapper_2818587522(self_2818587557, cursor_2818587558) {
    scrollToCursor_2818583171(self_2818587557, cursor_2818587558);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2818587522(this, cursor_));};

function deinit_2885681592(self_2885681593) {
  
}

function deinit_2885681594(self_2885681595) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2818587629 = 0;
      colontmp__2818587629 = subInt((path_1426063614).length, 1);
      var res_2818587630 = colontmp__2818587629;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2818587630)) break Label3;
            i_1426063627 = res_2818587630;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2818587630 = subInt(res_2818587630, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2768240658() {
  var result_2768240665 = ({val: [], has: false});

  return result_2768240665;

}

function some_2701131810(val_2701131812) {
  var result_2701131813 = ({val: [], has: false});

    result_2701131813.has = true;
    result_2701131813.val = nimCopy(null, val_2701131812, NTI33554449);

  return result_2701131813;

}

function getLanguageForFile_2902458372(filename_2902458373) {
    var Temporary1;

  var result_2902458375 = ({val: [], has: false});

  BeforeRet: {
    var extension_2902458376 = nimCopy(null, nossplitFile(filename_2902458373).Field2, NTI33554449);
    if ((0 < (extension_2902458376).length)) {
    extension_2902458376 = nimCopy(null, HEX5BHEX5D_855639319(extension_2902458376, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2902458376)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2902458399 = [mnewString(0)];
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2902458399, 0, extension_2902458376, []);
      fmtRes_2902458399[0].push.apply(fmtRes_2902458399[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2902458399[0], NTI33554449)]);
      result_2902458375 = nimCopy(result_2902458375, none_2768240658(), NTI2768240657);
      break BeforeRet;
      break;
    }
    var languageId_2902458407 = nimCopy(null, Temporary1, NTI33554449);
    result_2902458375 = nimCopy(result_2902458375, some_2701131810(languageId_2902458407), NTI2768240657);
    break BeforeRet;
  };

  return result_2902458375;

}

function isSome_2768240699(self_2768240701) {
  var result_2768240702 = false;

    result_2768240702 = self_2768240701.has;

  return result_2768240702;

}

function isNone_2818578471(self_2818578473) {
  var result_2818578474 = false;

    result_2818578474 = !(self_2818578473.has);

  return result_2818578474;

}

function get_2818578463(self_2818578465) {
  var result_2818578466 = [];

    if (isNone_2818578471(self_2818578465)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578466 = self_2818578465["val"];

  return result_2818578466;

}

function getOption_2818578479(editor_2818578481, path_2818578482, default_2818578483) {
  var result_2818578489 = null;

  BeforeRet: {
    if ((editor_2818578481 == null)) {
    result_2818578489 = default_2818578483;
    break BeforeRet;
    }
    
    var node_2818578501 = HEX7BHEX7D_1627393316(editor_2818578481.options, nsuSplitString(path_2818578482, [46], -1));
    if ((node_2818578501 == null)) {
    result_2818578489 = default_2818578483;
    break BeforeRet;
    }
    
    result_2818578489 = node_2818578501;
    break BeforeRet;
  };

  return result_2818578489;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2885681453() {
  var result_2885681459 = ({val: null});

  return result_2885681459;

}

function some_2885681464(val_2885681466) {
  var result_2885681467 = ({val: null});

    if (!(!((val_2885681466 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2885681467.val = val_2885681466;

  return result_2885681467;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2885681415(languageId_2885681416, config_2885681417) {
    var Temporary2;

  var result_2885681424 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2885681417, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2885681417, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2885681438 = [mnewString(0)];
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2885681438, 0, languageId_2885681416, []);
      fmtRes_2885681438[0].push.apply(fmtRes_2885681438[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2885681438[0];
    }
    
    var wasmPath_2885681439 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2885681444 = [mnewString(0)];
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2885681444, 0, wasmPath_2885681439, []);
    fmtRes_2885681444[0].push.apply(fmtRes_2885681444[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2885681444[0], NTI33554449)]);
    var language_2885681449 = (await loadTreesitterLanguage(toJSStr(wasmPath_2885681439)));
    if ((language_2885681449 == null)) {
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    
    result_2885681424 = some_2885681464(language_2885681449);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2885681494 = [mnewString(0)];
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2885681494, 0, languageId_2885681416, []);
    fmtRes_2885681494[0].push.apply(fmtRes_2885681494[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2885681494, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2885681494[0], NTI33554449)]);
    result_2885681424 = none_2885681453();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2885681424;

}

function isSome_2885681559(self_2885681561) {
  var result_2885681562 = false;

    result_2885681562 = !((self_2885681561.val == null));

  return result_2885681562;

}
async function loadLanguage_2885681535(languageId_2885681536, config_2885681537) {
  var result_2885681540 = null;

  BeforeRet: {
    var language_2885681554 = (await loadLanguageDynamically_2885681415(languageId_2885681536, config_2885681537));
    if (isSome_2885681559(language_2885681554)) {
    result_2885681540 = language_2885681554;
    break BeforeRet;
    }
    
    result_2885681540 = none_2885681453();
    break BeforeRet;
  };

  return result_2885681540;

}

function isNone_2818578515(self_2818578517) {
  var result_2818578518 = false;

    result_2818578518 = (self_2818578517.val == null);

  return result_2818578518;

}

function createTsParser_2885681581() {
  var result_2885681582 = null;

  BeforeRet: {
    result_2885681582 = new Parser();
    break BeforeRet;
  };

  return result_2885681582;

}

function get_2818578548(self_2818578550) {
  var result_2818578551 = null;
  var result_2818578551_Idx = 0;

  BeforeRet: {
    if (isNone_2818578515(self_2818578550)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578551 = self_2818578550; result_2818578551_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578551, result_2818578551_Idx];

}

function contentString_2818573985(document_2818573986) {
  var result_2818573987 = [];

  BeforeRet: {
    result_2818573987 = nimCopy(null, nsuJoinSep(document_2818573986.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2818573987;

}

function none_2885681218() {
  var result_2885681224 = ({val: null});

  return result_2885681224;

}
async function initTreesitter_2818578426(self_2818578427) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2818578429 = null;

  BeforeRet: {
    if (!((self_2818578427.tsParser == null))) {
    deinit_2885681592(self_2818578427.tsParser);
    self_2818578427.tsParser = null;
    }
    
    if (!((self_2818578427.highlightQuery == null))) {
    deinit_2885681594(self_2818578427.highlightQuery);
    self_2818578427.highlightQuery = null;
    }
    
      var oHEX60gensym88_2818578443 = getLanguageForFile_2902458372(self_2818578427.filename);
      if (!isSome_2768240699(oHEX60gensym88_2818578443)) Temporary2 = false; else {        var languageId_2818578477 = nimCopy(null, get_2818578463(oHEX60gensym88_2818578443), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818578477;
    }
    else {
      result_2818578429 = undefined;
      break BeforeRet;
    }
    
    var languageId_2818578478 = nimCopy(null, Temporary1, NTI33554449);
    var config_2818578505 = getOption_2818578479(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2818578478 || []), newJObject_1627390051());
    var language_2818578510 = [(await loadLanguage_2885681535(languageId_2818578478, config_2818578505))];
    if (isNone_2818578515(language_2818578510[0])) {
    var fmtRes_2818578527 = [mnewString(0)];
    fmtRes_2818578527[0].push.apply(fmtRes_2818578527[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2818578527, 0, languageId_2818578478, []);
    fmtRes_2818578527[0].push.apply(fmtRes_2818578527[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578527[0], NTI33554449)]);
    result_2818578429 = undefined;
    break BeforeRet;
    }
    
    self_2818578427.tsParser = createTsParser_2885681581();
    if ((self_2818578427.tsParser == null)) {
    var fmtRes_2818578535 = [mnewString(0)];
    fmtRes_2818578535[0].push.apply(fmtRes_2818578535[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2818578535, 0, languageId_2818578478, []);
    fmtRes_2818578535[0].push.apply(fmtRes_2818578535[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2818578535[0], NTI33554449)]);
    result_2818578429 = undefined;
    break BeforeRet;
    }
    
    self_2818578427.tsParser.setLanguage((Temporary3 = get_2818578548(language_2818578510[0]), Temporary3)[0][Temporary3[1]]);
    self_2818578427.tsLanguage = (Temporary4 = get_2818578548(language_2818578510[0]), Temporary4)[0][Temporary4[1]];
    self_2818578427.currentTree = parseString_2885681211(self_2818578427.tsParser, contentString_2818573985(self_2818578427), none_2885681218());
++excHandler;
    try {
    var fmtRes_2818578588 = [mnewString(0)];
    fmtRes_2818578588[0].push.apply(fmtRes_2818578588[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2818578588, 0, languageId_2818578478, []);
    fmtRes_2818578588[0].push.apply(fmtRes_2818578588[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2818578589 = loadFile_2499805191(fs_2499805237, fmtRes_2818578588[0]);
    self_2818578427.highlightQuery = (Temporary6 = get_2818578548(language_2818578510[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2818578589));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818578609 = [mnewString(0)];
    fmtRes_2818578609[0].push.apply(fmtRes_2818578609[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2818578609, 0, languageId_2818578478, []);
    fmtRes_2818578609[0].push.apply(fmtRes_2818578609[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818578609[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    notifyTextChanged_2818573211(self_2818578427);
    requestRender_2315255914(gEditor.platform, false);
    result_2818578429 = undefined;
    break BeforeRet;
  };

  return result_2818578429;

}

function reloadTreesitter_2818587584(self_2818587585) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2818578426(self_2818587585.document);

  
}

function reloadTreesitterJsWrapper_2818587580(self_2818587613) {
    reloadTreesitter_2818587584(self_2818587613);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2818587580(this));};

function deleteLeft_2818587640(self_2818587641) {
    var selections_2818587642 = selections_2818572789(self_2818587641);
    Label1: {
      var i_2818587648 = 0;
      var selection_2818587649 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818587695 = 0;
      var L_2818587696 = (selections_2818587642).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587695 < L_2818587696)) break Label3;
            i_2818587648 = i_2818587695;
            selection_2818587649 = nimCopy(selection_2818587649, selections_2818587642[chckIndx(i_2818587695, 0, (selections_2818587642).length - 1)], NTI2231369739);
            if (isEmpty_2231370100(selection_2818587649)) {
            var colontmp__2818587693 = doMoveCursorColumn_2818582691(self_2818587641, selection_2818587649.Field0, -1);
            var colontmp__2818587694 = nimCopy(null, selection_2818587649.Field0, NTI2231369737);
            selections_2818587642[chckIndx(i_2818587648, 0, (selections_2818587642).length - 1)] = nimCopy(selections_2818587642[chckIndx(i_2818587648, 0, (selections_2818587642).length - 1)], {Field0: nimCopy(null, colontmp__2818587693, NTI2231369737), Field1: nimCopy(null, colontmp__2818587694, NTI2231369737)}, NTI2231369739);
            }
            
            i_2818587695 = addInt(i_2818587695, 1);
            if (!(((selections_2818587642).length == L_2818587696))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573048(self_2818587641, delete_2818578743(self_2818587641.document, selections_2818587642, selections_2818572789(self_2818587641), true, true));
    updateTargetColumn_2818583734(self_2818587641, 3);

  
}

function deleteLeftJsWrapper_2818587636(self_2818587677) {
    deleteLeft_2818587640(self_2818587677);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2818587636(this));};

function deleteRight_2818587704(self_2818587705) {
    var selections_2818587706 = selections_2818572789(self_2818587705);
    Label1: {
      var i_2818587712 = 0;
      var selection_2818587713 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2818587759 = 0;
      var L_2818587760 = (selections_2818587706).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818587759 < L_2818587760)) break Label3;
            i_2818587712 = i_2818587759;
            selection_2818587713 = nimCopy(selection_2818587713, selections_2818587706[chckIndx(i_2818587759, 0, (selections_2818587706).length - 1)], NTI2231369739);
            if (isEmpty_2231370100(selection_2818587713)) {
            var colontmp__2818587757 = nimCopy(null, selection_2818587713.Field0, NTI2231369737);
            var colontmp__2818587758 = doMoveCursorColumn_2818582691(self_2818587705, selection_2818587713.Field0, 1);
            selections_2818587706[chckIndx(i_2818587712, 0, (selections_2818587706).length - 1)] = nimCopy(selections_2818587706[chckIndx(i_2818587712, 0, (selections_2818587706).length - 1)], {Field0: nimCopy(null, colontmp__2818587757, NTI2231369737), Field1: nimCopy(null, colontmp__2818587758, NTI2231369737)}, NTI2231369739);
            }
            
            i_2818587759 = addInt(i_2818587759, 1);
            if (!(((selections_2818587706).length == L_2818587760))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2818573048(self_2818587705, delete_2818578743(self_2818587705.document, selections_2818587706, selections_2818572789(self_2818587705), true, true));
    updateTargetColumn_2818583734(self_2818587705, 3);

  
}

function deleteRightJsWrapper_2818587700(self_2818587741) {
    deleteRight_2818587704(self_2818587741);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2818587700(this));};

function getCommandCount_2818587768(self_2818587769) {
  var result_2818587770 = 0;

  BeforeRet: {
    result_2818587770 = self_2818587769.commandCount;
    break BeforeRet;
  };

  return result_2818587770;

}

function getCommandCountJsWrapper_2818587764(self_2818587799) {
  var result_2818587800 = 0;

    result_2818587800 = getCommandCount_2818587768(self_2818587799);

  return result_2818587800;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2818587764(this));};

function setCommandCount_2818587825(self_2818587826, count_2818587827) {
    self_2818587826.commandCount = count_2818587827;

  
}

function setCommandCountJsWrapper_2818587821(self_2818587856, count_2818587857) {
    setCommandCount_2818587825(self_2818587856, count_2818587857);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2818587821(this, count_));};

function setCommandCountRestore_2818587883(self_2818587884, count_2818587885) {
    self_2818587884.commandCountRestore = count_2818587885;

  
}

function setCommandCountRestoreJsWrapper_2818587879(self_2818587914, count_2818587915) {
    setCommandCountRestore_2818587883(self_2818587914, count_2818587915);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2818587879(this, count_));};

function updateCommandCount_2818587941(self_2818587942, digit_2818587943) {
    self_2818587942.commandCount = addInt(mulInt(self_2818587942.commandCount, 10), digit_2818587943);

  
}

function updateCommandCountJsWrapper_2818587937(self_2818587972, digit_2818587973) {
    updateCommandCount_2818587941(self_2818587972, digit_2818587973);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2818587937(this, digit_));};

function setFlag_2818587999(self_2818588000, name_2818588001, value_2818588002) {
    setFlag_1291848943(self_2818588000.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818588001 || []), value_2818588002);
    markDirty_2147483686(self_2818588000);

  
}

function setFlagJsWrapper_2818587995(self_2818588032, name_2818588033, value_2818588034) {
    setFlag_2818587999(self_2818588032, name_2818588033, value_2818588034);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2818587995(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2818588065(self_2818588066, name_2818588067) {
  var result_2818588068 = false;

  BeforeRet: {
    result_2818588068 = getFlag_1291848866(self_2818588066.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2818588067 || []), false);
    break BeforeRet;
  };

  return result_2818588068;

}

function getFlagJsWrapper_2818588061(self_2818588098, name_2818588099) {
  var result_2818588100 = false;

    result_2818588100 = getFlag_2818588065(self_2818588098, name_2818588099);

  return result_2818588100;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2818588061(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2818588135(self_2818588136, action_2818588137, args_2818588138) {
  var result_2818588139 = false;

  BeforeRet: {
    result_2818588139 = (handleActionInternal_2818572646(self_2818588136, action_2818588137, args_2818588138) == 3);
    break BeforeRet;
  };

  return result_2818588139;

}

function runActionJsWrapper_2818588131(self_2818588175, action_2818588176, args_2818588177) {
  var result_2818588178 = false;

    result_2818588178 = runAction_2818588135(self_2818588175, action_2818588176, args_2818588177);

  return result_2818588178;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2818588131(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2818588202(c_2818588203) {
  var result_2818588204 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2818588203) || (c_2818588203 == 95))) {
    result_2818588204 = 0;
    break BeforeRet;
    }
    
    if (((c_2818588203 == 32) || (c_2818588203 == 9))) {
    result_2818588204 = 1;
    break BeforeRet;
    }
    
    result_2818588204 = 2;
    break BeforeRet;
  };

  return result_2818588204;

}

function findWordBoundary_2818588211(self_2818588212, cursor_2818588213) {
  var result_2818588214 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2818588215 = getLine_2818572653(self_2818588212.document, cursor_2818588213.Field0);
    result_2818588214 = nimCopy(result_2818588214, toSelection_2231370221(cursor_2818588213), NTI2231369739);
    if ((result_2818588214.Field0.Field1 == (line_2818588215).length)) {
    result_2818588214.Field0.Field1 = subInt(result_2818588214.Field0.Field1, 1);
    result_2818588214.Field1.Field1 = subInt(result_2818588214.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2818588214.Field0.Field1) && (result_2818588214.Field0.Field1 < (line_2818588215).length))) break Label2;
          var leftCategory_2818588226 = charCategory_2818588202(line_2818588215[chckIndx(subInt(result_2818588214.Field0.Field1, 1), 0, (line_2818588215).length - 1)]);
          var rightCategory_2818588227 = charCategory_2818588202(line_2818588215[chckIndx(result_2818588214.Field0.Field1, 0, (line_2818588215).length - 1)]);
          if (!((leftCategory_2818588226 == rightCategory_2818588227))) {
          break Label1;
          }
          
          result_2818588214.Field0.Field1 = subInt(result_2818588214.Field0.Field1, 1);
        }
    };
    if ((result_2818588214.Field1.Field1 < (line_2818588215).length)) {
    result_2818588214.Field1.Field1 = addInt(result_2818588214.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2818588214.Field1.Field1) && (result_2818588214.Field1.Field1 < (line_2818588215).length))) break Label4;
          var leftCategory_2818588236 = charCategory_2818588202(line_2818588215[chckIndx(subInt(result_2818588214.Field1.Field1, 1), 0, (line_2818588215).length - 1)]);
          var rightCategory_2818588237 = charCategory_2818588202(line_2818588215[chckIndx(result_2818588214.Field1.Field1, 0, (line_2818588215).length - 1)]);
          if (!((leftCategory_2818588236 == rightCategory_2818588237))) {
          break Label3;
          }
          
          result_2818588214.Field1.Field1 = addInt(result_2818588214.Field1.Field1, 1);
        }
    };

  return result_2818588214;

}

function findWordBoundaryJsWrapper_2818588207(self_2818588271, cursor_2818588272) {
  var result_2818588273 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818588273 = nimCopy(result_2818588273, findWordBoundary_2818588211(self_2818588271, cursor_2818588272), NTI2231369739);

  return result_2818588273;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2818588207(this, cursor_));};

function min_2231370063(a_2231370064, b_2231370065) {
  var result_2231370066 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2231370055(a_2231370064, b_2231370065)) {
    result_2231370066 = nimCopy(result_2231370066, a_2231370064, NTI2231369737);
    break BeforeRet;
    }
    
    result_2231370066 = nimCopy(result_2231370066, b_2231370065, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370066;

}

function max_2231370067(a_2231370068, b_2231370069) {
  var result_2231370070 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(b_2231370069, a_2231370068)) {
    result_2231370070 = nimCopy(result_2231370070, a_2231370068, NTI2231369737);
    break BeforeRet;
    }
    
    result_2231370070 = nimCopy(result_2231370070, b_2231370069, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370070;

}

function or_2231370215(a_2231370216, b_2231370217) {
  var result_2231370218 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2231370219 = normalized_2231370094(a_2231370216);
    var bn_2231370220 = normalized_2231370094(b_2231370217);
    var colontmp__2818588515 = min_2231370063(an_2231370219.Field0, bn_2231370220.Field0);
    var colontmp__2818588516 = max_2231370067(an_2231370219.Field1, bn_2231370220.Field1);
    result_2231370218 = nimCopy(result_2231370218, {Field0: nimCopy(null, colontmp__2818588515, NTI2231369737), Field1: nimCopy(null, colontmp__2818588516, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370218;

}

function reverse_2231370097(selection_2231370098) {
  var result_2231370099 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2818588517 = nimCopy(null, selection_2231370098.Field1, NTI2231369737);
    var colontmp__2818588518 = nimCopy(null, selection_2231370098.Field0, NTI2231369737);
    result_2231370099 = nimCopy(result_2231370099, {Field0: nimCopy(null, colontmp__2818588517, NTI2231369737), Field1: nimCopy(null, colontmp__2818588518, NTI2231369737)}, NTI2231369739);

  return result_2231370099;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2818588305(self_2818588306, cursor_2818588307, move_2818588308, count_2818588309) {
  var result_2818588310 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2818588308)) {
    case "word":
      result_2818588310 = nimCopy(result_2818588310, findWordBoundary_2818588211(self_2818588306, cursor_2818588307), NTI2231369739);
      Label1: {
        var __2818588315 = 0;
        var i_2818588473 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2818588473 < count_2818588309)) break Label3;
              __2818588315 = i_2818588473;
              result_2818588310 = nimCopy(result_2818588310, or_2231370215(or_2231370215(result_2818588310, findWordBoundary_2818588211(self_2818588306, result_2818588310.Field1)), findWordBoundary_2818588211(self_2818588306, result_2818588310.Field0)), NTI2231369739);
              i_2818588473 = addInt(i_2818588473, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2818588316 = getLine_2818572653(self_2818588306.document, cursor_2818588307.Field0);
      result_2818588310 = nimCopy(result_2818588310, findWordBoundary_2818588211(self_2818588306, cursor_2818588307), NTI2231369739);
      if (((cursor_2818588307.Field1 == 0) && (0 < cursor_2818588307.Field0))) {
      var colontmp__2818588475 = subInt(cursor_2818588307.Field0, 1);
      var colontmp__2818588476 = (getLine_2818572653(self_2818588306.document, subInt(cursor_2818588307.Field0, 1))).length;
      result_2818588310.Field0 = nimCopy(result_2818588310.Field0, {Field0: colontmp__2818588475, Field1: colontmp__2818588476}, NTI2231369737);
      }
      
      if (((cursor_2818588307.Field1 == (line_2818588316).length) && (cursor_2818588307.Field0 < subInt((self_2818588306.document.lines).length, 1)))) {
      var colontmp__2818588477 = addInt(cursor_2818588307.Field0, 1);
      var colontmp__2818588478 = 0;
      result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588477, Field1: colontmp__2818588478}, NTI2231369737);
      }
      
      Label4: {
        var __2818588324 = 0;
        var i_2818588484 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2818588484 < count_2818588309)) break Label6;
              __2818588324 = i_2818588484;
              result_2818588310 = nimCopy(result_2818588310, or_2231370215(or_2231370215(result_2818588310, findWordBoundary_2818588211(self_2818588306, result_2818588310.Field1)), findWordBoundary_2818588211(self_2818588306, result_2818588310.Field0)), NTI2231369739);
              var line_2818588325 = getLine_2818572653(self_2818588306.document, result_2818588310.Field1.Field0);
              if (((result_2818588310.Field0.Field1 == 0) && (0 < result_2818588310.Field0.Field0))) {
              var colontmp__2818588480 = subInt(result_2818588310.Field0.Field0, 1);
              var colontmp__2818588481 = (getLine_2818572653(self_2818588306.document, subInt(result_2818588310.Field0.Field0, 1))).length;
              result_2818588310.Field0 = nimCopy(result_2818588310.Field0, {Field0: colontmp__2818588480, Field1: colontmp__2818588481}, NTI2231369737);
              }
              
              if (((result_2818588310.Field1.Field1 == (line_2818588325).length) && (result_2818588310.Field1.Field0 < subInt((self_2818588306.document.lines).length, 1)))) {
              var colontmp__2818588482 = addInt(result_2818588310.Field1.Field0, 1);
              var colontmp__2818588483 = 0;
              result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588482, Field1: colontmp__2818588483}, NTI2231369737);
              }
              
              i_2818588484 = addInt(i_2818588484, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2818588310 = nimCopy(result_2818588310, reverse_2231370097(getSelectionForMove_2818588305(self_2818588306, {Field0: cursor_2818588307.Field0, Field1: nimMax(0, subInt(cursor_2818588307.Field1, 1))}, [119,111,114,100], count_2818588309)), NTI2231369739);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2818588310 = nimCopy(result_2818588310, reverse_2231370097(getSelectionForMove_2818588305(self_2818588306, {Field0: cursor_2818588307.Field0, Field1: nimMax(0, subInt(cursor_2818588307.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2818588309)), NTI2231369739);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2818588486 = {Field0: cursor_2818588307.Field0, Field1: 0};
      var colontmp__2818588487 = {Field0: cursor_2818588307.Field0, Field1: (getLine_2818572653(self_2818588306.document, cursor_2818588307.Field0)).length};
      result_2818588310 = nimCopy(result_2818588310, {Field0: nimCopy(null, colontmp__2818588486, NTI2231369737), Field1: nimCopy(null, colontmp__2818588487, NTI2231369737)}, NTI2231369739);
      break;
    case "line-next":
      var colontmp__2818588488 = {Field0: cursor_2818588307.Field0, Field1: 0};
      var colontmp__2818588489 = {Field0: cursor_2818588307.Field0, Field1: (getLine_2818572653(self_2818588306.document, cursor_2818588307.Field0)).length};
      result_2818588310 = nimCopy(result_2818588310, {Field0: nimCopy(null, colontmp__2818588488, NTI2231369737), Field1: nimCopy(null, colontmp__2818588489, NTI2231369737)}, NTI2231369739);
      if ((addInt(result_2818588310.Field1.Field0, 1) < (self_2818588306.document.lines).length)) {
      var colontmp__2818588490 = addInt(result_2818588310.Field1.Field0, 1);
      var colontmp__2818588491 = 0;
      result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588490, Field1: colontmp__2818588491}, NTI2231369737);
      }
      
      Label7: {
        var __2818588336 = 0;
        var i_2818588495 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2818588495 < count_2818588309)) break Label9;
              __2818588336 = i_2818588495;
              result_2818588310 = nimCopy(result_2818588310, or_2231370215(result_2818588310, {Field0: {Field0: result_2818588310.Field1.Field0, Field1: 0}, Field1: {Field0: result_2818588310.Field1.Field0, Field1: (getLine_2818572653(self_2818588306.document, result_2818588310.Field1.Field0)).length}}), NTI2231369739);
              if ((addInt(result_2818588310.Field1.Field0, 1) < (self_2818588306.document.lines).length)) {
              var colontmp__2818588493 = addInt(result_2818588310.Field1.Field0, 1);
              var colontmp__2818588494 = 0;
              result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588493, Field1: colontmp__2818588494}, NTI2231369737);
              }
              
              i_2818588495 = addInt(i_2818588495, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2818588497 = 0;
      var colontmp__2818588498 = 0;
      result_2818588310.Field0 = nimCopy(result_2818588310.Field0, {Field0: colontmp__2818588497, Field1: colontmp__2818588498}, NTI2231369737);
      var line_2818588343 = subInt((self_2818588306.document.lines).length, 1);
      var colontmp__2818588499 = line_2818588343;
      var colontmp__2818588500 = (getLine_2818572653(self_2818588306.document, line_2818588343)).length;
      result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588499, Field1: colontmp__2818588500}, NTI2231369737);
      break;
    case "prev-find-result":
      result_2818588310 = nimCopy(result_2818588310, getPrevFindResult_2818582724(self_2818588306, cursor_2818588307, count_2818588309), NTI2231369739);
      break;
    case "next-find-result":
      result_2818588310 = nimCopy(result_2818588310, getNextFindResult_2818582728(self_2818588306, cursor_2818588307, count_2818588309), NTI2231369739);
      break;
    default: 
      if (nsuStartsWith(move_2818588308, [109,111,118,101,45,116,111,32])) {
      var str_2818588362 = HEX5BHEX5D_855639319(move_2818588308, HEX2EHEX2E_1040187488(8, 1));
      var line_2818588363 = getLine_2818572653(self_2818588306.document, cursor_2818588307.Field0);
      result_2818588310 = nimCopy(result_2818588310, toSelection_2231370221(cursor_2818588307), NTI2231369739);
      var index_2818588364 = nsuFindStr(line_2818588363, str_2818588362, chckRange(cursor_2818588307.Field1, 0, 2147483647), -1);
      if ((0 <= index_2818588364)) {
      var colontmp__2818588501 = cursor_2818588307.Field0;
      var colontmp__2818588502 = addInt(index_2818588364, 1);
      result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588501, Field1: colontmp__2818588502}, NTI2231369737);
      }
      
      Label10: {
        var __2818588369 = 0;
        var i_2818588506 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2818588506 < count_2818588309)) break Label12;
              __2818588369 = i_2818588506;
              var index_2818588370 = nsuFindStr(line_2818588363, str_2818588362, chckRange(result_2818588310.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2818588370)) {
              var colontmp__2818588504 = result_2818588310.Field1.Field0;
              var colontmp__2818588505 = addInt(index_2818588370, 1);
              result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588504, Field1: colontmp__2818588505}, NTI2231369737);
              }
              
              i_2818588506 = addInt(i_2818588506, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2818588308, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2818588389 = HEX5BHEX5D_855639319(move_2818588308, HEX2EHEX2E_1040187488(12, 1));
      var line_2818588390 = getLine_2818572653(self_2818588306.document, cursor_2818588307.Field0);
      result_2818588310 = nimCopy(result_2818588310, toSelection_2231370221(cursor_2818588307), NTI2231369739);
      var index_2818588391 = nsuFindStr(line_2818588390, str_2818588389, chckRange(addInt(cursor_2818588307.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2818588391)) {
      var colontmp__2818588508 = cursor_2818588307.Field0;
      var colontmp__2818588509 = index_2818588391;
      result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588508, Field1: colontmp__2818588509}, NTI2231369737);
      }
      
      Label13: {
        var __2818588396 = 0;
        var i_2818588513 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2818588513 < count_2818588309)) break Label15;
              __2818588396 = i_2818588513;
              var index_2818588397 = nsuFindStr(line_2818588390, str_2818588389, chckRange(addInt(result_2818588310.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2818588397)) {
              var colontmp__2818588511 = result_2818588310.Field1.Field0;
              var colontmp__2818588512 = index_2818588397;
              result_2818588310.Field1 = nimCopy(result_2818588310.Field1, {Field0: colontmp__2818588511, Field1: colontmp__2818588512}, NTI2231369737);
              }
              
              i_2818588513 = addInt(i_2818588513, 1);
            }
        };
      };
      }
      else {
        result_2818588310 = nimCopy(result_2818588310, toSelection_2231370221(cursor_2818588307), NTI2231369739);
        var fmtRes_2818588402 = [mnewString(0)];
        fmtRes_2818588402[0].push.apply(fmtRes_2818588402[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2818588402, 0, move_2818588308, []);
        fmtRes_2818588402[0].push.apply(fmtRes_2818588402[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818588402[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2818588310;

}

function getSelectionForMoveJsWrapper_2818588301(self_2818588434, cursor_2818588435, move_2818588436, count_2818588437) {
  var result_2818588438 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2818588438 = nimCopy(result_2818588438, getSelectionForMove_2818588305(self_2818588434, cursor_2818588435, move_2818588436, count_2818588437), NTI2231369739);

  return result_2818588438;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2818588301(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2818588583(s_2818588587, x_2818588588) {
  var result_2818588589 = [];

    var a_2818588591 = x_2818588588.a;
    var L_2818588596 = addInt(subInt(subInt((s_2818588587).length, x_2818588588.b), a_2818588591), 1);
    result_2818588589 = new Array(chckRange(L_2818588596, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2818588596, 0, 2147483647) ; ++i) { result_2818588589[i] = []; }    Label1: {
      var i_2818588605 = 0;
      var i_2818588823 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818588823 < L_2818588596)) break Label3;
            i_2818588605 = i_2818588823;
            result_2818588589[chckIndx(i_2818588605, 0, (result_2818588589).length - 1)] = nimCopy(null, s_2818588587[chckIndx(addInt(i_2818588605, a_2818588591), 0, (s_2818588587).length - 1)], NTI33554449);
            i_2818588823 = addInt(i_2818588823, 1);
          }
      };
    };

  return result_2818588589;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2600469248(s_2600469250, i_2600469251) {
  var result_2600469252 = [];

    result_2600469252 = nimCopy(null, s_2600469250[chckIndx(subInt((s_2600469250).length, i_2600469251), 0, (s_2600469250).length - 1)], NTI33554449);

  return result_2600469252;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2818588553(editor_2818588555, path_2818588556, value_2818588557) {
  BeforeRet: {
    Label1: {
      if ((editor_2818588555 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym718_2818588572 = nsuSplitString(path_2818588556, [46], -1);
      var nodeHEX60gensym718_2818588573 = editor_2818588555.options;
      Label2: {
        var keyHEX60gensym718_2818588609 = [];
        var colontmp__2818588818 = [];
        colontmp__2818588818 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym718_2818588572, HEX2EHEX2E_1040187488(0, 2));
        var i_2818588819 = 0;
        var L_2818588820 = (colontmp__2818588818).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818588819 < L_2818588820)) break Label4;
              keyHEX60gensym718_2818588609 = colontmp__2818588818[chckIndx(i_2818588819, 0, (colontmp__2818588818).length - 1)];
              if (!((nodeHEX60gensym718_2818588573.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym718_2818588573, keyHEX60gensym718_2818588609))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym718_2818588573, keyHEX60gensym718_2818588609, newJObject_1627390051());
              }
              
              nodeHEX60gensym718_2818588573 = HEX5BHEX5D_1627393037(nodeHEX60gensym718_2818588573, keyHEX60gensym718_2818588609);
              i_2818588819 = addInt(i_2818588819, 1);
              if (!(((colontmp__2818588818).length == L_2818588820))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym718_2818588573 == null) || !((nodeHEX60gensym718_2818588573.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym718_2818588573, HEX5BHEX5D_2600469248(pathItemsHEX60gensym718_2818588572, 1), newJInt_1627390040(value_2818588557));
    };
  };

  
}

function getOption_2818588625(editor_2818588627, path_2818588628, default_2818588629) {
  var result_2818588634 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2818588627 == null)) {
      result_2818588634 = nimCopy(null, default_2818588629, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym723_2818588647 = HEX7BHEX7D_1627393316(editor_2818588627.options, nsuSplitString(path_2818588628, [46], -1));
      if ((nodeHEX60gensym723_2818588647 == null)) {
      result_2818588634 = nimCopy(null, default_2818588629, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2818588634 = nimCopy(null, getStr_1627390106(nodeHEX60gensym723_2818588647, default_2818588629), NTI33554449);
    break BeforeRet;
  };

  return result_2818588634;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2818588651(editor_2818588653, path_2818588654, default_2818588655) {
  var result_2818588660 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2818588653 == null)) {
      result_2818588660 = default_2818588655;
      break BeforeRet;
      }
      
      var nodeHEX60gensym724_2818588672 = HEX7BHEX7D_1627393316(editor_2818588653.options, nsuSplitString(path_2818588654, [46], -1));
      if ((nodeHEX60gensym724_2818588672 == null)) {
      result_2818588660 = default_2818588655;
      break BeforeRet;
      }
      
    };
    result_2818588660 = getInt_1627390118(nodeHEX60gensym724_2818588672, default_2818588655);
    break BeforeRet;
  };

  return result_2818588660;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2818588685(editor_2818588687, path_2818588688, value_2818588689) {
  BeforeRet: {
    Label1: {
      if ((editor_2818588687 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym725_2818588705 = nsuSplitString(path_2818588688, [46], -1);
      var nodeHEX60gensym725_2818588706 = editor_2818588687.options;
      Label2: {
        var keyHEX60gensym725_2818588725 = [];
        var colontmp__2818588832 = [];
        colontmp__2818588832 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym725_2818588705, HEX2EHEX2E_1040187488(0, 2));
        var i_2818588833 = 0;
        var L_2818588834 = (colontmp__2818588832).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2818588833 < L_2818588834)) break Label4;
              keyHEX60gensym725_2818588725 = colontmp__2818588832[chckIndx(i_2818588833, 0, (colontmp__2818588832).length - 1)];
              if (!((nodeHEX60gensym725_2818588706.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym725_2818588706, keyHEX60gensym725_2818588725))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym725_2818588706, keyHEX60gensym725_2818588725, newJObject_1627390051());
              }
              
              nodeHEX60gensym725_2818588706 = HEX5BHEX5D_1627393037(nodeHEX60gensym725_2818588706, keyHEX60gensym725_2818588725);
              i_2818588833 = addInt(i_2818588833, 1);
              if (!(((colontmp__2818588832).length == L_2818588834))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym725_2818588706 == null) || !((nodeHEX60gensym725_2818588706.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym725_2818588706, HEX5BHEX5D_2600469248(pathItemsHEX60gensym725_2818588705, 1), newJString_1627389994(value_2818588689));
    };
  };

  
}

function setMove_2818588550(self_2818588551, args_2818588552) {
    setOption_2818588553(self_2818588551.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2818587768(self_2818588551));
    setMode_2818583356(self_2818588551, getOption_2818588625(self_2818588551.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2818587825(self_2818588551, getOption_2818588651(self_2818588551.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2818588135(self_2818588551, getOption_2818588625(self_2818588551.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2818588552);
    setOption_2818588685(self_2818588551.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2818588546(self_2818588769, args_2818588770) {
    setMove_2818588550(self_2818588769, args_2818588770);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2818588546(this, args_));};

function deleteMove_2818588842(self_2818588843, move_2818588844, which_2818588845, all_2818588846) {
    move_2818588844 = nimCopy(null, move_2818588844, NTI33554449);
    
function HEX3Aanonymous_2818588858(s_2818588865) {
        var Temporary1;

      var result_2818588868 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818588857) {
        Temporary1 = getSelectionForMove_2818588305(self_2818588843, s_2818588865.Field1, move_2818588844, count_2818588856);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818588865.Field1, NTI2231369737), Field1: nimCopy(null, getSelectionForMove_2818588305(self_2818588843, s_2818588865.Field1, move_2818588844, count_2818588856).Field1, NTI2231369737)};
        }
        
        result_2818588868 = nimCopy(result_2818588868, Temporary1, NTI2231369739);

      return result_2818588868;

    }

    var count_2818588856 = getOption_2818588651(self_2818588843.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818588857 = getFlag_2818588065(self_2818588843, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818588875 = map_2818572722(selections_2818572789(self_2818588843), HEX3Aanonymous_2818588858);
    selectionsHEX3D_2818573048(self_2818588843, delete_2818578743(self_2818588843.document, selections_2818588875, selections_2818572789(self_2818588843), true, true));
    scrollToCursor_2818583171(self_2818588843, 3);
    updateTargetColumn_2818583734(self_2818588843, 3);

  
}

function deleteMoveJsWrapper_2818588838(self_2818588907, move_2818588908, which_2818588909, all_2818588910) {
    deleteMove_2818588842(self_2818588907, move_2818588908, which_2818588909, all_2818588910);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2818588838(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2818588969(self_2818588971, all_2818588972, p_2818588974) {
    
function HEX3Aanonymous_2818588976(s_2818588983) {
      var result_2818588986 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818588986 = nimCopy(result_2818588986, p_2818588974(s_2818588983), NTI2231369739);

      return result_2818588986;

    }

  var result_2818588975 = [];

    if (all_2818588972) {
    result_2818588975 = nimCopy(null, map_2818572722(self_2818588971, HEX3Aanonymous_2818588976), NTI2818572610);
    }
    else {
      result_2818588975 = nimCopy(null, self_2818588971, NTI2818582817);
      if ((0 < (result_2818588975).length)) {
      result_2818588975[chckIndx((result_2818588975).length - 1, 0, (result_2818588975).length - 1)] = nimCopy(result_2818588975[chckIndx((result_2818588975).length - 1, 0, (result_2818588975).length - 1)], p_2818588974(result_2818588975[chckIndx((result_2818588975).length - 1, 0, (result_2818588975).length - 1)]), NTI2231369739);
      }
      
    }
    

  return result_2818588975;

}

function selectMove_2818588946(self_2818588947, move_2818588948, which_2818588949, all_2818588950) {
    move_2818588948 = nimCopy(null, move_2818588948, NTI33554449);
    
function HEX3Aanonymous_2818588961(s_2818588964) {
      var result_2818588967 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2818588967 = nimCopy(result_2818588967, getSelectionForMove_2818588305(self_2818588947, s_2818588964.Field1, move_2818588948, count_2818588960), NTI2231369739);

      return result_2818588967;

    }

    var count_2818588960 = getOption_2818588651(self_2818588947.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2818573048(self_2818588947, mapAllOrLast_2818588969(selections_2818572789(self_2818588947), all_2818588950, HEX3Aanonymous_2818588961));
    scrollToCursor_2818583171(self_2818588947, 3);
    updateTargetColumn_2818583734(self_2818588947, 3);

  
}

function selectMoveJsWrapper_2818588942(self_2818589036, move_2818589037, which_2818589038, all_2818589039) {
    selectMove_2818588946(self_2818589036, move_2818589037, which_2818589038, all_2818589039);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2818588942(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2818589075(self_2818589076, move_2818589077, which_2818589078, all_2818589079) {
    move_2818589077 = nimCopy(null, move_2818589077, NTI33554449);
    
function HEX3Aanonymous_2818589091(s_2818589098) {
        var Temporary1;

      var result_2818589101 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2818589090) {
        Temporary1 = getSelectionForMove_2818588305(self_2818589076, s_2818589098.Field1, move_2818589077, count_2818589089);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2818589098.Field1, NTI2231369737), Field1: nimCopy(null, getSelectionForMove_2818588305(self_2818589076, s_2818589098.Field1, move_2818589077, count_2818589089).Field1, NTI2231369737)};
        }
        
        result_2818589101 = nimCopy(result_2818589101, Temporary1, NTI2231369739);

      return result_2818589101;

    }

    var count_2818589089 = getOption_2818588651(self_2818589076.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2818589090 = getFlag_2818588065(self_2818589076, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2818589108 = map_2818572722(selections_2818572789(self_2818589076), HEX3Aanonymous_2818589091);
    selectionsHEX3D_2818573048(self_2818589076, delete_2818578743(self_2818589076.document, selections_2818589108, selections_2818572789(self_2818589076), true, true));
    scrollToCursor_2818583171(self_2818589076, 3);
    updateTargetColumn_2818583734(self_2818589076, 3);

  
}

function changeMoveJsWrapper_2818589071(self_2818589140, move_2818589141, which_2818589142, all_2818589143) {
    changeMove_2818589075(self_2818589140, move_2818589141, which_2818589142, all_2818589143);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2818589071(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2231370224(cursor_2231370225, default_2231370226, which_2231370227) {
  var result_2231370228 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2231370227) {
    case 0:
      result_2231370228 = nimCopy(result_2231370228, default_2231370226, NTI2231369739);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2818589292 = nimCopy(null, cursor_2231370225, NTI2231369737);
      var colontmp__2818589293 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2818589292, NTI2231369737), Field1: nimCopy(null, colontmp__2818589293, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2818589294 = nimCopy(null, cursor_2231370225, NTI2231369737);
      var colontmp__2818589295 = nimCopy(null, default_2231370226.Field1, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2818589294, NTI2231369737), Field1: nimCopy(null, colontmp__2818589295, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2818589296 = nimCopy(null, default_2231370226.Field0, NTI2231369737);
      var colontmp__2818589297 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2818589296, NTI2231369737), Field1: nimCopy(null, colontmp__2818589297, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2818589298 = nimCopy(null, default_2231370226.Field1, NTI2231369737);
      var colontmp__2818589299 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2818589298, NTI2231369737), Field1: nimCopy(null, colontmp__2818589299, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    }
  };

  return result_2231370228;

}

function cursor_2818588530(self_2818588531, selection_2818588532, which_2818588533) {
  var result_2818588534 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2818588533) {
    case 0:
      result_2818588534 = nimCopy(result_2818588534, cursor_2818588530(self_2818588531, selection_2818588532, getOption_2818582829(self_2818588531.editor, getContextWithMode_2818582795(self_2818588531, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369737);
      break BeforeRet;
      break;
    case 1:
      result_2818588534 = nimCopy(result_2818588534, selection_2818588532.Field1, NTI2231369737);
      break BeforeRet;
      break;
    case 2:
      result_2818588534 = nimCopy(result_2818588534, selection_2818588532.Field0, NTI2231369737);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2818588534 = nimCopy(result_2818588534, selection_2818588532.Field1, NTI2231369737);
      break BeforeRet;
      break;
    }
  };

  return result_2818588534;

}

function moveLast_2818589179(self_2818589180, move_2818589181, which_2818589182, all_2818589183, count_2818589184) {
      move_2818589181 = nimCopy(null, move_2818589181, NTI33554449);
      
function HEX3Aanonymous_2818589185(s_2818589188) {
        var result_2818589191 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589191 = nimCopy(result_2818589191, toSelection_2231370224(getSelectionForMove_2818588305(self_2818589180, cursor_2818588530(self_2818589180, s_2818589188, which_2818589182), move_2818589181, count_2818589184).Field1, s_2818589188, getOption_2818582829(self_2818589180.editor, getContextWithMode_2818582795(self_2818589180, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369739);

        return result_2818589191;

      }
      
function HEX3Aanonymous_2818589208(s_2818589211) {
        var result_2818589214 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589214 = nimCopy(result_2818589214, toSelection_2231370224(getSelectionForMove_2818588305(self_2818589180, cursor_2818588530(self_2818589180, s_2818589211, which_2818589182), move_2818589181, count_2818589184).Field1, s_2818589211, which_2818589182), NTI2231369739);

        return result_2818589214;

      }

    switch (which_2818589182) {
    case 0:
      selectionsHEX3D_2818573048(self_2818589180, mapAllOrLast_2818588969(selections_2818572789(self_2818589180), all_2818589183, HEX3Aanonymous_2818589185));
      break;
    default: 
      selectionsHEX3D_2818573048(self_2818589180, mapAllOrLast_2818588969(selections_2818572789(self_2818589180), all_2818589183, HEX3Aanonymous_2818589208));
      break;
    }
    scrollToCursor_2818583171(self_2818589180, which_2818589182);
    updateTargetColumn_2818583734(self_2818589180, which_2818589182);

  
}

function moveLastJsWrapper_2818589175(self_2818589253, move_2818589254, which_2818589255, all_2818589256, count_2818589257) {
    moveLast_2818589179(self_2818589253, move_2818589254, which_2818589255, all_2818589256, count_2818589257);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2818589175(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2818589306(self_2818589307, move_2818589308, which_2818589309, all_2818589310, count_2818589311) {
      move_2818589308 = nimCopy(null, move_2818589308, NTI33554449);
      
function HEX3Aanonymous_2818589312(s_2818589315) {
        var result_2818589318 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589318 = nimCopy(result_2818589318, toSelection_2231370224(getSelectionForMove_2818588305(self_2818589307, cursor_2818588530(self_2818589307, s_2818589315, which_2818589309), move_2818589308, count_2818589311).Field0, s_2818589315, getOption_2818582829(self_2818589307.editor, getContextWithMode_2818582795(self_2818589307, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369739);

        return result_2818589318;

      }
      
function HEX3Aanonymous_2818589335(s_2818589338) {
        var result_2818589341 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2818589341 = nimCopy(result_2818589341, toSelection_2231370224(getSelectionForMove_2818588305(self_2818589307, cursor_2818588530(self_2818589307, s_2818589338, which_2818589309), move_2818589308, count_2818589311).Field0, s_2818589338, which_2818589309), NTI2231369739);

        return result_2818589341;

      }

    switch (which_2818589309) {
    case 0:
      selectionsHEX3D_2818573048(self_2818589307, mapAllOrLast_2818588969(selections_2818572789(self_2818589307), all_2818589310, HEX3Aanonymous_2818589312));
      break;
    default: 
      selectionsHEX3D_2818573048(self_2818589307, mapAllOrLast_2818588969(selections_2818572789(self_2818589307), all_2818589310, HEX3Aanonymous_2818589335));
      break;
    }
    scrollToCursor_2818583171(self_2818589307, which_2818589309);
    updateTargetColumn_2818583734(self_2818589307, which_2818589309);

  
}

function moveFirstJsWrapper_2818589302(self_2818589380, move_2818589381, which_2818589382, all_2818589383, count_2818589384) {
    moveFirst_2818589306(self_2818589380, move_2818589381, which_2818589382, all_2818589383, count_2818589384);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2818589302(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2818589428(val_2818589430) {
  var result_2818589431 = ({val: ({impl: null}), has: false});

    result_2818589431.has = true;
    result_2818589431.val = nimCopy(result_2818589431.val, val_2818589430, NTI2852126723);

  return result_2818589431;

}

function isNone_2818579696(self_2818579698) {
  var result_2818579699 = false;

    result_2818579699 = !(self_2818579698.has);

  return result_2818579699;

}

function clear_2818579746(t_2818579749) {
    Label1: {
      var i_2818579807 = 0;
      var colontmp__2818589498 = 0;
      colontmp__2818589498 = (t_2818579749.data).length;
      var i_2818589499 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589499 < colontmp__2818589498)) break Label3;
            i_2818579807 = i_2818589499;
            t_2818579749.data[chckIndx(i_2818579807, 0, (t_2818579749.data).length - 1)].Field0 = 0;
            t_2818579749.data[chckIndx(i_2818579807, 0, (t_2818579749.data).length - 1)].Field1 = 0;
            t_2818579749.data[chckIndx(i_2818579807, 0, (t_2818579749.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            i_2818589499 = addInt(i_2818589499, 1);
          }
      };
    };
    t_2818579749.counter = 0;

  
}

function findBounds_2852126727(text_2852126728, regex_2852126729, start_2852126730) {
  var result_2852126733 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2852126729.impl.lastIndex = 0;
    var bounds_2852126752 = ((regex_2852126729.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2852126728, HEX2EHEX2E_1040187488(start_2852126730, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2818589501 = bounds_2852126752[chckIndx(0, 0, (bounds_2852126752).length - 1)];
    var colontmp__2818589502 = subInt(bounds_2852126752[chckIndx(1, 0, (bounds_2852126752).length - 1)], 1);
    result_2852126733 = nimCopy(result_2852126733, {Field0: colontmp__2818589501, Field1: colontmp__2818589502}, NTI2852126727);
    break BeforeRet;
  };

  return result_2852126733;

}

function get_2818580307(self_2818580309) {
  var result_2818580310 = null;

  BeforeRet: {
    if (isNone_2818579696(self_2818580309)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818580310 = self_2818580309.val;
    break BeforeRet;
  };

  return result_2818580310;

}

function mustRehash_2818580883(t_2818580885) {
  var result_2818580886 = false;

    if (!((t_2818580885.counter < (t_2818580885.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818580886 = ((mulInt((t_2818580885.data).length, 2) < mulInt(t_2818580885.counter, 3)) || (subInt((t_2818580885.data).length, t_2818580885.counter) < 4));

  return result_2818580886;

}

function rawInsert_2818581432(t_2818581436, data_2818581437, data_2818581437_Idx, key_2818581438, val_2818581439, hc_2818581440, h_2818581441) {
    data_2818581437[data_2818581437_Idx][chckIndx(h_2818581441, 0, (data_2818581437[data_2818581437_Idx]).length - 1)].Field1 = key_2818581438;
    data_2818581437[data_2818581437_Idx][chckIndx(h_2818581441, 0, (data_2818581437[data_2818581437_Idx]).length - 1)].Field2 = nimCopy(null, val_2818581439, NTI2818572535);
    data_2818581437[data_2818581437_Idx][chckIndx(h_2818581441, 0, (data_2818581437[data_2818581437_Idx]).length - 1)].Field0 = hc_2818581440;

  
}

function enlarge_2818581053(t_2818581056) {
    var n_2818581059 = [];
    n_2818581059 = new Array(chckRange(mulInt((t_2818581056.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818581056.data).length, 2), 0, 2147483647) ; ++i) { n_2818581059[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2818581056.data; t_2818581056.data = n_2818581059; n_2818581059 = Temporary1;    Label2: {
      var i_2818581128 = 0;
      var colontmp__2818589505 = 0;
      colontmp__2818589505 = (n_2818581059).length - 1;
      var res_2818589506 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818589506 <= colontmp__2818589505)) break Label4;
            i_2818581128 = res_2818589506;
            var eh_2818581202 = n_2818581059[chckIndx(i_2818581128, 0, (n_2818581059).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818581202)) {
            var j_2818581206 = (eh_2818581202 & (t_2818581056.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818581056.data[chckIndx(j_2818581206, 0, (t_2818581056.data).length - 1)].Field0)) break Label6;
                  j_2818581206 = nextTry_1308622883(j_2818581206, (t_2818581056.data).length - 1);
                }
            };
            rawInsert_2818581432(t_2818581056, t_2818581056, "data", n_2818581059[chckIndx(i_2818581128, 0, (n_2818581059).length - 1)].Field1, n_2818581059[chckIndx(i_2818581128, 0, (n_2818581059).length - 1)].Field2, eh_2818581202, j_2818581206);
            }
            
            res_2818589506 = addInt(res_2818589506, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818581661(t_2818581664, key_2818581665, hc_2818581666) {
  var result_2818581667 = 0;

  BeforeRet: {
    if (((t_2818581664.data).length == 0)) {
    result_2818581667 = -1;
    break BeforeRet;
    }
    
    var h_2818581723 = (hc_2818581666 & (t_2818581664.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818581664.data[chckIndx(h_2818581723, 0, (t_2818581664.data).length - 1)].Field0)) break Label2;
          if (((t_2818581664.data[chckIndx(h_2818581723, 0, (t_2818581664.data).length - 1)].Field0 == hc_2818581666) && (t_2818581664.data[chckIndx(h_2818581723, 0, (t_2818581664.data).length - 1)].Field1 == key_2818581665))) {
          result_2818581667 = h_2818581723;
          break BeforeRet;
          }
          
          h_2818581723 = nextTry_1308622883(h_2818581723, (t_2818581664.data).length - 1);
        }
    };
    result_2818581667 = subInt(-1, h_2818581723);
  };

  return result_2818581667;

}

function HEX5BHEX5DHEX3D_2818580380(t_2818580383, key_2818580384, val_2818580385) {
    if (((t_2818580383.data).length == 0)) {
    var correctSizeHEX60gensym138_2818580439 = slotsNeeded_1308622891(32);
    t_2818580383.counter = 0;
    t_2818580383.data = new Array(chckRange(correctSizeHEX60gensym138_2818580439, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym138_2818580439, 0, 2147483647) ; ++i) { t_2818580383.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2818580444 = [0];
    var index_2818580751 = rawGet_2818580445(t_2818580383, key_2818580384, hc_2818580444, 0);
    if ((0 <= index_2818580751)) {
    t_2818580383.data[chckIndx(index_2818580751, 0, (t_2818580383.data).length - 1)].Field2 = nimCopy(null, val_2818580385, NTI2818572535);
    }
    else {
      if (((t_2818580383.data).length == 0)) {
      var correctSizeHEX60gensym143_2818580878 = slotsNeeded_1308622891(32);
      t_2818580383.counter = 0;
      t_2818580383.data = new Array(chckRange(correctSizeHEX60gensym143_2818580878, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym143_2818580878, 0, 2147483647) ; ++i) { t_2818580383.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2818580883(t_2818580383)) {
      enlarge_2818581053(t_2818580383);
      index_2818580751 = rawGetKnownHC_2818581661(t_2818580383, key_2818580384, hc_2818580444[0]);
      }
      
      index_2818580751 = subInt(-1, index_2818580751);
      rawInsert_2818581432(t_2818580383, t_2818580383, "data", key_2818580384, val_2818580385, hc_2818580444[0], index_2818580751);
      t_2818580383.counter = addInt(t_2818580383.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2818582004(t_2818582007, key_2818582008) {
    var hc_2818582009 = [0];
    var i_2818582016 = rawGet_2818580445(t_2818582007, key_2818582008, hc_2818582009, 0);
    var mskHEX60gensym36_2818582020 = (t_2818582007.data).length - 1;
    if ((0 <= i_2818582016)) {
    t_2818582007.counter = subInt(t_2818582007.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2818582027 = i_2818582016;
            var rHEX60gensym36_2818582028 = jHEX60gensym36_2818582027;
            t_2818582007.data[chckIndx(i_2818582016, 0, (t_2818582007.data).length - 1)].Field0 = 0;
            t_2818582007.data[chckIndx(i_2818582016, 0, (t_2818582007.data).length - 1)].Field1 = 0;
            t_2818582007.data[chckIndx(i_2818582016, 0, (t_2818582007.data).length - 1)].Field2 = nimCopy(null, [], NTI2818572535);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2818582016 = (addInt(i_2818582016, 1) & mskHEX60gensym36_2818582020);
                  if (isEmpty_1308622877(t_2818582007.data[chckIndx(i_2818582016, 0, (t_2818582007.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2818582028 = (t_2818582007.data[chckIndx(i_2818582016, 0, (t_2818582007.data).length - 1)].Field0 & mskHEX60gensym36_2818582020);
                  if (!(((((rHEX60gensym36_2818582028 <= i_2818582016) && (jHEX60gensym36_2818582027 < rHEX60gensym36_2818582028)) || ((jHEX60gensym36_2818582027 < rHEX60gensym36_2818582028) && (i_2818582016 < jHEX60gensym36_2818582027))) || ((i_2818582016 < jHEX60gensym36_2818582027) && (rHEX60gensym36_2818582028 <= i_2818582016))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2818582007.data[chckIndx(jHEX60gensym36_2818582027, 0, (t_2818582007.data).length - 1)] = nimCopy(t_2818582007.data[chckIndx(jHEX60gensym36_2818582027, 0, (t_2818582007.data).length - 1)], t_2818582007.data[chckIndx(i_2818582016, 0, (t_2818582007.data).length - 1)], NTI2818572547);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2818579690(self_2818579691) {
  BeforeRet: {
    if (isNone_2818579696(self_2818579691.searchRegex)) {
    clear_2818579746(self_2818579691.searchResults);
    markDirty_2147483686(self_2818579691);
    break BeforeRet;
    }
    
    Label1: {
      var i_2818580287 = 0;
      var line_2818580288 = [];
      var i_2818589494 = 0;
      var L_2818589495 = (self_2818579691.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818589494 < L_2818589495)) break Label3;
            i_2818580287 = i_2818589494;
            line_2818580288 = self_2818579691.document.lines[chckIndx(i_2818589494, 0, (self_2818579691.document.lines).length - 1)];
            var selections_2818580293 = [];
            var start_2818580294 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2818580294 < (line_2818580288).length)) break Label5;
                  var bounds_2818580319 = findBounds_2852126727(line_2818580288, get_2818580307(self_2818579691.searchRegex), start_2818580294);
                  if ((bounds_2818580319.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2818580293.push({Field0: {Field0: i_2818580287, Field1: bounds_2818580319.Field0}, Field1: {Field0: i_2818580287, Field1: addInt(bounds_2818580319.Field1, 1)}});;
                  start_2818580294 = nimMax(addInt(bounds_2818580319.Field1, 1), addInt(start_2818580294, 1));
                }
            };
            if ((0 < (selections_2818580293).length)) {
            HEX5BHEX5DHEX3D_2818580380(self_2818579691.searchResults, i_2818580287, selections_2818580293);
            }
            else {
            del_2818582004(self_2818579691.searchResults, i_2818580287);
            }
            
            i_2818589494 = addInt(i_2818589494, 1);
            if (!(((self_2818579691.document.lines).length == L_2818589495))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2147483686(self_2818579691);
  };

  
}

function setSearchQuery_2818589425(self_2818589426, query_2818589427) {
    self_2818589426.searchQuery = nimCopy(null, query_2818589427, NTI33554449);
    self_2818589426.searchRegex = nimCopy(self_2818589426.searchRegex, some_2818589428(re_2852126779(query_2818589427)), NTI2818572524);
    updateSearchResults_2818579690(self_2818589426);

  
}

function setSearchQueryJsWrapper_2818589421(self_2818589470, query_2818589471) {
    setSearchQuery_2818589425(self_2818589470, query_2818589471);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2818589421(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2818589517(self_2818589518, move_2818589519, count_2818589520) {
    var selection_2818589521 = getSelectionForMove_2818588305(self_2818589518, selection_2818572792(self_2818589518).Field1, move_2818589519, count_2818589520);
    selectionHEX3D_2818572798(self_2818589518, selection_2818589521);
    setSearchQuery_2818589425(self_2818589518, contentString_2818573988(self_2818589518.document, selection_2818589521));

  
}

function setSearchQueryFromMoveJsWrapper_2818589513(self_2818589551, move_2818589552, count_2818589553) {
    setSearchQueryFromMove_2818589517(self_2818589551, move_2818589552, count_2818589553);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2818589513(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2936012824() {
  var result_2936012830 = ({val: null});

  return result_2936012830;

}

function isSome_2818578647(self_2818578649) {
  var result_2818578650 = false;

    result_2818578650 = !((self_2818578649.val == null));

  return result_2818578650;

}
async function getOrCreateLanguageServer_2936012808(languageId_2936012809, filename_2936012810) {
  var result_2936012814 = null;

  BeforeRet: {
    result_2936012814 = none_2936012824();
    break BeforeRet;
  };

  return result_2936012814;

}
async function saveTempFile_2818578620(self_2818578621, filename_2818578622) {
  var result_2818578624 = null;

  BeforeRet: {
    result_2818578624 = undefined;
    break BeforeRet;
  };

  return result_2818578624;

}

function hash_2919236192(x_2919236194) {
  var result_2919236195 = 0;

    result_2919236195 = hashWangYi1_1325400244(x_2919236194);

  return result_2919236195;

}

function rawGet_2919236185(t_2919236188, key_2919236189, hc_2919236190, hc_2919236190_Idx) {
  var result_2919236191 = 0;

  BeforeRet: {
    hc_2919236190[hc_2919236190_Idx] = hash_2919236192(key_2919236189);
    if ((hc_2919236190[hc_2919236190_Idx] == 0)) {
    hc_2919236190[hc_2919236190_Idx] = 314159265;
    }
    
    if (((t_2919236188.data).length == 0)) {
    result_2919236191 = -1;
    break BeforeRet;
    }
    
    var h_2919236254 = (hc_2919236190[hc_2919236190_Idx] & (t_2919236188.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0)) break Label2;
          if (((t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field0 == hc_2919236190[hc_2919236190_Idx]) && (t_2919236188.data[chckIndx(h_2919236254, 0, (t_2919236188.data).length - 1)].Field1 == key_2919236189))) {
          result_2919236191 = h_2919236254;
          break BeforeRet;
          }
          
          h_2919236254 = nextTry_1308622883(h_2919236254, (t_2919236188.data).length - 1);
        }
    };
    result_2919236191 = subInt(-1, h_2919236254);
  };

  return result_2919236191;

}

function mustRehash_2919236752(t_2919236754) {
  var result_2919236755 = false;

    if (!((t_2919236754.counter < (t_2919236754.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919236755 = ((mulInt((t_2919236754.data).length, 2) < mulInt(t_2919236754.counter, 3)) || (subInt((t_2919236754.data).length, t_2919236754.counter) < 4));

  return result_2919236755;

}

function rawInsert_2919237201(t_2919237205, data_2919237206, data_2919237206_Idx, key_2919237207, val_2919237208, hc_2919237209, h_2919237210) {
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field1 = key_2919237207;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field2 = val_2919237208;
    data_2919237206[data_2919237206_Idx][chckIndx(h_2919237210, 0, (data_2919237206[data_2919237206_Idx]).length - 1)].Field0 = hc_2919237209;

  
}

function enlarge_2919236907(t_2919236910) {
    var n_2919236913 = [];
    n_2919236913 = new Array(chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919236910.data).length, 2), 0, 2147483647) ; ++i) { n_2919236913[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2919236910.data; t_2919236910.data = n_2919236913; n_2919236913 = Temporary1;    Label2: {
      var i_2919236977 = 0;
      var colontmp__2818589959 = 0;
      colontmp__2818589959 = (n_2919236913).length - 1;
      var res_2818589960 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818589960 <= colontmp__2818589959)) break Label4;
            i_2919236977 = res_2818589960;
            var eh_2919237031 = n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919237031)) {
            var j_2919237035 = (eh_2919237031 & (t_2919236910.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919236910.data[chckIndx(j_2919237035, 0, (t_2919236910.data).length - 1)].Field0)) break Label6;
                  j_2919237035 = nextTry_1308622883(j_2919237035, (t_2919236910.data).length - 1);
                }
            };
            rawInsert_2919237201(t_2919236910, t_2919236910, "data", n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field1, n_2919236913[chckIndx(i_2919236977, 0, (n_2919236913).length - 1)].Field2, eh_2919237031, j_2919237035);
            }
            
            res_2818589960 = addInt(res_2818589960, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919237388(t_2919237391, key_2919237392, hc_2919237393) {
  var result_2919237394 = 0;

  BeforeRet: {
    if (((t_2919237391.data).length == 0)) {
    result_2919237394 = -1;
    break BeforeRet;
    }
    
    var h_2919237445 = (hc_2919237393 & (t_2919237391.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0)) break Label2;
          if (((t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field0 == hc_2919237393) && (t_2919237391.data[chckIndx(h_2919237445, 0, (t_2919237391.data).length - 1)].Field1 == key_2919237392))) {
          result_2919237394 = h_2919237445;
          break BeforeRet;
          }
          
          h_2919237445 = nextTry_1308622883(h_2919237445, (t_2919237391.data).length - 1);
        }
    };
    result_2919237394 = subInt(-1, h_2919237445);
  };

  return result_2919237394;

}

function HEX5BHEX5DHEX3D_2919236579(t_2919236582, key_2919236583, val_2919236584) {
    if (((t_2919236582.data).length == 0)) {
    var correctSizeHEX60gensym12_2919236633 = slotsNeeded_1308622891(32);
    t_2919236582.counter = 0;
    t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2919236633, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2919236638 = [0];
    var index_2919236645 = rawGet_2919236185(t_2919236582, key_2919236583, hc_2919236638, 0);
    if ((0 <= index_2919236645)) {
    t_2919236582.data[chckIndx(index_2919236645, 0, (t_2919236582.data).length - 1)].Field2 = val_2919236584;
    }
    else {
      if (((t_2919236582.data).length == 0)) {
      var correctSizeHEX60gensym15_2919236747 = slotsNeeded_1308622891(32);
      t_2919236582.counter = 0;
      t_2919236582.data = new Array(chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2919236747, 0, 2147483647) ; ++i) { t_2919236582.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2919236752(t_2919236582)) {
      enlarge_2919236907(t_2919236582);
      index_2919236645 = rawGetKnownHC_2919237388(t_2919236582, key_2919236583, hc_2919236638[0]);
      }
      
      index_2919236645 = subInt(-1, index_2919236645);
      rawInsert_2919237201(t_2919236582, t_2919236582, "data", key_2919236583, val_2919236584, hc_2919236638[0], index_2919236645);
      t_2919236582.counter = addInt(t_2919236582.counter, 1);
    }
    

  
}

function rawGet_2919235731(t_2919235734, key_2919235735, hc_2919235736, hc_2919235736_Idx) {
  var result_2919235737 = 0;

  BeforeRet: {
    hc_2919235736[hc_2919235736_Idx] = hash_1325400491(key_2919235735);
    if ((hc_2919235736[hc_2919235736_Idx] == 0)) {
    hc_2919235736[hc_2919235736_Idx] = 314159265;
    }
    
    if (((t_2919235734.data).length == 0)) {
    result_2919235737 = -1;
    break BeforeRet;
    }
    
    var h_2919235789 = (hc_2919235736[hc_2919235736_Idx] & (t_2919235734.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0)) break Label2;
          if (((t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field0 == hc_2919235736[hc_2919235736_Idx]) && eqStrings(t_2919235734.data[chckIndx(h_2919235789, 0, (t_2919235734.data).length - 1)].Field1, key_2919235735))) {
          result_2919235737 = h_2919235789;
          break BeforeRet;
          }
          
          h_2919235789 = nextTry_1308622883(h_2919235789, (t_2919235734.data).length - 1);
        }
    };
    result_2919235737 = subInt(-1, h_2919235789);
  };

  return result_2919235737;

}

function hasKey_2919235724(t_2919235727, key_2919235728) {
  var result_2919235729 = false;

    var hc_2919235730 = [0];
    result_2919235729 = (0 <= rawGet_2919235731(t_2919235727, key_2919235728, hc_2919235730, 0));

  return result_2919235729;

}

function contains_2919235718(t_2919235721, key_2919235722) {
  var result_2919235723 = false;

  BeforeRet: {
    result_2919235723 = hasKey_2919235724(t_2919235721, key_2919235722);
    break BeforeRet;
  };

  return result_2919235723;

}

function HEX5BHEX5D_2919236023(t_2919236026, key_2919236027) {
  var result_2919236028 = null;
  var result_2919236028_Idx = 0;

    var hcHEX60gensym22_2919236029 = [0];
    var indexHEX60gensym22_2919236036 = rawGet_2919235731(t_2919236026, key_2919236027, hcHEX60gensym22_2919236029, 0);
    if ((0 <= indexHEX60gensym22_2919236036)) {
    result_2919236028 = t_2919236026.data[chckIndx(indexHEX60gensym22_2919236036, 0, (t_2919236026.data).length - 1)]; result_2919236028_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2919236027);
    }
    

  return [result_2919236028, result_2919236028_Idx];

}

function mustRehash_2919237952(t_2919237954) {
  var result_2919237955 = false;

    if (!((t_2919237954.counter < (t_2919237954.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2919237955 = ((mulInt((t_2919237954.data).length, 2) < mulInt(t_2919237954.counter, 3)) || (subInt((t_2919237954.data).length, t_2919237954.counter) < 4));

  return result_2919237955;

}

function rawInsert_2919238401(t_2919238405, data_2919238406, data_2919238406_Idx, key_2919238407, val_2919238408, hc_2919238409, h_2919238410) {
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field1 = nimCopy(null, key_2919238407, NTI33554449);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field2 = nimCopy(null, val_2919238408, NTI2919235613);
    data_2919238406[data_2919238406_Idx][chckIndx(h_2919238410, 0, (data_2919238406[data_2919238406_Idx]).length - 1)].Field0 = hc_2919238409;

  
}

function enlarge_2919238107(t_2919238110) {
    var n_2919238113 = [];
    n_2919238113 = new Array(chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2919238110.data).length, 2), 0, 2147483647) ; ++i) { n_2919238113[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2919238110.data; t_2919238110.data = n_2919238113; n_2919238113 = Temporary1;    Label2: {
      var i_2919238177 = 0;
      var colontmp__2818589966 = 0;
      colontmp__2818589966 = (n_2919238113).length - 1;
      var res_2818589967 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2818589967 <= colontmp__2818589966)) break Label4;
            i_2919238177 = res_2818589967;
            var eh_2919238231 = n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field0;
            if (isFilled_1308622880(eh_2919238231)) {
            var j_2919238235 = (eh_2919238231 & (t_2919238110.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2919238110.data[chckIndx(j_2919238235, 0, (t_2919238110.data).length - 1)].Field0)) break Label6;
                  j_2919238235 = nextTry_1308622883(j_2919238235, (t_2919238110.data).length - 1);
                }
            };
            rawInsert_2919238401(t_2919238110, t_2919238110, "data", n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field1, n_2919238113[chckIndx(i_2919238177, 0, (n_2919238113).length - 1)].Field2, eh_2919238231, j_2919238235);
            }
            
            res_2818589967 = addInt(res_2818589967, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2919238570(t_2919238573, key_2919238574, hc_2919238575) {
  var result_2919238576 = 0;

  BeforeRet: {
    if (((t_2919238573.data).length == 0)) {
    result_2919238576 = -1;
    break BeforeRet;
    }
    
    var h_2919238627 = (hc_2919238575 & (t_2919238573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0)) break Label2;
          if (((t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field0 == hc_2919238575) && eqStrings(t_2919238573.data[chckIndx(h_2919238627, 0, (t_2919238573.data).length - 1)].Field1, key_2919238574))) {
          result_2919238576 = h_2919238627;
          break BeforeRet;
          }
          
          h_2919238627 = nextTry_1308622883(h_2919238627, (t_2919238573.data).length - 1);
        }
    };
    result_2919238576 = subInt(-1, h_2919238627);
  };

  return result_2919238576;

}

function HEX5BHEX5DHEX3D_2919237779(t_2919237782, key_2919237783, val_2919237784) {
    if (((t_2919237782.data).length == 0)) {
    var correctSizeHEX60gensym24_2919237833 = slotsNeeded_1308622891(32);
    t_2919237782.counter = 0;
    t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2919237833, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2919237838 = [0];
    var index_2919237845 = rawGet_2919235731(t_2919237782, key_2919237783, hc_2919237838, 0);
    if ((0 <= index_2919237845)) {
    t_2919237782.data[chckIndx(index_2919237845, 0, (t_2919237782.data).length - 1)].Field2 = nimCopy(null, val_2919237784, NTI2919235613);
    }
    else {
      if (((t_2919237782.data).length == 0)) {
      var correctSizeHEX60gensym27_2919237947 = slotsNeeded_1308622891(32);
      t_2919237782.counter = 0;
      t_2919237782.data = new Array(chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2919237947, 0, 2147483647) ; ++i) { t_2919237782.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2919237952(t_2919237782)) {
      enlarge_2919238107(t_2919237782);
      index_2919237845 = rawGetKnownHC_2919238570(t_2919237782, key_2919237783, hc_2919237838[0]);
      }
      
      index_2919237845 = subInt(-1, index_2919237845);
      rawInsert_2919238401(t_2919237782, t_2919237782, "data", key_2919237783, val_2919237784, hc_2919237838[0], index_2919237845);
      t_2919237782.counter = addInt(t_2919237782.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2919236526(self_2919236527, filename_2919236528, handler_2919236532) {
    var Temporary1;

  var result_2919236533 = 0;

    result_2919236533 = handleIdCounter_2919235663[0];
    handleIdCounter_2919235663[0] = addInt(handleIdCounter_2919235663[0], 1);
    HEX5BHEX5DHEX3D_2919236579(self_2919236527.onRequestSave, result_2919236533, handler_2919236532);
    if (contains_2919235718(self_2919236527.onRequestSaveIndex, filename_2919236528)) {
    (Temporary1 = HEX5BHEX5D_2919236023(self_2919236527.onRequestSaveIndex, filename_2919236528), Temporary1)[0][Temporary1[1]].push(result_2919236533);;
    }
    else {
    HEX5BHEX5DHEX3D_2919237779(self_2919236527.onRequestSaveIndex, filename_2919236528, [result_2919236533]);
    }
    

  return result_2919236533;

}

function isNone_2818578675(self_2818578677) {
  var result_2818578678 = false;

    result_2818578678 = (self_2818578677.val == null);

  return result_2818578678;

}

function get_2818578667(self_2818578669) {
  var result_2818578670 = null;
  var result_2818578670_Idx = 0;

  BeforeRet: {
    if (isNone_2818578675(self_2818578669)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818578670 = self_2818578669; result_2818578670_Idx = "val";
    break BeforeRet;
  };

  return [result_2818578670, result_2818578670_Idx];

}
async function getLanguageServer_2818589581(self_2818589582) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2818589655(targetFilename_2818589656) {
        var result_2818589658 = null;

        BeforeRet: {
          (await saveTempFile_2818578620(self_2818589582.document, targetFilename_2818589656));
          result_2818589658 = undefined;
          break BeforeRet;
        };

        return result_2818589658;

      }
      var Temporary3;

  var result_2818589585 = null;

  BeforeRet: {
      var oHEX60gensym828_2818589597 = getLanguageForFile_2902458372(self_2818589582.document.filename);
      if (!isSome_2768240699(oHEX60gensym828_2818589597)) Temporary2 = false; else {        var languageId_2818589620 = nimCopy(null, get_2818578463(oHEX60gensym828_2818589597), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2818589620;
    }
    else {
      result_2818589585 = none_2936012824();
      break BeforeRet;
    }
    
    var languageId_2818589631 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2818578647(self_2818589582.document.languageServer)) {
    result_2818589585 = self_2818589582.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2818589582.document.languageServer = nimCopy(self_2818589582.document.languageServer, (await getOrCreateLanguageServer_2936012808(languageId_2818589631, self_2818589582.document.filename)), NTI2818572486);
      if (isSome_2818578647(self_2818589582.document.languageServer)) {
      var callback_2818589669 = HEX3Aanonymous_2818589655;
      self_2818589582.document.onRequestSaveHandle = addOnRequestSaveHandler_2919236526((Temporary3 = get_2818578667(self_2818589582.document.languageServer), Temporary3)[0][Temporary3[1]], self_2818589582.document.filename, callback_2818589669);
      }
      
      result_2818589585 = self_2818589582.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2818589585;

}

function get_2818589730(self_2818589732) {
  var result_2818589733 = null;

    if (isNone_2818578675(self_2818589732)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818589733 = self_2818589732["val"];

  return result_2818589733;

}

function isSome_2818589760(self_2818589762) {
  var result_2818589763 = false;

    result_2818589763 = self_2818589762.has;

  return result_2818589763;

}

function isNone_2818589785(self_2818589787) {
  var result_2818589788 = false;

    result_2818589788 = !(self_2818589787.has);

  return result_2818589788;

}

function get_2818589777(self_2818589779) {
  var result_2818589780 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2818589785(self_2818589779)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818589780 = self_2818589779.val;

  return result_2818589780;

}
async function gotoDefinitionAsync_2818589690(self_2818589691) {
  var result_2818589693 = null;

  BeforeRet: {
    var languageServer_2818589703 = (await getLanguageServer_2818589581(self_2818589691));
    if (isNone_2818578675(languageServer_2818589703)) {
    result_2818589693 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818578647(languageServer_2818589703)) {
    var definition_2818589755 = (await getDefinition_2919235651(get_2818589730(languageServer_2818589703), self_2818589691.document.filename, selection_2818572792(self_2818589691).Field1));
    if (isSome_2818589760(definition_2818589755)) {
    selectionHEX3D_2818572798(self_2818589691, toSelection_2231370221(get_2818589777(definition_2818589755).location));
    scrollToCursor_2818583171(self_2818589691, 0);
    }
    
    }
    
    result_2818589693 = undefined;
    break BeforeRet;
  };

  return result_2818589693;

}

function gotoDefinition_2818589912(self_2818589913) {
    var _ = gotoDefinitionAsync_2818589690(self_2818589913);

  
}

function gotoDefinitionJsWrapper_2818589908(self_2818589941) {
    gotoDefinition_2818589912(self_2818589941);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2818589908(this));};
async function getCompletionsAsync_2818585261(self_2818585262) {
  var result_2818589822 = null;

  BeforeRet: {
    var languageServer_2818589832 = (await getLanguageServer_2818589581(self_2818585262));
    if (isNone_2818578675(languageServer_2818589832)) {
    result_2818589822 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2818578647(languageServer_2818589832)) {
    var completions_2818589866 = (await getCompletions_2919235661(get_2818589730(languageServer_2818589832), self_2818585262.document.languageId, self_2818585262.document.filename, selection_2818572792(self_2818585262).Field1));
    self_2818585262.completions = nimCopy(null, completions_2818589866, NTI2919235662);
    self_2818585262.selectedCompletion = clamp_1660945119(self_2818585262.selectedCompletion, 0, (self_2818585262.completions).length - 1);
    if (((self_2818585262.completions).length == 0)) {
    self_2818585262.showCompletions = false;
    }
    else {
      self_2818585262.showCompletions = true;
    }
    
    markDirty_2147483686(self_2818585262);
    }
    
    result_2818589822 = undefined;
    break BeforeRet;
  };

  return result_2818589822;

}

function getCompletions_2818589976(self_2818589977) {
    var _ = getCompletionsAsync_2818585261(self_2818589977);

  
}

function getCompletionsJsWrapper_2818589972(self_2818590005) {
    getCompletions_2818589976(self_2818590005);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2818589972(this));};

function hideCompletions_2818590026(self_2818590027) {
    self_2818590027.showCompletions = false;
    markDirty_2147483686(self_2818590027);

  
}

function hideCompletionsJsWrapper_2818590022(self_2818590055) {
    hideCompletions_2818590026(self_2818590055);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2818590022(this));};

function selectPrevCompletion_2818590076(self_2818590077) {
    if ((0 < (self_2818590077.completions).length)) {
    self_2818590077.selectedCompletion = clamp_1660945119(subInt(self_2818590077.selectedCompletion, 1), 0, subInt((self_2818590077.completions).length, 1));
    }
    else {
      self_2818590077.selectedCompletion = 0;
    }
    
    markDirty_2147483686(self_2818590077);

  
}

function selectPrevCompletionJsWrapper_2818590072(self_2818590119) {
    selectPrevCompletion_2818590076(self_2818590119);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2818590072(this));};

function selectNextCompletion_2818590140(self_2818590141) {
    if ((0 < (self_2818590141.completions).length)) {
    self_2818590141.selectedCompletion = clamp_1660945119(addInt(self_2818590141.selectedCompletion, 1), 0, subInt((self_2818590141.completions).length, 1));
    }
    else {
      self_2818590141.selectedCompletion = 0;
    }
    
    markDirty_2147483686(self_2818590141);

  
}

function selectNextCompletionJsWrapper_2818590136(self_2818590183) {
    selectNextCompletion_2818590140(self_2818590183);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2818590136(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2818590392 = 0;
      var L_2818590393 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2818590392 < L_2818590393)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2818590392, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2818590392 = addInt(i_2818590392, 1);
            if (!(((x_1593835575).length == L_2818590393))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2231370049(cursor_2231370050) {
  var result_2231370051 = [];

  BeforeRet: {
    result_2231370051 = nimCopy(null, (HEX24_369098760(cursor_2231370050.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2231370050.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2231370051;

}

function addQuoted_2818590270(s_2818590272, s_2818590272_Idx, x_2818590273) {
    s_2818590272[s_2818590272_Idx].push.apply(s_2818590272[s_2818590272_Idx], HEX24_2231370049(x_2818590273));;

  
}

function addQuoted_2818590299(s_2818590301, s_2818590301_Idx, x_2818590302) {
    s_2818590301[s_2818590301_Idx].push.apply(s_2818590301[s_2818590301_Idx], reprEnum(x_2818590302, NTI2919235627));;

  
}

function HEX24_2818590220(x_2818590222) {
  var result_2818590223 = [[]];

    result_2818590223[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym896_2818590234 = 0;
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [110,97,109,101]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_1593835572(result_2818590223, 0, x_2818590222.name);
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [115,99,111,112,101]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_1593835572(result_2818590223, 0, x_2818590222.scope);
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [108,111,99,97,116,105,111,110]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_2818590270(result_2818590223, 0, x_2818590222.location);
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [102,105,108,101,110,97,109,101]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_1593835572(result_2818590223, 0, x_2818590222.filename);
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [107,105,110,100]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_2818590299(result_2818590223, 0, x_2818590222.kind);
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [116,121,112]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_1593835572(result_2818590223, 0, x_2818590222.typ);
    if ((0 < countHEX60gensym896_2818590234)) {
    result_2818590223[0].push.apply(result_2818590223[0], [44,32]);;
    }
    
    result_2818590223[0].push.apply(result_2818590223[0], [100,111,99]);;
    result_2818590223[0].push.apply(result_2818590223[0], [58,32]);;
    countHEX60gensym896_2818590234 += 1;
    addQuoted_1593835572(result_2818590223, 0, x_2818590222.doc);
    result_2818590223[0].push.apply(result_2818590223[0], [41]);;

  return result_2818590223[0];

}

function formatValue_2818590215(result_2818590217, result_2818590217_Idx, value_2818590218, specifier_2818590219) {
    formatValue_721420459(result_2818590217, result_2818590217_Idx, HEX24_2818590220(value_2818590218), specifier_2818590219);

  
}

function applySelectedCompletion_2818590204(self_2818590205) {
  BeforeRet: {
    if (!(self_2818590205.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2818590205.completions).length - 1 < self_2818590205.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2818590209 = nimCopy(null, self_2818590205.completions[chckIndx(self_2818590205.selectedCompletion, 0, (self_2818590205.completions).length - 1)], NTI2919235630);
    var fmtRes_2818590214 = [mnewString(0)];
    fmtRes_2818590214[0].push.apply(fmtRes_2818590214[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2818590215(fmtRes_2818590214, 0, com_2818590209, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818590214[0], NTI33554449)]);
    var cursor_2818590332 = nimCopy(null, selection_2818572792(self_2818590205).Field1, NTI2231369737);
    if ((cursor_2818590332.Field1 == 0)) {
    selectionsHEX3D_2818573048(self_2818590205, insert_2818579249(self_2818590205.document, [nimCopy(null, toSelection_2231370221(cursor_2818590332), NTI2231369739)], selections_2818572789(self_2818590205), com_2818590209.name, true, true, false));
    }
    else {
      var line_2818590333 = getLine_2818572653(self_2818590205.document, cursor_2818590332.Field0);
      var column_2818590334 = cursor_2818590332.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2818590334)) break Label2;
            switch (line_2818590333[chckIndx(subInt(column_2818590334, 1), 0, (line_2818590333).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2818590334 = subInt(column_2818590334, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2818573048(self_2818590205, edit_2818579466(self_2818590205.document, [nimCopy(null, {Field0: {Field0: cursor_2818590332.Field0, Field1: column_2818590334}, Field1: nimCopy(null, cursor_2818590332, NTI2231369737)}, NTI2818583991)], selections_2818572789(self_2818590205), com_2818590209.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2818590200(self_2818590375) {
    applySelectedCompletion_2818590204(self_2818590375);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2818590200(this));};

function handleHexChar_2181038091(c_2181038092) {
  var result_2181038093 = 0;

    switch (c_2181038092) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2181038093 = subInt(c_2181038092, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2181038093 = addInt(subInt(c_2181038092, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2181038093 = addInt(subInt(c_2181038092, 65), 10);
      break;
    default: 
      break;
    }

  return result_2181038093;

}

function hexbyte_2181038137(hex_2181038138) {
  var result_2181038139 = 0;

    result_2181038139 = handleHexChar_2181038091(hex_2181038138);

  return result_2181038139;

}

function parseOid_2181038160(str_2181038161) {
  var result_2181038162 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2181038161).length == 24))) {
    break BeforeRet;
    }
    
    result_2181038162.padding = 0;
    result_2181038162.time = 0;
    Label1: {
      var i_2181038167 = 0;
      var i_2969567335 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2969567335 < 4)) break Label3;
            i_2181038167 = i_2969567335;
            var hexValue_2181038172 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, i_2181038167), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, i_2181038167), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.time = (result_2181038162.time | (hexValue_2181038172 << mulInt(i_2181038167, 8)));
            i_2969567335 = addInt(i_2969567335, 1);
          }
      };
    };
    result_2181038162.fuzz = 0;
    Label4: {
      var i_2181038181 = 0;
      var i_2969567338 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2969567338 < 4)) break Label6;
            i_2181038181 = i_2969567338;
            var hexValue_2181038186 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, addInt(i_2181038181, 4)), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, addInt(i_2181038181, 4)), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.fuzz = (result_2181038162.fuzz | (hexValue_2181038186 << mulInt(i_2181038181, 8)));
            i_2969567338 = addInt(i_2969567338, 1);
          }
      };
    };
    result_2181038162.count = 0;
    Label7: {
      var i_2181038195 = 0;
      var i_2969567341 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2969567341 < 4)) break Label9;
            i_2181038195 = i_2969567341;
            var hexValue_2181038200 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, addInt(i_2181038195, 8)), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, addInt(i_2181038195, 8)), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.count = (result_2181038162.count | (hexValue_2181038200 << mulInt(i_2181038195, 8)));
            i_2969567341 = addInt(i_2969567341, 1);
          }
      };
    };
  };

  return result_2181038162;

}

function parseId_2181038327(s_2181038328) {
  var result_2181038329 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (((s_2181038328).length < 23)) {
    if (true) {
    failedAssertImpl_268435515([105,100,46,110,105,109,40,49,55,56,44,32,53,41,32,96,102,97,108,115,101,96,32]);
    }
    
    }
    
    result_2181038329 = nimCopy(result_2181038329, parseOid_2181038160(s_2181038328), NTI2181038083);
    break BeforeRet;
  };

  return result_2181038329;

}
var IdPrint_2969567234 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2969567235 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2969567236 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2969567237 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2969567238 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2969567239 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2969567240 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2969567241 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2969567242 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2969567243 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2969567244 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2969567245 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2969567246 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2969567247 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2969567248 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2969567249 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2969567250 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2969567251 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2969567252 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2969567253 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2969567254 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2969567255 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2969567256 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2969567257 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2969567258 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2969567259 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2969567260 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2969567261 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2969567262 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2969567263 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2969567264 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2969567265 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2969567266 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2969567267 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2969567268 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2969567269 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2969567270 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2969567271 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2969567272 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2969567273 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2969567274 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2969567275 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2969567276 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2969567277 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2969567278 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2969567279 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2969567280 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2969567281 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2969567282 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2969567283 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2969567284 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2969567285 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2969567286 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2969567287 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2969567288 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2969567289 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2969567290 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2969567291 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2969567292 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2969567293 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2969567294 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2969567295 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2969567296 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2969567297 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2969567298 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2969567299 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2969567300 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2969567301 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2969567302 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2969567303 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2969567304 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2969567305 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2969567306 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2969567307 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2969567308 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2969567309 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2969567310 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2969567311 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2969567312 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2969567313 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2969567314 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2969567315 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2969567316 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2969567317 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2969567318 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2969567319 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2969567320 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2969567321 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2969567322 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2969567323 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2969567324 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2969567325 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2969567326 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2969567327 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2969567328 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2969567329 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2969567330 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2969567331 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2969567332 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2969567333 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);
var currentIndent_3019898894 = [0];
var dependencyGlobalRevision_3019898912 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);
var config_3120562389 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function rawGet_3019899319(t_3019899322, key_3019899323, hc_3019899324, hc_3019899324_Idx) {
  var result_3019899325 = 0;

  BeforeRet: {
    hc_3019899324[hc_3019899324_Idx] = hash_1325400236(key_3019899323);
    if ((hc_3019899324[hc_3019899324_Idx] == 0)) {
    hc_3019899324[hc_3019899324_Idx] = 314159265;
    }
    
    if (((t_3019899322.data).length == 0)) {
    result_3019899325 = -1;
    break BeforeRet;
    }
    
    var h_3019899413 = (hc_3019899324[hc_3019899324_Idx] & (t_3019899322.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019899322.data[chckIndx(h_3019899413, 0, (t_3019899322.data).length - 1)].Field0)) break Label2;
          if (((t_3019899322.data[chckIndx(h_3019899413, 0, (t_3019899322.data).length - 1)].Field0 == hc_3019899324[hc_3019899324_Idx]) && (t_3019899322.data[chckIndx(h_3019899413, 0, (t_3019899322.data).length - 1)].Field1 == key_3019899323))) {
          result_3019899325 = h_3019899413;
          break BeforeRet;
          }
          
          h_3019899413 = nextTry_1308622883(h_3019899413, (t_3019899322.data).length - 1);
        }
    };
    result_3019899325 = subInt(-1, h_3019899413);
  };

  return result_3019899325;

}

function mustRehash_3019899843(t_3019899845) {
  var result_3019899846 = false;

    if (!((t_3019899845.counter < (t_3019899845.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019899846 = ((mulInt((t_3019899845.data).length, 2) < mulInt(t_3019899845.counter, 3)) || (subInt((t_3019899845.data).length, t_3019899845.counter) < 4));

  return result_3019899846;

}

function rawInsert_3019900536(t_3019900540, data_3019900541, data_3019900541_Idx, key_3019900542, val_3019900543, hc_3019900544, h_3019900545) {
    data_3019900541[data_3019900541_Idx][chckIndx(h_3019900545, 0, (data_3019900541[data_3019900541_Idx]).length - 1)].Field1 = key_3019900542;
    data_3019900541[data_3019900541_Idx][chckIndx(h_3019900545, 0, (data_3019900541[data_3019900541_Idx]).length - 1)].Field2 = nimCopy(null, val_3019900543, NTI33554449);
    data_3019900541[data_3019900541_Idx][chckIndx(h_3019900545, 0, (data_3019900541[data_3019900541_Idx]).length - 1)].Field0 = hc_3019900544;

  
}

function enlarge_3019900100(t_3019900103) {
    var n_3019900106 = [];
    n_3019900106 = new Array(chckRange(mulInt((t_3019900103.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019900103.data).length, 2), 0, 2147483647) ; ++i) { n_3019900106[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3019900103.data; t_3019900103.data = n_3019900106; n_3019900106 = Temporary1;    Label2: {
      var i_3019900204 = 0;
      var colontmp__2952790091 = 0;
      colontmp__2952790091 = (n_3019900106).length - 1;
      var res_2952790092 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790092 <= colontmp__2952790091)) break Label4;
            i_3019900204 = res_2952790092;
            var eh_3019900285 = n_3019900106[chckIndx(i_3019900204, 0, (n_3019900106).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019900285)) {
            var j_3019900289 = (eh_3019900285 & (t_3019900103.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019900103.data[chckIndx(j_3019900289, 0, (t_3019900103.data).length - 1)].Field0)) break Label6;
                  j_3019900289 = nextTry_1308622883(j_3019900289, (t_3019900103.data).length - 1);
                }
            };
            rawInsert_3019900536(t_3019900103, t_3019900103, "data", n_3019900106[chckIndx(i_3019900204, 0, (n_3019900106).length - 1)].Field1, n_3019900106[chckIndx(i_3019900204, 0, (n_3019900106).length - 1)].Field2, eh_3019900285, j_3019900289);
            }
            
            res_2952790092 = addInt(res_2952790092, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019900786(t_3019900789, key_3019900790, hc_3019900791) {
  var result_3019900792 = 0;

  BeforeRet: {
    if (((t_3019900789.data).length == 0)) {
    result_3019900792 = -1;
    break BeforeRet;
    }
    
    var h_3019900877 = (hc_3019900791 & (t_3019900789.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019900789.data[chckIndx(h_3019900877, 0, (t_3019900789.data).length - 1)].Field0)) break Label2;
          if (((t_3019900789.data[chckIndx(h_3019900877, 0, (t_3019900789.data).length - 1)].Field0 == hc_3019900791) && (t_3019900789.data[chckIndx(h_3019900877, 0, (t_3019900789.data).length - 1)].Field1 == key_3019900790))) {
          result_3019900792 = h_3019900877;
          break BeforeRet;
          }
          
          h_3019900877 = nextTry_1308622883(h_3019900877, (t_3019900789.data).length - 1);
        }
    };
    result_3019900792 = subInt(-1, h_3019900877);
  };

  return result_3019900792;

}

function HEX5BHEX5DHEX3D_3019899224(t_3019899227, key_3019899228, val_3019899229) {
    if (((t_3019899227.data).length == 0)) {
    var correctSizeHEX60gensym3_3019899313 = slotsNeeded_1308622891(32);
    t_3019899227.counter = 0;
    t_3019899227.data = new Array(chckRange(correctSizeHEX60gensym3_3019899313, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3019899313, 0, 2147483647) ; ++i) { t_3019899227.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3019899318 = [0];
    var index_3019899675 = rawGet_3019899319(t_3019899227, key_3019899228, hc_3019899318, 0);
    if ((0 <= index_3019899675)) {
    t_3019899227.data[chckIndx(index_3019899675, 0, (t_3019899227.data).length - 1)].Field2 = nimCopy(null, val_3019899229, NTI33554449);
    }
    else {
      if (((t_3019899227.data).length == 0)) {
      var correctSizeHEX60gensym8_3019899838 = slotsNeeded_1308622891(32);
      t_3019899227.counter = 0;
      t_3019899227.data = new Array(chckRange(correctSizeHEX60gensym8_3019899838, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3019899838, 0, 2147483647) ; ++i) { t_3019899227.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3019899843(t_3019899227)) {
      enlarge_3019900100(t_3019899227);
      index_3019899675 = rawGetKnownHC_3019900786(t_3019899227, key_3019899228, hc_3019899318[0]);
      }
      
      index_3019899675 = subInt(-1, index_3019899675);
      rawInsert_3019900536(t_3019899227, t_3019899227, "data", key_3019899228, val_3019899229, hc_3019899318[0], index_3019899675);
      t_3019899227.counter = addInt(t_3019899227.counter, 1);
    }
    

  
}

function initDoublyLinkedList_3019901154() {
  var result_3019901156 = ({head: null, tail: null});

  return result_3019901156;

}

function initTable_3019901160(initialSize_3019901163) {
  var result_3019901164 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_3019901166 = slotsNeeded_1308622891(chckRange(initialSize_3019901163, 0, 2147483647));
    result_3019901164.counter = 0;
    result_3019901164.data = new Array(chckRange(correctSizeHEX60gensym16_3019901166, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3019901166, 0, 2147483647) ; ++i) { result_3019901164.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3019901164;

}

function correctSize_3036676117(cap_3036676118) {
  var result_3036676119 = 0;

    result_3036676119 = cap_3036676118;

  return result_3036676119;

}

function newLruCache_3019901144(capacity_3019901147, recordRemovedKeys_3019901148) {
  var result_3019901149 = null;

    result_3019901149 = {capacity: capacity_3019901147, list: initDoublyLinkedList_3019901154(), table: initTable_3019901160(correctSize_3036676117(capacity_3019901147)), recordRemovedKeys: recordRemovedKeys_3019901148, removedKeys: ({data: [], counter: 0})};

  return result_3019901149;

}

function newCache_3019901139(capacity_3019901142) {
  var result_3019901143 = null;

    result_3019901143 = newLruCache_3019901144(capacity_3019901142, false);

  return result_3019901143;

}

function initDoublyLinkedList_3019901226() {
  var result_3019901228 = ({head: null, tail: null});

  return result_3019901228;

}

function initTable_3019901232(initialSize_3019901235) {
  var result_3019901236 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_3019901238 = slotsNeeded_1308622891(chckRange(initialSize_3019901235, 0, 2147483647));
    result_3019901236.counter = 0;
    result_3019901236.data = new Array(chckRange(correctSizeHEX60gensym18_3019901238, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_3019901238, 0, 2147483647) ; ++i) { result_3019901236.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3019901236;

}

function newLruCache_3019901216(capacity_3019901219, recordRemovedKeys_3019901220) {
  var result_3019901221 = null;

    result_3019901221 = {capacity: capacity_3019901219, list: initDoublyLinkedList_3019901226(), table: initTable_3019901232(correctSize_3036676117(capacity_3019901219)), recordRemovedKeys: recordRemovedKeys_3019901220, removedKeys: ({data: [], counter: 0})};

  return result_3019901221;

}

function newCache_3019901211(capacity_3019901214) {
  var result_3019901215 = null;

    result_3019901215 = newLruCache_3019901216(capacity_3019901214, false);

  return result_3019901215;

}

function initDoublyLinkedList_3019901294() {
  var result_3019901296 = ({head: null, tail: null});

  return result_3019901296;

}

function initTable_3019901300(initialSize_3019901303) {
  var result_3019901304 = ({data: [], counter: 0});

    var correctSizeHEX60gensym20_3019901306 = slotsNeeded_1308622891(chckRange(initialSize_3019901303, 0, 2147483647));
    result_3019901304.counter = 0;
    result_3019901304.data = new Array(chckRange(correctSizeHEX60gensym20_3019901306, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3019901306, 0, 2147483647) ; ++i) { result_3019901304.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3019901304;

}

function newLruCache_3019901284(capacity_3019901287, recordRemovedKeys_3019901288) {
  var result_3019901289 = null;

    result_3019901289 = {capacity: capacity_3019901287, list: initDoublyLinkedList_3019901294(), table: initTable_3019901300(correctSize_3036676117(capacity_3019901287)), recordRemovedKeys: recordRemovedKeys_3019901288, removedKeys: ({data: [], counter: 0})};

  return result_3019901289;

}

function newCache_3019901279(capacity_3019901282) {
  var result_3019901283 = null;

    result_3019901283 = newLruCache_3019901284(capacity_3019901282, false);

  return result_3019901283;

}

function newDependencyGraph_3019899156() {
  var result_3019899157 = null;

    result_3019899157 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3019899157.revision = 0;
    HEX5BHEX5DHEX3D_3019899224(result_3019899157.queryNames, -1, []);
    result_3019899157.verified = newCache_3019901139(2000);
    result_3019899157.changed = newCache_3019901139(2000);
    result_3019899157.fingerprints = newCache_3019901211(2000);
    result_3019899157.dependencies = newCache_3019901279(2000);

  return result_3019899157;

}

function hash_2181038120(x_2181038122) {
  var result_2181038123 = 0;

    result_2181038123 = hashWangYi1_1325400244(x_2181038122);

  return result_2181038123;

}

function hash_2181038116(oid_2181038117) {
  var result_2181038118 = 0;

    var h_2181038119 = 0;
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.time));
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.fuzz));
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.count));
    result_2181038118 = HEX21HEX24_1325400082(h_2181038119);

  return result_2181038118;

}

function hash_2181038324(id_2181038325) {
  var result_2181038326 = 0;

  BeforeRet: {
    result_2181038326 = hash_2181038116(id_2181038325);
    break BeforeRet;
  };

  return result_2181038326;

}

function hash_3003122712(x_3003122714) {
  var result_3003122715 = 0;

    result_3003122715 = HEX21HEX26_1325400067(result_3003122715, hash_2181038324(x_3003122714["Field0"]));
    result_3003122715 = HEX21HEX26_1325400067(result_3003122715, hash_1325400236(x_3003122714["Field1"]));
    result_3003122715 = HEX21HEX24_1325400082(result_3003122715);

  return result_3003122715;

}

function HEX3DHEX3D_2181038112(oid1_2181038113, oid2_2181038114) {
  var result_2181038115 = false;

    result_2181038115 = (((oid1_2181038113.time == oid2_2181038114.time) && (oid1_2181038113.fuzz == oid2_2181038114.fuzz)) && (oid1_2181038113.count == oid2_2181038114.count));

  return result_2181038115;

}

function HEX3DHEX3D_2181038320(idA_2181038321, idB_2181038322) {
  var result_2181038323 = false;

  BeforeRet: {
    result_2181038323 = HEX3DHEX3D_2181038112(idA_2181038321, idB_2181038322);
    break BeforeRet;
  };

  return result_2181038323;

}

function HEX3DHEX3D_3003123049(x_3003123051, y_3003123052) {
  var result_3003123053 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2181038320(x_3003123051["Field0"], y_3003123052["Field0"]))) {
    result_3003123053 = false;
    break BeforeRet;
    }
    
    if (!((x_3003123051["Field1"] == y_3003123052["Field1"]))) {
    result_3003123053 = false;
    break BeforeRet;
    }
    
    result_3003123053 = true;
    break BeforeRet;
  };

  return result_3003123053;

}

function rawGet_3003122705(t_3003122708, key_3003122709, hc_3003122710, hc_3003122710_Idx) {
  var result_3003122711 = 0;

  BeforeRet: {
    hc_3003122710[hc_3003122710_Idx] = hash_3003122712(key_3003122709);
    if ((hc_3003122710[hc_3003122710_Idx] == 0)) {
    hc_3003122710[hc_3003122710_Idx] = 314159265;
    }
    
    if (((t_3003122708.data).length == 0)) {
    result_3003122711 = -1;
    break BeforeRet;
    }
    
    var h_3003122808 = (hc_3003122710[hc_3003122710_Idx] & (t_3003122708.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122708.data[chckIndx(h_3003122808, 0, (t_3003122708.data).length - 1)].Field0)) break Label2;
          if (((t_3003122708.data[chckIndx(h_3003122808, 0, (t_3003122708.data).length - 1)].Field0 == hc_3003122710[hc_3003122710_Idx]) && HEX3DHEX3D_3003123049(t_3003122708.data[chckIndx(h_3003122808, 0, (t_3003122708.data).length - 1)].Field1, key_3003122709))) {
          result_3003122711 = h_3003122808;
          break BeforeRet;
          }
          
          h_3003122808 = nextTry_1308622883(h_3003122808, (t_3003122708.data).length - 1);
        }
    };
    result_3003122711 = subInt(-1, h_3003122808);
  };

  return result_3003122711;

}

function hasKey_3003122698(t_3003122701, key_3003122702) {
  var result_3003122703 = false;

    var hc_3003122704 = [0];
    result_3003122703 = (0 <= rawGet_3003122705(t_3003122701, key_3003122702, hc_3003122704, 0));

  return result_3003122703;

}

function contains_3003122692(t_3003122695, key_3003122696) {
  var result_3003122697 = false;

  BeforeRet: {
    result_3003122697 = hasKey_3003122698(t_3003122695, key_3003122696);
    break BeforeRet;
  };

  return result_3003122697;

}

function contains_3003122598(cache_3003122601, key_3003122602) {
  var result_3003122603 = false;

    result_3003122603 = contains_3003122692(cache_3003122601.table, key_3003122602);

  return result_3003122603;

}

function HEX24_2181038205(oid_2181038206) {
            var Temporary4;

  var result_2181038207 = [];

    if (result_2181038207.length < 24) { for (var i = result_2181038207.length; i < 24; ++i) result_2181038207.push(0); }
         else {result_2181038207.length = 24; };
    Label1: {
      var i_2181038213 = 0;
      var i_2952790097 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790097 < 12)) break Label3;
            i_2181038213 = i_2952790097;
            if ((i_2181038213 < 4)) {
            Temporary4 = oid_2181038206.time;
            }
            else {
            if ((i_2181038213 < 8)) {
            Temporary4 = oid_2181038206.fuzz;
            }
            else {
            Temporary4 = oid_2181038206.count;
            }
            }
            var value_2181038214 = Temporary4;
            var byteOffset_2181038215 = modInt(i_2181038213, 4);
            var b_2181038220 = (value_2181038214 >> mulInt(byteOffset_2181038215, 8));
            result_2181038207[chckIndx(mulInt(2, i_2181038213), 0, (result_2181038207).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2181038220 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2181038207[chckIndx(addInt(mulInt(2, i_2181038213), 1), 0, (result_2181038207).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2181038220 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2952790097 = addInt(i_2952790097, 1);
          }
      };
    };

  return result_2181038207;

}

function HEX24_2181038317(id_2181038318) {
  var result_2181038319 = [];

  BeforeRet: {
    result_2181038319 = nimCopy(null, HEX24_2181038205(id_2181038318), NTI33554449);
    break BeforeRet;
  };

  return result_2181038319;

}

function formatValue_3019899100(result_3019899102, result_3019899102_Idx, value_3019899103, specifier_3019899104) {
    formatValue_721420459(result_3019899102, result_3019899102_Idx, HEX24_2181038317(value_3019899103), specifier_3019899104);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2332033388(n_2332033390, radix_2332033391, spec_2332033392) {
    var Temporary1;

  var result_2332033393 = [];

    var n_2332033396 = n_2332033390;
    var negative_2332033397 = (n_2332033396 < 0);
    if (negative_2332033397) {
    Temporary1 = ((~(n_2332033396) + 1) );
    }
    else {
    Temporary1 = n_2332033396;
    }
    
    var v_2332033398 = Temporary1;
    var xx_2332033399 = [];
    if (spec_2332033392.alternateForm) {
    switch (spec_2332033392.typ) {
    case 88:
      xx_2332033399 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2332033399 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2332033399 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2332033399 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2332033398 == 0)) {
    result_2332033393 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2332033393 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2332033398)) break Label3;
            var d_2332033400 = (v_2332033398 % radix_2332033391);
            v_2332033398 = Math.trunc(((v_2332033398 / radix_2332033391) ));
            result_2332033393.push.apply(result_2332033393, mkDigit_721420293(chckRange(d_2332033400, -2147483648, 2147483647), spec_2332033392.typ));;
          }
      };
      Label4: {
        var idx_2332033405 = 0;
        var colontmp__2952790101 = 0;
        colontmp__2952790101 = divInt((result_2332033393).length, 2);
        var i_2952790102 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2952790102 < colontmp__2952790101)) break Label6;
              idx_2332033405 = i_2952790102;
              var Temporary7 = result_2332033393[chckIndx(idx_2332033405, 0, (result_2332033393).length - 1)]; result_2332033393[chckIndx(idx_2332033405, 0, (result_2332033393).length - 1)] = result_2332033393[chckIndx(subInt(subInt((result_2332033393).length, idx_2332033405), 1), 0, (result_2332033393).length - 1)]; result_2332033393[chckIndx(subInt(subInt((result_2332033393).length, idx_2332033405), 1), 0, (result_2332033393).length - 1)] = Temporary7;              i_2952790102 = addInt(i_2952790102, 1);
            }
        };
      };
    }
    
    if (spec_2332033392.padWithZero) {
    var sign_2332033410 = (negative_2332033397 || !((spec_2332033392.sign == 45)));
    var toFill_2332033414 = subInt(subInt(subInt(spec_2332033392.minimumWidth, (result_2332033393).length), (xx_2332033399).length), (sign_2332033410 ? 1 : 0));
    if ((0 < toFill_2332033414)) {
    result_2332033393 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2332033414, 0, 2147483647)) || []).concat(result_2332033393 || []), NTI33554449);
    }
    
    }
    
    if (negative_2332033397) {
    result_2332033393 = nimCopy(null, ([45] || []).concat(xx_2332033399 || [],result_2332033393 || []), NTI33554449);
    }
    else {
    if (!((spec_2332033392.sign == 45))) {
    result_2332033393 = nimCopy(null, [spec_2332033392.sign].concat(xx_2332033399 || [],result_2332033393 || []), NTI33554449);
    }
    else {
      result_2332033393 = nimCopy(null, (xx_2332033399 || []).concat(result_2332033393 || []), NTI33554449);
    }
    }
    if ((spec_2332033392.align == 60)) {
    Label8: {
      var i_2332033419 = 0;
      var colontmp__2952790105 = 0;
      colontmp__2952790105 = (result_2332033393).length;
      var i_2952790106 = colontmp__2952790105;
      Label9: {
          Label10: while (true) {
          if (!(i_2952790106 < spec_2332033392.minimumWidth)) break Label10;
            i_2332033419 = i_2952790106;
            addChar(result_2332033393, spec_2332033392.fill);;
            i_2952790106 = addInt(i_2952790106, 1);
          }
      };
    };
    }
    else {
      var toFill_2332033420 = subInt(spec_2332033392.minimumWidth, (result_2332033393).length);
      if ((spec_2332033392.align == 94)) {
      var half_2332033421 = divInt(toFill_2332033420, 2);
      result_2332033393 = nimCopy(null, (nsuRepeatChar(spec_2332033392.fill, chckRange(half_2332033421, 0, 2147483647)) || []).concat(result_2332033393 || [],nsuRepeatChar(spec_2332033392.fill, chckRange(subInt(toFill_2332033420, half_2332033421), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2332033420)) {
        result_2332033393 = nimCopy(null, (nsuRepeatChar(spec_2332033392.fill, chckRange(toFill_2332033420, 0, 2147483647)) || []).concat(result_2332033393 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2332033393;

}

function formatValue_2332033380(result_2332033382, result_2332033382_Idx, value_2332033383, specifier_2332033384) {
  BeforeRet: {
    if (((specifier_2332033384).length == 0)) {
    result_2332033382[result_2332033382_Idx].push.apply(result_2332033382[result_2332033382_Idx], HEX24_369098760(value_2332033383));;
    break BeforeRet;
    }
    
    var spec_2332033385 = parseStandardFormatSpecifier_721420346(specifier_2332033384, 0, false);
    var radix_2332033386 = 10;
    switch (spec_2332033385.typ) {
    case 120:
    case 88:
      radix_2332033386 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2332033386 = 2;
      break;
    case 111:
      radix_2332033386 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2332033385.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2332033382[result_2332033382_Idx].push.apply(result_2332033382[result_2332033382_Idx], formatInt_2332033388(value_2332033383, radix_2332033386, spec_2332033385));;
  };

  
}

function HEX24_3019899092(item_3019899093) {
  var result_3019899094 = [];

  BeforeRet: {
    var fmtRes_3019899099 = [mnewString(0)];
    fmtRes_3019899099[0].push.apply(fmtRes_3019899099[0], [40]);;
    formatValue_3019899100(fmtRes_3019899099, 0, item_3019899093.Field0, []);
    fmtRes_3019899099[0].push.apply(fmtRes_3019899099[0], [44,32]);;
    formatValue_2332033380(fmtRes_3019899099, 0, item_3019899093.Field1, []);
    fmtRes_3019899099[0].push.apply(fmtRes_3019899099[0], [41]);;
    result_3019899094 = nimCopy(null, fmtRes_3019899099[0], NTI33554449);
    break BeforeRet;
  };

  return result_3019899094;

}

function raiseKeyError_3003123345(key_3003123347) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019899092(key_3003123347) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003123251(t_3003123254, key_3003123255) {
  var result_3003123256 = null;
  var result_3003123256_Idx = 0;

    var hcHEX60gensym22_3003123257 = [0];
    var indexHEX60gensym22_3003123264 = rawGet_3003122705(t_3003123254, key_3003123255, hcHEX60gensym22_3003123257, 0);
    if ((0 <= indexHEX60gensym22_3003123264)) {
    result_3003123256 = t_3003123254.data[chckIndx(indexHEX60gensym22_3003123264, 0, (t_3003123254.data).length - 1)]; result_3003123256_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003123255);
    }
    

  return [result_3003123256, result_3003123256_Idx];

}

function remove_3003123372(L_3003123374, n_3003123375) {
    if ((n_3003123375 == L_3003123374.tail)) {
    L_3003123374.tail = n_3003123375.prev;
    }
    
    if ((n_3003123375 == L_3003123374.head)) {
    L_3003123374.head = n_3003123375.next;
    }
    
    if (!((n_3003123375.next == null))) {
    n_3003123375.next.prev = n_3003123375.prev;
    }
    
    if (!((n_3003123375.prev == null))) {
    n_3003123375.prev.next = n_3003123375.next;
    }
    

  
}

function prepend_3003123700(L_3003123702, n_3003123703) {
    n_3003123703.prev = null;
    n_3003123703.next = L_3003123702.head;
    if (!((L_3003123702.head == null))) {
    if (!((L_3003123702.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003123702.head.prev = n_3003123703;
    }
    
    L_3003123702.head = n_3003123703;
    if ((L_3003123702.tail == null)) {
    L_3003123702.tail = n_3003123703;
    }
    

  
}

function HEX5BHEX5D_3003123165(cache_3003123168, key_3003123169) {
    var Temporary1;

  var result_3003123170 = null;

    var node_3003123358 = (Temporary1 = HEX5BHEX5D_3003123251(cache_3003123168.table, key_3003123169), Temporary1)[0][Temporary1[1]];
    result_3003123170 = node_3003123358.value.val;
    remove_3003123372(cache_3003123168.list, node_3003123358);
    prepend_3003123700(cache_3003123168.list, node_3003123358);

  return result_3003123170;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2952790136 = 0;
      colontmp__2952790136 = n_855639143;
      var res_2952790137 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790137 <= colontmp__2952790136)) break Label3;
            i_855639149 = res_2952790137;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2952790137 = addInt(res_2952790137, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3019898895(s_3019898896, n_3019898897) {
  var result_3019898898 = [];

    result_3019898898 = nimCopy(null, nsuRepeatStr(s_3019898896, n_3019898897), NTI33554449);

  return result_3019898898;

}

function symbolName_2986346458(a_2986346460) {
  var result_2986346461 = [];

    result_2986346461 = nimCopy(null, names_2986346468[chckIndx(subInt(a_2986346460, 0), 0, (names_2986346468).length - 1)], NTI33554449);

  return result_2986346461;

}

function len_2986344536(node_2986344537) {
  var result_2986344538 = 0;

  BeforeRet: {
    result_2986344538 = (node_2986344537.children).length;
    break BeforeRet;
  };

  return result_2986344538;

}

function collectionToString_2986346556(x_2986346558, prefix_2986346559, separator_2986346560, suffix_2986346561) {
  var result_2986346562 = [[]];

    result_2986346562[0] = nimCopy(null, prefix_2986346559, NTI33554449);
    var firstElement_2986346563 = true;
    Label1: {
      var value_2986346567 = 0;
      var i_2952790141 = 0;
      var L_2952790142 = (x_2986346558).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790141 < L_2952790142)) break Label3;
            value_2986346567 = x_2986346558[i_2952790141];
            if (firstElement_2986346563) {
            firstElement_2986346563 = false;
            }
            else {
            result_2986346562[0].push.apply(result_2986346562[0], separator_2986346560);;
            }
            
            addQuoted_855639425(result_2986346562, 0, value_2986346567);
            i_2952790141 += 1;
            if (!(((x_2986346558).length == L_2952790142))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2986346562[0].push.apply(result_2986346562[0], suffix_2986346561);;

  return result_2986346562[0];

}

function HEX24_2986346552(x_2986346554) {
  var result_2986346555 = [];

    result_2986346555 = nimCopy(null, collectionToString_2986346556(x_2986346554, [64,91], [44,32], [93]), NTI33554449);

  return result_2986346555;

}

function find_2986344563(a_2986344566, item_2986344567) {
  var result_2986344568 = 0;

  BeforeRet: {
    result_2986344568 = 0;
    Label1: {
      var i_2986344590 = null;
      var i_2952790146 = 0;
      var L_2952790147 = (a_2986344566).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790146 < L_2952790147)) break Label3;
            i_2986344590 = a_2986344566[chckIndx(i_2952790146, 0, (a_2986344566).length - 1)];
            if ((i_2986344590 == item_2986344567)) {
            break BeforeRet;
            }
            
            result_2986344568 = addInt(result_2986344568, 1);
            i_2952790146 = addInt(i_2952790146, 1);
            if (!(((a_2986344566).length == L_2952790147))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2986344568 = -1;
  };

  return result_2986344568;

}

function index_2986344556(node_2986344557) {
  var result_2986344558 = 0;

  BeforeRet: {
    if ((node_2986344557.parent == null)) {
    result_2986344558 = -1;
    break BeforeRet;
    }
    
    result_2986344558 = find_2986344563(node_2986344557.parent.children, node_2986344557);
    break BeforeRet;
  };

  return result_2986344558;

}

function reverse_2986346425(a_2986346427, first_2986346428, last_2986346429) {
    var x_2986346430 = first_2986346428;
    var y_2986346431 = last_2986346429;
    Label1: {
        Label2: while (true) {
        if (!(x_2986346430 < y_2986346431)) break Label2;
          var Temporary3 = a_2986346427[chckIndx(x_2986346430, 0, (a_2986346427).length - 1)]; a_2986346427[chckIndx(x_2986346430, 0, (a_2986346427).length - 1)] = a_2986346427[chckIndx(y_2986346431, 0, (a_2986346427).length - 1)]; a_2986346427[chckIndx(y_2986346431, 0, (a_2986346427).length - 1)] = Temporary3;          y_2986346431 = subInt(y_2986346431, 1);
          x_2986346430 = addInt(x_2986346430, 1);
        }
    };

  
}

function reverse_2986346419(a_2986346421) {
    reverse_2986346425(a_2986346421, 0, chckRange(nimMax(0, (a_2986346421).length - 1), 0, 2147483647));

  
}

function path_2986346403(node_2986346404) {
  var result_2986346405 = [];

    result_2986346405 = nimCopy(null, [], NTI2986345537);
    var node_2986346410 = node_2986346404;
    Label1: {
        Label2: while (true) {
        if (!!((node_2986346410.parent == null))) break Label2;
          result_2986346405.push(index_2986344556(node_2986346410));;
          node_2986346410 = node_2986346410.parent;
        }
    };
    reverse_2986346419(result_2986346405);

  return result_2986346405;

}

function HEX24_2986346455(node_2986346456) {
  var result_2986346457 = [];

    result_2986346457 = nimCopy(null, (symbolName_2986346458(node_2986346456.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2181038320(node_2986346456.id, idNone_2181038338()))) {
    result_2986346457.push.apply(result_2986346457, (HEX24_2181038317(node_2986346456.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2181038320(node_2986346456.reff, idNone_2181038338()))) {
    result_2986346457.push.apply(result_2986346457, ([114,101,102,102,58,32] || []).concat(HEX24_2181038317(node_2986346456.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_2986346456.text).length)) {
    result_2986346457.push.apply(result_2986346457, ([39] || []).concat(node_2986346456.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_2986344536(node_2986346456))) {
    result_2986346457.push.apply(result_2986346457, (HEX24_369098760(len_2986344536(node_2986346456)) || []).concat([44,32] || []));;
    }
    
    result_2986346457.push.apply(result_2986346457, HEX24_2986346552(path_2986346403(node_2986346456)));;
    result_2986346457.push.apply(result_2986346457, [41]);;

  return result_2986346457;

}

function getTypeKey_3003194679(ctxHEX60gensym90_3003194680, itemIdHEX60gensym90_3003194681) {
  var result_3003194682 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2952790150 = nimCopy(null, itemIdHEX60gensym90_3003194681, NTI3019898905);
    var colontmp__2952790151 = 0;
    result_3003194682 = nimCopy(result_3003194682, {Field0: nimCopy(null, colontmp__2952790150, NTI3019898905), Field1: colontmp__2952790151}, NTI3019898908);
    break BeforeRet;
  };

  return result_3003194682;

}

function bigEndian32_2181038250(b_2181038251) {
  var result_2181038252 = 0;

    result_2181038252 = (((((b_2181038251 & 255) << 24) | ((b_2181038251 & 65280) << 8)) | ((b_2181038251 & 16711680) >> 8)) | (b_2181038251 >> 24));

  return result_2181038252;

}

function genOid_2181038280() {
  var result_2181038281 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2181038284 = toUnix_1191183338(getTime_1191183389());
    var iHEX60gensym1_2181038285 = 0;
    incr_2181038231[0] = addInt(incr_2181038231[0], 1);
    iHEX60gensym1_2181038285 = ((incr_2181038231[0]) | 0);
    result_2181038281.time = bigEndian32_2181038250(timeHEX60gensym1_2181038284);
    result_2181038281.fuzz = fuzz_2181038236;
    result_2181038281.count = bigEndian32_2181038250(iHEX60gensym1_2181038285);

  return result_2181038281;

}

function newId_2181038297() {
  var result_2181038298 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2181038298 = nimCopy(result_2181038298, genOid_2181038280(), NTI2181038083);
    break BeforeRet;
  };

  return result_2181038298;

}

function getItem_3003175953(selfHEX60gensym75_3003175954) {
  var result_3003175955 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym75_3003175954.id, null_2181038340)) {
    selfHEX60gensym75_3003175954.id = nimCopy(selfHEX60gensym75_3003175954.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym75_3003175954.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952790152 = nimCopy(null, selfHEX60gensym75_3003175954.id, NTI2181038083);
    var colontmp__2952790153 = 0;
    result_3003175955 = nimCopy(result_3003175955, {Field0: nimCopy(null, colontmp__2952790152, NTI2181038083), Field1: colontmp__2952790153}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003175955;

}

function hash_3019899110(value_3019899111) {
  var result_3019899112 = 0;

    result_3019899112 = (hash_2181038324(value_3019899111.Field0) ^ hash_1325400236(value_3019899111.Field1));

  return result_3019899112;

}

function hash_3019901572(x_3019901574) {
  var result_3019901575 = 0;

    result_3019901575 = HEX21HEX26_1325400067(result_3019901575, hash_3019899110(x_3019901574["Field0"]));
    result_3019901575 = HEX21HEX26_1325400067(result_3019901575, hash_1325400236(x_3019901574["Field1"]));
    result_3019901575 = HEX21HEX24_1325400082(result_3019901575);

  return result_3019901575;

}

function HEX3DHEX3D_3019899116(a_3019899117, b_3019899118) {
  var result_3019899119 = false;

    result_3019899119 = (HEX3DHEX3D_2181038320(a_3019899117.Field0, b_3019899118.Field0) && (a_3019899117.Field1 == b_3019899118.Field1));

  return result_3019899119;

}

function HEX3DHEX3D_3019901909(x_3019901911, y_3019901912) {
  var result_3019901913 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3019899116(x_3019901911["Field0"], y_3019901912["Field0"]))) {
    result_3019901913 = false;
    break BeforeRet;
    }
    
    if (!((x_3019901911["Field1"] == y_3019901912["Field1"]))) {
    result_3019901913 = false;
    break BeforeRet;
    }
    
    result_3019901913 = true;
    break BeforeRet;
  };

  return result_3019901913;

}

function rawGet_3003221620(t_3003221623, key_3003221624, hc_3003221625, hc_3003221625_Idx) {
  var result_3003221626 = 0;

  BeforeRet: {
    hc_3003221625[hc_3003221625_Idx] = hash_3019901572(key_3003221624);
    if ((hc_3003221625[hc_3003221625_Idx] == 0)) {
    hc_3003221625[hc_3003221625_Idx] = 314159265;
    }
    
    if (((t_3003221623.data).length == 0)) {
    result_3003221626 = -1;
    break BeforeRet;
    }
    
    var h_3003221715 = (hc_3003221625[hc_3003221625_Idx] & (t_3003221623.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003221623.data[chckIndx(h_3003221715, 0, (t_3003221623.data).length - 1)].Field0)) break Label2;
          if (((t_3003221623.data[chckIndx(h_3003221715, 0, (t_3003221623.data).length - 1)].Field0 == hc_3003221625[hc_3003221625_Idx]) && HEX3DHEX3D_3019901909(t_3003221623.data[chckIndx(h_3003221715, 0, (t_3003221623.data).length - 1)].Field1, key_3003221624))) {
          result_3003221626 = h_3003221715;
          break BeforeRet;
          }
          
          h_3003221715 = nextTry_1308622883(h_3003221715, (t_3003221623.data).length - 1);
        }
    };
    result_3003221626 = subInt(-1, h_3003221715);
  };

  return result_3003221626;

}

function hasKey_3003221613(t_3003221616, key_3003221617) {
  var result_3003221618 = false;

    var hc_3003221619 = [0];
    result_3003221618 = (0 <= rawGet_3003221620(t_3003221616, key_3003221617, hc_3003221619, 0));

  return result_3003221618;

}

function contains_3003221607(t_3003221610, key_3003221611) {
  var result_3003221612 = false;

  BeforeRet: {
    result_3003221612 = hasKey_3003221613(t_3003221610, key_3003221611);
    break BeforeRet;
  };

  return result_3003221612;

}

function addQuoted_3019909754(s_3019909756, s_3019909756_Idx, x_3019909757) {
    s_3019909756[s_3019909756_Idx].push.apply(s_3019909756[s_3019909756_Idx], HEX24_3019899092(x_3019909757));;

  
}

function HEX24_3019909728(x_3019909730) {
  var result_3019909731 = [[]];

    result_3019909731[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym66_3019909742 = 0;
    if ((0 < countHEX60gensym66_3019909742)) {
    result_3019909731[0].push.apply(result_3019909731[0], [44,32]);;
    }
    
    result_3019909731[0].push.apply(result_3019909731[0], [105,116,101,109]);;
    result_3019909731[0].push.apply(result_3019909731[0], [58,32]);;
    countHEX60gensym66_3019909742 += 1;
    addQuoted_3019909754(result_3019909731, 0, x_3019909730["Field0"]);
    if ((0 < countHEX60gensym66_3019909742)) {
    result_3019909731[0].push.apply(result_3019909731[0], [44,32]);;
    }
    
    result_3019909731[0].push.apply(result_3019909731[0], [117,112,100,97,116,101]);;
    result_3019909731[0].push.apply(result_3019909731[0], [58,32]);;
    countHEX60gensym66_3019909742 += 1;
    addQuoted_855639425(result_3019909731, 0, x_3019909730["Field1"]);
    result_3019909731[0].push.apply(result_3019909731[0], [41]);;

  return result_3019909731[0];

}

function raiseKeyError_3019909681(key_3019909683) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3019909728(key_3019909683) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003222052(t_3003222055, key_3003222056) {
  var result_3003222057 = null;
  var result_3003222057_Idx = 0;

    var hcHEX60gensym22_3003222058 = [0];
    var indexHEX60gensym22_3003222065 = rawGet_3003221620(t_3003222055, key_3003222056, hcHEX60gensym22_3003222058, 0);
    if ((0 <= indexHEX60gensym22_3003222065)) {
    result_3003222057 = t_3003222055.data[chckIndx(indexHEX60gensym22_3003222065, 0, (t_3003222055.data).length - 1)]; result_3003222057_Idx = "Field2";
    }
    else {
    raiseKeyError_3019909681(key_3003222056);
    }
    

  return [result_3003222057, result_3003222057_Idx];

}

function rawGet_3003222775(t_3003222778, key_3003222779, hc_3003222780, hc_3003222780_Idx) {
  var result_3003222781 = 0;

  BeforeRet: {
    hc_3003222780[hc_3003222780_Idx] = hash_3019901572(key_3003222779);
    if ((hc_3003222780[hc_3003222780_Idx] == 0)) {
    hc_3003222780[hc_3003222780_Idx] = 314159265;
    }
    
    if (((t_3003222778.data).length == 0)) {
    result_3003222781 = -1;
    break BeforeRet;
    }
    
    var h_3003222870 = (hc_3003222780[hc_3003222780_Idx] & (t_3003222778.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003222778.data[chckIndx(h_3003222870, 0, (t_3003222778.data).length - 1)].Field0)) break Label2;
          if (((t_3003222778.data[chckIndx(h_3003222870, 0, (t_3003222778.data).length - 1)].Field0 == hc_3003222780[hc_3003222780_Idx]) && HEX3DHEX3D_3019901909(t_3003222778.data[chckIndx(h_3003222870, 0, (t_3003222778.data).length - 1)].Field1, key_3003222779))) {
          result_3003222781 = h_3003222870;
          break BeforeRet;
          }
          
          h_3003222870 = nextTry_1308622883(h_3003222870, (t_3003222778.data).length - 1);
        }
    };
    result_3003222781 = subInt(-1, h_3003222870);
  };

  return result_3003222781;

}

function del_3003222769(t_3003222772, key_3003222773) {
    var hc_3003222774 = [0];
    var i_3003223136 = rawGet_3003222775(t_3003222772, key_3003222773, hc_3003222774, 0);
    var mskHEX60gensym36_3003223140 = (t_3003222772.data).length - 1;
    if ((0 <= i_3003223136)) {
    t_3003222772.counter = subInt(t_3003222772.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003223147 = i_3003223136;
            var rHEX60gensym36_3003223148 = jHEX60gensym36_3003223147;
            t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field0 = 0;
            t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field1 = nimCopy(t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field2 = nimCopy(null, [], NTI3003121672);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003223136 = (addInt(i_3003223136, 1) & mskHEX60gensym36_3003223140);
                  if (isEmpty_1308622877(t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003223148 = (t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)].Field0 & mskHEX60gensym36_3003223140);
                  if (!(((((rHEX60gensym36_3003223148 <= i_3003223136) && (jHEX60gensym36_3003223147 < rHEX60gensym36_3003223148)) || ((jHEX60gensym36_3003223147 < rHEX60gensym36_3003223148) && (i_3003223136 < jHEX60gensym36_3003223147))) || ((i_3003223136 < jHEX60gensym36_3003223147) && (rHEX60gensym36_3003223148 <= i_3003223136))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003222772.data[chckIndx(jHEX60gensym36_3003223147, 0, (t_3003222772.data).length - 1)] = nimCopy(t_3003222772.data[chckIndx(jHEX60gensym36_3003223147, 0, (t_3003222772.data).length - 1)], t_3003222772.data[chckIndx(i_3003223136, 0, (t_3003222772.data).length - 1)], NTI3003121684);
          }
      };
    };
    }
    

  
}

function rawGet_3003222268(t_3003222271, key_3003222272, hc_3003222273, hc_3003222273_Idx) {
  var result_3003222274 = 0;

  BeforeRet: {
    hc_3003222273[hc_3003222273_Idx] = hash_2181038324(key_3003222272);
    if ((hc_3003222273[hc_3003222273_Idx] == 0)) {
    hc_3003222273[hc_3003222273_Idx] = 314159265;
    }
    
    if (((t_3003222271.data).length == 0)) {
    result_3003222274 = -1;
    break BeforeRet;
    }
    
    var h_3003222360 = (hc_3003222273[hc_3003222273_Idx] & (t_3003222271.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003222271.data[chckIndx(h_3003222360, 0, (t_3003222271.data).length - 1)].Field0)) break Label2;
          if (((t_3003222271.data[chckIndx(h_3003222360, 0, (t_3003222271.data).length - 1)].Field0 == hc_3003222273[hc_3003222273_Idx]) && HEX3DHEX3D_2181038320(t_3003222271.data[chckIndx(h_3003222360, 0, (t_3003222271.data).length - 1)].Field1, key_3003222272))) {
          result_3003222274 = h_3003222360;
          break BeforeRet;
          }
          
          h_3003222360 = nextTry_1308622883(h_3003222360, (t_3003222271.data).length - 1);
        }
    };
    result_3003222274 = subInt(-1, h_3003222360);
  };

  return result_3003222274;

}

function raiseKeyError_2986346264(key_2986346266) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2181038317(key_2986346266) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003222261(t_3003222264, key_3003222265) {
  var result_3003222266 = null;

    var hcHEX60gensym22_3003222267 = [0];
    var indexHEX60gensym22_3003222613 = rawGet_3003222268(t_3003222264, key_3003222265, hcHEX60gensym22_3003222267, 0);
    if ((0 <= indexHEX60gensym22_3003222613)) {
    result_3003222266 = t_3003222264.data[chckIndx(indexHEX60gensym22_3003222613, 0, (t_3003222264.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_3003222265);
    }
    

  return result_3003222266;

}

function voidType_3087008156() {
  var result_3087008157 = null;

    result_3087008157 = {kind: 1, open: false, returnType: null, paramTypes: []};

  return result_3087008157;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet58[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet59[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3087008158() {
  var result_3087008159 = null;

    result_3087008159 = {kind: 3, open: false, returnType: null, paramTypes: []};

  return result_3087008159;

}

function errorType_3087008120() {
  var result_3087008121 = null;

    result_3087008121 = {kind: 0, open: false, returnType: null, paramTypes: []};

  return result_3087008121;

}

function stringType_3087008160() {
  var result_3087008161 = null;

    result_3087008161 = {kind: 2, open: false, returnType: null, paramTypes: []};

  return result_3087008161;

}

function HEX5BHEX5D_2986344532(node_2986344533, index_2986344534) {
  var result_2986344535 = null;

  BeforeRet: {
    result_2986344535 = node_2986344533.children[chckIndx(index_2986344534, 0, (node_2986344533.children).length - 1)];
    break BeforeRet;
  };

  return result_2986344535;

}

function recordDependency_3003175740(ctxHEX60gensym72_3003175741, itemHEX60gensym72_3003175742, updateHEX60gensym72_3003175743) {
    if ((0 < (ctxHEX60gensym72_3003175741.dependencyStack).length)) {
    ctxHEX60gensym72_3003175741.dependencyStack[chckIndx((ctxHEX60gensym72_3003175741.dependencyStack).length - 1, 0, (ctxHEX60gensym72_3003175741.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym72_3003175742, NTI3019898905), Field1: updateHEX60gensym72_3003175743});;
    }
    

  
}

function toFloat_33556023(i_33556024) {
  var result_33556025 = 0.0;

    result_33556025 = i_33556024;

  return result_33556025;

}

function HEX2F_33556035(x_33556036, y_33556037) {
  var result_33556038 = 0.0;

    result_33556038 = (toFloat_33556023(x_33556036) / toFloat_33556023(y_33556037));

  return result_33556038;

}

function toUnixFloat_1191183346(t_1191183347) {
  var result_1191183348 = 0.0;

    result_1191183348 = (t_1191183347.seconds + HEX2F_33556035(t_1191183347.nanosecond, convert_1191182870(3, 0, 1)));

  return result_1191183348;

}

function myGetTicks_2281701422() {
  var result_2281701423 = 0;

  BeforeRet: {
    var time_2281701424 = getTime_1191183389();
    result_2281701423 = (toUnixFloat_1191183346(time_2281701424) * 1000000000.0);
    break BeforeRet;
  };

  return result_2281701423;

}

function startTimer_2281701428() {
  var result_2281701429 = ({start: 0});

    result_2281701429 = nimCopy(result_2281701429, {start: myGetTicks_2281701422()}, NTI2281701407);

  return result_2281701429;

}

function rawGet_3019901565(t_3019901568, key_3019901569, hc_3019901570, hc_3019901570_Idx) {
  var result_3019901571 = 0;

  BeforeRet: {
    hc_3019901570[hc_3019901570_Idx] = hash_3019901572(key_3019901569);
    if ((hc_3019901570[hc_3019901570_Idx] == 0)) {
    hc_3019901570[hc_3019901570_Idx] = 314159265;
    }
    
    if (((t_3019901568.data).length == 0)) {
    result_3019901571 = -1;
    break BeforeRet;
    }
    
    var h_3019901668 = (hc_3019901570[hc_3019901570_Idx] & (t_3019901568.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019901568.data[chckIndx(h_3019901668, 0, (t_3019901568.data).length - 1)].Field0)) break Label2;
          if (((t_3019901568.data[chckIndx(h_3019901668, 0, (t_3019901568.data).length - 1)].Field0 == hc_3019901570[hc_3019901570_Idx]) && HEX3DHEX3D_3019901909(t_3019901568.data[chckIndx(h_3019901668, 0, (t_3019901568.data).length - 1)].Field1, key_3019901569))) {
          result_3019901571 = h_3019901668;
          break BeforeRet;
          }
          
          h_3019901668 = nextTry_1308622883(h_3019901668, (t_3019901568.data).length - 1);
        }
    };
    result_3019901571 = subInt(-1, h_3019901668);
  };

  return result_3019901571;

}

function getOrDefault_3019901555(t_3019901558, key_3019901559, default_3019901560) {
    var Temporary1;

  var result_3019901561 = null;

    var hcHEX60gensym22_3019901564 = [0];
    var indexHEX60gensym22_3019901931 = rawGet_3019901565(t_3019901558, key_3019901559, hcHEX60gensym22_3019901564, 0);
    if ((0 <= indexHEX60gensym22_3019901931)) {
    Temporary1 = t_3019901558.data[chckIndx(indexHEX60gensym22_3019901931, 0, (t_3019901558.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3019901560;
    }
    
    result_3019901561 = Temporary1;

  return result_3019901561;

}

function getOrDefault_3019901459(cache_3019901462, key_3019901463, val_3019901464) {
  var result_3019901465 = 0;

    var node_3019902021 = getOrDefault_3019901555(cache_3019901462.table, key_3019901463, null);
    if ((node_3019902021 == null)) {
    result_3019901465 = val_3019901464;
    }
    else {
      result_3019901465 = node_3019902021.value.val;
    }
    

  return result_3019901465;

}

function nodeColor_3019901365(graph_3019901366, key_3019901367, parentVerified_3019901368) {
  var result_3019901369 = 0;

  BeforeRet: {
    if ((key_3019901367.Field1 == -1)) {
    var inputChangedRevision_3019902025 = getOrDefault_3019901459(graph_3019901366.changed, key_3019901367, graph_3019901366.revision);
    if ((parentVerified_3019901368 < inputChangedRevision_3019902025)) {
    result_3019901369 = 1;
    break BeforeRet;
    }
    else {
      result_3019901369 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3019902121 = getOrDefault_3019901459(graph_3019901366.verified, key_3019901367, 0);
    if (!((verified_3019902121 == graph_3019901366.revision))) {
    result_3019901369 = 0;
    break BeforeRet;
    }
    
    var changed_3019902217 = getOrDefault_3019901459(graph_3019901366.changed, key_3019901367, graph_3019901366.revision);
    if ((changed_3019902217 == graph_3019901366.revision)) {
    result_3019901369 = 1;
    break BeforeRet;
    }
    
    result_3019901369 = 2;
    break BeforeRet;
  };

  return result_3019901369;

}

function hash_2986346803(node_2986346804) {
  var result_2986346805 = 0;

    result_2986346805 = node_2986346804;

  return result_2986346805;

}

function rawGet_3003124083(t_3003124086, key_3003124087, hc_3003124088, hc_3003124088_Idx) {
  var result_3003124089 = 0;

  BeforeRet: {
    hc_3003124088[hc_3003124088_Idx] = hash_2986346803(key_3003124087);
    if ((hc_3003124088[hc_3003124088_Idx] == 0)) {
    hc_3003124088[hc_3003124088_Idx] = 314159265;
    }
    
    if (((t_3003124086.data).length == 0)) {
    result_3003124089 = -1;
    break BeforeRet;
    }
    
    var h_3003124175 = (hc_3003124088[hc_3003124088_Idx] & (t_3003124086.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003124086.data[chckIndx(h_3003124175, 0, (t_3003124086.data).length - 1)].Field0)) break Label2;
          if (((t_3003124086.data[chckIndx(h_3003124175, 0, (t_3003124086.data).length - 1)].Field0 == hc_3003124088[hc_3003124088_Idx]) && (t_3003124086.data[chckIndx(h_3003124175, 0, (t_3003124086.data).length - 1)].Field1 == key_3003124087))) {
          result_3003124089 = h_3003124175;
          break BeforeRet;
          }
          
          h_3003124175 = nextTry_1308622883(h_3003124175, (t_3003124086.data).length - 1);
        }
    };
    result_3003124089 = subInt(-1, h_3003124175);
  };

  return result_3003124089;

}

function hasKey_3003194867(t_3003194870, key_3003194871) {
  var result_3003194872 = false;

    var hc_3003194873 = [0];
    result_3003194872 = (0 <= rawGet_3003124083(t_3003194870, key_3003194871, hc_3003194873, 0));

  return result_3003194872;

}

function contains_3003194861(t_3003194864, key_3003194865) {
  var result_3003194866 = false;

  BeforeRet: {
    result_3003194866 = hasKey_3003194867(t_3003194864, key_3003194865);
    break BeforeRet;
  };

  return result_3003194866;

}

function contains_3003194767(cache_3003194770, key_3003194771) {
  var result_3003194772 = false;

    result_3003194772 = contains_3003194861(cache_3003194770.table, key_3003194771);

  return result_3003194772;

}

function HEX5BHEX5D_3003192204(t_3003192207, key_3003192208) {
  var result_3003192209 = null;
  var result_3003192209_Idx = 0;

    var hcHEX60gensym22_3003192210 = [0];
    var indexHEX60gensym22_3003192217 = rawGet_3019899319(t_3003192207, key_3003192208, hcHEX60gensym22_3003192210, 0);
    if ((0 <= indexHEX60gensym22_3003192217)) {
    result_3003192209 = t_3003192207.data[chckIndx(indexHEX60gensym22_3003192217, 0, (t_3003192207.data).length - 1)]; result_3003192209_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850842(key_3003192208);
    }
    

  return [result_3003192209, result_3003192209_Idx];

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_3019905014(t_3019905017, key_3019905018, hc_3019905019, hc_3019905019_Idx) {
  var result_3019905020 = 0;

  BeforeRet: {
    hc_3019905019[hc_3019905019_Idx] = hash_3019901572(key_3019905018);
    if ((hc_3019905019[hc_3019905019_Idx] == 0)) {
    hc_3019905019[hc_3019905019_Idx] = 314159265;
    }
    
    if (((t_3019905017.data).length == 0)) {
    result_3019905020 = -1;
    break BeforeRet;
    }
    
    var h_3019905109 = (hc_3019905019[hc_3019905019_Idx] & (t_3019905017.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019905017.data[chckIndx(h_3019905109, 0, (t_3019905017.data).length - 1)].Field0)) break Label2;
          if (((t_3019905017.data[chckIndx(h_3019905109, 0, (t_3019905017.data).length - 1)].Field0 == hc_3019905019[hc_3019905019_Idx]) && HEX3DHEX3D_3019901909(t_3019905017.data[chckIndx(h_3019905109, 0, (t_3019905017.data).length - 1)].Field1, key_3019905018))) {
          result_3019905020 = h_3019905109;
          break BeforeRet;
          }
          
          h_3019905109 = nextTry_1828716586(h_3019905109, (t_3019905017.data).length - 1);
        }
    };
    result_3019905020 = subInt(-1, h_3019905109);
  };

  return result_3019905020;

}

function contains_3003192377(s_3003192379, key_3003192380) {
  var result_3003192381 = false;

    var hc_3003192382 = [0];
    var index_3003192396 = rawGet_3019905014(s_3003192379, key_3003192380, hc_3003192382, 0);
    result_3003192381 = (0 <= index_3003192396);

  return result_3003192381;

}

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function mustRehash_3019906280(t_3019906282) {
  var result_3019906283 = false;

    if (!((t_3019906282.counter < (t_3019906282.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019906283 = ((mulInt((t_3019906282.data).length, 2) < mulInt(t_3019906282.counter, 3)) || (subInt((t_3019906282.data).length, t_3019906282.counter) < 4));

  return result_3019906283;

}

function rawGetKnownHC_3019906886(t_3019906889, key_3019906890, hc_3019906891) {
  var result_3019906892 = 0;

  BeforeRet: {
    if (((t_3019906889.data).length == 0)) {
    result_3019906892 = -1;
    break BeforeRet;
    }
    
    var h_3019906977 = (hc_3019906891 & (t_3019906889.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3019906889.data[chckIndx(h_3019906977, 0, (t_3019906889.data).length - 1)].Field0)) break Label2;
          if (((t_3019906889.data[chckIndx(h_3019906977, 0, (t_3019906889.data).length - 1)].Field0 == hc_3019906891) && HEX3DHEX3D_3019901909(t_3019906889.data[chckIndx(h_3019906977, 0, (t_3019906889.data).length - 1)].Field1, key_3019906890))) {
          result_3019906892 = h_3019906977;
          break BeforeRet;
          }
          
          h_3019906977 = nextTry_1828716586(h_3019906977, (t_3019906889.data).length - 1);
        }
    };
    result_3019906892 = subInt(-1, h_3019906977);
  };

  return result_3019906892;

}

function rawInsert_3019907390(s_3019907392, data_3019907393, data_3019907393_Idx, key_3019907394, hc_3019907395, h_3019907396) {
    if (((data_3019907393[data_3019907393_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_3019907479 = slotsNeeded_1828716594(64);
    s_3019907392.counter = 0;
    s_3019907392.data = new Array(chckRange(correctSizeHEX60gensym56_3019907479, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3019907479, 0, 2147483647) ; ++i) { s_3019907392.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3019907393[data_3019907393_Idx][chckIndx(h_3019907396, 0, (data_3019907393[data_3019907393_Idx]).length - 1)].Field1 = nimCopy(data_3019907393[data_3019907393_Idx][chckIndx(h_3019907396, 0, (data_3019907393[data_3019907393_Idx]).length - 1)].Field1, key_3019907394, NTI3019898908);
    data_3019907393[data_3019907393_Idx][chckIndx(h_3019907396, 0, (data_3019907393[data_3019907393_Idx]).length - 1)].Field0 = hc_3019907395;

  
}

function enlarge_3019906543(s_3019906545) {
    var n_3019906547 = [];
    n_3019906547 = new Array(chckRange(mulInt((s_3019906545.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3019906545.data).length, 2), 0, 2147483647) ; ++i) { n_3019906547[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3019906545.data; s_3019906545.data = n_3019906547; n_3019906547 = Temporary1;    Label2: {
      var i_3019906645 = 0;
      var colontmp__2952790169 = 0;
      colontmp__2952790169 = (n_3019906547).length - 1;
      var res_2952790170 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790170 <= colontmp__2952790169)) break Label4;
            i_3019906645 = res_2952790170;
            if (isFilled_1828716583(n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field0)) {
            var j_3019907225 = subInt(-1, rawGetKnownHC_3019906886(s_3019906545, n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field1, n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field0));
            rawInsert_3019907390(s_3019906545, s_3019906545, "data", n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field1, n_3019906547[chckIndx(i_3019906645, 0, (n_3019906547).length - 1)].Field0, j_3019907225);
            }
            
            res_2952790170 = addInt(res_2952790170, 1);
          }
      };
    };

  
}

function incl_3019906164(s_3019906166, key_3019906167) {
    if (((s_3019906166.data).length == 0)) {
    var correctSizeHEX60gensym49_3019906250 = slotsNeeded_1828716594(64);
    s_3019906166.counter = 0;
    s_3019906166.data = new Array(chckRange(correctSizeHEX60gensym49_3019906250, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_3019906250, 0, 2147483647) ; ++i) { s_3019906166.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3019906265 = [0];
    var index_3019906279 = rawGet_3019905014(s_3019906166, key_3019906167, hc_3019906265, 0);
    if ((index_3019906279 < 0)) {
    if (mustRehash_3019906280(s_3019906166)) {
    enlarge_3019906543(s_3019906166);
    index_3019906279 = rawGetKnownHC_3019906886(s_3019906166, key_3019906167, hc_3019906265[0]);
    }
    
    rawInsert_3019907390(s_3019906166, s_3019906166, "data", key_3019906167, hc_3019906265[0], subInt(-1, index_3019906279));
    s_3019906166.counter = addInt(s_3019906166.counter, 1);
    }
    

  
}

function getOrDefault_3003192608(t_3003192611, key_3003192612) {
  var result_3003192613 = [];

    var hcHEX60gensym462_3003192616 = [0];
    var indexHEX60gensym462_3003192623 = rawGet_3019899319(t_3003192611, key_3003192612, hcHEX60gensym462_3003192616, 0);
    if ((0 <= indexHEX60gensym462_3003192623)) {
    result_3003192613 = nimCopy(null, t_3003192611.data[chckIndx(indexHEX60gensym462_3003192623, 0, (t_3003192611.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_3003192613;

}

function rawGet_3003171799(t_3003171802, key_3003171803, hc_3003171804, hc_3003171804_Idx) {
  var result_3003171805 = 0;

  BeforeRet: {
    hc_3003171804[hc_3003171804_Idx] = hash_1325400236(key_3003171803);
    if ((hc_3003171804[hc_3003171804_Idx] == 0)) {
    hc_3003171804[hc_3003171804_Idx] = 314159265;
    }
    
    if (((t_3003171802.data).length == 0)) {
    result_3003171805 = -1;
    break BeforeRet;
    }
    
    var h_3003171893 = (hc_3003171804[hc_3003171804_Idx] & (t_3003171802.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003171802.data[chckIndx(h_3003171893, 0, (t_3003171802.data).length - 1)].Field0)) break Label2;
          if (((t_3003171802.data[chckIndx(h_3003171893, 0, (t_3003171802.data).length - 1)].Field0 == hc_3003171804[hc_3003171804_Idx]) && (t_3003171802.data[chckIndx(h_3003171893, 0, (t_3003171802.data).length - 1)].Field1 == key_3003171803))) {
          result_3003171805 = h_3003171893;
          break BeforeRet;
          }
          
          h_3003171893 = nextTry_1308622883(h_3003171893, (t_3003171802.data).length - 1);
        }
    };
    result_3003171805 = subInt(-1, h_3003171893);
  };

  return result_3003171805;

}

function hasKey_3003192786(t_3003192789, key_3003192790) {
  var result_3003192791 = false;

    var hc_3003192792 = [0];
    result_3003192791 = (0 <= rawGet_3003171799(t_3003192789, key_3003192790, hc_3003192792, 0));

  return result_3003192791;

}

function contains_3003192780(t_3003192783, key_3003192784) {
  var result_3003192785 = false;

  BeforeRet: {
    result_3003192785 = hasKey_3003192786(t_3003192783, key_3003192784);
    break BeforeRet;
  };

  return result_3003192785;

}

function HEX5BHEX5D_3003192879(t_3003192882, key_3003192883) {
  var result_3003192884 = null;
  var result_3003192884_Idx = 0;

    var hcHEX60gensym22_3003192885 = [0];
    var indexHEX60gensym22_3003192892 = rawGet_3003171799(t_3003192882, key_3003192883, hcHEX60gensym22_3003192885, 0);
    if ((0 <= indexHEX60gensym22_3003192892)) {
    result_3003192884 = t_3003192882.data[chckIndx(indexHEX60gensym22_3003192892, 0, (t_3003192882.data).length - 1)]; result_3003192884_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850842(key_3003192883);
    }
    

  return [result_3003192884, result_3003192884_Idx];

}

function newDoublyLinkedNode_3019910476(value_3019910478) {
  var result_3019910479 = null;

    result_3019910479 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: 0})});
    result_3019910479.value = nimCopy(result_3019910479.value, value_3019910478, NTI3019898932);

  return result_3019910479;

}

function mustRehash_3019910826(t_3019910828) {
  var result_3019910829 = false;

    if (!((t_3019910828.counter < (t_3019910828.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019910829 = ((mulInt((t_3019910828.data).length, 2) < mulInt(t_3019910828.counter, 3)) || (subInt((t_3019910828.data).length, t_3019910828.counter) < 4));

  return result_3019910829;

}

function rawInsert_3019911519(t_3019911523, data_3019911524, data_3019911524_Idx, key_3019911525, val_3019911526, hc_3019911527, h_3019911528) {
    data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field1 = nimCopy(data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field1, key_3019911525, NTI3019898908);
    data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field2 = val_3019911526;
    data_3019911524[data_3019911524_Idx][chckIndx(h_3019911528, 0, (data_3019911524[data_3019911524_Idx]).length - 1)].Field0 = hc_3019911527;

  
}

function enlarge_3019911083(t_3019911086) {
    var n_3019911089 = [];
    n_3019911089 = new Array(chckRange(mulInt((t_3019911086.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019911086.data).length, 2), 0, 2147483647) ; ++i) { n_3019911089[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3019911086.data; t_3019911086.data = n_3019911089; n_3019911089 = Temporary1;    Label2: {
      var i_3019911187 = 0;
      var colontmp__2952790176 = 0;
      colontmp__2952790176 = (n_3019911089).length - 1;
      var res_2952790177 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790177 <= colontmp__2952790176)) break Label4;
            i_3019911187 = res_2952790177;
            var eh_3019911268 = n_3019911089[chckIndx(i_3019911187, 0, (n_3019911089).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019911268)) {
            var j_3019911272 = (eh_3019911268 & (t_3019911086.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019911086.data[chckIndx(j_3019911272, 0, (t_3019911086.data).length - 1)].Field0)) break Label6;
                  j_3019911272 = nextTry_1308622883(j_3019911272, (t_3019911086.data).length - 1);
                }
            };
            rawInsert_3019911519(t_3019911086, t_3019911086, "data", n_3019911089[chckIndx(i_3019911187, 0, (n_3019911089).length - 1)].Field1, n_3019911089[chckIndx(i_3019911187, 0, (n_3019911089).length - 1)].Field2, eh_3019911268, j_3019911272);
            }
            
            res_2952790177 = addInt(res_2952790177, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019911769(t_3019911772, key_3019911773, hc_3019911774) {
  var result_3019911775 = 0;

  BeforeRet: {
    if (((t_3019911772.data).length == 0)) {
    result_3019911775 = -1;
    break BeforeRet;
    }
    
    var h_3019911860 = (hc_3019911774 & (t_3019911772.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019911772.data[chckIndx(h_3019911860, 0, (t_3019911772.data).length - 1)].Field0)) break Label2;
          if (((t_3019911772.data[chckIndx(h_3019911860, 0, (t_3019911772.data).length - 1)].Field0 == hc_3019911774) && HEX3DHEX3D_3019901909(t_3019911772.data[chckIndx(h_3019911860, 0, (t_3019911772.data).length - 1)].Field1, key_3019911773))) {
          result_3019911775 = h_3019911860;
          break BeforeRet;
          }
          
          h_3019911860 = nextTry_1308622883(h_3019911860, (t_3019911772.data).length - 1);
        }
    };
    result_3019911775 = subInt(-1, h_3019911860);
  };

  return result_3019911775;

}

function HEX5BHEX5DHEX3D_3019910558(t_3019910561, key_3019910562, val_3019910563) {
    if (((t_3019910561.data).length == 0)) {
    var correctSizeHEX60gensym77_3019910646 = slotsNeeded_1308622891(32);
    t_3019910561.counter = 0;
    t_3019910561.data = new Array(chckRange(correctSizeHEX60gensym77_3019910646, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_3019910646, 0, 2147483647) ; ++i) { t_3019910561.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3019910651 = [0];
    var index_3019910658 = rawGet_3019901565(t_3019910561, key_3019910562, hc_3019910651, 0);
    if ((0 <= index_3019910658)) {
    t_3019910561.data[chckIndx(index_3019910658, 0, (t_3019910561.data).length - 1)].Field2 = val_3019910563;
    }
    else {
      if (((t_3019910561.data).length == 0)) {
      var correctSizeHEX60gensym80_3019910821 = slotsNeeded_1308622891(32);
      t_3019910561.counter = 0;
      t_3019910561.data = new Array(chckRange(correctSizeHEX60gensym80_3019910821, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym80_3019910821, 0, 2147483647) ; ++i) { t_3019910561.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3019910826(t_3019910561)) {
      enlarge_3019911083(t_3019910561);
      index_3019910658 = rawGetKnownHC_3019911769(t_3019910561, key_3019910562, hc_3019910651[0]);
      }
      
      index_3019910658 = subInt(-1, index_3019910658);
      rawInsert_3019911519(t_3019910561, t_3019910561, "data", key_3019910562, val_3019910563, hc_3019910651[0], index_3019910658);
      t_3019910561.counter = addInt(t_3019910561.counter, 1);
    }
    

  
}

function prepend_3019912169(L_3019912171, n_3019912172) {
    n_3019912172.prev = null;
    n_3019912172.next = L_3019912171.head;
    if (!((L_3019912171.head == null))) {
    if (!((L_3019912171.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3019912171.head.prev = n_3019912172;
    }
    
    L_3019912171.head = n_3019912172;
    if ((L_3019912171.tail == null)) {
    L_3019912171.tail = n_3019912172;
    }
    

  
}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3019905008(s_3019905010, key_3019905011) {
          var Temporary5;

  var result_3019905012 = false;

  BeforeRet: {
    var hc_3019905013 = [0];
    var i_3019905375 = rawGet_3019905014(s_3019905010, key_3019905011, hc_3019905013, 0);
    var msk_3019905379 = (s_3019905010.data).length - 1;
    result_3019905012 = true;
    if ((0 <= i_3019905375)) {
    result_3019905012 = false;
    s_3019905010.counter = subInt(s_3019905010.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3019905385 = i_3019905375;
          var r_3019905386 = j_3019905385;
          s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field0 = 0;
          s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field1 = nimCopy(s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3019905375 = (addInt(i_3019905375, 1) & msk_3019905379);
                if (isEmpty_1828716580(s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3019905386 = (s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)].Field0 & msk_3019905379);
                if (!(((((r_3019905386 <= i_3019905375) && (j_3019905385 < r_3019905386)) || ((j_3019905385 < r_3019905386) && (i_3019905375 < j_3019905385))) || ((i_3019905375 < j_3019905385) && (r_3019905386 <= i_3019905375))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)];
          s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)] = genericReset(s_3019905010.data[chckIndx(i_3019905375, 0, (s_3019905010.data).length - 1)], NTI3019898988);
          s_3019905010.data[chckIndx(j_3019905385, 0, (s_3019905010.data).length - 1)] = nimCopy(s_3019905010.data[chckIndx(j_3019905385, 0, (s_3019905010.data).length - 1)], Temporary5, NTI3019898988);
        }
    };
    }
    
  };

  return result_3019905012;

}

function excl_3019904993(s_3019904995, key_3019904996) {
    var _ = exclImpl_3019905008(s_3019904995, key_3019904996);

  
}

function len_3019912562(t_3019912565) {
  var result_3019912566 = 0;

    result_3019912566 = t_3019912565.counter;

  return result_3019912566;

}

function len_3019912479(cache_3019912482) {
  var result_3019912483 = 0;

    result_3019912483 = len_3019912562(cache_3019912482.table);

  return result_3019912483;

}

function del_3019912654(t_3019912657, key_3019912658) {
    var hc_3019912659 = [0];
    var i_3019912666 = rawGet_3019901565(t_3019912657, key_3019912658, hc_3019912659, 0);
    var mskHEX60gensym36_3019912670 = (t_3019912657.data).length - 1;
    if ((0 <= i_3019912666)) {
    t_3019912657.counter = subInt(t_3019912657.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019912677 = i_3019912666;
            var rHEX60gensym36_3019912678 = jHEX60gensym36_3019912677;
            t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field0 = 0;
            t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field1 = nimCopy(t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019912666 = (addInt(i_3019912666, 1) & mskHEX60gensym36_3019912670);
                  if (isEmpty_1308622877(t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019912678 = (t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)].Field0 & mskHEX60gensym36_3019912670);
                  if (!(((((rHEX60gensym36_3019912678 <= i_3019912666) && (jHEX60gensym36_3019912677 < rHEX60gensym36_3019912678)) || ((jHEX60gensym36_3019912677 < rHEX60gensym36_3019912678) && (i_3019912666 < jHEX60gensym36_3019912677))) || ((i_3019912666 < jHEX60gensym36_3019912677) && (rHEX60gensym36_3019912678 <= i_3019912666))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019912657.data[chckIndx(jHEX60gensym36_3019912677, 0, (t_3019912657.data).length - 1)] = nimCopy(t_3019912657.data[chckIndx(jHEX60gensym36_3019912677, 0, (t_3019912657.data).length - 1)], t_3019912657.data[chckIndx(i_3019912666, 0, (t_3019912657.data).length - 1)], NTI3019898968);
          }
      };
    };
    }
    

  
}

function remove_3019913413(L_3019913415, n_3019913416) {
    if ((n_3019913416 == L_3019913415.tail)) {
    L_3019913415.tail = n_3019913416.prev;
    }
    
    if ((n_3019913416 == L_3019913415.head)) {
    L_3019913415.head = n_3019913416.next;
    }
    
    if (!((n_3019913416.next == null))) {
    n_3019913416.next.prev = n_3019913416.prev;
    }
    
    if (!((n_3019913416.prev == null))) {
    n_3019913416.prev.next = n_3019913416.next;
    }
    

  
}

function resize_3019912397(cache_3019912400) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3019912400.capacity < len_3019912479(cache_3019912400))) break Label2;
          var t_3019912567 = cache_3019912400.list.tail;
          if (cache_3019912400.recordRemovedKeys) {
          incl_3019906164(cache_3019912400.removedKeys, t_3019912567.value.key);
          }
          
          del_3019912654(cache_3019912400.table, t_3019912567.value.key);
          remove_3019913413(cache_3019912400.list, t_3019912567);
        }
    };

  
}

function addNewNode_3019910468(cache_3019910471, key_3019910472, val_3019910473) {
    var node_3019910494 = newDoublyLinkedNode_3019910476({key: nimCopy(null, key_3019910472, NTI3019898908), val: val_3019910473});
    HEX5BHEX5DHEX3D_3019910558(cache_3019910471.table, key_3019910472, node_3019910494);
    prepend_3019912169(cache_3019910471.list, node_3019910494);
    if (cache_3019910471.recordRemovedKeys) {
    excl_3019904993(cache_3019910471.removedKeys, key_3019910472);
    }
    
    resize_3019912397(cache_3019910471);

  
}

function HEX5BHEX5DHEX3D_3019910340(cache_3019910343, key_3019910344, val_3019910345) {
    var node_3019910441 = getOrDefault_3019901555(cache_3019910343.table, key_3019910344, null);
    if ((node_3019910441 == null)) {
    addNewNode_3019910468(cache_3019910343, key_3019910344, val_3019910345);
    }
    else {
      node_3019910441.value.val = val_3019910345;
      remove_3019913413(cache_3019910343.list, node_3019910441);
      prepend_3019912169(cache_3019910343.list, node_3019910441);
    }
    

  
}

function rawGet_3019909069(t_3019909072, key_3019909073, hc_3019909074, hc_3019909074_Idx) {
  var result_3019909075 = 0;

  BeforeRet: {
    hc_3019909074[hc_3019909074_Idx] = hash_3019901572(key_3019909073);
    if ((hc_3019909074[hc_3019909074_Idx] == 0)) {
    hc_3019909074[hc_3019909074_Idx] = 314159265;
    }
    
    if (((t_3019909072.data).length == 0)) {
    result_3019909075 = -1;
    break BeforeRet;
    }
    
    var h_3019909164 = (hc_3019909074[hc_3019909074_Idx] & (t_3019909072.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019909072.data[chckIndx(h_3019909164, 0, (t_3019909072.data).length - 1)].Field0)) break Label2;
          if (((t_3019909072.data[chckIndx(h_3019909164, 0, (t_3019909072.data).length - 1)].Field0 == hc_3019909074[hc_3019909074_Idx]) && HEX3DHEX3D_3019901909(t_3019909072.data[chckIndx(h_3019909164, 0, (t_3019909072.data).length - 1)].Field1, key_3019909073))) {
          result_3019909075 = h_3019909164;
          break BeforeRet;
          }
          
          h_3019909164 = nextTry_1308622883(h_3019909164, (t_3019909072.data).length - 1);
        }
    };
    result_3019909075 = subInt(-1, h_3019909164);
  };

  return result_3019909075;

}

function getOrDefault_3019914017(t_3019914020, key_3019914021, default_3019914022) {
    var Temporary1;

  var result_3019914023 = null;

    var hcHEX60gensym90_3019914026 = [0];
    var indexHEX60gensym90_3019914033 = rawGet_3019909069(t_3019914020, key_3019914021, hcHEX60gensym90_3019914026, 0);
    if ((0 <= indexHEX60gensym90_3019914033)) {
    Temporary1 = t_3019914020.data[chckIndx(indexHEX60gensym90_3019914033, 0, (t_3019914020.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3019914022;
    }
    
    result_3019914023 = Temporary1;

  return result_3019914023;

}

function newDoublyLinkedNode_3019914149(value_3019914151) {
  var result_3019914152 = null;

    result_3019914152 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3019914152.value = nimCopy(result_3019914152.value, value_3019914151, NTI3019899011);

  return result_3019914152;

}

function mustRehash_3019914499(t_3019914501) {
  var result_3019914502 = false;

    if (!((t_3019914501.counter < (t_3019914501.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019914502 = ((mulInt((t_3019914501.data).length, 2) < mulInt(t_3019914501.counter, 3)) || (subInt((t_3019914501.data).length, t_3019914501.counter) < 4));

  return result_3019914502;

}

function rawInsert_3019915192(t_3019915196, data_3019915197, data_3019915197_Idx, key_3019915198, val_3019915199, hc_3019915200, h_3019915201) {
    data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field1 = nimCopy(data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field1, key_3019915198, NTI3019898908);
    data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field2 = val_3019915199;
    data_3019915197[data_3019915197_Idx][chckIndx(h_3019915201, 0, (data_3019915197[data_3019915197_Idx]).length - 1)].Field0 = hc_3019915200;

  
}

function enlarge_3019914756(t_3019914759) {
    var n_3019914762 = [];
    n_3019914762 = new Array(chckRange(mulInt((t_3019914759.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019914759.data).length, 2), 0, 2147483647) ; ++i) { n_3019914762[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3019914759.data; t_3019914759.data = n_3019914762; n_3019914762 = Temporary1;    Label2: {
      var i_3019914860 = 0;
      var colontmp__2952790188 = 0;
      colontmp__2952790188 = (n_3019914762).length - 1;
      var res_2952790189 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790189 <= colontmp__2952790188)) break Label4;
            i_3019914860 = res_2952790189;
            var eh_3019914941 = n_3019914762[chckIndx(i_3019914860, 0, (n_3019914762).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019914941)) {
            var j_3019914945 = (eh_3019914941 & (t_3019914759.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019914759.data[chckIndx(j_3019914945, 0, (t_3019914759.data).length - 1)].Field0)) break Label6;
                  j_3019914945 = nextTry_1308622883(j_3019914945, (t_3019914759.data).length - 1);
                }
            };
            rawInsert_3019915192(t_3019914759, t_3019914759, "data", n_3019914762[chckIndx(i_3019914860, 0, (n_3019914762).length - 1)].Field1, n_3019914762[chckIndx(i_3019914860, 0, (n_3019914762).length - 1)].Field2, eh_3019914941, j_3019914945);
            }
            
            res_2952790189 = addInt(res_2952790189, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019915442(t_3019915445, key_3019915446, hc_3019915447) {
  var result_3019915448 = 0;

  BeforeRet: {
    if (((t_3019915445.data).length == 0)) {
    result_3019915448 = -1;
    break BeforeRet;
    }
    
    var h_3019915533 = (hc_3019915447 & (t_3019915445.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019915445.data[chckIndx(h_3019915533, 0, (t_3019915445.data).length - 1)].Field0)) break Label2;
          if (((t_3019915445.data[chckIndx(h_3019915533, 0, (t_3019915445.data).length - 1)].Field0 == hc_3019915447) && HEX3DHEX3D_3019901909(t_3019915445.data[chckIndx(h_3019915533, 0, (t_3019915445.data).length - 1)].Field1, key_3019915446))) {
          result_3019915448 = h_3019915533;
          break BeforeRet;
          }
          
          h_3019915533 = nextTry_1308622883(h_3019915533, (t_3019915445.data).length - 1);
        }
    };
    result_3019915448 = subInt(-1, h_3019915533);
  };

  return result_3019915448;

}

function HEX5BHEX5DHEX3D_3019914231(t_3019914234, key_3019914235, val_3019914236) {
    if (((t_3019914234.data).length == 0)) {
    var correctSizeHEX60gensym93_3019914319 = slotsNeeded_1308622891(32);
    t_3019914234.counter = 0;
    t_3019914234.data = new Array(chckRange(correctSizeHEX60gensym93_3019914319, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym93_3019914319, 0, 2147483647) ; ++i) { t_3019914234.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3019914324 = [0];
    var index_3019914331 = rawGet_3019909069(t_3019914234, key_3019914235, hc_3019914324, 0);
    if ((0 <= index_3019914331)) {
    t_3019914234.data[chckIndx(index_3019914331, 0, (t_3019914234.data).length - 1)].Field2 = val_3019914236;
    }
    else {
      if (((t_3019914234.data).length == 0)) {
      var correctSizeHEX60gensym96_3019914494 = slotsNeeded_1308622891(32);
      t_3019914234.counter = 0;
      t_3019914234.data = new Array(chckRange(correctSizeHEX60gensym96_3019914494, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3019914494, 0, 2147483647) ; ++i) { t_3019914234.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3019914499(t_3019914234)) {
      enlarge_3019914756(t_3019914234);
      index_3019914331 = rawGetKnownHC_3019915442(t_3019914234, key_3019914235, hc_3019914324[0]);
      }
      
      index_3019914331 = subInt(-1, index_3019914331);
      rawInsert_3019915192(t_3019914234, t_3019914234, "data", key_3019914235, val_3019914236, hc_3019914324[0], index_3019914331);
      t_3019914234.counter = addInt(t_3019914234.counter, 1);
    }
    

  
}

function prepend_3019910088(L_3019910090, n_3019910091) {
    n_3019910091.prev = null;
    n_3019910091.next = L_3019910090.head;
    if (!((L_3019910090.head == null))) {
    if (!((L_3019910090.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3019910090.head.prev = n_3019910091;
    }
    
    L_3019910090.head = n_3019910091;
    if ((L_3019910090.tail == null)) {
    L_3019910090.tail = n_3019910091;
    }
    

  
}

function len_3019916053(t_3019916056) {
  var result_3019916057 = 0;

    result_3019916057 = t_3019916056.counter;

  return result_3019916057;

}

function len_3019915970(cache_3019915973) {
  var result_3019915974 = 0;

    result_3019915974 = len_3019916053(cache_3019915973.table);

  return result_3019915974;

}

function del_3019916145(t_3019916148, key_3019916149) {
    var hc_3019916150 = [0];
    var i_3019916157 = rawGet_3019909069(t_3019916148, key_3019916149, hc_3019916150, 0);
    var mskHEX60gensym36_3019916161 = (t_3019916148.data).length - 1;
    if ((0 <= i_3019916157)) {
    t_3019916148.counter = subInt(t_3019916148.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019916168 = i_3019916157;
            var rHEX60gensym36_3019916169 = jHEX60gensym36_3019916168;
            t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field0 = 0;
            t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field1 = nimCopy(t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019916157 = (addInt(i_3019916157, 1) & mskHEX60gensym36_3019916161);
                  if (isEmpty_1308622877(t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019916169 = (t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)].Field0 & mskHEX60gensym36_3019916161);
                  if (!(((((rHEX60gensym36_3019916169 <= i_3019916157) && (jHEX60gensym36_3019916168 < rHEX60gensym36_3019916169)) || ((jHEX60gensym36_3019916168 < rHEX60gensym36_3019916169) && (i_3019916157 < jHEX60gensym36_3019916168))) || ((i_3019916157 < jHEX60gensym36_3019916168) && (rHEX60gensym36_3019916169 <= i_3019916157))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019916148.data[chckIndx(jHEX60gensym36_3019916168, 0, (t_3019916148.data).length - 1)] = nimCopy(t_3019916148.data[chckIndx(jHEX60gensym36_3019916168, 0, (t_3019916148.data).length - 1)], t_3019916148.data[chckIndx(i_3019916157, 0, (t_3019916148.data).length - 1)], NTI3019899047);
          }
      };
    };
    }
    

  
}

function remove_3019909796(L_3019909798, n_3019909799) {
    if ((n_3019909799 == L_3019909798.tail)) {
    L_3019909798.tail = n_3019909799.prev;
    }
    
    if ((n_3019909799 == L_3019909798.head)) {
    L_3019909798.head = n_3019909799.next;
    }
    
    if (!((n_3019909799.next == null))) {
    n_3019909799.next.prev = n_3019909799.prev;
    }
    
    if (!((n_3019909799.prev == null))) {
    n_3019909799.prev.next = n_3019909799.next;
    }
    

  
}

function resize_3019915888(cache_3019915891) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3019915891.capacity < len_3019915970(cache_3019915891))) break Label2;
          var t_3019916058 = cache_3019915891.list.tail;
          if (cache_3019915891.recordRemovedKeys) {
          incl_3019906164(cache_3019915891.removedKeys, t_3019916058.value.key);
          }
          
          del_3019916145(cache_3019915891.table, t_3019916058.value.key);
          remove_3019909796(cache_3019915891.list, t_3019916058);
        }
    };

  
}

function addNewNode_3019914141(cache_3019914144, key_3019914145, val_3019914146) {
    var node_3019914167 = newDoublyLinkedNode_3019914149({key: nimCopy(null, key_3019914145, NTI3019898908), val: nimCopy(null, val_3019914146, NTI3019898904)});
    HEX5BHEX5DHEX3D_3019914231(cache_3019914144.table, key_3019914145, node_3019914167);
    prepend_3019910088(cache_3019914144.list, node_3019914167);
    if (cache_3019914144.recordRemovedKeys) {
    excl_3019904993(cache_3019914144.removedKeys, key_3019914145);
    }
    
    resize_3019915888(cache_3019914144);

  
}

function HEX5BHEX5DHEX3D_3019913922(cache_3019913925, key_3019913926, val_3019913927) {
    var node_3019914114 = getOrDefault_3019914017(cache_3019913925.table, key_3019913926, null);
    if ((node_3019914114 == null)) {
    addNewNode_3019914141(cache_3019913925, key_3019913926, val_3019913927);
    }
    else {
      node_3019914114.value.val = nimCopy(null, val_3019913927, NTI3019898904);
      remove_3019909796(cache_3019913925.list, node_3019914114);
      prepend_3019910088(cache_3019913925.list, node_3019914114);
    }
    

  
}

function markRed_3019913717(graph_3019913718, key_3019913719, fingerprint_3019913720) {
    HEX5BHEX5DHEX3D_3019910340(graph_3019913718.verified, key_3019913719, graph_3019913718.revision);
    HEX5BHEX5DHEX3D_3019910340(graph_3019913718.changed, key_3019913719, graph_3019913718.revision);
    HEX5BHEX5DHEX3D_3019913922(graph_3019913718.fingerprints, key_3019913719, fingerprint_3019913720);

  
}

function rawGet_3019902430(t_3019902433, key_3019902434, hc_3019902435, hc_3019902435_Idx) {
  var result_3019902436 = 0;

  BeforeRet: {
    hc_3019902435[hc_3019902435_Idx] = hash_3019901572(key_3019902434);
    if ((hc_3019902435[hc_3019902435_Idx] == 0)) {
    hc_3019902435[hc_3019902435_Idx] = 314159265;
    }
    
    if (((t_3019902433.data).length == 0)) {
    result_3019902436 = -1;
    break BeforeRet;
    }
    
    var h_3019902525 = (hc_3019902435[hc_3019902435_Idx] & (t_3019902433.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019902433.data[chckIndx(h_3019902525, 0, (t_3019902433.data).length - 1)].Field0)) break Label2;
          if (((t_3019902433.data[chckIndx(h_3019902525, 0, (t_3019902433.data).length - 1)].Field0 == hc_3019902435[hc_3019902435_Idx]) && HEX3DHEX3D_3019901909(t_3019902433.data[chckIndx(h_3019902525, 0, (t_3019902433.data).length - 1)].Field1, key_3019902434))) {
          result_3019902436 = h_3019902525;
          break BeforeRet;
          }
          
          h_3019902525 = nextTry_1308622883(h_3019902525, (t_3019902433.data).length - 1);
        }
    };
    result_3019902436 = subInt(-1, h_3019902525);
  };

  return result_3019902436;

}

function getOrDefault_3019902420(t_3019902423, key_3019902424, default_3019902425) {
    var Temporary1;

  var result_3019902426 = null;

    var hcHEX60gensym28_3019902429 = [0];
    var indexHEX60gensym28_3019902782 = rawGet_3019902430(t_3019902423, key_3019902424, hcHEX60gensym28_3019902429, 0);
    if ((0 <= indexHEX60gensym28_3019902782)) {
    Temporary1 = t_3019902423.data[chckIndx(indexHEX60gensym28_3019902782, 0, (t_3019902423.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3019902425;
    }
    
    result_3019902426 = Temporary1;

  return result_3019902426;

}

function newDoublyLinkedNode_3019903099(value_3019903101) {
  var result_3019903102 = null;

    result_3019903102 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3019903102.value = nimCopy(result_3019903102.value, value_3019903101, NTI3019899078);

  return result_3019903102;

}

function mustRehash_3019903449(t_3019903451) {
  var result_3019903452 = false;

    if (!((t_3019903451.counter < (t_3019903451.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019903452 = ((mulInt((t_3019903451.data).length, 2) < mulInt(t_3019903451.counter, 3)) || (subInt((t_3019903451.data).length, t_3019903451.counter) < 4));

  return result_3019903452;

}

function rawInsert_3019904142(t_3019904146, data_3019904147, data_3019904147_Idx, key_3019904148, val_3019904149, hc_3019904150, h_3019904151) {
    data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field1 = nimCopy(data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field1, key_3019904148, NTI3019898908);
    data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field2 = val_3019904149;
    data_3019904147[data_3019904147_Idx][chckIndx(h_3019904151, 0, (data_3019904147[data_3019904147_Idx]).length - 1)].Field0 = hc_3019904150;

  
}

function enlarge_3019903706(t_3019903709) {
    var n_3019903712 = [];
    n_3019903712 = new Array(chckRange(mulInt((t_3019903709.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019903709.data).length, 2), 0, 2147483647) ; ++i) { n_3019903712[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3019903709.data; t_3019903709.data = n_3019903712; n_3019903712 = Temporary1;    Label2: {
      var i_3019903810 = 0;
      var colontmp__2952790198 = 0;
      colontmp__2952790198 = (n_3019903712).length - 1;
      var res_2952790199 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790199 <= colontmp__2952790198)) break Label4;
            i_3019903810 = res_2952790199;
            var eh_3019903891 = n_3019903712[chckIndx(i_3019903810, 0, (n_3019903712).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019903891)) {
            var j_3019903895 = (eh_3019903891 & (t_3019903709.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019903709.data[chckIndx(j_3019903895, 0, (t_3019903709.data).length - 1)].Field0)) break Label6;
                  j_3019903895 = nextTry_1308622883(j_3019903895, (t_3019903709.data).length - 1);
                }
            };
            rawInsert_3019904142(t_3019903709, t_3019903709, "data", n_3019903712[chckIndx(i_3019903810, 0, (n_3019903712).length - 1)].Field1, n_3019903712[chckIndx(i_3019903810, 0, (n_3019903712).length - 1)].Field2, eh_3019903891, j_3019903895);
            }
            
            res_2952790199 = addInt(res_2952790199, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019904392(t_3019904395, key_3019904396, hc_3019904397) {
  var result_3019904398 = 0;

  BeforeRet: {
    if (((t_3019904395.data).length == 0)) {
    result_3019904398 = -1;
    break BeforeRet;
    }
    
    var h_3019904483 = (hc_3019904397 & (t_3019904395.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019904395.data[chckIndx(h_3019904483, 0, (t_3019904395.data).length - 1)].Field0)) break Label2;
          if (((t_3019904395.data[chckIndx(h_3019904483, 0, (t_3019904395.data).length - 1)].Field0 == hc_3019904397) && HEX3DHEX3D_3019901909(t_3019904395.data[chckIndx(h_3019904483, 0, (t_3019904395.data).length - 1)].Field1, key_3019904396))) {
          result_3019904398 = h_3019904483;
          break BeforeRet;
          }
          
          h_3019904483 = nextTry_1308622883(h_3019904483, (t_3019904395.data).length - 1);
        }
    };
    result_3019904398 = subInt(-1, h_3019904483);
  };

  return result_3019904398;

}

function HEX5BHEX5DHEX3D_3019903181(t_3019903184, key_3019903185, val_3019903186) {
    if (((t_3019903184.data).length == 0)) {
    var correctSizeHEX60gensym34_3019903269 = slotsNeeded_1308622891(32);
    t_3019903184.counter = 0;
    t_3019903184.data = new Array(chckRange(correctSizeHEX60gensym34_3019903269, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_3019903269, 0, 2147483647) ; ++i) { t_3019903184.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3019903274 = [0];
    var index_3019903281 = rawGet_3019902430(t_3019903184, key_3019903185, hc_3019903274, 0);
    if ((0 <= index_3019903281)) {
    t_3019903184.data[chckIndx(index_3019903281, 0, (t_3019903184.data).length - 1)].Field2 = val_3019903186;
    }
    else {
      if (((t_3019903184.data).length == 0)) {
      var correctSizeHEX60gensym37_3019903444 = slotsNeeded_1308622891(32);
      t_3019903184.counter = 0;
      t_3019903184.data = new Array(chckRange(correctSizeHEX60gensym37_3019903444, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_3019903444, 0, 2147483647) ; ++i) { t_3019903184.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3019903449(t_3019903184)) {
      enlarge_3019903706(t_3019903184);
      index_3019903281 = rawGetKnownHC_3019904392(t_3019903184, key_3019903185, hc_3019903274[0]);
      }
      
      index_3019903281 = subInt(-1, index_3019903281);
      rawInsert_3019904142(t_3019903184, t_3019903184, "data", key_3019903185, val_3019903186, hc_3019903274[0], index_3019903281);
      t_3019903184.counter = addInt(t_3019903184.counter, 1);
    }
    

  
}

function prepend_3019904792(L_3019904794, n_3019904795) {
    n_3019904795.prev = null;
    n_3019904795.next = L_3019904794.head;
    if (!((L_3019904794.head == null))) {
    if (!((L_3019904794.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3019904794.head.prev = n_3019904795;
    }
    
    L_3019904794.head = n_3019904795;
    if ((L_3019904794.tail == null)) {
    L_3019904794.tail = n_3019904795;
    }
    

  
}

function len_3019906139(t_3019906142) {
  var result_3019906143 = 0;

    result_3019906143 = t_3019906142.counter;

  return result_3019906143;

}

function len_3019906056(cache_3019906059) {
  var result_3019906060 = 0;

    result_3019906060 = len_3019906139(cache_3019906059.table);

  return result_3019906060;

}

function del_3019907746(t_3019907749, key_3019907750) {
    var hc_3019907751 = [0];
    var i_3019907758 = rawGet_3019902430(t_3019907749, key_3019907750, hc_3019907751, 0);
    var mskHEX60gensym36_3019907762 = (t_3019907749.data).length - 1;
    if ((0 <= i_3019907758)) {
    t_3019907749.counter = subInt(t_3019907749.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3019907769 = i_3019907758;
            var rHEX60gensym36_3019907770 = jHEX60gensym36_3019907769;
            t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field0 = 0;
            t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field1 = nimCopy(t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3019907758 = (addInt(i_3019907758, 1) & mskHEX60gensym36_3019907762);
                  if (isEmpty_1308622877(t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3019907770 = (t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)].Field0 & mskHEX60gensym36_3019907762);
                  if (!(((((rHEX60gensym36_3019907770 <= i_3019907758) && (jHEX60gensym36_3019907769 < rHEX60gensym36_3019907770)) || ((jHEX60gensym36_3019907769 < rHEX60gensym36_3019907770) && (i_3019907758 < jHEX60gensym36_3019907769))) || ((i_3019907758 < jHEX60gensym36_3019907769) && (rHEX60gensym36_3019907770 <= i_3019907758))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3019907749.data[chckIndx(jHEX60gensym36_3019907769, 0, (t_3019907749.data).length - 1)] = nimCopy(t_3019907749.data[chckIndx(jHEX60gensym36_3019907769, 0, (t_3019907749.data).length - 1)], t_3019907749.data[chckIndx(i_3019907758, 0, (t_3019907749.data).length - 1)], NTI3019899114);
          }
      };
    };
    }
    

  
}

function remove_3019908505(L_3019908507, n_3019908508) {
    if ((n_3019908508 == L_3019908507.tail)) {
    L_3019908507.tail = n_3019908508.prev;
    }
    
    if ((n_3019908508 == L_3019908507.head)) {
    L_3019908507.head = n_3019908508.next;
    }
    
    if (!((n_3019908508.next == null))) {
    n_3019908508.next.prev = n_3019908508.prev;
    }
    
    if (!((n_3019908508.prev == null))) {
    n_3019908508.prev.next = n_3019908508.next;
    }
    

  
}

function resize_3019905974(cache_3019905977) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3019905977.capacity < len_3019906056(cache_3019905977))) break Label2;
          var t_3019906144 = cache_3019905977.list.tail;
          if (cache_3019905977.recordRemovedKeys) {
          incl_3019906164(cache_3019905977.removedKeys, t_3019906144.value.key);
          }
          
          del_3019907746(cache_3019905977.table, t_3019906144.value.key);
          remove_3019908505(cache_3019905977.list, t_3019906144);
        }
    };

  
}

function addNewNode_3019903091(cache_3019903094, key_3019903095, val_3019903096) {
    var node_3019903117 = newDoublyLinkedNode_3019903099({key: nimCopy(null, key_3019903095, NTI3019898908), val: nimCopy(null, val_3019903096, NTI3019899064)});
    HEX5BHEX5DHEX3D_3019903181(cache_3019903094.table, key_3019903095, node_3019903117);
    prepend_3019904792(cache_3019903094.list, node_3019903117);
    if (cache_3019903094.recordRemovedKeys) {
    excl_3019904993(cache_3019903094.removedKeys, key_3019903095);
    }
    
    resize_3019905974(cache_3019903094);

  
}

function HEX5BHEX5DHEX3D_3019902963(cache_3019902966, key_3019902967, val_3019902968) {
    var node_3019903064 = getOrDefault_3019902420(cache_3019902966.table, key_3019902967, null);
    if ((node_3019903064 == null)) {
    addNewNode_3019903091(cache_3019902966, key_3019902967, val_3019902968);
    }
    else {
      node_3019903064.value.val = nimCopy(null, val_3019902968, NTI3019899064);
      remove_3019908505(cache_3019902966.list, node_3019903064);
      prepend_3019904792(cache_3019902966.list, node_3019903064);
    }
    

  
}

function clearEdges_3019902893(graph_3019902894, key_3019902895) {
    HEX5BHEX5DHEX3D_3019902963(graph_3019902894.dependencies, key_3019902895, []);

  
}

function setDependencies_3019908809(graph_3019908810, key_3019908811, deps_3019908812) {
    HEX5BHEX5DHEX3D_3019902963(graph_3019908810.dependencies, key_3019908811, deps_3019908812);

  
}

function pop_3003193025(s_3003193027, s_3003193027_Idx) {
  var result_3003193028 = [];

    var L_3003193032 = subInt((s_3003193027[s_3003193027_Idx]).length, 1);
    result_3003193028 = nimCopy(null, s_3003193027[s_3003193027_Idx][chckIndx(L_3003193032, 0, (s_3003193027[s_3003193027_Idx]).length - 1)], NTI3003121692);
    if (s_3003193027[s_3003193027_Idx].length < chckRange(L_3003193032, 0, 2147483647)) { for (var i = s_3003193027[s_3003193027_Idx].length ; i < chckRange(L_3003193032, 0, 2147483647) ; ++i) s_3003193027[s_3003193027_Idx].push([]); }
               else { s_3003193027[s_3003193027_Idx].length = chckRange(L_3003193032, 0, 2147483647); };

  return result_3003193028;

}

function pop_3003193056(s_3003193058, s_3003193058_Idx) {
  var result_3003193059 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_3003193063 = subInt((s_3003193058[s_3003193058_Idx]).length, 1);
    result_3003193059 = nimCopy(result_3003193059, s_3003193058[s_3003193058_Idx][chckIndx(L_3003193063, 0, (s_3003193058[s_3003193058_Idx]).length - 1)], NTI3019898908);
    if (s_3003193058[s_3003193058_Idx].length < chckRange(L_3003193063, 0, 2147483647)) { for (var i = s_3003193058[s_3003193058_Idx].length ; i < chckRange(L_3003193063, 0, 2147483647) ; ++i) s_3003193058[s_3003193058_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_3003193058[s_3003193058_Idx].length = chckRange(L_3003193063, 0, 2147483647); };

  return result_3003193059;

}

function hasKey_3019909062(t_3019909065, key_3019909066) {
  var result_3019909067 = false;

    var hc_3019909068 = [0];
    result_3019909067 = (0 <= rawGet_3019909069(t_3019909065, key_3019909066, hc_3019909068, 0));

  return result_3019909067;

}

function contains_3019909056(t_3019909059, key_3019909060) {
  var result_3019909061 = false;

  BeforeRet: {
    result_3019909061 = hasKey_3019909062(t_3019909059, key_3019909060);
    break BeforeRet;
  };

  return result_3019909061;

}

function contains_3019908962(cache_3019908965, key_3019908966) {
  var result_3019908967 = false;

    result_3019908967 = contains_3019909056(cache_3019908965.table, key_3019908966);

  return result_3019908967;

}

function HEX5BHEX5D_3019909587(t_3019909590, key_3019909591) {
  var result_3019909592 = null;
  var result_3019909592_Idx = 0;

    var hcHEX60gensym22_3019909593 = [0];
    var indexHEX60gensym22_3019909600 = rawGet_3019909069(t_3019909590, key_3019909591, hcHEX60gensym22_3019909593, 0);
    if ((0 <= indexHEX60gensym22_3019909600)) {
    result_3019909592 = t_3019909590.data[chckIndx(indexHEX60gensym22_3019909600, 0, (t_3019909590.data).length - 1)]; result_3019909592_Idx = "Field2";
    }
    else {
    raiseKeyError_3019909681(key_3019909591);
    }
    

  return [result_3019909592, result_3019909592_Idx];

}

function HEX5BHEX5D_3019909501(cache_3019909504, key_3019909505) {
    var Temporary1;

  var result_3019909506 = [];

    var node_3019909782 = (Temporary1 = HEX5BHEX5D_3019909587(cache_3019909504.table, key_3019909505), Temporary1)[0][Temporary1[1]];
    result_3019909506 = nimCopy(null, node_3019909782.value.val, NTI3019898904);
    remove_3019909796(cache_3019909504.list, node_3019909782);
    prepend_3019910088(cache_3019909504.list, node_3019909782);

  return result_3019909506;

}

function fingerprint_3019908882(graph_3019908883, key_3019908884) {
  var result_3019908885 = [];

  BeforeRet: {
    if (contains_3019908962(graph_3019908883.fingerprints, key_3019908884)) {
    result_3019908885 = nimCopy(null, HEX5BHEX5D_3019909501(graph_3019908883.fingerprints, key_3019908884), NTI3019898904);
    break BeforeRet;
    }
    
  };

  return result_3019908885;

}

function HEX3DHEX3D_3003193069(x_3003193071, y_3003193072) {
  var result_3003193073 = false;

  BeforeRet: {
    var sameObject_3003193080 = false;
    sameObject_3003193080 = x_3003193071 === y_3003193072
    if (sameObject_3003193080) {
    result_3003193073 = true;
    break BeforeRet;
    }
    
    if (!(((x_3003193071).length == (y_3003193072).length))) {
    result_3003193073 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3003193094 = 0;
      var colontmp__2952790206 = 0;
      colontmp__2952790206 = subInt((x_3003193071).length, 1);
      var res_2952790207 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790207 <= colontmp__2952790206)) break Label3;
            i_3003193094 = res_2952790207;
            if (!((x_3003193071[chckIndx(i_3003193094, 0, (x_3003193071).length - 1)] == y_3003193072[chckIndx(i_3003193094, 0, (y_3003193072).length - 1)]))) {
            result_3003193073 = false;
            break BeforeRet;
            }
            
            res_2952790207 = addInt(res_2952790207, 1);
          }
      };
    };
    result_3003193073 = true;
    break BeforeRet;
  };

  return result_3003193073;

}

function markGreen_3019910274(graph_3019910275, key_3019910276) {
    HEX5BHEX5DHEX3D_3019910340(graph_3019910275.verified, key_3019910276, graph_3019910275.revision);

  
}

function force_3003192111(ctxHEX60gensym88_3003192112, keyHEX60gensym88_3003192113) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary1);
    try {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_3003192204(ctxHEX60gensym88_3003192112.depGraph.queryNames, keyHEX60gensym88_3003192113.Field1), Temporary3)[0][Temporary3[1]], HEX24_3019899092(keyHEX60gensym88_3003192113.Field0));
    }
    
    if (contains_3003192377(ctxHEX60gensym88_3003192112.activeQuerySet, keyHEX60gensym88_3003192113)) {
    incl_3019906164(ctxHEX60gensym88_3003192112.recursiveQueries, keyHEX60gensym88_3003192113);
    var itemHEX60gensym88_3003192420 = nimCopy(null, keyHEX60gensym88_3003192113.Field0, NTI3019898905);
    var queryHEX60gensym88_3003192506 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3003192204(ctxHEX60gensym88_3003192112.depGraph.queryNames, keyHEX60gensym88_3003192113.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3019899092(itemHEX60gensym88_3003192420), [32,40], queryHEX60gensym88_3003192506, [41]);
    Label5: {
      var kHEX60gensym88_3003192514 = 0;
      var colontmp__2952790164 = 0;
      colontmp__2952790164 = (ctxHEX60gensym88_3003192112.activeQueryStack).length - 1;
      var res_2952790165 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2952790165 <= colontmp__2952790164)) break Label7;
            kHEX60gensym88_3003192514 = res_2952790165;
            var iHEX60gensym88_3003192518 = subInt(subInt((ctxHEX60gensym88_3003192112.activeQueryStack).length, kHEX60gensym88_3003192514), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym88_3003192514), [93,32,80,97,114,101,110,116,58,32], HEX24_3019899092(ctxHEX60gensym88_3003192112.activeQueryStack[chckIndx(iHEX60gensym88_3003192518, 0, (ctxHEX60gensym88_3003192112.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3003192608(ctxHEX60gensym88_3003192112.depGraph.queryNames, ctxHEX60gensym88_3003192112.activeQueryStack[chckIndx(iHEX60gensym88_3003192518, 0, (ctxHEX60gensym88_3003192112.activeQueryStack).length - 1)].Field1));
            res_2952790165 = addInt(res_2952790165, 1);
          }
      };
    };
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3003192780(ctxHEX60gensym88_3003192112.recoveryFunctions, keyHEX60gensym88_3003192113.Field1)) {
    (Temporary8 = HEX5BHEX5D_3003192879(ctxHEX60gensym88_3003192112.recoveryFunctions, keyHEX60gensym88_3003192113.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym88_3003192113);
    markRed_3019913717(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113, []);
    }
    
    break BeforeRet;
    }
    
    incl_3019906164(ctxHEX60gensym88_3003192112.activeQuerySet, keyHEX60gensym88_3003192113);
    var Temporary9 = nimCopy(null, keyHEX60gensym88_3003192113, NTI3019898908);
    ctxHEX60gensym88_3003192112.activeQueryStack.push(Temporary9);;
    clearEdges_3019902893(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113);
    ctxHEX60gensym88_3003192112.dependencyStack.push([]);;
    recordDependency_3003175740(ctxHEX60gensym88_3003192112, keyHEX60gensym88_3003192113.Field0, -1);
    var fingerprintHEX60gensym88_3003193024 = ctxHEX60gensym88_3003192112.updateFunctions[chckIndx(keyHEX60gensym88_3003192113.Field1, 0, (ctxHEX60gensym88_3003192112.updateFunctions).length - 1)](keyHEX60gensym88_3003192113.Field0);
    setDependencies_3019908809(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113, pop_3003193025(ctxHEX60gensym88_3003192112, "dependencyStack"));
    excl_3019904993(ctxHEX60gensym88_3003192112.activeQuerySet, keyHEX60gensym88_3003192113);
    var _ = pop_3003193056(ctxHEX60gensym88_3003192112, "activeQueryStack");
    var prevFingerprintHEX60gensym88_3003193068 = fingerprint_3019908882(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113);
    if (HEX3DHEX3D_3003193069(fingerprintHEX60gensym88_3003193024, prevFingerprintHEX60gensym88_3003193068)) {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3019910274(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113);
    }
    else {
      if (ctxHEX60gensym88_3003192112.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3019913717(ctxHEX60gensym88_3003192112.depGraph, keyHEX60gensym88_3003192113, fingerprintHEX60gensym88_3003193024);
    }
    
    } finally {
    if (ctxHEX60gensym88_3003192112.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary10);
    }
  };

  
}

function addQuoted_3087008227(s_3087008229, s_3087008229_Idx, x_3087008230) {
    s_3087008229[s_3087008229_Idx].push.apply(s_3087008229[s_3087008229_Idx], HEX24_3087008180(x_3087008230));;

  
}

function collectionToString_3087008187(x_3087008189, prefix_3087008190, separator_3087008191, suffix_3087008192) {
  var result_3087008193 = [[]];

    result_3087008193[0] = nimCopy(null, prefix_3087008190, NTI33554449);
    var firstElement_3087008194 = true;
    Label1: {
      var value_3087008217 = null;
      var i_2952790211 = 0;
      var L_2952790212 = (x_3087008189).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790211 < L_2952790212)) break Label3;
            value_3087008217 = x_3087008189[i_2952790211];
            if (firstElement_3087008194) {
            firstElement_3087008194 = false;
            }
            else {
            result_3087008193[0].push.apply(result_3087008193[0], separator_3087008191);;
            }
            
            if ((value_3087008217 == null)) {
            result_3087008193[0].push.apply(result_3087008193[0], [110,105,108]);;
            }
            else {
            addQuoted_3087008227(result_3087008193, 0, value_3087008217);
            }
            
            i_2952790211 += 1;
            if (!(((x_3087008189).length == L_2952790212))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008193[0].push.apply(result_3087008193[0], suffix_3087008192);;

  return result_3087008193[0];

}

function HEX24_3087008183(x_3087008185) {
  var result_3087008186 = [];

    result_3087008186 = nimCopy(null, collectionToString_3087008187(x_3087008185, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008186;

}

function formatValue_2818576993(result_2818576995, result_2818576995_Idx, value_2818576996, specifier_2818576997) {
    formatValue_721420459(result_2818576995, result_2818576995_Idx, nimBoolToStr(value_2818576996), specifier_2818576997);

  
}

function HEX24_3087008180(typ_3087008181) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008182 = [];

  BeforeRet: {
    switch (typ_3087008181.kind) {
    case 0:
      result_3087008182 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008182 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3087008182 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3087008182 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3087008181;
      if (ConstSet60[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      var Temporary2 = typ_3087008181;
      if (ConstSet61[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      result_3087008182 = nimCopy(null, (HEX24_3087008183(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3087008180(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3087008182 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3087008246 = [mnewString(0)];
      fmtRes_3087008246[0].push.apply(fmtRes_3087008246[0], [97,110,121,40]);;
      var Temporary3 = typ_3087008181;
      if (ConstSet62[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      formatValue_2818576993(fmtRes_3087008246, 0, Temporary3.open, []);
      fmtRes_3087008246[0].push.apply(fmtRes_3087008246[0], [41]);;
      result_3087008182 = nimCopy(null, fmtRes_3087008246[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008182;

}

function raiseKeyError_3003195140(key_3003195142) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2986346455(key_3003195142) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003195046(t_3003195049, key_3003195050) {
  var result_3003195051 = null;
  var result_3003195051_Idx = 0;

    var hcHEX60gensym22_3003195052 = [0];
    var indexHEX60gensym22_3003195059 = rawGet_3003124083(t_3003195049, key_3003195050, hcHEX60gensym22_3003195052, 0);
    if ((0 <= indexHEX60gensym22_3003195059)) {
    result_3003195051 = t_3003195049.data[chckIndx(indexHEX60gensym22_3003195059, 0, (t_3003195049.data).length - 1)]; result_3003195051_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003195050);
    }
    

  return [result_3003195051, result_3003195051_Idx];

}

function remove_3003129987(L_3003129989, n_3003129990) {
    if ((n_3003129990 == L_3003129989.tail)) {
    L_3003129989.tail = n_3003129990.prev;
    }
    
    if ((n_3003129990 == L_3003129989.head)) {
    L_3003129989.head = n_3003129990.next;
    }
    
    if (!((n_3003129990.next == null))) {
    n_3003129990.next.prev = n_3003129990.prev;
    }
    
    if (!((n_3003129990.prev == null))) {
    n_3003129990.prev.next = n_3003129990.next;
    }
    

  
}

function prepend_3003126259(L_3003126261, n_3003126262) {
    n_3003126262.prev = null;
    n_3003126262.next = L_3003126261.head;
    if (!((L_3003126261.head == null))) {
    if (!((L_3003126261.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003126261.head.prev = n_3003126262;
    }
    
    L_3003126261.head = n_3003126262;
    if ((L_3003126261.tail == null)) {
    L_3003126261.tail = n_3003126262;
    }
    

  
}

function HEX5BHEX5D_3003194960(cache_3003194963, key_3003194964) {
    var Temporary1;

  var result_3003194965 = null;

    var node_3003195153 = (Temporary1 = HEX5BHEX5D_3003195046(cache_3003194963.table, key_3003194964), Temporary1)[0][Temporary1[1]];
    result_3003194965 = node_3003195153.value.val;
    remove_3003129987(cache_3003194963.list, node_3003195153);
    prepend_3003126259(cache_3003194963.list, node_3003195153);

  return result_3003194965;

}

function addQuoted_3003193318(s_3003193320, s_3003193320_Idx, x_3003193321) {
    s_3003193320[s_3003193320_Idx].push.apply(s_3003193320[s_3003193320_Idx], HEX24_3019909728(x_3003193321));;

  
}

function collectionToString_3003193285(x_3003193287, prefix_3003193288, separator_3003193289, suffix_3003193290) {
  var result_3003193291 = [[]];

    result_3003193291[0] = nimCopy(null, prefix_3003193288, NTI33554449);
    var firstElement_3003193292 = true;
    Label1: {
      var value_3003193314 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2952790227 = 0;
      var L_2952790228 = (x_3003193287).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790227 < L_2952790228)) break Label3;
            value_3003193314 = x_3003193287[i_2952790227];
            if (firstElement_3003193292) {
            firstElement_3003193292 = false;
            }
            else {
            result_3003193291[0].push.apply(result_3003193291[0], separator_3003193289);;
            }
            
            addQuoted_3003193318(result_3003193291, 0, value_3003193314);
            i_2952790227 += 1;
            if (!(((x_3003193287).length == L_2952790228))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3003193291[0].push.apply(result_3003193291[0], suffix_3003193290);;

  return result_3003193291[0];

}

function HEX24_3003193281(x_3003193283) {
  var result_3003193284 = [];

    result_3003193284 = nimCopy(null, collectionToString_3003193285(x_3003193283, [64,91], [44,32], [93]), NTI33554449);

  return result_3003193284;

}

function getOrDefault_3019902324(cache_3019902327, key_3019902328, val_3019902329) {
  var result_3019902330 = [];

    var node_3019902872 = getOrDefault_3019902420(cache_3019902327.table, key_3019902328, null);
    if ((node_3019902872 == null)) {
    result_3019902330 = nimCopy(null, val_3019902329, NTI3019899064);
    }
    else {
      result_3019902330 = nimCopy(null, node_3019902872.value.val, NTI3019899064);
    }
    

  return result_3019902330;

}

function getDependencies_3019902227(graph_3019902228, key_3019902229) {
  var result_3019902230 = [];

    result_3019902230 = nimCopy(null, getOrDefault_3019902324(graph_3019902228.dependencies, key_3019902229, []), NTI3019899064);
    if ((((result_3019902230).length == 0) && !((key_3019902229.Field1 == -1)))) {
    result_3019902230.push({Field0: nimCopy(null, key_3019902229.Field0, NTI3019898905), Field1: -1});;
    }
    

  return result_3019902230;

}

function tryMarkGreen_3003193126(ctxHEX60gensym89_3003193127, keyHEX60gensym89_3003193128, tryForceHEX60gensym89_3003193129) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_3003193130 = 0;

  BeforeRet: {
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary1);
    try {
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, keyHEX60gensym89_3003193128.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3019899092(keyHEX60gensym89_3003193128.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_3003193281(getDependencies_3019902227(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128)));
    }
    
    if (contains_3003192377(ctxHEX60gensym89_3003193127.activeQuerySet, keyHEX60gensym89_3003193128)) {
    incl_3019906164(ctxHEX60gensym89_3003193127.recursiveQueries, keyHEX60gensym89_3003193128);
    var itemHEX60gensym89_3003193430 = nimCopy(null, keyHEX60gensym89_3003193128.Field0, NTI3019898905);
    var queryHEX60gensym89_3003193516 = nimCopy(null, (Temporary4 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, keyHEX60gensym89_3003193128.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3019899092(itemHEX60gensym89_3003193430), [32,40], queryHEX60gensym89_3003193516, [41]);
    Label5: {
      var kHEX60gensym89_3003193524 = 0;
      var colontmp__2952790215 = 0;
      colontmp__2952790215 = (ctxHEX60gensym89_3003193127.activeQueryStack).length - 1;
      var res_2952790216 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2952790216 <= colontmp__2952790215)) break Label7;
            kHEX60gensym89_3003193524 = res_2952790216;
            var iHEX60gensym89_3003193528 = subInt(subInt((ctxHEX60gensym89_3003193127.activeQueryStack).length, kHEX60gensym89_3003193524), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym89_3003193524), [93,32,80,97,114,101,110,116,58,32], HEX24_3019899092(ctxHEX60gensym89_3003193127.activeQueryStack[chckIndx(iHEX60gensym89_3003193528, 0, (ctxHEX60gensym89_3003193127.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_3003192608(ctxHEX60gensym89_3003193127.depGraph.queryNames, ctxHEX60gensym89_3003193127.activeQueryStack[chckIndx(iHEX60gensym89_3003193528, 0, (ctxHEX60gensym89_3003193127.activeQueryStack).length - 1)].Field1));
            res_2952790216 = addInt(res_2952790216, 1);
          }
      };
    };
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_3003192780(ctxHEX60gensym89_3003193127.recoveryFunctions, keyHEX60gensym89_3003193128.Field1)) {
    (Temporary8 = HEX5BHEX5D_3003192879(ctxHEX60gensym89_3003193127.recoveryFunctions, keyHEX60gensym89_3003193128.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym89_3003193128);
    markRed_3019913717(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128, []);
    }
    
    result_3003193130 = 2;
    break BeforeRet;
    }
    
    incl_3019906164(ctxHEX60gensym89_3003193127.activeQuerySet, keyHEX60gensym89_3003193128);
    var Temporary9 = nimCopy(null, keyHEX60gensym89_3003193128, NTI3019898908);
    ctxHEX60gensym89_3003193127.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym89_3003193937 = getOrDefault_3019901459(ctxHEX60gensym89_3003193127.depGraph.verified, keyHEX60gensym89_3003193128, 0);
    Label11: {
      var iHEX60gensym89_3003193961 = 0;
      var depHEX60gensym89_3003193962 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2952790220 = [];
      colontmp__2952790220 = getDependencies_3019902227(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128);
      var i_2952790222 = 0;
      var L_2952790223 = (colontmp__2952790220).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2952790222 < L_2952790223)) break Label13;
            iHEX60gensym89_3003193961 = i_2952790222;
            depHEX60gensym89_3003193962 = nimCopy(depHEX60gensym89_3003193962, colontmp__2952790220[chckIndx(i_2952790222, 0, (colontmp__2952790220).length - 1)], NTI3019898908);
            Label14: {
              if (HEX3DHEX3D_2181038320(depHEX60gensym89_3003193962.Field0.Field0, null_2181038340)) {
              if (ctxHEX60gensym89_3003193127.enableLogging) {
              rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3003193130 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2181038320(depHEX60gensym89_3003193962.Field0.Field0, dependencyGlobalRevision_3019898912)) {
              if ((verifiedHEX60gensym89_3003193937 < ctxHEX60gensym89_3003193127.depGraph.revision)) {
              if (ctxHEX60gensym89_3003193127.enableLogging) {
              rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_3003193130 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3019901365(ctxHEX60gensym89_3003193127.depGraph, depHEX60gensym89_3003193962, verifiedHEX60gensym89_3003193937)) {
              case 2:
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_3003193130 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym89_3003193127.enableLogging) {
                rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_3003193126(ctxHEX60gensym89_3003193127, depHEX60gensym89_3003193962, true)) {
                case 2:
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3019909728(keyHEX60gensym89_3003193128) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3003193130 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym89_3003193129) {
                  force_3003192111(ctxHEX60gensym89_3003193127, depHEX60gensym89_3003193962);
                  }
                  else {
                    result_3003193130 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_3003192377(ctxHEX60gensym89_3003193127.recursiveQueries, keyHEX60gensym89_3003193128)) {
                  excl_3019904993(ctxHEX60gensym89_3003193127.recursiveQueries, keyHEX60gensym89_3003193128);
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3019909728(keyHEX60gensym89_3003193128) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_3003193130 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3019901365(ctxHEX60gensym89_3003193127.depGraph, depHEX60gensym89_3003193962, verifiedHEX60gensym89_3003193937) == 1)) {
                  if (ctxHEX60gensym89_3003193127.enableLogging) {
                  rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_3003192204(ctxHEX60gensym89_3003193127.depGraph.queryNames, depHEX60gensym89_3003193962.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3019899092(depHEX60gensym89_3003193962.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_3003193130 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2952790222 = addInt(i_2952790222, 1);
            if (!(((colontmp__2952790220).length == L_2952790223))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3019910274(ctxHEX60gensym89_3003193127.depGraph, keyHEX60gensym89_3003193128);
    result_3003193130 = 0;
    break BeforeRet;
    } finally {
    excl_3019904993(ctxHEX60gensym89_3003193127.activeQuerySet, keyHEX60gensym89_3003193128);
    var _ = pop_3003193056(ctxHEX60gensym89_3003193127, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym89_3003193127.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary22);
    }
  };

  return result_3003193130;

}

function clear_3003195341(s_3003195343) {
    s_3003195343.counter = 0;
    Label1: {
      var i_3003195429 = 0;
      var colontmp__2952790231 = 0;
      colontmp__2952790231 = (s_3003195343.data).length;
      var i_2952790232 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790232 < colontmp__2952790231)) break Label3;
            i_3003195429 = i_2952790232;
            s_3003195343.data[chckIndx(i_3003195429, 0, (s_3003195343.data).length - 1)].Field0 = 0;
            s_3003195343.data[chckIndx(i_3003195429, 0, (s_3003195343.data).length - 1)].Field1 = nimCopy(s_3003195343.data[chckIndx(i_3003195429, 0, (s_3003195343.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            i_2952790232 = addInt(i_2952790232, 1);
          }
      };
    };

  
}

function elapsed_2281701439(timer_2281701440) {
  var result_2281701441 = 0;

    result_2281701441 = subInt(myGetTicks_2281701422(), timer_2281701440.start);

  return result_2281701441;

}

function computeType_3003195250(ctxHEX60gensym92_3003195251, inputHEX60gensym92_3003195252, recordDependencyHEX60gensym92_3003195253) {
    var Temporary3;
    var Temporary5;

  var result_3003195254 = null;

  BeforeRet: {
    var timerHEX60gensym92_3003195255 = startTimer_2281701428();
    ctxHEX60gensym92_3003195251.statsType.totalCalls = addInt(ctxHEX60gensym92_3003195251.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym92_3003195674 = getItem_3003175953(inputHEX60gensym92_3003195252);
    var keyHEX60gensym92_3003195675 = {Field0: nimCopy(null, itemHEX60gensym92_3003195674, NTI3019898905), Field1: 0};
    if (recordDependencyHEX60gensym92_3003195253) {
    recordDependency_3003175740(ctxHEX60gensym92_3003195251, itemHEX60gensym92_3003195674, 0);
    }
    
    var colorHEX60gensym92_3003195676 = nodeColor_3019901365(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, 0);
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym92_3003195676, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym92_3003195674));
    }
    
    if ((colorHEX60gensym92_3003195676 == 2)) {
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
    if (false) {
    markRed_3019913717(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, []);
    }
    
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    }
    else {
      if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
      }
      
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym92_3003195676 == 0)) {
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
    if (false) {
    markRed_3019913717(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, []);
    }
    
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675, true) == 0)) {
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym92_3003195251.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
      if (false) {
      markRed_3019913717(ctxHEX60gensym92_3003195251.depGraph, keyHEX60gensym92_3003195675, []);
      }
      
      if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
      }
      
      if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym92_3003195676 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym92_3003195251.enableLogging && contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252)));
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    force_3003192111(ctxHEX60gensym92_3003195251, keyHEX60gensym92_3003195675);
    }
    
    if (!(contains_3003194767(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym92_3003195252) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003195254 = HEX5BHEX5D_3003194960(ctxHEX60gensym92_3003195251.queryCacheType, inputHEX60gensym92_3003195252);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym92_3003195251.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym92_3003195251.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym92_3003195251.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym92_3003195251.statsType.time = addInt(ctxHEX60gensym92_3003195251.statsType.time, elapsed_2281701439(timerHEX60gensym92_3003195255));
    }
  };

  return result_3003195254;

}

function formatValue_3003230324(result_3003230326, result_3003230326_Idx, value_3003230327, specifier_3003230328) {
    formatValue_721420459(result_3003230326, result_3003230326_Idx, HEX24_3087008180(value_3003230327), specifier_3003230328);

  
}

function rawGet_3003130842(t_3003130845, key_3003130846, hc_3003130847, hc_3003130847_Idx) {
  var result_3003130848 = 0;

  BeforeRet: {
    hc_3003130847[hc_3003130847_Idx] = hash_2986346803(key_3003130846);
    if ((hc_3003130847[hc_3003130847_Idx] == 0)) {
    hc_3003130847[hc_3003130847_Idx] = 314159265;
    }
    
    if (((t_3003130845.data).length == 0)) {
    result_3003130848 = -1;
    break BeforeRet;
    }
    
    var h_3003130934 = (hc_3003130847[hc_3003130847_Idx] & (t_3003130845.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003130845.data[chckIndx(h_3003130934, 0, (t_3003130845.data).length - 1)].Field0)) break Label2;
          if (((t_3003130845.data[chckIndx(h_3003130934, 0, (t_3003130845.data).length - 1)].Field0 == hc_3003130847[hc_3003130847_Idx]) && (t_3003130845.data[chckIndx(h_3003130934, 0, (t_3003130845.data).length - 1)].Field1 == key_3003130846))) {
          result_3003130848 = h_3003130934;
          break BeforeRet;
          }
          
          h_3003130934 = nextTry_1308622883(h_3003130934, (t_3003130845.data).length - 1);
        }
    };
    result_3003130848 = subInt(-1, h_3003130934);
  };

  return result_3003130848;

}

function hasKey_3003198342(t_3003198345, key_3003198346) {
  var result_3003198347 = false;

    var hc_3003198348 = [0];
    result_3003198347 = (0 <= rawGet_3003130842(t_3003198345, key_3003198346, hc_3003198348, 0));

  return result_3003198347;

}

function contains_3003198336(t_3003198339, key_3003198340) {
  var result_3003198341 = false;

  BeforeRet: {
    result_3003198341 = hasKey_3003198342(t_3003198339, key_3003198340);
    break BeforeRet;
  };

  return result_3003198341;

}

function contains_3003198242(cache_3003198245, key_3003198246) {
  var result_3003198247 = false;

    result_3003198247 = contains_3003198336(cache_3003198245.table, key_3003198246);

  return result_3003198247;

}

function HEX24_3087008487(value_3087008488) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008489 = [];

  BeforeRet: {
    switch (value_3087008488.kind) {
    case 0:
      result_3087008489 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3087008489 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3087008488;
      if (ConstSet63[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3087008488;
      if (ConstSet64[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3087008489 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008488;
      if (ConstSet65[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_2986346455(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008488;
      if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008489 = nimCopy(null, HEX24_3087008180(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008489;

}

function HEX5BHEX5D_3003198521(t_3003198524, key_3003198525) {
  var result_3003198526 = null;
  var result_3003198526_Idx = 0;

    var hcHEX60gensym22_3003198527 = [0];
    var indexHEX60gensym22_3003198534 = rawGet_3003130842(t_3003198524, key_3003198525, hcHEX60gensym22_3003198527, 0);
    if ((0 <= indexHEX60gensym22_3003198534)) {
    result_3003198526 = t_3003198524.data[chckIndx(indexHEX60gensym22_3003198534, 0, (t_3003198524.data).length - 1)]; result_3003198526_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003198525);
    }
    

  return [result_3003198526, result_3003198526_Idx];

}

function remove_3003134298(L_3003134300, n_3003134301) {
    if ((n_3003134301 == L_3003134300.tail)) {
    L_3003134300.tail = n_3003134301.prev;
    }
    
    if ((n_3003134301 == L_3003134300.head)) {
    L_3003134300.head = n_3003134301.next;
    }
    
    if (!((n_3003134301.next == null))) {
    n_3003134301.next.prev = n_3003134301.prev;
    }
    
    if (!((n_3003134301.prev == null))) {
    n_3003134301.prev.next = n_3003134301.next;
    }
    

  
}

function prepend_3003133027(L_3003133029, n_3003133030) {
    n_3003133030.prev = null;
    n_3003133030.next = L_3003133029.head;
    if (!((L_3003133029.head == null))) {
    if (!((L_3003133029.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003133029.head.prev = n_3003133030;
    }
    
    L_3003133029.head = n_3003133030;
    if ((L_3003133029.tail == null)) {
    L_3003133029.tail = n_3003133030;
    }
    

  
}

function HEX5BHEX5D_3003198435(cache_3003198438, key_3003198439) {
    var Temporary1;

  var result_3003198440 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_3003198627 = (Temporary1 = HEX5BHEX5D_3003198521(cache_3003198438.table, key_3003198439), Temporary1)[0][Temporary1[1]];
    result_3003198440 = nimCopy(result_3003198440, node_3003198627.value.val, NTI3087007751);
    remove_3003134298(cache_3003198438.list, node_3003198627);
    prepend_3003133027(cache_3003198438.list, node_3003198627);

  return result_3003198440;

}

function computeValue_3003198726(ctxHEX60gensym96_3003198727, inputHEX60gensym96_3003198728, recordDependencyHEX60gensym96_3003198729) {
    var Temporary3;
    var Temporary5;

  var result_3003198730 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym96_3003198731 = startTimer_2281701428();
    ctxHEX60gensym96_3003198727.statsValue.totalCalls = addInt(ctxHEX60gensym96_3003198727.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym96_3003198820 = getItem_3003175953(inputHEX60gensym96_3003198728);
    var keyHEX60gensym96_3003198821 = {Field0: nimCopy(null, itemHEX60gensym96_3003198820, NTI3019898905), Field1: 1};
    if (recordDependencyHEX60gensym96_3003198729) {
    recordDependency_3003175740(ctxHEX60gensym96_3003198727, itemHEX60gensym96_3003198820, 1);
    }
    
    var colorHEX60gensym96_3003198822 = nodeColor_3019901365(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, 0);
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym96_3003198822, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym96_3003198820));
    }
    
    if ((colorHEX60gensym96_3003198822 == 2)) {
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
    if (false) {
    markRed_3019913717(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, []);
    }
    
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    }
    else {
      if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
      }
      
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym96_3003198822 == 0)) {
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
    if (false) {
    markRed_3019913717(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, []);
    }
    
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821, true) == 0)) {
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym96_3003198727.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
      if (false) {
      markRed_3019913717(ctxHEX60gensym96_3003198727.depGraph, keyHEX60gensym96_3003198821, []);
      }
      
      if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
      }
      
      if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym96_3003198822 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,54,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym96_3003198727.enableLogging && contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728)));
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    force_3003192111(ctxHEX60gensym96_3003198727, keyHEX60gensym96_3003198821);
    }
    
    if (!(contains_3003198242(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2986346455(inputHEX60gensym96_3003198728) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003198730 = nimCopy(result_3003198730, HEX5BHEX5D_3003198435(ctxHEX60gensym96_3003198727.queryCacheValue, inputHEX60gensym96_3003198728), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym96_3003198727.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym96_3003198727.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym96_3003198727.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym96_3003198727.statsValue.time = addInt(ctxHEX60gensym96_3003198727.statsValue.time, elapsed_2281701439(timerHEX60gensym96_3003198731));
    }
  };

  return result_3003198730;

}

function formatValue_3137340831(result_3137340833, result_3137340833_Idx, value_3137340834, specifier_3137340835) {
    formatValue_721420459(result_3137340833, result_3137340833_Idx, HEX24_3087008487(value_3137340834), specifier_3137340835);

  
}

function newFunctionType_3087008162(paramTypes_3087008163, returnType_3087008164) {
  var result_3087008165 = null;

    result_3087008165 = {kind: 4, returnType: returnType_3087008164, paramTypes: nimCopy(null, paramTypes_3087008163, NTI3087008054), open: false};

  return result_3087008165;

}

function HEX3DHEX3D_3087008320(x_3087008322, y_3087008323) {
  var result_3087008324 = false;

  BeforeRet: {
    var sameObject_3087008331 = false;
    sameObject_3087008331 = x_3087008322 === y_3087008323
    if (sameObject_3087008331) {
    result_3087008324 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008322).length == (y_3087008323).length))) {
    result_3087008324 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008345 = 0;
      var colontmp__2952790236 = 0;
      colontmp__2952790236 = subInt((x_3087008322).length, 1);
      var res_2952790237 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790237 <= colontmp__2952790236)) break Label3;
            i_3087008345 = res_2952790237;
            if (!(HEX3DHEX3D_3087008302(x_3087008322[chckIndx(i_3087008345, 0, (x_3087008322).length - 1)], y_3087008323[chckIndx(i_3087008345, 0, (y_3087008323).length - 1)]))) {
            result_3087008324 = false;
            break BeforeRet;
            }
            
            res_2952790237 = addInt(res_2952790237, 1);
          }
      };
    };
    result_3087008324 = true;
    break BeforeRet;
  };

  return result_3087008324;

}

function HEX3DHEX3D_3087008302(a_3087008303, b_3087008304) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3087008305 = false;

  BeforeRet: {
    if ((a_3087008303 == null)) {
    result_3087008305 = (b_3087008304 == null);
    break BeforeRet;
    }
    
    if ((b_3087008304 == null)) {
    result_3087008305 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008303.kind == b_3087008304.kind))) {
    result_3087008305 = false;
    break BeforeRet;
    }
    
    switch (a_3087008303.kind) {
    case 4:
      var Temporary2 = a_3087008303;
      if (ConstSet69[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = b_3087008304;
      if (ConstSet70[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      if (!HEX3DHEX3D_3087008302(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3087008303;
        if (ConstSet71[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        var Temporary5 = b_3087008304;
        if (ConstSet72[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary1 = HEX3DHEX3D_3087008320(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3087008305 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3087008303;
      if (ConstSet73[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      var Temporary7 = b_3087008304;
      if (ConstSet74[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007747)); }
      result_3087008305 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3087008305 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3087008305;

}

function anyType_3087008177(open_3087008178) {
  var result_3087008179 = null;

    result_3087008179 = {kind: 5, open: open_3087008178, returnType: null, paramTypes: []};

  return result_3087008179;

}

function rawGet_3003139458(t_3003139461, key_3003139462, hc_3003139463, hc_3003139463_Idx) {
  var result_3003139464 = 0;

  BeforeRet: {
    hc_3003139463[hc_3003139463_Idx] = hash_2986346803(key_3003139462);
    if ((hc_3003139463[hc_3003139463_Idx] == 0)) {
    hc_3003139463[hc_3003139463_Idx] = 314159265;
    }
    
    if (((t_3003139461.data).length == 0)) {
    result_3003139464 = -1;
    break BeforeRet;
    }
    
    var h_3003139550 = (hc_3003139463[hc_3003139463_Idx] & (t_3003139461.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003139461.data[chckIndx(h_3003139550, 0, (t_3003139461.data).length - 1)].Field0)) break Label2;
          if (((t_3003139461.data[chckIndx(h_3003139550, 0, (t_3003139461.data).length - 1)].Field0 == hc_3003139463[hc_3003139463_Idx]) && (t_3003139461.data[chckIndx(h_3003139550, 0, (t_3003139461.data).length - 1)].Field1 == key_3003139462))) {
          result_3003139464 = h_3003139550;
          break BeforeRet;
          }
          
          h_3003139550 = nextTry_1308622883(h_3003139550, (t_3003139461.data).length - 1);
        }
    };
    result_3003139464 = subInt(-1, h_3003139550);
  };

  return result_3003139464;

}

function hasKey_3003204970(t_3003204973, key_3003204974) {
  var result_3003204975 = false;

    var hc_3003204976 = [0];
    result_3003204975 = (0 <= rawGet_3003139458(t_3003204973, key_3003204974, hc_3003204976, 0));

  return result_3003204975;

}

function contains_3003204964(t_3003204967, key_3003204968) {
  var result_3003204969 = false;

  BeforeRet: {
    result_3003204969 = hasKey_3003204970(t_3003204967, key_3003204968);
    break BeforeRet;
  };

  return result_3003204969;

}

function contains_3003204870(cache_3003204873, key_3003204874) {
  var result_3003204875 = false;

    result_3003204875 = contains_3003204964(cache_3003204873.table, key_3003204874);

  return result_3003204875;

}

function len_3087009054(t_3087009057) {
  var result_3087009058 = 0;

    result_3087009058 = t_3087009057.counter;

  return result_3087009058;

}

function addQuoted_3003175359(s_3003175361, s_3003175361_Idx, x_3003175362) {
    s_3003175361[s_3003175361_Idx].push.apply(s_3003175361[s_3003175361_Idx], HEX24_2181038317(x_3003175362));;

  
}

function HEX24_3087008904(symbol_3087008905) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3087008906 = [];

  BeforeRet: {
    switch (symbol_3087008905.kind) {
    case 0:
      var Temporary1 = symbol_3087008905;
      if (ConstSet86[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008906 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2181038317(symbol_3087008905.id) || [],[44,32] || [],HEX24_2986346455(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3087008905;
      if (ConstSet87[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008905;
      if (ConstSet88[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3087008906 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2181038317(symbol_3087008905.id) || [],[44,32] || [],HEX24_3087008180(Temporary2.typ) || [],[44,32] || [],HEX24_3087008487(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3087008906;

}

function addQuoted_3003175111(s_3003175113, s_3003175113_Idx, x_3003175114) {
    s_3003175113[s_3003175113_Idx].push.apply(s_3003175113[s_3003175113_Idx], HEX24_3087008904(x_3003175114));;

  
}

function HEX24_3003175266(t_3003175269) {
  var result_3003175270 = [[]];

    if ((len_3087009054(t_3003175269) == 0)) {
    result_3003175270[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_3003175270[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_3003175357 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_3003175358 = null;
        var L_2952790245 = len_3087009054(t_3003175269);
        Label2: {
          var h_2952790247 = 0;
          var colontmp__2952790248 = 0;
          colontmp__2952790248 = (t_3003175269.data).length - 1;
          var res_2952790249 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2952790249 <= colontmp__2952790248)) break Label4;
                h_2952790247 = res_2952790249;
                if (isFilled_1308622880(t_3003175269.data[chckIndx(h_2952790247, 0, (t_3003175269.data).length - 1)].Field0)) {
                key_3003175357 = nimCopy(key_3003175357, t_3003175269.data[chckIndx(h_2952790247, 0, (t_3003175269.data).length - 1)].Field1, NTI2181038083);
                val_3003175358 = t_3003175269.data[chckIndx(h_2952790247, 0, (t_3003175269.data).length - 1)].Field2;
                if ((1 < (result_3003175270[0]).length)) {
                result_3003175270[0].push.apply(result_3003175270[0], [44,32]);;
                }
                
                addQuoted_3003175359(result_3003175270, 0, key_3003175357);
                result_3003175270[0].push.apply(result_3003175270[0], [58,32]);;
                addQuoted_3003175111(result_3003175270, 0, val_3003175358);
                if (!((len_3087009054(t_3003175269) == L_2952790245))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2952790249 = addInt(res_2952790249, 1);
              }
          };
        };
      };
      result_3003175270[0].push.apply(result_3003175270[0], [125]);;
    }
    

  return result_3003175270[0];

}

function HEX5BHEX5D_3003205149(t_3003205152, key_3003205153) {
  var result_3003205154 = null;
  var result_3003205154_Idx = 0;

    var hcHEX60gensym22_3003205155 = [0];
    var indexHEX60gensym22_3003205162 = rawGet_3003139458(t_3003205152, key_3003205153, hcHEX60gensym22_3003205155, 0);
    if ((0 <= indexHEX60gensym22_3003205162)) {
    result_3003205154 = t_3003205152.data[chckIndx(indexHEX60gensym22_3003205162, 0, (t_3003205152.data).length - 1)]; result_3003205154_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003205153);
    }
    

  return [result_3003205154, result_3003205154_Idx];

}

function remove_3003142905(L_3003142907, n_3003142908) {
    if ((n_3003142908 == L_3003142907.tail)) {
    L_3003142907.tail = n_3003142908.prev;
    }
    
    if ((n_3003142908 == L_3003142907.head)) {
    L_3003142907.head = n_3003142908.next;
    }
    
    if (!((n_3003142908.next == null))) {
    n_3003142908.next.prev = n_3003142908.prev;
    }
    
    if (!((n_3003142908.prev == null))) {
    n_3003142908.prev.next = n_3003142908.next;
    }
    

  
}

function prepend_3003141634(L_3003141636, n_3003141637) {
    n_3003141637.prev = null;
    n_3003141637.next = L_3003141636.head;
    if (!((L_3003141636.head == null))) {
    if (!((L_3003141636.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003141636.head.prev = n_3003141637;
    }
    
    L_3003141636.head = n_3003141637;
    if ((L_3003141636.tail == null)) {
    L_3003141636.tail = n_3003141637;
    }
    

  
}

function HEX5BHEX5D_3003205063(cache_3003205066, key_3003205067) {
    var Temporary1;

  var result_3003205068 = null;

    var node_3003205255 = (Temporary1 = HEX5BHEX5D_3003205149(cache_3003205066.table, key_3003205067), Temporary1)[0][Temporary1[1]];
    result_3003205068 = node_3003205255.value.val;
    remove_3003142905(cache_3003205066.list, node_3003205255);
    prepend_3003141634(cache_3003205066.list, node_3003205255);

  return result_3003205068;

}

function computeSymbols_3003205356(ctxHEX60gensym104_3003205357, inputHEX60gensym104_3003205358, recordDependencyHEX60gensym104_3003205359) {
    var Temporary3;
    var Temporary5;

  var result_3003205362 = null;

  BeforeRet: {
    var timerHEX60gensym104_3003205363 = startTimer_2281701428();
    ctxHEX60gensym104_3003205357.statsSymbols.totalCalls = addInt(ctxHEX60gensym104_3003205357.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym104_3003205452 = getItem_3003175953(inputHEX60gensym104_3003205358);
    var keyHEX60gensym104_3003205453 = {Field0: nimCopy(null, itemHEX60gensym104_3003205452, NTI3019898905), Field1: 3};
    if (recordDependencyHEX60gensym104_3003205359) {
    recordDependency_3003175740(ctxHEX60gensym104_3003205357, itemHEX60gensym104_3003205452, 3);
    }
    
    var colorHEX60gensym104_3003205454 = nodeColor_3019901365(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, 0);
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym104_3003205454, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym104_3003205452));
    }
    
    if ((colorHEX60gensym104_3003205454 == 2)) {
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
    if (false) {
    markRed_3019913717(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, []);
    }
    
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    }
    else {
      if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
      }
      
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym104_3003205454 == 0)) {
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
    if (false) {
    markRed_3019913717(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, []);
    }
    
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453, true) == 0)) {
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym104_3003205357.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
      if (false) {
      markRed_3019913717(ctxHEX60gensym104_3003205357.depGraph, keyHEX60gensym104_3003205453, []);
      }
      
      if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
      }
      
      if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym104_3003205454 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,52,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym104_3003205357.enableLogging && contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175266(HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358)));
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    force_3003192111(ctxHEX60gensym104_3003205357, keyHEX60gensym104_3003205453);
    }
    
    if (!(contains_3003204870(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2986346455(inputHEX60gensym104_3003205358) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003205362 = HEX5BHEX5D_3003205063(ctxHEX60gensym104_3003205357.queryCacheSymbols, inputHEX60gensym104_3003205358);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym104_3003205357.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym104_3003205357.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym104_3003205357.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym104_3003205357.statsSymbols.time = addInt(ctxHEX60gensym104_3003205357.statsSymbols.time, elapsed_2281701439(timerHEX60gensym104_3003205363));
    }
  };

  return result_3003205362;

}

function rawGet_3003219622(t_3003219625, key_3003219626, hc_3003219627, hc_3003219627_Idx) {
  var result_3003219628 = 0;

  BeforeRet: {
    hc_3003219627[hc_3003219627_Idx] = hash_2181038324(key_3003219626);
    if ((hc_3003219627[hc_3003219627_Idx] == 0)) {
    hc_3003219627[hc_3003219627_Idx] = 314159265;
    }
    
    if (((t_3003219625.data).length == 0)) {
    result_3003219628 = -1;
    break BeforeRet;
    }
    
    var h_3003219713 = (hc_3003219627[hc_3003219627_Idx] & (t_3003219625.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003219625.data[chckIndx(h_3003219713, 0, (t_3003219625.data).length - 1)].Field0)) break Label2;
          if (((t_3003219625.data[chckIndx(h_3003219713, 0, (t_3003219625.data).length - 1)].Field0 == hc_3003219627[hc_3003219627_Idx]) && HEX3DHEX3D_2181038320(t_3003219625.data[chckIndx(h_3003219713, 0, (t_3003219625.data).length - 1)].Field1, key_3003219626))) {
          result_3003219628 = h_3003219713;
          break BeforeRet;
          }
          
          h_3003219713 = nextTry_1308622883(h_3003219713, (t_3003219625.data).length - 1);
        }
    };
    result_3003219628 = subInt(-1, h_3003219713);
  };

  return result_3003219628;

}

function hasKey_3003230938(t_3003230941, key_3003230942) {
  var result_3003230943 = false;

    var hc_3003230944 = [0];
    result_3003230943 = (0 <= rawGet_3003219622(t_3003230941, key_3003230942, hc_3003230944, 0));

  return result_3003230943;

}

function hasKey_3003230812(t_3003230815, key_3003230816) {
  var result_3003230817 = false;

    result_3003230817 = hasKey_3003230938(t_3003230815, key_3003230816);

  return result_3003230817;

}

function contains_3003230776(t_3003230779, key_3003230780) {
  var result_3003230781 = false;

  BeforeRet: {
    result_3003230781 = hasKey_3003230812(t_3003230779, key_3003230780);
    break BeforeRet;
  };

  return result_3003230781;

}

function HEX5BHEX5D_3003231197(t_3003231200, key_3003231201) {
  var result_3003231202 = null;
  var result_3003231202_Idx = 0;

    var hcHEX60gensym22_3003231203 = [0];
    var indexHEX60gensym22_3003231210 = rawGet_3003219622(t_3003231200, key_3003231201, hcHEX60gensym22_3003231203, 0);
    if ((0 <= indexHEX60gensym22_3003231210)) {
    result_3003231202 = t_3003231200.data[chckIndx(indexHEX60gensym22_3003231210, 0, (t_3003231200.data).length - 1)]; result_3003231202_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346264(key_3003231201);
    }
    

  return [result_3003231202, result_3003231202_Idx];

}

function HEX5BHEX5D_3003231031(t_3003231034, key_3003231035) {
    var Temporary1;

  var result_3003231036 = null;
  var result_3003231036_Idx = 0;

    result_3003231036 = (Temporary1 = HEX5BHEX5D_3003231197(t_3003231034, key_3003231035), Temporary1)[0]; result_3003231036_Idx = Temporary1[1];

  return [result_3003231036, result_3003231036_Idx];

}

function getItem_3003185222(selfHEX60gensym81_3003185223) {
  var result_3003185224 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym81_3003185223.id, null_2181038340)) {
    selfHEX60gensym81_3003185223.id = nimCopy(selfHEX60gensym81_3003185223.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym81_3003185223.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,49,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952790252 = nimCopy(null, selfHEX60gensym81_3003185223.id, NTI2181038083);
    var colontmp__2952790253 = 2;
    result_3003185224 = nimCopy(result_3003185224, {Field0: nimCopy(null, colontmp__2952790252, NTI2181038083), Field1: colontmp__2952790253}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003185224;

}

function hash_3087008907(symbol_3087008908) {
  var result_3087008909 = 0;

  BeforeRet: {
    result_3087008909 = hash_2181038324(symbol_3087008908.id);
    break BeforeRet;
  };

  return result_3087008909;

}

function HEX3DHEX3D_3087008510(a_3087008511, b_3087008512) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3087008513 = false;

  BeforeRet: {
    if (!((a_3087008511.kind == b_3087008512.kind))) {
    result_3087008513 = false;
    break BeforeRet;
    }
    
    switch (a_3087008511.kind) {
    case 0:
      result_3087008513 = true;
      break BeforeRet;
      break;
    case 1:
      result_3087008513 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3087008511;
      if (ConstSet91[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      var Temporary2 = b_3087008512;
      if (ConstSet92[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008513 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3087008511;
      if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = b_3087008512;
      if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008513 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3087008511;
      if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      var Temporary6 = b_3087008512;
      if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007750)); }
      result_3087008513 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3087008511;
      if (ConstSet97[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007750)); }
      var Temporary8 = b_3087008512;
      if (ConstSet98[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007750)); }
      result_3087008513 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3087008511;
      if (ConstSet99[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007750)); }
      var Temporary10 = b_3087008512;
      if (ConstSet100[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      result_3087008513 = HEX3DHEX3D_3087008302(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008513;

}

function HEX3DHEX3D_3087008910(a_3087008911, b_3087008912) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

  var result_3087008913 = false;

  BeforeRet: {
    if ((a_3087008911 == null)) {
    result_3087008913 = (b_3087008912 == null);
    break BeforeRet;
    }
    
    if ((b_3087008912 == null)) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2181038320(a_3087008911.id, b_3087008912.id))) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008911.kind == b_3087008912.kind))) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087008911.name, b_3087008912.name))) {
    result_3087008913 = false;
    break BeforeRet;
    }
    
    switch (a_3087008911.kind) {
    case 1:
      var Temporary4 = a_3087008911;
      if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = b_3087008912;
      if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      if (!HEX3DHEX3D_3087008302(Temporary4.typ, Temporary5.typ)) Temporary3 = false; else {        var Temporary6 = a_3087008911;
        if (ConstSet101[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
        var Temporary7 = b_3087008912;
        if (ConstSet102[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3087007753)); }
        Temporary3 = HEX3DHEX3D_3087008510(Temporary6.value, Temporary7.value);      }      if (!Temporary3) Temporary2 = false; else {        var Temporary8 = a_3087008911;
        if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007753)); }
        var Temporary9 = b_3087008912;
        if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3087007753)); }
        Temporary2 = (Temporary8.operatorNotation == Temporary9.operatorNotation);      }      if (!Temporary2) Temporary1 = false; else {        var Temporary10 = a_3087008911;
        if (ConstSet105[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007753)); }
        var Temporary11 = b_3087008912;
        if (ConstSet106[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3087007753)); }
        Temporary1 = (Temporary10.precedence == Temporary11.precedence);      }      result_3087008913 = Temporary1;
      break BeforeRet;
      break;
    case 0:
      var Temporary12 = a_3087008911;
      if (ConstSet107[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007753)); }
      var Temporary13 = b_3087008912;
      if (ConstSet108[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI3087007753)); }
      result_3087008913 = (Temporary12.node == Temporary13.node);
      break BeforeRet;
      break;
    }
  };

  return result_3087008913;

}

function rawGet_3003144965(t_3003144968, key_3003144969, hc_3003144970, hc_3003144970_Idx) {
  var result_3003144971 = 0;

  BeforeRet: {
    hc_3003144970[hc_3003144970_Idx] = hash_3087008907(key_3003144969);
    if ((hc_3003144970[hc_3003144970_Idx] == 0)) {
    hc_3003144970[hc_3003144970_Idx] = 314159265;
    }
    
    if (((t_3003144968.data).length == 0)) {
    result_3003144971 = -1;
    break BeforeRet;
    }
    
    var h_3003145057 = (hc_3003144970[hc_3003144970_Idx] & (t_3003144968.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003144968.data[chckIndx(h_3003145057, 0, (t_3003144968.data).length - 1)].Field0)) break Label2;
          if (((t_3003144968.data[chckIndx(h_3003145057, 0, (t_3003144968.data).length - 1)].Field0 == hc_3003144970[hc_3003144970_Idx]) && HEX3DHEX3D_3087008910(t_3003144968.data[chckIndx(h_3003145057, 0, (t_3003144968.data).length - 1)].Field1, key_3003144969))) {
          result_3003144971 = h_3003145057;
          break BeforeRet;
          }
          
          h_3003145057 = nextTry_1308622883(h_3003145057, (t_3003144968.data).length - 1);
        }
    };
    result_3003144971 = subInt(-1, h_3003145057);
  };

  return result_3003144971;

}

function hasKey_3003208472(t_3003208475, key_3003208476) {
  var result_3003208477 = false;

    var hc_3003208478 = [0];
    result_3003208477 = (0 <= rawGet_3003144965(t_3003208475, key_3003208476, hc_3003208478, 0));

  return result_3003208477;

}

function contains_3003208466(t_3003208469, key_3003208470) {
  var result_3003208471 = false;

  BeforeRet: {
    result_3003208471 = hasKey_3003208472(t_3003208469, key_3003208470);
    break BeforeRet;
  };

  return result_3003208471;

}

function contains_3003208372(cache_3003208375, key_3003208376) {
  var result_3003208377 = false;

    result_3003208377 = contains_3003208466(cache_3003208375.table, key_3003208376);

  return result_3003208377;

}

function raiseKeyError_3003208745(key_3003208747) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3087008904(key_3003208747) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003208651(t_3003208654, key_3003208655) {
  var result_3003208656 = null;
  var result_3003208656_Idx = 0;

    var hcHEX60gensym22_3003208657 = [0];
    var indexHEX60gensym22_3003208664 = rawGet_3003144965(t_3003208654, key_3003208655, hcHEX60gensym22_3003208657, 0);
    if ((0 <= indexHEX60gensym22_3003208664)) {
    result_3003208656 = t_3003208654.data[chckIndx(indexHEX60gensym22_3003208664, 0, (t_3003208654.data).length - 1)]; result_3003208656_Idx = "Field2";
    }
    else {
    raiseKeyError_3003208745(key_3003208655);
    }
    

  return [result_3003208656, result_3003208656_Idx];

}

function remove_3003150862(L_3003150864, n_3003150865) {
    if ((n_3003150865 == L_3003150864.tail)) {
    L_3003150864.tail = n_3003150865.prev;
    }
    
    if ((n_3003150865 == L_3003150864.head)) {
    L_3003150864.head = n_3003150865.next;
    }
    
    if (!((n_3003150865.next == null))) {
    n_3003150865.next.prev = n_3003150865.prev;
    }
    
    if (!((n_3003150865.prev == null))) {
    n_3003150865.prev.next = n_3003150865.next;
    }
    

  
}

function prepend_3003147133(L_3003147135, n_3003147136) {
    n_3003147136.prev = null;
    n_3003147136.next = L_3003147135.head;
    if (!((L_3003147135.head == null))) {
    if (!((L_3003147135.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003147135.head.prev = n_3003147136;
    }
    
    L_3003147135.head = n_3003147136;
    if ((L_3003147135.tail == null)) {
    L_3003147135.tail = n_3003147136;
    }
    

  
}

function HEX5BHEX5D_3003208565(cache_3003208568, key_3003208569) {
    var Temporary1;

  var result_3003208570 = null;

    var node_3003208758 = (Temporary1 = HEX5BHEX5D_3003208651(cache_3003208568.table, key_3003208569), Temporary1)[0][Temporary1[1]];
    result_3003208570 = node_3003208758.value.val;
    remove_3003150862(cache_3003208568.list, node_3003208758);
    prepend_3003147133(cache_3003208568.list, node_3003208758);

  return result_3003208570;

}

function computeSymbolType_3003208828(ctxHEX60gensym108_3003208829, inputHEX60gensym108_3003208830, recordDependencyHEX60gensym108_3003208831) {
    var Temporary3;
    var Temporary5;

  var result_3003208832 = null;

  BeforeRet: {
    var timerHEX60gensym108_3003208833 = startTimer_2281701428();
    ctxHEX60gensym108_3003208829.statsSymbolType.totalCalls = addInt(ctxHEX60gensym108_3003208829.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym108_3003208922 = getItem_3003185222(inputHEX60gensym108_3003208830);
    var keyHEX60gensym108_3003208923 = {Field0: nimCopy(null, itemHEX60gensym108_3003208922, NTI3019898905), Field1: 4};
    if (recordDependencyHEX60gensym108_3003208831) {
    recordDependency_3003175740(ctxHEX60gensym108_3003208829, itemHEX60gensym108_3003208922, 4);
    }
    
    var colorHEX60gensym108_3003208924 = nodeColor_3019901365(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, 0);
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym108_3003208924, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym108_3003208922));
    }
    
    if ((colorHEX60gensym108_3003208924 == 2)) {
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
    if (false) {
    markRed_3019913717(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, []);
    }
    
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    }
    else {
      if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
      }
      
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym108_3003208924 == 0)) {
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
    if (false) {
    markRed_3019913717(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, []);
    }
    
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923, true) == 0)) {
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym108_3003208829.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
      if (false) {
      markRed_3019913717(ctxHEX60gensym108_3003208829.depGraph, keyHEX60gensym108_3003208923, []);
      }
      
      if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
      }
      
      if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym108_3003208924 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,56,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym108_3003208829.enableLogging && contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008180(HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830)));
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    force_3003192111(ctxHEX60gensym108_3003208829, keyHEX60gensym108_3003208923);
    }
    
    if (!(contains_3003208372(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym108_3003208830) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003208832 = HEX5BHEX5D_3003208565(ctxHEX60gensym108_3003208829.queryCacheSymbolType, inputHEX60gensym108_3003208830);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym108_3003208829.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym108_3003208829.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym108_3003208829.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym108_3003208829.statsSymbolType.time = addInt(ctxHEX60gensym108_3003208829.statsSymbolType.time, elapsed_2281701439(timerHEX60gensym108_3003208833));
    }
  };

  return result_3003208832;

}

function none_3003195234() {
  var result_3003195240 = ({val: null});

  return result_3003195240;

}

function none_3003195231() {
  var result_3003195233 = ({val: null});

    result_3003195233 = nimCopy(result_3003195233, none_3003195234(), NTI3003164608);

  return result_3003195233;

}

function isNone_3003231386(self_3003231388) {
  var result_3003231389 = false;

    result_3003231389 = (self_3003231388.val == null);

  return result_3003231389;

}

function get_3003231429(self_3003231431) {
  var result_3003231432 = null;
  var result_3003231432_Idx = 0;

  BeforeRet: {
    if (isNone_3003231386(self_3003231431)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3003231432 = self_3003231431; result_3003231432_Idx = "val";
    break BeforeRet;
  };

  return [result_3003231432, result_3003231432_Idx];

}

function some_3003195218(val_3003195220) {
  var result_3003195221 = ({val: null});

    if (!(!((val_3003195220 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003195221.val = val_3003195220;

  return result_3003195221;

}

function last_2986344706(node_2986344707) {
  var result_2986344708 = null;

  BeforeRet: {
    if ((0 < len_2986344536(node_2986344707))) {
    result_2986344708 = HEX5BHEX5D_2986344532(node_2986344707, subInt(len_2986344536(node_2986344707), 1));
    break BeforeRet;
    }
    
    result_2986344708 = null;
    break BeforeRet;
  };

  return result_2986344708;

}

function isSome_3003231556(self_3003231558) {
  var result_3003231559 = false;

    result_3003231559 = !((self_3003231558.val == null));

  return result_3003231559;

}

function get_3003231547(self_3003231549, otherwise_3003231550) {
    var Temporary1;

  var result_3003231551 = null;

    if (isSome_3003231556(self_3003231549)) {
    Temporary1 = self_3003231549.val;
    }
    else {
    Temporary1 = otherwise_3003231550;
    }
    
    result_3003231551 = Temporary1;

  return result_3003231551;

}

function rawGet_3003135154(t_3003135157, key_3003135158, hc_3003135159, hc_3003135159_Idx) {
  var result_3003135160 = 0;

  BeforeRet: {
    hc_3003135159[hc_3003135159_Idx] = hash_2986346803(key_3003135158);
    if ((hc_3003135159[hc_3003135159_Idx] == 0)) {
    hc_3003135159[hc_3003135159_Idx] = 314159265;
    }
    
    if (((t_3003135157.data).length == 0)) {
    result_3003135160 = -1;
    break BeforeRet;
    }
    
    var h_3003135246 = (hc_3003135159[hc_3003135159_Idx] & (t_3003135157.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003135157.data[chckIndx(h_3003135246, 0, (t_3003135157.data).length - 1)].Field0)) break Label2;
          if (((t_3003135157.data[chckIndx(h_3003135246, 0, (t_3003135157.data).length - 1)].Field0 == hc_3003135159[hc_3003135159_Idx]) && (t_3003135157.data[chckIndx(h_3003135246, 0, (t_3003135157.data).length - 1)].Field1 == key_3003135158))) {
          result_3003135160 = h_3003135246;
          break BeforeRet;
          }
          
          h_3003135246 = nextTry_1308622883(h_3003135246, (t_3003135157.data).length - 1);
        }
    };
    result_3003135160 = subInt(-1, h_3003135246);
  };

  return result_3003135160;

}

function hasKey_3003201479(t_3003201482, key_3003201483) {
  var result_3003201484 = false;

    var hc_3003201485 = [0];
    result_3003201484 = (0 <= rawGet_3003135154(t_3003201482, key_3003201483, hc_3003201485, 0));

  return result_3003201484;

}

function contains_3003201473(t_3003201476, key_3003201477) {
  var result_3003201478 = false;

  BeforeRet: {
    result_3003201478 = hasKey_3003201479(t_3003201476, key_3003201477);
    break BeforeRet;
  };

  return result_3003201478;

}

function contains_3003201379(cache_3003201382, key_3003201383) {
  var result_3003201384 = false;

    result_3003201384 = contains_3003201473(cache_3003201382.table, key_3003201383);

  return result_3003201384;

}

function isSome_3087009345(self_3087009347) {
  var result_3087009348 = false;

    result_3087009348 = !((self_3087009347.val == null));

  return result_3087009348;

}

function HEX24_3003175100(self_3003175102) {
  var result_3003175103 = [[]];

    if (isSome_3087009345(self_3003175102)) {
    result_3003175103[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_3003175111(result_3003175103, 0, self_3003175102.val);
    result_3003175103[0].push.apply(result_3003175103[0], [41]);;
    }
    else {
      result_3003175103[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_3003175103[0];

}

function HEX5BHEX5D_3003201658(t_3003201661, key_3003201662) {
  var result_3003201663 = null;
  var result_3003201663_Idx = 0;

    var hcHEX60gensym22_3003201664 = [0];
    var indexHEX60gensym22_3003201671 = rawGet_3003135154(t_3003201661, key_3003201662, hcHEX60gensym22_3003201664, 0);
    if ((0 <= indexHEX60gensym22_3003201671)) {
    result_3003201663 = t_3003201661.data[chckIndx(indexHEX60gensym22_3003201671, 0, (t_3003201661.data).length - 1)]; result_3003201663_Idx = "Field2";
    }
    else {
    raiseKeyError_3003195140(key_3003201662);
    }
    

  return [result_3003201663, result_3003201663_Idx];

}

function remove_3003138601(L_3003138603, n_3003138604) {
    if ((n_3003138604 == L_3003138603.tail)) {
    L_3003138603.tail = n_3003138604.prev;
    }
    
    if ((n_3003138604 == L_3003138603.head)) {
    L_3003138603.head = n_3003138604.next;
    }
    
    if (!((n_3003138604.next == null))) {
    n_3003138604.next.prev = n_3003138604.prev;
    }
    
    if (!((n_3003138604.prev == null))) {
    n_3003138604.prev.next = n_3003138604.next;
    }
    

  
}

function prepend_3003137330(L_3003137332, n_3003137333) {
    n_3003137333.prev = null;
    n_3003137333.next = L_3003137332.head;
    if (!((L_3003137332.head == null))) {
    if (!((L_3003137332.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003137332.head.prev = n_3003137333;
    }
    
    L_3003137332.head = n_3003137333;
    if ((L_3003137332.tail == null)) {
    L_3003137332.tail = n_3003137333;
    }
    

  
}

function HEX5BHEX5D_3003201572(cache_3003201575, key_3003201576) {
    var Temporary1;

  var result_3003201577 = ({val: null});

    var node_3003201764 = (Temporary1 = HEX5BHEX5D_3003201658(cache_3003201575.table, key_3003201576), Temporary1)[0][Temporary1[1]];
    result_3003201577 = nimCopy(result_3003201577, node_3003201764.value.val, NTI3087008904);
    remove_3003138601(cache_3003201575.list, node_3003201764);
    prepend_3003137330(cache_3003201575.list, node_3003201764);

  return result_3003201577;

}

function computeSymbol_3003201856(ctxHEX60gensym100_3003201857, inputHEX60gensym100_3003201858, recordDependencyHEX60gensym100_3003201859) {
    var Temporary3;
    var Temporary5;

  var result_3003201861 = ({val: null});

  BeforeRet: {
    var timerHEX60gensym100_3003201862 = startTimer_2281701428();
    ctxHEX60gensym100_3003201857.statsSymbol.totalCalls = addInt(ctxHEX60gensym100_3003201857.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym100_3003201951 = getItem_3003175953(inputHEX60gensym100_3003201858);
    var keyHEX60gensym100_3003201952 = {Field0: nimCopy(null, itemHEX60gensym100_3003201951, NTI3019898905), Field1: 2};
    if (recordDependencyHEX60gensym100_3003201859) {
    recordDependency_3003175740(ctxHEX60gensym100_3003201857, itemHEX60gensym100_3003201951, 2);
    }
    
    var colorHEX60gensym100_3003201953 = nodeColor_3019901365(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, 0);
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym100_3003201953, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym100_3003201951));
    }
    
    if ((colorHEX60gensym100_3003201953 == 2)) {
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
    if (false) {
    markRed_3019913717(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, []);
    }
    
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    }
    else {
      if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
      }
      
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym100_3003201953 == 0)) {
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
    if (false) {
    markRed_3019913717(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, []);
    }
    
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952, true) == 0)) {
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym100_3003201857.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
      if (false) {
      markRed_3019913717(ctxHEX60gensym100_3003201857.depGraph, keyHEX60gensym100_3003201952, []);
      }
      
      if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
      }
      
      if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym100_3003201953 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym100_3003201857.enableLogging && contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3003175100(HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858)));
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    force_3003192111(ctxHEX60gensym100_3003201857, keyHEX60gensym100_3003201952);
    }
    
    if (!(contains_3003201379(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2986346455(inputHEX60gensym100_3003201858) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003201861 = nimCopy(result_3003201861, HEX5BHEX5D_3003201572(ctxHEX60gensym100_3003201857.queryCacheSymbol, inputHEX60gensym100_3003201858), NTI3087008904);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym100_3003201857.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym100_3003201857.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym100_3003201857.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym100_3003201857.statsSymbol.time = addInt(ctxHEX60gensym100_3003201857.statsSymbol.time, elapsed_2281701439(timerHEX60gensym100_3003201862));
    }
  };

  return result_3003201861;

}

function isNone_3087009373(self_3087009375) {
  var result_3087009376 = false;

    result_3087009376 = (self_3087009375.val == null);

  return result_3087009376;

}

function get_3087009365(self_3087009367) {
  var result_3087009368 = null;

    if (isNone_3087009373(self_3087009367)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087009368 = self_3087009367["val"];

  return result_3087009368;

}

function formatValue_3003231702(result_3003231704, result_3003231704_Idx, value_3003231705, specifier_3003231706) {
    formatValue_721420459(result_3003231704, result_3003231704_Idx, HEX24_3087008904(value_3003231705), specifier_3003231706);

  
}

function mustRehash_3003224224(t_3003224226) {
  var result_3003224227 = false;

    if (!((t_3003224226.counter < (t_3003224226.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003224227 = ((mulInt((t_3003224226.data).length, 2) < mulInt(t_3003224226.counter, 3)) || (subInt((t_3003224226.data).length, t_3003224226.counter) < 4));

  return result_3003224227;

}

function rawInsert_3003224917(t_3003224921, data_3003224922, data_3003224922_Idx, key_3003224923, val_3003224924, hc_3003224925, h_3003224926) {
    data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field1 = nimCopy(data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field1, key_3003224923, NTI3019898908);
    data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field2 = nimCopy(null, val_3003224924, NTI3003122000);
    data_3003224922[data_3003224922_Idx][chckIndx(h_3003224926, 0, (data_3003224922[data_3003224922_Idx]).length - 1)].Field0 = hc_3003224925;

  
}

function enlarge_3003224481(t_3003224484) {
    var n_3003224487 = [];
    n_3003224487 = new Array(chckRange(mulInt((t_3003224484.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003224484.data).length, 2), 0, 2147483647) ; ++i) { n_3003224487[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3003224484.data; t_3003224484.data = n_3003224487; n_3003224487 = Temporary1;    Label2: {
      var i_3003224585 = 0;
      var colontmp__2952790258 = 0;
      colontmp__2952790258 = (n_3003224487).length - 1;
      var res_2952790259 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790259 <= colontmp__2952790258)) break Label4;
            i_3003224585 = res_2952790259;
            var eh_3003224666 = n_3003224487[chckIndx(i_3003224585, 0, (n_3003224487).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003224666)) {
            var j_3003224670 = (eh_3003224666 & (t_3003224484.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003224484.data[chckIndx(j_3003224670, 0, (t_3003224484.data).length - 1)].Field0)) break Label6;
                  j_3003224670 = nextTry_1308622883(j_3003224670, (t_3003224484.data).length - 1);
                }
            };
            rawInsert_3003224917(t_3003224484, t_3003224484, "data", n_3003224487[chckIndx(i_3003224585, 0, (n_3003224487).length - 1)].Field1, n_3003224487[chckIndx(i_3003224585, 0, (n_3003224487).length - 1)].Field2, eh_3003224666, j_3003224670);
            }
            
            res_2952790259 = addInt(res_2952790259, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003225176(t_3003225179, key_3003225180, hc_3003225181) {
  var result_3003225182 = 0;

  BeforeRet: {
    if (((t_3003225179.data).length == 0)) {
    result_3003225182 = -1;
    break BeforeRet;
    }
    
    var h_3003225267 = (hc_3003225181 & (t_3003225179.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003225179.data[chckIndx(h_3003225267, 0, (t_3003225179.data).length - 1)].Field0)) break Label2;
          if (((t_3003225179.data[chckIndx(h_3003225267, 0, (t_3003225179.data).length - 1)].Field0 == hc_3003225181) && HEX3DHEX3D_3019901909(t_3003225179.data[chckIndx(h_3003225267, 0, (t_3003225179.data).length - 1)].Field1, key_3003225180))) {
          result_3003225182 = h_3003225267;
          break BeforeRet;
          }
          
          h_3003225267 = nextTry_1308622883(h_3003225267, (t_3003225179.data).length - 1);
        }
    };
    result_3003225182 = subInt(-1, h_3003225267);
  };

  return result_3003225182;

}

function HEX5BHEX5DHEX3D_3003223956(t_3003223959, key_3003223960, val_3003223961) {
    if (((t_3003223959.data).length == 0)) {
    var correctSizeHEX60gensym566_3003224044 = slotsNeeded_1308622891(32);
    t_3003223959.counter = 0;
    t_3003223959.data = new Array(chckRange(correctSizeHEX60gensym566_3003224044, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym566_3003224044, 0, 2147483647) ; ++i) { t_3003223959.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3003224049 = [0];
    var index_3003224056 = rawGet_3003221620(t_3003223959, key_3003223960, hc_3003224049, 0);
    if ((0 <= index_3003224056)) {
    t_3003223959.data[chckIndx(index_3003224056, 0, (t_3003223959.data).length - 1)].Field2 = nimCopy(null, val_3003223961, NTI3003122000);
    }
    else {
      if (((t_3003223959.data).length == 0)) {
      var correctSizeHEX60gensym569_3003224219 = slotsNeeded_1308622891(32);
      t_3003223959.counter = 0;
      t_3003223959.data = new Array(chckRange(correctSizeHEX60gensym569_3003224219, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym569_3003224219, 0, 2147483647) ; ++i) { t_3003223959.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3003224224(t_3003223959)) {
      enlarge_3003224481(t_3003223959);
      index_3003224056 = rawGetKnownHC_3003225176(t_3003223959, key_3003223960, hc_3003224049[0]);
      }
      
      index_3003224056 = subInt(-1, index_3003224056);
      rawInsert_3003224917(t_3003223959, t_3003223959, "data", key_3003223960, val_3003223961, hc_3003224049[0], index_3003224056);
      t_3003223959.counter = addInt(t_3003223959.counter, 1);
    }
    

  
}

function hasKey_3003225625(t_3003225628, key_3003225629) {
  var result_3003225630 = false;

    var hc_3003225631 = [0];
    result_3003225630 = (0 <= rawGet_3003222268(t_3003225628, key_3003225629, hc_3003225631, 0));

  return result_3003225630;

}

function contains_3003225619(t_3003225622, key_3003225623) {
  var result_3003225624 = false;

  BeforeRet: {
    result_3003225624 = hasKey_3003225625(t_3003225622, key_3003225623);
    break BeforeRet;
  };

  return result_3003225624;

}

function mustRehash_3003225969(t_3003225971) {
  var result_3003225972 = false;

    if (!((t_3003225971.counter < (t_3003225971.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003225972 = ((mulInt((t_3003225971.data).length, 2) < mulInt(t_3003225971.counter, 3)) || (subInt((t_3003225971.data).length, t_3003225971.counter) < 4));

  return result_3003225972;

}

function rawInsert_3003226662(t_3003226666, data_3003226667, data_3003226667_Idx, key_3003226668, val_3003226669, hc_3003226670, h_3003226671) {
    data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field1 = nimCopy(data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field1, key_3003226668, NTI2181038083);
    data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field2 = nimCopy(data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field2, val_3003226669, NTI3003121668);
    data_3003226667[data_3003226667_Idx][chckIndx(h_3003226671, 0, (data_3003226667[data_3003226667_Idx]).length - 1)].Field0 = hc_3003226670;

  
}

function enlarge_3003226226(t_3003226229) {
    var n_3003226232 = [];
    n_3003226232 = new Array(chckRange(mulInt((t_3003226229.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003226229.data).length, 2), 0, 2147483647) ; ++i) { n_3003226232[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_3003226229.data; t_3003226229.data = n_3003226232; n_3003226232 = Temporary1;    Label2: {
      var i_3003226330 = 0;
      var colontmp__2952790264 = 0;
      colontmp__2952790264 = (n_3003226232).length - 1;
      var res_2952790265 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790265 <= colontmp__2952790264)) break Label4;
            i_3003226330 = res_2952790265;
            var eh_3003226411 = n_3003226232[chckIndx(i_3003226330, 0, (n_3003226232).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003226411)) {
            var j_3003226415 = (eh_3003226411 & (t_3003226229.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003226229.data[chckIndx(j_3003226415, 0, (t_3003226229.data).length - 1)].Field0)) break Label6;
                  j_3003226415 = nextTry_1308622883(j_3003226415, (t_3003226229.data).length - 1);
                }
            };
            rawInsert_3003226662(t_3003226229, t_3003226229, "data", n_3003226232[chckIndx(i_3003226330, 0, (n_3003226232).length - 1)].Field1, n_3003226232[chckIndx(i_3003226330, 0, (n_3003226232).length - 1)].Field2, eh_3003226411, j_3003226415);
            }
            
            res_2952790265 = addInt(res_2952790265, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003226921(t_3003226924, key_3003226925, hc_3003226926) {
  var result_3003226927 = 0;

  BeforeRet: {
    if (((t_3003226924.data).length == 0)) {
    result_3003226927 = -1;
    break BeforeRet;
    }
    
    var h_3003227012 = (hc_3003226926 & (t_3003226924.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003226924.data[chckIndx(h_3003227012, 0, (t_3003226924.data).length - 1)].Field0)) break Label2;
          if (((t_3003226924.data[chckIndx(h_3003227012, 0, (t_3003226924.data).length - 1)].Field0 == hc_3003226926) && HEX3DHEX3D_2181038320(t_3003226924.data[chckIndx(h_3003227012, 0, (t_3003226924.data).length - 1)].Field1, key_3003226925))) {
          result_3003226927 = h_3003227012;
          break BeforeRet;
          }
          
          h_3003227012 = nextTry_1308622883(h_3003227012, (t_3003226924.data).length - 1);
        }
    };
    result_3003226927 = subInt(-1, h_3003227012);
  };

  return result_3003226927;

}

function HEX5BHEX5DHEX3D_3003225701(t_3003225704, key_3003225705, val_3003225706) {
    if (((t_3003225704.data).length == 0)) {
    var correctSizeHEX60gensym578_3003225789 = slotsNeeded_1308622891(32);
    t_3003225704.counter = 0;
    t_3003225704.data = new Array(chckRange(correctSizeHEX60gensym578_3003225789, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym578_3003225789, 0, 2147483647) ; ++i) { t_3003225704.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_3003225794 = [0];
    var index_3003225801 = rawGet_3003222268(t_3003225704, key_3003225705, hc_3003225794, 0);
    if ((0 <= index_3003225801)) {
    t_3003225704.data[chckIndx(index_3003225801, 0, (t_3003225704.data).length - 1)].Field2 = nimCopy(t_3003225704.data[chckIndx(index_3003225801, 0, (t_3003225704.data).length - 1)].Field2, val_3003225706, NTI3003121668);
    }
    else {
      if (((t_3003225704.data).length == 0)) {
      var correctSizeHEX60gensym581_3003225964 = slotsNeeded_1308622891(32);
      t_3003225704.counter = 0;
      t_3003225704.data = new Array(chckRange(correctSizeHEX60gensym581_3003225964, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym581_3003225964, 0, 2147483647) ; ++i) { t_3003225704.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_3003225969(t_3003225704)) {
      enlarge_3003226226(t_3003225704);
      index_3003225801 = rawGetKnownHC_3003226921(t_3003225704, key_3003225705, hc_3003225794[0]);
      }
      
      index_3003225801 = subInt(-1, index_3003225801);
      rawInsert_3003226662(t_3003225704, t_3003225704, "data", key_3003225705, val_3003225706, hc_3003225794[0], index_3003225801);
      t_3003225704.counter = addInt(t_3003225704.counter, 1);
    }
    

  
}

function hasKey_3003227441(t_3003227444, key_3003227445) {
  var result_3003227446 = false;

    var hc_3003227447 = [0];
    result_3003227446 = (0 <= rawGet_3003222775(t_3003227444, key_3003227445, hc_3003227447, 0));

  return result_3003227446;

}

function contains_3003227435(t_3003227438, key_3003227439) {
  var result_3003227440 = false;

  BeforeRet: {
    result_3003227440 = hasKey_3003227441(t_3003227438, key_3003227439);
    break BeforeRet;
  };

  return result_3003227440;

}

function mustRehash_3003227874(t_3003227876) {
  var result_3003227877 = false;

    if (!((t_3003227876.counter < (t_3003227876.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003227877 = ((mulInt((t_3003227876.data).length, 2) < mulInt(t_3003227876.counter, 3)) || (subInt((t_3003227876.data).length, t_3003227876.counter) < 4));

  return result_3003227877;

}

function rawInsert_3003228567(t_3003228571, data_3003228572, data_3003228572_Idx, key_3003228573, val_3003228574, hc_3003228575, h_3003228576) {
    data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field1 = nimCopy(data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field1, key_3003228573, NTI3019898908);
    data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field2 = nimCopy(null, val_3003228574, NTI3003121672);
    data_3003228572[data_3003228572_Idx][chckIndx(h_3003228576, 0, (data_3003228572[data_3003228572_Idx]).length - 1)].Field0 = hc_3003228575;

  
}

function enlarge_3003228131(t_3003228134) {
    var n_3003228137 = [];
    n_3003228137 = new Array(chckRange(mulInt((t_3003228134.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003228134.data).length, 2), 0, 2147483647) ; ++i) { n_3003228137[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_3003228134.data; t_3003228134.data = n_3003228137; n_3003228137 = Temporary1;    Label2: {
      var i_3003228235 = 0;
      var colontmp__2952790270 = 0;
      colontmp__2952790270 = (n_3003228137).length - 1;
      var res_2952790271 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790271 <= colontmp__2952790270)) break Label4;
            i_3003228235 = res_2952790271;
            var eh_3003228316 = n_3003228137[chckIndx(i_3003228235, 0, (n_3003228137).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003228316)) {
            var j_3003228320 = (eh_3003228316 & (t_3003228134.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003228134.data[chckIndx(j_3003228320, 0, (t_3003228134.data).length - 1)].Field0)) break Label6;
                  j_3003228320 = nextTry_1308622883(j_3003228320, (t_3003228134.data).length - 1);
                }
            };
            rawInsert_3003228567(t_3003228134, t_3003228134, "data", n_3003228137[chckIndx(i_3003228235, 0, (n_3003228137).length - 1)].Field1, n_3003228137[chckIndx(i_3003228235, 0, (n_3003228137).length - 1)].Field2, eh_3003228316, j_3003228320);
            }
            
            res_2952790271 = addInt(res_2952790271, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003228817(t_3003228820, key_3003228821, hc_3003228822) {
  var result_3003228823 = 0;

  BeforeRet: {
    if (((t_3003228820.data).length == 0)) {
    result_3003228823 = -1;
    break BeforeRet;
    }
    
    var h_3003228908 = (hc_3003228822 & (t_3003228820.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003228820.data[chckIndx(h_3003228908, 0, (t_3003228820.data).length - 1)].Field0)) break Label2;
          if (((t_3003228820.data[chckIndx(h_3003228908, 0, (t_3003228820.data).length - 1)].Field0 == hc_3003228822) && HEX3DHEX3D_3019901909(t_3003228820.data[chckIndx(h_3003228908, 0, (t_3003228820.data).length - 1)].Field1, key_3003228821))) {
          result_3003228823 = h_3003228908;
          break BeforeRet;
          }
          
          h_3003228908 = nextTry_1308622883(h_3003228908, (t_3003228820.data).length - 1);
        }
    };
    result_3003228823 = subInt(-1, h_3003228908);
  };

  return result_3003228823;

}

function HEX5BHEX5DHEX3D_3003227606(t_3003227609, key_3003227610, val_3003227611) {
    if (((t_3003227609.data).length == 0)) {
    var correctSizeHEX60gensym590_3003227694 = slotsNeeded_1308622891(32);
    t_3003227609.counter = 0;
    t_3003227609.data = new Array(chckRange(correctSizeHEX60gensym590_3003227694, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym590_3003227694, 0, 2147483647) ; ++i) { t_3003227609.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_3003227699 = [0];
    var index_3003227706 = rawGet_3003222775(t_3003227609, key_3003227610, hc_3003227699, 0);
    if ((0 <= index_3003227706)) {
    t_3003227609.data[chckIndx(index_3003227706, 0, (t_3003227609.data).length - 1)].Field2 = nimCopy(null, val_3003227611, NTI3003121672);
    }
    else {
      if (((t_3003227609.data).length == 0)) {
      var correctSizeHEX60gensym593_3003227869 = slotsNeeded_1308622891(32);
      t_3003227609.counter = 0;
      t_3003227609.data = new Array(chckRange(correctSizeHEX60gensym593_3003227869, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym593_3003227869, 0, 2147483647) ; ++i) { t_3003227609.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_3003227874(t_3003227609)) {
      enlarge_3003228131(t_3003227609);
      index_3003227706 = rawGetKnownHC_3003228817(t_3003227609, key_3003227610, hc_3003227699[0]);
      }
      
      index_3003227706 = subInt(-1, index_3003227706);
      rawInsert_3003228567(t_3003227609, t_3003227609, "data", key_3003227610, val_3003227611, hc_3003227699[0], index_3003227706);
      t_3003227609.counter = addInt(t_3003227609.counter, 1);
    }
    

  
}

function HEX5BHEX5D_3003229339(t_3003229342, key_3003229343) {
  var result_3003229344 = null;
  var result_3003229344_Idx = 0;

    var hcHEX60gensym22_3003229345 = [0];
    var indexHEX60gensym22_3003229352 = rawGet_3003222775(t_3003229342, key_3003229343, hcHEX60gensym22_3003229345, 0);
    if ((0 <= indexHEX60gensym22_3003229352)) {
    result_3003229344 = t_3003229342.data[chckIndx(indexHEX60gensym22_3003229352, 0, (t_3003229342.data).length - 1)]; result_3003229344_Idx = "Field2";
    }
    else {
    raiseKeyError_3019909681(key_3003229343);
    }
    

  return [result_3003229344, result_3003229344_Idx];

}

function del_3003229512(t_3003229515, key_3003229516) {
    var hc_3003229517 = [0];
    var i_3003229524 = rawGet_3003221620(t_3003229515, key_3003229516, hc_3003229517, 0);
    var mskHEX60gensym36_3003229528 = (t_3003229515.data).length - 1;
    if ((0 <= i_3003229524)) {
    t_3003229515.counter = subInt(t_3003229515.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003229535 = i_3003229524;
            var rHEX60gensym36_3003229536 = jHEX60gensym36_3003229535;
            t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field0 = 0;
            t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field1 = nimCopy(t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field2 = nimCopy(null, [], NTI3003122000);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003229524 = (addInt(i_3003229524, 1) & mskHEX60gensym36_3003229528);
                  if (isEmpty_1308622877(t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003229536 = (t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)].Field0 & mskHEX60gensym36_3003229528);
                  if (!(((((rHEX60gensym36_3003229536 <= i_3003229524) && (jHEX60gensym36_3003229535 < rHEX60gensym36_3003229536)) || ((jHEX60gensym36_3003229535 < rHEX60gensym36_3003229536) && (i_3003229524 < jHEX60gensym36_3003229535))) || ((i_3003229524 < jHEX60gensym36_3003229535) && (rHEX60gensym36_3003229536 <= i_3003229524))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003229515.data[chckIndx(jHEX60gensym36_3003229535, 0, (t_3003229515.data).length - 1)] = nimCopy(t_3003229515.data[chckIndx(jHEX60gensym36_3003229535, 0, (t_3003229515.data).length - 1)], t_3003229515.data[chckIndx(i_3003229524, 0, (t_3003229515.data).length - 1)], NTI3003122012);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_3003122483(ctx_3003122484, node_3003122485) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_3003221517 = null;

  BeforeRet: {
    var logQueryHEX60gensym555_3003221519 = (ctx_3003122484.enableLogging || ctx_3003122484.enableQueryLogging);
    if (logQueryHEX60gensym555_3003221519) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym555_3003221519) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122485) || []));
    }
    
    try {
    var key_3003221530 = nimCopy(null, getTypeKey_3003194679(ctx_3003122484, getItem_3003175953(node_3003122485)), NTI3019898908);
    if (contains_3003221607(ctx_3003122484.diagnosticsPerQuery, key_3003221530)) {
    Label3: {
      var id_3003222180 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2952790109 = [];
      colontmp__2952790109 = (Temporary4 = HEX5BHEX5D_3003222052(ctx_3003122484.diagnosticsPerQuery, key_3003221530), Temporary4)[0][Temporary4[1]];
      var i_2952790111 = 0;
      var L_2952790112 = (colontmp__2952790109).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2952790111 < L_2952790112)) break Label6;
            id_3003222180 = colontmp__2952790109[chckIndx(i_2952790111, 0, (colontmp__2952790109).length - 1)];
            del_3003222769(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003222180).queries, key_3003221530);
            i_2952790111 = addInt(i_2952790111, 1);
            if (!(((colontmp__2952790109).length == L_2952790112))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_3003223883 = [];
    var ids_3003223888 = [];
    try {
    Label8: {
      var expr_3003230261 = node_3003122485;
      var pos_3003230262 = 0;
      var _ = pos_3003230262;
      if ((expr_3003230261.kind == 0)) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_3003122485.text);
      result_3003221517 = intType_3087008158();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_3003230261.kind == 3)) {
      result_3003221517 = stringType_3087008160();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 12)) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 11)) {
      if ((len_2986344536(node_3003122485) < 3)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var params_3003230285 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      recordDependency_3003175740(ctx_3003122484, getItem_3003175953(params_3003230285), -1);
      var returnTypeNode_3003230286 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      var paramTypes_3003230291 = [];
      var ok_3003230292 = true;
      Label10: {
        var param_3003230296 = null;
        var i_2952790122 = 0;
        var L_2952790123 = (params_3003230285.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2952790122 < L_2952790123)) break Label12;
              param_3003230296 = params_3003230285.children[chckIndx(i_2952790122, 0, (params_3003230285.children).length - 1)];
              Label13: {
                var paramType_3003230297 = computeType_3003195250(ctx_3003122484, param_3003230296, true);
                if ((paramType_3003230297.kind == 0)) {
                ok_3003230292 = false;
                break Label13;
                }
                
                paramTypes_3003230291.push(paramType_3003230297);;
              };
              i_2952790122 = addInt(i_2952790122, 1);
              if (!(((params_3003230285.children).length == L_2952790123))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_3003230306 = computeType_3003195250(ctx_3003122484, returnTypeNode_3003230286, true);
      if ((returnTypeType_3003230306.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((returnTypeType_3003230306.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_3003230286.id, NTI2181038083);
      ids_3003223888.push(Temporary14);;
      var fmtRes_3003230323 = [mnewString(0)];
      fmtRes_3003230323[0].push.apply(fmtRes_3003230323[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230323, 0, returnTypeType_3003230306, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230323[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var returnTypeValue_3003230333 = computeValue_3003198726(ctx_3003122484, returnTypeNode_3003230286, true);
      if ((returnTypeValue_3003230333.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_3003230333.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_3003230286.id, NTI2181038083);
      ids_3003223888.push(Temporary15);;
      var fmtRes_3003230350 = [mnewString(0)];
      fmtRes_3003230350[0].push.apply(fmtRes_3003230350[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3003230350, 0, returnTypeValue_3003230333, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230350[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_3003230333;
      if (ConstSet67[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
      var returnType_3003230360 = Temporary16.typ;
      result_3003221517 = newFunctionType_3087008162(paramTypes_3003230291, returnType_3003230360);
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 8)) {
      if ((len_2986344536(node_3003122485) == 0)) {
      var Temporary17 = nimCopy(null, node_3003122485.id, NTI2181038083);
      ids_3003223888.push(Temporary17);;
      var fmtRes_3003230373 = mnewString(0);
      fmtRes_3003230373.push.apply(fmtRes_3003230373, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230373, NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var function_3003230378 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var functionType_3003230379 = computeType_3003195250(ctx_3003122484, function_3003230378, true);
      if ((functionType_3003230379.kind == 0)) {
      result_3003221517 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_3003230379.kind == 4))) {
      var Temporary18 = nimCopy(null, function_3003230378.id, NTI2181038083);
      ids_3003223888.push(Temporary18);;
      var fmtRes_3003230396 = [mnewString(0)];
      fmtRes_3003230396[0].push.apply(fmtRes_3003230396[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_3003230324(fmtRes_3003230396, 0, functionType_3003230379, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230396[0], NTI33554449)});;
      result_3003221517 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_3003230406 = subInt(len_2986344536(node_3003122485), 1);
      var Temporary21 = functionType_3003230379;
      if (ConstSet68[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI3087007747)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_3003230379;
        if (ConstSet75[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007747)); }
        var Temporary23 = functionType_3003230379;
        if (ConstSet76[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3087007747)); }
        Temporary20 = HEX3DHEX3D_3087008302((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_3087008177(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_3003230379;
        if (ConstSet77[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3087007747)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_3003230406);      }      var isValidOpenAnyCall_3003230416 = Temporary19;
        var Temporary27 = functionType_3003230379;
        if (ConstSet78[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007747)); }
        if (!!((numArgs_3003230406 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_3003230416);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_3003122485.id, NTI2181038083);
      ids_3003223888.push(Temporary28);;
      var fmtRes_3003230428 = [mnewString(0)];
      fmtRes_3003230428[0].push.apply(fmtRes_3003230428[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_3003230379;
      if (ConstSet79[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI3087007747)); }
      formatValue_2332033380(fmtRes_3003230428, 0, (Temporary29.paramTypes).length, []);
      fmtRes_3003230428[0].push.apply(fmtRes_3003230428[0], [32,103,111,116,32]);;
      formatValue_2332033380(fmtRes_3003230428, 0, numArgs_3003230406, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230428[0], NTI33554449)});;
      result_3003221517 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_3003230446 = true;
      Label30: {
        var i_3003230451 = 0;
        var res_2952790127 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2952790127 <= numArgs_3003230406)) break Label32;
              i_3003230451 = res_2952790127;
              Label33: {
                var argType_3003230452 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, i_3003230451), true);
                if ((argType_3003230452.kind == 0)) {
                allArgsOk_3003230446 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_3003230416) Temporary34 = false; else {                    var Temporary35 = functionType_3003230379;
                    if (ConstSet80[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI3087007747)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_3003230451);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_3003230379;
                  if (ConstSet81[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3087007747)); }
                if (!(HEX3DHEX3D_3087008302(argType_3003230452, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_3003230451, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_2986344532(node_3003122485, i_3003230451).id, NTI2181038083);
                ids_3003223888.push(Temporary38);;
                var fmtRes_3003230468 = [mnewString(0)];
                fmtRes_3003230468[0].push.apply(fmtRes_3003230468[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2332033380(fmtRes_3003230468, 0, i_3003230451, []);
                fmtRes_3003230468[0].push.apply(fmtRes_3003230468[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_3003230379;
                if (ConstSet82[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI3087007747)); }
                formatValue_3003230324(fmtRes_3003230468, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_3003230451, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_3003230468[0].push.apply(fmtRes_3003230468[0], [32,103,111,116,32]);;
                formatValue_3003230324(fmtRes_3003230468, 0, argType_3003230452, []);
                diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230468[0], NTI33554449)});;
                allArgsOk_3003230446 = false;
                }
                
              };
              res_2952790127 = addInt(res_2952790127, 1);
            }
        };
      };
      if (!(allArgsOk_3003230446)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_3003230379;
      if (ConstSet83[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI3087007747)); }
      result_3003221517 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 4)) {
      if ((len_2986344536(node_3003122485) == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      result_3003221517 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 5)) {
      if ((len_2986344536(node_3003122485) < 1)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNode_3003230496 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var typ_3003230497 = voidType_3087008156();
      if (!((typeNode_3003230496.kind == 0))) {
      var typeNodeType_3003230502 = computeType_3003195250(ctx_3003122484, typeNode_3003230496, true);
      if ((typeNodeType_3003230502.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3003230502.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_3003230496.id, NTI2181038083);
      ids_3003223888.push(Temporary42);;
      var fmtRes_3003230519 = [mnewString(0)];
      fmtRes_3003230519[0].push.apply(fmtRes_3003230519[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230519, 0, typeNodeType_3003230502, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230519[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNodeValue_3003230529 = computeValue_3003198726(ctx_3003122484, typeNode_3003230496, true);
      if ((typeNodeValue_3003230529.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3003230529.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_3003230496.id, NTI2181038083);
      ids_3003223888.push(Temporary43);;
      var fmtRes_3003230546 = [mnewString(0)];
      fmtRes_3003230546[0].push.apply(fmtRes_3003230546[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3003230546, 0, typeNodeValue_3003230529, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230546[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_3003230529;
      if (ConstSet84[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI3087007750)); }
      typ_3003230497 = Temporary44.typ;
      }
      
      if ((2 <= len_2986344536(node_3003122485))) {
      var valueNode_3003230556 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      if (!((valueNode_3003230556.kind == 0))) {
      var valueNodeType_3003230561 = computeType_3003195250(ctx_3003122484, valueNode_3003230556, true);
      if ((valueNodeType_3003230561.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if ((typ_3003230497.kind == 1)) {
      typ_3003230497 = valueNodeType_3003230561;
      }
      
      if (!(HEX3DHEX3D_3087008302(valueNodeType_3003230561, typ_3003230497))) {
      var Temporary45 = nimCopy(null, valueNode_3003230556.id, NTI2181038083);
      ids_3003223888.push(Temporary45);;
      var fmtRes_3003230578 = [mnewString(0)];
      fmtRes_3003230578[0].push.apply(fmtRes_3003230578[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3003230324(fmtRes_3003230578, 0, typ_3003230497, []);
      fmtRes_3003230578[0].push.apply(fmtRes_3003230578[0], [44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230578, 0, valueNodeType_3003230561, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230578[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3003221517 = typ_3003230497;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 6)) {
      if ((len_2986344536(node_3003122485) < 1)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNode_3003230597 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var typ_3003230598 = voidType_3087008156();
      if (!((typeNode_3003230597.kind == 0))) {
      var typeNodeType_3003230603 = computeType_3003195250(ctx_3003122484, typeNode_3003230597, true);
      if ((typeNodeType_3003230603.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeType_3003230603.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_3003230597.id, NTI2181038083);
      ids_3003223888.push(Temporary46);;
      var fmtRes_3003230620 = [mnewString(0)];
      fmtRes_3003230620[0].push.apply(fmtRes_3003230620[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230620, 0, typeNodeType_3003230603, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230620[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var typeNodeValue_3003230630 = computeValue_3003198726(ctx_3003122484, typeNode_3003230597, true);
      if ((typeNodeValue_3003230630.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_3003230630.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_3003230597.id, NTI2181038083);
      ids_3003223888.push(Temporary47);;
      var fmtRes_3003230647 = [mnewString(0)];
      fmtRes_3003230647[0].push.apply(fmtRes_3003230647[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3137340831(fmtRes_3003230647, 0, typeNodeValue_3003230630, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230647[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_3003230630;
      if (ConstSet85[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI3087007750)); }
      typ_3003230598 = Temporary48.typ;
      }
      
      if ((2 <= len_2986344536(node_3003122485))) {
      var valueNode_3003230657 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      if (!((valueNode_3003230657.kind == 0))) {
      var valueNodeType_3003230662 = computeType_3003195250(ctx_3003122484, valueNode_3003230657, true);
      if ((valueNodeType_3003230662.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if ((typ_3003230598.kind == 1)) {
      typ_3003230598 = valueNodeType_3003230662;
      }
      
      if (!(HEX3DHEX3D_3087008302(valueNodeType_3003230662, typ_3003230598))) {
      var Temporary49 = nimCopy(null, valueNode_3003230657.id, NTI2181038083);
      ids_3003223888.push(Temporary49);;
      var fmtRes_3003230679 = [mnewString(0)];
      fmtRes_3003230679[0].push.apply(fmtRes_3003230679[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_3003230324(fmtRes_3003230679, 0, typ_3003230598, []);
      fmtRes_3003230679[0].push.apply(fmtRes_3003230679[0], [44,32,103,111,116,32]);;
      formatValue_3003230324(fmtRes_3003230679, 0, valueNodeType_3003230662, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003230679[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_3003221517 = typ_3003230598;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 1)) {
      var id_3003230698 = nimCopy(null, node_3003122485.reff, NTI2181038083);
      var symbols_3003230699 = computeSymbols_3003205356(ctx_3003122484, node_3003122485, true);
      if (contains_3003230776(symbols_3003230699, id_3003230698)) {
      var symbol_3003231303 = (Temporary50 = HEX5BHEX5D_3003231031(symbols_3003230699, id_3003230698), Temporary50)[0][Temporary50[1]];
      result_3003221517 = computeSymbolType_3003208828(ctx_3003122484, symbol_3003231303, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_3003122485.id, NTI2181038083);
      ids_3003223888.push(Temporary51);;
      var fmtRes_3003231312 = [mnewString(0)];
      fmtRes_3003231312[0].push.apply(fmtRes_3003231312[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3019899100(fmtRes_3003231312, 0, id_3003230698, []);
      fmtRes_3003231312[0].push.apply(fmtRes_3003231312[0], [39]);;
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231312[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 7)) {
      if ((len_2986344536(node_3003122485) == 0)) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      
      var lastType_3003231326 = null;
      Label52: {
        var child_3003231330 = null;
        var i_2952790130 = 0;
        var L_2952790131 = (node_3003122485.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2952790130 < L_2952790131)) break Label54;
              child_3003231330 = node_3003122485.children[chckIndx(i_2952790130, 0, (node_3003122485.children).length - 1)];
              lastType_3003231326 = computeType_3003195250(ctx_3003122484, child_3003231330, true);
              if ((lastType_3003231326.kind == 0)) {
              result_3003221517 = errorType_3087008120();
              break BeforeRet;
              }
              
              i_2952790130 = addInt(i_2952790130, 1);
              if (!(((node_3003122485.children).length == L_2952790131))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3003221517 = lastType_3003231326;
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 9)) {
      if ((len_2986344536(node_3003122485) < 2)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var ok_3003231339 = true;
      var commonType_3003231342 = [none_3003195231()];
      var index_3003231343 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_3003231343, 1) < len_2986344536(node_3003122485))) break Label56;
            Label57: {
              try {
              var condition_3003231348 = HEX5BHEX5D_2986344532(node_3003122485, index_3003231343);
              var trueCase_3003231349 = HEX5BHEX5D_2986344532(node_3003122485, addInt(index_3003231343, 1));
              var conditionType_3003231350 = computeType_3003195250(ctx_3003122484, condition_3003231348, true);
              if ((conditionType_3003231350.kind == 0)) {
              ok_3003231339 = false;
              }
              else {
              if (!((conditionType_3003231350.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_3003231348.id, NTI2181038083);
              ids_3003223888.push(Temporary59);;
              var fmtRes_3003231367 = [mnewString(0)];
              fmtRes_3003231367[0].push.apply(fmtRes_3003231367[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_3003230324(fmtRes_3003231367, 0, conditionType_3003231350, []);
              diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231367[0], NTI33554449)});;
              ok_3003231339 = false;
              }
              }
              var trueCaseType_3003231377 = computeType_3003195250(ctx_3003122484, trueCase_3003231349, true);
              if ((trueCaseType_3003231377.kind == 0)) {
              ok_3003231339 = false;
              break Label57;
              }
              
              if ((isNone_3003231386(commonType_3003231342[0]) || HEX3DHEX3D_3087008302(trueCaseType_3003231377, (Temporary60 = get_3003231429(commonType_3003231342[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(trueCaseType_3003231377), NTI3003164608);
              }
              else {
                commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(voidType_3087008156()), NTI3003164608);
              }
              
              } finally {
              index_3003231343 = addInt(index_3003231343, 2);
              }
            };
          }
      };
      if (!((modInt(len_2986344536(node_3003122485), 2) == 0))) {
      var falseCaseType_3003231456 = computeType_3003195250(ctx_3003122484, last_2986344706(node_3003122485), true);
      if ((falseCaseType_3003231456.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if ((isNone_3003231386(commonType_3003231342[0]) || HEX3DHEX3D_3087008302(falseCaseType_3003231456, (Temporary61 = get_3003231429(commonType_3003231342[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(falseCaseType_3003231456), NTI3003164608);
      }
      else {
        commonType_3003231342[0] = nimCopy(commonType_3003231342[0], some_3003195218(voidType_3087008156()), NTI3003164608);
      }
      
      }
      
      if (!(ok_3003231339)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      result_3003221517 = get_3003231547(commonType_3003231342[0], voidType_3087008156());
      break BeforeRet;
      }
      else {
      if ((expr_3003230261.kind == 10)) {
      if ((len_2986344536(node_3003122485) < 2)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var ok_3003231568 = true;
      var conditionType_3003231569 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, 0), true);
      if ((conditionType_3003231569.kind == 0)) {
      ok_3003231568 = false;
      }
      else {
      if (!((conditionType_3003231569.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_2986344532(node_3003122485, 0).id, NTI2181038083);
      ids_3003223888.push(Temporary62);;
      var fmtRes_3003231586 = [mnewString(0)];
      fmtRes_3003231586[0].push.apply(fmtRes_3003231586[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_3003230324(fmtRes_3003231586, 0, conditionType_3003231569, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231586[0], NTI33554449)});;
      ok_3003231568 = false;
      }
      }
      var bodyType_3003231596 = computeType_3003195250(ctx_3003122484, HEX5BHEX5D_2986344532(node_3003122485, 1), true);
      if ((bodyType_3003231596.kind == 0)) {
      ok_3003231568 = false;
      }
      
      if (ok_3003231568) {
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
        result_3003221517 = errorType_3087008120();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_3003230261.kind == 13)) {
      if ((len_2986344536(node_3003122485) < 2)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var target_3003231605 = HEX5BHEX5D_2986344532(node_3003122485, 0);
      var value_3003231606 = HEX5BHEX5D_2986344532(node_3003122485, 1);
      var targetType_3003231607 = computeType_3003195250(ctx_3003122484, target_3003231605, true);
      if ((targetType_3003231607.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      var valueType_3003231612 = computeType_3003195250(ctx_3003122484, value_3003231606, true);
      if ((valueType_3003231612.kind == 0)) {
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3087008302(targetType_3003231607, valueType_3003231612))) {
      var Temporary63 = nimCopy(null, value_3003231606.id, NTI2181038083);
      ids_3003223888.push(Temporary63);;
      var fmtRes_3003231625 = [mnewString(0)];
      fmtRes_3003231625[0].push.apply(fmtRes_3003231625[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_3003230324(fmtRes_3003231625, 0, valueType_3003231612, []);
      fmtRes_3003231625[0].push.apply(fmtRes_3003231625[0], [32,116,111,32]);;
      formatValue_3003230324(fmtRes_3003231625, 0, targetType_3003231607, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231625[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
        var oHEX60gensym687_3003231642 = computeSymbol_3003201856(ctx_3003122484, target_3003231605, true);
        if (!isSome_3087009345(oHEX60gensym687_3003231642)) Temporary64 = false; else {          var sym_3003231688 = get_3087009365(oHEX60gensym687_3003231642);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_3003231688.kind == 1)) {
      var Temporary65 = nimCopy(null, target_3003231605.id, NTI2181038083);
      ids_3003223888.push(Temporary65);;
      var fmtRes_3003231701 = [mnewString(0)];
      fmtRes_3003231701[0].push.apply(fmtRes_3003231701[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_3003231702(fmtRes_3003231701, 0, sym_3003231688, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231701[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      if (!((sym_3003231688.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,52,52,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_3003231688;
        if (ConstSet109[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI3087007753)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_3003231605.id, NTI2181038083);
      ids_3003223888.push(Temporary67);;
      var fmtRes_3003231732 = [mnewString(0)];
      fmtRes_3003231732[0].push.apply(fmtRes_3003231732[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_3003231702(fmtRes_3003231732, 0, sym_3003231688, []);
      diagnostics_3003223883.push({message: nimCopy(null, fmtRes_3003231732[0], NTI33554449)});;
      result_3003221517 = errorType_3087008120();
      break BeforeRet;
      }
      
      }
      
      result_3003221517 = voidType_3087008156();
      break BeforeRet;
      }
      else {
        result_3003221517 = errorType_3087008120();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_3003223883).length)) {
    HEX5BHEX5DHEX3D_3003223956(ctx_3003122484.diagnosticsPerQuery, key_3003221530, ids_3003223888);
    Label68: {
      var i_3003225540 = 0;
      var colontmp__2952790115 = 0;
      colontmp__2952790115 = (ids_3003223888).length - 1;
      var res_2952790116 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2952790116 <= colontmp__2952790115)) break Label70;
            i_3003225540 = res_2952790116;
            var id_3003225541 = nimCopy(null, ids_3003223888[chckIndx(i_3003225540, 0, (ids_3003223888).length - 1)], NTI2181038083);
            var diag_3003225542 = nimCopy(null, diagnostics_3003223883[chckIndx(i_3003225540, 0, (diagnostics_3003223883).length - 1)], NTI3003121667);
            if (!(contains_3003225619(ctx_3003122484.diagnosticsPerNode, id_3003225541))) {
            HEX5BHEX5DHEX3D_3003225701(ctx_3003122484.diagnosticsPerNode, id_3003225541, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_3003227435(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003225541).queries, key_3003221530))) {
            HEX5BHEX5DHEX3D_3003227606(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003225541).queries, key_3003221530, []);
            }
            
            var Temporary72 = nimCopy(null, diag_3003225542, NTI3003121667);
            (Temporary71 = HEX5BHEX5D_3003229339(HEX5BHEX5D_3003222261(ctx_3003122484.diagnosticsPerNode, id_3003225541).queries, key_3003221530), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2952790116 = addInt(res_2952790116, 1);
          }
      };
    };
    }
    else {
    del_3003229512(ctx_3003122484.diagnosticsPerQuery, key_3003221530);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym555_3003221519 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008180(result_3003221517) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym555_3003221519) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003221517;

}

function getOrDefault_3003124073(t_3003124076, key_3003124077, default_3003124078) {
    var Temporary1;

  var result_3003124079 = null;

    var hcHEX60gensym128_3003124082 = [0];
    var indexHEX60gensym128_3003124441 = rawGet_3003124083(t_3003124076, key_3003124077, hcHEX60gensym128_3003124082, 0);
    if ((0 <= indexHEX60gensym128_3003124441)) {
    Temporary1 = t_3003124076.data[chckIndx(indexHEX60gensym128_3003124441, 0, (t_3003124076.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003124078;
    }
    
    result_3003124079 = Temporary1;

  return result_3003124079;

}

function newDoublyLinkedNode_3003124566(value_3003124568) {
  var result_3003124569 = null;

    result_3003124569 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_3003124569.value = nimCopy(result_3003124569.value, value_3003124568, NTI3003122029);

  return result_3003124569;

}

function mustRehash_3003124916(t_3003124918) {
  var result_3003124919 = false;

    if (!((t_3003124918.counter < (t_3003124918.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003124919 = ((mulInt((t_3003124918.data).length, 2) < mulInt(t_3003124918.counter, 3)) || (subInt((t_3003124918.data).length, t_3003124918.counter) < 4));

  return result_3003124919;

}

function rawInsert_3003125609(t_3003125613, data_3003125614, data_3003125614_Idx, key_3003125615, val_3003125616, hc_3003125617, h_3003125618) {
    data_3003125614[data_3003125614_Idx][chckIndx(h_3003125618, 0, (data_3003125614[data_3003125614_Idx]).length - 1)].Field1 = key_3003125615;
    data_3003125614[data_3003125614_Idx][chckIndx(h_3003125618, 0, (data_3003125614[data_3003125614_Idx]).length - 1)].Field2 = val_3003125616;
    data_3003125614[data_3003125614_Idx][chckIndx(h_3003125618, 0, (data_3003125614[data_3003125614_Idx]).length - 1)].Field0 = hc_3003125617;

  
}

function enlarge_3003125173(t_3003125176) {
    var n_3003125179 = [];
    n_3003125179 = new Array(chckRange(mulInt((t_3003125176.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003125176.data).length, 2), 0, 2147483647) ; ++i) { n_3003125179[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003125176.data; t_3003125176.data = n_3003125179; n_3003125179 = Temporary1;    Label2: {
      var i_3003125277 = 0;
      var colontmp__2952790278 = 0;
      colontmp__2952790278 = (n_3003125179).length - 1;
      var res_2952790279 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790279 <= colontmp__2952790278)) break Label4;
            i_3003125277 = res_2952790279;
            var eh_3003125358 = n_3003125179[chckIndx(i_3003125277, 0, (n_3003125179).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003125358)) {
            var j_3003125362 = (eh_3003125358 & (t_3003125176.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003125176.data[chckIndx(j_3003125362, 0, (t_3003125176.data).length - 1)].Field0)) break Label6;
                  j_3003125362 = nextTry_1308622883(j_3003125362, (t_3003125176.data).length - 1);
                }
            };
            rawInsert_3003125609(t_3003125176, t_3003125176, "data", n_3003125179[chckIndx(i_3003125277, 0, (n_3003125179).length - 1)].Field1, n_3003125179[chckIndx(i_3003125277, 0, (n_3003125179).length - 1)].Field2, eh_3003125358, j_3003125362);
            }
            
            res_2952790279 = addInt(res_2952790279, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003125859(t_3003125862, key_3003125863, hc_3003125864) {
  var result_3003125865 = 0;

  BeforeRet: {
    if (((t_3003125862.data).length == 0)) {
    result_3003125865 = -1;
    break BeforeRet;
    }
    
    var h_3003125950 = (hc_3003125864 & (t_3003125862.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003125862.data[chckIndx(h_3003125950, 0, (t_3003125862.data).length - 1)].Field0)) break Label2;
          if (((t_3003125862.data[chckIndx(h_3003125950, 0, (t_3003125862.data).length - 1)].Field0 == hc_3003125864) && (t_3003125862.data[chckIndx(h_3003125950, 0, (t_3003125862.data).length - 1)].Field1 == key_3003125863))) {
          result_3003125865 = h_3003125950;
          break BeforeRet;
          }
          
          h_3003125950 = nextTry_1308622883(h_3003125950, (t_3003125862.data).length - 1);
        }
    };
    result_3003125865 = subInt(-1, h_3003125950);
  };

  return result_3003125865;

}

function HEX5BHEX5DHEX3D_3003124648(t_3003124651, key_3003124652, val_3003124653) {
    if (((t_3003124651.data).length == 0)) {
    var correctSizeHEX60gensym133_3003124736 = slotsNeeded_1308622891(32);
    t_3003124651.counter = 0;
    t_3003124651.data = new Array(chckRange(correctSizeHEX60gensym133_3003124736, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym133_3003124736, 0, 2147483647) ; ++i) { t_3003124651.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003124741 = [0];
    var index_3003124748 = rawGet_3003124083(t_3003124651, key_3003124652, hc_3003124741, 0);
    if ((0 <= index_3003124748)) {
    t_3003124651.data[chckIndx(index_3003124748, 0, (t_3003124651.data).length - 1)].Field2 = val_3003124653;
    }
    else {
      if (((t_3003124651.data).length == 0)) {
      var correctSizeHEX60gensym136_3003124911 = slotsNeeded_1308622891(32);
      t_3003124651.counter = 0;
      t_3003124651.data = new Array(chckRange(correctSizeHEX60gensym136_3003124911, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym136_3003124911, 0, 2147483647) ; ++i) { t_3003124651.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003124916(t_3003124651)) {
      enlarge_3003125173(t_3003124651);
      index_3003124748 = rawGetKnownHC_3003125859(t_3003124651, key_3003124652, hc_3003124741[0]);
      }
      
      index_3003124748 = subInt(-1, index_3003124748);
      rawInsert_3003125609(t_3003124651, t_3003124651, "data", key_3003124652, val_3003124653, hc_3003124741[0], index_3003124748);
      t_3003124651.counter = addInt(t_3003124651.counter, 1);
    }
    

  
}

function rawGet_3003126508(t_3003126511, key_3003126512, hc_3003126513, hc_3003126513_Idx) {
  var result_3003126514 = 0;

  BeforeRet: {
    hc_3003126513[hc_3003126513_Idx] = hash_2986346803(key_3003126512);
    if ((hc_3003126513[hc_3003126513_Idx] == 0)) {
    hc_3003126513[hc_3003126513_Idx] = 314159265;
    }
    
    if (((t_3003126511.data).length == 0)) {
    result_3003126514 = -1;
    break BeforeRet;
    }
    
    var h_3003126600 = (hc_3003126513[hc_3003126513_Idx] & (t_3003126511.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003126511.data[chckIndx(h_3003126600, 0, (t_3003126511.data).length - 1)].Field0)) break Label2;
          if (((t_3003126511.data[chckIndx(h_3003126600, 0, (t_3003126511.data).length - 1)].Field0 == hc_3003126513[hc_3003126513_Idx]) && (t_3003126511.data[chckIndx(h_3003126600, 0, (t_3003126511.data).length - 1)].Field1 == key_3003126512))) {
          result_3003126514 = h_3003126600;
          break BeforeRet;
          }
          
          h_3003126600 = nextTry_1828716586(h_3003126600, (t_3003126511.data).length - 1);
        }
    };
    result_3003126514 = subInt(-1, h_3003126600);
  };

  return result_3003126514;

}

function exclImpl_3003126502(s_3003126504, key_3003126505) {
          var Temporary5;

  var result_3003126506 = false;

  BeforeRet: {
    var hc_3003126507 = [0];
    var i_3003126866 = rawGet_3003126508(s_3003126504, key_3003126505, hc_3003126507, 0);
    var msk_3003126870 = (s_3003126504.data).length - 1;
    result_3003126506 = true;
    if ((0 <= i_3003126866)) {
    result_3003126506 = false;
    s_3003126504.counter = subInt(s_3003126504.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003126876 = i_3003126866;
          var r_3003126877 = j_3003126876;
          s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field0 = 0;
          s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003126866 = (addInt(i_3003126866, 1) & msk_3003126870);
                if (isEmpty_1828716580(s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003126877 = (s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)].Field0 & msk_3003126870);
                if (!(((((r_3003126877 <= i_3003126866) && (j_3003126876 < r_3003126877)) || ((j_3003126876 < r_3003126877) && (i_3003126866 < j_3003126876))) || ((i_3003126866 < j_3003126876) && (r_3003126877 <= i_3003126866))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)];
          s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)] = genericReset(s_3003126504.data[chckIndx(i_3003126866, 0, (s_3003126504.data).length - 1)], NTI3003122085);
          s_3003126504.data[chckIndx(j_3003126876, 0, (s_3003126504.data).length - 1)] = nimCopy(s_3003126504.data[chckIndx(j_3003126876, 0, (s_3003126504.data).length - 1)], Temporary5, NTI3003122085);
        }
    };
    }
    
  };

  return result_3003126506;

}

function excl_3003126487(s_3003126489, key_3003126490) {
    var _ = exclImpl_3003126502(s_3003126489, key_3003126490);

  
}

function len_3003127621(t_3003127624) {
  var result_3003127625 = 0;

    result_3003127625 = t_3003127624.counter;

  return result_3003127625;

}

function len_3003127538(cache_3003127541) {
  var result_3003127542 = 0;

    result_3003127542 = len_3003127621(cache_3003127541.table);

  return result_3003127542;

}

function mustRehash_3003127762(t_3003127764) {
  var result_3003127765 = false;

    if (!((t_3003127764.counter < (t_3003127764.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003127765 = ((mulInt((t_3003127764.data).length, 2) < mulInt(t_3003127764.counter, 3)) || (subInt((t_3003127764.data).length, t_3003127764.counter) < 4));

  return result_3003127765;

}

function rawGetKnownHC_3003128368(t_3003128371, key_3003128372, hc_3003128373) {
  var result_3003128374 = 0;

  BeforeRet: {
    if (((t_3003128371.data).length == 0)) {
    result_3003128374 = -1;
    break BeforeRet;
    }
    
    var h_3003128459 = (hc_3003128373 & (t_3003128371.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003128371.data[chckIndx(h_3003128459, 0, (t_3003128371.data).length - 1)].Field0)) break Label2;
          if (((t_3003128371.data[chckIndx(h_3003128459, 0, (t_3003128371.data).length - 1)].Field0 == hc_3003128373) && (t_3003128371.data[chckIndx(h_3003128459, 0, (t_3003128371.data).length - 1)].Field1 == key_3003128372))) {
          result_3003128374 = h_3003128459;
          break BeforeRet;
          }
          
          h_3003128459 = nextTry_1828716586(h_3003128459, (t_3003128371.data).length - 1);
        }
    };
    result_3003128374 = subInt(-1, h_3003128459);
  };

  return result_3003128374;

}

function rawInsert_3003128872(s_3003128874, data_3003128875, data_3003128875_Idx, key_3003128876, hc_3003128877, h_3003128878) {
    if (((data_3003128875[data_3003128875_Idx]).length == 0)) {
    var correctSizeHEX60gensym155_3003128961 = slotsNeeded_1828716594(64);
    s_3003128874.counter = 0;
    s_3003128874.data = new Array(chckRange(correctSizeHEX60gensym155_3003128961, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym155_3003128961, 0, 2147483647) ; ++i) { s_3003128874.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003128875[data_3003128875_Idx][chckIndx(h_3003128878, 0, (data_3003128875[data_3003128875_Idx]).length - 1)].Field1 = key_3003128876;
    data_3003128875[data_3003128875_Idx][chckIndx(h_3003128878, 0, (data_3003128875[data_3003128875_Idx]).length - 1)].Field0 = hc_3003128877;

  
}

function enlarge_3003128025(s_3003128027) {
    var n_3003128029 = [];
    n_3003128029 = new Array(chckRange(mulInt((s_3003128027.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003128027.data).length, 2), 0, 2147483647) ; ++i) { n_3003128029[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003128027.data; s_3003128027.data = n_3003128029; n_3003128029 = Temporary1;    Label2: {
      var i_3003128127 = 0;
      var colontmp__2952790287 = 0;
      colontmp__2952790287 = (n_3003128029).length - 1;
      var res_2952790288 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790288 <= colontmp__2952790287)) break Label4;
            i_3003128127 = res_2952790288;
            if (isFilled_1828716583(n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field0)) {
            var j_3003128707 = subInt(-1, rawGetKnownHC_3003128368(s_3003128027, n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field1, n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field0));
            rawInsert_3003128872(s_3003128027, s_3003128027, "data", n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field1, n_3003128029[chckIndx(i_3003128127, 0, (n_3003128029).length - 1)].Field0, j_3003128707);
            }
            
            res_2952790288 = addInt(res_2952790288, 1);
          }
      };
    };

  
}

function incl_3003127646(s_3003127648, key_3003127649) {
    if (((s_3003127648.data).length == 0)) {
    var correctSizeHEX60gensym148_3003127732 = slotsNeeded_1828716594(64);
    s_3003127648.counter = 0;
    s_3003127648.data = new Array(chckRange(correctSizeHEX60gensym148_3003127732, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_3003127732, 0, 2147483647) ; ++i) { s_3003127648.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003127747 = [0];
    var index_3003127761 = rawGet_3003126508(s_3003127648, key_3003127649, hc_3003127747, 0);
    if ((index_3003127761 < 0)) {
    if (mustRehash_3003127762(s_3003127648)) {
    enlarge_3003128025(s_3003127648);
    index_3003127761 = rawGetKnownHC_3003128368(s_3003127648, key_3003127649, hc_3003127747[0]);
    }
    
    rawInsert_3003128872(s_3003127648, s_3003127648, "data", key_3003127649, hc_3003127747[0], subInt(-1, index_3003127761));
    s_3003127648.counter = addInt(s_3003127648.counter, 1);
    }
    

  
}

function del_3003129228(t_3003129231, key_3003129232) {
    var hc_3003129233 = [0];
    var i_3003129240 = rawGet_3003124083(t_3003129231, key_3003129232, hc_3003129233, 0);
    var mskHEX60gensym36_3003129244 = (t_3003129231.data).length - 1;
    if ((0 <= i_3003129240)) {
    t_3003129231.counter = subInt(t_3003129231.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003129251 = i_3003129240;
            var rHEX60gensym36_3003129252 = jHEX60gensym36_3003129251;
            t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field0 = 0;
            t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field1 = null;
            t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003129240 = (addInt(i_3003129240, 1) & mskHEX60gensym36_3003129244);
                  if (isEmpty_1308622877(t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003129252 = (t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)].Field0 & mskHEX60gensym36_3003129244);
                  if (!(((((rHEX60gensym36_3003129252 <= i_3003129240) && (jHEX60gensym36_3003129251 < rHEX60gensym36_3003129252)) || ((jHEX60gensym36_3003129251 < rHEX60gensym36_3003129252) && (i_3003129240 < jHEX60gensym36_3003129251))) || ((i_3003129240 < jHEX60gensym36_3003129251) && (rHEX60gensym36_3003129252 <= i_3003129240))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003129231.data[chckIndx(jHEX60gensym36_3003129251, 0, (t_3003129231.data).length - 1)] = nimCopy(t_3003129231.data[chckIndx(jHEX60gensym36_3003129251, 0, (t_3003129231.data).length - 1)], t_3003129231.data[chckIndx(i_3003129240, 0, (t_3003129231.data).length - 1)], NTI3003122065);
          }
      };
    };
    }
    

  
}

function resize_3003127456(cache_3003127459) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003127459.capacity < len_3003127538(cache_3003127459))) break Label2;
          var t_3003127626 = cache_3003127459.list.tail;
          if (cache_3003127459.recordRemovedKeys) {
          incl_3003127646(cache_3003127459.removedKeys, t_3003127626.value.key);
          }
          
          del_3003129228(cache_3003127459.table, t_3003127626.value.key);
          remove_3003129987(cache_3003127459.list, t_3003127626);
        }
    };

  
}

function addNewNode_3003124558(cache_3003124561, key_3003124562, val_3003124563) {
    var node_3003124584 = newDoublyLinkedNode_3003124566({key: key_3003124562, val: val_3003124563});
    HEX5BHEX5DHEX3D_3003124648(cache_3003124561.table, key_3003124562, node_3003124584);
    prepend_3003126259(cache_3003124561.list, node_3003124584);
    if (cache_3003124561.recordRemovedKeys) {
    excl_3003126487(cache_3003124561.removedKeys, key_3003124562);
    }
    
    resize_3003127456(cache_3003124561);

  
}

function HEX5BHEX5DHEX3D_3003123978(cache_3003123981, key_3003123982, val_3003123983) {
    var node_3003124531 = getOrDefault_3003124073(cache_3003123981.table, key_3003123982, null);
    if ((node_3003124531 == null)) {
    addNewNode_3003124558(cache_3003123981, key_3003123982, val_3003123983);
    }
    else {
      node_3003124531.value.val = val_3003123983;
      remove_3003129987(cache_3003123981.list, node_3003124531);
      prepend_3003126259(cache_3003123981.list, node_3003124531);
    }
    

  
}

function HEX26_3087008353(x_3087008355, y_3087008356) {
  var result_3087008357 = [];

    result_3087008357 = new Array(chckRange(addInt((x_3087008355).length, (y_3087008356).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3087008355).length, (y_3087008356).length), 0, 2147483647) ; ++i) { result_3087008357[i] = 0; }    Label1: {
      var i_3087008375 = 0;
      var colontmp__2952790299 = 0;
      colontmp__2952790299 = subInt((x_3087008355).length, 1);
      var res_2952790300 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790300 <= colontmp__2952790299)) break Label3;
            i_3087008375 = res_2952790300;
            result_3087008357[chckIndx(i_3087008375, 0, (result_3087008357).length - 1)] = x_3087008355[chckIndx(i_3087008375, 0, (x_3087008355).length - 1)];
            res_2952790300 = addInt(res_2952790300, 1);
          }
      };
    };
    Label4: {
      var i_3087008383 = 0;
      var colontmp__2952790303 = 0;
      colontmp__2952790303 = subInt((y_3087008356).length, 1);
      var res_2952790304 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2952790304 <= colontmp__2952790303)) break Label6;
            i_3087008383 = res_2952790304;
            result_3087008357[chckIndx(addInt(i_3087008383, (x_3087008355).length), 0, (result_3087008357).length - 1)] = y_3087008356[chckIndx(i_3087008383, 0, (y_3087008356).length - 1)];
            res_2952790304 = addInt(res_2952790304, 1);
          }
      };
    };

  return result_3087008357;

}

function add_3087008391(x_3087008393, x_3087008393_Idx, y_3087008394) {
    var Temporary1;

    var xl_3087008398 = (x_3087008393[x_3087008393_Idx]).length;
    if (x_3087008393[x_3087008393_Idx].length < (Temporary1 = chckRange(addInt(xl_3087008398, (y_3087008394).length), 0, 2147483647), Temporary1)) { for (var i = x_3087008393[x_3087008393_Idx].length ; i < Temporary1 ; ++i) x_3087008393[x_3087008393_Idx].push(0); }
               else { x_3087008393[x_3087008393_Idx].length = Temporary1; };
    Label2: {
      var i_3087008413 = 0;
      var colontmp__2952790307 = 0;
      colontmp__2952790307 = (y_3087008394).length - 1;
      var res_2952790308 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790308 <= colontmp__2952790307)) break Label4;
            i_3087008413 = res_2952790308;
            x_3087008393[x_3087008393_Idx][chckIndx(addInt(xl_3087008398, i_3087008413), 0, (x_3087008393[x_3087008393_Idx]).length - 1)] = y_3087008394[chckIndx(i_3087008413, 0, (y_3087008394).length - 1)];
            res_2952790308 = addInt(res_2952790308, 1);
          }
      };
    };

  
}

function fingerprint_3087008346(typ_3087008347) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3087008348 = [[]];

    switch (typ_3087008347.kind) {
    case 4:
      var Temporary1 = typ_3087008347;
      if (ConstSet110[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007747)); }
      result_3087008348[0] = nimCopy(null, HEX26_3087008353([typ_3087008347.kind], fingerprint_3087008346(Temporary1.returnType)), NTI3087008199);
      Label2: {
        var param_3087008390 = null;
        var colontmp__2952790294 = [];
        var Temporary3 = typ_3087008347;
        if (ConstSet111[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
        colontmp__2952790294 = Temporary3.paramTypes;
        var i_2952790295 = 0;
        var L_2952790296 = (colontmp__2952790294).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2952790295 < L_2952790296)) break Label5;
              param_3087008390 = colontmp__2952790294[chckIndx(i_2952790295, 0, (colontmp__2952790294).length - 1)];
              add_3087008391(result_3087008348, 0, fingerprint_3087008346(param_3087008390));
              i_2952790295 = addInt(i_2952790295, 1);
              if (!(((colontmp__2952790294).length == L_2952790296))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3087008347;
      if (ConstSet112[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
      result_3087008348[0] = nimCopy(null, [typ_3087008347.kind, Temporary6.open], NTI3019899213);
      break;
    default: 
      result_3087008348[0] = nimCopy(null, [typ_3087008347.kind], NTI3087008193);
      break;
    }

  return result_3087008348[0];

}

function initDoublyLinkedList_3003130454() {
  var result_3003130456 = ({head: null, tail: null});

  return result_3003130456;

}

function initTable_3003130460(initialSize_3003130463) {
  var result_3003130464 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_3003130466 = slotsNeeded_1308622891(chckRange(initialSize_3003130463, 0, 2147483647));
    result_3003130464.counter = 0;
    result_3003130464.data = new Array(chckRange(correctSizeHEX60gensym156_3003130466, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_3003130466, 0, 2147483647) ; ++i) { result_3003130464.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003130464;

}

function newLruCache_3003130444(capacity_3003130447, recordRemovedKeys_3003130448) {
  var result_3003130449 = null;

    result_3003130449 = {capacity: capacity_3003130447, list: initDoublyLinkedList_3003130454(), table: initTable_3003130460(correctSize_3036676117(capacity_3003130447)), recordRemovedKeys: recordRemovedKeys_3003130448, removedKeys: ({data: [], counter: 0})};

  return result_3003130449;

}

function newCache_3003130439(capacity_3003130442) {
  var result_3003130443 = null;

    result_3003130443 = newLruCache_3003130444(capacity_3003130442, false);

  return result_3003130443;

}

function init_3003130434(result_3003130437, result_3003130437_Idx, capacity_3003130438) {
    result_3003130437[result_3003130437_Idx] = newCache_3003130439(capacity_3003130438);

  
}

function errorValue_3087008431() {
  var result_3087008432 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008432 = nimCopy(result_3087008432, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008432;

}

function HEX5BHEX5D_3137341205(s_3137341209, x_3137341210) {
  var result_3137341211 = [];

    var a_3137341213 = x_3137341210.a;
    var L_3137341219 = addInt(subInt(subInt((s_3137341209).length, x_3137341210.b), a_3137341213), 1);
    result_3137341211 = new Array(chckRange(L_3137341219, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3137341219, 0, 2147483647) ; ++i) { result_3137341211[i] = null; }    Label1: {
      var i_3137341228 = 0;
      var i_2952790318 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790318 < L_3137341219)) break Label3;
            i_3137341228 = i_2952790318;
            result_3137341211[chckIndx(i_3137341228, 0, (result_3137341211).length - 1)] = s_3137341209[chckIndx(addInt(i_3137341228, a_3137341213), 0, (s_3137341209).length - 1)];
            i_2952790318 = addInt(i_2952790318, 1);
          }
      };
    };

  return result_3137341211;

}

function formatValue_3087008579(result_3087008581, result_3087008581_Idx, value_3087008582, specifier_3087008583) {
    formatValue_721420459(result_3087008581, result_3087008581_Idx, HEX24_2986346455(value_3087008582), specifier_3087008583);

  
}

function hash_3087008493(x_3087008495) {
  var result_3087008496 = 0;

    result_3087008496 = hashWangYi1_1325400244(x_3087008495);

  return result_3087008496;

}

function hash_3087008255(x_3087008257) {
  var result_3087008258 = 0;

    result_3087008258 = hashWangYi1_1325400244(x_3087008257);

  return result_3087008258;

}

function hash_3087008266(x_3087008268) {
  var result_3087008269 = 0;

    Label1: {
      var a_3087008283 = null;
      var i_2952790335 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790335 < (x_3087008268).length)) break Label3;
            a_3087008283 = x_3087008268[chckIndx(i_2952790335, 0, (x_3087008268).length - 1)];
            result_3087008269 = HEX21HEX26_1325400067(result_3087008269, hash_3087008252(a_3087008283));
            i_2952790335 = addInt(i_2952790335, 1);
          }
      };
    };
    result_3087008269 = HEX21HEX24_1325400082(result_3087008269);

  return result_3087008269;

}

function hash_2600471099(x_2600471101) {
  var result_2600471102 = 0;

    result_2600471102 = hashWangYi1_1325400244((x_2600471101 ? 1 : 0));

  return result_2600471102;

}

function hash_3087008252(typ_3087008253) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008254 = 0;

  BeforeRet: {
    switch (typ_3087008253.kind) {
    case 4:
      var Temporary2 = typ_3087008253;
      if (ConstSet118[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007747)); }
      var Temporary3 = typ_3087008253;
      if (ConstSet119[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007747)); }
      Temporary1 = ((hash_3087008255(typ_3087008253.kind) ^ hash_3087008252(Temporary2.returnType)) ^ hash_3087008266(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3087008253;
      if (ConstSet120[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
      Temporary1 = (hash_3087008255(typ_3087008253.kind) ^ hash_2600471099(Temporary4.open));
      break;
    default: 
      result_3087008254 = hash_3087008255(typ_3087008253.kind);
      break BeforeRet;
      break;
    }
    result_3087008254 = Temporary1;
  };

  return result_3087008254;

}

function hash_3087008490(value_3087008491) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3087008492 = 0;

  BeforeRet: {
    switch (value_3087008491.kind) {
    case 0:
      result_3087008492 = hash_3087008493(value_3087008491.kind);
      break BeforeRet;
      break;
    case 1:
      result_3087008492 = hash_3087008493(value_3087008491.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008491;
      if (ConstSet115[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008492 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008491;
      if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008492 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3087008492 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008491;
      if (ConstSet117[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      result_3087008492 = hash_2986346803(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3087008491;
      if (ConstSet121[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008492 = hash_3087008252(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3087008492;

}

function hash_3087008724(x_3087008726) {
  var result_3087008727 = 0;

    Label1: {
      var a_3087008741 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952790331 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790331 < (x_3087008726).length)) break Label3;
            a_3087008741 = x_3087008726[chckIndx(i_2952790331, 0, (x_3087008726).length - 1)];
            result_3087008727 = HEX21HEX26_1325400067(result_3087008727, hash_3087008490(a_3087008741));
            i_2952790331 = addInt(i_2952790331, 1);
          }
      };
    };
    result_3087008727 = HEX21HEX24_1325400082(result_3087008727);

  return result_3087008727;

}

function hash_3087008742(x_3087008744) {
  var result_3087008745 = 0;

    result_3087008745 = HEX21HEX26_1325400067(result_3087008745, hash_1325400236(x_3087008744.val));
    result_3087008745 = HEX21HEX26_1325400067(result_3087008745, hash_2600471099(x_3087008744.has));
    result_3087008745 = HEX21HEX24_1325400082(result_3087008745);

  return result_3087008745;

}

function hash_3087008721(fec_3087008722) {
  var result_3087008723 = 0;

    result_3087008723 = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_2986346803(fec_3087008722.node), hash_3087008724(fec_3087008722.arguments)), hash_3087008742(fec_3087008722.maxLoopIterations));
    result_3087008723 = HEX21HEX24_1325400082(result_3087008723);

  return result_3087008723;

}

function HEX3DHEX3D_3087008782(x_3087008784, y_3087008785) {
  var result_3087008786 = false;

  BeforeRet: {
    var sameObject_3087008793 = false;
    sameObject_3087008793 = x_3087008784 === y_3087008785
    if (sameObject_3087008793) {
    result_3087008786 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087008784).length == (y_3087008785).length))) {
    result_3087008786 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087008807 = 0;
      var colontmp__2952790338 = 0;
      colontmp__2952790338 = subInt((x_3087008784).length, 1);
      var res_2952790339 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790339 <= colontmp__2952790338)) break Label3;
            i_3087008807 = res_2952790339;
            if (!(HEX3DHEX3D_3087008510(x_3087008784[chckIndx(i_3087008807, 0, (x_3087008784).length - 1)], y_3087008785[chckIndx(i_3087008807, 0, (y_3087008785).length - 1)]))) {
            result_3087008786 = false;
            break BeforeRet;
            }
            
            res_2952790339 = addInt(res_2952790339, 1);
          }
      };
    };
    result_3087008786 = true;
    break BeforeRet;
  };

  return result_3087008786;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3087008870(a_3087008872, b_3087008873) {
  var result_3087008874 = false;

    result_3087008874 = (((isSome_1191185117(a_3087008872) && isSome_1191185117(b_3087008873)) && (a_3087008872.val == b_3087008873.val)) || (isNone_1191185194(a_3087008872) && isNone_1191185194(b_3087008873)));

  return result_3087008874;

}

function HEX3DHEX3D_3087008765(a_3087008766, b_3087008767) {
  var result_3087008768 = false;

  BeforeRet: {
    if ((a_3087008766 == null)) {
    result_3087008768 = (b_3087008767 == null);
    break BeforeRet;
    }
    
    if ((b_3087008767 == null)) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    if (!((a_3087008766.node == b_3087008767.node))) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008782(a_3087008766.arguments, b_3087008767.arguments))) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087008870(a_3087008766.maxLoopIterations, b_3087008767.maxLoopIterations))) {
    result_3087008768 = false;
    break BeforeRet;
    }
    
    result_3087008768 = true;
    break BeforeRet;
  };

  return result_3087008768;

}

function getItem_3003188626(selfHEX60gensym84_3003188627) {
  var result_3003188628 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym84_3003188627.id, null_2181038340)) {
    selfHEX60gensym84_3003188627.id = nimCopy(selfHEX60gensym84_3003188627.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym84_3003188627.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,52,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952790341 = nimCopy(null, selfHEX60gensym84_3003188627.id, NTI2181038083);
    var colontmp__2952790342 = 3;
    result_3003188628 = nimCopy(result_3003188628, {Field0: nimCopy(null, colontmp__2952790341, NTI2181038083), Field1: colontmp__2952790342}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003188628;

}

function rawGet_3003155862(t_3003155865, key_3003155866, hc_3003155867, hc_3003155867_Idx) {
  var result_3003155868 = 0;

  BeforeRet: {
    hc_3003155867[hc_3003155867_Idx] = hash_3003122712(key_3003155866);
    if ((hc_3003155867[hc_3003155867_Idx] == 0)) {
    hc_3003155867[hc_3003155867_Idx] = 314159265;
    }
    
    if (((t_3003155865.data).length == 0)) {
    result_3003155868 = -1;
    break BeforeRet;
    }
    
    var h_3003155957 = (hc_3003155867[hc_3003155867_Idx] & (t_3003155865.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003155865.data[chckIndx(h_3003155957, 0, (t_3003155865.data).length - 1)].Field0)) break Label2;
          if (((t_3003155865.data[chckIndx(h_3003155957, 0, (t_3003155865.data).length - 1)].Field0 == hc_3003155867[hc_3003155867_Idx]) && HEX3DHEX3D_3003123049(t_3003155865.data[chckIndx(h_3003155957, 0, (t_3003155865.data).length - 1)].Field1, key_3003155866))) {
          result_3003155868 = h_3003155957;
          break BeforeRet;
          }
          
          h_3003155957 = nextTry_1308622883(h_3003155957, (t_3003155865.data).length - 1);
        }
    };
    result_3003155868 = subInt(-1, h_3003155957);
  };

  return result_3003155868;

}

function getOrDefault_3003188877(t_3003188880, key_3003188881, default_3003188882) {
    var Temporary1;

  var result_3003188883 = null;

    var hcHEX60gensym447_3003188886 = [0];
    var indexHEX60gensym447_3003188893 = rawGet_3003155862(t_3003188880, key_3003188881, hcHEX60gensym447_3003188886, 0);
    if ((0 <= indexHEX60gensym447_3003188893)) {
    Temporary1 = t_3003188880.data[chckIndx(indexHEX60gensym447_3003188893, 0, (t_3003188880.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003188882;
    }
    
    result_3003188883 = Temporary1;

  return result_3003188883;

}

function newDoublyLinkedNode_3003189009(value_3003189011) {
  var result_3003189012 = null;

    result_3003189012 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003189012.value = nimCopy(result_3003189012.value, value_3003189011, NTI3003121927);

  return result_3003189012;

}

function mustRehash_3003189350(t_3003189352) {
  var result_3003189353 = false;

    if (!((t_3003189352.counter < (t_3003189352.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003189353 = ((mulInt((t_3003189352.data).length, 2) < mulInt(t_3003189352.counter, 3)) || (subInt((t_3003189352.data).length, t_3003189352.counter) < 4));

  return result_3003189353;

}

function rawInsert_3003190043(t_3003190047, data_3003190048, data_3003190048_Idx, key_3003190049, val_3003190050, hc_3003190051, h_3003190052) {
    data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field1 = nimCopy(data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field1, key_3003190049, NTI3019898905);
    data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field2 = val_3003190050;
    data_3003190048[data_3003190048_Idx][chckIndx(h_3003190052, 0, (data_3003190048[data_3003190048_Idx]).length - 1)].Field0 = hc_3003190051;

  
}

function enlarge_3003189607(t_3003189610) {
    var n_3003189613 = [];
    n_3003189613 = new Array(chckRange(mulInt((t_3003189610.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003189610.data).length, 2), 0, 2147483647) ; ++i) { n_3003189613[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003189610.data; t_3003189610.data = n_3003189613; n_3003189613 = Temporary1;    Label2: {
      var i_3003189711 = 0;
      var colontmp__2952790346 = 0;
      colontmp__2952790346 = (n_3003189613).length - 1;
      var res_2952790347 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790347 <= colontmp__2952790346)) break Label4;
            i_3003189711 = res_2952790347;
            var eh_3003189792 = n_3003189613[chckIndx(i_3003189711, 0, (n_3003189613).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003189792)) {
            var j_3003189796 = (eh_3003189792 & (t_3003189610.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003189610.data[chckIndx(j_3003189796, 0, (t_3003189610.data).length - 1)].Field0)) break Label6;
                  j_3003189796 = nextTry_1308622883(j_3003189796, (t_3003189610.data).length - 1);
                }
            };
            rawInsert_3003190043(t_3003189610, t_3003189610, "data", n_3003189613[chckIndx(i_3003189711, 0, (n_3003189613).length - 1)].Field1, n_3003189613[chckIndx(i_3003189711, 0, (n_3003189613).length - 1)].Field2, eh_3003189792, j_3003189796);
            }
            
            res_2952790347 = addInt(res_2952790347, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003190293(t_3003190296, key_3003190297, hc_3003190298) {
  var result_3003190299 = 0;

  BeforeRet: {
    if (((t_3003190296.data).length == 0)) {
    result_3003190299 = -1;
    break BeforeRet;
    }
    
    var h_3003190384 = (hc_3003190298 & (t_3003190296.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003190296.data[chckIndx(h_3003190384, 0, (t_3003190296.data).length - 1)].Field0)) break Label2;
          if (((t_3003190296.data[chckIndx(h_3003190384, 0, (t_3003190296.data).length - 1)].Field0 == hc_3003190298) && HEX3DHEX3D_3003123049(t_3003190296.data[chckIndx(h_3003190384, 0, (t_3003190296.data).length - 1)].Field1, key_3003190297))) {
          result_3003190299 = h_3003190384;
          break BeforeRet;
          }
          
          h_3003190384 = nextTry_1308622883(h_3003190384, (t_3003190296.data).length - 1);
        }
    };
    result_3003190299 = subInt(-1, h_3003190384);
  };

  return result_3003190299;

}

function HEX5BHEX5DHEX3D_3003189082(t_3003189085, key_3003189086, val_3003189087) {
    if (((t_3003189085.data).length == 0)) {
    var correctSizeHEX60gensym450_3003189170 = slotsNeeded_1308622891(32);
    t_3003189085.counter = 0;
    t_3003189085.data = new Array(chckRange(correctSizeHEX60gensym450_3003189170, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym450_3003189170, 0, 2147483647) ; ++i) { t_3003189085.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003189175 = [0];
    var index_3003189182 = rawGet_3003155862(t_3003189085, key_3003189086, hc_3003189175, 0);
    if ((0 <= index_3003189182)) {
    t_3003189085.data[chckIndx(index_3003189182, 0, (t_3003189085.data).length - 1)].Field2 = val_3003189087;
    }
    else {
      if (((t_3003189085.data).length == 0)) {
      var correctSizeHEX60gensym453_3003189345 = slotsNeeded_1308622891(32);
      t_3003189085.counter = 0;
      t_3003189085.data = new Array(chckRange(correctSizeHEX60gensym453_3003189345, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym453_3003189345, 0, 2147483647) ; ++i) { t_3003189085.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003189350(t_3003189085)) {
      enlarge_3003189607(t_3003189085);
      index_3003189182 = rawGetKnownHC_3003190293(t_3003189085, key_3003189086, hc_3003189175[0]);
      }
      
      index_3003189182 = subInt(-1, index_3003189182);
      rawInsert_3003190043(t_3003189085, t_3003189085, "data", key_3003189086, val_3003189087, hc_3003189175[0], index_3003189182);
      t_3003189085.counter = addInt(t_3003189085.counter, 1);
    }
    

  
}

function prepend_3003156842(L_3003156844, n_3003156845) {
    n_3003156845.prev = null;
    n_3003156845.next = L_3003156844.head;
    if (!((L_3003156844.head == null))) {
    if (!((L_3003156844.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003156844.head.prev = n_3003156845;
    }
    
    L_3003156844.head = n_3003156845;
    if ((L_3003156844.tail == null)) {
    L_3003156844.tail = n_3003156845;
    }
    

  
}

function rawGet_3003178064(t_3003178067, key_3003178068, hc_3003178069, hc_3003178069_Idx) {
  var result_3003178070 = 0;

  BeforeRet: {
    hc_3003178069[hc_3003178069_Idx] = hash_3003122712(key_3003178068);
    if ((hc_3003178069[hc_3003178069_Idx] == 0)) {
    hc_3003178069[hc_3003178069_Idx] = 314159265;
    }
    
    if (((t_3003178067.data).length == 0)) {
    result_3003178070 = -1;
    break BeforeRet;
    }
    
    var h_3003178159 = (hc_3003178069[hc_3003178069_Idx] & (t_3003178067.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003178067.data[chckIndx(h_3003178159, 0, (t_3003178067.data).length - 1)].Field0)) break Label2;
          if (((t_3003178067.data[chckIndx(h_3003178159, 0, (t_3003178067.data).length - 1)].Field0 == hc_3003178069[hc_3003178069_Idx]) && HEX3DHEX3D_3003123049(t_3003178067.data[chckIndx(h_3003178159, 0, (t_3003178067.data).length - 1)].Field1, key_3003178068))) {
          result_3003178070 = h_3003178159;
          break BeforeRet;
          }
          
          h_3003178159 = nextTry_1828716586(h_3003178159, (t_3003178067.data).length - 1);
        }
    };
    result_3003178070 = subInt(-1, h_3003178159);
  };

  return result_3003178070;

}

function exclImpl_3003178058(s_3003178060, key_3003178061) {
          var Temporary5;

  var result_3003178062 = false;

  BeforeRet: {
    var hc_3003178063 = [0];
    var i_3003178425 = rawGet_3003178064(s_3003178060, key_3003178061, hc_3003178063, 0);
    var msk_3003178429 = (s_3003178060.data).length - 1;
    result_3003178062 = true;
    if ((0 <= i_3003178425)) {
    result_3003178062 = false;
    s_3003178060.counter = subInt(s_3003178060.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003178435 = i_3003178425;
          var r_3003178436 = j_3003178435;
          s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field0 = 0;
          s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field1 = nimCopy(s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003178425 = (addInt(i_3003178425, 1) & msk_3003178429);
                if (isEmpty_1828716580(s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003178436 = (s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)].Field0 & msk_3003178429);
                if (!(((((r_3003178436 <= i_3003178425) && (j_3003178435 < r_3003178436)) || ((j_3003178435 < r_3003178436) && (i_3003178425 < j_3003178435))) || ((i_3003178425 < j_3003178435) && (r_3003178436 <= i_3003178425))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)];
          s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)] = genericReset(s_3003178060.data[chckIndx(i_3003178425, 0, (s_3003178060.data).length - 1)], NTI3003121782);
          s_3003178060.data[chckIndx(j_3003178435, 0, (s_3003178060.data).length - 1)] = nimCopy(s_3003178060.data[chckIndx(j_3003178435, 0, (s_3003178060.data).length - 1)], Temporary5, NTI3003121782);
        }
    };
    }
    
  };

  return result_3003178062;

}

function excl_3003178043(s_3003178045, key_3003178046) {
    var _ = exclImpl_3003178058(s_3003178045, key_3003178046);

  
}

function len_3003190904(t_3003190907) {
  var result_3003190908 = 0;

    result_3003190908 = t_3003190907.counter;

  return result_3003190908;

}

function len_3003190821(cache_3003190824) {
  var result_3003190825 = 0;

    result_3003190825 = len_3003190904(cache_3003190824.table);

  return result_3003190825;

}

function mustRehash_3003179330(t_3003179332) {
  var result_3003179333 = false;

    if (!((t_3003179332.counter < (t_3003179332.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003179333 = ((mulInt((t_3003179332.data).length, 2) < mulInt(t_3003179332.counter, 3)) || (subInt((t_3003179332.data).length, t_3003179332.counter) < 4));

  return result_3003179333;

}

function rawGetKnownHC_3003179936(t_3003179939, key_3003179940, hc_3003179941) {
  var result_3003179942 = 0;

  BeforeRet: {
    if (((t_3003179939.data).length == 0)) {
    result_3003179942 = -1;
    break BeforeRet;
    }
    
    var h_3003180027 = (hc_3003179941 & (t_3003179939.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003179939.data[chckIndx(h_3003180027, 0, (t_3003179939.data).length - 1)].Field0)) break Label2;
          if (((t_3003179939.data[chckIndx(h_3003180027, 0, (t_3003179939.data).length - 1)].Field0 == hc_3003179941) && HEX3DHEX3D_3003123049(t_3003179939.data[chckIndx(h_3003180027, 0, (t_3003179939.data).length - 1)].Field1, key_3003179940))) {
          result_3003179942 = h_3003180027;
          break BeforeRet;
          }
          
          h_3003180027 = nextTry_1828716586(h_3003180027, (t_3003179939.data).length - 1);
        }
    };
    result_3003179942 = subInt(-1, h_3003180027);
  };

  return result_3003179942;

}

function rawInsert_3003180440(s_3003180442, data_3003180443, data_3003180443_Idx, key_3003180444, hc_3003180445, h_3003180446) {
    if (((data_3003180443[data_3003180443_Idx]).length == 0)) {
    var correctSizeHEX60gensym403_3003180529 = slotsNeeded_1828716594(64);
    s_3003180442.counter = 0;
    s_3003180442.data = new Array(chckRange(correctSizeHEX60gensym403_3003180529, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym403_3003180529, 0, 2147483647) ; ++i) { s_3003180442.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    data_3003180443[data_3003180443_Idx][chckIndx(h_3003180446, 0, (data_3003180443[data_3003180443_Idx]).length - 1)].Field1 = nimCopy(data_3003180443[data_3003180443_Idx][chckIndx(h_3003180446, 0, (data_3003180443[data_3003180443_Idx]).length - 1)].Field1, key_3003180444, NTI3019898905);
    data_3003180443[data_3003180443_Idx][chckIndx(h_3003180446, 0, (data_3003180443[data_3003180443_Idx]).length - 1)].Field0 = hc_3003180445;

  
}

function enlarge_3003179593(s_3003179595) {
    var n_3003179597 = [];
    n_3003179597 = new Array(chckRange(mulInt((s_3003179595.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003179595.data).length, 2), 0, 2147483647) ; ++i) { n_3003179597[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    var Temporary1 = s_3003179595.data; s_3003179595.data = n_3003179597; n_3003179597 = Temporary1;    Label2: {
      var i_3003179695 = 0;
      var colontmp__2952790355 = 0;
      colontmp__2952790355 = (n_3003179597).length - 1;
      var res_2952790356 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790356 <= colontmp__2952790355)) break Label4;
            i_3003179695 = res_2952790356;
            if (isFilled_1828716583(n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field0)) {
            var j_3003180275 = subInt(-1, rawGetKnownHC_3003179936(s_3003179595, n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field1, n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field0));
            rawInsert_3003180440(s_3003179595, s_3003179595, "data", n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field1, n_3003179597[chckIndx(i_3003179695, 0, (n_3003179597).length - 1)].Field0, j_3003180275);
            }
            
            res_2952790356 = addInt(res_2952790356, 1);
          }
      };
    };

  
}

function incl_3003179214(s_3003179216, key_3003179217) {
    if (((s_3003179216.data).length == 0)) {
    var correctSizeHEX60gensym396_3003179300 = slotsNeeded_1828716594(64);
    s_3003179216.counter = 0;
    s_3003179216.data = new Array(chckRange(correctSizeHEX60gensym396_3003179300, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym396_3003179300, 0, 2147483647) ; ++i) { s_3003179216.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    var hc_3003179315 = [0];
    var index_3003179329 = rawGet_3003178064(s_3003179216, key_3003179217, hc_3003179315, 0);
    if ((index_3003179329 < 0)) {
    if (mustRehash_3003179330(s_3003179216)) {
    enlarge_3003179593(s_3003179216);
    index_3003179329 = rawGetKnownHC_3003179936(s_3003179216, key_3003179217, hc_3003179315[0]);
    }
    
    rawInsert_3003180440(s_3003179216, s_3003179216, "data", key_3003179217, hc_3003179315[0], subInt(-1, index_3003179329));
    s_3003179216.counter = addInt(s_3003179216.counter, 1);
    }
    

  
}

function del_3003190996(t_3003190999, key_3003191000) {
    var hc_3003191001 = [0];
    var i_3003191008 = rawGet_3003155862(t_3003190999, key_3003191000, hc_3003191001, 0);
    var mskHEX60gensym36_3003191012 = (t_3003190999.data).length - 1;
    if ((0 <= i_3003191008)) {
    t_3003190999.counter = subInt(t_3003190999.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003191019 = i_3003191008;
            var rHEX60gensym36_3003191020 = jHEX60gensym36_3003191019;
            t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field0 = 0;
            t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field1 = nimCopy(t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003191008 = (addInt(i_3003191008, 1) & mskHEX60gensym36_3003191012);
                  if (isEmpty_1308622877(t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003191020 = (t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)].Field0 & mskHEX60gensym36_3003191012);
                  if (!(((((rHEX60gensym36_3003191020 <= i_3003191008) && (jHEX60gensym36_3003191019 < rHEX60gensym36_3003191020)) || ((jHEX60gensym36_3003191019 < rHEX60gensym36_3003191020) && (i_3003191008 < jHEX60gensym36_3003191019))) || ((i_3003191008 < jHEX60gensym36_3003191019) && (rHEX60gensym36_3003191020 <= i_3003191008))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003190999.data[chckIndx(jHEX60gensym36_3003191019, 0, (t_3003190999.data).length - 1)] = nimCopy(t_3003190999.data[chckIndx(jHEX60gensym36_3003191019, 0, (t_3003190999.data).length - 1)], t_3003190999.data[chckIndx(i_3003191008, 0, (t_3003190999.data).length - 1)], NTI3003121963);
          }
      };
    };
    }
    

  
}

function remove_3003156514(L_3003156516, n_3003156517) {
    if ((n_3003156517 == L_3003156516.tail)) {
    L_3003156516.tail = n_3003156517.prev;
    }
    
    if ((n_3003156517 == L_3003156516.head)) {
    L_3003156516.head = n_3003156517.next;
    }
    
    if (!((n_3003156517.next == null))) {
    n_3003156517.next.prev = n_3003156517.prev;
    }
    
    if (!((n_3003156517.prev == null))) {
    n_3003156517.prev.next = n_3003156517.next;
    }
    

  
}

function resize_3003190739(cache_3003190742) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003190742.capacity < len_3003190821(cache_3003190742))) break Label2;
          var t_3003190909 = cache_3003190742.list.tail;
          if (cache_3003190742.recordRemovedKeys) {
          incl_3003179214(cache_3003190742.removedKeys, t_3003190909.value.key);
          }
          
          del_3003190996(cache_3003190742.table, t_3003190909.value.key);
          remove_3003156514(cache_3003190742.list, t_3003190909);
        }
    };

  
}

function addNewNode_3003189001(cache_3003189004, key_3003189005, val_3003189006) {
    var node_3003189018 = newDoublyLinkedNode_3003189009({key: nimCopy(null, key_3003189005, NTI3019898905), val: val_3003189006});
    HEX5BHEX5DHEX3D_3003189082(cache_3003189004.table, key_3003189005, node_3003189018);
    prepend_3003156842(cache_3003189004.list, node_3003189018);
    if (cache_3003189004.recordRemovedKeys) {
    excl_3003178043(cache_3003189004.removedKeys, key_3003189005);
    }
    
    resize_3003190739(cache_3003189004);

  
}

function HEX5BHEX5DHEX3D_3003188782(cache_3003188785, key_3003188786, val_3003188787) {
    var node_3003188974 = getOrDefault_3003188877(cache_3003188785.table, key_3003188786, null);
    if ((node_3003188974 == null)) {
    addNewNode_3003189001(cache_3003188785, key_3003188786, val_3003188787);
    }
    else {
      node_3003188974.value.val = val_3003188787;
      remove_3003156514(cache_3003188785.list, node_3003188974);
      prepend_3003156842(cache_3003188785.list, node_3003188974);
    }
    

  
}

function getOrCreateFunctionExecutionContext_3003188635(ctxHEX60gensym85_3003188636, dataHEX60gensym85_3003188637) {
  var result_3003188638 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym85_3003188647 = null;
      Label2: {
        var node_2952790326 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952790327 = ctxHEX60gensym85_3003188636.itemsFunctionExecutionContext.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2952790327 == null))) break Label4;
              node_2952790326 = nimCopy(node_2952790326, it_2952790327.value, NTI3003121927);
              existingHEX60gensym85_3003188647 = node_2952790326.val;
              if (((hash_3087008721(existingHEX60gensym85_3003188647) == hash_3087008721(dataHEX60gensym85_3003188637)) && HEX3DHEX3D_3087008765(existingHEX60gensym85_3003188647, dataHEX60gensym85_3003188637))) {
              result_3003188638 = existingHEX60gensym85_3003188647;
              break BeforeRet;
              }
              
              it_2952790327 = it_2952790327.next;
            }
        };
      };
    };
    var itemHEX60gensym85_3003188648 = getItem_3003188626(dataHEX60gensym85_3003188637);
    var keyHEX60gensym85_3003188649 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym85_3003188648, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym85_3003188636.depGraph.changed, keyHEX60gensym85_3003188649, ctxHEX60gensym85_3003188636.depGraph.revision);
    HEX5BHEX5DHEX3D_3003188782(ctxHEX60gensym85_3003188636.itemsFunctionExecutionContext, itemHEX60gensym85_3003188648, dataHEX60gensym85_3003188637);
    result_3003188638 = dataHEX60gensym85_3003188637;
    break BeforeRet;
  };

  return result_3003188638;

}

function rawGet_3003157234(t_3003157237, key_3003157238, hc_3003157239, hc_3003157239_Idx) {
  var result_3003157240 = 0;

  BeforeRet: {
    hc_3003157239[hc_3003157239_Idx] = hash_3087008721(key_3003157238);
    if ((hc_3003157239[hc_3003157239_Idx] == 0)) {
    hc_3003157239[hc_3003157239_Idx] = 314159265;
    }
    
    if (((t_3003157237.data).length == 0)) {
    result_3003157240 = -1;
    break BeforeRet;
    }
    
    var h_3003157326 = (hc_3003157239[hc_3003157239_Idx] & (t_3003157237.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003157237.data[chckIndx(h_3003157326, 0, (t_3003157237.data).length - 1)].Field0)) break Label2;
          if (((t_3003157237.data[chckIndx(h_3003157326, 0, (t_3003157237.data).length - 1)].Field0 == hc_3003157239[hc_3003157239_Idx]) && HEX3DHEX3D_3087008765(t_3003157237.data[chckIndx(h_3003157326, 0, (t_3003157237.data).length - 1)].Field1, key_3003157238))) {
          result_3003157240 = h_3003157326;
          break BeforeRet;
          }
          
          h_3003157326 = nextTry_1308622883(h_3003157326, (t_3003157237.data).length - 1);
        }
    };
    result_3003157240 = subInt(-1, h_3003157326);
  };

  return result_3003157240;

}

function hasKey_3003214679(t_3003214682, key_3003214683) {
  var result_3003214684 = false;

    var hc_3003214685 = [0];
    result_3003214684 = (0 <= rawGet_3003157234(t_3003214682, key_3003214683, hc_3003214685, 0));

  return result_3003214684;

}

function contains_3003214673(t_3003214676, key_3003214677) {
  var result_3003214678 = false;

  BeforeRet: {
    result_3003214678 = hasKey_3003214679(t_3003214676, key_3003214677);
    break BeforeRet;
  };

  return result_3003214678;

}

function contains_3003214579(cache_3003214582, key_3003214583) {
  var result_3003214584 = false;

    result_3003214584 = contains_3003214673(cache_3003214582.table, key_3003214583);

  return result_3003214584;

}

function addQuoted_3087008627(s_3087008629, s_3087008629_Idx, x_3087008630) {
    s_3087008629[s_3087008629_Idx].push.apply(s_3087008629[s_3087008629_Idx], HEX24_3087008487(x_3087008630));;

  
}

function collectionToString_3087008593(x_3087008595, prefix_3087008596, separator_3087008597, suffix_3087008598) {
  var result_3087008599 = [[]];

    result_3087008599[0] = nimCopy(null, prefix_3087008596, NTI33554449);
    var firstElement_3087008600 = true;
    Label1: {
      var value_3087008623 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952790364 = 0;
      var L_2952790365 = (x_3087008595).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790364 < L_2952790365)) break Label3;
            value_3087008623 = x_3087008595[i_2952790364];
            if (firstElement_3087008600) {
            firstElement_3087008600 = false;
            }
            else {
            result_3087008599[0].push.apply(result_3087008599[0], separator_3087008597);;
            }
            
            addQuoted_3087008627(result_3087008599, 0, value_3087008623);
            i_2952790364 += 1;
            if (!(((x_3087008595).length == L_2952790365))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087008599[0].push.apply(result_3087008599[0], suffix_3087008598);;

  return result_3087008599[0];

}

function HEX24_3087008589(x_3087008591) {
  var result_3087008592 = [];

    result_3087008592 = nimCopy(null, collectionToString_3087008593(x_3087008591, [64,91], [44,32], [93]), NTI33554449);

  return result_3087008592;

}

function formatValue_3087008584(result_3087008586, result_3087008586_Idx, value_3087008587, specifier_3087008588) {
    formatValue_721420459(result_3087008586, result_3087008586_Idx, HEX24_3087008589(value_3087008587), specifier_3087008588);

  
}

function HEX24_3087008702(self_3087008704) {
  var result_3087008705 = [[]];

    if (isSome_1191185117(self_3087008704)) {
    result_3087008705[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3087008705, 0, self_3087008704.val);
    result_3087008705[0].push.apply(result_3087008705[0], [41]);;
    }
    else {
      result_3087008705[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3087008705[0];

}

function formatValue_3087008651(result_3087008653, result_3087008653_Idx, value_3087008654, specifier_3087008655) {
    formatValue_721420459(result_3087008653, result_3087008653_Idx, HEX24_3087008702(value_3087008654), specifier_3087008655);

  
}

function HEX24_3087008571(fec_3087008572) {
  var result_3087008573 = [];

  BeforeRet: {
    var fmtRes_3087008578 = [mnewString(0)];
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [67,97,108,108,32]);;
    formatValue_3087008579(fmtRes_3087008578, 0, fec_3087008572.node, []);
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [40]);;
    formatValue_3087008584(fmtRes_3087008578, 0, fec_3087008572.arguments, []);
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3087008651(fmtRes_3087008578, 0, fec_3087008572.maxLoopIterations, []);
    fmtRes_3087008578[0].push.apply(fmtRes_3087008578[0], [41]);;
    result_3087008573 = nimCopy(null, fmtRes_3087008578[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087008573;

}

function raiseKeyError_3003214952(key_3003214954) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3087008571(key_3003214954) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003214858(t_3003214861, key_3003214862) {
  var result_3003214863 = null;
  var result_3003214863_Idx = 0;

    var hcHEX60gensym22_3003214864 = [0];
    var indexHEX60gensym22_3003214871 = rawGet_3003157234(t_3003214861, key_3003214862, hcHEX60gensym22_3003214864, 0);
    if ((0 <= indexHEX60gensym22_3003214871)) {
    result_3003214863 = t_3003214861.data[chckIndx(indexHEX60gensym22_3003214871, 0, (t_3003214861.data).length - 1)]; result_3003214863_Idx = "Field2";
    }
    else {
    raiseKeyError_3003214952(key_3003214862);
    }
    

  return [result_3003214863, result_3003214863_Idx];

}

function remove_3003163140(L_3003163142, n_3003163143) {
    if ((n_3003163143 == L_3003163142.tail)) {
    L_3003163142.tail = n_3003163143.prev;
    }
    
    if ((n_3003163143 == L_3003163142.head)) {
    L_3003163142.head = n_3003163143.next;
    }
    
    if (!((n_3003163143.next == null))) {
    n_3003163143.next.prev = n_3003163143.prev;
    }
    
    if (!((n_3003163143.prev == null))) {
    n_3003163143.prev.next = n_3003163143.next;
    }
    

  
}

function prepend_3003159411(L_3003159413, n_3003159414) {
    n_3003159414.prev = null;
    n_3003159414.next = L_3003159413.head;
    if (!((L_3003159413.head == null))) {
    if (!((L_3003159413.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003159413.head.prev = n_3003159414;
    }
    
    L_3003159413.head = n_3003159414;
    if ((L_3003159413.tail == null)) {
    L_3003159413.tail = n_3003159414;
    }
    

  
}

function HEX5BHEX5D_3003214772(cache_3003214775, key_3003214776) {
    var Temporary1;

  var result_3003214777 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_3003214965 = (Temporary1 = HEX5BHEX5D_3003214858(cache_3003214775.table, key_3003214776), Temporary1)[0][Temporary1[1]];
    result_3003214777 = nimCopy(result_3003214777, node_3003214965.value.val, NTI3087007751);
    remove_3003163140(cache_3003214775.list, node_3003214965);
    prepend_3003159411(cache_3003214775.list, node_3003214965);

  return result_3003214777;

}

function computeFunctionExecution_3003215035(ctxHEX60gensym116_3003215036, inputHEX60gensym116_3003215037) {
    var Temporary3;
    var Temporary5;

  var result_3003215038 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym116_3003215039 = startTimer_2281701428();
    ctxHEX60gensym116_3003215036.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym116_3003215036.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym116_3003215128 = getItem_3003188626(inputHEX60gensym116_3003215037);
    var keyHEX60gensym116_3003215129 = {Field0: nimCopy(null, itemHEX60gensym116_3003215128, NTI3019898905), Field1: 6};
    recordDependency_3003175740(ctxHEX60gensym116_3003215036, itemHEX60gensym116_3003215128, 6);
    if (ctxHEX60gensym116_3003215036.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym116_3003215036.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3019899092(itemHEX60gensym116_3003215128));
    }
    
    force_3003192111(ctxHEX60gensym116_3003215036, keyHEX60gensym116_3003215129);
    if (!(contains_3003214579(ctxHEX60gensym116_3003215036.queryCacheFunctionExecution, inputHEX60gensym116_3003215037))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3087008571(inputHEX60gensym116_3003215037) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003215038 = nimCopy(result_3003215038, HEX5BHEX5D_3003214772(ctxHEX60gensym116_3003215036.queryCacheFunctionExecution, inputHEX60gensym116_3003215037), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym116_3003215036.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym116_3003215036.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym116_3003215036.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym116_3003215036.statsFunctionExecution.time = addInt(ctxHEX60gensym116_3003215036.statsFunctionExecution.time, elapsed_2281701439(timerHEX60gensym116_3003215039));
    }
  };

  return result_3003215038;

}

function rawGet_3003151717(t_3003151720, key_3003151721, hc_3003151722, hc_3003151722_Idx) {
  var result_3003151723 = 0;

  BeforeRet: {
    hc_3003151722[hc_3003151722_Idx] = hash_3087008907(key_3003151721);
    if ((hc_3003151722[hc_3003151722_Idx] == 0)) {
    hc_3003151722[hc_3003151722_Idx] = 314159265;
    }
    
    if (((t_3003151720.data).length == 0)) {
    result_3003151723 = -1;
    break BeforeRet;
    }
    
    var h_3003151809 = (hc_3003151722[hc_3003151722_Idx] & (t_3003151720.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003151720.data[chckIndx(h_3003151809, 0, (t_3003151720.data).length - 1)].Field0)) break Label2;
          if (((t_3003151720.data[chckIndx(h_3003151809, 0, (t_3003151720.data).length - 1)].Field0 == hc_3003151722[hc_3003151722_Idx]) && HEX3DHEX3D_3087008910(t_3003151720.data[chckIndx(h_3003151809, 0, (t_3003151720.data).length - 1)].Field1, key_3003151721))) {
          result_3003151723 = h_3003151809;
          break BeforeRet;
          }
          
          h_3003151809 = nextTry_1308622883(h_3003151809, (t_3003151720.data).length - 1);
        }
    };
    result_3003151723 = subInt(-1, h_3003151809);
  };

  return result_3003151723;

}

function hasKey_3003211576(t_3003211579, key_3003211580) {
  var result_3003211581 = false;

    var hc_3003211582 = [0];
    result_3003211581 = (0 <= rawGet_3003151717(t_3003211579, key_3003211580, hc_3003211582, 0));

  return result_3003211581;

}

function contains_3003211570(t_3003211573, key_3003211574) {
  var result_3003211575 = false;

  BeforeRet: {
    result_3003211575 = hasKey_3003211576(t_3003211573, key_3003211574);
    break BeforeRet;
  };

  return result_3003211575;

}

function contains_3003211476(cache_3003211479, key_3003211480) {
  var result_3003211481 = false;

    result_3003211481 = contains_3003211570(cache_3003211479.table, key_3003211480);

  return result_3003211481;

}

function HEX5BHEX5D_3003211755(t_3003211758, key_3003211759) {
  var result_3003211760 = null;
  var result_3003211760_Idx = 0;

    var hcHEX60gensym22_3003211761 = [0];
    var indexHEX60gensym22_3003211768 = rawGet_3003151717(t_3003211758, key_3003211759, hcHEX60gensym22_3003211761, 0);
    if ((0 <= indexHEX60gensym22_3003211768)) {
    result_3003211760 = t_3003211758.data[chckIndx(indexHEX60gensym22_3003211768, 0, (t_3003211758.data).length - 1)]; result_3003211760_Idx = "Field2";
    }
    else {
    raiseKeyError_3003208745(key_3003211759);
    }
    

  return [result_3003211760, result_3003211760_Idx];

}

function remove_3003155165(L_3003155167, n_3003155168) {
    if ((n_3003155168 == L_3003155167.tail)) {
    L_3003155167.tail = n_3003155168.prev;
    }
    
    if ((n_3003155168 == L_3003155167.head)) {
    L_3003155167.head = n_3003155168.next;
    }
    
    if (!((n_3003155168.next == null))) {
    n_3003155168.next.prev = n_3003155168.prev;
    }
    
    if (!((n_3003155168.prev == null))) {
    n_3003155168.prev.next = n_3003155168.next;
    }
    

  
}

function prepend_3003153894(L_3003153896, n_3003153897) {
    n_3003153897.prev = null;
    n_3003153897.next = L_3003153896.head;
    if (!((L_3003153896.head == null))) {
    if (!((L_3003153896.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003153896.head.prev = n_3003153897;
    }
    
    L_3003153896.head = n_3003153897;
    if ((L_3003153896.tail == null)) {
    L_3003153896.tail = n_3003153897;
    }
    

  
}

function HEX5BHEX5D_3003211669(cache_3003211672, key_3003211673) {
    var Temporary1;

  var result_3003211674 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_3003211861 = (Temporary1 = HEX5BHEX5D_3003211755(cache_3003211672.table, key_3003211673), Temporary1)[0][Temporary1[1]];
    result_3003211674 = nimCopy(result_3003211674, node_3003211861.value.val, NTI3087007751);
    remove_3003155165(cache_3003211672.list, node_3003211861);
    prepend_3003153894(cache_3003211672.list, node_3003211861);

  return result_3003211674;

}

function computeSymbolValue_3003211931(ctxHEX60gensym112_3003211932, inputHEX60gensym112_3003211933, recordDependencyHEX60gensym112_3003211934) {
    var Temporary3;
    var Temporary5;

  var result_3003211935 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym112_3003211936 = startTimer_2281701428();
    ctxHEX60gensym112_3003211932.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym112_3003211932.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym112_3003212025 = getItem_3003185222(inputHEX60gensym112_3003211933);
    var keyHEX60gensym112_3003212026 = {Field0: nimCopy(null, itemHEX60gensym112_3003212025, NTI3019898905), Field1: 5};
    if (recordDependencyHEX60gensym112_3003211934) {
    recordDependency_3003175740(ctxHEX60gensym112_3003211932, itemHEX60gensym112_3003212025, 5);
    }
    
    var colorHEX60gensym112_3003212027 = nodeColor_3019901365(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, 0);
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym112_3003212027, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym112_3003212025));
    }
    
    if ((colorHEX60gensym112_3003212027 == 2)) {
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
    if (false) {
    markRed_3019913717(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, []);
    }
    
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    }
    else {
      if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
      }
      
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym112_3003212027 == 0)) {
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
    if (false) {
    markRed_3019913717(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, []);
    }
    
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026, true) == 0)) {
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym112_3003211932.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
      if (false) {
      markRed_3019913717(ctxHEX60gensym112_3003211932.depGraph, keyHEX60gensym112_3003212026, []);
      }
      
      if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
      }
      
      if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym112_3003212027 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym112_3003211932.enableLogging && contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087008487(HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933)));
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    force_3003192111(ctxHEX60gensym112_3003211932, keyHEX60gensym112_3003212026);
    }
    
    if (!(contains_3003211476(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3087008904(inputHEX60gensym112_3003211933) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003211935 = nimCopy(result_3003211935, HEX5BHEX5D_3003211669(ctxHEX60gensym112_3003211932.queryCacheSymbolValue, inputHEX60gensym112_3003211933), NTI3087007751);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym112_3003211932.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym112_3003211932.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym112_3003211932.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym112_3003211932.statsSymbolValue.time = addInt(ctxHEX60gensym112_3003211932.statsSymbolValue.time, elapsed_2281701439(timerHEX60gensym112_3003211936));
    }
  };

  return result_3003211935;

}

function voidValue_3087008460() {
  var result_3087008461 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008461 = nimCopy(result_3087008461, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008461;

}

function some_3003198692(val_3003198694) {
  var result_3003198695 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3003198695.has = true;
    result_3003198695.val = nimCopy(result_3003198695.val, val_3003198694, NTI3087007751);

  return result_3003198695;

}

function none_3003198700() {
  var result_3003198707 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_3003198707;

}

function none_3003198697() {
  var result_3003198699 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_3003198699 = nimCopy(result_3003198699, none_3003198700(), NTI3003166612);

  return result_3003198699;

}

function getValue_3003198157(ctxHEX60gensym95_3003198158, inputHEX60gensym95_3003198159) {
  var result_3003198165 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_3003198242(ctxHEX60gensym95_3003198158.queryCacheValue, inputHEX60gensym95_3003198159)) {
    result_3003198165 = nimCopy(result_3003198165, some_3003198692(HEX5BHEX5D_3003198435(ctxHEX60gensym95_3003198158.queryCacheValue, inputHEX60gensym95_3003198159)), NTI3003166612);
    break BeforeRet;
    }
    
    result_3003198165 = nimCopy(result_3003198165, none_3003198697(), NTI3003166612);
    break BeforeRet;
  };

  return result_3003198165;

}

function isSome_3137339424(self_3137339426) {
  var result_3137339427 = false;

    result_3137339427 = self_3137339426.has;

  return result_3137339427;

}

function isNone_3137339449(self_3137339451) {
  var result_3137339452 = false;

    result_3137339452 = !(self_3137339451.has);

  return result_3137339452;

}

function get_3137339441(self_3137339443) {
  var result_3137339444 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3137339449(self_3137339443)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3137339444 = self_3137339443.val;

  return result_3137339444;

}

function newAstFunctionValue_3087008483(node_3087008484, rev_3087008485) {
  var result_3087008486 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008486 = nimCopy(result_3087008486, {kind: 5, node: node_3087008484, rev: rev_3087008485, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008486;

}

function computeValueImpl_3003122486(ctx_3003122487, node_3003122488) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_3003231790 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym695_3003231792 = (ctx_3003122487.enableLogging || ctx_3003122487.enableQueryLogging);
    if (logQueryHEX60gensym695_3003231792) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym695_3003231792) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122488) || []));
    }
    
    try {
    Label3: {
      var expr_3003231803 = node_3003122488;
      var pos_3003231804 = 0;
      var _ = pos_3003231804;
      if ((expr_3003231803.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_3003122488.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3003231811 = Temporary4;
      result_3003231790 = nimCopy(result_3003231790, {kind: 3, intValue: value_3003231811, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 3)) {
      result_3003231790 = nimCopy(result_3003231790, {kind: 2, stringValue: nimCopy(null, node_3003122488.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 8)) {
      var function_3003231820 = HEX5BHEX5D_2986344532(node_3003122488, 0);
      var functionValue_3003231821 = computeValue_3003198726(ctx_3003122487, function_3003231820, true);
      if ((functionValue_3003231821.kind == 0)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var args_3003231830 = [];
      Label6: {
        var arg_3003231849 = null;
        var colontmp__2952790312 = [];
        colontmp__2952790312 = HEX5BHEX5D_3137341205(node_3003122488.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2952790313 = 0;
        var L_2952790314 = (colontmp__2952790312).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2952790313 < L_2952790314)) break Label8;
              arg_3003231849 = colontmp__2952790312[chckIndx(i_2952790313, 0, (colontmp__2952790312).length - 1)];
              var value_3003231850 = computeValue_3003198726(ctx_3003122487, arg_3003231849, true);
              if ((value_3003231850.kind == 0)) {
              result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_3003231850, NTI3087007751);
              args_3003231830.push(Temporary9);;
              i_2952790313 = addInt(i_2952790313, 1);
              if (!(((colontmp__2952790312).length == L_2952790314))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_3003231821.kind == 4)) {
        var Temporary10 = functionValue_3003231821;
        if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3087007750)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_3003231871 = [mnewString(0)];
      fmtRes_3003231871[0].push.apply(fmtRes_3003231871[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3019899100(fmtRes_3003231871, 0, function_3003231820.id, []);
      fmtRes_3003231871[0].push.apply(fmtRes_3003231871[0], [39,32,97,116,32]);;
      formatValue_3087008579(fmtRes_3003231871, 0, node_3003122488, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003231871[0], NTI33554449)]);
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_3003231821;
      if (ConstSet114[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3087007750)); }
      result_3003231790 = nimCopy(result_3003231790, Temporary11.impl(args_3003231830), NTI3087007751);
      break BeforeRet;
      }
      
      if ((functionValue_3003231821.kind == 5)) {
      var Temporary12 = functionValue_3003231821;
      if (ConstSet122[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
      var fec_3003231886 = getOrCreateFunctionExecutionContext_3003188635(ctx_3003122487, {node: Temporary12.node, arguments: nimCopy(null, args_3003231830, NTI3003185988), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_3003231790 = nimCopy(result_3003231790, computeFunctionExecution_3003215035(ctx_3003122487, fec_3003231886), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 7)) {
      if ((len_2986344536(node_3003122488) == 0)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, computeValue_3003198726(ctx_3003122487, last_2986344706(node_3003122488), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 4)) {
      if ((len_2986344536(node_3003122488) == 0)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, computeValue_3003198726(ctx_3003122487, HEX5BHEX5D_2986344532(node_3003122488, 0), true), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 1)) {
      var id_3003231899 = nimCopy(null, node_3003122488.reff, NTI2181038083);
      var symbols_3003231900 = computeSymbols_3003205356(ctx_3003122487, node_3003122488, true);
      if (contains_3003230776(symbols_3003231900, id_3003231899)) {
      var symbol_3003232067 = (Temporary13 = HEX5BHEX5D_3003231031(symbols_3003231900, id_3003231899), Temporary13)[0][Temporary13[1]];
      result_3003231790 = nimCopy(result_3003231790, computeSymbolValue_3003211931(ctx_3003122487, symbol_3003232067, true), NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 9)) {
      if ((len_2986344536(node_3003122488) < 2)) {
      result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3003232072 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_3003232072, 1) < len_2986344536(node_3003122488))) break Label15;
            try {
            var condition_3003232077 = HEX5BHEX5D_2986344532(node_3003122488, index_3003232072);
            var trueCase_3003232078 = HEX5BHEX5D_2986344532(node_3003122488, addInt(index_3003232072, 1));
            var conditionValue_3003232079 = computeValue_3003198726(ctx_3003122487, condition_3003232077, true);
            if ((conditionValue_3003232079.kind == 0)) {
            result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3003232079.kind == 3))) {
            var fmtRes_3003232092 = [mnewString(0)];
            fmtRes_3003232092[0].push.apply(fmtRes_3003232092[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3003232092, 0, conditionValue_3003232079, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003232092[0], NTI33554449)]);
            result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3003232079.intValue == 0))) {
            var trueCaseValue_3003232098 = computeValue_3003198726(ctx_3003122487, trueCase_3003232078, true);
            result_3003231790 = nimCopy(result_3003231790, trueCaseValue_3003232098, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3003232072 = addInt(index_3003232072, 2);
            }
          }
      };
      if (!((modInt(len_2986344536(node_3003122488), 2) == 0))) {
      var falseCaseValue_3003232099 = computeValue_3003198726(ctx_3003122487, last_2986344706(node_3003122488), true);
      result_3003231790 = nimCopy(result_3003231790, falseCaseValue_3003232099, NTI3087007751);
      break BeforeRet;
      }
      
      result_3003231790 = nimCopy(result_3003231790, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3003231803.kind == 11)) {
        var oHEX60gensym720_3003232106 = getValue_3003198157(ctx_3003122487, node_3003122488);
        if (!isSome_3137339424(oHEX60gensym720_3003232106)) Temporary19 = false; else {          var value_3003232152 = nimCopy(null, get_3137339441(oHEX60gensym720_3003232106), NTI3087007751);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_3003232152.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_3003232152;
      if (ConstSet123[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI3087007750)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_3003232157 = Temporary17;
      result_3003231790 = nimCopy(result_3003231790, newAstFunctionValue_3087008483(node_3003122488, addInt(currentRev_3003232157, 1)), NTI3087007751);
      break BeforeRet;
      }
      else {
        result_3003231790 = nimCopy(result_3003231790, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym695_3003231792 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008487(result_3003231790) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym695_3003231792) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003231790;

}

function getOrDefault_3003130832(t_3003130835, key_3003130836, default_3003130837) {
    var Temporary1;

  var result_3003130838 = null;

    var hcHEX60gensym159_3003130841 = [0];
    var indexHEX60gensym159_3003131200 = rawGet_3003130842(t_3003130835, key_3003130836, hcHEX60gensym159_3003130841, 0);
    if ((0 <= indexHEX60gensym159_3003131200)) {
    Temporary1 = t_3003130835.data[chckIndx(indexHEX60gensym159_3003131200, 0, (t_3003130835.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003130837;
    }
    
    result_3003130838 = Temporary1;

  return result_3003130838;

}

function newDoublyLinkedNode_3003131325(value_3003131327) {
  var result_3003131328 = null;

    result_3003131328 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_3003131328.value = nimCopy(result_3003131328.value, value_3003131327, NTI3003122104);

  return result_3003131328;

}

function mustRehash_3003131684(t_3003131686) {
  var result_3003131687 = false;

    if (!((t_3003131686.counter < (t_3003131686.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003131687 = ((mulInt((t_3003131686.data).length, 2) < mulInt(t_3003131686.counter, 3)) || (subInt((t_3003131686.data).length, t_3003131686.counter) < 4));

  return result_3003131687;

}

function rawInsert_3003132377(t_3003132381, data_3003132382, data_3003132382_Idx, key_3003132383, val_3003132384, hc_3003132385, h_3003132386) {
    data_3003132382[data_3003132382_Idx][chckIndx(h_3003132386, 0, (data_3003132382[data_3003132382_Idx]).length - 1)].Field1 = key_3003132383;
    data_3003132382[data_3003132382_Idx][chckIndx(h_3003132386, 0, (data_3003132382[data_3003132382_Idx]).length - 1)].Field2 = val_3003132384;
    data_3003132382[data_3003132382_Idx][chckIndx(h_3003132386, 0, (data_3003132382[data_3003132382_Idx]).length - 1)].Field0 = hc_3003132385;

  
}

function enlarge_3003131941(t_3003131944) {
    var n_3003131947 = [];
    n_3003131947 = new Array(chckRange(mulInt((t_3003131944.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003131944.data).length, 2), 0, 2147483647) ; ++i) { n_3003131947[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003131944.data; t_3003131944.data = n_3003131947; n_3003131947 = Temporary1;    Label2: {
      var i_3003132045 = 0;
      var colontmp__2952790370 = 0;
      colontmp__2952790370 = (n_3003131947).length - 1;
      var res_2952790371 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790371 <= colontmp__2952790370)) break Label4;
            i_3003132045 = res_2952790371;
            var eh_3003132126 = n_3003131947[chckIndx(i_3003132045, 0, (n_3003131947).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003132126)) {
            var j_3003132130 = (eh_3003132126 & (t_3003131944.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003131944.data[chckIndx(j_3003132130, 0, (t_3003131944.data).length - 1)].Field0)) break Label6;
                  j_3003132130 = nextTry_1308622883(j_3003132130, (t_3003131944.data).length - 1);
                }
            };
            rawInsert_3003132377(t_3003131944, t_3003131944, "data", n_3003131947[chckIndx(i_3003132045, 0, (n_3003131947).length - 1)].Field1, n_3003131947[chckIndx(i_3003132045, 0, (n_3003131947).length - 1)].Field2, eh_3003132126, j_3003132130);
            }
            
            res_2952790371 = addInt(res_2952790371, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003132627(t_3003132630, key_3003132631, hc_3003132632) {
  var result_3003132633 = 0;

  BeforeRet: {
    if (((t_3003132630.data).length == 0)) {
    result_3003132633 = -1;
    break BeforeRet;
    }
    
    var h_3003132718 = (hc_3003132632 & (t_3003132630.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003132630.data[chckIndx(h_3003132718, 0, (t_3003132630.data).length - 1)].Field0)) break Label2;
          if (((t_3003132630.data[chckIndx(h_3003132718, 0, (t_3003132630.data).length - 1)].Field0 == hc_3003132632) && (t_3003132630.data[chckIndx(h_3003132718, 0, (t_3003132630.data).length - 1)].Field1 == key_3003132631))) {
          result_3003132633 = h_3003132718;
          break BeforeRet;
          }
          
          h_3003132718 = nextTry_1308622883(h_3003132718, (t_3003132630.data).length - 1);
        }
    };
    result_3003132633 = subInt(-1, h_3003132718);
  };

  return result_3003132633;

}

function HEX5BHEX5DHEX3D_3003131416(t_3003131419, key_3003131420, val_3003131421) {
    if (((t_3003131419.data).length == 0)) {
    var correctSizeHEX60gensym164_3003131504 = slotsNeeded_1308622891(32);
    t_3003131419.counter = 0;
    t_3003131419.data = new Array(chckRange(correctSizeHEX60gensym164_3003131504, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_3003131504, 0, 2147483647) ; ++i) { t_3003131419.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003131509 = [0];
    var index_3003131516 = rawGet_3003130842(t_3003131419, key_3003131420, hc_3003131509, 0);
    if ((0 <= index_3003131516)) {
    t_3003131419.data[chckIndx(index_3003131516, 0, (t_3003131419.data).length - 1)].Field2 = val_3003131421;
    }
    else {
      if (((t_3003131419.data).length == 0)) {
      var correctSizeHEX60gensym167_3003131679 = slotsNeeded_1308622891(32);
      t_3003131419.counter = 0;
      t_3003131419.data = new Array(chckRange(correctSizeHEX60gensym167_3003131679, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym167_3003131679, 0, 2147483647) ; ++i) { t_3003131419.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003131684(t_3003131419)) {
      enlarge_3003131941(t_3003131419);
      index_3003131516 = rawGetKnownHC_3003132627(t_3003131419, key_3003131420, hc_3003131509[0]);
      }
      
      index_3003131516 = subInt(-1, index_3003131516);
      rawInsert_3003132377(t_3003131419, t_3003131419, "data", key_3003131420, val_3003131421, hc_3003131509[0], index_3003131516);
      t_3003131419.counter = addInt(t_3003131419.counter, 1);
    }
    

  
}

function len_3003133447(t_3003133450) {
  var result_3003133451 = 0;

    result_3003133451 = t_3003133450.counter;

  return result_3003133451;

}

function len_3003133364(cache_3003133367) {
  var result_3003133368 = 0;

    result_3003133368 = len_3003133447(cache_3003133367.table);

  return result_3003133368;

}

function del_3003133539(t_3003133542, key_3003133543) {
    var hc_3003133544 = [0];
    var i_3003133551 = rawGet_3003130842(t_3003133542, key_3003133543, hc_3003133544, 0);
    var mskHEX60gensym36_3003133555 = (t_3003133542.data).length - 1;
    if ((0 <= i_3003133551)) {
    t_3003133542.counter = subInt(t_3003133542.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003133562 = i_3003133551;
            var rHEX60gensym36_3003133563 = jHEX60gensym36_3003133562;
            t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field0 = 0;
            t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field1 = null;
            t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003133551 = (addInt(i_3003133551, 1) & mskHEX60gensym36_3003133555);
                  if (isEmpty_1308622877(t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003133563 = (t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)].Field0 & mskHEX60gensym36_3003133555);
                  if (!(((((rHEX60gensym36_3003133563 <= i_3003133551) && (jHEX60gensym36_3003133562 < rHEX60gensym36_3003133563)) || ((jHEX60gensym36_3003133562 < rHEX60gensym36_3003133563) && (i_3003133551 < jHEX60gensym36_3003133562))) || ((i_3003133551 < jHEX60gensym36_3003133562) && (rHEX60gensym36_3003133563 <= i_3003133551))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003133542.data[chckIndx(jHEX60gensym36_3003133562, 0, (t_3003133542.data).length - 1)] = nimCopy(t_3003133542.data[chckIndx(jHEX60gensym36_3003133562, 0, (t_3003133542.data).length - 1)], t_3003133542.data[chckIndx(i_3003133551, 0, (t_3003133542.data).length - 1)], NTI3003122140);
          }
      };
    };
    }
    

  
}

function resize_3003133282(cache_3003133285) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003133285.capacity < len_3003133364(cache_3003133285))) break Label2;
          var t_3003133452 = cache_3003133285.list.tail;
          if (cache_3003133285.recordRemovedKeys) {
          incl_3003127646(cache_3003133285.removedKeys, t_3003133452.value.key);
          }
          
          del_3003133539(cache_3003133285.table, t_3003133452.value.key);
          remove_3003134298(cache_3003133285.list, t_3003133452);
        }
    };

  
}

function addNewNode_3003131317(cache_3003131320, key_3003131321, val_3003131322) {
    var node_3003131352 = newDoublyLinkedNode_3003131325({key: key_3003131321, val: nimCopy(null, val_3003131322, NTI3087007751)});
    HEX5BHEX5DHEX3D_3003131416(cache_3003131320.table, key_3003131321, node_3003131352);
    prepend_3003133027(cache_3003131320.list, node_3003131352);
    if (cache_3003131320.recordRemovedKeys) {
    excl_3003126487(cache_3003131320.removedKeys, key_3003131321);
    }
    
    resize_3003133282(cache_3003131320);

  
}

function HEX5BHEX5DHEX3D_3003130737(cache_3003130740, key_3003130741, val_3003130742) {
    var node_3003131290 = getOrDefault_3003130832(cache_3003130740.table, key_3003130741, null);
    if ((node_3003131290 == null)) {
    addNewNode_3003131317(cache_3003130740, key_3003130741, val_3003130742);
    }
    else {
      node_3003131290.value.val = nimCopy(node_3003131290.value.val, val_3003130742, NTI3087007751);
      remove_3003134298(cache_3003130740.list, node_3003131290);
      prepend_3003133027(cache_3003130740.list, node_3003131290);
    }
    

  
}

function fingerprint_3087008527(value_3087008528) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008529 = [];

  BeforeRet: {
    switch (value_3087008528.kind) {
    case 0:
      result_3087008529 = nimCopy(null, [value_3087008528.kind], NTI3087008193);
      break BeforeRet;
      break;
    case 1:
      result_3087008529 = nimCopy(null, [value_3087008528.kind], NTI3087008193);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3087008528;
      if (ConstSet124[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, [value_3087008528.kind, Temporary1.intValue], NTI3019899213);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3087008528;
      if (ConstSet125[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, [value_3087008528.kind, hash_1325400491(Temporary2.stringValue)], NTI3019899213);
      break BeforeRet;
      break;
    case 4:
      result_3087008529 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3087008528;
      if (ConstSet126[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007750)); }
      var Temporary4 = value_3087008528;
      if (ConstSet127[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, [value_3087008528.kind, hash_2986346803(Temporary3.node), Temporary4.rev], NTI3087008383);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3087008528;
      if (ConstSet128[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007750)); }
      result_3087008529 = nimCopy(null, HEX26_3087008353([value_3087008528.kind], fingerprint_3087008346(Temporary5.typ)), NTI3087008199);
      break BeforeRet;
      break;
    }
  };

  return result_3087008529;

}

function initDoublyLinkedList_3003134765() {
  var result_3003134767 = ({head: null, tail: null});

  return result_3003134767;

}

function initTable_3003134771(initialSize_3003134774) {
  var result_3003134775 = ({data: [], counter: 0});

    var correctSizeHEX60gensym177_3003134777 = slotsNeeded_1308622891(chckRange(initialSize_3003134774, 0, 2147483647));
    result_3003134775.counter = 0;
    result_3003134775.data = new Array(chckRange(correctSizeHEX60gensym177_3003134777, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym177_3003134777, 0, 2147483647) ; ++i) { result_3003134775.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003134775;

}

function newLruCache_3003134755(capacity_3003134758, recordRemovedKeys_3003134759) {
  var result_3003134760 = null;

    result_3003134760 = {capacity: capacity_3003134758, list: initDoublyLinkedList_3003134765(), table: initTable_3003134771(correctSize_3036676117(capacity_3003134758)), recordRemovedKeys: recordRemovedKeys_3003134759, removedKeys: ({data: [], counter: 0})};

  return result_3003134760;

}

function newCache_3003134750(capacity_3003134753) {
  var result_3003134754 = null;

    result_3003134754 = newLruCache_3003134755(capacity_3003134753, false);

  return result_3003134754;

}

function init_3003134745(result_3003134748, result_3003134748_Idx, capacity_3003134749) {
    result_3003134748[result_3003134748_Idx] = newCache_3003134750(capacity_3003134749);

  
}

function some_3003185199(val_3003185201) {
  var result_3003185202 = ({val: null});

    if (!(!((val_3003185201 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3003185202.val = val_3003185201;

  return result_3003185202;

}

function rawGet_3003143602(t_3003143605, key_3003143606, hc_3003143607, hc_3003143607_Idx) {
  var result_3003143608 = 0;

  BeforeRet: {
    hc_3003143607[hc_3003143607_Idx] = hash_3003122712(key_3003143606);
    if ((hc_3003143607[hc_3003143607_Idx] == 0)) {
    hc_3003143607[hc_3003143607_Idx] = 314159265;
    }
    
    if (((t_3003143605.data).length == 0)) {
    result_3003143608 = -1;
    break BeforeRet;
    }
    
    var h_3003143697 = (hc_3003143607[hc_3003143607_Idx] & (t_3003143605.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003143605.data[chckIndx(h_3003143697, 0, (t_3003143605.data).length - 1)].Field0)) break Label2;
          if (((t_3003143605.data[chckIndx(h_3003143697, 0, (t_3003143605.data).length - 1)].Field0 == hc_3003143607[hc_3003143607_Idx]) && HEX3DHEX3D_3003123049(t_3003143605.data[chckIndx(h_3003143697, 0, (t_3003143605.data).length - 1)].Field1, key_3003143606))) {
          result_3003143608 = h_3003143697;
          break BeforeRet;
          }
          
          h_3003143697 = nextTry_1308622883(h_3003143697, (t_3003143605.data).length - 1);
        }
    };
    result_3003143608 = subInt(-1, h_3003143697);
  };

  return result_3003143608;

}

function getOrDefault_3003185473(t_3003185476, key_3003185477, default_3003185478) {
    var Temporary1;

  var result_3003185479 = null;

    var hcHEX60gensym428_3003185482 = [0];
    var indexHEX60gensym428_3003185489 = rawGet_3003143602(t_3003185476, key_3003185477, hcHEX60gensym428_3003185482, 0);
    if ((0 <= indexHEX60gensym428_3003185489)) {
    Temporary1 = t_3003185476.data[chckIndx(indexHEX60gensym428_3003185489, 0, (t_3003185476.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003185478;
    }
    
    result_3003185479 = Temporary1;

  return result_3003185479;

}

function newDoublyLinkedNode_3003185605(value_3003185607) {
  var result_3003185608 = null;

    result_3003185608 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003185608.value = nimCopy(result_3003185608.value, value_3003185607, NTI3003121863);

  return result_3003185608;

}

function mustRehash_3003185946(t_3003185948) {
  var result_3003185949 = false;

    if (!((t_3003185948.counter < (t_3003185948.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003185949 = ((mulInt((t_3003185948.data).length, 2) < mulInt(t_3003185948.counter, 3)) || (subInt((t_3003185948.data).length, t_3003185948.counter) < 4));

  return result_3003185949;

}

function rawInsert_3003186639(t_3003186643, data_3003186644, data_3003186644_Idx, key_3003186645, val_3003186646, hc_3003186647, h_3003186648) {
    data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field1 = nimCopy(data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field1, key_3003186645, NTI3019898905);
    data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field2 = val_3003186646;
    data_3003186644[data_3003186644_Idx][chckIndx(h_3003186648, 0, (data_3003186644[data_3003186644_Idx]).length - 1)].Field0 = hc_3003186647;

  
}

function enlarge_3003186203(t_3003186206) {
    var n_3003186209 = [];
    n_3003186209 = new Array(chckRange(mulInt((t_3003186206.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003186206.data).length, 2), 0, 2147483647) ; ++i) { n_3003186209[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003186206.data; t_3003186206.data = n_3003186209; n_3003186209 = Temporary1;    Label2: {
      var i_3003186307 = 0;
      var colontmp__2952790381 = 0;
      colontmp__2952790381 = (n_3003186209).length - 1;
      var res_2952790382 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790382 <= colontmp__2952790381)) break Label4;
            i_3003186307 = res_2952790382;
            var eh_3003186388 = n_3003186209[chckIndx(i_3003186307, 0, (n_3003186209).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003186388)) {
            var j_3003186392 = (eh_3003186388 & (t_3003186206.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003186206.data[chckIndx(j_3003186392, 0, (t_3003186206.data).length - 1)].Field0)) break Label6;
                  j_3003186392 = nextTry_1308622883(j_3003186392, (t_3003186206.data).length - 1);
                }
            };
            rawInsert_3003186639(t_3003186206, t_3003186206, "data", n_3003186209[chckIndx(i_3003186307, 0, (n_3003186209).length - 1)].Field1, n_3003186209[chckIndx(i_3003186307, 0, (n_3003186209).length - 1)].Field2, eh_3003186388, j_3003186392);
            }
            
            res_2952790382 = addInt(res_2952790382, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003186889(t_3003186892, key_3003186893, hc_3003186894) {
  var result_3003186895 = 0;

  BeforeRet: {
    if (((t_3003186892.data).length == 0)) {
    result_3003186895 = -1;
    break BeforeRet;
    }
    
    var h_3003186980 = (hc_3003186894 & (t_3003186892.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003186892.data[chckIndx(h_3003186980, 0, (t_3003186892.data).length - 1)].Field0)) break Label2;
          if (((t_3003186892.data[chckIndx(h_3003186980, 0, (t_3003186892.data).length - 1)].Field0 == hc_3003186894) && HEX3DHEX3D_3003123049(t_3003186892.data[chckIndx(h_3003186980, 0, (t_3003186892.data).length - 1)].Field1, key_3003186893))) {
          result_3003186895 = h_3003186980;
          break BeforeRet;
          }
          
          h_3003186980 = nextTry_1308622883(h_3003186980, (t_3003186892.data).length - 1);
        }
    };
    result_3003186895 = subInt(-1, h_3003186980);
  };

  return result_3003186895;

}

function HEX5BHEX5DHEX3D_3003185678(t_3003185681, key_3003185682, val_3003185683) {
    if (((t_3003185681.data).length == 0)) {
    var correctSizeHEX60gensym431_3003185766 = slotsNeeded_1308622891(32);
    t_3003185681.counter = 0;
    t_3003185681.data = new Array(chckRange(correctSizeHEX60gensym431_3003185766, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym431_3003185766, 0, 2147483647) ; ++i) { t_3003185681.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003185771 = [0];
    var index_3003185778 = rawGet_3003143602(t_3003185681, key_3003185682, hc_3003185771, 0);
    if ((0 <= index_3003185778)) {
    t_3003185681.data[chckIndx(index_3003185778, 0, (t_3003185681.data).length - 1)].Field2 = val_3003185683;
    }
    else {
      if (((t_3003185681.data).length == 0)) {
      var correctSizeHEX60gensym434_3003185941 = slotsNeeded_1308622891(32);
      t_3003185681.counter = 0;
      t_3003185681.data = new Array(chckRange(correctSizeHEX60gensym434_3003185941, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym434_3003185941, 0, 2147483647) ; ++i) { t_3003185681.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003185946(t_3003185681)) {
      enlarge_3003186203(t_3003185681);
      index_3003185778 = rawGetKnownHC_3003186889(t_3003185681, key_3003185682, hc_3003185771[0]);
      }
      
      index_3003185778 = subInt(-1, index_3003185778);
      rawInsert_3003186639(t_3003185681, t_3003185681, "data", key_3003185682, val_3003185683, hc_3003185771[0], index_3003185778);
      t_3003185681.counter = addInt(t_3003185681.counter, 1);
    }
    

  
}

function prepend_3003144582(L_3003144584, n_3003144585) {
    n_3003144585.prev = null;
    n_3003144585.next = L_3003144584.head;
    if (!((L_3003144584.head == null))) {
    if (!((L_3003144584.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003144584.head.prev = n_3003144585;
    }
    
    L_3003144584.head = n_3003144585;
    if ((L_3003144584.tail == null)) {
    L_3003144584.tail = n_3003144585;
    }
    

  
}

function len_3003187500(t_3003187503) {
  var result_3003187504 = 0;

    result_3003187504 = t_3003187503.counter;

  return result_3003187504;

}

function len_3003187417(cache_3003187420) {
  var result_3003187421 = 0;

    result_3003187421 = len_3003187500(cache_3003187420.table);

  return result_3003187421;

}

function del_3003187592(t_3003187595, key_3003187596) {
    var hc_3003187597 = [0];
    var i_3003187604 = rawGet_3003143602(t_3003187595, key_3003187596, hc_3003187597, 0);
    var mskHEX60gensym36_3003187608 = (t_3003187595.data).length - 1;
    if ((0 <= i_3003187604)) {
    t_3003187595.counter = subInt(t_3003187595.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003187615 = i_3003187604;
            var rHEX60gensym36_3003187616 = jHEX60gensym36_3003187615;
            t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field0 = 0;
            t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field1 = nimCopy(t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003187604 = (addInt(i_3003187604, 1) & mskHEX60gensym36_3003187608);
                  if (isEmpty_1308622877(t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003187616 = (t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)].Field0 & mskHEX60gensym36_3003187608);
                  if (!(((((rHEX60gensym36_3003187616 <= i_3003187604) && (jHEX60gensym36_3003187615 < rHEX60gensym36_3003187616)) || ((jHEX60gensym36_3003187615 < rHEX60gensym36_3003187616) && (i_3003187604 < jHEX60gensym36_3003187615))) || ((i_3003187604 < jHEX60gensym36_3003187615) && (rHEX60gensym36_3003187616 <= i_3003187604))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003187595.data[chckIndx(jHEX60gensym36_3003187615, 0, (t_3003187595.data).length - 1)] = nimCopy(t_3003187595.data[chckIndx(jHEX60gensym36_3003187615, 0, (t_3003187595.data).length - 1)], t_3003187595.data[chckIndx(i_3003187604, 0, (t_3003187595.data).length - 1)], NTI3003121899);
          }
      };
    };
    }
    

  
}

function remove_3003144254(L_3003144256, n_3003144257) {
    if ((n_3003144257 == L_3003144256.tail)) {
    L_3003144256.tail = n_3003144257.prev;
    }
    
    if ((n_3003144257 == L_3003144256.head)) {
    L_3003144256.head = n_3003144257.next;
    }
    
    if (!((n_3003144257.next == null))) {
    n_3003144257.next.prev = n_3003144257.prev;
    }
    
    if (!((n_3003144257.prev == null))) {
    n_3003144257.prev.next = n_3003144257.next;
    }
    

  
}

function resize_3003187335(cache_3003187338) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003187338.capacity < len_3003187417(cache_3003187338))) break Label2;
          var t_3003187505 = cache_3003187338.list.tail;
          if (cache_3003187338.recordRemovedKeys) {
          incl_3003179214(cache_3003187338.removedKeys, t_3003187505.value.key);
          }
          
          del_3003187592(cache_3003187338.table, t_3003187505.value.key);
          remove_3003144254(cache_3003187338.list, t_3003187505);
        }
    };

  
}

function addNewNode_3003185597(cache_3003185600, key_3003185601, val_3003185602) {
    var node_3003185614 = newDoublyLinkedNode_3003185605({key: nimCopy(null, key_3003185601, NTI3019898905), val: val_3003185602});
    HEX5BHEX5DHEX3D_3003185678(cache_3003185600.table, key_3003185601, node_3003185614);
    prepend_3003144582(cache_3003185600.list, node_3003185614);
    if (cache_3003185600.recordRemovedKeys) {
    excl_3003178043(cache_3003185600.removedKeys, key_3003185601);
    }
    
    resize_3003187335(cache_3003185600);

  
}

function HEX5BHEX5DHEX3D_3003185378(cache_3003185381, key_3003185382, val_3003185383) {
    var node_3003185570 = getOrDefault_3003185473(cache_3003185381.table, key_3003185382, null);
    if ((node_3003185570 == null)) {
    addNewNode_3003185597(cache_3003185381, key_3003185382, val_3003185383);
    }
    else {
      node_3003185570.value.val = val_3003185383;
      remove_3003144254(cache_3003185381.list, node_3003185570);
      prepend_3003144582(cache_3003185381.list, node_3003185570);
    }
    

  
}

function newSymbol_3003191823(ctxHEX60gensym86_3003191824, dataHEX60gensym86_3003191825) {
  var result_3003191826 = null;

  BeforeRet: {
    var itemHEX60gensym86_3003191827 = getItem_3003185222(dataHEX60gensym86_3003191825);
    var keyHEX60gensym86_3003191828 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym86_3003191827, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym86_3003191824.depGraph.changed, keyHEX60gensym86_3003191828, ctxHEX60gensym86_3003191824.depGraph.revision);
    HEX5BHEX5DHEX3D_3003185378(ctxHEX60gensym86_3003191824.itemsSymbol, itemHEX60gensym86_3003191827, dataHEX60gensym86_3003191825);
    result_3003191826 = dataHEX60gensym86_3003191825;
    break BeforeRet;
  };

  return result_3003191826;

}

function none_3003185215() {
  var result_3003185221 = ({val: null});

  return result_3003185221;

}

function none_3003185212() {
  var result_3003185214 = ({val: null});

    result_3003185214 = nimCopy(result_3003185214, none_3003185215(), NTI3087008904);

  return result_3003185214;

}

function computeSymbolImpl_3003122489(ctx_3003122490, node_3003122491) {
      var Temporary4;

  var result_3003232164 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym721_3003232166 = (ctx_3003122490.enableLogging || ctx_3003122490.enableQueryLogging);
    if (logQueryHEX60gensym721_3003232166) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym721_3003232166) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122491) || []));
    }
    
    try {
    Label3: {
      var expr_3003232237 = node_3003122491;
      var pos_3003232238 = 0;
      var _ = pos_3003232238;
      if ((expr_3003232237.kind == 1)) {
      var symbols_3003232245 = computeSymbols_3003205356(ctx_3003122490, node_3003122491, true);
      if (contains_3003230776(symbols_3003232245, node_3003122491.reff)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199((Temporary4 = HEX5BHEX5D_3003231031(symbols_3003232245, node_3003122491.reff), Temporary4)[0][Temporary4[1]]), NTI3087008904);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3003232237.kind == 4)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199(newSymbol_3003191823(ctx_3003122490, {kind: 0, id: nimCopy(null, node_3003122491.id, NTI2181038083), node: node_3003122491, name: nimCopy(null, node_3003122491.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008904);
      break BeforeRet;
      }
      else {
      if ((expr_3003232237.kind == 5)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199(newSymbol_3003191823(ctx_3003122490, {kind: 0, id: nimCopy(null, node_3003122491.id, NTI2181038083), node: node_3003122491, name: nimCopy(null, node_3003122491.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008904);
      break BeforeRet;
      }
      else {
      if ((expr_3003232237.kind == 6)) {
      result_3003232164 = nimCopy(result_3003232164, some_3003185199(newSymbol_3003191823(ctx_3003122490, {kind: 0, id: nimCopy(null, node_3003122491.id, NTI2181038083), node: node_3003122491, name: nimCopy(null, node_3003122491.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3087008904);
      break BeforeRet;
      }
      else {
        var fmtRes_3003232440 = [mnewString(0)];
        fmtRes_3003232440[0].push.apply(fmtRes_3003232440[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3087008579(fmtRes_3003232440, 0, node_3003122491, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3003232440[0], NTI33554449)]);
        result_3003232164 = nimCopy(result_3003232164, none_3003185212(), NTI3087008904);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym721_3003232166 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3003175100(result_3003232164) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym721_3003232166) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003232164;

}

function getOrDefault_3003135144(t_3003135147, key_3003135148, default_3003135149) {
    var Temporary1;

  var result_3003135150 = null;

    var hcHEX60gensym180_3003135153 = [0];
    var indexHEX60gensym180_3003135512 = rawGet_3003135154(t_3003135147, key_3003135148, hcHEX60gensym180_3003135153, 0);
    if ((0 <= indexHEX60gensym180_3003135512)) {
    Temporary1 = t_3003135147.data[chckIndx(indexHEX60gensym180_3003135512, 0, (t_3003135147.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003135149;
    }
    
    result_3003135150 = Temporary1;

  return result_3003135150;

}

function newDoublyLinkedNode_3003135637(value_3003135639) {
  var result_3003135640 = null;

    result_3003135640 = ({next: null, prev: null, value: ({key: null, val: ({val: null})})});
    result_3003135640.value = nimCopy(result_3003135640.value, value_3003135639, NTI3003122175);

  return result_3003135640;

}

function mustRehash_3003135987(t_3003135989) {
  var result_3003135990 = false;

    if (!((t_3003135989.counter < (t_3003135989.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003135990 = ((mulInt((t_3003135989.data).length, 2) < mulInt(t_3003135989.counter, 3)) || (subInt((t_3003135989.data).length, t_3003135989.counter) < 4));

  return result_3003135990;

}

function rawInsert_3003136680(t_3003136684, data_3003136685, data_3003136685_Idx, key_3003136686, val_3003136687, hc_3003136688, h_3003136689) {
    data_3003136685[data_3003136685_Idx][chckIndx(h_3003136689, 0, (data_3003136685[data_3003136685_Idx]).length - 1)].Field1 = key_3003136686;
    data_3003136685[data_3003136685_Idx][chckIndx(h_3003136689, 0, (data_3003136685[data_3003136685_Idx]).length - 1)].Field2 = val_3003136687;
    data_3003136685[data_3003136685_Idx][chckIndx(h_3003136689, 0, (data_3003136685[data_3003136685_Idx]).length - 1)].Field0 = hc_3003136688;

  
}

function enlarge_3003136244(t_3003136247) {
    var n_3003136250 = [];
    n_3003136250 = new Array(chckRange(mulInt((t_3003136247.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003136247.data).length, 2), 0, 2147483647) ; ++i) { n_3003136250[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003136247.data; t_3003136247.data = n_3003136250; n_3003136250 = Temporary1;    Label2: {
      var i_3003136348 = 0;
      var colontmp__2952790390 = 0;
      colontmp__2952790390 = (n_3003136250).length - 1;
      var res_2952790391 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790391 <= colontmp__2952790390)) break Label4;
            i_3003136348 = res_2952790391;
            var eh_3003136429 = n_3003136250[chckIndx(i_3003136348, 0, (n_3003136250).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003136429)) {
            var j_3003136433 = (eh_3003136429 & (t_3003136247.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003136247.data[chckIndx(j_3003136433, 0, (t_3003136247.data).length - 1)].Field0)) break Label6;
                  j_3003136433 = nextTry_1308622883(j_3003136433, (t_3003136247.data).length - 1);
                }
            };
            rawInsert_3003136680(t_3003136247, t_3003136247, "data", n_3003136250[chckIndx(i_3003136348, 0, (n_3003136250).length - 1)].Field1, n_3003136250[chckIndx(i_3003136348, 0, (n_3003136250).length - 1)].Field2, eh_3003136429, j_3003136433);
            }
            
            res_2952790391 = addInt(res_2952790391, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003136930(t_3003136933, key_3003136934, hc_3003136935) {
  var result_3003136936 = 0;

  BeforeRet: {
    if (((t_3003136933.data).length == 0)) {
    result_3003136936 = -1;
    break BeforeRet;
    }
    
    var h_3003137021 = (hc_3003136935 & (t_3003136933.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003136933.data[chckIndx(h_3003137021, 0, (t_3003136933.data).length - 1)].Field0)) break Label2;
          if (((t_3003136933.data[chckIndx(h_3003137021, 0, (t_3003136933.data).length - 1)].Field0 == hc_3003136935) && (t_3003136933.data[chckIndx(h_3003137021, 0, (t_3003136933.data).length - 1)].Field1 == key_3003136934))) {
          result_3003136936 = h_3003137021;
          break BeforeRet;
          }
          
          h_3003137021 = nextTry_1308622883(h_3003137021, (t_3003136933.data).length - 1);
        }
    };
    result_3003136936 = subInt(-1, h_3003137021);
  };

  return result_3003136936;

}

function HEX5BHEX5DHEX3D_3003135719(t_3003135722, key_3003135723, val_3003135724) {
    if (((t_3003135722.data).length == 0)) {
    var correctSizeHEX60gensym185_3003135807 = slotsNeeded_1308622891(32);
    t_3003135722.counter = 0;
    t_3003135722.data = new Array(chckRange(correctSizeHEX60gensym185_3003135807, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym185_3003135807, 0, 2147483647) ; ++i) { t_3003135722.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003135812 = [0];
    var index_3003135819 = rawGet_3003135154(t_3003135722, key_3003135723, hc_3003135812, 0);
    if ((0 <= index_3003135819)) {
    t_3003135722.data[chckIndx(index_3003135819, 0, (t_3003135722.data).length - 1)].Field2 = val_3003135724;
    }
    else {
      if (((t_3003135722.data).length == 0)) {
      var correctSizeHEX60gensym188_3003135982 = slotsNeeded_1308622891(32);
      t_3003135722.counter = 0;
      t_3003135722.data = new Array(chckRange(correctSizeHEX60gensym188_3003135982, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym188_3003135982, 0, 2147483647) ; ++i) { t_3003135722.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003135987(t_3003135722)) {
      enlarge_3003136244(t_3003135722);
      index_3003135819 = rawGetKnownHC_3003136930(t_3003135722, key_3003135723, hc_3003135812[0]);
      }
      
      index_3003135819 = subInt(-1, index_3003135819);
      rawInsert_3003136680(t_3003135722, t_3003135722, "data", key_3003135723, val_3003135724, hc_3003135812[0], index_3003135819);
      t_3003135722.counter = addInt(t_3003135722.counter, 1);
    }
    

  
}

function len_3003137750(t_3003137753) {
  var result_3003137754 = 0;

    result_3003137754 = t_3003137753.counter;

  return result_3003137754;

}

function len_3003137667(cache_3003137670) {
  var result_3003137671 = 0;

    result_3003137671 = len_3003137750(cache_3003137670.table);

  return result_3003137671;

}

function del_3003137842(t_3003137845, key_3003137846) {
    var hc_3003137847 = [0];
    var i_3003137854 = rawGet_3003135154(t_3003137845, key_3003137846, hc_3003137847, 0);
    var mskHEX60gensym36_3003137858 = (t_3003137845.data).length - 1;
    if ((0 <= i_3003137854)) {
    t_3003137845.counter = subInt(t_3003137845.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003137865 = i_3003137854;
            var rHEX60gensym36_3003137866 = jHEX60gensym36_3003137865;
            t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field0 = 0;
            t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field1 = null;
            t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003137854 = (addInt(i_3003137854, 1) & mskHEX60gensym36_3003137858);
                  if (isEmpty_1308622877(t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003137866 = (t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)].Field0 & mskHEX60gensym36_3003137858);
                  if (!(((((rHEX60gensym36_3003137866 <= i_3003137854) && (jHEX60gensym36_3003137865 < rHEX60gensym36_3003137866)) || ((jHEX60gensym36_3003137865 < rHEX60gensym36_3003137866) && (i_3003137854 < jHEX60gensym36_3003137865))) || ((i_3003137854 < jHEX60gensym36_3003137865) && (rHEX60gensym36_3003137866 <= i_3003137854))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003137845.data[chckIndx(jHEX60gensym36_3003137865, 0, (t_3003137845.data).length - 1)] = nimCopy(t_3003137845.data[chckIndx(jHEX60gensym36_3003137865, 0, (t_3003137845.data).length - 1)], t_3003137845.data[chckIndx(i_3003137854, 0, (t_3003137845.data).length - 1)], NTI3003122211);
          }
      };
    };
    }
    

  
}

function resize_3003137585(cache_3003137588) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003137588.capacity < len_3003137667(cache_3003137588))) break Label2;
          var t_3003137755 = cache_3003137588.list.tail;
          if (cache_3003137588.recordRemovedKeys) {
          incl_3003127646(cache_3003137588.removedKeys, t_3003137755.value.key);
          }
          
          del_3003137842(cache_3003137588.table, t_3003137755.value.key);
          remove_3003138601(cache_3003137588.list, t_3003137755);
        }
    };

  
}

function addNewNode_3003135629(cache_3003135632, key_3003135633, val_3003135634) {
    var node_3003135655 = newDoublyLinkedNode_3003135637({key: key_3003135633, val: nimCopy(null, val_3003135634, NTI3087008904)});
    HEX5BHEX5DHEX3D_3003135719(cache_3003135632.table, key_3003135633, node_3003135655);
    prepend_3003137330(cache_3003135632.list, node_3003135655);
    if (cache_3003135632.recordRemovedKeys) {
    excl_3003126487(cache_3003135632.removedKeys, key_3003135633);
    }
    
    resize_3003137585(cache_3003135632);

  
}

function HEX5BHEX5DHEX3D_3003135049(cache_3003135052, key_3003135053, val_3003135054) {
    var node_3003135602 = getOrDefault_3003135144(cache_3003135052.table, key_3003135053, null);
    if ((node_3003135602 == null)) {
    addNewNode_3003135629(cache_3003135052, key_3003135053, val_3003135054);
    }
    else {
      node_3003135602.value.val = nimCopy(node_3003135602.value.val, val_3003135054, NTI3087008904);
      remove_3003138601(cache_3003135052.list, node_3003135602);
      prepend_3003137330(cache_3003135052.list, node_3003135602);
    }
    

  
}

function fingerprint_3087008937(symbol_3087008938) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3087008939 = [];

    switch (symbol_3087008938.kind) {
    case 0:
      var Temporary1 = symbol_3087008938;
      if (ConstSet129[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      result_3087008939 = nimCopy(null, [hash_2181038324(symbol_3087008938.id), hash_1325400491(symbol_3087008938.name), symbol_3087008938.kind, hash_2181038324(Temporary1.node.id)], NTI3087008653);
      break;
    case 1:
      var Temporary2 = symbol_3087008938;
      if (ConstSet130[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      var Temporary3 = symbol_3087008938;
      if (ConstSet131[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      var Temporary4 = symbol_3087008938;
      if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      var Temporary5 = symbol_3087008938;
      if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
      result_3087008939 = nimCopy(null, HEX26_3087008353(HEX26_3087008353([hash_2181038324(symbol_3087008938.id), hash_1325400491(symbol_3087008938.name), symbol_3087008938.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3087008346(Temporary4.typ)), fingerprint_3087008527(Temporary5.value)), NTI3087008199);
      break;
    }

  return result_3087008939;

}

function fingerprint_3087009331(symbol_3087009336) {
      var Temporary1;

  var result_3087009337 = [];

  BeforeRet: {
      var oHEX60gensym27_3087009340 = nimCopy(null, symbol_3087009336, NTI3087008904);
      if (!isSome_3087009345(oHEX60gensym27_3087009340)) Temporary1 = false; else {        var s_3087009391 = get_3087009365(oHEX60gensym27_3087009340);
        Temporary1 = true;      }    if (Temporary1) {
    result_3087009337 = nimCopy(null, fingerprint_3087008937(s_3087009391), NTI3019898904);
    break BeforeRet;
    }
    
    result_3087009337 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3087009337;

}

function initDoublyLinkedList_3003139068() {
  var result_3003139070 = ({head: null, tail: null});

  return result_3003139070;

}

function initTable_3003139074(initialSize_3003139077) {
  var result_3003139078 = ({data: [], counter: 0});

    var correctSizeHEX60gensym198_3003139080 = slotsNeeded_1308622891(chckRange(initialSize_3003139077, 0, 2147483647));
    result_3003139078.counter = 0;
    result_3003139078.data = new Array(chckRange(correctSizeHEX60gensym198_3003139080, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym198_3003139080, 0, 2147483647) ; ++i) { result_3003139078.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003139078;

}

function newLruCache_3003139058(capacity_3003139061, recordRemovedKeys_3003139062) {
  var result_3003139063 = null;

    result_3003139063 = {capacity: capacity_3003139061, list: initDoublyLinkedList_3003139068(), table: initTable_3003139074(correctSize_3036676117(capacity_3003139061)), recordRemovedKeys: recordRemovedKeys_3003139062, removedKeys: ({data: [], counter: 0})};

  return result_3003139063;

}

function newCache_3003139053(capacity_3003139056) {
  var result_3003139057 = null;

    result_3003139057 = newLruCache_3003139058(capacity_3003139056, false);

  return result_3003139057;

}

function init_3003139048(result_3003139051, result_3003139051_Idx, capacity_3003139052) {
    result_3003139051[result_3003139051_Idx] = newCache_3003139053(capacity_3003139052);

  
}

function initTable_3003174248(initialSize_3003174251) {
  var result_3003174252 = ({data: [], counter: 0});

    var correctSizeHEX60gensym369_3003174254 = slotsNeeded_1308622891(chckRange(initialSize_3003174251, 0, 2147483647));
    result_3003174252.counter = 0;
    result_3003174252.data = new Array(chckRange(correctSizeHEX60gensym369_3003174254, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_3003174254, 0, 2147483647) ; ++i) { result_3003174252.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_3003174252;

}

function newTable_3003219328(initialSize_3003219331) {
  var result_3003219332 = null;

    result_3003219332 = ({data: [], counter: 0});
    result_3003219332 = nimCopy(result_3003219332, initTable_3003174248(initialSize_3003219331), NTI3087008712);

  return result_3003219332;

}

function none_2986344655() {
  var result_2986344661 = ({val: null});

  return result_2986344661;

}

function none_2986344652() {
  var result_2986344654 = ({val: null});

    result_2986344654 = nimCopy(result_2986344654, none_2986344655(), NTI2986344567);

  return result_2986344654;

}

function some_2986344674(val_2986344676) {
  var result_2986344677 = ({val: null});

    if (!(!((val_2986344676 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2986344677.val = val_2986344676;

  return result_2986344677;

}

function findWithParentRec_2986346373(node_2986346374, kind_2986346375) {
  var result_2986346377 = ({val: null});

  BeforeRet: {
    if ((node_2986346374.parent == null)) {
    result_2986346377 = nimCopy(result_2986346377, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    if ((node_2986346374.parent.kind == kind_2986346375)) {
    result_2986346377 = nimCopy(result_2986346377, some_2986344674(node_2986346374), NTI2986344567);
    break BeforeRet;
    }
    
    result_2986346377 = nimCopy(result_2986346377, findWithParentRec_2986346373(node_2986346374.parent, kind_2986346375), NTI2986344567);
    break BeforeRet;
  };

  return result_2986346377;

}

function isSome_2986346330(self_2986346332) {
  var result_2986346333 = false;

    result_2986346333 = !((self_2986346332.val == null));

  return result_2986346333;

}

function isNone_2986346358(self_2986346360) {
  var result_2986346361 = false;

    result_2986346361 = (self_2986346360.val == null);

  return result_2986346361;

}

function get_2986346350(self_2986346352) {
  var result_2986346353 = null;

    if (isNone_2986346358(self_2986346352)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2986346353 = self_2986346352["val"];

  return result_2986346353;

}

function mustRehash_3003220125(t_3003220127) {
  var result_3003220128 = false;

    if (!((t_3003220127.counter < (t_3003220127.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003220128 = ((mulInt((t_3003220127.data).length, 2) < mulInt(t_3003220127.counter, 3)) || (subInt((t_3003220127.data).length, t_3003220127.counter) < 4));

  return result_3003220128;

}

function rawInsert_3003220818(t_3003220822, data_3003220823, data_3003220823_Idx, key_3003220824, val_3003220825, hc_3003220826, h_3003220827) {
    data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field1 = nimCopy(data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field1, key_3003220824, NTI2181038083);
    data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field2 = val_3003220825;
    data_3003220823[data_3003220823_Idx][chckIndx(h_3003220827, 0, (data_3003220823[data_3003220823_Idx]).length - 1)].Field0 = hc_3003220826;

  
}

function enlarge_3003220382(t_3003220385) {
    var n_3003220388 = [];
    n_3003220388 = new Array(chckRange(mulInt((t_3003220385.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003220385.data).length, 2), 0, 2147483647) ; ++i) { n_3003220388[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_3003220385.data; t_3003220385.data = n_3003220388; n_3003220388 = Temporary1;    Label2: {
      var i_3003220486 = 0;
      var colontmp__2952790435 = 0;
      colontmp__2952790435 = (n_3003220388).length - 1;
      var res_2952790436 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790436 <= colontmp__2952790435)) break Label4;
            i_3003220486 = res_2952790436;
            var eh_3003220567 = n_3003220388[chckIndx(i_3003220486, 0, (n_3003220388).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003220567)) {
            var j_3003220571 = (eh_3003220567 & (t_3003220385.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003220385.data[chckIndx(j_3003220571, 0, (t_3003220385.data).length - 1)].Field0)) break Label6;
                  j_3003220571 = nextTry_1308622883(j_3003220571, (t_3003220385.data).length - 1);
                }
            };
            rawInsert_3003220818(t_3003220385, t_3003220385, "data", n_3003220388[chckIndx(i_3003220486, 0, (n_3003220388).length - 1)].Field1, n_3003220388[chckIndx(i_3003220486, 0, (n_3003220388).length - 1)].Field2, eh_3003220567, j_3003220571);
            }
            
            res_2952790436 = addInt(res_2952790436, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003221068(t_3003221071, key_3003221072, hc_3003221073) {
  var result_3003221074 = 0;

  BeforeRet: {
    if (((t_3003221071.data).length == 0)) {
    result_3003221074 = -1;
    break BeforeRet;
    }
    
    var h_3003221159 = (hc_3003221073 & (t_3003221071.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003221071.data[chckIndx(h_3003221159, 0, (t_3003221071.data).length - 1)].Field0)) break Label2;
          if (((t_3003221071.data[chckIndx(h_3003221159, 0, (t_3003221071.data).length - 1)].Field0 == hc_3003221073) && HEX3DHEX3D_2181038320(t_3003221071.data[chckIndx(h_3003221159, 0, (t_3003221071.data).length - 1)].Field1, key_3003221072))) {
          result_3003221074 = h_3003221159;
          break BeforeRet;
          }
          
          h_3003221159 = nextTry_1308622883(h_3003221159, (t_3003221071.data).length - 1);
        }
    };
    result_3003221074 = subInt(-1, h_3003221159);
  };

  return result_3003221074;

}

function HEX5BHEX5DHEX3D_3003219527(t_3003219530, key_3003219531, val_3003219532) {
    if (((t_3003219530.data).length == 0)) {
    var correctSizeHEX60gensym540_3003219616 = slotsNeeded_1308622891(32);
    t_3003219530.counter = 0;
    t_3003219530.data = new Array(chckRange(correctSizeHEX60gensym540_3003219616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym540_3003219616, 0, 2147483647) ; ++i) { t_3003219530.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_3003219621 = [0];
    var index_3003219957 = rawGet_3003219622(t_3003219530, key_3003219531, hc_3003219621, 0);
    if ((0 <= index_3003219957)) {
    t_3003219530.data[chckIndx(index_3003219957, 0, (t_3003219530.data).length - 1)].Field2 = val_3003219532;
    }
    else {
      if (((t_3003219530.data).length == 0)) {
      var correctSizeHEX60gensym545_3003220120 = slotsNeeded_1308622891(32);
      t_3003219530.counter = 0;
      t_3003219530.data = new Array(chckRange(correctSizeHEX60gensym545_3003220120, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym545_3003220120, 0, 2147483647) ; ++i) { t_3003219530.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_3003220125(t_3003219530)) {
      enlarge_3003220382(t_3003219530);
      index_3003219957 = rawGetKnownHC_3003221068(t_3003219530, key_3003219531, hc_3003219621[0]);
      }
      
      index_3003219957 = subInt(-1, index_3003219957);
      rawInsert_3003220818(t_3003219530, t_3003219530, "data", key_3003219531, val_3003219532, hc_3003219621[0], index_3003219957);
      t_3003219530.counter = addInt(t_3003219530.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_3003232684(t_3003232687, key_3003232688, val_3003232689) {
    HEX5BHEX5DHEX3D_3003219527(t_3003232687, key_3003232688, val_3003232689);

  
}

function base_2986344542(node_2986344543) {
  var result_2986344544 = null;

  BeforeRet: {
    if ((node_2986344543.parent == null)) {
    result_2986344544 = node_2986344543;
    break BeforeRet;
    }
    
    result_2986344544 = base_2986344542(node_2986344543.parent);
    break BeforeRet;
  };

  return result_2986344544;

}

function len_3003233372(t_3003233375) {
  var result_3003233376 = 0;

    result_3003233376 = t_3003233375.counter;

  return result_3003233376;

}

function computeSymbolsImpl_3003122493(ctx_3003122494, node_3003122495) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_3003232479 = null;

    var logQueryHEX60gensym732_3003232481 = (ctx_3003122494.enableLogging || ctx_3003122494.enableQueryLogging);
    if (logQueryHEX60gensym732_3003232481) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym732_3003232481) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_2986346455(node_3003122495) || []));
    }
    
    try {
    result_3003232479 = newTable_3003219328(32);
      var oHEX60gensym733_3003232563 = findWithParentRec_2986346373(node_3003122495, 7);
      if (!isSome_2986346330(oHEX60gensym733_3003232563)) Temporary4 = false; else {        var parentInNodeList_3003232609 = get_2986346350(oHEX60gensym733_3003232563);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_3003232609.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_3003232614 = computeSymbols_3003205356(ctx_3003122494, parentInNodeList_3003232609.parent, true);
    Label5: {
      var id_3003232619 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_3003232620 = null;
      var L_2952790398 = len_3087009054(parentSymbols_3003232614);
      Label6: {
        var h_2952790400 = 0;
        var colontmp__2952790401 = 0;
        colontmp__2952790401 = (parentSymbols_3003232614.data).length - 1;
        var res_2952790402 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2952790402 <= colontmp__2952790401)) break Label8;
              h_2952790400 = res_2952790402;
              if (isFilled_1308622880(parentSymbols_3003232614.data[chckIndx(h_2952790400, 0, (parentSymbols_3003232614.data).length - 1)].Field0)) {
              var colontmp__2952790405 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_3003232614.data[chckIndx(h_2952790400, 0, (parentSymbols_3003232614.data).length - 1)].Field1, NTI2181038083), Field1: parentSymbols_3003232614.data[chckIndx(h_2952790400, 0, (parentSymbols_3003232614.data).length - 1)].Field2}, NTI3087008730);
              id_3003232619 = nimCopy(id_3003232619, colontmp__2952790405["Field0"], NTI2181038083);
              sym_3003232620 = colontmp__2952790405["Field1"];
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, id_3003232619, sym_3003232620);
              if (!((len_3087009054(parentSymbols_3003232614) == L_2952790398))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790402 = addInt(res_2952790402, 1);
            }
        };
      };
    };
    recordDependency_3003175740(ctx_3003122494, getItem_3003175953(parentInNodeList_3003232609.parent), -1);
    var bIsOrderDependent_3003232843 = !((parentInNodeList_3003232609.parent.parent == null));
    Label9: {
      var child_3003232847 = null;
      var i_2952790408 = 0;
      var L_2952790409 = (parentInNodeList_3003232609.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2952790408 < L_2952790409)) break Label11;
            child_3003232847 = parentInNodeList_3003232609.parent.children[chckIndx(i_2952790408, 0, (parentInNodeList_3003232609.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_3003232843 && (child_3003232847 == parentInNodeList_3003232609))) {
              break Label9;
              }
              
              if (((!((child_3003232847.kind == 4)) && !((child_3003232847.kind == 5))) && !((child_3003232847.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym739_3003232866 = computeSymbol_3003201856(ctx_3003122494, child_3003232847, true);
                if (!isSome_3087009345(oHEX60gensym739_3003232866)) Temporary13 = false; else {                  var symbol_3003232912 = get_3087009365(oHEX60gensym739_3003232866);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, symbol_3003232912.id, symbol_3003232912);
              }
              
            };
            i_2952790408 = addInt(i_2952790408, 1);
            if (!(((parentInNodeList_3003232609.parent.children).length == L_2952790409))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym740_3003232984 = findWithParentRec_2986346373(node_3003122495, 11);
      if (!isSome_2986346330(oHEX60gensym740_3003232984)) Temporary14 = false; else {        var parentInFunctionDef_3003233030 = get_2986346350(oHEX60gensym740_3003232984);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_3003233031 = parentInFunctionDef_3003233030.parent;
    if ((0 < len_2986344536(functionDefinition_3003233031))) {
    var params_3003233032 = HEX5BHEX5D_2986344532(functionDefinition_3003233031, 0);
    recordDependency_3003175740(ctx_3003122494, getItem_3003175953(params_3003233032), -1);
    Label15: {
      var param_3003233036 = null;
      var i_2952790412 = 0;
      var L_2952790413 = (params_3003233032.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2952790412 < L_2952790413)) break Label17;
            param_3003233036 = params_3003233032.children[chckIndx(i_2952790412, 0, (params_3003233032.children).length - 1)];
            recordDependency_3003175740(ctx_3003122494, getItem_3003175953(param_3003233036), -1);
              var oHEX60gensym742_3003233039 = computeSymbol_3003201856(ctx_3003122494, param_3003233036, true);
              if (!isSome_3087009345(oHEX60gensym742_3003233039)) Temporary18 = false; else {                var symbol_3003233085 = get_3087009365(oHEX60gensym742_3003233039);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_3003232684(result_3003232479, param_3003233036.id, symbol_3003233085);
            }
            
            i_2952790412 = addInt(i_2952790412, 1);
            if (!(((params_3003233032.children).length == L_2952790413))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_3003233155 = base_2986344542(node_3003122495);
    recordDependency_3003175740(ctx_3003122494, getItem_3003175953(root_3003233155), -1);
    Label19: {
      var child_3003233159 = null;
      var i_2952790417 = 0;
      var L_2952790418 = (root_3003233155.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2952790417 < L_2952790418)) break Label21;
            child_3003233159 = root_3003233155.children[chckIndx(i_2952790417, 0, (root_3003233155.children).length - 1)];
            Label22: {
              if (((!((child_3003233159.kind == 4)) && !((child_3003233159.kind == 5))) && !((child_3003233159.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym746_3003233174 = computeSymbol_3003201856(ctx_3003122494, child_3003233159, true);
                if (!isSome_3087009345(oHEX60gensym746_3003233174)) Temporary23 = false; else {                  var symbol_3003233220 = get_3087009365(oHEX60gensym746_3003233174);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, symbol_3003233220.id, symbol_3003233220);
              }
              
            };
            i_2952790417 = addInt(i_2952790417, 1);
            if (!(((root_3003233155.children).length == L_2952790418))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_3003233713 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3003233714 = null;
      var L_2952790425 = len_3003233372(ctx_3003122494.globalScope);
      Label25: {
        var h_2952790427 = 0;
        var colontmp__2952790428 = 0;
        colontmp__2952790428 = (ctx_3003122494.globalScope.data).length - 1;
        var res_2952790429 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2952790429 <= colontmp__2952790428)) break Label27;
              h_2952790427 = res_2952790429;
              if (isFilled_1308622880(ctx_3003122494.globalScope.data[chckIndx(h_2952790427, 0, (ctx_3003122494.globalScope.data).length - 1)].Field0)) {
              var colontmp__2952790432 = nimCopy(null, {Field0: nimCopy(null, ctx_3003122494.globalScope.data[chckIndx(h_2952790427, 0, (ctx_3003122494.globalScope.data).length - 1)].Field1, NTI2181038083), Field1: ctx_3003122494.globalScope.data[chckIndx(h_2952790427, 0, (ctx_3003122494.globalScope.data).length - 1)].Field2}, NTI3003186895);
              key_3003233713 = nimCopy(key_3003233713, colontmp__2952790432["Field0"], NTI2181038083);
              symbol_3003233714 = colontmp__2952790432["Field1"];
              recordDependency_3003175740(ctx_3003122494, getItem_3003185222(symbol_3003233714), -1);
              HEX5BHEX5DHEX3D_3003232684(result_3003232479, symbol_3003233714.id, symbol_3003233714);
              if (!((len_3003233372(ctx_3003122494.globalScope) == L_2952790425))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790429 = addInt(res_2952790429, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym732_3003232481 && false)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3003175266(result_3003232479) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym732_3003232481) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }

  return result_3003232479;

}

function getOrDefault_3003139448(t_3003139451, key_3003139452, default_3003139453) {
    var Temporary1;

  var result_3003139454 = null;

    var hcHEX60gensym201_3003139457 = [0];
    var indexHEX60gensym201_3003139816 = rawGet_3003139458(t_3003139451, key_3003139452, hcHEX60gensym201_3003139457, 0);
    if ((0 <= indexHEX60gensym201_3003139816)) {
    Temporary1 = t_3003139451.data[chckIndx(indexHEX60gensym201_3003139816, 0, (t_3003139451.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003139453;
    }
    
    result_3003139454 = Temporary1;

  return result_3003139454;

}

function newDoublyLinkedNode_3003139941(value_3003139943) {
  var result_3003139944 = null;

    result_3003139944 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_3003139944.value = nimCopy(result_3003139944.value, value_3003139943, NTI3003122248);

  return result_3003139944;

}

function mustRehash_3003140291(t_3003140293) {
  var result_3003140294 = false;

    if (!((t_3003140293.counter < (t_3003140293.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003140294 = ((mulInt((t_3003140293.data).length, 2) < mulInt(t_3003140293.counter, 3)) || (subInt((t_3003140293.data).length, t_3003140293.counter) < 4));

  return result_3003140294;

}

function rawInsert_3003140984(t_3003140988, data_3003140989, data_3003140989_Idx, key_3003140990, val_3003140991, hc_3003140992, h_3003140993) {
    data_3003140989[data_3003140989_Idx][chckIndx(h_3003140993, 0, (data_3003140989[data_3003140989_Idx]).length - 1)].Field1 = key_3003140990;
    data_3003140989[data_3003140989_Idx][chckIndx(h_3003140993, 0, (data_3003140989[data_3003140989_Idx]).length - 1)].Field2 = val_3003140991;
    data_3003140989[data_3003140989_Idx][chckIndx(h_3003140993, 0, (data_3003140989[data_3003140989_Idx]).length - 1)].Field0 = hc_3003140992;

  
}

function enlarge_3003140548(t_3003140551) {
    var n_3003140554 = [];
    n_3003140554 = new Array(chckRange(mulInt((t_3003140551.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003140551.data).length, 2), 0, 2147483647) ; ++i) { n_3003140554[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003140551.data; t_3003140551.data = n_3003140554; n_3003140554 = Temporary1;    Label2: {
      var i_3003140652 = 0;
      var colontmp__2952790441 = 0;
      colontmp__2952790441 = (n_3003140554).length - 1;
      var res_2952790442 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790442 <= colontmp__2952790441)) break Label4;
            i_3003140652 = res_2952790442;
            var eh_3003140733 = n_3003140554[chckIndx(i_3003140652, 0, (n_3003140554).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003140733)) {
            var j_3003140737 = (eh_3003140733 & (t_3003140551.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003140551.data[chckIndx(j_3003140737, 0, (t_3003140551.data).length - 1)].Field0)) break Label6;
                  j_3003140737 = nextTry_1308622883(j_3003140737, (t_3003140551.data).length - 1);
                }
            };
            rawInsert_3003140984(t_3003140551, t_3003140551, "data", n_3003140554[chckIndx(i_3003140652, 0, (n_3003140554).length - 1)].Field1, n_3003140554[chckIndx(i_3003140652, 0, (n_3003140554).length - 1)].Field2, eh_3003140733, j_3003140737);
            }
            
            res_2952790442 = addInt(res_2952790442, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003141234(t_3003141237, key_3003141238, hc_3003141239) {
  var result_3003141240 = 0;

  BeforeRet: {
    if (((t_3003141237.data).length == 0)) {
    result_3003141240 = -1;
    break BeforeRet;
    }
    
    var h_3003141325 = (hc_3003141239 & (t_3003141237.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003141237.data[chckIndx(h_3003141325, 0, (t_3003141237.data).length - 1)].Field0)) break Label2;
          if (((t_3003141237.data[chckIndx(h_3003141325, 0, (t_3003141237.data).length - 1)].Field0 == hc_3003141239) && (t_3003141237.data[chckIndx(h_3003141325, 0, (t_3003141237.data).length - 1)].Field1 == key_3003141238))) {
          result_3003141240 = h_3003141325;
          break BeforeRet;
          }
          
          h_3003141325 = nextTry_1308622883(h_3003141325, (t_3003141237.data).length - 1);
        }
    };
    result_3003141240 = subInt(-1, h_3003141325);
  };

  return result_3003141240;

}

function HEX5BHEX5DHEX3D_3003140023(t_3003140026, key_3003140027, val_3003140028) {
    if (((t_3003140026.data).length == 0)) {
    var correctSizeHEX60gensym206_3003140111 = slotsNeeded_1308622891(32);
    t_3003140026.counter = 0;
    t_3003140026.data = new Array(chckRange(correctSizeHEX60gensym206_3003140111, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym206_3003140111, 0, 2147483647) ; ++i) { t_3003140026.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003140116 = [0];
    var index_3003140123 = rawGet_3003139458(t_3003140026, key_3003140027, hc_3003140116, 0);
    if ((0 <= index_3003140123)) {
    t_3003140026.data[chckIndx(index_3003140123, 0, (t_3003140026.data).length - 1)].Field2 = val_3003140028;
    }
    else {
      if (((t_3003140026.data).length == 0)) {
      var correctSizeHEX60gensym209_3003140286 = slotsNeeded_1308622891(32);
      t_3003140026.counter = 0;
      t_3003140026.data = new Array(chckRange(correctSizeHEX60gensym209_3003140286, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym209_3003140286, 0, 2147483647) ; ++i) { t_3003140026.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003140291(t_3003140026)) {
      enlarge_3003140548(t_3003140026);
      index_3003140123 = rawGetKnownHC_3003141234(t_3003140026, key_3003140027, hc_3003140116[0]);
      }
      
      index_3003140123 = subInt(-1, index_3003140123);
      rawInsert_3003140984(t_3003140026, t_3003140026, "data", key_3003140027, val_3003140028, hc_3003140116[0], index_3003140123);
      t_3003140026.counter = addInt(t_3003140026.counter, 1);
    }
    

  
}

function len_3003142054(t_3003142057) {
  var result_3003142058 = 0;

    result_3003142058 = t_3003142057.counter;

  return result_3003142058;

}

function len_3003141971(cache_3003141974) {
  var result_3003141975 = 0;

    result_3003141975 = len_3003142054(cache_3003141974.table);

  return result_3003141975;

}

function del_3003142146(t_3003142149, key_3003142150) {
    var hc_3003142151 = [0];
    var i_3003142158 = rawGet_3003139458(t_3003142149, key_3003142150, hc_3003142151, 0);
    var mskHEX60gensym36_3003142162 = (t_3003142149.data).length - 1;
    if ((0 <= i_3003142158)) {
    t_3003142149.counter = subInt(t_3003142149.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003142169 = i_3003142158;
            var rHEX60gensym36_3003142170 = jHEX60gensym36_3003142169;
            t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field0 = 0;
            t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field1 = null;
            t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003142158 = (addInt(i_3003142158, 1) & mskHEX60gensym36_3003142162);
                  if (isEmpty_1308622877(t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003142170 = (t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)].Field0 & mskHEX60gensym36_3003142162);
                  if (!(((((rHEX60gensym36_3003142170 <= i_3003142158) && (jHEX60gensym36_3003142169 < rHEX60gensym36_3003142170)) || ((jHEX60gensym36_3003142169 < rHEX60gensym36_3003142170) && (i_3003142158 < jHEX60gensym36_3003142169))) || ((i_3003142158 < jHEX60gensym36_3003142169) && (rHEX60gensym36_3003142170 <= i_3003142158))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003142149.data[chckIndx(jHEX60gensym36_3003142169, 0, (t_3003142149.data).length - 1)] = nimCopy(t_3003142149.data[chckIndx(jHEX60gensym36_3003142169, 0, (t_3003142149.data).length - 1)], t_3003142149.data[chckIndx(i_3003142158, 0, (t_3003142149.data).length - 1)], NTI3003122284);
          }
      };
    };
    }
    

  
}

function resize_3003141889(cache_3003141892) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003141892.capacity < len_3003141971(cache_3003141892))) break Label2;
          var t_3003142059 = cache_3003141892.list.tail;
          if (cache_3003141892.recordRemovedKeys) {
          incl_3003127646(cache_3003141892.removedKeys, t_3003142059.value.key);
          }
          
          del_3003142146(cache_3003141892.table, t_3003142059.value.key);
          remove_3003142905(cache_3003141892.list, t_3003142059);
        }
    };

  
}

function addNewNode_3003139933(cache_3003139936, key_3003139937, val_3003139938) {
    var node_3003139959 = newDoublyLinkedNode_3003139941({key: key_3003139937, val: val_3003139938});
    HEX5BHEX5DHEX3D_3003140023(cache_3003139936.table, key_3003139937, node_3003139959);
    prepend_3003141634(cache_3003139936.list, node_3003139959);
    if (cache_3003139936.recordRemovedKeys) {
    excl_3003126487(cache_3003139936.removedKeys, key_3003139937);
    }
    
    resize_3003141889(cache_3003139936);

  
}

function HEX5BHEX5DHEX3D_3003139353(cache_3003139356, key_3003139357, val_3003139358) {
    var node_3003139906 = getOrDefault_3003139448(cache_3003139356.table, key_3003139357, null);
    if ((node_3003139906 == null)) {
    addNewNode_3003139933(cache_3003139356, key_3003139357, val_3003139358);
    }
    else {
      node_3003139906.value.val = val_3003139358;
      remove_3003142905(cache_3003139356.list, node_3003139906);
      prepend_3003141634(cache_3003139356.list, node_3003139906);
    }
    

  
}

function fingerprint_3087008992(symbols_3087009000) {
  var result_3087009001 = [[]];

    result_3087009001[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3087009316 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3087009317 = null;
      var L_2952790449 = len_3087009054(symbols_3087009000);
      Label2: {
        var h_2952790451 = 0;
        var colontmp__2952790452 = 0;
        colontmp__2952790452 = (symbols_3087009000.data).length - 1;
        var res_2952790453 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952790453 <= colontmp__2952790452)) break Label4;
              h_2952790451 = res_2952790453;
              if (isFilled_1308622880(symbols_3087009000.data[chckIndx(h_2952790451, 0, (symbols_3087009000.data).length - 1)].Field0)) {
              var colontmp__2952790456 = nimCopy(null, {Field0: nimCopy(null, symbols_3087009000.data[chckIndx(h_2952790451, 0, (symbols_3087009000.data).length - 1)].Field1, NTI2181038083), Field1: symbols_3087009000.data[chckIndx(h_2952790451, 0, (symbols_3087009000.data).length - 1)].Field2}, NTI3087008730);
              key_3087009316 = nimCopy(key_3087009316, colontmp__2952790456["Field0"], NTI2181038083);
              value_3087009317 = colontmp__2952790456["Field1"];
              add_3087008391(result_3087009001, 0, fingerprint_3087008937(value_3087009317));
              if (!((len_3087009054(symbols_3087009000) == L_2952790449))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790453 = addInt(res_2952790453, 1);
            }
        };
      };
    };

  return result_3087009001[0];

}

function initDoublyLinkedList_3003143372() {
  var result_3003143374 = ({head: null, tail: null});

  return result_3003143374;

}

function initTable_3003143378(initialSize_3003143381) {
  var result_3003143382 = ({data: [], counter: 0});

    var correctSizeHEX60gensym219_3003143384 = slotsNeeded_1308622891(chckRange(initialSize_3003143381, 0, 2147483647));
    result_3003143382.counter = 0;
    result_3003143382.data = new Array(chckRange(correctSizeHEX60gensym219_3003143384, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym219_3003143384, 0, 2147483647) ; ++i) { result_3003143382.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003143382;

}

function newLruCache_3003143362(capacity_3003143365, recordRemovedKeys_3003143366) {
  var result_3003143367 = null;

    result_3003143367 = {capacity: capacity_3003143365, list: initDoublyLinkedList_3003143372(), table: initTable_3003143378(correctSize_3036676117(capacity_3003143365)), recordRemovedKeys: recordRemovedKeys_3003143366, removedKeys: ({data: [], counter: 0})};

  return result_3003143367;

}

function newCache_3003143357(capacity_3003143360) {
  var result_3003143361 = null;

    result_3003143361 = newLruCache_3003143362(capacity_3003143360, false);

  return result_3003143361;

}

function init_3003143352(result_3003143355, result_3003143355_Idx, capacity_3003143356) {
    result_3003143355[result_3003143355_Idx] = newCache_3003143357(capacity_3003143356);

  
}

function hasKey_3003143595(t_3003143598, key_3003143599) {
  var result_3003143600 = false;

    var hc_3003143601 = [0];
    result_3003143600 = (0 <= rawGet_3003143602(t_3003143598, key_3003143599, hc_3003143601, 0));

  return result_3003143600;

}

function contains_3003143589(t_3003143592, key_3003143593) {
  var result_3003143594 = false;

  BeforeRet: {
    result_3003143594 = hasKey_3003143595(t_3003143592, key_3003143593);
    break BeforeRet;
  };

  return result_3003143594;

}

function contains_3003143495(cache_3003143498, key_3003143499) {
  var result_3003143500 = false;

    result_3003143500 = contains_3003143589(cache_3003143498.table, key_3003143499);

  return result_3003143500;

}

function HEX5BHEX5D_3003144134(t_3003144137, key_3003144138) {
  var result_3003144139 = null;
  var result_3003144139_Idx = 0;

    var hcHEX60gensym22_3003144140 = [0];
    var indexHEX60gensym22_3003144147 = rawGet_3003143602(t_3003144137, key_3003144138, hcHEX60gensym22_3003144140, 0);
    if ((0 <= indexHEX60gensym22_3003144147)) {
    result_3003144139 = t_3003144137.data[chckIndx(indexHEX60gensym22_3003144147, 0, (t_3003144137.data).length - 1)]; result_3003144139_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003144138);
    }
    

  return [result_3003144139, result_3003144139_Idx];

}

function HEX5BHEX5D_3003144048(cache_3003144051, key_3003144052) {
    var Temporary1;

  var result_3003144053 = null;

    var node_3003144240 = (Temporary1 = HEX5BHEX5D_3003144134(cache_3003144051.table, key_3003144052), Temporary1)[0][Temporary1[1]];
    result_3003144053 = node_3003144240.value.val;
    remove_3003144254(cache_3003144051.list, node_3003144240);
    prepend_3003144582(cache_3003144051.list, node_3003144240);

  return result_3003144053;

}

function computeSymbolTypeImpl_3003122498(ctx_3003122499, symbol_3003122500) {
      var Temporary3;
      var Temporary4;

  var result_3003221485 = null;

  BeforeRet: {
    var logQueryHEX60gensym553_3003221487 = (ctx_3003122499.enableLogging || ctx_3003122499.enableQueryLogging);
    if (logQueryHEX60gensym553_3003221487) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym553_3003221487) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3087008904(symbol_3003122500) || []));
    }
    
    try {
    switch (symbol_3003122500.kind) {
    case 0:
      var Temporary3 = symbol_3003122500;
      if (ConstSet134[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3003221485 = computeType_3003195250(ctx_3003122499, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3003122500;
      if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3003221485 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym553_3003221487 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008180(result_3003221485) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym553_3003221487) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003221485;

}

function getOrDefault_3003144955(t_3003144958, key_3003144959, default_3003144960) {
    var Temporary1;

  var result_3003144961 = null;

    var hcHEX60gensym226_3003144964 = [0];
    var indexHEX60gensym226_3003145319 = rawGet_3003144965(t_3003144958, key_3003144959, hcHEX60gensym226_3003144964, 0);
    if ((0 <= indexHEX60gensym226_3003145319)) {
    Temporary1 = t_3003144958.data[chckIndx(indexHEX60gensym226_3003145319, 0, (t_3003144958.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003144960;
    }
    
    result_3003144961 = Temporary1;

  return result_3003144961;

}

function newDoublyLinkedNode_3003145444(value_3003145446) {
  var result_3003145447 = null;

    result_3003145447 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_3003145447.value = nimCopy(result_3003145447.value, value_3003145446, NTI3003122314);

  return result_3003145447;

}

function mustRehash_3003145794(t_3003145796) {
  var result_3003145797 = false;

    if (!((t_3003145796.counter < (t_3003145796.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003145797 = ((mulInt((t_3003145796.data).length, 2) < mulInt(t_3003145796.counter, 3)) || (subInt((t_3003145796.data).length, t_3003145796.counter) < 4));

  return result_3003145797;

}

function rawInsert_3003146487(t_3003146491, data_3003146492, data_3003146492_Idx, key_3003146493, val_3003146494, hc_3003146495, h_3003146496) {
    data_3003146492[data_3003146492_Idx][chckIndx(h_3003146496, 0, (data_3003146492[data_3003146492_Idx]).length - 1)].Field1 = key_3003146493;
    data_3003146492[data_3003146492_Idx][chckIndx(h_3003146496, 0, (data_3003146492[data_3003146492_Idx]).length - 1)].Field2 = val_3003146494;
    data_3003146492[data_3003146492_Idx][chckIndx(h_3003146496, 0, (data_3003146492[data_3003146492_Idx]).length - 1)].Field0 = hc_3003146495;

  
}

function enlarge_3003146051(t_3003146054) {
    var n_3003146057 = [];
    n_3003146057 = new Array(chckRange(mulInt((t_3003146054.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003146054.data).length, 2), 0, 2147483647) ; ++i) { n_3003146057[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003146054.data; t_3003146054.data = n_3003146057; n_3003146057 = Temporary1;    Label2: {
      var i_3003146155 = 0;
      var colontmp__2952790459 = 0;
      colontmp__2952790459 = (n_3003146057).length - 1;
      var res_2952790460 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790460 <= colontmp__2952790459)) break Label4;
            i_3003146155 = res_2952790460;
            var eh_3003146236 = n_3003146057[chckIndx(i_3003146155, 0, (n_3003146057).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003146236)) {
            var j_3003146240 = (eh_3003146236 & (t_3003146054.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003146054.data[chckIndx(j_3003146240, 0, (t_3003146054.data).length - 1)].Field0)) break Label6;
                  j_3003146240 = nextTry_1308622883(j_3003146240, (t_3003146054.data).length - 1);
                }
            };
            rawInsert_3003146487(t_3003146054, t_3003146054, "data", n_3003146057[chckIndx(i_3003146155, 0, (n_3003146057).length - 1)].Field1, n_3003146057[chckIndx(i_3003146155, 0, (n_3003146057).length - 1)].Field2, eh_3003146236, j_3003146240);
            }
            
            res_2952790460 = addInt(res_2952790460, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003146737(t_3003146740, key_3003146741, hc_3003146742) {
  var result_3003146743 = 0;

  BeforeRet: {
    if (((t_3003146740.data).length == 0)) {
    result_3003146743 = -1;
    break BeforeRet;
    }
    
    var h_3003146828 = (hc_3003146742 & (t_3003146740.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003146740.data[chckIndx(h_3003146828, 0, (t_3003146740.data).length - 1)].Field0)) break Label2;
          if (((t_3003146740.data[chckIndx(h_3003146828, 0, (t_3003146740.data).length - 1)].Field0 == hc_3003146742) && HEX3DHEX3D_3087008910(t_3003146740.data[chckIndx(h_3003146828, 0, (t_3003146740.data).length - 1)].Field1, key_3003146741))) {
          result_3003146743 = h_3003146828;
          break BeforeRet;
          }
          
          h_3003146828 = nextTry_1308622883(h_3003146828, (t_3003146740.data).length - 1);
        }
    };
    result_3003146743 = subInt(-1, h_3003146828);
  };

  return result_3003146743;

}

function HEX5BHEX5DHEX3D_3003145526(t_3003145529, key_3003145530, val_3003145531) {
    if (((t_3003145529.data).length == 0)) {
    var correctSizeHEX60gensym231_3003145614 = slotsNeeded_1308622891(32);
    t_3003145529.counter = 0;
    t_3003145529.data = new Array(chckRange(correctSizeHEX60gensym231_3003145614, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym231_3003145614, 0, 2147483647) ; ++i) { t_3003145529.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003145619 = [0];
    var index_3003145626 = rawGet_3003144965(t_3003145529, key_3003145530, hc_3003145619, 0);
    if ((0 <= index_3003145626)) {
    t_3003145529.data[chckIndx(index_3003145626, 0, (t_3003145529.data).length - 1)].Field2 = val_3003145531;
    }
    else {
      if (((t_3003145529.data).length == 0)) {
      var correctSizeHEX60gensym234_3003145789 = slotsNeeded_1308622891(32);
      t_3003145529.counter = 0;
      t_3003145529.data = new Array(chckRange(correctSizeHEX60gensym234_3003145789, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym234_3003145789, 0, 2147483647) ; ++i) { t_3003145529.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003145794(t_3003145529)) {
      enlarge_3003146051(t_3003145529);
      index_3003145626 = rawGetKnownHC_3003146737(t_3003145529, key_3003145530, hc_3003145619[0]);
      }
      
      index_3003145626 = subInt(-1, index_3003145626);
      rawInsert_3003146487(t_3003145529, t_3003145529, "data", key_3003145530, val_3003145531, hc_3003145619[0], index_3003145626);
      t_3003145529.counter = addInt(t_3003145529.counter, 1);
    }
    

  
}

function rawGet_3003147382(t_3003147385, key_3003147386, hc_3003147387, hc_3003147387_Idx) {
  var result_3003147388 = 0;

  BeforeRet: {
    hc_3003147387[hc_3003147387_Idx] = hash_3087008907(key_3003147386);
    if ((hc_3003147387[hc_3003147387_Idx] == 0)) {
    hc_3003147387[hc_3003147387_Idx] = 314159265;
    }
    
    if (((t_3003147385.data).length == 0)) {
    result_3003147388 = -1;
    break BeforeRet;
    }
    
    var h_3003147474 = (hc_3003147387[hc_3003147387_Idx] & (t_3003147385.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003147385.data[chckIndx(h_3003147474, 0, (t_3003147385.data).length - 1)].Field0)) break Label2;
          if (((t_3003147385.data[chckIndx(h_3003147474, 0, (t_3003147385.data).length - 1)].Field0 == hc_3003147387[hc_3003147387_Idx]) && HEX3DHEX3D_3087008910(t_3003147385.data[chckIndx(h_3003147474, 0, (t_3003147385.data).length - 1)].Field1, key_3003147386))) {
          result_3003147388 = h_3003147474;
          break BeforeRet;
          }
          
          h_3003147474 = nextTry_1828716586(h_3003147474, (t_3003147385.data).length - 1);
        }
    };
    result_3003147388 = subInt(-1, h_3003147474);
  };

  return result_3003147388;

}

function exclImpl_3003147376(s_3003147378, key_3003147379) {
          var Temporary5;

  var result_3003147380 = false;

  BeforeRet: {
    var hc_3003147381 = [0];
    var i_3003147736 = rawGet_3003147382(s_3003147378, key_3003147379, hc_3003147381, 0);
    var msk_3003147740 = (s_3003147378.data).length - 1;
    result_3003147380 = true;
    if ((0 <= i_3003147736)) {
    result_3003147380 = false;
    s_3003147378.counter = subInt(s_3003147378.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003147746 = i_3003147736;
          var r_3003147747 = j_3003147746;
          s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field0 = 0;
          s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003147736 = (addInt(i_3003147736, 1) & msk_3003147740);
                if (isEmpty_1828716580(s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003147747 = (s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)].Field0 & msk_3003147740);
                if (!(((((r_3003147747 <= i_3003147736) && (j_3003147746 < r_3003147747)) || ((j_3003147746 < r_3003147747) && (i_3003147736 < j_3003147746))) || ((i_3003147736 < j_3003147746) && (r_3003147747 <= i_3003147736))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)];
          s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)] = genericReset(s_3003147378.data[chckIndx(i_3003147736, 0, (s_3003147378.data).length - 1)], NTI3003122370);
          s_3003147378.data[chckIndx(j_3003147746, 0, (s_3003147378.data).length - 1)] = nimCopy(s_3003147378.data[chckIndx(j_3003147746, 0, (s_3003147378.data).length - 1)], Temporary5, NTI3003122370);
        }
    };
    }
    
  };

  return result_3003147380;

}

function excl_3003147361(s_3003147363, key_3003147364) {
    var _ = exclImpl_3003147376(s_3003147363, key_3003147364);

  
}

function len_3003148500(t_3003148503) {
  var result_3003148504 = 0;

    result_3003148504 = t_3003148503.counter;

  return result_3003148504;

}

function len_3003148417(cache_3003148420) {
  var result_3003148421 = 0;

    result_3003148421 = len_3003148500(cache_3003148420.table);

  return result_3003148421;

}

function mustRehash_3003148641(t_3003148643) {
  var result_3003148644 = false;

    if (!((t_3003148643.counter < (t_3003148643.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003148644 = ((mulInt((t_3003148643.data).length, 2) < mulInt(t_3003148643.counter, 3)) || (subInt((t_3003148643.data).length, t_3003148643.counter) < 4));

  return result_3003148644;

}

function rawGetKnownHC_3003149247(t_3003149250, key_3003149251, hc_3003149252) {
  var result_3003149253 = 0;

  BeforeRet: {
    if (((t_3003149250.data).length == 0)) {
    result_3003149253 = -1;
    break BeforeRet;
    }
    
    var h_3003149338 = (hc_3003149252 & (t_3003149250.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003149250.data[chckIndx(h_3003149338, 0, (t_3003149250.data).length - 1)].Field0)) break Label2;
          if (((t_3003149250.data[chckIndx(h_3003149338, 0, (t_3003149250.data).length - 1)].Field0 == hc_3003149252) && HEX3DHEX3D_3087008910(t_3003149250.data[chckIndx(h_3003149338, 0, (t_3003149250.data).length - 1)].Field1, key_3003149251))) {
          result_3003149253 = h_3003149338;
          break BeforeRet;
          }
          
          h_3003149338 = nextTry_1828716586(h_3003149338, (t_3003149250.data).length - 1);
        }
    };
    result_3003149253 = subInt(-1, h_3003149338);
  };

  return result_3003149253;

}

function rawInsert_3003149747(s_3003149749, data_3003149750, data_3003149750_Idx, key_3003149751, hc_3003149752, h_3003149753) {
    if (((data_3003149750[data_3003149750_Idx]).length == 0)) {
    var correctSizeHEX60gensym253_3003149836 = slotsNeeded_1828716594(64);
    s_3003149749.counter = 0;
    s_3003149749.data = new Array(chckRange(correctSizeHEX60gensym253_3003149836, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym253_3003149836, 0, 2147483647) ; ++i) { s_3003149749.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003149750[data_3003149750_Idx][chckIndx(h_3003149753, 0, (data_3003149750[data_3003149750_Idx]).length - 1)].Field1 = key_3003149751;
    data_3003149750[data_3003149750_Idx][chckIndx(h_3003149753, 0, (data_3003149750[data_3003149750_Idx]).length - 1)].Field0 = hc_3003149752;

  
}

function enlarge_3003148904(s_3003148906) {
    var n_3003148908 = [];
    n_3003148908 = new Array(chckRange(mulInt((s_3003148906.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003148906.data).length, 2), 0, 2147483647) ; ++i) { n_3003148908[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003148906.data; s_3003148906.data = n_3003148908; n_3003148908 = Temporary1;    Label2: {
      var i_3003149006 = 0;
      var colontmp__2952790468 = 0;
      colontmp__2952790468 = (n_3003148908).length - 1;
      var res_2952790469 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790469 <= colontmp__2952790468)) break Label4;
            i_3003149006 = res_2952790469;
            if (isFilled_1828716583(n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field0)) {
            var j_3003149582 = subInt(-1, rawGetKnownHC_3003149247(s_3003148906, n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field1, n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field0));
            rawInsert_3003149747(s_3003148906, s_3003148906, "data", n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field1, n_3003148908[chckIndx(i_3003149006, 0, (n_3003148908).length - 1)].Field0, j_3003149582);
            }
            
            res_2952790469 = addInt(res_2952790469, 1);
          }
      };
    };

  
}

function incl_3003148525(s_3003148527, key_3003148528) {
    if (((s_3003148527.data).length == 0)) {
    var correctSizeHEX60gensym246_3003148611 = slotsNeeded_1828716594(64);
    s_3003148527.counter = 0;
    s_3003148527.data = new Array(chckRange(correctSizeHEX60gensym246_3003148611, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym246_3003148611, 0, 2147483647) ; ++i) { s_3003148527.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003148626 = [0];
    var index_3003148640 = rawGet_3003147382(s_3003148527, key_3003148528, hc_3003148626, 0);
    if ((index_3003148640 < 0)) {
    if (mustRehash_3003148641(s_3003148527)) {
    enlarge_3003148904(s_3003148527);
    index_3003148640 = rawGetKnownHC_3003149247(s_3003148527, key_3003148528, hc_3003148626[0]);
    }
    
    rawInsert_3003149747(s_3003148527, s_3003148527, "data", key_3003148528, hc_3003148626[0], subInt(-1, index_3003148640));
    s_3003148527.counter = addInt(s_3003148527.counter, 1);
    }
    

  
}

function del_3003150103(t_3003150106, key_3003150107) {
    var hc_3003150108 = [0];
    var i_3003150115 = rawGet_3003144965(t_3003150106, key_3003150107, hc_3003150108, 0);
    var mskHEX60gensym36_3003150119 = (t_3003150106.data).length - 1;
    if ((0 <= i_3003150115)) {
    t_3003150106.counter = subInt(t_3003150106.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003150126 = i_3003150115;
            var rHEX60gensym36_3003150127 = jHEX60gensym36_3003150126;
            t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field0 = 0;
            t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field1 = null;
            t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003150115 = (addInt(i_3003150115, 1) & mskHEX60gensym36_3003150119);
                  if (isEmpty_1308622877(t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003150127 = (t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)].Field0 & mskHEX60gensym36_3003150119);
                  if (!(((((rHEX60gensym36_3003150127 <= i_3003150115) && (jHEX60gensym36_3003150126 < rHEX60gensym36_3003150127)) || ((jHEX60gensym36_3003150126 < rHEX60gensym36_3003150127) && (i_3003150115 < jHEX60gensym36_3003150126))) || ((i_3003150115 < jHEX60gensym36_3003150126) && (rHEX60gensym36_3003150127 <= i_3003150115))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003150106.data[chckIndx(jHEX60gensym36_3003150126, 0, (t_3003150106.data).length - 1)] = nimCopy(t_3003150106.data[chckIndx(jHEX60gensym36_3003150126, 0, (t_3003150106.data).length - 1)], t_3003150106.data[chckIndx(i_3003150115, 0, (t_3003150106.data).length - 1)], NTI3003122350);
          }
      };
    };
    }
    

  
}

function resize_3003148335(cache_3003148338) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003148338.capacity < len_3003148417(cache_3003148338))) break Label2;
          var t_3003148505 = cache_3003148338.list.tail;
          if (cache_3003148338.recordRemovedKeys) {
          incl_3003148525(cache_3003148338.removedKeys, t_3003148505.value.key);
          }
          
          del_3003150103(cache_3003148338.table, t_3003148505.value.key);
          remove_3003150862(cache_3003148338.list, t_3003148505);
        }
    };

  
}

function addNewNode_3003145436(cache_3003145439, key_3003145440, val_3003145441) {
    var node_3003145462 = newDoublyLinkedNode_3003145444({key: key_3003145440, val: val_3003145441});
    HEX5BHEX5DHEX3D_3003145526(cache_3003145439.table, key_3003145440, node_3003145462);
    prepend_3003147133(cache_3003145439.list, node_3003145462);
    if (cache_3003145439.recordRemovedKeys) {
    excl_3003147361(cache_3003145439.removedKeys, key_3003145440);
    }
    
    resize_3003148335(cache_3003145439);

  
}

function HEX5BHEX5DHEX3D_3003144860(cache_3003144863, key_3003144864, val_3003144865) {
    var node_3003145409 = getOrDefault_3003144955(cache_3003144863.table, key_3003144864, null);
    if ((node_3003145409 == null)) {
    addNewNode_3003145436(cache_3003144863, key_3003144864, val_3003144865);
    }
    else {
      node_3003145409.value.val = val_3003144865;
      remove_3003150862(cache_3003144863.list, node_3003145409);
      prepend_3003147133(cache_3003144863.list, node_3003145409);
    }
    

  
}

function initDoublyLinkedList_3003151329() {
  var result_3003151331 = ({head: null, tail: null});

  return result_3003151331;

}

function initTable_3003151335(initialSize_3003151338) {
  var result_3003151339 = ({data: [], counter: 0});

    var correctSizeHEX60gensym254_3003151341 = slotsNeeded_1308622891(chckRange(initialSize_3003151338, 0, 2147483647));
    result_3003151339.counter = 0;
    result_3003151339.data = new Array(chckRange(correctSizeHEX60gensym254_3003151341, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym254_3003151341, 0, 2147483647) ; ++i) { result_3003151339.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003151339;

}

function newLruCache_3003151319(capacity_3003151322, recordRemovedKeys_3003151323) {
  var result_3003151324 = null;

    result_3003151324 = {capacity: capacity_3003151322, list: initDoublyLinkedList_3003151329(), table: initTable_3003151335(correctSize_3036676117(capacity_3003151322)), recordRemovedKeys: recordRemovedKeys_3003151323, removedKeys: ({data: [], counter: 0})};

  return result_3003151324;

}

function newCache_3003151314(capacity_3003151317) {
  var result_3003151318 = null;

    result_3003151318 = newLruCache_3003151319(capacity_3003151317, false);

  return result_3003151318;

}

function init_3003151309(result_3003151312, result_3003151312_Idx, capacity_3003151313) {
    result_3003151312[result_3003151312_Idx] = newCache_3003151314(capacity_3003151313);

  
}

function computeSymbolValueImpl_3003122501(ctx_3003122502, symbol_3003122503) {
      var Temporary3;
      var Temporary4;

  var result_3003221501 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym554_3003221503 = (ctx_3003122502.enableLogging || ctx_3003122502.enableQueryLogging);
    if (logQueryHEX60gensym554_3003221503) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym554_3003221503) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3087008904(symbol_3003122503) || []));
    }
    
    try {
    switch (symbol_3003122503.kind) {
    case 0:
      var Temporary3 = symbol_3003122503;
      if (ConstSet136[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      result_3003221501 = nimCopy(result_3003221501, computeValue_3003198726(ctx_3003122502, Temporary3.node, true), NTI3087007751);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_3003122503;
      if (ConstSet137[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      result_3003221501 = nimCopy(result_3003221501, Temporary4.value, NTI3087007751);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym554_3003221503 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008487(result_3003221501) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym554_3003221503) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003221501;

}

function getOrDefault_3003151707(t_3003151710, key_3003151711, default_3003151712) {
    var Temporary1;

  var result_3003151713 = null;

    var hcHEX60gensym257_3003151716 = [0];
    var indexHEX60gensym257_3003152071 = rawGet_3003151717(t_3003151710, key_3003151711, hcHEX60gensym257_3003151716, 0);
    if ((0 <= indexHEX60gensym257_3003152071)) {
    Temporary1 = t_3003151710.data[chckIndx(indexHEX60gensym257_3003152071, 0, (t_3003151710.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003151712;
    }
    
    result_3003151713 = Temporary1;

  return result_3003151713;

}

function newDoublyLinkedNode_3003152196(value_3003152198) {
  var result_3003152199 = null;

    result_3003152199 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_3003152199.value = nimCopy(result_3003152199.value, value_3003152198, NTI3003122389);

  return result_3003152199;

}

function mustRehash_3003152555(t_3003152557) {
  var result_3003152558 = false;

    if (!((t_3003152557.counter < (t_3003152557.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003152558 = ((mulInt((t_3003152557.data).length, 2) < mulInt(t_3003152557.counter, 3)) || (subInt((t_3003152557.data).length, t_3003152557.counter) < 4));

  return result_3003152558;

}

function rawInsert_3003153248(t_3003153252, data_3003153253, data_3003153253_Idx, key_3003153254, val_3003153255, hc_3003153256, h_3003153257) {
    data_3003153253[data_3003153253_Idx][chckIndx(h_3003153257, 0, (data_3003153253[data_3003153253_Idx]).length - 1)].Field1 = key_3003153254;
    data_3003153253[data_3003153253_Idx][chckIndx(h_3003153257, 0, (data_3003153253[data_3003153253_Idx]).length - 1)].Field2 = val_3003153255;
    data_3003153253[data_3003153253_Idx][chckIndx(h_3003153257, 0, (data_3003153253[data_3003153253_Idx]).length - 1)].Field0 = hc_3003153256;

  
}

function enlarge_3003152812(t_3003152815) {
    var n_3003152818 = [];
    n_3003152818 = new Array(chckRange(mulInt((t_3003152815.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003152815.data).length, 2), 0, 2147483647) ; ++i) { n_3003152818[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003152815.data; t_3003152815.data = n_3003152818; n_3003152818 = Temporary1;    Label2: {
      var i_3003152916 = 0;
      var colontmp__2952790476 = 0;
      colontmp__2952790476 = (n_3003152818).length - 1;
      var res_2952790477 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790477 <= colontmp__2952790476)) break Label4;
            i_3003152916 = res_2952790477;
            var eh_3003152997 = n_3003152818[chckIndx(i_3003152916, 0, (n_3003152818).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003152997)) {
            var j_3003153001 = (eh_3003152997 & (t_3003152815.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003152815.data[chckIndx(j_3003153001, 0, (t_3003152815.data).length - 1)].Field0)) break Label6;
                  j_3003153001 = nextTry_1308622883(j_3003153001, (t_3003152815.data).length - 1);
                }
            };
            rawInsert_3003153248(t_3003152815, t_3003152815, "data", n_3003152818[chckIndx(i_3003152916, 0, (n_3003152818).length - 1)].Field1, n_3003152818[chckIndx(i_3003152916, 0, (n_3003152818).length - 1)].Field2, eh_3003152997, j_3003153001);
            }
            
            res_2952790477 = addInt(res_2952790477, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003153498(t_3003153501, key_3003153502, hc_3003153503) {
  var result_3003153504 = 0;

  BeforeRet: {
    if (((t_3003153501.data).length == 0)) {
    result_3003153504 = -1;
    break BeforeRet;
    }
    
    var h_3003153589 = (hc_3003153503 & (t_3003153501.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003153501.data[chckIndx(h_3003153589, 0, (t_3003153501.data).length - 1)].Field0)) break Label2;
          if (((t_3003153501.data[chckIndx(h_3003153589, 0, (t_3003153501.data).length - 1)].Field0 == hc_3003153503) && HEX3DHEX3D_3087008910(t_3003153501.data[chckIndx(h_3003153589, 0, (t_3003153501.data).length - 1)].Field1, key_3003153502))) {
          result_3003153504 = h_3003153589;
          break BeforeRet;
          }
          
          h_3003153589 = nextTry_1308622883(h_3003153589, (t_3003153501.data).length - 1);
        }
    };
    result_3003153504 = subInt(-1, h_3003153589);
  };

  return result_3003153504;

}

function HEX5BHEX5DHEX3D_3003152287(t_3003152290, key_3003152291, val_3003152292) {
    if (((t_3003152290.data).length == 0)) {
    var correctSizeHEX60gensym262_3003152375 = slotsNeeded_1308622891(32);
    t_3003152290.counter = 0;
    t_3003152290.data = new Array(chckRange(correctSizeHEX60gensym262_3003152375, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym262_3003152375, 0, 2147483647) ; ++i) { t_3003152290.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003152380 = [0];
    var index_3003152387 = rawGet_3003151717(t_3003152290, key_3003152291, hc_3003152380, 0);
    if ((0 <= index_3003152387)) {
    t_3003152290.data[chckIndx(index_3003152387, 0, (t_3003152290.data).length - 1)].Field2 = val_3003152292;
    }
    else {
      if (((t_3003152290.data).length == 0)) {
      var correctSizeHEX60gensym265_3003152550 = slotsNeeded_1308622891(32);
      t_3003152290.counter = 0;
      t_3003152290.data = new Array(chckRange(correctSizeHEX60gensym265_3003152550, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym265_3003152550, 0, 2147483647) ; ++i) { t_3003152290.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003152555(t_3003152290)) {
      enlarge_3003152812(t_3003152290);
      index_3003152387 = rawGetKnownHC_3003153498(t_3003152290, key_3003152291, hc_3003152380[0]);
      }
      
      index_3003152387 = subInt(-1, index_3003152387);
      rawInsert_3003153248(t_3003152290, t_3003152290, "data", key_3003152291, val_3003152292, hc_3003152380[0], index_3003152387);
      t_3003152290.counter = addInt(t_3003152290.counter, 1);
    }
    

  
}

function len_3003154314(t_3003154317) {
  var result_3003154318 = 0;

    result_3003154318 = t_3003154317.counter;

  return result_3003154318;

}

function len_3003154231(cache_3003154234) {
  var result_3003154235 = 0;

    result_3003154235 = len_3003154314(cache_3003154234.table);

  return result_3003154235;

}

function del_3003154406(t_3003154409, key_3003154410) {
    var hc_3003154411 = [0];
    var i_3003154418 = rawGet_3003151717(t_3003154409, key_3003154410, hc_3003154411, 0);
    var mskHEX60gensym36_3003154422 = (t_3003154409.data).length - 1;
    if ((0 <= i_3003154418)) {
    t_3003154409.counter = subInt(t_3003154409.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003154429 = i_3003154418;
            var rHEX60gensym36_3003154430 = jHEX60gensym36_3003154429;
            t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field0 = 0;
            t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field1 = null;
            t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003154418 = (addInt(i_3003154418, 1) & mskHEX60gensym36_3003154422);
                  if (isEmpty_1308622877(t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003154430 = (t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)].Field0 & mskHEX60gensym36_3003154422);
                  if (!(((((rHEX60gensym36_3003154430 <= i_3003154418) && (jHEX60gensym36_3003154429 < rHEX60gensym36_3003154430)) || ((jHEX60gensym36_3003154429 < rHEX60gensym36_3003154430) && (i_3003154418 < jHEX60gensym36_3003154429))) || ((i_3003154418 < jHEX60gensym36_3003154429) && (rHEX60gensym36_3003154430 <= i_3003154418))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003154409.data[chckIndx(jHEX60gensym36_3003154429, 0, (t_3003154409.data).length - 1)] = nimCopy(t_3003154409.data[chckIndx(jHEX60gensym36_3003154429, 0, (t_3003154409.data).length - 1)], t_3003154409.data[chckIndx(i_3003154418, 0, (t_3003154409.data).length - 1)], NTI3003122425);
          }
      };
    };
    }
    

  
}

function resize_3003154149(cache_3003154152) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003154152.capacity < len_3003154231(cache_3003154152))) break Label2;
          var t_3003154319 = cache_3003154152.list.tail;
          if (cache_3003154152.recordRemovedKeys) {
          incl_3003148525(cache_3003154152.removedKeys, t_3003154319.value.key);
          }
          
          del_3003154406(cache_3003154152.table, t_3003154319.value.key);
          remove_3003155165(cache_3003154152.list, t_3003154319);
        }
    };

  
}

function addNewNode_3003152188(cache_3003152191, key_3003152192, val_3003152193) {
    var node_3003152223 = newDoublyLinkedNode_3003152196({key: key_3003152192, val: nimCopy(null, val_3003152193, NTI3087007751)});
    HEX5BHEX5DHEX3D_3003152287(cache_3003152191.table, key_3003152192, node_3003152223);
    prepend_3003153894(cache_3003152191.list, node_3003152223);
    if (cache_3003152191.recordRemovedKeys) {
    excl_3003147361(cache_3003152191.removedKeys, key_3003152192);
    }
    
    resize_3003154149(cache_3003152191);

  
}

function HEX5BHEX5DHEX3D_3003151612(cache_3003151615, key_3003151616, val_3003151617) {
    var node_3003152161 = getOrDefault_3003151707(cache_3003151615.table, key_3003151616, null);
    if ((node_3003152161 == null)) {
    addNewNode_3003152188(cache_3003151615, key_3003151616, val_3003151617);
    }
    else {
      node_3003152161.value.val = nimCopy(node_3003152161.value.val, val_3003151617, NTI3087007751);
      remove_3003155165(cache_3003151615.list, node_3003152161);
      prepend_3003153894(cache_3003151615.list, node_3003152161);
    }
    

  
}

function initDoublyLinkedList_3003155632() {
  var result_3003155634 = ({head: null, tail: null});

  return result_3003155634;

}

function initTable_3003155638(initialSize_3003155641) {
  var result_3003155642 = ({data: [], counter: 0});

    var correctSizeHEX60gensym275_3003155644 = slotsNeeded_1308622891(chckRange(initialSize_3003155641, 0, 2147483647));
    result_3003155642.counter = 0;
    result_3003155642.data = new Array(chckRange(correctSizeHEX60gensym275_3003155644, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym275_3003155644, 0, 2147483647) ; ++i) { result_3003155642.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003155642;

}

function newLruCache_3003155622(capacity_3003155625, recordRemovedKeys_3003155626) {
  var result_3003155627 = null;

    result_3003155627 = {capacity: capacity_3003155625, list: initDoublyLinkedList_3003155632(), table: initTable_3003155638(correctSize_3036676117(capacity_3003155625)), recordRemovedKeys: recordRemovedKeys_3003155626, removedKeys: ({data: [], counter: 0})};

  return result_3003155627;

}

function newCache_3003155617(capacity_3003155620) {
  var result_3003155621 = null;

    result_3003155621 = newLruCache_3003155622(capacity_3003155620, false);

  return result_3003155621;

}

function init_3003155612(result_3003155615, result_3003155615_Idx, capacity_3003155616) {
    result_3003155615[result_3003155615_Idx] = newCache_3003155617(capacity_3003155616);

  
}

function hasKey_3003155855(t_3003155858, key_3003155859) {
  var result_3003155860 = false;

    var hc_3003155861 = [0];
    result_3003155860 = (0 <= rawGet_3003155862(t_3003155858, key_3003155859, hc_3003155861, 0));

  return result_3003155860;

}

function contains_3003155849(t_3003155852, key_3003155853) {
  var result_3003155854 = false;

  BeforeRet: {
    result_3003155854 = hasKey_3003155855(t_3003155852, key_3003155853);
    break BeforeRet;
  };

  return result_3003155854;

}

function contains_3003155755(cache_3003155758, key_3003155759) {
  var result_3003155760 = false;

    result_3003155760 = contains_3003155849(cache_3003155758.table, key_3003155759);

  return result_3003155760;

}

function HEX5BHEX5D_3003156394(t_3003156397, key_3003156398) {
  var result_3003156399 = null;
  var result_3003156399_Idx = 0;

    var hcHEX60gensym22_3003156400 = [0];
    var indexHEX60gensym22_3003156407 = rawGet_3003155862(t_3003156397, key_3003156398, hcHEX60gensym22_3003156400, 0);
    if ((0 <= indexHEX60gensym22_3003156407)) {
    result_3003156399 = t_3003156397.data[chckIndx(indexHEX60gensym22_3003156407, 0, (t_3003156397.data).length - 1)]; result_3003156399_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003156398);
    }
    

  return [result_3003156399, result_3003156399_Idx];

}

function HEX5BHEX5D_3003156308(cache_3003156311, key_3003156312) {
    var Temporary1;

  var result_3003156313 = null;

    var node_3003156500 = (Temporary1 = HEX5BHEX5D_3003156394(cache_3003156311.table, key_3003156312), Temporary1)[0][Temporary1[1]];
    result_3003156313 = node_3003156500.value.val;
    remove_3003156514(cache_3003156311.list, node_3003156500);
    prepend_3003156842(cache_3003156311.list, node_3003156500);

  return result_3003156313;

}

function initTable_3137341628(initialSize_3137341631) {
  var result_3137341632 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3137341634 = slotsNeeded_1308622891(chckRange(initialSize_3137341631, 0, 2147483647));
    result_3137341632.counter = 0;
    result_3137341632.data = new Array(chckRange(correctSizeHEX60gensym58_3137341634, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3137341634, 0, 2147483647) ; ++i) { result_3137341632.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3137341632;

}

function rawGet_3137339557(t_3137339560, key_3137339561, hc_3137339562, hc_3137339562_Idx) {
  var result_3137339563 = 0;

  BeforeRet: {
    hc_3137339562[hc_3137339562_Idx] = hash_2181038324(key_3137339561);
    if ((hc_3137339562[hc_3137339562_Idx] == 0)) {
    hc_3137339562[hc_3137339562_Idx] = 314159265;
    }
    
    if (((t_3137339560.data).length == 0)) {
    result_3137339563 = -1;
    break BeforeRet;
    }
    
    var h_3137339614 = (hc_3137339562[hc_3137339562_Idx] & (t_3137339560.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field0)) break Label2;
          if (((t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field0 == hc_3137339562[hc_3137339562_Idx]) && HEX3DHEX3D_2181038320(t_3137339560.data[chckIndx(h_3137339614, 0, (t_3137339560.data).length - 1)].Field1, key_3137339561))) {
          result_3137339563 = h_3137339614;
          break BeforeRet;
          }
          
          h_3137339614 = nextTry_1308622883(h_3137339614, (t_3137339560.data).length - 1);
        }
    };
    result_3137339563 = subInt(-1, h_3137339614);
  };

  return result_3137339563;

}

function mustRehash_3137339902(t_3137339904) {
  var result_3137339905 = false;

    if (!((t_3137339904.counter < (t_3137339904.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3137339905 = ((mulInt((t_3137339904.data).length, 2) < mulInt(t_3137339904.counter, 3)) || (subInt((t_3137339904.data).length, t_3137339904.counter) < 4));

  return result_3137339905;

}

function rawInsert_3137340351(t_3137340355, data_3137340356, data_3137340356_Idx, key_3137340357, val_3137340358, hc_3137340359, h_3137340360) {
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field1 = nimCopy(data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field1, key_3137340357, NTI2181038083);
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field2 = nimCopy(data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field2, val_3137340358, NTI3087007751);
    data_3137340356[data_3137340356_Idx][chckIndx(h_3137340360, 0, (data_3137340356[data_3137340356_Idx]).length - 1)].Field0 = hc_3137340359;

  
}

function enlarge_3137340057(t_3137340060) {
    var n_3137340063 = [];
    n_3137340063 = new Array(chckRange(mulInt((t_3137340060.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3137340060.data).length, 2), 0, 2147483647) ; ++i) { n_3137340063[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3137340060.data; t_3137340060.data = n_3137340063; n_3137340063 = Temporary1;    Label2: {
      var i_3137340127 = 0;
      var colontmp__2952790491 = 0;
      colontmp__2952790491 = (n_3137340063).length - 1;
      var res_2952790492 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790492 <= colontmp__2952790491)) break Label4;
            i_3137340127 = res_2952790492;
            var eh_3137340181 = n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field0;
            if (isFilled_1308622880(eh_3137340181)) {
            var j_3137340185 = (eh_3137340181 & (t_3137340060.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3137340060.data[chckIndx(j_3137340185, 0, (t_3137340060.data).length - 1)].Field0)) break Label6;
                  j_3137340185 = nextTry_1308622883(j_3137340185, (t_3137340060.data).length - 1);
                }
            };
            rawInsert_3137340351(t_3137340060, t_3137340060, "data", n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field1, n_3137340063[chckIndx(i_3137340127, 0, (n_3137340063).length - 1)].Field2, eh_3137340181, j_3137340185);
            }
            
            res_2952790492 = addInt(res_2952790492, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3137340520(t_3137340523, key_3137340524, hc_3137340525) {
  var result_3137340526 = 0;

  BeforeRet: {
    if (((t_3137340523.data).length == 0)) {
    result_3137340526 = -1;
    break BeforeRet;
    }
    
    var h_3137340577 = (hc_3137340525 & (t_3137340523.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field0)) break Label2;
          if (((t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field0 == hc_3137340525) && HEX3DHEX3D_2181038320(t_3137340523.data[chckIndx(h_3137340577, 0, (t_3137340523.data).length - 1)].Field1, key_3137340524))) {
          result_3137340526 = h_3137340577;
          break BeforeRet;
          }
          
          h_3137340577 = nextTry_1308622883(h_3137340577, (t_3137340523.data).length - 1);
        }
    };
    result_3137340526 = subInt(-1, h_3137340577);
  };

  return result_3137340526;

}

function HEX5BHEX5DHEX3D_3137339496(t_3137339499, key_3137339500, val_3137339501) {
    if (((t_3137339499.data).length == 0)) {
    var correctSizeHEX60gensym3_3137339551 = slotsNeeded_1308622891(32);
    t_3137339499.counter = 0;
    t_3137339499.data = new Array(chckRange(correctSizeHEX60gensym3_3137339551, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3137339551, 0, 2147483647) ; ++i) { t_3137339499.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3137339556 = [0];
    var index_3137339795 = rawGet_3137339557(t_3137339499, key_3137339500, hc_3137339556, 0);
    if ((0 <= index_3137339795)) {
    t_3137339499.data[chckIndx(index_3137339795, 0, (t_3137339499.data).length - 1)].Field2 = nimCopy(t_3137339499.data[chckIndx(index_3137339795, 0, (t_3137339499.data).length - 1)].Field2, val_3137339501, NTI3087007751);
    }
    else {
      if (((t_3137339499.data).length == 0)) {
      var correctSizeHEX60gensym8_3137339897 = slotsNeeded_1308622891(32);
      t_3137339499.counter = 0;
      t_3137339499.data = new Array(chckRange(correctSizeHEX60gensym8_3137339897, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3137339897, 0, 2147483647) ; ++i) { t_3137339499.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3137339902(t_3137339499)) {
      enlarge_3137340057(t_3137339499);
      index_3137339795 = rawGetKnownHC_3137340520(t_3137339499, key_3137339500, hc_3137339556[0]);
      }
      
      index_3137339795 = subInt(-1, index_3137339795);
      rawInsert_3137340351(t_3137339499, t_3137339499, "data", key_3137339500, val_3137339501, hc_3137339556[0], index_3137339795);
      t_3137339499.counter = addInt(t_3137339499.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3137340958(t_3137340961, key_3137340962) {
  var result_3137340963 = false;

    var hc_3137340964 = [0];
    result_3137340963 = (0 <= rawGet_3137339557(t_3137340961, key_3137340962, hc_3137340964, 0));

  return result_3137340963;

}

function contains_3137340952(t_3137340955, key_3137340956) {
  var result_3137340957 = false;

  BeforeRet: {
    result_3137340957 = hasKey_3137340958(t_3137340955, key_3137340956);
    break BeforeRet;
  };

  return result_3137340957;

}

function HEX5BHEX5D_3137341024(t_3137341027, key_3137341028) {
  var result_3137341029 = null;

    var hcHEX60gensym22_3137341030 = [0];
    var indexHEX60gensym22_3137341037 = rawGet_3137339557(t_3137341027, key_3137341028, hcHEX60gensym22_3137341030, 0);
    if ((0 <= indexHEX60gensym22_3137341037)) {
    result_3137341029 = t_3137341027.data[chckIndx(indexHEX60gensym22_3137341037, 0, (t_3137341027.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_3137341028);
    }
    

  return result_3137341029;

}

function newFunctionExecutionContext_3003191967(ctxHEX60gensym87_3003191968, dataHEX60gensym87_3003191969) {
  var result_3003191970 = null;

  BeforeRet: {
    var itemHEX60gensym87_3003191971 = getItem_3003188626(dataHEX60gensym87_3003191969);
    var keyHEX60gensym87_3003191972 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_3003191971, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym87_3003191968.depGraph.changed, keyHEX60gensym87_3003191972, ctxHEX60gensym87_3003191968.depGraph.revision);
    HEX5BHEX5DHEX3D_3003188782(ctxHEX60gensym87_3003191968.itemsFunctionExecutionContext, itemHEX60gensym87_3003191971, dataHEX60gensym87_3003191969);
    result_3003191970 = dataHEX60gensym87_3003191969;
    break BeforeRet;
  };

  return result_3003191970;

}

function executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, node_3137340765, variables_3137340768) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3137340769 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3137340763.enableExecutionLogging) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (ctx_3137340763.enableExecutionLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_2986346455(node_3137340765));
    }
    
    try {
    Label3: {
      var expr_3137340780 = node_3137340765;
      var pos_3137340781 = 0;
      var _ = pos_3137340781;
      if ((expr_3137340780.kind == 0)) {
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 7)) {
      var lastValue_3137340792 = errorValue_3087008431();
      Label4: {
        var child_3137340796 = null;
        var i_2952790497 = 0;
        var L_2952790498 = (node_3137340765.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2952790497 < L_2952790498)) break Label6;
              child_3137340796 = node_3137340765.children[chckIndx(i_2952790497, 0, (node_3137340765.children).length - 1)];
              lastValue_3137340792 = nimCopy(lastValue_3137340792, executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, child_3137340796, variables_3137340768), NTI3087007751);
              i_2952790497 = addInt(i_2952790497, 1);
              if (!(((node_3137340765.children).length == L_2952790498))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3137340769 = nimCopy(result_3137340769, lastValue_3137340792, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 3)) {
      result_3137340769 = nimCopy(result_3137340769, {kind: 2, stringValue: nimCopy(null, node_3137340765.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3137340765.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3137340805 = Temporary7;
      result_3137340769 = nimCopy(result_3137340769, {kind: 3, intValue: value_3137340805, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 9)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var index_3137340810 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3137340810, 1) < len_2986344536(node_3137340765))) break Label10;
            try {
            var condition_3137340815 = HEX5BHEX5D_2986344532(node_3137340765, index_3137340810);
            var trueCase_3137340816 = HEX5BHEX5D_2986344532(node_3137340765, addInt(index_3137340810, 1));
            var conditionValue_3137340817 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, condition_3137340815, variables_3137340768);
            if ((conditionValue_3137340817.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3137340817.kind == 3))) {
            var fmtRes_3137340830 = [mnewString(0)];
            fmtRes_3137340830[0].push.apply(fmtRes_3137340830[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3137340830, 0, conditionValue_3137340817, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340830[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3137340817;
              if (ConstSet138[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3087007750)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3137340836 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, trueCase_3137340816, variables_3137340768);
            result_3137340769 = nimCopy(result_3137340769, trueCaseValue_3137340836, NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3137340810 = addInt(index_3137340810, 2);
            }
          }
      };
      if (!((modInt(len_2986344536(node_3137340765), 2) == 0))) {
      var falseCaseValue_3137340837 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, last_2986344706(node_3137340765), variables_3137340768);
      result_3137340769 = nimCopy(result_3137340769, falseCaseValue_3137340837, NTI3087007751);
      break BeforeRet;
      }
      
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 10)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var condition_3137340842 = HEX5BHEX5D_2986344532(node_3137340765, 0);
      var body_3137340843 = HEX5BHEX5D_2986344532(node_3137340765, 1);
      var index_3137340844 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3137340865 = get_1191185108(fec_3137340764.maxLoopIterations, 1000);
            if ((maxLoopIterations_3137340865 < index_3137340844)) {
            var fmtRes_3137340870 = [mnewString(0)];
            fmtRes_3137340870[0].push.apply(fmtRes_3137340870[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2332033380(fmtRes_3137340870, 0, maxLoopIterations_3137340865, []);
            fmtRes_3137340870[0].push.apply(fmtRes_3137340870[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3087008579(fmtRes_3137340870, 0, node_3137340765, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340870[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            var conditionValue_3137340881 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, condition_3137340842, variables_3137340768);
            if ((conditionValue_3137340881.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            if (!((conditionValue_3137340881.kind == 3))) {
            var fmtRes_3137340894 = [mnewString(0)];
            fmtRes_3137340894[0].push.apply(fmtRes_3137340894[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3137340831(fmtRes_3137340894, 0, conditionValue_3137340881, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137340894[0], NTI33554449)]);
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3137340881;
              if (ConstSet139[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3087007750)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3137340900 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, body_3137340843, variables_3137340768);
            if ((bodyValue_3137340900.kind == 0)) {
            result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            } finally {
            index_3137340844 = addInt(index_3137340844, 1);
            }
          }
      };
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 1)) {
      var id_3137340909 = nimCopy(null, node_3137340765.reff, NTI2181038083);
      if (contains_3137340952(variables_3137340768, id_3137340909)) {
      result_3137340769 = nimCopy(result_3137340769, HEX5BHEX5D_3137341024(variables_3137340768, id_3137340909), NTI3087007751);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3137341105 = computeSymbol_3003201856(ctx_3137340763, node_3137340765, true);
        if (!isSome_3087009345(oHEX60gensym44_3137341105)) Temporary17 = false; else {          var sym_3137341128 = get_3087009365(oHEX60gensym44_3137341105);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3137341129 = computeSymbolValue_3003211931(ctx_3137340763, sym_3137341128, true);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, id_3137340909, value_3137341129);
      result_3137340769 = nimCopy(result_3137340769, value_3137341129, NTI3087007751);
      break BeforeRet;
      }
      
      var fmtRes_3137341180 = [mnewString(0)];
      fmtRes_3137341180[0].push.apply(fmtRes_3137341180[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3087008579(fmtRes_3137341180, 0, node_3137340765, []);
      fmtRes_3137341180[0].push.apply(fmtRes_3137341180[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341180[0], NTI33554449)]);
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 8)) {
      var function_3137341190 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, HEX5BHEX5D_2986344532(node_3137340765, 0), variables_3137340768);
      switch (function_3137341190.kind) {
      case 0:
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        break;
      case 4:
        var args_3137341195 = [];
        Label18: {
          var arg_3137341232 = null;
          var colontmp__2952790503 = [];
          colontmp__2952790503 = HEX5BHEX5D_3137341205(node_3137340765.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2952790504 = 0;
          var L_2952790505 = (colontmp__2952790503).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2952790504 < L_2952790505)) break Label20;
                arg_3137341232 = colontmp__2952790503[chckIndx(i_2952790504, 0, (colontmp__2952790503).length - 1)];
                var value_3137341233 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, arg_3137341232, variables_3137340768);
                if ((value_3137341233.kind == 0)) {
                result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3137341233, NTI3087007751);
                args_3137341195.push(Temporary21);;
                i_2952790504 = addInt(i_2952790504, 1);
                if (!(((colontmp__2952790503).length == L_2952790505))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3137341190;
        if (ConstSet140[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3087007750)); }
        result_3137340769 = nimCopy(result_3137340769, Temporary22.impl(args_3137341195), NTI3087007751);
        break BeforeRet;
        break;
      case 5:
        var args_3137341246 = [];
        Label23: {
          var arg_3137341265 = null;
          var colontmp__2952790508 = [];
          colontmp__2952790508 = HEX5BHEX5D_3137341205(node_3137340765.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2952790509 = 0;
          var L_2952790510 = (colontmp__2952790508).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2952790509 < L_2952790510)) break Label25;
                arg_3137341265 = colontmp__2952790508[chckIndx(i_2952790509, 0, (colontmp__2952790508).length - 1)];
                var value_3137341266 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, arg_3137341265, variables_3137340768);
                if ((value_3137341266.kind == 0)) {
                result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3137341266, NTI3087007751);
                args_3137341246.push(Temporary26);;
                i_2952790509 = addInt(i_2952790509, 1);
                if (!(((colontmp__2952790508).length == L_2952790510))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3137341190;
        if (ConstSet141[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007750)); }
        var fec_3137341275 = newFunctionExecutionContext_3003191967(ctx_3137340763, {node: Temporary27.node, arguments: nimCopy(null, args_3137341246, NTI3137340402), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3137340769 = nimCopy(result_3137340769, computeFunctionExecution_3003215035(ctx_3137340763, fec_3137341275), NTI3087007751);
        break BeforeRet;
        break;
      default: 
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3137340780.kind == 5)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3137341280 = HEX5BHEX5D_2986344532(node_3137340765, 1);
      var value_3137341281 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341280, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, node_3137340765.id, value_3137341281);
      result_3137340769 = nimCopy(result_3137340769, value_3137341281, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 6)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var valueNode_3137341332 = HEX5BHEX5D_2986344532(node_3137340765, 1);
      var value_3137341333 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341332, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, node_3137340765.id, value_3137341333);
      result_3137340769 = nimCopy(result_3137340769, value_3137341333, NTI3087007751);
      break BeforeRet;
      }
      else {
      if ((expr_3137340780.kind == 4)) {
      var id_3137341384 = nimCopy(null, node_3137340765.id, NTI2181038083);
      if (contains_3137340952(variables_3137340768, id_3137341384)) {
      result_3137340769 = nimCopy(result_3137340769, HEX5BHEX5D_3137341024(variables_3137340768, id_3137341384), NTI3087007751);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3137340780.kind == 13)) {
      if ((len_2986344536(node_3137340765) < 2)) {
      result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
      break BeforeRet;
      }
      
      var targetNode_3137341494 = HEX5BHEX5D_2986344532(node_3137340765, 0);
      var valueNode_3137341495 = HEX5BHEX5D_2986344532(node_3137340765, 1);
        var oHEX60gensym55_3137341498 = computeSymbol_3003201856(ctx_3137340763, targetNode_3137341494, true);
        if (!isSome_3087009345(oHEX60gensym55_3137341498)) Temporary28 = false; else {          var sym_3137341521 = get_3087009365(oHEX60gensym55_3137341498);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3137341522 = executeNodeRec_3137340762(ctx_3137340763, fec_3137340764, valueNode_3137341495, variables_3137340768);
      HEX5BHEX5DHEX3D_3137339496(variables_3137340768, sym_3137341521.id, value_3137341522);
      result_3137340769 = nimCopy(result_3137340769, voidValue_3087008460(), NTI3087007751);
      break BeforeRet;
      }
      else {
        var fmtRes_3137341573 = [mnewString(0)];
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3087008579(fmtRes_3137341573, 0, node_3137340765, []);
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3087008579(fmtRes_3137341573, 0, targetNode_3137341494, []);
        fmtRes_3137341573[0].push.apply(fmtRes_3137341573[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341573[0], NTI33554449)]);
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3137341588 = [mnewString(0)];
        fmtRes_3137341588[0].push.apply(fmtRes_3137341588[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3087008579(fmtRes_3137341588, 0, node_3137340765, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341588[0], NTI33554449)]);
        result_3137340769 = nimCopy(result_3137340769, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3137340763.enableExecutionLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [45,62,32], HEX24_3087008487(result_3137340769));
    }
    
    }
    } finally {
    if (ctx_3137340763.enableExecutionLogging) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3137340769;

}

function computeFunctionExecutionImpl2_3137341623(ctx_3137341624, fec_3137341625) {
      var Temporary4;
        var Temporary5;

  var result_3137341626 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3137341627 = HEX5BHEX5D_2986344532(fec_3137341625.node, 2);
    var variables_3137341639 = [initTable_3137341628(32)];
    var params_3137341640 = HEX5BHEX5D_2986344532(fec_3137341625.node, 0);
    Label1: {
      var i_3137341682 = 0;
      var arg_3137341683 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952790485 = 0;
      var L_2952790486 = (fec_3137341625.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790485 < L_2952790486)) break Label3;
            i_3137341682 = i_2952790485;
            arg_3137341683 = nimCopy(arg_3137341683, fec_3137341625.arguments[chckIndx(i_2952790485, 0, (fec_3137341625.arguments).length - 1)], NTI3087007751);
            if ((len_2986344536(params_3137341640) <= i_3137341682)) {
            var fmtRes_3137341688 = [mnewString(0)];
            fmtRes_3137341688[0].push.apply(fmtRes_3137341688[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2332033380(fmtRes_3137341688, 0, len_2986344536(params_3137341640), []);
            fmtRes_3137341688[0].push.apply(fmtRes_3137341688[0], [44,32,103,111,116,32]);;
            formatValue_2332033380(fmtRes_3137341688, 0, (fec_3137341625.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3137341688[0], NTI33554449)]);
            result_3137341626 = nimCopy(result_3137341626, errorValue_3087008431(), NTI3087007751);
            break BeforeRet;
            }
            
            var param_3137341702 = HEX5BHEX5D_2986344532(params_3137341640, i_3137341682);
            HEX5BHEX5DHEX3D_3137339496(variables_3137341639[0], param_3137341702.id, arg_3137341683);
            i_2952790485 = addInt(i_2952790485, 1);
            if (!(((fec_3137341625.arguments).length == L_2952790486))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3137341749 = executeNodeRec_3137340762(ctx_3137341624, fec_3137341625, body_3137341627, variables_3137341639[0]);
    if ((bodyResult_3137341749.kind == 0)) {
    result_3137341626 = nimCopy(result_3137341626, errorValue_3087008431(), NTI3087007751);
    break BeforeRet;
    }
    
    var functionType_3137341754 = computeType_3003195250(ctx_3137341624, fec_3137341625.node, true);
      if (!(functionType_3137341754.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3137341754;
        if (ConstSet142[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3137341626 = nimCopy(result_3137341626, voidValue_3087008460(), NTI3087007751);
    break BeforeRet;
    }
    
    result_3137341626 = nimCopy(result_3137341626, bodyResult_3137341749, NTI3087007751);
    break BeforeRet;
  };

  return result_3137341626;

}

function computeFunctionExecutionImpl_3003122504(ctx_3003122505, fec_3003122506) {
  var result_3003218792 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym530_3003218794 = (ctx_3003122505.enableLogging || ctx_3003122505.enableQueryLogging);
    if (logQueryHEX60gensym530_3003218794) {
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym530_3003218794) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3087008571(fec_3003122506) || []));
    }
    
    try {
    result_3003218792 = nimCopy(result_3003218792, computeFunctionExecutionImpl2_3137341623(ctx_3003122505, fec_3003122506), NTI3087007751);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym530_3003218794 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3087008487(result_3003218792) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym530_3003218794) {
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], 1);
    }
    
    }
  };

  return result_3003218792;

}

function getOrDefault_3003157224(t_3003157227, key_3003157228, default_3003157229) {
    var Temporary1;

  var result_3003157230 = null;

    var hcHEX60gensym282_3003157233 = [0];
    var indexHEX60gensym282_3003157588 = rawGet_3003157234(t_3003157227, key_3003157228, hcHEX60gensym282_3003157233, 0);
    if ((0 <= indexHEX60gensym282_3003157588)) {
    Temporary1 = t_3003157227.data[chckIndx(indexHEX60gensym282_3003157588, 0, (t_3003157227.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003157229;
    }
    
    result_3003157230 = Temporary1;

  return result_3003157230;

}

function newDoublyLinkedNode_3003157713(value_3003157715) {
  var result_3003157716 = null;

    result_3003157716 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_3003157716.value = nimCopy(result_3003157716.value, value_3003157715, NTI3003122455);

  return result_3003157716;

}

function mustRehash_3003158072(t_3003158074) {
  var result_3003158075 = false;

    if (!((t_3003158074.counter < (t_3003158074.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003158075 = ((mulInt((t_3003158074.data).length, 2) < mulInt(t_3003158074.counter, 3)) || (subInt((t_3003158074.data).length, t_3003158074.counter) < 4));

  return result_3003158075;

}

function rawInsert_3003158765(t_3003158769, data_3003158770, data_3003158770_Idx, key_3003158771, val_3003158772, hc_3003158773, h_3003158774) {
    data_3003158770[data_3003158770_Idx][chckIndx(h_3003158774, 0, (data_3003158770[data_3003158770_Idx]).length - 1)].Field1 = key_3003158771;
    data_3003158770[data_3003158770_Idx][chckIndx(h_3003158774, 0, (data_3003158770[data_3003158770_Idx]).length - 1)].Field2 = val_3003158772;
    data_3003158770[data_3003158770_Idx][chckIndx(h_3003158774, 0, (data_3003158770[data_3003158770_Idx]).length - 1)].Field0 = hc_3003158773;

  
}

function enlarge_3003158329(t_3003158332) {
    var n_3003158335 = [];
    n_3003158335 = new Array(chckRange(mulInt((t_3003158332.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003158332.data).length, 2), 0, 2147483647) ; ++i) { n_3003158335[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003158332.data; t_3003158332.data = n_3003158335; n_3003158335 = Temporary1;    Label2: {
      var i_3003158433 = 0;
      var colontmp__2952790514 = 0;
      colontmp__2952790514 = (n_3003158335).length - 1;
      var res_2952790515 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790515 <= colontmp__2952790514)) break Label4;
            i_3003158433 = res_2952790515;
            var eh_3003158514 = n_3003158335[chckIndx(i_3003158433, 0, (n_3003158335).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003158514)) {
            var j_3003158518 = (eh_3003158514 & (t_3003158332.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003158332.data[chckIndx(j_3003158518, 0, (t_3003158332.data).length - 1)].Field0)) break Label6;
                  j_3003158518 = nextTry_1308622883(j_3003158518, (t_3003158332.data).length - 1);
                }
            };
            rawInsert_3003158765(t_3003158332, t_3003158332, "data", n_3003158335[chckIndx(i_3003158433, 0, (n_3003158335).length - 1)].Field1, n_3003158335[chckIndx(i_3003158433, 0, (n_3003158335).length - 1)].Field2, eh_3003158514, j_3003158518);
            }
            
            res_2952790515 = addInt(res_2952790515, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003159015(t_3003159018, key_3003159019, hc_3003159020) {
  var result_3003159021 = 0;

  BeforeRet: {
    if (((t_3003159018.data).length == 0)) {
    result_3003159021 = -1;
    break BeforeRet;
    }
    
    var h_3003159106 = (hc_3003159020 & (t_3003159018.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003159018.data[chckIndx(h_3003159106, 0, (t_3003159018.data).length - 1)].Field0)) break Label2;
          if (((t_3003159018.data[chckIndx(h_3003159106, 0, (t_3003159018.data).length - 1)].Field0 == hc_3003159020) && HEX3DHEX3D_3087008765(t_3003159018.data[chckIndx(h_3003159106, 0, (t_3003159018.data).length - 1)].Field1, key_3003159019))) {
          result_3003159021 = h_3003159106;
          break BeforeRet;
          }
          
          h_3003159106 = nextTry_1308622883(h_3003159106, (t_3003159018.data).length - 1);
        }
    };
    result_3003159021 = subInt(-1, h_3003159106);
  };

  return result_3003159021;

}

function HEX5BHEX5DHEX3D_3003157804(t_3003157807, key_3003157808, val_3003157809) {
    if (((t_3003157807.data).length == 0)) {
    var correctSizeHEX60gensym287_3003157892 = slotsNeeded_1308622891(32);
    t_3003157807.counter = 0;
    t_3003157807.data = new Array(chckRange(correctSizeHEX60gensym287_3003157892, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym287_3003157892, 0, 2147483647) ; ++i) { t_3003157807.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003157897 = [0];
    var index_3003157904 = rawGet_3003157234(t_3003157807, key_3003157808, hc_3003157897, 0);
    if ((0 <= index_3003157904)) {
    t_3003157807.data[chckIndx(index_3003157904, 0, (t_3003157807.data).length - 1)].Field2 = val_3003157809;
    }
    else {
      if (((t_3003157807.data).length == 0)) {
      var correctSizeHEX60gensym290_3003158067 = slotsNeeded_1308622891(32);
      t_3003157807.counter = 0;
      t_3003157807.data = new Array(chckRange(correctSizeHEX60gensym290_3003158067, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym290_3003158067, 0, 2147483647) ; ++i) { t_3003157807.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003158072(t_3003157807)) {
      enlarge_3003158329(t_3003157807);
      index_3003157904 = rawGetKnownHC_3003159015(t_3003157807, key_3003157808, hc_3003157897[0]);
      }
      
      index_3003157904 = subInt(-1, index_3003157904);
      rawInsert_3003158765(t_3003157807, t_3003157807, "data", key_3003157808, val_3003157809, hc_3003157897[0], index_3003157904);
      t_3003157807.counter = addInt(t_3003157807.counter, 1);
    }
    

  
}

function rawGet_3003159660(t_3003159663, key_3003159664, hc_3003159665, hc_3003159665_Idx) {
  var result_3003159666 = 0;

  BeforeRet: {
    hc_3003159665[hc_3003159665_Idx] = hash_3087008721(key_3003159664);
    if ((hc_3003159665[hc_3003159665_Idx] == 0)) {
    hc_3003159665[hc_3003159665_Idx] = 314159265;
    }
    
    if (((t_3003159663.data).length == 0)) {
    result_3003159666 = -1;
    break BeforeRet;
    }
    
    var h_3003159752 = (hc_3003159665[hc_3003159665_Idx] & (t_3003159663.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003159663.data[chckIndx(h_3003159752, 0, (t_3003159663.data).length - 1)].Field0)) break Label2;
          if (((t_3003159663.data[chckIndx(h_3003159752, 0, (t_3003159663.data).length - 1)].Field0 == hc_3003159665[hc_3003159665_Idx]) && HEX3DHEX3D_3087008765(t_3003159663.data[chckIndx(h_3003159752, 0, (t_3003159663.data).length - 1)].Field1, key_3003159664))) {
          result_3003159666 = h_3003159752;
          break BeforeRet;
          }
          
          h_3003159752 = nextTry_1828716586(h_3003159752, (t_3003159663.data).length - 1);
        }
    };
    result_3003159666 = subInt(-1, h_3003159752);
  };

  return result_3003159666;

}

function exclImpl_3003159654(s_3003159656, key_3003159657) {
          var Temporary5;

  var result_3003159658 = false;

  BeforeRet: {
    var hc_3003159659 = [0];
    var i_3003160014 = rawGet_3003159660(s_3003159656, key_3003159657, hc_3003159659, 0);
    var msk_3003160018 = (s_3003159656.data).length - 1;
    result_3003159658 = true;
    if ((0 <= i_3003160014)) {
    result_3003159658 = false;
    s_3003159656.counter = subInt(s_3003159656.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003160024 = i_3003160014;
          var r_3003160025 = j_3003160024;
          s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field0 = 0;
          s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003160014 = (addInt(i_3003160014, 1) & msk_3003160018);
                if (isEmpty_1828716580(s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003160025 = (s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)].Field0 & msk_3003160018);
                if (!(((((r_3003160025 <= i_3003160014) && (j_3003160024 < r_3003160025)) || ((j_3003160024 < r_3003160025) && (i_3003160014 < j_3003160024))) || ((i_3003160014 < j_3003160024) && (r_3003160025 <= i_3003160014))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)];
          s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)] = genericReset(s_3003159656.data[chckIndx(i_3003160014, 0, (s_3003159656.data).length - 1)], NTI3003122511);
          s_3003159656.data[chckIndx(j_3003160024, 0, (s_3003159656.data).length - 1)] = nimCopy(s_3003159656.data[chckIndx(j_3003160024, 0, (s_3003159656.data).length - 1)], Temporary5, NTI3003122511);
        }
    };
    }
    
  };

  return result_3003159658;

}

function excl_3003159639(s_3003159641, key_3003159642) {
    var _ = exclImpl_3003159654(s_3003159641, key_3003159642);

  
}

function len_3003160778(t_3003160781) {
  var result_3003160782 = 0;

    result_3003160782 = t_3003160781.counter;

  return result_3003160782;

}

function len_3003160695(cache_3003160698) {
  var result_3003160699 = 0;

    result_3003160699 = len_3003160778(cache_3003160698.table);

  return result_3003160699;

}

function mustRehash_3003160919(t_3003160921) {
  var result_3003160922 = false;

    if (!((t_3003160921.counter < (t_3003160921.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003160922 = ((mulInt((t_3003160921.data).length, 2) < mulInt(t_3003160921.counter, 3)) || (subInt((t_3003160921.data).length, t_3003160921.counter) < 4));

  return result_3003160922;

}

function rawGetKnownHC_3003161525(t_3003161528, key_3003161529, hc_3003161530) {
  var result_3003161531 = 0;

  BeforeRet: {
    if (((t_3003161528.data).length == 0)) {
    result_3003161531 = -1;
    break BeforeRet;
    }
    
    var h_3003161616 = (hc_3003161530 & (t_3003161528.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003161528.data[chckIndx(h_3003161616, 0, (t_3003161528.data).length - 1)].Field0)) break Label2;
          if (((t_3003161528.data[chckIndx(h_3003161616, 0, (t_3003161528.data).length - 1)].Field0 == hc_3003161530) && HEX3DHEX3D_3087008765(t_3003161528.data[chckIndx(h_3003161616, 0, (t_3003161528.data).length - 1)].Field1, key_3003161529))) {
          result_3003161531 = h_3003161616;
          break BeforeRet;
          }
          
          h_3003161616 = nextTry_1828716586(h_3003161616, (t_3003161528.data).length - 1);
        }
    };
    result_3003161531 = subInt(-1, h_3003161616);
  };

  return result_3003161531;

}

function rawInsert_3003162025(s_3003162027, data_3003162028, data_3003162028_Idx, key_3003162029, hc_3003162030, h_3003162031) {
    if (((data_3003162028[data_3003162028_Idx]).length == 0)) {
    var correctSizeHEX60gensym309_3003162114 = slotsNeeded_1828716594(64);
    s_3003162027.counter = 0;
    s_3003162027.data = new Array(chckRange(correctSizeHEX60gensym309_3003162114, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym309_3003162114, 0, 2147483647) ; ++i) { s_3003162027.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003162028[data_3003162028_Idx][chckIndx(h_3003162031, 0, (data_3003162028[data_3003162028_Idx]).length - 1)].Field1 = key_3003162029;
    data_3003162028[data_3003162028_Idx][chckIndx(h_3003162031, 0, (data_3003162028[data_3003162028_Idx]).length - 1)].Field0 = hc_3003162030;

  
}

function enlarge_3003161182(s_3003161184) {
    var n_3003161186 = [];
    n_3003161186 = new Array(chckRange(mulInt((s_3003161184.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003161184.data).length, 2), 0, 2147483647) ; ++i) { n_3003161186[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003161184.data; s_3003161184.data = n_3003161186; n_3003161186 = Temporary1;    Label2: {
      var i_3003161284 = 0;
      var colontmp__2952790523 = 0;
      colontmp__2952790523 = (n_3003161186).length - 1;
      var res_2952790524 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790524 <= colontmp__2952790523)) break Label4;
            i_3003161284 = res_2952790524;
            if (isFilled_1828716583(n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field0)) {
            var j_3003161860 = subInt(-1, rawGetKnownHC_3003161525(s_3003161184, n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field1, n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field0));
            rawInsert_3003162025(s_3003161184, s_3003161184, "data", n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field1, n_3003161186[chckIndx(i_3003161284, 0, (n_3003161186).length - 1)].Field0, j_3003161860);
            }
            
            res_2952790524 = addInt(res_2952790524, 1);
          }
      };
    };

  
}

function incl_3003160803(s_3003160805, key_3003160806) {
    if (((s_3003160805.data).length == 0)) {
    var correctSizeHEX60gensym302_3003160889 = slotsNeeded_1828716594(64);
    s_3003160805.counter = 0;
    s_3003160805.data = new Array(chckRange(correctSizeHEX60gensym302_3003160889, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym302_3003160889, 0, 2147483647) ; ++i) { s_3003160805.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003160904 = [0];
    var index_3003160918 = rawGet_3003159660(s_3003160805, key_3003160806, hc_3003160904, 0);
    if ((index_3003160918 < 0)) {
    if (mustRehash_3003160919(s_3003160805)) {
    enlarge_3003161182(s_3003160805);
    index_3003160918 = rawGetKnownHC_3003161525(s_3003160805, key_3003160806, hc_3003160904[0]);
    }
    
    rawInsert_3003162025(s_3003160805, s_3003160805, "data", key_3003160806, hc_3003160904[0], subInt(-1, index_3003160918));
    s_3003160805.counter = addInt(s_3003160805.counter, 1);
    }
    

  
}

function del_3003162381(t_3003162384, key_3003162385) {
    var hc_3003162386 = [0];
    var i_3003162393 = rawGet_3003157234(t_3003162384, key_3003162385, hc_3003162386, 0);
    var mskHEX60gensym36_3003162397 = (t_3003162384.data).length - 1;
    if ((0 <= i_3003162393)) {
    t_3003162384.counter = subInt(t_3003162384.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003162404 = i_3003162393;
            var rHEX60gensym36_3003162405 = jHEX60gensym36_3003162404;
            t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field0 = 0;
            t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field1 = null;
            t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003162393 = (addInt(i_3003162393, 1) & mskHEX60gensym36_3003162397);
                  if (isEmpty_1308622877(t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003162405 = (t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)].Field0 & mskHEX60gensym36_3003162397);
                  if (!(((((rHEX60gensym36_3003162405 <= i_3003162393) && (jHEX60gensym36_3003162404 < rHEX60gensym36_3003162405)) || ((jHEX60gensym36_3003162404 < rHEX60gensym36_3003162405) && (i_3003162393 < jHEX60gensym36_3003162404))) || ((i_3003162393 < jHEX60gensym36_3003162404) && (rHEX60gensym36_3003162405 <= i_3003162393))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003162384.data[chckIndx(jHEX60gensym36_3003162404, 0, (t_3003162384.data).length - 1)] = nimCopy(t_3003162384.data[chckIndx(jHEX60gensym36_3003162404, 0, (t_3003162384.data).length - 1)], t_3003162384.data[chckIndx(i_3003162393, 0, (t_3003162384.data).length - 1)], NTI3003122491);
          }
      };
    };
    }
    

  
}

function resize_3003160613(cache_3003160616) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003160616.capacity < len_3003160695(cache_3003160616))) break Label2;
          var t_3003160783 = cache_3003160616.list.tail;
          if (cache_3003160616.recordRemovedKeys) {
          incl_3003160803(cache_3003160616.removedKeys, t_3003160783.value.key);
          }
          
          del_3003162381(cache_3003160616.table, t_3003160783.value.key);
          remove_3003163140(cache_3003160616.list, t_3003160783);
        }
    };

  
}

function addNewNode_3003157705(cache_3003157708, key_3003157709, val_3003157710) {
    var node_3003157740 = newDoublyLinkedNode_3003157713({key: key_3003157709, val: nimCopy(null, val_3003157710, NTI3087007751)});
    HEX5BHEX5DHEX3D_3003157804(cache_3003157708.table, key_3003157709, node_3003157740);
    prepend_3003159411(cache_3003157708.list, node_3003157740);
    if (cache_3003157708.recordRemovedKeys) {
    excl_3003159639(cache_3003157708.removedKeys, key_3003157709);
    }
    
    resize_3003160613(cache_3003157708);

  
}

function HEX5BHEX5DHEX3D_3003157129(cache_3003157132, key_3003157133, val_3003157134) {
    var node_3003157678 = getOrDefault_3003157224(cache_3003157132.table, key_3003157133, null);
    if ((node_3003157678 == null)) {
    addNewNode_3003157705(cache_3003157132, key_3003157133, val_3003157134);
    }
    else {
      node_3003157678.value.val = nimCopy(node_3003157678.value.val, val_3003157134, NTI3087007751);
      remove_3003163140(cache_3003157132.list, node_3003157678);
      prepend_3003159411(cache_3003157132.list, node_3003157678);
    }
    

  
}

function initDoublyLinkedList_3003163611() {
  var result_3003163613 = ({head: null, tail: null});

  return result_3003163613;

}

function initTable_3003163617(initialSize_3003163620) {
  var result_3003163621 = ({data: [], counter: 0});

    var correctSizeHEX60gensym310_3003163623 = slotsNeeded_1308622891(chckRange(initialSize_3003163620, 0, 2147483647));
    result_3003163621.counter = 0;
    result_3003163621.data = new Array(chckRange(correctSizeHEX60gensym310_3003163623, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym310_3003163623, 0, 2147483647) ; ++i) { result_3003163621.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003163621;

}

function newLruCache_3003163601(capacity_3003163604, recordRemovedKeys_3003163605) {
  var result_3003163606 = null;

    result_3003163606 = {capacity: capacity_3003163604, list: initDoublyLinkedList_3003163611(), table: initTable_3003163617(correctSize_3036676117(capacity_3003163604)), recordRemovedKeys: recordRemovedKeys_3003163605, removedKeys: ({data: [], counter: 0})};

  return result_3003163606;

}

function newCache_3003163596(capacity_3003163599) {
  var result_3003163600 = null;

    result_3003163600 = newLruCache_3003163601(capacity_3003163599, false);

  return result_3003163600;

}

function init_3003163591(result_3003163594, result_3003163594_Idx, capacity_3003163595) {
    result_3003163594[result_3003163594_Idx] = newCache_3003163596(capacity_3003163595);

  
}

function rawGet_3003163841(t_3003163844, key_3003163845, hc_3003163846, hc_3003163846_Idx) {
  var result_3003163847 = 0;

  BeforeRet: {
    hc_3003163846[hc_3003163846_Idx] = hash_3003122712(key_3003163845);
    if ((hc_3003163846[hc_3003163846_Idx] == 0)) {
    hc_3003163846[hc_3003163846_Idx] = 314159265;
    }
    
    if (((t_3003163844.data).length == 0)) {
    result_3003163847 = -1;
    break BeforeRet;
    }
    
    var h_3003163936 = (hc_3003163846[hc_3003163846_Idx] & (t_3003163844.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003163844.data[chckIndx(h_3003163936, 0, (t_3003163844.data).length - 1)].Field0)) break Label2;
          if (((t_3003163844.data[chckIndx(h_3003163936, 0, (t_3003163844.data).length - 1)].Field0 == hc_3003163846[hc_3003163846_Idx]) && HEX3DHEX3D_3003123049(t_3003163844.data[chckIndx(h_3003163936, 0, (t_3003163844.data).length - 1)].Field1, key_3003163845))) {
          result_3003163847 = h_3003163936;
          break BeforeRet;
          }
          
          h_3003163936 = nextTry_1308622883(h_3003163936, (t_3003163844.data).length - 1);
        }
    };
    result_3003163847 = subInt(-1, h_3003163936);
  };

  return result_3003163847;

}

function hasKey_3003163834(t_3003163837, key_3003163838) {
  var result_3003163839 = false;

    var hc_3003163840 = [0];
    result_3003163839 = (0 <= rawGet_3003163841(t_3003163837, key_3003163838, hc_3003163840, 0));

  return result_3003163839;

}

function contains_3003163828(t_3003163831, key_3003163832) {
  var result_3003163833 = false;

  BeforeRet: {
    result_3003163833 = hasKey_3003163834(t_3003163831, key_3003163832);
    break BeforeRet;
  };

  return result_3003163833;

}

function contains_3003163734(cache_3003163737, key_3003163738) {
  var result_3003163739 = false;

    result_3003163739 = contains_3003163828(cache_3003163737.table, key_3003163738);

  return result_3003163739;

}

function HEX5BHEX5D_3003164373(t_3003164376, key_3003164377) {
  var result_3003164378 = null;
  var result_3003164378_Idx = 0;

    var hcHEX60gensym22_3003164379 = [0];
    var indexHEX60gensym22_3003164386 = rawGet_3003163841(t_3003164376, key_3003164377, hcHEX60gensym22_3003164379, 0);
    if ((0 <= indexHEX60gensym22_3003164386)) {
    result_3003164378 = t_3003164376.data[chckIndx(indexHEX60gensym22_3003164386, 0, (t_3003164376.data).length - 1)]; result_3003164378_Idx = "Field2";
    }
    else {
    raiseKeyError_3003123345(key_3003164377);
    }
    

  return [result_3003164378, result_3003164378_Idx];

}

function remove_3003164493(L_3003164495, n_3003164496) {
    if ((n_3003164496 == L_3003164495.tail)) {
    L_3003164495.tail = n_3003164496.prev;
    }
    
    if ((n_3003164496 == L_3003164495.head)) {
    L_3003164495.head = n_3003164496.next;
    }
    
    if (!((n_3003164496.next == null))) {
    n_3003164496.next.prev = n_3003164496.prev;
    }
    
    if (!((n_3003164496.prev == null))) {
    n_3003164496.prev.next = n_3003164496.next;
    }
    

  
}

function prepend_3003164821(L_3003164823, n_3003164824) {
    n_3003164824.prev = null;
    n_3003164824.next = L_3003164823.head;
    if (!((L_3003164823.head == null))) {
    if (!((L_3003164823.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003164823.head.prev = n_3003164824;
    }
    
    L_3003164823.head = n_3003164824;
    if ((L_3003164823.tail == null)) {
    L_3003164823.tail = n_3003164824;
    }
    

  
}

function HEX5BHEX5D_3003164287(cache_3003164290, key_3003164291) {
    var Temporary1;

  var result_3003164292 = null;

    var node_3003164479 = (Temporary1 = HEX5BHEX5D_3003164373(cache_3003164290.table, key_3003164291), Temporary1)[0][Temporary1[1]];
    result_3003164292 = node_3003164479.value.val;
    remove_3003164493(cache_3003164290.list, node_3003164479);
    prepend_3003164821(cache_3003164290.list, node_3003164479);

  return result_3003164292;

}

function dependOnCurrentRevision_3003175764(ctxHEX60gensym73_3003175765) {
    if ((0 < (ctxHEX60gensym73_3003175765.dependencyStack).length)) {
    ctxHEX60gensym73_3003175765.dependencyStack[chckIndx((ctxHEX60gensym73_3003175765.dependencyStack).length - 1, 0, (ctxHEX60gensym73_3003175765.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3019898912, NTI2181038083), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3120565646(initialSize_3120565649) {
  var result_3120565650 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3120565652 = slotsNeeded_1308622891(chckRange(initialSize_3120565649, 0, 2147483647));
    result_3120565650.counter = 0;
    result_3120565650.data = new Array(chckRange(correctSizeHEX60gensym96_3120565652, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3120565652, 0, 2147483647) ; ++i) { result_3120565650.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3120565650;

}

function rawGet_3087010430(t_3087010433, key_3087010434, hc_3087010435, hc_3087010435_Idx) {
  var result_3087010436 = 0;

  BeforeRet: {
    hc_3087010435[hc_3087010435_Idx] = hash_2181038324(key_3087010434);
    if ((hc_3087010435[hc_3087010435_Idx] == 0)) {
    hc_3087010435[hc_3087010435_Idx] = 314159265;
    }
    
    if (((t_3087010433.data).length == 0)) {
    result_3087010436 = -1;
    break BeforeRet;
    }
    
    var h_3087010488 = (hc_3087010435[hc_3087010435_Idx] & (t_3087010433.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3087010433.data[chckIndx(h_3087010488, 0, (t_3087010433.data).length - 1)].Field0)) break Label2;
          if (((t_3087010433.data[chckIndx(h_3087010488, 0, (t_3087010433.data).length - 1)].Field0 == hc_3087010435[hc_3087010435_Idx]) && HEX3DHEX3D_2181038320(t_3087010433.data[chckIndx(h_3087010488, 0, (t_3087010433.data).length - 1)].Field1, key_3087010434))) {
          result_3087010436 = h_3087010488;
          break BeforeRet;
          }
          
          h_3087010488 = nextTry_1308622883(h_3087010488, (t_3087010433.data).length - 1);
        }
    };
    result_3087010436 = subInt(-1, h_3087010488);
  };

  return result_3087010436;

}

function hasKey_3087010423(t_3087010426, key_3087010427) {
  var result_3087010428 = false;

    var hc_3087010429 = [0];
    result_3087010428 = (0 <= rawGet_3087010430(t_3087010426, key_3087010427, hc_3087010429, 0));

  return result_3087010428;

}

function contains_3120562541(t_3120562544, key_3120562545) {
  var result_3120562546 = false;

  BeforeRet: {
    result_3120562546 = hasKey_3087010423(t_3120562544, key_3120562545);
    break BeforeRet;
  };

  return result_3120562546;

}

function rawGet_3120562785(t_3120562788, key_3120562789, hc_3120562790, hc_3120562790_Idx) {
  var result_3120562791 = 0;

  BeforeRet: {
    hc_3120562790[hc_3120562790_Idx] = hash_2181038324(key_3120562789);
    if ((hc_3120562790[hc_3120562790_Idx] == 0)) {
    hc_3120562790[hc_3120562790_Idx] = 314159265;
    }
    
    if (((t_3120562788.data).length == 0)) {
    result_3120562791 = -1;
    break BeforeRet;
    }
    
    var h_3120562842 = (hc_3120562790[hc_3120562790_Idx] & (t_3120562788.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field0)) break Label2;
          if (((t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field0 == hc_3120562790[hc_3120562790_Idx]) && HEX3DHEX3D_2181038320(t_3120562788.data[chckIndx(h_3120562842, 0, (t_3120562788.data).length - 1)].Field1, key_3120562789))) {
          result_3120562791 = h_3120562842;
          break BeforeRet;
          }
          
          h_3120562842 = nextTry_1308622883(h_3120562842, (t_3120562788.data).length - 1);
        }
    };
    result_3120562791 = subInt(-1, h_3120562842);
  };

  return result_3120562791;

}

function mustRehash_3120563130(t_3120563132) {
  var result_3120563133 = false;

    if (!((t_3120563132.counter < (t_3120563132.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3120563133 = ((mulInt((t_3120563132.data).length, 2) < mulInt(t_3120563132.counter, 3)) || (subInt((t_3120563132.data).length, t_3120563132.counter) < 4));

  return result_3120563133;

}

function rawInsert_3120563579(t_3120563583, data_3120563584, data_3120563584_Idx, key_3120563585, val_3120563586, hc_3120563587, h_3120563588) {
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field1 = nimCopy(data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field1, key_3120563585, NTI2181038083);
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field2 = nimCopy(data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field2, val_3120563586, NTI3087007774);
    data_3120563584[data_3120563584_Idx][chckIndx(h_3120563588, 0, (data_3120563584[data_3120563584_Idx]).length - 1)].Field0 = hc_3120563587;

  
}

function enlarge_3120563285(t_3120563288) {
    var n_3120563291 = [];
    n_3120563291 = new Array(chckRange(mulInt((t_3120563288.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3120563288.data).length, 2), 0, 2147483647) ; ++i) { n_3120563291[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3120563288.data; t_3120563288.data = n_3120563291; n_3120563291 = Temporary1;    Label2: {
      var i_3120563355 = 0;
      var colontmp__2952790550 = 0;
      colontmp__2952790550 = (n_3120563291).length - 1;
      var res_2952790551 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790551 <= colontmp__2952790550)) break Label4;
            i_3120563355 = res_2952790551;
            var eh_3120563409 = n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field0;
            if (isFilled_1308622880(eh_3120563409)) {
            var j_3120563413 = (eh_3120563409 & (t_3120563288.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3120563288.data[chckIndx(j_3120563413, 0, (t_3120563288.data).length - 1)].Field0)) break Label6;
                  j_3120563413 = nextTry_1308622883(j_3120563413, (t_3120563288.data).length - 1);
                }
            };
            rawInsert_3120563579(t_3120563288, t_3120563288, "data", n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field1, n_3120563291[chckIndx(i_3120563355, 0, (n_3120563291).length - 1)].Field2, eh_3120563409, j_3120563413);
            }
            
            res_2952790551 = addInt(res_2952790551, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3120563748(t_3120563751, key_3120563752, hc_3120563753) {
  var result_3120563754 = 0;

  BeforeRet: {
    if (((t_3120563751.data).length == 0)) {
    result_3120563754 = -1;
    break BeforeRet;
    }
    
    var h_3120563805 = (hc_3120563753 & (t_3120563751.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field0)) break Label2;
          if (((t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field0 == hc_3120563753) && HEX3DHEX3D_2181038320(t_3120563751.data[chckIndx(h_3120563805, 0, (t_3120563751.data).length - 1)].Field1, key_3120563752))) {
          result_3120563754 = h_3120563805;
          break BeforeRet;
          }
          
          h_3120563805 = nextTry_1308622883(h_3120563805, (t_3120563751.data).length - 1);
        }
    };
    result_3120563754 = subInt(-1, h_3120563805);
  };

  return result_3120563754;

}

function HEX5BHEX5DHEX3D_3120562724(t_3120562727, key_3120562728, val_3120562729) {
    if (((t_3120562727.data).length == 0)) {
    var correctSizeHEX60gensym21_3120562779 = slotsNeeded_1308622891(32);
    t_3120562727.counter = 0;
    t_3120562727.data = new Array(chckRange(correctSizeHEX60gensym21_3120562779, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3120562779, 0, 2147483647) ; ++i) { t_3120562727.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3120562784 = [0];
    var index_3120563023 = rawGet_3120562785(t_3120562727, key_3120562728, hc_3120562784, 0);
    if ((0 <= index_3120563023)) {
    t_3120562727.data[chckIndx(index_3120563023, 0, (t_3120562727.data).length - 1)].Field2 = nimCopy(t_3120562727.data[chckIndx(index_3120563023, 0, (t_3120562727.data).length - 1)].Field2, val_3120562729, NTI3087007774);
    }
    else {
      if (((t_3120562727.data).length == 0)) {
      var correctSizeHEX60gensym26_3120563125 = slotsNeeded_1308622891(32);
      t_3120562727.counter = 0;
      t_3120562727.data = new Array(chckRange(correctSizeHEX60gensym26_3120563125, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3120563125, 0, 2147483647) ; ++i) { t_3120562727.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3120563130(t_3120562727)) {
      enlarge_3120563285(t_3120562727);
      index_3120563023 = rawGetKnownHC_3120563748(t_3120562727, key_3120562728, hc_3120562784[0]);
      }
      
      index_3120563023 = subInt(-1, index_3120563023);
      rawInsert_3120563579(t_3120562727, t_3120562727, "data", key_3120562728, val_3120562729, hc_3120562784[0], index_3120563023);
      t_3120562727.counter = addInt(t_3120562727.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2080374864(a_2080374865, b_2080374866) {
  var result_2080374867 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374867.x = min_33555609(a_2080374865.x, b_2080374866.x);
    result_2080374867.y = min_33555609(a_2080374865.y, b_2080374866.y);
    result_2080374867.w = (max_33555642((a_2080374865.x + a_2080374865.w), (b_2080374866.x + b_2080374866.w)) - result_2080374867.x);
    result_2080374867.h = (max_33555642((a_2080374865.y + a_2080374865.h), (b_2080374866.y + b_2080374866.h)) - result_2080374867.y);

  return result_2080374867;

}

function HEX2B_2063597723(a_2063597724, b_2063597725) {
  var result_2063597726 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2063597726.x = (a_2063597724.x + b_2063597725.x);
    result_2063597726.y = (a_2063597724.y + b_2063597725.y);
    result_2063597726.w = a_2063597724.w;
    result_2063597726.h = a_2063597724.h;

  return result_2063597726;

}

function vec2_2097152861(xHEX60gensym45_2097152862, yHEX60gensym45_2097152863) {
  var result_2097152864 = ({x: 0.0, y: 0.0});

    result_2097152864 = nimCopy(result_2097152864, {x: xHEX60gensym45_2097152862, y: yHEX60gensym45_2097152863}, NTI2097152288);

  return result_2097152864;

}

function xy_2080374816(rect_2080374817) {
  var result_2080374818 = ({x: 0.0, y: 0.0});

    result_2080374818 = nimCopy(result_2080374818, vec2_2097152861(rect_2080374817.x, rect_2080374817.y), NTI2097152288);

  return result_2080374818;

}

function add_3087009877(node_3087009878, node_3087009878_Idx, child_3087009879) {
  var result_3087009880 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3087009878[node_3087009878_Idx].children.push(child_3087009879);;
    child_3087009879.depth = addInt(node_3087009878[node_3087009878_Idx].depth, 1);
    child_3087009879.parent = node_3087009878[node_3087009878_Idx];
    child_3087009879.bounds.x = node_3087009878[node_3087009878_Idx].bounds.w;
    node_3087009878[node_3087009878_Idx].bounds = nimCopy(node_3087009878[node_3087009878_Idx].bounds, or_2080374864(node_3087009878[node_3087009878_Idx].bounds, HEX2B_2063597723(child_3087009879.bounds, xy_2080374816(node_3087009878[node_3087009878_Idx].bounds))), NTI2080374789);
    result_3087009880 = nimCopy(result_3087009880, {parent: node_3087009878[node_3087009878_Idx], first: (node_3087009878[node_3087009878_Idx].children).length - 1, last: (node_3087009878[node_3087009878_Idx].children).length}, NTI3087007774);
    break BeforeRet;
  };

  return result_3087009880;

}

function map_3087009424(s_3087009427, op_3087009429) {
  var result_3087009430 = [];

    result_3087009430 = new Array(chckRange((s_3087009427).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3087009427).length, 0, 2147483647) ; ++i) { result_3087009430[i] = null; }    Label1: {
      var i_3087009446 = 0;
      var colontmp__2952790560 = 0;
      colontmp__2952790560 = (s_3087009427).length;
      var i_2952790561 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790561 < colontmp__2952790560)) break Label3;
            i_3087009446 = i_2952790561;
            result_3087009430[chckIndx(i_3087009446, 0, (result_3087009430).length - 1)] = op_3087009429(s_3087009427[chckIndx(i_3087009446, 0, (s_3087009427).length - 1)]);
            i_2952790561 = addInt(i_2952790561, 1);
          }
      };
    };

  return result_3087009430;

}

function clone_3087009405(node_3087009406) {
    
function HEX3Aanonymous_3087009411(c_3087009419) {
      var result_3087009422 = null;

        result_3087009422 = clone_3087009405(c_3087009419);

      return result_3087009422;

    }

  var result_3087009407 = null;

    result_3087009407 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_3087009407.id = nimCopy(result_3087009407.id, newId_2181038297(), NTI2181038083);
    result_3087009407.parent = node_3087009406.parent;
    result_3087009407.node = node_3087009406.node;
    result_3087009407.text = nimCopy(null, node_3087009406.text, NTI33554449);
    result_3087009407.bounds = nimCopy(result_3087009407.bounds, node_3087009406.bounds, NTI2080374789);
    result_3087009407.indent = node_3087009406.indent;
    result_3087009407.font = nimCopy(null, node_3087009406.font, NTI33554449);
    result_3087009407.fontSize = node_3087009406.fontSize;
    result_3087009407.render = node_3087009406.render;
    result_3087009407.children = nimCopy(null, map_3087009424(node_3087009406.children, HEX3Aanonymous_3087009411), NTI3087008997);
    Label1: {
      var c_3087009450 = null;
      var i_2952790556 = 0;
      var L_2952790557 = (result_3087009407.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790556 < L_2952790557)) break Label3;
            c_3087009450 = result_3087009407.children[chckIndx(i_2952790556, 0, (result_3087009407.children).length - 1)];
            c_3087009450.parent = result_3087009407;
            i_2952790556 = addInt(i_2952790556, 1);
            if (!(((result_3087009407.children).length == L_2952790557))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3087009407;

}

function HEX5BHEX5D_3120562610(t_3120562613, key_3120562614) {
  var result_3120562615 = null;
  var result_3120562615_Idx = 0;

    var hcHEX60gensym22_3120562616 = [0];
    var indexHEX60gensym22_3120562623 = rawGet_3087010430(t_3120562613, key_3120562614, hcHEX60gensym22_3120562616, 0);
    if ((0 <= indexHEX60gensym22_3120562623)) {
    result_3120562615 = t_3120562613.data[chckIndx(indexHEX60gensym22_3120562623, 0, (t_3120562613.data).length - 1)]; result_3120562615_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346264(key_3120562614);
    }
    

  return [result_3120562615, result_3120562615_Idx];

}

function createReplacement_3120562493(input_3120562494, node_3120562495, layout_3120562496, line_3120562497, line_3120562497_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3120562498 = false;

  BeforeRet: {
    if (contains_3120562541(input_3120562494.replacements, node_3120562495.id)) {
    HEX5BHEX5DHEX3D_3120562724(layout_3120562496.nodeToVisualNode, node_3120562495.id, add_3087009877(line_3120562497, line_3120562497_Idx, clone_3087009405((Temporary1 = HEX5BHEX5D_3120562610(input_3120562494.replacements, node_3120562495.id), Temporary1)[0][Temporary1[1]])));
    result_3120562498 = true;
    break BeforeRet;
    }
    
    if (contains_3120562541(input_3120562494.replacements, node_3120562495.reff)) {
    HEX5BHEX5DHEX3D_3120562724(layout_3120562496.nodeToVisualNode, node_3120562495.id, add_3087009877(line_3120562497, line_3120562497_Idx, clone_3087009405((Temporary2 = HEX5BHEX5D_3120562610(input_3120562494.replacements, node_3120562495.reff), Temporary2)[0][Temporary2[1]])));
    result_3120562498 = true;
    break BeforeRet;
    }
    
    result_3120562498 = false;
    break BeforeRet;
  };

  return result_3120562498;

}

function rect_2080374808(pos_2080374809, size_2080374810) {
  var result_2080374811 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374811.x = pos_2080374809.x;
    result_2080374811.y = pos_2080374809.y;
    result_2080374811.w = size_2080374810.x;
    result_2080374811.h = size_2080374810.y;

  return result_2080374811;

}

function vec2_2097152822() {
  var result_2097152823 = ({x: 0.0, y: 0.0});

    result_2097152823 = nimCopy(result_2097152823, {x: 0.0, y: 0.0}, NTI2097152288);

  return result_2097152823;

}

function whHEX3D_2080374825(rect_2080374826, v_2080374827) {
    rect_2080374826.w = v_2080374827.x;
    rect_2080374826.h = v_2080374827.y;

  
}

function newTextNode_3120562420(text_3120562421, color_3120562422, font_3120562423, measureText_3120562426, node_3120562427) {
  var result_3120562428 = null;

    result_3120562428 = {id: newId_2181038297(), text: nimCopy(null, text_3120562421, NTI33554449), colors: [nimCopy(null, color_3120562422, NTI33554449)], font: nimCopy(null, font_3120562423, NTI33554449), fontSize: config_3120562389[0].fontSize, node: node_3120562427, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};
    whHEX3D_2080374825(result_3120562428.bounds, measureText_3120562426(text_3120562421));

  return result_3120562428;

}

function newTextNode_3120562433(text_3120562434, colors_3120562435, font_3120562436, measureText_3120562439, node_3120562440, styleOverride_3120562450) {
  var result_3120562451 = null;

    result_3120562451 = {id: newId_2181038297(), text: nimCopy(null, text_3120562434, NTI33554449), colors: nimCopy(null, colors_3120562435, NTI3120562359), font: nimCopy(null, font_3120562436, NTI33554449), fontSize: config_3120562389[0].fontSize, node: node_3120562440, styleOverride: nimCopy(null, styleOverride_3120562450, NTI3087007788), parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};
    whHEX3D_2080374825(result_3120562451.bounds, measureText_3120562439(text_3120562434));

  return result_3120562451;

}

function none_3120562442() {
  var result_3120562449 = ({val: {}, has: false});

  return result_3120562449;

}

function getColorForSymbol_3120564137(ctx_3120564138, sym_3120564139) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3120564140 = [];

  BeforeRet: {
    var typ_3120564141 = computeSymbolType_3003208828(ctx_3120564138, sym_3120564139, false);
    switch (typ_3120564141.kind) {
    case 0:
      result_3120564140 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3120564140 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3120564139.kind == 1)) {
      var Temporary1 = sym_3120564139;
      if (ConstSet145[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3120564140 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3120563270);
        break BeforeRet;
        break;
      }
      }
      
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      break;
    default: 
      if ((sym_3120564139.kind == 0)) {
        var Temporary2 = sym_3120564139;
        if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      if ((Temporary2.node.kind == 4)) {
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3120564139;
        if (ConstSet147[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3120564139;
          if (ConstSet148[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007753)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3120564139;
        if (ConstSet149[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007753)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
      break BeforeRet;
      }
      else {
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3120564140 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3120563270);
    break BeforeRet;
  };

  return result_3120564140;

}

function some_3120564257(val_3120564259) {
  var result_3120564260 = ({val: {}, has: false});

    result_3120564260.has = true;
    result_3120564260.val = nimCopy(result_3120564260.val, val_3120564259, NTI3087007783);

  return result_3120564260;

}

function getStyleForSymbol_3120564206(ctx_3120564207, sym_3120564208) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3120564210 = ({val: {}, has: false});

    var style_3120564211 = nimCopy(null, ConstSet150, NTI3120563334);
    if ((sym_3120564208.kind == 0)) {
      var Temporary1 = sym_3120564208;
      if (ConstSet151[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    if ((Temporary1.node.kind == 6)) {
    style_3120564211 = nimCopy(style_3120564211, SetPlus(style_3120564211, ConstSet152), NTI3120563334);
    }
    
      var Temporary2 = sym_3120564208;
      if (ConstSet153[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3120564230 = computeSymbolType_3003208828(ctx_3120564207, sym_3120564208, false);
    if (!((typ_3120564230.kind == 4))) {
    style_3120564211 = nimCopy(style_3120564211, SetPlus(style_3120564211, ConstSet154), NTI3120563334);
    }
    
    }
    
    }
    else {
    if ((sym_3120564208.kind == 1)) {
      var Temporary3 = sym_3120564208;
      if (ConstSet155[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3120564211[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3120564211, ConstSet156))) {
    result_3120564210 = nimCopy(result_3120564210, some_3120564257(style_3120564211), NTI3087007788);
    }
    

  return result_3120564210;

}

function len_3087007969(node_3087007970) {
  var result_3087007971 = 0;

  BeforeRet: {
    result_3087007971 = (node_3087007970.children).length;
    break BeforeRet;
  };

  return result_3087007971;

}

function addLine_3087009909(node_3087009910, node_3087009910_Idx, child_3087009911, child_3087009911_Idx) {
    node_3087009910[node_3087009910_Idx].children.push(child_3087009911[child_3087009911_Idx]);;
    child_3087009911[child_3087009911_Idx].depth = addInt(node_3087009910[node_3087009910_Idx].depth, 1);
    child_3087009911[child_3087009911_Idx].parent = node_3087009910[node_3087009910_Idx];
    child_3087009911[child_3087009911_Idx].bounds.y = node_3087009910[node_3087009910_Idx].bounds.h;
    node_3087009910[node_3087009910_Idx].bounds = nimCopy(node_3087009910[node_3087009910_Idx].bounds, or_2080374864(node_3087009910[node_3087009910_Idx].bounds, HEX2B_2063597723(child_3087009911[child_3087009911_Idx].bounds, xy_2080374816(node_3087009910[node_3087009910_Idx].bounds))), NTI2080374789);

  
}

function rect_2080374802(x_2080374803, y_2080374804, w_2080374805, h_2080374806) {
  var result_2080374807 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374807.x = x_2080374803;
    result_2080374807.y = y_2080374804;
    result_2080374807.w = w_2080374805;
    result_2080374807.h = h_2080374806;

  return result_2080374807;

}

function getPrecedenceForNode_3120562190(ctx_3120562191, node_3120562192) {
      var Temporary1;
      var Temporary2;

  var result_3120562193 = 0;

  BeforeRet: {
    if ((!((node_3120562192.kind == 8)) || (len_2986344536(node_3120562192) == 0))) {
    result_3120562193 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3120562200 = computeSymbol_3003201856(ctx_3120562191, HEX5BHEX5D_2986344532(node_3120562192, 0), false);
      if (!isSome_3087009345(oHEX60gensym1_3120562200)) Temporary1 = false; else {        var symbol_3120562223 = get_3087009365(oHEX60gensym1_3120562200);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3120562223.kind) {
    case 1:
      var Temporary2 = symbol_3120562223;
      if (ConstSet159[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      result_3120562193 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3120562193 = 0;
    break BeforeRet;
  };

  return result_3120562193;

}

function some_3120562475(val_3120562477) {
  var result_3120562478 = ({val: [], has: false});

    result_3120562478.has = true;
    result_3120562478.val = nimCopy(null, val_3120562477, NTI3120562388);

  return result_3120562478;

}

function newBlockNode_3120562461(colors_3120562462, size_3120562463, node_3120562464, styleOverride_3120562473) {
  var result_3120562474 = null;

    result_3120562474 = {id: newId_2181038297(), node: node_3120562464, styleOverride: nimCopy(null, styleOverride_3120562473, NTI3087007788), background: some_3120562475(colors_3120562462), parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0};
    whHEX3D_2080374825(result_3120562474.bounds, size_3120562463);

  return result_3120562474;

}

function HEX2BHEX3D_2080374897(x_2080374899, x_2080374899_Idx, y_2080374900) {
    x_2080374899[x_2080374899_Idx] = (x_2080374899[x_2080374899_Idx] + y_2080374900);

  
}

function formatValue_3120565598(result_3120565600, result_3120565600_Idx, value_3120565601, specifier_3120565602) {
    formatValue_721420459(result_3120565600, result_3120565600_Idx, reprEnum(value_3120565601, NTI2986344451), specifier_3120565602);

  
}

function createLayoutLineForRemainingChildren_3120564275(ctx_3120564276, input_3120564277, node_3120564278, firstChildIndex_3120564279, result_3120564280, line_3120564281, line_3120564281_Idx) {
  BeforeRet: {
    if ((len_2986344536(node_3120564278) <= firstChildIndex_3120564279)) {
    break BeforeRet;
    }
    
    var _ = add_3087009877(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([60], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
    Label1: {
      var i_3120564290 = 0;
      var colontmp__2952790566 = 0;
      colontmp__2952790566 = len_2986344536(node_3120564278);
      var i_2952790567 = firstChildIndex_3120564279;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790567 < colontmp__2952790566)) break Label3;
            i_3120564290 = i_2952790567;
            if ((firstChildIndex_3120564279 < i_3120564290)) {
            var _ = add_3087009877(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
            }
            
            createLayoutLineForNode_3120564269(ctx_3120564276, input_3120564277, HEX5BHEX5D_2986344532(node_3120564278, i_3120564290), result_3120564280, line_3120564281, line_3120564281_Idx);
            i_2952790567 = addInt(i_2952790567, 1);
          }
      };
    };
    var _ = add_3087009877(line_3120564281, line_3120564281_Idx, newTextNode_3120562433([62], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564277.measureText, null, none_3120562442()));
  };

  
}

function createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3120564314 = ((ConstSet143[node_3120564272.kind] != undefined) && (ConstSet144[node_3120564272.parent.kind] != undefined));
    var prevLine_3120564315 = line_3120564274[line_3120564274_Idx];
    var first_3120564319 = (prevLine_3120564315.children).length;
    try {
    var oldLineHEX60gensym42_3120564374 = [line_3120564274[line_3120564274_Idx]];
    var containerLineHEX60gensym42_3120564375 = [{id: newId_2181038297(), node: node_3120564272, parent: line_3120564274[line_3120564274_Idx], orientation: 1, depth: addInt(line_3120564274[line_3120564274_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_3120564314) {
    line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: containerLineHEX60gensym42_3120564375[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3120564375[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_3003195250(ctx_3120564270, node_3120564272, false);
    var lastUsedChild_3120564422 = -1;
    try {
    Label4: {
      var expr_3120564423 = node_3120564272;
      var pos_3120564424 = 0;
      var _ = pos_3120564424;
      if ((expr_3120564423.kind == 0)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, {id: newId_2181038297(), colors: [nimCopy(null, config_3120562389[0].colors.empty, NTI33554449)], node: node_3120564272, bounds: rect_2080374808(vec2_2097152822(), vec2_2097152861((config_3120562389[0].fontSize * 0.5), config_3120562389[0].fontSize)), parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_3120564423.kind == 2)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(node_3120564272.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      }
      
      }
      else {
      if ((expr_3120564423.kind == 3)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(node_3120564272.text, [115,116,114,105,110,103], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272));
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      else {
      if ((expr_3120564423.kind == 1)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym61_3120564549 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym61_3120564549)) Temporary5 = false; else {          var sym_3120564572 = get_3087009365(oHEX60gensym61_3120564549);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(sym_3120564572.name, getColorForSymbol_3120564137(ctx_3120564270, sym_3120564572), config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564572))));
      }
      else {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_2181038317(node_3120564272.reff), [118,97,114,105,97,98,108,101], config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      }
      
      }
      
      }
      else {
      if ((expr_3120564423.kind == 4)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym63_3120564671 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym63_3120564671)) Temporary7 = false; else {          var sym_3120564694 = get_3087009365(oHEX60gensym63_3120564671);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3120564137(ctx_3120564270, sym_3120564694);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3120564699 = nimCopy(null, Temporary6, NTI3120563236);
        var oHEX60gensym64_3120564702 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym64_3120564702)) Temporary8 = false; else {          var sym_3120564725 = get_3087009365(oHEX60gensym64_3120564702);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(sym_3120564725.name, color_3120564699, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564725)));
      }
      else {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(HEX24_2181038317(node_3120564272.id), color_3120564699, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, none_3120562442()));
      }
      
      }
      
      var typ_3120564726 = computeType_3003195250(ctx_3120564270, node_3120564272, false);
      if ((typ_3120564726.kind == 4)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      else {
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008180(typ_3120564726), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      }
      
      if ((0 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      var value_3120564743 = computeValue_3003198726(ctx_3120564270, node_3120564272, false);
      switch (value_3120564743.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_2986344532(node_3120564272, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008487(value_3120564743), [115,116,114,105,110,103], config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3120564422 = 0;
      }
      else {
      if ((expr_3120564423.kind == 5)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym67_3120564754 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym67_3120564754)) Temporary10 = false; else {          var sym_3120564777 = get_3087009365(oHEX60gensym67_3120564754);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3120564137(ctx_3120564270, sym_3120564777), Field1: getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564777)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3120562442()};
      }
      
      var colontmp__2952790563 = nimCopy(null, Temporary9, NTI3120563706);
      var color_3120564789 = nimCopy(null, colontmp__2952790563["Field0"], NTI3120563236);
      var style_3120564790 = nimCopy(null, colontmp__2952790563["Field1"], NTI3087007788);
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(node_3120564272.text, color_3120564789, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, style_3120564790));
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      if ((((HEX5BHEX5D_2986344532(node_3120564272, 0).kind == 0) && ((HEX5BHEX5D_2986344532(node_3120564272, 0).text).length == 0)) && !(contains_3120562541(input_3120564271.replacements, HEX5BHEX5D_2986344532(node_3120564272, 0).id)))) {
      var typ_3120564846 = computeType_3003195250(ctx_3120564270, node_3120564272, false);
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008180(typ_3120564846), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_2986344532(node_3120564272, 0))));
      }
      else {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      }
      
      if ((1 < len_2986344536(node_3120564272))) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 6)) {
      if (!(createReplacement_3120562493(input_3120564271, node_3120564272, result_3120564273, line_3120564274, line_3120564274_Idx))) {
        var oHEX60gensym71_3120564903 = computeSymbol_3003201856(ctx_3120564270, node_3120564272, false);
        if (!isSome_3087009345(oHEX60gensym71_3120564903)) Temporary12 = false; else {          var sym_3120564926 = get_3087009365(oHEX60gensym71_3120564903);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3120564137(ctx_3120564270, sym_3120564926), Field1: getStyleForSymbol_3120564206(ctx_3120564270, sym_3120564926)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3120562442()};
      }
      
      var colontmp__2952790564 = nimCopy(null, Temporary11, NTI3120563809);
      var color_3120564938 = nimCopy(null, colontmp__2952790564["Field0"], NTI3120563236);
      var style_3120564939 = nimCopy(null, colontmp__2952790564["Field1"], NTI3087007788);
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433(node_3120564272.text, color_3120564938, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272, style_3120564939));
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,58,32,109,117,116,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      if ((((HEX5BHEX5D_2986344532(node_3120564272, 0).kind == 0) && ((HEX5BHEX5D_2986344532(node_3120564272, 0).text).length == 0)) && !(contains_3120562541(input_3120564271.replacements, HEX5BHEX5D_2986344532(node_3120564272, 0).id)))) {
      var typ_3120564995 = computeType_3003195250(ctx_3120564270, node_3120564272, false);
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420(HEX24_3087008180(typ_3120564995), config_3120562389[0].colors.typ, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_2986344532(node_3120564272, 0))));
      }
      else {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      }
      
      if ((1 < len_2986344536(node_3120564272))) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 11)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([102,110], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      var parent_3120565050 = line_3120564274[line_3120564274_Idx];
      var first_3120565051 = len_3087007969(parent_3120565050);
      Label13: {
        var i_3120565075 = 0;
        var param_3120565076 = null;
        var colontmp__2952790532 = [];
        colontmp__2952790532 = HEX5BHEX5D_2986344532(node_3120564272, 0).children;
        var i_2952790534 = 0;
        var L_2952790535 = (colontmp__2952790532).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2952790534 < L_2952790535)) break Label15;
              i_3120565075 = i_2952790534;
              param_3120565076 = colontmp__2952790532[chckIndx(i_2952790534, 0, (colontmp__2952790532).length - 1)];
              if ((0 < i_3120565075)) {
              var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
              }
              
              createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, param_3120565076, result_3120564273, line_3120564274, line_3120564274_Idx);
              i_2952790534 = addInt(i_2952790534, 1);
              if (!(((colontmp__2952790532).length == L_2952790535))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_2986344536(HEX5BHEX5D_2986344532(node_3120564272, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.empty, config_3120562389[0].fontRegular, input_3120564271.measureText, HEX5BHEX5D_2986344532(node_3120564272, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, {parent: parent_3120565050, first: first_3120565051, last: len_3087007969(parent_3120565050)});
      }
      
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41,32], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((1 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((2 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 2;
      }
      else {
      if ((expr_3120564423.kind == 9)) {
      var parent_3120565181 = [line_3120564274[line_3120564274_Idx].parent];
      var prevIndent_3120565182 = line_3120564274[line_3120564274_Idx].indent;
      var first_3120565186 = (parent_3120565181[0].children).length;
      try {
      var i_3120565239 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3120565239, 1) < len_2986344536(node_3120564272))) break Label18;
            try {
            if ((i_3120565239 == 0)) {
            var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([105,102,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
            }
            else {
              addLine_3087009909(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
              line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565181[0], bounds: rect_2080374802((prevIndent_3120565182 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([101,108,105,102,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
            }
            
            createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, i_3120565239), result_3120564273, line_3120564274, line_3120564274_Idx);
            var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
            createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, addInt(i_3120565239, 1)), result_3120564273, line_3120564274, line_3120564274_Idx);
            } finally {
            i_3120565239 = addInt(i_3120565239, 2);
            }
          }
      };
      if ((modInt(len_2986344536(node_3120564272), 2) == 1)) {
      addLine_3087009909(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565181[0], bounds: rect_2080374802((prevIndent_3120565182 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([101,108,115,101,58,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, last_2986344706(node_3120564272), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      addLine_3087009909(parent_3120565181, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565181[0], bounds: rect_2080374802((prevIndent_3120565182 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565182, depth: addInt(parent_3120565181[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3120564422 = subInt(len_2986344536(node_3120564272), 1);
      } finally {
      if ((first_3120565186 < (parent_3120565181[0].children).length)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565181[0], first: first_3120565186, last: (parent_3120565181[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3120564423.kind == 10)) {
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([119,104,105,108,101,32], config_3120562389[0].colors.keyword, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
      if ((1 <= len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([58,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((2 <= len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 7)) {
      var parent_3120565260 = [line_3120564274[line_3120564274_Idx].parent];
      var first_3120565264 = addInt((parent_3120565260[0].children).length, 1);
      try {
      var prevIndent_3120565317 = line_3120564274[line_3120564274_Idx].indent;
      Label21: {
        var child_3120565321 = null;
        var i_2952790539 = 0;
        var L_2952790540 = (node_3120564272.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2952790539 < L_2952790540)) break Label23;
              child_3120565321 = node_3120564272.children[chckIndx(i_2952790539, 0, (node_3120564272.children).length - 1)];
              addLine_3087009909(parent_3120565260, 0, line_3120564274, line_3120564274_Idx);
              line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565260[0], bounds: rect_2080374802((prevIndent_3120565317 * config_3120562389[0].indent), 0.0, config_3120562389[0].indent, 0.0), indent: addInt(prevIndent_3120565317, 1), node: child_3120565321, depth: addInt(parent_3120565260[0].depth, 1), orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, child_3120565321, result_3120564273, line_3120564274, line_3120564274_Idx);
              i_2952790539 = addInt(i_2952790539, 1);
              if (!(((node_3120564272.children).length == L_2952790540))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3087009909(parent_3120565260, 0, line_3120564274, line_3120564274_Idx);
      line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565260[0], bounds: rect_2080374802((prevIndent_3120565317 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565317, depth: addInt(parent_3120565260[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3120564422 = subInt(len_2986344536(node_3120564272), 1);
      } finally {
      if ((first_3120565264 < (parent_3120565260[0].children).length)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565260[0], first: first_3120565264, last: (parent_3120565260[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3120564423.kind == 13)) {
      if ((0 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([32,61,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
      if ((0 < len_2986344536(node_3120564272))) {
      createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
      }
      
      lastUsedChild_3120564422 = 1;
      }
      else {
      if ((expr_3120564423.kind == 8)) {
      if ((len_2986344536(node_3120564272) == 0)) {
      HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3120562389[0].colors.empty, config_3120562389[0].fontRegular, input_3120564271.measureText, node_3120564272)));
      break BeforeRet;
      }
      
      var isDivision_3120565380 = false;
        var oHEX60gensym90_3120565383 = computeSymbol_3003201856(ctx_3120564270, HEX5BHEX5D_2986344532(node_3120564272, 0), false);
        if (!isSome_3087009345(oHEX60gensym90_3120565383)) Temporary26 = false; else {          var sym_3120565406 = get_3087009365(oHEX60gensym90_3120565383);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3120565406.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2181038320(sym_3120565406.id, IdDiv_2969567238)) {
      isDivision_3120565380 = true;
      }
      
      var Temporary27 = sym_3120565406;
      if (ConstSet157[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3120565411 = Temporary28;
      if ((len_2986344536(node_3120564272) == addInt(arity_3120565411, 1))) {
      var Temporary30 = sym_3120565406;
      if (ConstSet158[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3087007753)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3120565412 = Temporary24;
      switch (operatorNotation_3120565412) {
      case 3:
        var parentPrecedence_3120565413 = getPrecedenceForNode_3120562190(ctx_3120564270, node_3120564272.parent);
        var precedence_3120565414 = getPrecedenceForNode_3120562190(ctx_3120564270, node_3120564272);
        var renderParens_3120565415 = (precedence_3120565414 < parentPrecedence_3120565413);
        if ((isDivision_3120565380 && !(input_3120564271.renderDivisionVertically))) {
        var oldLineHEX60gensym91_3120565418 = [line_3120564274[line_3120564274_Idx]];
        var containerLineHEX60gensym91_3120565419 = [{id: newId_2181038297(), node: node_3120564272, parent: line_3120564274[line_3120564274_Idx], orientation: 1, depth: addInt(line_3120564274[line_3120564274_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: containerLineHEX60gensym91_3120565419[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3120565419[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_3120565466 = [line_3120564274[line_3120564274_Idx].parent];
        var prevIndent_3120565467 = line_3120564274[line_3120564274_Idx].indent;
        var first_3120565471 = (parent_3120565466[0].children).length;
        try {
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        addLine_3087009909(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        var line1_3120565524 = line_3120564274[line_3120564274_Idx];
        line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565466[0], bounds: rect_2080374802((prevIndent_3120565467 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_3120565529 = newBlockNode_3120562461([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2097152861(0.0, (config_3120562389[0].fontSize * 0.1)), HEX5BHEX5D_2986344532(node_3120564272, 0), none_3120562442());
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, divLine_3120565529);
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, HEX5BHEX5D_2986344532(node_3120564272, 0).id, {parent: line_3120564274[line_3120564274_Idx], first: 0, last: 1});
        addLine_3087009909(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565466[0], bounds: rect_2080374802((prevIndent_3120565467 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
        addLine_3087009909(parent_3120565466, 0, line_3120564274, line_3120564274_Idx);
        var line2_3120565576 = line_3120564274[line_3120564274_Idx];
        line_3120564274[line_3120564274_Idx] = {id: newId_2181038297(), parent: parent_3120565466[0], bounds: rect_2080374802((prevIndent_3120565467 * config_3120562389[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3120565467, depth: addInt(parent_3120565466[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_3120565529.bounds.w = max_33555642(line1_3120565524.bounds.w, line2_3120565576.bounds.w);
        divLine_3120565529.parent.bounds.w = divLine_3120565529.bounds.w;
        var shorterLine_3120565577 = line1_3120565524;
        var longerLine_3120565578 = line2_3120565576;
        if ((longerLine_3120565578.bounds.w < shorterLine_3120565577.bounds.w)) {
        shorterLine_3120565577 = line2_3120565576;
        longerLine_3120565578 = line1_3120565524;
        }
        
        var lengthDiff_3120565579 = (longerLine_3120565578.bounds.w - shorterLine_3120565577.bounds.w);
        HEX2BHEX3D_2080374897(shorterLine_3120565577.bounds, "x", (lengthDiff_3120565579 / 2.0));
        lastUsedChild_3120564422 = 2;
        } finally {
        if ((first_3120565471 < (parent_3120565466[0].children).length)) {
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: parent_3120565466[0], first: first_3120565471, last: (parent_3120565466[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3087009909(containerLineHEX60gensym91_3120565419, 0, line_3120564274, line_3120564274_Idx);
        HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(oldLineHEX60gensym91_3120565418, 0, containerLineHEX60gensym91_3120565419[0]));
        line_3120564274[line_3120564274_Idx] = oldLineHEX60gensym91_3120565418[0];
        }
        
        }
        }
        else {
          if (renderParens_3120565415) {
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          }
          
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.separator, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562420([32], config_3120562389[0].colors.separator, config_3120562389[0].fontRegular, input_3120564271.measureText, null));
          createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 2), result_3120564273, line_3120564274, line_3120564274_Idx);
          if (renderParens_3120565415) {
          var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
          }
          
          lastUsedChild_3120564422 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        lastUsedChild_3120564422 = 1;
        break;
      case 2:
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        lastUsedChild_3120564422 = 1;
        break;
      default: 
        if ((0 < len_2986344536(node_3120564272))) {
        createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, 0), result_3120564273, line_3120564274, line_3120564274_Idx);
        }
        
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([40], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        Label33: {
          var i_3120565588 = 0;
          var colontmp__2952790543 = 0;
          colontmp__2952790543 = len_2986344536(node_3120564272);
          var i_2952790544 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2952790544 < colontmp__2952790543)) break Label35;
                i_3120565588 = i_2952790544;
                if ((1 < i_3120565588)) {
                var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([44,32], [nimCopy(null, config_3120562389[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
                }
                
                createLayoutLineForNode_3120564269(ctx_3120564270, input_3120564271, HEX5BHEX5D_2986344532(node_3120564272, i_3120565588), result_3120564273, line_3120564274, line_3120564274_Idx);
                i_2952790544 = addInt(i_2952790544, 1);
              }
          };
        };
        var _ = add_3087009877(line_3120564274, line_3120564274_Idx, newTextNode_3120562433([41], config_3120562389[0].colors.separatorParen, config_3120562389[0].fontRegular, input_3120564271.measureText, null, none_3120562442()));
        lastUsedChild_3120564422 = subInt(len_2986344536(node_3120564272), 1);
        break;
      }
      }
      else {
        var fmtRes_3120565597 = [mnewString(0)];
        fmtRes_3120565597[0].push.apply(fmtRes_3120565597[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3120565598(fmtRes_3120565597, 0, node_3120564272.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120565597[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3120564275(ctx_3120564270, input_3120564271, node_3120564272, addInt(lastUsedChild_3120564422, 1), result_3120564273, line_3120564274, line_3120564274_Idx);
    }
    } finally {
    if (renderInline_3120564314) {
    addLine_3087009909(containerLineHEX60gensym42_3120564375, 0, line_3120564274, line_3120564274_Idx);
    HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, add_3087009877(oldLineHEX60gensym42_3120564374, 0, containerLineHEX60gensym42_3120564375[0]));
    line_3120564274[line_3120564274_Idx] = oldLineHEX60gensym42_3120564374[0];
    }
    
    }
    } finally {
    if ((first_3120564319 < (prevLine_3120564315.children).length)) {
    HEX5BHEX5DHEX3D_3120562724(result_3120564273.nodeToVisualNode, node_3120564272.id, {parent: prevLine_3120564315, first: first_3120564319, last: (prevLine_3120564315.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3120565624(vnode_3120565625) {
    var height_3120565626 = vnode_3120565625.bounds.h;
    Label1: {
      var child_3120565630 = null;
      var i_2952790570 = 0;
      var L_2952790571 = (vnode_3120565625.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790570 < L_2952790571)) break Label3;
            child_3120565630 = vnode_3120565625.children[chckIndx(i_2952790570, 0, (vnode_3120565625.children).length - 1)];
            if ((vnode_3120565625.orientation == 0)) {
            var heightDiff_3120565636 = (height_3120565626 - child_3120565630.bounds.h);
            HEX2BHEX3D_2080374897(child_3120565630.bounds, "y", (heightDiff_3120565636 * 0.5));
            }
            
            centerChildrenVertically_3120565624(child_3120565630);
            i_2952790570 = addInt(i_2952790570, 1);
            if (!(((vnode_3120565625.children).length == L_2952790571))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3120565641(ctx_3120565642, input_3120565643) {
  var result_3120565644 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_3120565645 = input_3120565643.node;
    result_3120565644[0] = nimCopy(result_3120565644[0], {node: node_3120565645, root: {id: newId_2181038297(), orientation: 1, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_3120565646(32)}, NTI3087007775);
    var line_3120565657 = [{id: newId_2181038297(), node: node_3120565645, parent: result_3120565644[0].root, orientation: 0, depth: addInt(result_3120565644[0].root.depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_3120564269(ctx_3120565642, input_3120565643, node_3120565645, result_3120565644[0], line_3120565657, 0);
    addLine_3087009909(line_3120565657[0], "parent", line_3120565657, 0);
    centerChildrenVertically_3120565624(result_3120565644[0].root);

  return result_3120565644[0];

}

function computeNodeLayoutImpl_3003122507(ctx_3003122508, nodeLayoutInput_3003122509) {
  var result_3003218788 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_3003175764(ctx_3003122508);
    result_3003218788 = nimCopy(result_3003218788, computeNodeLayoutImpl2_3120565641(ctx_3003122508, nodeLayoutInput_3003122509), NTI3087007775);
    break BeforeRet;
  };

  return result_3003218788;

}

function hash_3087009990(input_3087009991) {
  var result_3087009992 = 0;

    result_3087009992 = HEX21HEX26_1325400067(hash_2986346803(input_3087009991.node), hash_2181038324(input_3087009991.selectedNode));
    result_3087009992 = HEX21HEX24_1325400082(result_3087009992);

  return result_3087009992;

}

function len_3087010128(t_3087010131) {
  var result_3087010132 = 0;

    result_3087010132 = t_3087010131.counter;

  return result_3087010132;

}

function HEX3DHEX3D_3087009817(x_3087009819, y_3087009820) {
  var result_3087009821 = false;

  BeforeRet: {
    var sameObject_3087009828 = false;
    sameObject_3087009828 = x_3087009819 === y_3087009820
    if (sameObject_3087009828) {
    result_3087009821 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009819).length == (y_3087009820).length))) {
    result_3087009821 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009842 = 0;
      var colontmp__2952790586 = 0;
      colontmp__2952790586 = subInt((x_3087009819).length, 1);
      var res_2952790587 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790587 <= colontmp__2952790586)) break Label3;
            i_3087009842 = res_2952790587;
            if (!(eqStrings(x_3087009819[chckIndx(i_3087009842, 0, (x_3087009819).length - 1)], y_3087009820[chckIndx(i_3087009842, 0, (y_3087009820).length - 1)]))) {
            result_3087009821 = false;
            break BeforeRet;
            }
            
            res_2952790587 = addInt(res_2952790587, 1);
          }
      };
    };
    result_3087009821 = true;
    break BeforeRet;
  };

  return result_3087009821;

}

function HEX3DHEX3D_2332033571(x_2332033573, y_2332033574) {
  var result_2332033575 = false;

  BeforeRet: {
    if (!((x_2332033573.x == y_2332033574.x))) {
    result_2332033575 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033573.y == y_2332033574.y))) {
    result_2332033575 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033573.w == y_2332033574.w))) {
    result_2332033575 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033573.h == y_2332033574.h))) {
    result_2332033575 = false;
    break BeforeRet;
    }
    
    result_2332033575 = true;
    break BeforeRet;
  };

  return result_2332033575;

}

function HEX3DHEX3D_3087009851(x_3087009853, y_3087009854) {
  var result_3087009855 = false;

  BeforeRet: {
    var sameObject_3087009862 = false;
    sameObject_3087009862 = x_3087009853 === y_3087009854
    if (sameObject_3087009862) {
    result_3087009855 = true;
    break BeforeRet;
    }
    
    if (!(((x_3087009853).length == (y_3087009854).length))) {
    result_3087009855 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3087009876 = 0;
      var colontmp__2952790590 = 0;
      colontmp__2952790590 = subInt((x_3087009853).length, 1);
      var res_2952790591 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952790591 <= colontmp__2952790590)) break Label3;
            i_3087009876 = res_2952790591;
            if (!(HEX3DHEX3D_3087009800(x_3087009853[chckIndx(i_3087009876, 0, (x_3087009853).length - 1)], y_3087009854[chckIndx(i_3087009876, 0, (y_3087009854).length - 1)]))) {
            result_3087009855 = false;
            break BeforeRet;
            }
            
            res_2952790591 = addInt(res_2952790591, 1);
          }
      };
    };
    result_3087009855 = true;
    break BeforeRet;
  };

  return result_3087009855;

}

function HEX3DHEX3D_3087009800(a_3087009801, b_3087009802) {
  var result_3087009803 = false;

  BeforeRet: {
    if ((a_3087009801 == null)) {
    result_3087009803 = (b_3087009802 == null);
    break BeforeRet;
    }
    
    if ((b_3087009802 == null)) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3087009801.text, b_3087009802.text))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009801.node == b_3087009802.node))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087009817(a_3087009801.colors, b_3087009802.colors))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2332033571(a_3087009801.bounds, b_3087009802.bounds))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009801.render == b_3087009802.render))) {
    result_3087009803 = false;
    break BeforeRet;
    }
    
    result_3087009803 = HEX3DHEX3D_3087009851(a_3087009801.children, b_3087009802.children);
    break BeforeRet;
  };

  return result_3087009803;

}

function getOrDefault_3087010717(t_3087010720, key_3087010721) {
  var result_3087010722 = null;

    var hcHEX60gensym49_3087010725 = [0];
    var indexHEX60gensym49_3087010732 = rawGet_3087010430(t_3087010720, key_3087010721, hcHEX60gensym49_3087010725, 0);
    if ((0 <= indexHEX60gensym49_3087010732)) {
    result_3087010722 = t_3087010720.data[chckIndx(indexHEX60gensym49_3087010732, 0, (t_3087010720.data).length - 1)].Field2;
    }
    

  return result_3087010722;

}

function HEX3DHEX3D_3087010072(s_3087010075, t_3087010076) {
  var result_3087010077 = false;

  BeforeRet: {
    if ((s_3087010075.counter == t_3087010076.counter)) {
    Label1: {
      var keyHEX60gensym43_3087010381 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym43_3087010382 = null;
      var L_2952790579 = len_3087010128(s_3087010075);
      Label2: {
        var h_2952790581 = 0;
        var colontmp__2952790582 = 0;
        colontmp__2952790582 = (s_3087010075.data).length - 1;
        var res_2952790583 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952790583 <= colontmp__2952790582)) break Label4;
              h_2952790581 = res_2952790583;
              if (isFilled_1308622880(s_3087010075.data[chckIndx(h_2952790581, 0, (s_3087010075.data).length - 1)].Field0)) {
              keyHEX60gensym43_3087010381 = nimCopy(keyHEX60gensym43_3087010381, s_3087010075.data[chckIndx(h_2952790581, 0, (s_3087010075.data).length - 1)].Field1, NTI2181038083);
              valHEX60gensym43_3087010382 = s_3087010075.data[chckIndx(h_2952790581, 0, (s_3087010075.data).length - 1)].Field2;
              if (!(hasKey_3087010423(t_3087010076, keyHEX60gensym43_3087010381))) {
              result_3087010077 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3087009800(getOrDefault_3087010717(t_3087010076, keyHEX60gensym43_3087010381), valHEX60gensym43_3087010382))) {
              result_3087010077 = false;
              break BeforeRet;
              }
              
              if (!((len_3087010128(s_3087010075) == L_2952790579))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952790583 = addInt(res_2952790583, 1);
            }
        };
      };
    };
    result_3087010077 = true;
    break BeforeRet;
    }
    
  };

  return result_3087010077;

}

function HEX3DHEX3D_3087009993(a_3087009994, b_3087009995) {
  var result_3087009996 = false;

  BeforeRet: {
    if ((a_3087009994 == null)) {
    result_3087009996 = (b_3087009995 == null);
    break BeforeRet;
    }
    
    if ((b_3087009995 == null)) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009994.revision == b_3087009995.revision))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009994.node == b_3087009995.node))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2181038320(a_3087009994.selectedNode, b_3087009995.selectedNode))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3087010072(a_3087009994.replacements, b_3087009995.replacements))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    if (!((a_3087009994.renderDivisionVertically == b_3087009995.renderDivisionVertically))) {
    result_3087009996 = false;
    break BeforeRet;
    }
    
    result_3087009996 = true;
    break BeforeRet;
  };

  return result_3087009996;

}

function rawGet_3003165213(t_3003165216, key_3003165217, hc_3003165218, hc_3003165218_Idx) {
  var result_3003165219 = 0;

  BeforeRet: {
    hc_3003165218[hc_3003165218_Idx] = hash_3087009990(key_3003165217);
    if ((hc_3003165218[hc_3003165218_Idx] == 0)) {
    hc_3003165218[hc_3003165218_Idx] = 314159265;
    }
    
    if (((t_3003165216.data).length == 0)) {
    result_3003165219 = -1;
    break BeforeRet;
    }
    
    var h_3003165305 = (hc_3003165218[hc_3003165218_Idx] & (t_3003165216.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003165216.data[chckIndx(h_3003165305, 0, (t_3003165216.data).length - 1)].Field0)) break Label2;
          if (((t_3003165216.data[chckIndx(h_3003165305, 0, (t_3003165216.data).length - 1)].Field0 == hc_3003165218[hc_3003165218_Idx]) && HEX3DHEX3D_3087009993(t_3003165216.data[chckIndx(h_3003165305, 0, (t_3003165216.data).length - 1)].Field1, key_3003165217))) {
          result_3003165219 = h_3003165305;
          break BeforeRet;
          }
          
          h_3003165305 = nextTry_1308622883(h_3003165305, (t_3003165216.data).length - 1);
        }
    };
    result_3003165219 = subInt(-1, h_3003165305);
  };

  return result_3003165219;

}

function getOrDefault_3003165203(t_3003165206, key_3003165207, default_3003165208) {
    var Temporary1;

  var result_3003165209 = null;

    var hcHEX60gensym317_3003165212 = [0];
    var indexHEX60gensym317_3003165567 = rawGet_3003165213(t_3003165206, key_3003165207, hcHEX60gensym317_3003165212, 0);
    if ((0 <= indexHEX60gensym317_3003165567)) {
    Temporary1 = t_3003165206.data[chckIndx(indexHEX60gensym317_3003165567, 0, (t_3003165206.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003165208;
    }
    
    result_3003165209 = Temporary1;

  return result_3003165209;

}

function newDoublyLinkedNode_3003165692(value_3003165694) {
  var result_3003165695 = null;

    result_3003165695 = ({next: null, prev: null, value: ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})})});
    result_3003165695.value = nimCopy(result_3003165695.value, value_3003165694, NTI3003122530);

  return result_3003165695;

}

function mustRehash_3003166042(t_3003166044) {
  var result_3003166045 = false;

    if (!((t_3003166044.counter < (t_3003166044.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003166045 = ((mulInt((t_3003166044.data).length, 2) < mulInt(t_3003166044.counter, 3)) || (subInt((t_3003166044.data).length, t_3003166044.counter) < 4));

  return result_3003166045;

}

function rawInsert_3003166735(t_3003166739, data_3003166740, data_3003166740_Idx, key_3003166741, val_3003166742, hc_3003166743, h_3003166744) {
    data_3003166740[data_3003166740_Idx][chckIndx(h_3003166744, 0, (data_3003166740[data_3003166740_Idx]).length - 1)].Field1 = key_3003166741;
    data_3003166740[data_3003166740_Idx][chckIndx(h_3003166744, 0, (data_3003166740[data_3003166740_Idx]).length - 1)].Field2 = val_3003166742;
    data_3003166740[data_3003166740_Idx][chckIndx(h_3003166744, 0, (data_3003166740[data_3003166740_Idx]).length - 1)].Field0 = hc_3003166743;

  
}

function enlarge_3003166299(t_3003166302) {
    var n_3003166305 = [];
    n_3003166305 = new Array(chckRange(mulInt((t_3003166302.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003166302.data).length, 2), 0, 2147483647) ; ++i) { n_3003166305[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_3003166302.data; t_3003166302.data = n_3003166305; n_3003166305 = Temporary1;    Label2: {
      var i_3003166403 = 0;
      var colontmp__2952790595 = 0;
      colontmp__2952790595 = (n_3003166305).length - 1;
      var res_2952790596 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790596 <= colontmp__2952790595)) break Label4;
            i_3003166403 = res_2952790596;
            var eh_3003166484 = n_3003166305[chckIndx(i_3003166403, 0, (n_3003166305).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003166484)) {
            var j_3003166488 = (eh_3003166484 & (t_3003166302.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003166302.data[chckIndx(j_3003166488, 0, (t_3003166302.data).length - 1)].Field0)) break Label6;
                  j_3003166488 = nextTry_1308622883(j_3003166488, (t_3003166302.data).length - 1);
                }
            };
            rawInsert_3003166735(t_3003166302, t_3003166302, "data", n_3003166305[chckIndx(i_3003166403, 0, (n_3003166305).length - 1)].Field1, n_3003166305[chckIndx(i_3003166403, 0, (n_3003166305).length - 1)].Field2, eh_3003166484, j_3003166488);
            }
            
            res_2952790596 = addInt(res_2952790596, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003166985(t_3003166988, key_3003166989, hc_3003166990) {
  var result_3003166991 = 0;

  BeforeRet: {
    if (((t_3003166988.data).length == 0)) {
    result_3003166991 = -1;
    break BeforeRet;
    }
    
    var h_3003167076 = (hc_3003166990 & (t_3003166988.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003166988.data[chckIndx(h_3003167076, 0, (t_3003166988.data).length - 1)].Field0)) break Label2;
          if (((t_3003166988.data[chckIndx(h_3003167076, 0, (t_3003166988.data).length - 1)].Field0 == hc_3003166990) && HEX3DHEX3D_3087009993(t_3003166988.data[chckIndx(h_3003167076, 0, (t_3003166988.data).length - 1)].Field1, key_3003166989))) {
          result_3003166991 = h_3003167076;
          break BeforeRet;
          }
          
          h_3003167076 = nextTry_1308622883(h_3003167076, (t_3003166988.data).length - 1);
        }
    };
    result_3003166991 = subInt(-1, h_3003167076);
  };

  return result_3003166991;

}

function HEX5BHEX5DHEX3D_3003165774(t_3003165777, key_3003165778, val_3003165779) {
    if (((t_3003165777.data).length == 0)) {
    var correctSizeHEX60gensym322_3003165862 = slotsNeeded_1308622891(32);
    t_3003165777.counter = 0;
    t_3003165777.data = new Array(chckRange(correctSizeHEX60gensym322_3003165862, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym322_3003165862, 0, 2147483647) ; ++i) { t_3003165777.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_3003165867 = [0];
    var index_3003165874 = rawGet_3003165213(t_3003165777, key_3003165778, hc_3003165867, 0);
    if ((0 <= index_3003165874)) {
    t_3003165777.data[chckIndx(index_3003165874, 0, (t_3003165777.data).length - 1)].Field2 = val_3003165779;
    }
    else {
      if (((t_3003165777.data).length == 0)) {
      var correctSizeHEX60gensym325_3003166037 = slotsNeeded_1308622891(32);
      t_3003165777.counter = 0;
      t_3003165777.data = new Array(chckRange(correctSizeHEX60gensym325_3003166037, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym325_3003166037, 0, 2147483647) ; ++i) { t_3003165777.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_3003166042(t_3003165777)) {
      enlarge_3003166299(t_3003165777);
      index_3003165874 = rawGetKnownHC_3003166985(t_3003165777, key_3003165778, hc_3003165867[0]);
      }
      
      index_3003165874 = subInt(-1, index_3003165874);
      rawInsert_3003166735(t_3003165777, t_3003165777, "data", key_3003165778, val_3003165779, hc_3003165867[0], index_3003165874);
      t_3003165777.counter = addInt(t_3003165777.counter, 1);
    }
    

  
}

function prepend_3003167381(L_3003167383, n_3003167384) {
    n_3003167384.prev = null;
    n_3003167384.next = L_3003167383.head;
    if (!((L_3003167383.head == null))) {
    if (!((L_3003167383.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003167383.head.prev = n_3003167384;
    }
    
    L_3003167383.head = n_3003167384;
    if ((L_3003167383.tail == null)) {
    L_3003167383.tail = n_3003167384;
    }
    

  
}

function rawGet_3003167630(t_3003167633, key_3003167634, hc_3003167635, hc_3003167635_Idx) {
  var result_3003167636 = 0;

  BeforeRet: {
    hc_3003167635[hc_3003167635_Idx] = hash_3087009990(key_3003167634);
    if ((hc_3003167635[hc_3003167635_Idx] == 0)) {
    hc_3003167635[hc_3003167635_Idx] = 314159265;
    }
    
    if (((t_3003167633.data).length == 0)) {
    result_3003167636 = -1;
    break BeforeRet;
    }
    
    var h_3003167722 = (hc_3003167635[hc_3003167635_Idx] & (t_3003167633.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003167633.data[chckIndx(h_3003167722, 0, (t_3003167633.data).length - 1)].Field0)) break Label2;
          if (((t_3003167633.data[chckIndx(h_3003167722, 0, (t_3003167633.data).length - 1)].Field0 == hc_3003167635[hc_3003167635_Idx]) && HEX3DHEX3D_3087009993(t_3003167633.data[chckIndx(h_3003167722, 0, (t_3003167633.data).length - 1)].Field1, key_3003167634))) {
          result_3003167636 = h_3003167722;
          break BeforeRet;
          }
          
          h_3003167722 = nextTry_1828716586(h_3003167722, (t_3003167633.data).length - 1);
        }
    };
    result_3003167636 = subInt(-1, h_3003167722);
  };

  return result_3003167636;

}

function exclImpl_3003167624(s_3003167626, key_3003167627) {
          var Temporary5;

  var result_3003167628 = false;

  BeforeRet: {
    var hc_3003167629 = [0];
    var i_3003167984 = rawGet_3003167630(s_3003167626, key_3003167627, hc_3003167629, 0);
    var msk_3003167988 = (s_3003167626.data).length - 1;
    result_3003167628 = true;
    if ((0 <= i_3003167984)) {
    result_3003167628 = false;
    s_3003167626.counter = subInt(s_3003167626.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003167994 = i_3003167984;
          var r_3003167995 = j_3003167994;
          s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field0 = 0;
          s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003167984 = (addInt(i_3003167984, 1) & msk_3003167988);
                if (isEmpty_1828716580(s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003167995 = (s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)].Field0 & msk_3003167988);
                if (!(((((r_3003167995 <= i_3003167984) && (j_3003167994 < r_3003167995)) || ((j_3003167994 < r_3003167995) && (i_3003167984 < j_3003167994))) || ((i_3003167984 < j_3003167994) && (r_3003167995 <= i_3003167984))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)];
          s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)] = genericReset(s_3003167626.data[chckIndx(i_3003167984, 0, (s_3003167626.data).length - 1)], NTI3003122586);
          s_3003167626.data[chckIndx(j_3003167994, 0, (s_3003167626.data).length - 1)] = nimCopy(s_3003167626.data[chckIndx(j_3003167994, 0, (s_3003167626.data).length - 1)], Temporary5, NTI3003122586);
        }
    };
    }
    
  };

  return result_3003167628;

}

function excl_3003167609(s_3003167611, key_3003167612) {
    var _ = exclImpl_3003167624(s_3003167611, key_3003167612);

  
}

function len_3003168748(t_3003168751) {
  var result_3003168752 = 0;

    result_3003168752 = t_3003168751.counter;

  return result_3003168752;

}

function len_3003168665(cache_3003168668) {
  var result_3003168669 = 0;

    result_3003168669 = len_3003168748(cache_3003168668.table);

  return result_3003168669;

}

function mustRehash_3003168889(t_3003168891) {
  var result_3003168892 = false;

    if (!((t_3003168891.counter < (t_3003168891.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003168892 = ((mulInt((t_3003168891.data).length, 2) < mulInt(t_3003168891.counter, 3)) || (subInt((t_3003168891.data).length, t_3003168891.counter) < 4));

  return result_3003168892;

}

function rawGetKnownHC_3003169495(t_3003169498, key_3003169499, hc_3003169500) {
  var result_3003169501 = 0;

  BeforeRet: {
    if (((t_3003169498.data).length == 0)) {
    result_3003169501 = -1;
    break BeforeRet;
    }
    
    var h_3003169586 = (hc_3003169500 & (t_3003169498.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003169498.data[chckIndx(h_3003169586, 0, (t_3003169498.data).length - 1)].Field0)) break Label2;
          if (((t_3003169498.data[chckIndx(h_3003169586, 0, (t_3003169498.data).length - 1)].Field0 == hc_3003169500) && HEX3DHEX3D_3087009993(t_3003169498.data[chckIndx(h_3003169586, 0, (t_3003169498.data).length - 1)].Field1, key_3003169499))) {
          result_3003169501 = h_3003169586;
          break BeforeRet;
          }
          
          h_3003169586 = nextTry_1828716586(h_3003169586, (t_3003169498.data).length - 1);
        }
    };
    result_3003169501 = subInt(-1, h_3003169586);
  };

  return result_3003169501;

}

function rawInsert_3003169995(s_3003169997, data_3003169998, data_3003169998_Idx, key_3003169999, hc_3003170000, h_3003170001) {
    if (((data_3003169998[data_3003169998_Idx]).length == 0)) {
    var correctSizeHEX60gensym344_3003170084 = slotsNeeded_1828716594(64);
    s_3003169997.counter = 0;
    s_3003169997.data = new Array(chckRange(correctSizeHEX60gensym344_3003170084, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym344_3003170084, 0, 2147483647) ; ++i) { s_3003169997.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_3003169998[data_3003169998_Idx][chckIndx(h_3003170001, 0, (data_3003169998[data_3003169998_Idx]).length - 1)].Field1 = key_3003169999;
    data_3003169998[data_3003169998_Idx][chckIndx(h_3003170001, 0, (data_3003169998[data_3003169998_Idx]).length - 1)].Field0 = hc_3003170000;

  
}

function enlarge_3003169152(s_3003169154) {
    var n_3003169156 = [];
    n_3003169156 = new Array(chckRange(mulInt((s_3003169154.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003169154.data).length, 2), 0, 2147483647) ; ++i) { n_3003169156[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_3003169154.data; s_3003169154.data = n_3003169156; n_3003169156 = Temporary1;    Label2: {
      var i_3003169254 = 0;
      var colontmp__2952790604 = 0;
      colontmp__2952790604 = (n_3003169156).length - 1;
      var res_2952790605 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790605 <= colontmp__2952790604)) break Label4;
            i_3003169254 = res_2952790605;
            if (isFilled_1828716583(n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field0)) {
            var j_3003169830 = subInt(-1, rawGetKnownHC_3003169495(s_3003169154, n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field1, n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field0));
            rawInsert_3003169995(s_3003169154, s_3003169154, "data", n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field1, n_3003169156[chckIndx(i_3003169254, 0, (n_3003169156).length - 1)].Field0, j_3003169830);
            }
            
            res_2952790605 = addInt(res_2952790605, 1);
          }
      };
    };

  
}

function incl_3003168773(s_3003168775, key_3003168776) {
    if (((s_3003168775.data).length == 0)) {
    var correctSizeHEX60gensym337_3003168859 = slotsNeeded_1828716594(64);
    s_3003168775.counter = 0;
    s_3003168775.data = new Array(chckRange(correctSizeHEX60gensym337_3003168859, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_3003168859, 0, 2147483647) ; ++i) { s_3003168775.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_3003168874 = [0];
    var index_3003168888 = rawGet_3003167630(s_3003168775, key_3003168776, hc_3003168874, 0);
    if ((index_3003168888 < 0)) {
    if (mustRehash_3003168889(s_3003168775)) {
    enlarge_3003169152(s_3003168775);
    index_3003168888 = rawGetKnownHC_3003169495(s_3003168775, key_3003168776, hc_3003168874[0]);
    }
    
    rawInsert_3003169995(s_3003168775, s_3003168775, "data", key_3003168776, hc_3003168874[0], subInt(-1, index_3003168888));
    s_3003168775.counter = addInt(s_3003168775.counter, 1);
    }
    

  
}

function del_3003170351(t_3003170354, key_3003170355) {
    var hc_3003170356 = [0];
    var i_3003170363 = rawGet_3003165213(t_3003170354, key_3003170355, hc_3003170356, 0);
    var mskHEX60gensym36_3003170367 = (t_3003170354.data).length - 1;
    if ((0 <= i_3003170363)) {
    t_3003170354.counter = subInt(t_3003170354.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003170374 = i_3003170363;
            var rHEX60gensym36_3003170375 = jHEX60gensym36_3003170374;
            t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field0 = 0;
            t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field1 = null;
            t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003170363 = (addInt(i_3003170363, 1) & mskHEX60gensym36_3003170367);
                  if (isEmpty_1308622877(t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003170375 = (t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)].Field0 & mskHEX60gensym36_3003170367);
                  if (!(((((rHEX60gensym36_3003170375 <= i_3003170363) && (jHEX60gensym36_3003170374 < rHEX60gensym36_3003170375)) || ((jHEX60gensym36_3003170374 < rHEX60gensym36_3003170375) && (i_3003170363 < jHEX60gensym36_3003170374))) || ((i_3003170363 < jHEX60gensym36_3003170374) && (rHEX60gensym36_3003170375 <= i_3003170363))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003170354.data[chckIndx(jHEX60gensym36_3003170374, 0, (t_3003170354.data).length - 1)] = nimCopy(t_3003170354.data[chckIndx(jHEX60gensym36_3003170374, 0, (t_3003170354.data).length - 1)], t_3003170354.data[chckIndx(i_3003170363, 0, (t_3003170354.data).length - 1)], NTI3003122566);
          }
      };
    };
    }
    

  
}

function remove_3003171110(L_3003171112, n_3003171113) {
    if ((n_3003171113 == L_3003171112.tail)) {
    L_3003171112.tail = n_3003171113.prev;
    }
    
    if ((n_3003171113 == L_3003171112.head)) {
    L_3003171112.head = n_3003171113.next;
    }
    
    if (!((n_3003171113.next == null))) {
    n_3003171113.next.prev = n_3003171113.prev;
    }
    
    if (!((n_3003171113.prev == null))) {
    n_3003171113.prev.next = n_3003171113.next;
    }
    

  
}

function resize_3003168583(cache_3003168586) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003168586.capacity < len_3003168665(cache_3003168586))) break Label2;
          var t_3003168753 = cache_3003168586.list.tail;
          if (cache_3003168586.recordRemovedKeys) {
          incl_3003168773(cache_3003168586.removedKeys, t_3003168753.value.key);
          }
          
          del_3003170351(cache_3003168586.table, t_3003168753.value.key);
          remove_3003171110(cache_3003168586.list, t_3003168753);
        }
    };

  
}

function addNewNode_3003165684(cache_3003165687, key_3003165688, val_3003165689) {
    var node_3003165710 = newDoublyLinkedNode_3003165692({key: key_3003165688, val: nimCopy(null, val_3003165689, NTI3087007775)});
    HEX5BHEX5DHEX3D_3003165774(cache_3003165687.table, key_3003165688, node_3003165710);
    prepend_3003167381(cache_3003165687.list, node_3003165710);
    if (cache_3003165687.recordRemovedKeys) {
    excl_3003167609(cache_3003165687.removedKeys, key_3003165688);
    }
    
    resize_3003168583(cache_3003165687);

  
}

function HEX5BHEX5DHEX3D_3003165108(cache_3003165111, key_3003165112, val_3003165113) {
    var node_3003165657 = getOrDefault_3003165203(cache_3003165111.table, key_3003165112, null);
    if ((node_3003165657 == null)) {
    addNewNode_3003165684(cache_3003165111, key_3003165112, val_3003165113);
    }
    else {
      node_3003165657.value.val = nimCopy(node_3003165657.value.val, val_3003165113, NTI3087007775);
      remove_3003171110(cache_3003165111.list, node_3003165657);
      prepend_3003167381(cache_3003165111.list, node_3003165657);
    }
    

  
}

function initDoublyLinkedList_3003171590() {
  var result_3003171592 = ({head: null, tail: null});

  return result_3003171592;

}

function initTable_3003171596(initialSize_3003171599) {
  var result_3003171600 = ({data: [], counter: 0});

    var correctSizeHEX60gensym345_3003171602 = slotsNeeded_1308622891(chckRange(initialSize_3003171599, 0, 2147483647));
    result_3003171600.counter = 0;
    result_3003171600.data = new Array(chckRange(correctSizeHEX60gensym345_3003171602, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym345_3003171602, 0, 2147483647) ; ++i) { result_3003171600.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_3003171600;

}

function newLruCache_3003171580(capacity_3003171583, recordRemovedKeys_3003171584) {
  var result_3003171585 = null;

    result_3003171585 = {capacity: capacity_3003171583, list: initDoublyLinkedList_3003171590(), table: initTable_3003171596(correctSize_3036676117(capacity_3003171583)), recordRemovedKeys: recordRemovedKeys_3003171584, removedKeys: ({data: [], counter: 0})};

  return result_3003171585;

}

function newCache_3003171575(capacity_3003171578) {
  var result_3003171579 = null;

    result_3003171579 = newLruCache_3003171580(capacity_3003171578, false);

  return result_3003171579;

}

function init_3003171570(result_3003171573, result_3003171573_Idx, capacity_3003171574) {
    result_3003171573[result_3003171573_Idx] = newCache_3003171575(capacity_3003171574);

  
}

function mustRehash_3003172323(t_3003172325) {
  var result_3003172326 = false;

    if (!((t_3003172325.counter < (t_3003172325.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003172326 = ((mulInt((t_3003172325.data).length, 2) < mulInt(t_3003172325.counter, 3)) || (subInt((t_3003172325.data).length, t_3003172325.counter) < 4));

  return result_3003172326;

}

function rawInsert_3003173016(t_3003173020, data_3003173021, data_3003173021_Idx, key_3003173022, val_3003173023, hc_3003173024, h_3003173025) {
    data_3003173021[data_3003173021_Idx][chckIndx(h_3003173025, 0, (data_3003173021[data_3003173021_Idx]).length - 1)].Field1 = key_3003173022;
    data_3003173021[data_3003173021_Idx][chckIndx(h_3003173025, 0, (data_3003173021[data_3003173021_Idx]).length - 1)].Field2 = val_3003173023;
    data_3003173021[data_3003173021_Idx][chckIndx(h_3003173025, 0, (data_3003173021[data_3003173021_Idx]).length - 1)].Field0 = hc_3003173024;

  
}

function enlarge_3003172580(t_3003172583) {
    var n_3003172586 = [];
    n_3003172586 = new Array(chckRange(mulInt((t_3003172583.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003172583.data).length, 2), 0, 2147483647) ; ++i) { n_3003172586[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3003172583.data; t_3003172583.data = n_3003172586; n_3003172586 = Temporary1;    Label2: {
      var i_3003172684 = 0;
      var colontmp__2952790612 = 0;
      colontmp__2952790612 = (n_3003172586).length - 1;
      var res_2952790613 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952790613 <= colontmp__2952790612)) break Label4;
            i_3003172684 = res_2952790613;
            var eh_3003172765 = n_3003172586[chckIndx(i_3003172684, 0, (n_3003172586).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003172765)) {
            var j_3003172769 = (eh_3003172765 & (t_3003172583.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003172583.data[chckIndx(j_3003172769, 0, (t_3003172583.data).length - 1)].Field0)) break Label6;
                  j_3003172769 = nextTry_1308622883(j_3003172769, (t_3003172583.data).length - 1);
                }
            };
            rawInsert_3003173016(t_3003172583, t_3003172583, "data", n_3003172586[chckIndx(i_3003172684, 0, (n_3003172586).length - 1)].Field1, n_3003172586[chckIndx(i_3003172684, 0, (n_3003172586).length - 1)].Field2, eh_3003172765, j_3003172769);
            }
            
            res_2952790613 = addInt(res_2952790613, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003173275(t_3003173278, key_3003173279, hc_3003173280) {
  var result_3003173281 = 0;

  BeforeRet: {
    if (((t_3003173278.data).length == 0)) {
    result_3003173281 = -1;
    break BeforeRet;
    }
    
    var h_3003173366 = (hc_3003173280 & (t_3003173278.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003173278.data[chckIndx(h_3003173366, 0, (t_3003173278.data).length - 1)].Field0)) break Label2;
          if (((t_3003173278.data[chckIndx(h_3003173366, 0, (t_3003173278.data).length - 1)].Field0 == hc_3003173280) && (t_3003173278.data[chckIndx(h_3003173366, 0, (t_3003173278.data).length - 1)].Field1 == key_3003173279))) {
          result_3003173281 = h_3003173366;
          break BeforeRet;
          }
          
          h_3003173366 = nextTry_1308622883(h_3003173366, (t_3003173278.data).length - 1);
        }
    };
    result_3003173281 = subInt(-1, h_3003173366);
  };

  return result_3003173281;

}

function HEX5BHEX5DHEX3D_3003171704(t_3003171707, key_3003171708, val_3003171709) {
    if (((t_3003171707.data).length == 0)) {
    var correctSizeHEX60gensym348_3003171793 = slotsNeeded_1308622891(32);
    t_3003171707.counter = 0;
    t_3003171707.data = new Array(chckRange(correctSizeHEX60gensym348_3003171793, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym348_3003171793, 0, 2147483647) ; ++i) { t_3003171707.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3003171798 = [0];
    var index_3003172155 = rawGet_3003171799(t_3003171707, key_3003171708, hc_3003171798, 0);
    if ((0 <= index_3003172155)) {
    t_3003171707.data[chckIndx(index_3003172155, 0, (t_3003171707.data).length - 1)].Field2 = val_3003171709;
    }
    else {
      if (((t_3003171707.data).length == 0)) {
      var correctSizeHEX60gensym353_3003172318 = slotsNeeded_1308622891(32);
      t_3003171707.counter = 0;
      t_3003171707.data = new Array(chckRange(correctSizeHEX60gensym353_3003172318, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym353_3003172318, 0, 2147483647) ; ++i) { t_3003171707.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3003172323(t_3003171707)) {
      enlarge_3003172580(t_3003171707);
      index_3003172155 = rawGetKnownHC_3003173275(t_3003171707, key_3003171708, hc_3003171798[0]);
      }
      
      index_3003172155 = subInt(-1, index_3003172155);
      rawInsert_3003173016(t_3003171707, t_3003171707, "data", key_3003171708, val_3003171709, hc_3003171798[0], index_3003172155);
      t_3003171707.counter = addInt(t_3003171707.counter, 1);
    }
    

  
}

function formatValue_3003218813(result_3003218815, result_3003218815_Idx, value_3003218816, specifier_3003218817) {
    formatValue_721420459(result_3003218815, result_3003218815_Idx, HEX24_3019909728(value_3003218816), specifier_3003218817);

  
}

function getAstNode_3003175776(ctxHEX60gensym74_3003175777, idHEX60gensym74_3003175778) {
  var result_3003175780 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym74_3003175781 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym74_3003175778, NTI2181038083), Field1: 0}, NTI3019898905);
    if (contains_3003122598(ctxHEX60gensym74_3003175777.itemsAstNode, itemHEX60gensym74_3003175781)) {
    result_3003175780 = nimCopy(result_3003175780, some_2986344674(HEX5BHEX5D_3003123165(ctxHEX60gensym74_3003175777.itemsAstNode, itemHEX60gensym74_3003175781)), NTI2986344567);
    break BeforeRet;
    }
    
    result_3003175780 = nimCopy(result_3003175780, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_3003175780;

}

function recoverValue_3003122471(ctx_3003122472, key_3003122473) {
      var Temporary1;

    var fmtRes_3003218812 = [mnewString(0)];
    fmtRes_3003218812[0].push.apply(fmtRes_3003218812[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003218812, 0, key_3003122473, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003218812[0], NTI33554449)]);
      var oHEX60gensym532_3003218823 = getAstNode_3003175776(ctx_3003122472, key_3003122473.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym532_3003218823)) Temporary1 = false; else {        var node_3003218869 = get_2986346350(oHEX60gensym532_3003218823);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003130737(ctx_3003122472.queryCacheValue, node_3003218869, errorValue_3087008431());
    }
    

  
}

function recoverType_3003122474(ctx_3003122475, key_3003122476) {
      var Temporary1;

    var fmtRes_3003218946 = [mnewString(0)];
    fmtRes_3003218946[0].push.apply(fmtRes_3003218946[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003218946, 0, key_3003122476, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003218946[0], NTI33554449)]);
      var oHEX60gensym534_3003218954 = getAstNode_3003175776(ctx_3003122475, key_3003122476.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym534_3003218954)) Temporary1 = false; else {        var node_3003219000 = get_2986346350(oHEX60gensym534_3003218954);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003123978(ctx_3003122475.queryCacheType, node_3003219000, errorType_3087008120());
    }
    

  
}

function recoverSymbol_3003122477(ctx_3003122478, key_3003122479) {
      var Temporary1;

    var fmtRes_3003219077 = [mnewString(0)];
    fmtRes_3003219077[0].push.apply(fmtRes_3003219077[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003219077, 0, key_3003122479, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003219077[0], NTI33554449)]);
      var oHEX60gensym536_3003219085 = getAstNode_3003175776(ctx_3003122478, key_3003122479.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym536_3003219085)) Temporary1 = false; else {        var node_3003219131 = get_2986346350(oHEX60gensym536_3003219085);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003135049(ctx_3003122478.queryCacheSymbol, node_3003219131, none_3003185212());
    }
    

  
}

function recoverSymbols_3003122480(ctx_3003122481, key_3003122482) {
      var Temporary1;

    var fmtRes_3003219210 = [mnewString(0)];
    fmtRes_3003219210[0].push.apply(fmtRes_3003219210[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_3003218813(fmtRes_3003219210, 0, key_3003122482, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003219210[0], NTI33554449)]);
      var oHEX60gensym538_3003219218 = getAstNode_3003175776(ctx_3003122481, key_3003122482.Field0.Field0);
      if (!isSome_2986346330(oHEX60gensym538_3003219218)) Temporary1 = false; else {        var node_3003219264 = get_2986346350(oHEX60gensym538_3003219218);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_3003139353(ctx_3003122481.queryCacheSymbols, node_3003219264, newTable_3003219328(32));
    }
    

  
}

function initDoublyLinkedList_3003173910() {
  var result_3003173912 = ({head: null, tail: null});

  return result_3003173912;

}

function initTable_3003173916(initialSize_3003173919) {
  var result_3003173920 = ({data: [], counter: 0});

    var correctSizeHEX60gensym361_3003173922 = slotsNeeded_1308622891(chckRange(initialSize_3003173919, 0, 2147483647));
    result_3003173920.counter = 0;
    result_3003173920.data = new Array(chckRange(correctSizeHEX60gensym361_3003173922, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym361_3003173922, 0, 2147483647) ; ++i) { result_3003173920.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003173920;

}

function newLruCache_3003173900(capacity_3003173903, recordRemovedKeys_3003173904) {
  var result_3003173905 = null;

    result_3003173905 = {capacity: capacity_3003173903, list: initDoublyLinkedList_3003173910(), table: initTable_3003173916(correctSize_3036676117(capacity_3003173903)), recordRemovedKeys: recordRemovedKeys_3003173904, removedKeys: ({data: [], counter: 0})};

  return result_3003173905;

}

function newCache_3003173895(capacity_3003173898) {
  var result_3003173899 = null;

    result_3003173899 = newLruCache_3003173900(capacity_3003173898, false);

  return result_3003173899;

}

function init_3003173890(result_3003173893, result_3003173893_Idx, capacity_3003173894) {
    result_3003173893[result_3003173893_Idx] = newCache_3003173895(capacity_3003173894);

  
}

function initDoublyLinkedList_3003174008() {
  var result_3003174010 = ({head: null, tail: null});

  return result_3003174010;

}

function initTable_3003174014(initialSize_3003174017) {
  var result_3003174018 = ({data: [], counter: 0});

    var correctSizeHEX60gensym363_3003174020 = slotsNeeded_1308622891(chckRange(initialSize_3003174017, 0, 2147483647));
    result_3003174018.counter = 0;
    result_3003174018.data = new Array(chckRange(correctSizeHEX60gensym363_3003174020, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym363_3003174020, 0, 2147483647) ; ++i) { result_3003174018.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003174018;

}

function newLruCache_3003173998(capacity_3003174001, recordRemovedKeys_3003174002) {
  var result_3003174003 = null;

    result_3003174003 = {capacity: capacity_3003174001, list: initDoublyLinkedList_3003174008(), table: initTable_3003174014(correctSize_3036676117(capacity_3003174001)), recordRemovedKeys: recordRemovedKeys_3003174002, removedKeys: ({data: [], counter: 0})};

  return result_3003174003;

}

function newCache_3003173993(capacity_3003173996) {
  var result_3003173997 = null;

    result_3003173997 = newLruCache_3003173998(capacity_3003173996, false);

  return result_3003173997;

}

function init_3003173988(result_3003173991, result_3003173991_Idx, capacity_3003173992) {
    result_3003173991[result_3003173991_Idx] = newCache_3003173993(capacity_3003173992);

  
}

function initDoublyLinkedList_3003174106() {
  var result_3003174108 = ({head: null, tail: null});

  return result_3003174108;

}

function initTable_3003174112(initialSize_3003174115) {
  var result_3003174116 = ({data: [], counter: 0});

    var correctSizeHEX60gensym365_3003174118 = slotsNeeded_1308622891(chckRange(initialSize_3003174115, 0, 2147483647));
    result_3003174116.counter = 0;
    result_3003174116.data = new Array(chckRange(correctSizeHEX60gensym365_3003174118, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym365_3003174118, 0, 2147483647) ; ++i) { result_3003174116.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003174116;

}

function newLruCache_3003174096(capacity_3003174099, recordRemovedKeys_3003174100) {
  var result_3003174101 = null;

    result_3003174101 = {capacity: capacity_3003174099, list: initDoublyLinkedList_3003174106(), table: initTable_3003174112(correctSize_3036676117(capacity_3003174099)), recordRemovedKeys: recordRemovedKeys_3003174100, removedKeys: ({data: [], counter: 0})};

  return result_3003174101;

}

function newCache_3003174091(capacity_3003174094) {
  var result_3003174095 = null;

    result_3003174095 = newLruCache_3003174096(capacity_3003174094, false);

  return result_3003174095;

}

function init_3003174086(result_3003174089, result_3003174089_Idx, capacity_3003174090) {
    result_3003174089[result_3003174089_Idx] = newCache_3003174091(capacity_3003174090);

  
}

function initDoublyLinkedList_3003174204() {
  var result_3003174206 = ({head: null, tail: null});

  return result_3003174206;

}

function initTable_3003174210(initialSize_3003174213) {
  var result_3003174214 = ({data: [], counter: 0});

    var correctSizeHEX60gensym367_3003174216 = slotsNeeded_1308622891(chckRange(initialSize_3003174213, 0, 2147483647));
    result_3003174214.counter = 0;
    result_3003174214.data = new Array(chckRange(correctSizeHEX60gensym367_3003174216, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym367_3003174216, 0, 2147483647) ; ++i) { result_3003174214.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_3003174214;

}

function newLruCache_3003174194(capacity_3003174197, recordRemovedKeys_3003174198) {
  var result_3003174199 = null;

    result_3003174199 = {capacity: capacity_3003174197, list: initDoublyLinkedList_3003174204(), table: initTable_3003174210(correctSize_3036676117(capacity_3003174197)), recordRemovedKeys: recordRemovedKeys_3003174198, removedKeys: ({data: [], counter: 0})};

  return result_3003174199;

}

function newCache_3003174189(capacity_3003174192) {
  var result_3003174193 = null;

    result_3003174193 = newLruCache_3003174194(capacity_3003174192, false);

  return result_3003174193;

}

function init_3003174184(result_3003174187, result_3003174187_Idx, capacity_3003174188) {
    result_3003174187[result_3003174187_Idx] = newCache_3003174189(capacity_3003174188);

  
}

function initTable_3003174259(initialSize_3003174262) {
  var result_3003174263 = ({data: [], counter: 0});

    var correctSizeHEX60gensym371_3003174265 = slotsNeeded_1308622891(chckRange(initialSize_3003174262, 0, 2147483647));
    result_3003174263.counter = 0;
    result_3003174263.data = new Array(chckRange(correctSizeHEX60gensym371_3003174265, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym371_3003174265, 0, 2147483647) ; ++i) { result_3003174263.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_3003174263;

}

function initTable_3003174279(initialSize_3003174282) {
  var result_3003174283 = ({data: [], counter: 0});

    var correctSizeHEX60gensym373_3003174285 = slotsNeeded_1308622891(chckRange(initialSize_3003174282, 0, 2147483647));
    result_3003174283.counter = 0;
    result_3003174283.data = new Array(chckRange(correctSizeHEX60gensym373_3003174285, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym373_3003174285, 0, 2147483647) ; ++i) { result_3003174283.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_3003174283;

}

function newContext_3003122510() {
    
function HEX3Aanonymous_3003122519(itemHEX60gensym28_3003122520) {
      var result_3003122521 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym28_3003122520))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym28_3003122520) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsType.forcedCalls = addInt(ctx_3003121848.statsType.forcedCalls, 1);
        var argHEX60gensym28_3003123913 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym28_3003122520);
        var valueHEX60gensym28_3003123914 = computeTypeImpl_3003122483(ctx_3003121848, argHEX60gensym28_3003123913);
        HEX5BHEX5DHEX3D_3003123978(ctx_3003121848.queryCacheType, argHEX60gensym28_3003123913, valueHEX60gensym28_3003123914);
        result_3003122521 = nimCopy(null, fingerprint_3087008346(valueHEX60gensym28_3003123914), NTI3019898904);
        break BeforeRet;
      };

      return result_3003122521;

    }
    
function HEX3Aanonymous_3003130498(itemHEX60gensym29_3003130499) {
      var result_3003130500 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym29_3003130499))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym29_3003130499) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsValue.forcedCalls = addInt(ctx_3003121848.statsValue.forcedCalls, 1);
        var argHEX60gensym29_3003130672 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym29_3003130499);
        var valueHEX60gensym29_3003130673 = computeValueImpl_3003122486(ctx_3003121848, argHEX60gensym29_3003130672);
        HEX5BHEX5DHEX3D_3003130737(ctx_3003121848.queryCacheValue, argHEX60gensym29_3003130672, valueHEX60gensym29_3003130673);
        result_3003130500 = nimCopy(null, fingerprint_3087008527(valueHEX60gensym29_3003130673), NTI3019898904);
        break BeforeRet;
      };

      return result_3003130500;

    }
    
function HEX3Aanonymous_3003134809(itemHEX60gensym30_3003134810) {
      var result_3003134811 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym30_3003134810))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3019899092(itemHEX60gensym30_3003134810) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbol.forcedCalls = addInt(ctx_3003121848.statsSymbol.forcedCalls, 1);
        var argHEX60gensym30_3003134983 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym30_3003134810);
        var valueHEX60gensym30_3003134985 = computeSymbolImpl_3003122489(ctx_3003121848, argHEX60gensym30_3003134983);
        HEX5BHEX5DHEX3D_3003135049(ctx_3003121848.queryCacheSymbol, argHEX60gensym30_3003134983, valueHEX60gensym30_3003134985);
        result_3003134811 = nimCopy(null, fingerprint_3087009331(valueHEX60gensym30_3003134985), NTI3019898904);
        break BeforeRet;
      };

      return result_3003134811;

    }
    
function HEX3Aanonymous_3003139112(itemHEX60gensym31_3003139113) {
      var result_3003139114 = [];

      BeforeRet: {
        if (!(contains_3003122598(ctx_3003121848.itemsAstNode, itemHEX60gensym31_3003139113))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3019899092(itemHEX60gensym31_3003139113) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbols.forcedCalls = addInt(ctx_3003121848.statsSymbols.forcedCalls, 1);
        var argHEX60gensym31_3003139286 = HEX5BHEX5D_3003123165(ctx_3003121848.itemsAstNode, itemHEX60gensym31_3003139113);
        var valueHEX60gensym31_3003139289 = computeSymbolsImpl_3003122493(ctx_3003121848, argHEX60gensym31_3003139286);
        HEX5BHEX5DHEX3D_3003139353(ctx_3003121848.queryCacheSymbols, argHEX60gensym31_3003139286, valueHEX60gensym31_3003139289);
        result_3003139114 = nimCopy(null, fingerprint_3087008992(valueHEX60gensym31_3003139289), NTI3019898904);
        break BeforeRet;
      };

      return result_3003139114;

    }
    
function HEX3Aanonymous_3003143416(itemHEX60gensym32_3003143417) {
      var result_3003143418 = [];

      BeforeRet: {
        if (!(contains_3003143495(ctx_3003121848.itemsSymbol, itemHEX60gensym32_3003143417))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym32_3003143417) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbolType.forcedCalls = addInt(ctx_3003121848.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym32_3003144795 = HEX5BHEX5D_3003144048(ctx_3003121848.itemsSymbol, itemHEX60gensym32_3003143417);
        var valueHEX60gensym32_3003144796 = computeSymbolTypeImpl_3003122498(ctx_3003121848, argHEX60gensym32_3003144795);
        HEX5BHEX5DHEX3D_3003144860(ctx_3003121848.queryCacheSymbolType, argHEX60gensym32_3003144795, valueHEX60gensym32_3003144796);
        result_3003143418 = nimCopy(null, fingerprint_3087008346(valueHEX60gensym32_3003144796), NTI3019898904);
        break BeforeRet;
      };

      return result_3003143418;

    }
    
function HEX3Aanonymous_3003151373(itemHEX60gensym33_3003151374) {
      var result_3003151375 = [];

      BeforeRet: {
        if (!(contains_3003143495(ctx_3003121848.itemsSymbol, itemHEX60gensym33_3003151374))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3019899092(itemHEX60gensym33_3003151374) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsSymbolValue.forcedCalls = addInt(ctx_3003121848.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym33_3003151547 = HEX5BHEX5D_3003144048(ctx_3003121848.itemsSymbol, itemHEX60gensym33_3003151374);
        var valueHEX60gensym33_3003151548 = computeSymbolValueImpl_3003122501(ctx_3003121848, argHEX60gensym33_3003151547);
        HEX5BHEX5DHEX3D_3003151612(ctx_3003121848.queryCacheSymbolValue, argHEX60gensym33_3003151547, valueHEX60gensym33_3003151548);
        result_3003151375 = nimCopy(null, fingerprint_3087008527(valueHEX60gensym33_3003151548), NTI3019898904);
        break BeforeRet;
      };

      return result_3003151375;

    }
    
function HEX3Aanonymous_3003155676(itemHEX60gensym34_3003155677) {
      var result_3003155678 = [];

      BeforeRet: {
        if (!(contains_3003155755(ctx_3003121848.itemsFunctionExecutionContext, itemHEX60gensym34_3003155677))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3019899092(itemHEX60gensym34_3003155677) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsFunctionExecution.forcedCalls = addInt(ctx_3003121848.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym34_3003157064 = HEX5BHEX5D_3003156308(ctx_3003121848.itemsFunctionExecutionContext, itemHEX60gensym34_3003155677);
        var valueHEX60gensym34_3003157065 = computeFunctionExecutionImpl_3003122504(ctx_3003121848, argHEX60gensym34_3003157064);
        HEX5BHEX5DHEX3D_3003157129(ctx_3003121848.queryCacheFunctionExecution, argHEX60gensym34_3003157064, valueHEX60gensym34_3003157065);
        result_3003155678 = nimCopy(null, [], NTI3003146250);
        break BeforeRet;
      };

      return result_3003155678;

    }
    
function HEX3Aanonymous_3003163655(itemHEX60gensym35_3003163656) {
      var result_3003163657 = [];

      BeforeRet: {
        if (!(contains_3003163734(ctx_3003121848.itemsNodeLayoutInput, itemHEX60gensym35_3003163656))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3019899092(itemHEX60gensym35_3003163656) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_3003121848.statsNodeLayout.forcedCalls = addInt(ctx_3003121848.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym35_3003165043 = HEX5BHEX5D_3003164287(ctx_3003121848.itemsNodeLayoutInput, itemHEX60gensym35_3003163656);
        var valueHEX60gensym35_3003165044 = computeNodeLayoutImpl_3003122507(ctx_3003121848, argHEX60gensym35_3003165043);
        HEX5BHEX5DHEX3D_3003165108(ctx_3003121848.queryCacheNodeLayout, argHEX60gensym35_3003165043, valueHEX60gensym35_3003165044);
        result_3003163657 = nimCopy(null, [], NTI3003150847);
        break BeforeRet;
      };

      return result_3003163657;

    }
    
function HEX3Aanonymous_3003171639(keyHEX60gensym36_3003171640) {
        recoverValue_3003122471(ctx_3003121848, keyHEX60gensym36_3003171640);

      
    }
    
function HEX3Aanonymous_3003173633(keyHEX60gensym37_3003173634) {
        recoverType_3003122474(ctx_3003121848, keyHEX60gensym37_3003173634);

      
    }
    
function HEX3Aanonymous_3003173709(keyHEX60gensym38_3003173710) {
        recoverSymbol_3003122477(ctx_3003121848, keyHEX60gensym38_3003173710);

      
    }
    
function HEX3Aanonymous_3003173785(keyHEX60gensym39_3003173786) {
        recoverSymbols_3003122480(ctx_3003121848, keyHEX60gensym39_3003173786);

      
    }

  var result_3003122511 = null;

  BeforeRet: {
    var ctx_3003121848 = null;
    ctx_3003121848 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0, totalCalls: 0, forcedCalls: 0})});
    ctx_3003121848.depGraph = newDependencyGraph_3019899156();
    ctx_3003121848.dependencyStack = nimCopy(null, [], NTI3003122624);
    ctx_3003121848.updateType = HEX3Aanonymous_3003122519;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateType);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 0, [84,121,112,101]);
    init_3003130434(ctx_3003121848, "queryCacheType", 2000);
    ctx_3003121848.updateValue = HEX3Aanonymous_3003130498;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateValue);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_3003134745(ctx_3003121848, "queryCacheValue", 2000);
    ctx_3003121848.updateSymbol = HEX3Aanonymous_3003134809;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbol);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_3003139048(ctx_3003121848, "queryCacheSymbol", 2000);
    ctx_3003121848.updateSymbols = HEX3Aanonymous_3003139112;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbols);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_3003143352(ctx_3003121848, "queryCacheSymbols", 2000);
    ctx_3003121848.updateSymbolType = HEX3Aanonymous_3003143416;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbolType);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_3003151309(ctx_3003121848, "queryCacheSymbolType", 2000);
    ctx_3003121848.updateSymbolValue = HEX3Aanonymous_3003151373;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_3003155612(ctx_3003121848, "queryCacheSymbolValue", 2000);
    ctx_3003121848.updateFunctionExecution = HEX3Aanonymous_3003155676;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_3003163591(ctx_3003121848, "queryCacheFunctionExecution", 2000);
    ctx_3003121848.updateNodeLayout = HEX3Aanonymous_3003163655;
    ctx_3003121848.updateFunctions.push(ctx_3003121848.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3019899224(ctx_3003121848.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_3003171570(ctx_3003121848, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 1, HEX3Aanonymous_3003171639);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 0, HEX3Aanonymous_3003173633);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 2, HEX3Aanonymous_3003173709);
    HEX5BHEX5DHEX3D_3003171704(ctx_3003121848.recoveryFunctions, 3, HEX3Aanonymous_3003173785);
    init_3003173890(ctx_3003121848, "itemsAstNode", 2000);
    init_3003173988(ctx_3003121848, "itemsNodeLayoutInput", 2000);
    init_3003174086(ctx_3003121848, "itemsSymbol", 2000);
    init_3003174184(ctx_3003121848, "itemsFunctionExecutionContext", 2000);
    ctx_3003121848.globalScope = nimCopy(ctx_3003121848.globalScope, initTable_3003174248(32), NTI3087008712);
    ctx_3003121848.enableQueryLogging = false;
    ctx_3003121848.enableExecutionLogging = false;
    ctx_3003121848.diagnosticsPerNode = nimCopy(ctx_3003121848.diagnosticsPerNode, initTable_3003174259(32), NTI3003121989);
    ctx_3003121848.diagnosticsPerQuery = nimCopy(ctx_3003121848.diagnosticsPerQuery, initTable_3003174279(32), NTI3003122006);
    result_3003122511 = ctx_3003121848;
    break BeforeRet;
  };

  return result_3003122511;

}
var executionOutput_2952790068 = [{lines: [], scroll: 0}];
var ctx_2952790069 = newContext_3003122510();
ctx_2952790069.enableLogging = false;
ctx_2952790069.enableQueryLogging = false;

function newFunctionValue_3087008471(impl_3087008472) {
  var result_3087008473 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3087008473 = nimCopy(result_3087008473, {kind: 4, impl: impl_3087008472, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_3087008473;

}

function createBinaryIntOperator_2952790616(operator_2952790620) {
    
function HEX3Aanonymous_2952790622(values_2952790623) {
        var Temporary1;
        var Temporary2;

      var result_2952790624 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2952790623).length < 2)) {
        result_2952790624 = nimCopy(result_2952790624, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        if ((!((values_2952790623[chckIndx(0, 0, (values_2952790623).length - 1)].kind == 3)) || !((values_2952790623[chckIndx(1, 0, (values_2952790623).length - 1)].kind == 3)))) {
        result_2952790624 = nimCopy(result_2952790624, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = values_2952790623[chckIndx(0, 0, (values_2952790623).length - 1)];
        if (ConstSet160[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        var Temporary2 = values_2952790623[chckIndx(1, 0, (values_2952790623).length - 1)];
        if (ConstSet161[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007750)); }
        result_2952790624 = nimCopy(result_2952790624, {kind: 3, intValue: operator_2952790620(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2952790624;

    }

  var result_2952790621 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790621 = nimCopy(result_2952790621, newFunctionValue_3087008471(HEX3Aanonymous_2952790622), NTI3087007751);
    break BeforeRet;
  };

  return result_2952790621;

}

function createUnityIntOperator_2952790636(operator_2952790639) {
    
function HEX3Aanonymous_2952790641(values_2952790642) {
        var Temporary1;

      var result_2952790643 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2952790642).length < 1)) {
        result_2952790643 = nimCopy(result_2952790643, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        var value_2952790647 = nimCopy(null, values_2952790642[chckIndx(0, 0, (values_2952790642).length - 1)], NTI3087007751);
        if (!((value_2952790647.kind == 3))) {
        result_2952790643 = nimCopy(result_2952790643, errorValue_3087008431(), NTI3087007751);
        break BeforeRet;
        }
        
        var Temporary1 = value_2952790647;
        if (ConstSet162[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
        result_2952790643 = nimCopy(result_2952790643, {kind: 3, intValue: operator_2952790639(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
        break BeforeRet;
      };

      return result_2952790643;

    }

  var result_2952790640 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790640 = nimCopy(result_2952790640, newFunctionValue_3087008471(HEX3Aanonymous_2952790641), NTI3087007751);
    break BeforeRet;
  };

  return result_2952790640;

}

function stringValue_3087008465(value_3087008466) {
  var result_3087008467 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008467 = nimCopy(result_3087008467, {kind: 2, stringValue: nimCopy(null, value_3087008466, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);

  return result_3087008467;

}

function join_2952790791(a_2952790793, sep_2952790794) {
  var result_2952790795 = [];

    result_2952790795 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2952790810 = 0;
      var x_2952790811 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2952792546 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952792546 < (a_2952790793).length)) break Label3;
            i_2952790810 = i_2952792546;
            x_2952790811 = nimCopy(x_2952790811, a_2952790793[chckIndx(i_2952792546, 0, (a_2952790793).length - 1)], NTI3087007751);
            if ((0 < i_2952790810)) {
            result_2952790795.push.apply(result_2952790795, sep_2952790794);;
            }
            
            result_2952790795.push.apply(result_2952790795, HEX24_3087008487(x_2952790811));;
            i_2952792546 = addInt(i_2952792546, 1);
          }
      };
    };

  return result_2952790795;

}

function delete_2952790829(s_2952790831, s_2952790831_Idx, slice_2952790832) {
    if (!((((slice_2952790832.a < (s_2952790831[s_2952790831_Idx]).length) && (0 <= slice_2952790832.a)) && (slice_2952790832.b < (s_2952790831[s_2952790831_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2952790832, NTI805306392), Field1: (s_2952790831[s_2952790831_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2952790832.a <= slice_2952790832.b)) {
    var n_2952790879 = addInt(subInt(slice_2952790832.b, slice_2952790832.a), 1);
    var first_2952790880 = slice_2952790832.a;
    s_2952790831[s_2952790831_Idx].splice(first_2952790880, n_2952790879);
    }
    

  
}

function color_2449473918(c_2449473919) {
  var result_2449473920 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473920 = nimCopy(result_2449473920, c_2449473919, NTI2365587459);

  return result_2449473920;

}

function addOutput_2952790812(self_2952790814, line_2952790815, color_2952790816) {
    if ((1500 <= (self_2952790814.lines).length)) {
    delete_2952790829(self_2952790814, "lines", HEX2EHEX2E_805306418(0, subInt((self_2952790814.lines).length, 1000)));
    }
    
    if ((0 < self_2952790814.scroll)) {
    self_2952790814.scroll = addInt(self_2952790814.scroll, 1);
    }
    
    self_2952790814.lines.push({Field0: nimCopy(null, line_2952790815, NTI33554449), Field1: color_2449473918(color_2952790816)});;

  
}

function typeType_3087008175() {
  var result_3087008176 = null;

    result_3087008176 = {kind: 6, open: false, returnType: null, paramTypes: []};

  return result_3087008176;

}

function typeValue_3087008468(typ_3087008469) {
  var result_3087008470 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3087008470 = nimCopy(result_3087008470, {kind: 6, typ: typ_3087008469, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3087007751);

  return result_3087008470;

}

function HEX3Aanonymous_2952790697(a_2952790698, b_2952790699) {
  var result_2952790700 = 0;

    result_2952790700 = addInt(a_2952790698, b_2952790699);

  return result_2952790700;

}

function HEX3Aanonymous_2952790702(a_2952790703, b_2952790704) {
  var result_2952790705 = 0;

    result_2952790705 = subInt(a_2952790703, b_2952790704);

  return result_2952790705;

}

function HEX3Aanonymous_2952790707(a_2952790708, b_2952790709) {
  var result_2952790710 = 0;

    result_2952790710 = mulInt(a_2952790708, b_2952790709);

  return result_2952790710;

}

function HEX3Aanonymous_2952790712(a_2952790713, b_2952790714) {
  var result_2952790715 = 0;

    result_2952790715 = divInt(a_2952790713, b_2952790714);

  return result_2952790715;

}

function HEX3Aanonymous_2952790717(a_2952790718, b_2952790719) {
  var result_2952790720 = 0;

    result_2952790720 = modInt(a_2952790718, b_2952790719);

  return result_2952790720;

}

function HEX3Aanonymous_2952790722(a_2952790723) {
  var result_2952790724 = 0;

    result_2952790724 = negInt(a_2952790723);

  return result_2952790724;

}

function HEX3Aanonymous_2952790726(a_2952790727) {
    var Temporary1;

  var result_2952790728 = 0;

    if (!((a_2952790727 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2952790728 = Temporary1;

  return result_2952790728;

}

function HEX3Aanonymous_2952790730(a_2952790731, b_2952790732) {
    var Temporary1;

  var result_2952790733 = 0;

    if ((a_2952790731 < b_2952790732)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790733 = Temporary1;

  return result_2952790733;

}

function HEX3Aanonymous_2952790735(a_2952790736, b_2952790737) {
    var Temporary1;

  var result_2952790738 = 0;

    if ((a_2952790736 <= b_2952790737)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790738 = Temporary1;

  return result_2952790738;

}

function HEX3Aanonymous_2952790740(a_2952790741, b_2952790742) {
    var Temporary1;

  var result_2952790743 = 0;

    if ((b_2952790742 < a_2952790741)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790743 = Temporary1;

  return result_2952790743;

}

function HEX3Aanonymous_2952790745(a_2952790746, b_2952790747) {
    var Temporary1;

  var result_2952790748 = 0;

    if ((b_2952790747 <= a_2952790746)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790748 = Temporary1;

  return result_2952790748;

}

function HEX3Aanonymous_2952790750(a_2952790751, b_2952790752) {
    var Temporary1;

  var result_2952790753 = 0;

    if ((a_2952790751 == b_2952790752)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790753 = Temporary1;

  return result_2952790753;

}

function HEX3Aanonymous_2952790755(a_2952790756, b_2952790757) {
    var Temporary1;

  var result_2952790758 = 0;

    if (!((a_2952790756 == b_2952790757))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790758 = Temporary1;

  return result_2952790758;

}

function HEX3Aanonymous_2952790760(a_2952790761, b_2952790762) {
    var Temporary1;

  var result_2952790763 = 0;

    if ((!((a_2952790761 == 0)) && !((b_2952790762 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790763 = Temporary1;

  return result_2952790763;

}

function HEX3Aanonymous_2952790765(a_2952790766, b_2952790767) {
    var Temporary1;

  var result_2952790768 = 0;

    if ((!((a_2952790766 == 0)) || !((b_2952790767 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2952790768 = Temporary1;

  return result_2952790768;

}

function HEX3Aanonymous_2952790770(a_2952790771, b_2952790772) {
    var Temporary1;

  var result_2952790773 = 0;

    if ((a_2952790771 < b_2952790772)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2952790772 < a_2952790771)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2952790773 = Temporary1;

  return result_2952790773;

}

function HEX3Aanonymous_2952790775(values_2952790776) {
    var Temporary1;

  var result_2952790777 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2952790776).length < 2)) {
    result_2952790777 = nimCopy(result_2952790777, errorValue_3087008431(), NTI3087007751);
    break BeforeRet;
    }
    
    var leftValue_2952790781 = nimCopy(null, values_2952790776[chckIndx(0, 0, (values_2952790776).length - 1)], NTI3087007751);
    var rightValue_2952790782 = nimCopy(null, values_2952790776[chckIndx(1, 0, (values_2952790776).length - 1)], NTI3087007751);
    if (!((leftValue_2952790781.kind == 2))) {
    result_2952790777 = nimCopy(result_2952790777, errorValue_3087008431(), NTI3087007751);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2952790781;
    if (ConstSet163[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007750)); }
    result_2952790777 = nimCopy(result_2952790777, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3087008487(rightValue_2952790782) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3087007751);
    break BeforeRet;
  };

  return result_2952790777;

}

function HEX3Aanonymous_2952790788(values_2952790789) {
  var result_2952790790 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2952790790 = nimCopy(result_2952790790, stringValue_3087008465(join_2952790791(values_2952790789, [])), NTI3087007751);
    addOutput_2952790812(executionOutput_2952790068[0], HEX24_3087008487(result_2952790790), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3087008487(result_2952790790)]);
    result_2952790790 = nimCopy(result_2952790790, voidValue_3087008460(), NTI3087007751);
    break BeforeRet;
  };

  return result_2952790790;

}

function HEX3Aanonymous_2952790899(values_2952790902) {
  var result_2952790905 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2952790905 = nimCopy(result_2952790905, stringValue_3087008465(join_2952790791(values_2952790902, [])), NTI3087007751);

  return result_2952790905;

}
var typeAddIntInt_2952790656 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeSubIntInt_2952790661 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeMulIntInt_2952790666 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeDivIntInt_2952790671 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeModIntInt_2952790676 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var typeAddStringInt_2952790681 = newFunctionType_3087008162([stringType_3087008160(), intType_3087008158()], stringType_3087008160());
var typeNegInt_2952790686 = newFunctionType_3087008162([intType_3087008158()], intType_3087008158());
var typeNotInt_2952790691 = newFunctionType_3087008162([intType_3087008158()], intType_3087008158());
var typeFnIntIntInt_2952790696 = newFunctionType_3087008162([intType_3087008158(), intType_3087008158()], intType_3087008158());
var funcAddIntInt_2952790701 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790697);
var funcSubIntInt_2952790706 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790702);
var funcMulIntInt_2952790711 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790707);
var funcDivIntInt_2952790716 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790712);
var funcModIntInt_2952790721 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790717);
var funcNegInt_2952790725 = createUnityIntOperator_2952790636(HEX3Aanonymous_2952790722);
var funcNotInt_2952790729 = createUnityIntOperator_2952790636(HEX3Aanonymous_2952790726);
var funcLessIntInt_2952790734 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790730);
var funcLessEqualIntInt_2952790739 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790735);
var funcGreaterIntInt_2952790744 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790740);
var funcGreaterEqualIntInt_2952790749 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790745);
var funcEqualIntInt_2952790754 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790750);
var funcNotEqualIntInt_2952790759 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790755);
var funcAndIntInt_2952790764 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790760);
var funcOrIntInt_2952790769 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790765);
var funcOrderIntInt_2952790774 = createBinaryIntOperator_2952790616(HEX3Aanonymous_2952790770);
var funcAddStringInt_2952790787 = newFunctionValue_3087008471(HEX3Aanonymous_2952790775);
var funcPrintAny_2952790898 = newFunctionValue_3087008471(HEX3Aanonymous_2952790788);
var funcBuildStringAny_2952790910 = newFunctionValue_3087008471(HEX3Aanonymous_2952790899);
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdAdd_2969567235, {id: nimCopy(null, IdAdd_2969567235, NTI2181038083), name: [43], kind: 1, typ: typeAddIntInt_2952790656, value: nimCopy(null, funcAddIntInt_2952790701, NTI3087007751), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdSub_2969567236, {id: nimCopy(null, IdSub_2969567236, NTI2181038083), name: [45], kind: 1, typ: typeSubIntInt_2952790661, value: nimCopy(null, funcSubIntInt_2952790706, NTI3087007751), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdMul_2969567237, {id: nimCopy(null, IdMul_2969567237, NTI2181038083), name: [42], kind: 1, typ: typeMulIntInt_2952790666, value: nimCopy(null, funcMulIntInt_2952790711, NTI3087007751), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdDiv_2969567238, {id: nimCopy(null, IdDiv_2969567238, NTI2181038083), name: [47], kind: 1, typ: typeDivIntInt_2952790671, value: nimCopy(null, funcDivIntInt_2952790716, NTI3087007751), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdMod_2969567239, {id: nimCopy(null, IdMod_2969567239, NTI2181038083), name: [37], kind: 1, typ: typeModIntInt_2952790676, value: nimCopy(null, funcModIntInt_2952790721, NTI3087007751), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdNegate_2969567240, {id: nimCopy(null, IdNegate_2969567240, NTI2181038083), name: [45], kind: 1, typ: typeNegInt_2952790686, value: nimCopy(null, funcNegInt_2952790725, NTI3087007751), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdNot_2969567241, {id: nimCopy(null, IdNot_2969567241, NTI2181038083), name: [33], kind: 1, typ: typeNotInt_2952790691, value: nimCopy(null, funcNotInt_2952790729, NTI3087007751), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdAppendString_2969567243, {id: nimCopy(null, IdAppendString_2969567243, NTI2181038083), name: [38], kind: 1, typ: typeAddStringInt_2952790681, value: nimCopy(null, funcAddStringInt_2952790787, NTI3087007751), operatorNotation: 3, precedence: 0, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdLess_2969567247, {id: nimCopy(null, IdLess_2969567247, NTI2181038083), name: [60], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcLessIntInt_2952790734, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdLessEqual_2969567248, {id: nimCopy(null, IdLessEqual_2969567248, NTI2181038083), name: [60,61], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcLessEqualIntInt_2952790739, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdGreater_2969567249, {id: nimCopy(null, IdGreater_2969567249, NTI2181038083), name: [62], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcGreaterIntInt_2952790744, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdGreaterEqual_2969567250, {id: nimCopy(null, IdGreaterEqual_2969567250, NTI2181038083), name: [62,61], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcGreaterEqualIntInt_2952790749, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdEqual_2969567251, {id: nimCopy(null, IdEqual_2969567251, NTI2181038083), name: [61,61], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcEqualIntInt_2952790754, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdNotEqual_2969567252, {id: nimCopy(null, IdNotEqual_2969567252, NTI2181038083), name: [33,61], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcNotEqualIntInt_2952790759, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdAnd_2969567253, {id: nimCopy(null, IdAnd_2969567253, NTI2181038083), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcAndIntInt_2952790764, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdOr_2969567254, {id: nimCopy(null, IdOr_2969567254, NTI2181038083), name: [111,114], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcOrIntInt_2952790769, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdOrder_2969567255, {id: nimCopy(null, IdOrder_2969567255, NTI2181038083), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2952790696, value: nimCopy(null, funcOrderIntInt_2952790774, NTI3087007751), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdInt_2969567244, {id: nimCopy(null, IdInt_2969567244, NTI2181038083), name: [105,110,116], kind: 1, typ: typeType_3087008175(), value: typeValue_3087008468(intType_3087008158()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdString_2969567245, {id: nimCopy(null, IdString_2969567245, NTI2181038083), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3087008175(), value: typeValue_3087008468(stringType_3087008160()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdVoid_2969567246, {id: nimCopy(null, IdVoid_2969567246, NTI2181038083), name: [118,111,105,100], kind: 1, typ: typeType_3087008175(), value: typeValue_3087008468(voidType_3087008156()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdPrint_2969567234, {id: nimCopy(null, IdPrint_2969567234, NTI2181038083), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3087008162([anyType_3087008177(true)], voidType_3087008156()), value: nimCopy(null, funcPrintAny_2952790898, NTI3087007751), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_3003219527(ctx_2952790069.globalScope, IdBuildString_2969567256, {id: nimCopy(null, IdBuildString_2969567256, NTI2181038083), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3087008162([anyType_3087008177(true)], stringType_3087008160()), value: nimCopy(null, funcBuildStringAny_2952790910, NTI3087007751), node: null, operatorNotation: 0, precedence: 0});
Label160: {
  var symbol_2952792451 = [null];
  var L_2952792538 = len_3003233372(ctx_2952790069.globalScope);
  Label161: {
    var h_2952792540 = 0;
    var colontmp__2952792541 = 0;
    colontmp__2952792541 = (ctx_2952790069.globalScope.data).length - 1;
    var res_2952792542 = 0;
    Label162: {
        Label163: while (true) {
        if (!(res_2952792542 <= colontmp__2952792541)) break Label163;
          h_2952792540 = res_2952792542;
          if (isFilled_1308622880(ctx_2952790069.globalScope.data[chckIndx(h_2952792540, 0, (ctx_2952790069.globalScope.data).length - 1)].Field0)) {
          symbol_2952792451[0] = ctx_2952790069.globalScope.data[chckIndx(h_2952792540, 0, (ctx_2952790069.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_3003191823(ctx_2952790069, symbol_2952792451[0]);
          if (!((len_3003233372(ctx_2952790069.globalScope) == L_2952792538))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2952792542 = addInt(res_2952792542, 1);
        }
    };
  };
};

function isEditing_2952797462(self_2952797463) {
  var result_2952797464 = false;

    result_2952797464 = !((self_2952797463.textEditor == null));

  return result_2952797464;

}

function node_2952792695(editor_2952792696) {
  var result_2952792697 = null;

  BeforeRet: {
    result_2952792697 = editor_2952792696.selectedNode;
    break BeforeRet;
  };

  return result_2952792697;

}

function newSeq_2952793861(len_2952793863) {
  var result_2952793864 = [];

    result_2952793864 = new Array(len_2952793863); for (var i = 0 ; i < len_2952793863 ; ++i) { result_2952793864[i] = null; }
  return result_2952793864;

}

function expandIfNeeded_2952793851(deq_2952793853) {
              var Temporary5;
    var Temporary6;

    if ((deq_2952793853.mask == 0)) {
    var correctSizeHEX60gensym42_2952793855 = nextPowerOfTwo_872415437(4);
    deq_2952793853.mask = subInt(correctSizeHEX60gensym42_2952793855, 1);
    deq_2952793853.data = new Array(chckRange(correctSizeHEX60gensym42_2952793855, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2952793855, 0, 2147483647) ; ++i) { deq_2952793853.data[i] = null; }    }
    
    var cap_2952793860 = addInt(deq_2952793853.mask, 1);
    if ((cap_2952793860 <= deq_2952793853.count)) {
    var n_2952793869 = newSeq_2952793861(chckRange(mulInt(cap_2952793860, 2), 0, 2147483647));
    var i_2952793870 = 0;
    Label1: {
      var x_2952793880 = null;
      var x_2952793880_Idx = 0;
      var i_2952801257 = deq_2952793853.head;
      Label2: {
        var c_2952801259 = 0;
        var i_2952801260 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2952801260 < deq_2952793853.count)) break Label4;
              c_2952801259 = i_2952801260;
              x_2952793880 = deq_2952793853.data; x_2952793880_Idx = chckIndx(i_2952801257, 0, (deq_2952793853.data).length - 1);
              Temporary5 = x_2952793880[x_2952793880_Idx];
              x_2952793880[x_2952793880_Idx] = genericReset(x_2952793880[x_2952793880_Idx], NTI2986344452);
              n_2952793869[chckIndx(i_2952793870, 0, (n_2952793869).length - 1)] = Temporary5;
              i_2952793870 = addInt(i_2952793870, 1);
              i_2952801257 = (addInt(i_2952801257, 1) & deq_2952793853.mask);
              i_2952801260 = addInt(i_2952801260, 1);
            }
        };
      };
    };
    Temporary6 = n_2952793869;
    n_2952793869 = genericReset(n_2952793869, NTI2952792127);
    deq_2952793853.data = nimCopy(null, Temporary6, NTI2952792127);
    deq_2952793853.mask = subInt(mulInt(cap_2952793860, 2), 1);
    deq_2952793853.tail = deq_2952793853.count;
    deq_2952793853.head = 0;
    }
    

  
}

function addLast_2952793842(deq_2952793844, item_2952793845) {
    expandIfNeeded_2952793851(deq_2952793844);
    deq_2952793844.count = addInt(deq_2952793844.count, 1);
    deq_2952793844.data[chckIndx(deq_2952793844.tail, 0, (deq_2952793844.data).length - 1)] = item_2952793845;
    deq_2952793844.tail = (addInt(deq_2952793844.tail, 1) & deq_2952793844.mask);

  
}

function len_2952793983(deq_2952793985) {
  var result_2952793986 = 0;

    result_2952793986 = deq_2952793985.count;

  return result_2952793986;

}

function popFirst_2952793992(deq_2952793994) {
    var Temporary1;

  var result_2952793995 = null;

    if ((deq_2952793994.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2952793994.count = subInt(deq_2952793994.count, 1);
    Temporary1 = deq_2952793994.data[chckIndx(deq_2952793994.head, 0, (deq_2952793994.data).length - 1)];
    deq_2952793994.data[chckIndx(deq_2952793994.head, 0, (deq_2952793994.data).length - 1)] = genericReset(deq_2952793994.data[chckIndx(deq_2952793994.head, 0, (deq_2952793994.data).length - 1)], NTI2986344452);
    result_2952793995 = Temporary1;
    deq_2952793994.head = (addInt(deq_2952793994.head, 1) & deq_2952793994.mask);

  return result_2952793995;

}

function hasKey_2952792778(t_2952792781, key_2952792782) {
  var result_2952792783 = false;

    var hc_2952792784 = [0];
    result_2952792783 = (0 <= rawGet_3120562785(t_2952792781, key_2952792782, hc_2952792784, 0));

  return result_2952792783;

}

function contains_2952792772(t_2952792775, key_2952792776) {
  var result_2952792777 = false;

  BeforeRet: {
    result_2952792777 = hasKey_2952792778(t_2952792775, key_2952792776);
    break BeforeRet;
  };

  return result_2952792777;

}

function HEX5BHEX5D_2952792868(t_2952792871, key_2952792872) {
  var result_2952792873 = null;

    var hcHEX60gensym22_2952792874 = [0];
    var indexHEX60gensym22_2952792881 = rawGet_3120562785(t_2952792871, key_2952792872, hcHEX60gensym22_2952792874, 0);
    if ((0 <= indexHEX60gensym22_2952792881)) {
    result_2952792873 = t_2952792871.data[chckIndx(indexHEX60gensym22_2952792881, 0, (t_2952792871.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_2952792872);
    }
    

  return result_2952792873;

}

function xyHEX3D_2080374819(rect_2080374820, v_2080374821) {
    rect_2080374820.x = v_2080374821.x;
    rect_2080374820.y = v_2080374821.y;

  
}

function HEX2B_2080375539(aHEX60gensym72_2080375541, bHEX60gensym72_2080375542) {
  var result_2080375543 = ({x: 0.0, y: 0.0});

    result_2080375543 = nimCopy(result_2080375543, {x: (aHEX60gensym72_2080375541.x + bHEX60gensym72_2080375542.x), y: (aHEX60gensym72_2080375541.y + bHEX60gensym72_2080375542.y)}, NTI2097152288);

  return result_2080375543;

}

function wh_2080374822(rect_2080374823) {
  var result_2080374824 = ({x: 0.0, y: 0.0});

    result_2080374824 = nimCopy(result_2080374824, vec2_2097152861(rect_2080374823.w, rect_2080374823.h), NTI2097152288);

  return result_2080374824;

}

function absoluteBounds_3087009534(node_3087009535) {
  var result_3087009536 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3087009535.parent == null)) {
    result_3087009536 = nimCopy(result_3087009536, node_3087009535.bounds, NTI2080374789);
    }
    else {
      result_3087009536 = nimCopy(result_3087009536, rect_2080374808(HEX2B_2080375539(xy_2080374816(absoluteBounds_3087009534(node_3087009535.parent)), xy_2080374816(node_3087009535.bounds)), wh_2080374822(node_3087009535.bounds)), NTI2080374789);
    }
    

  return result_3087009536;

}

function absoluteBounds_3087009572(nodeRange_3087009573) {
  var result_3087009574 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3087009574[0] = nimCopy(result_3087009574[0], nodeRange_3087009573.parent.children[chckIndx(nodeRange_3087009573.first, 0, (nodeRange_3087009573.parent.children).length - 1)].bounds, NTI2080374789);
    Label1: {
      var i_3087009579 = 0;
      var colontmp__2952801275 = 0;
      colontmp__2952801275 = addInt(nodeRange_3087009573.first, 1);
      var i_2952801276 = colontmp__2952801275;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801276 < nodeRange_3087009573.last)) break Label3;
            i_3087009579 = i_2952801276;
            result_3087009574[0] = nimCopy(result_3087009574[0], or_2080374864(result_3087009574[0], nodeRange_3087009573.parent.children[chckIndx(i_3087009579, 0, (nodeRange_3087009573.parent.children).length - 1)].bounds), NTI2080374789);
            i_2952801276 = addInt(i_2952801276, 1);
          }
      };
    };
    xyHEX3D_2080374819(result_3087009574[0], HEX2B_2080375539(xy_2080374816(result_3087009574[0]), xy_2080374816(absoluteBounds_3087009534(nodeRange_3087009573.parent))));

  return result_3087009574[0];

}

function and_2080374868(a_2080374869, b_2080374870) {
  var result_2080374871 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374871.x = max_33555642(a_2080374869.x, b_2080374870.x);
    result_2080374871.y = max_33555642(a_2080374869.y, b_2080374870.y);
    result_2080374871.w = (min_33555609((a_2080374869.x + a_2080374869.w), (b_2080374870.x + b_2080374870.w)) - result_2080374871.x);
    result_2080374871.h = (min_33555609((a_2080374869.y + a_2080374869.h), (b_2080374870.y + b_2080374870.h)) - result_2080374871.y);

  return result_2080374871;

}

function intersects_2063597745(a_2063597746, b_2063597747) {
  var result_2063597748 = false;

  BeforeRet: {
    var intersection_2063597749 = and_2080374868(a_2063597746, b_2063597747);
    result_2063597748 = ((0.0 < intersection_2063597749.w) && (0.0 < intersection_2063597749.h));
    break BeforeRet;
  };

  return result_2063597748;

}

function subbase_2986344549(node_2986344550) {
  var result_2986344551 = null;

  BeforeRet: {
    if ((node_2986344550.parent.parent == null)) {
    result_2986344551 = node_2986344550;
    break BeforeRet;
    }
    
    result_2986344551 = subbase_2986344549(node_2986344550.parent);
    break BeforeRet;
  };

  return result_2986344551;

}

function getItem_3003181830(selfHEX60gensym78_3003181831) {
  var result_3003181832 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym78_3003181831.id, null_2181038340)) {
    selfHEX60gensym78_3003181831.id = nimCopy(selfHEX60gensym78_3003181831.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym78_3003181831.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,56,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2952801287 = nimCopy(null, selfHEX60gensym78_3003181831.id, NTI2181038083);
    var colontmp__2952801288 = 1;
    result_3003181832 = nimCopy(result_3003181832, {Field0: nimCopy(null, colontmp__2952801287, NTI2181038083), Field1: colontmp__2952801288}, NTI3019898905);
    break BeforeRet;
  };

  return result_3003181832;

}

function getOrDefault_3003182081(t_3003182084, key_3003182085, default_3003182086) {
    var Temporary1;

  var result_3003182087 = null;

    var hcHEX60gensym409_3003182090 = [0];
    var indexHEX60gensym409_3003182097 = rawGet_3003163841(t_3003182084, key_3003182085, hcHEX60gensym409_3003182090, 0);
    if ((0 <= indexHEX60gensym409_3003182097)) {
    Temporary1 = t_3003182084.data[chckIndx(indexHEX60gensym409_3003182097, 0, (t_3003182084.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003182086;
    }
    
    result_3003182087 = Temporary1;

  return result_3003182087;

}

function newDoublyLinkedNode_3003182213(value_3003182215) {
  var result_3003182216 = null;

    result_3003182216 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003182216.value = nimCopy(result_3003182216.value, value_3003182215, NTI3003121799);

  return result_3003182216;

}

function mustRehash_3003182554(t_3003182556) {
  var result_3003182557 = false;

    if (!((t_3003182556.counter < (t_3003182556.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003182557 = ((mulInt((t_3003182556.data).length, 2) < mulInt(t_3003182556.counter, 3)) || (subInt((t_3003182556.data).length, t_3003182556.counter) < 4));

  return result_3003182557;

}

function rawInsert_3003183247(t_3003183251, data_3003183252, data_3003183252_Idx, key_3003183253, val_3003183254, hc_3003183255, h_3003183256) {
    data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field1 = nimCopy(data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field1, key_3003183253, NTI3019898905);
    data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field2 = val_3003183254;
    data_3003183252[data_3003183252_Idx][chckIndx(h_3003183256, 0, (data_3003183252[data_3003183252_Idx]).length - 1)].Field0 = hc_3003183255;

  
}

function enlarge_3003182811(t_3003182814) {
    var n_3003182817 = [];
    n_3003182817 = new Array(chckRange(mulInt((t_3003182814.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003182814.data).length, 2), 0, 2147483647) ; ++i) { n_3003182817[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003182814.data; t_3003182814.data = n_3003182817; n_3003182817 = Temporary1;    Label2: {
      var i_3003182915 = 0;
      var colontmp__2952801291 = 0;
      colontmp__2952801291 = (n_3003182817).length - 1;
      var res_2952801292 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952801292 <= colontmp__2952801291)) break Label4;
            i_3003182915 = res_2952801292;
            var eh_3003182996 = n_3003182817[chckIndx(i_3003182915, 0, (n_3003182817).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003182996)) {
            var j_3003183000 = (eh_3003182996 & (t_3003182814.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003182814.data[chckIndx(j_3003183000, 0, (t_3003182814.data).length - 1)].Field0)) break Label6;
                  j_3003183000 = nextTry_1308622883(j_3003183000, (t_3003182814.data).length - 1);
                }
            };
            rawInsert_3003183247(t_3003182814, t_3003182814, "data", n_3003182817[chckIndx(i_3003182915, 0, (n_3003182817).length - 1)].Field1, n_3003182817[chckIndx(i_3003182915, 0, (n_3003182817).length - 1)].Field2, eh_3003182996, j_3003183000);
            }
            
            res_2952801292 = addInt(res_2952801292, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003183497(t_3003183500, key_3003183501, hc_3003183502) {
  var result_3003183503 = 0;

  BeforeRet: {
    if (((t_3003183500.data).length == 0)) {
    result_3003183503 = -1;
    break BeforeRet;
    }
    
    var h_3003183588 = (hc_3003183502 & (t_3003183500.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003183500.data[chckIndx(h_3003183588, 0, (t_3003183500.data).length - 1)].Field0)) break Label2;
          if (((t_3003183500.data[chckIndx(h_3003183588, 0, (t_3003183500.data).length - 1)].Field0 == hc_3003183502) && HEX3DHEX3D_3003123049(t_3003183500.data[chckIndx(h_3003183588, 0, (t_3003183500.data).length - 1)].Field1, key_3003183501))) {
          result_3003183503 = h_3003183588;
          break BeforeRet;
          }
          
          h_3003183588 = nextTry_1308622883(h_3003183588, (t_3003183500.data).length - 1);
        }
    };
    result_3003183503 = subInt(-1, h_3003183588);
  };

  return result_3003183503;

}

function HEX5BHEX5DHEX3D_3003182286(t_3003182289, key_3003182290, val_3003182291) {
    if (((t_3003182289.data).length == 0)) {
    var correctSizeHEX60gensym412_3003182374 = slotsNeeded_1308622891(32);
    t_3003182289.counter = 0;
    t_3003182289.data = new Array(chckRange(correctSizeHEX60gensym412_3003182374, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym412_3003182374, 0, 2147483647) ; ++i) { t_3003182289.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003182379 = [0];
    var index_3003182386 = rawGet_3003163841(t_3003182289, key_3003182290, hc_3003182379, 0);
    if ((0 <= index_3003182386)) {
    t_3003182289.data[chckIndx(index_3003182386, 0, (t_3003182289.data).length - 1)].Field2 = val_3003182291;
    }
    else {
      if (((t_3003182289.data).length == 0)) {
      var correctSizeHEX60gensym415_3003182549 = slotsNeeded_1308622891(32);
      t_3003182289.counter = 0;
      t_3003182289.data = new Array(chckRange(correctSizeHEX60gensym415_3003182549, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym415_3003182549, 0, 2147483647) ; ++i) { t_3003182289.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003182554(t_3003182289)) {
      enlarge_3003182811(t_3003182289);
      index_3003182386 = rawGetKnownHC_3003183497(t_3003182289, key_3003182290, hc_3003182379[0]);
      }
      
      index_3003182386 = subInt(-1, index_3003182386);
      rawInsert_3003183247(t_3003182289, t_3003182289, "data", key_3003182290, val_3003182291, hc_3003182379[0], index_3003182386);
      t_3003182289.counter = addInt(t_3003182289.counter, 1);
    }
    

  
}

function len_3003184108(t_3003184111) {
  var result_3003184112 = 0;

    result_3003184112 = t_3003184111.counter;

  return result_3003184112;

}

function len_3003184025(cache_3003184028) {
  var result_3003184029 = 0;

    result_3003184029 = len_3003184108(cache_3003184028.table);

  return result_3003184029;

}

function del_3003184200(t_3003184203, key_3003184204) {
    var hc_3003184205 = [0];
    var i_3003184212 = rawGet_3003163841(t_3003184203, key_3003184204, hc_3003184205, 0);
    var mskHEX60gensym36_3003184216 = (t_3003184203.data).length - 1;
    if ((0 <= i_3003184212)) {
    t_3003184203.counter = subInt(t_3003184203.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003184223 = i_3003184212;
            var rHEX60gensym36_3003184224 = jHEX60gensym36_3003184223;
            t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field0 = 0;
            t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field1 = nimCopy(t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003184212 = (addInt(i_3003184212, 1) & mskHEX60gensym36_3003184216);
                  if (isEmpty_1308622877(t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003184224 = (t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)].Field0 & mskHEX60gensym36_3003184216);
                  if (!(((((rHEX60gensym36_3003184224 <= i_3003184212) && (jHEX60gensym36_3003184223 < rHEX60gensym36_3003184224)) || ((jHEX60gensym36_3003184223 < rHEX60gensym36_3003184224) && (i_3003184212 < jHEX60gensym36_3003184223))) || ((i_3003184212 < jHEX60gensym36_3003184223) && (rHEX60gensym36_3003184224 <= i_3003184212))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003184203.data[chckIndx(jHEX60gensym36_3003184223, 0, (t_3003184203.data).length - 1)] = nimCopy(t_3003184203.data[chckIndx(jHEX60gensym36_3003184223, 0, (t_3003184203.data).length - 1)], t_3003184203.data[chckIndx(i_3003184212, 0, (t_3003184203.data).length - 1)], NTI3003121835);
          }
      };
    };
    }
    

  
}

function resize_3003183943(cache_3003183946) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003183946.capacity < len_3003184025(cache_3003183946))) break Label2;
          var t_3003184113 = cache_3003183946.list.tail;
          if (cache_3003183946.recordRemovedKeys) {
          incl_3003179214(cache_3003183946.removedKeys, t_3003184113.value.key);
          }
          
          del_3003184200(cache_3003183946.table, t_3003184113.value.key);
          remove_3003164493(cache_3003183946.list, t_3003184113);
        }
    };

  
}

function addNewNode_3003182205(cache_3003182208, key_3003182209, val_3003182210) {
    var node_3003182222 = newDoublyLinkedNode_3003182213({key: nimCopy(null, key_3003182209, NTI3019898905), val: val_3003182210});
    HEX5BHEX5DHEX3D_3003182286(cache_3003182208.table, key_3003182209, node_3003182222);
    prepend_3003164821(cache_3003182208.list, node_3003182222);
    if (cache_3003182208.recordRemovedKeys) {
    excl_3003178043(cache_3003182208.removedKeys, key_3003182209);
    }
    
    resize_3003183943(cache_3003182208);

  
}

function HEX5BHEX5DHEX3D_3003181986(cache_3003181989, key_3003181990, val_3003181991) {
    var node_3003182178 = getOrDefault_3003182081(cache_3003181989.table, key_3003181990, null);
    if ((node_3003182178 == null)) {
    addNewNode_3003182205(cache_3003181989, key_3003181990, val_3003181991);
    }
    else {
      node_3003182178.value.val = val_3003181991;
      remove_3003164493(cache_3003181989.list, node_3003182178);
      prepend_3003164821(cache_3003181989.list, node_3003182178);
    }
    

  
}

function getOrCreateNodeLayoutInput_3003181839(ctxHEX60gensym79_3003181840, dataHEX60gensym79_3003181841) {
  var result_3003181842 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym79_3003181851 = null;
      Label2: {
        var node_2952801284 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952801285 = ctxHEX60gensym79_3003181840.itemsNodeLayoutInput.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2952801285 == null))) break Label4;
              node_2952801284 = nimCopy(node_2952801284, it_2952801285.value, NTI3003121799);
              existingHEX60gensym79_3003181851 = node_2952801284.val;
              if (((hash_3087009990(existingHEX60gensym79_3003181851) == hash_3087009990(dataHEX60gensym79_3003181841)) && HEX3DHEX3D_3087009993(existingHEX60gensym79_3003181851, dataHEX60gensym79_3003181841))) {
              result_3003181842 = existingHEX60gensym79_3003181851;
              break BeforeRet;
              }
              
              it_2952801285 = it_2952801285.next;
            }
        };
      };
    };
    var itemHEX60gensym79_3003181852 = getItem_3003181830(dataHEX60gensym79_3003181841);
    var keyHEX60gensym79_3003181853 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym79_3003181852, NTI3019898905), Field1: -1}, NTI3019898908);
    HEX5BHEX5DHEX3D_3019910340(ctxHEX60gensym79_3003181840.depGraph.changed, keyHEX60gensym79_3003181853, ctxHEX60gensym79_3003181840.depGraph.revision);
    HEX5BHEX5DHEX3D_3003181986(ctxHEX60gensym79_3003181840.itemsNodeLayoutInput, itemHEX60gensym79_3003181852, dataHEX60gensym79_3003181841);
    result_3003181842 = dataHEX60gensym79_3003181841;
    break BeforeRet;
  };

  return result_3003181842;

}

function hasKey_3003215839(t_3003215842, key_3003215843) {
  var result_3003215844 = false;

    var hc_3003215845 = [0];
    result_3003215844 = (0 <= rawGet_3003165213(t_3003215842, key_3003215843, hc_3003215845, 0));

  return result_3003215844;

}

function contains_3003215833(t_3003215836, key_3003215837) {
  var result_3003215838 = false;

  BeforeRet: {
    result_3003215838 = hasKey_3003215839(t_3003215836, key_3003215837);
    break BeforeRet;
  };

  return result_3003215838;

}

function contains_3003215739(cache_3003215742, key_3003215743) {
  var result_3003215744 = false;

    result_3003215744 = contains_3003215833(cache_3003215742.table, key_3003215743);

  return result_3003215744;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2097152934(result_2097152936, result_2097152936_Idx, x_2097152937) {
    add_33556386(result_2097152936, result_2097152936_Idx, nimFloatToString_385876087(x_2097152937));

  
}

function HEX24_2097152930(x_2097152932) {
  var result_2097152933 = [[]];

    addFloat_2097152934(result_2097152933, 0, x_2097152932);

  return result_2097152933[0];

}

function HEX24_2080374849(a_2080374850) {
  var result_2080374851 = [];

    result_2080374851 = nimCopy(null, ([40] || []).concat(HEX24_2097152930(a_2080374850.x) || [],[44,32] || [],HEX24_2097152930(a_2080374850.y) || [],[58,32] || [],HEX24_2097152930(a_2080374850.w) || [],[32,120,32] || [],HEX24_2097152930(a_2080374850.h) || [],[41] || []), NTI33554449);

  return result_2080374851;

}

function collectionToString_3087009622(x_3087009624, prefix_3087009625, separator_3087009626, suffix_3087009627) {
  var result_3087009628 = [[]];

    result_3087009628[0] = nimCopy(null, prefix_3087009625, NTI33554449);
    var firstElement_3087009629 = true;
    Label1: {
      var value_3087009633 = [];
      var i_2952801303 = 0;
      var L_2952801304 = (x_3087009624).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801303 < L_2952801304)) break Label3;
            value_3087009633 = x_3087009624[i_2952801303];
            if (firstElement_3087009629) {
            firstElement_3087009629 = false;
            }
            else {
            result_3087009628[0].push.apply(result_3087009628[0], separator_3087009626);;
            }
            
            addQuoted_1593835572(result_3087009628, 0, value_3087009633);
            i_2952801303 += 1;
            if (!(((x_3087009624).length == L_2952801304))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3087009628[0].push.apply(result_3087009628[0], suffix_3087009627);;

  return result_3087009628[0];

}

function HEX24_3087009618(x_3087009620) {
  var result_3087009621 = [];

    result_3087009621 = nimCopy(null, collectionToString_3087009622(x_3087009620, [64,91], [44,32], [93]), NTI33554449);

  return result_3087009621;

}

function HEX24_3087009611(vnode_3087009612) {
  var result_3087009613 = [];

    result_3087009613 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3087009613.push.apply(result_3087009613, (vnode_3087009612.text || []).concat([39,44,32] || []));;
    result_3087009613.push.apply(result_3087009613, (HEX24_2080374849(vnode_3087009612.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3087009612.node == null))) {
    result_3087009613.push.apply(result_3087009613, (HEX24_2986346455(vnode_3087009612.node) || []).concat([44,32] || []));;
    }
    
    result_3087009613.push.apply(result_3087009613, (HEX24_3087009618(vnode_3087009612.colors) || []).concat([44,32] || []));;
    result_3087009613.push.apply(result_3087009613, [41]);;

  return result_3087009613;

}

function join_3087009928(a_3087009930, sep_3087009931) {
  var result_3087009932 = [];

    result_3087009932 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3087009947 = 0;
      var x_3087009948 = null;
      var i_2952801300 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801300 < (a_3087009930).length)) break Label3;
            i_3087009947 = i_2952801300;
            x_3087009948 = a_3087009930[chckIndx(i_2952801300, 0, (a_3087009930).length - 1)];
            if ((0 < i_3087009947)) {
            result_3087009932.push.apply(result_3087009932, sep_3087009931);;
            }
            
            result_3087009932.push.apply(result_3087009932, HEX24_3087009611(x_3087009948));;
            i_2952801300 = addInt(i_2952801300, 1);
          }
      };
    };

  return result_3087009932;

}

function HEX24_3087009925(nodeLayout_3087009926) {
  var result_3087009927 = [];

    result_3087009927 = nimCopy(null, join_3087009928(nodeLayout_3087009926.root.children, [10]), NTI33554449);

  return result_3087009927;

}

function HEX24_3087009962(input_3087009963) {
  var result_3087009964 = [];

  BeforeRet: {
    var fmtRes_3087009969 = [mnewString(0)];
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3019899100(fmtRes_3087009969, 0, input_3087009963.id, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3087008579(fmtRes_3087009969, 0, input_3087009963.node, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3019899100(fmtRes_3087009969, 0, input_3087009963.selectedNode, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2332033380(fmtRes_3087009969, 0, input_3087009963.revision, []);
    fmtRes_3087009969[0].push.apply(fmtRes_3087009969[0], [41]);;
    result_3087009964 = nimCopy(null, fmtRes_3087009969[0], NTI33554449);
    break BeforeRet;
  };

  return result_3087009964;

}

function raiseKeyError_3003216112(key_3003216114) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3087009962(key_3003216114) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_3003216018(t_3003216021, key_3003216022) {
  var result_3003216023 = null;
  var result_3003216023_Idx = 0;

    var hcHEX60gensym22_3003216024 = [0];
    var indexHEX60gensym22_3003216031 = rawGet_3003165213(t_3003216021, key_3003216022, hcHEX60gensym22_3003216024, 0);
    if ((0 <= indexHEX60gensym22_3003216031)) {
    result_3003216023 = t_3003216021.data[chckIndx(indexHEX60gensym22_3003216031, 0, (t_3003216021.data).length - 1)]; result_3003216023_Idx = "Field2";
    }
    else {
    raiseKeyError_3003216112(key_3003216022);
    }
    

  return [result_3003216023, result_3003216023_Idx];

}

function HEX5BHEX5D_3003215932(cache_3003215935, key_3003215936) {
    var Temporary1;

  var result_3003215937 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    var node_3003216125 = (Temporary1 = HEX5BHEX5D_3003216018(cache_3003215935.table, key_3003215936), Temporary1)[0][Temporary1[1]];
    result_3003215937 = nimCopy(result_3003215937, node_3003216125.value.val, NTI3087007775);
    remove_3003171110(cache_3003215935.list, node_3003216125);
    prepend_3003167381(cache_3003215935.list, node_3003216125);

  return result_3003215937;

}

function computeNodeLayout_3003216215(ctxHEX60gensym120_3003216216, inputHEX60gensym120_3003216217, recordDependencyHEX60gensym120_3003216218) {
    var Temporary3;
    var Temporary5;

  var result_3003216219 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    var timerHEX60gensym120_3003216220 = startTimer_2281701428();
    ctxHEX60gensym120_3003216216.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym120_3003216216.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym120_3003216309 = getItem_3003181830(inputHEX60gensym120_3003216217);
    var keyHEX60gensym120_3003216310 = {Field0: nimCopy(null, itemHEX60gensym120_3003216309, NTI3019898905), Field1: 7};
    if (recordDependencyHEX60gensym120_3003216218) {
    recordDependency_3003175740(ctxHEX60gensym120_3003216216, itemHEX60gensym120_3003216309, 7);
    }
    
    var colorHEX60gensym120_3003216311 = nodeColor_3019901365(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, 0);
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3019898894[0] = addInt(currentIndent_3019898894[0], Temporary3);
    try {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(subInt(currentIndent_3019898894[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym120_3003216311, NTI3019898910), [44,32], HEX24_3019899092(itemHEX60gensym120_3003216309));
    }
    
    if ((colorHEX60gensym120_3003216311 == 2)) {
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
    if (true) {
    markRed_3019913717(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, []);
    }
    
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    }
    else {
      if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
      }
      
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym120_3003216311 == 0)) {
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
    if (true) {
    markRed_3019913717(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, []);
    }
    
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_3003193126(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310, true) == 0)) {
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym120_3003216216.enableLogging) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
      if (true) {
      markRed_3019913717(ctxHEX60gensym120_3003216216.depGraph, keyHEX60gensym120_3003216310, []);
      }
      
      if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
      rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
      }
      
      if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym120_3003216311 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym120_3003216216.enableLogging && contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    rawEcho(repeat2_3019898895([124,32], chckRange(currentIndent_3019898894[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3087009925(HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217)));
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    force_3003192111(ctxHEX60gensym120_3003216216, keyHEX60gensym120_3003216310);
    }
    
    if (!(contains_3003215739(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3087009962(inputHEX60gensym120_3003216217) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_3003216219 = nimCopy(result_3003216219, HEX5BHEX5D_3003215932(ctxHEX60gensym120_3003216216.queryCacheNodeLayout, inputHEX60gensym120_3003216217), NTI3087007775);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym120_3003216216.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3019898894[0] = subInt(currentIndent_3019898894[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym120_3003216216.dependencyStack).length == 0)) {
    clear_3003195341(ctxHEX60gensym120_3003216216.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym120_3003216216.statsNodeLayout.time = addInt(ctxHEX60gensym120_3003216216.statsNodeLayout.time, elapsed_2281701439(timerHEX60gensym120_3003216220));
    }
  };

  return result_3003216219;

}

function prev_2986344687(node_2986344688) {
  var result_2986344690 = ({val: null});

  BeforeRet: {
    if ((node_2986344688.parent == null)) {
    result_2986344690 = nimCopy(result_2986344690, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var i_2986344697 = index_2986344556(node_2986344688);
    if ((i_2986344697 <= 0)) {
    result_2986344690 = nimCopy(result_2986344690, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    result_2986344690 = nimCopy(result_2986344690, some_2986344674(HEX5BHEX5D_2986344532(node_2986344688.parent, subInt(i_2986344697, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2986344690;

}

function HEX2BHEX3D_2952793193(aHEX60gensym79_2952793195, bHEX60gensym79_2952793196) {
    HEX2BHEX3D_2080374897(aHEX60gensym79_2952793195, "x", bHEX60gensym79_2952793196);
    HEX2BHEX3D_2080374897(aHEX60gensym79_2952793195, "y", bHEX60gensym79_2952793196);

  
}

function bounds_3087009959(nodeLayout_3087009960) {
  var result_3087009961 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3087009961 = nimCopy(result_3087009961, nodeLayout_3087009960.root.bounds, NTI2080374789);
    break BeforeRet;
  };

  return result_3087009961;

}

function insert_2952793205(x_2952793207, x_2952793207_Idx, item_2952793208, i_2952793209) {
    var it_2952793229 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({x: 0.0, y: 0.0})};
    x_2952793207[x_2952793207_Idx] = x_2952793207[x_2952793207_Idx] || []; x_2952793207[x_2952793207_Idx].splice(i_2952793209, 0, it_2952793229);
    x_2952793207[x_2952793207_Idx][chckIndx(i_2952793209, 0, (x_2952793207[x_2952793207_Idx]).length - 1)] = nimCopy(x_2952793207[x_2952793207_Idx][chckIndx(i_2952793209, 0, (x_2952793207[x_2952793207_Idx]).length - 1)], item_2952793208, NTI2952791546);

  
}

function next_2986344641(node_2986344642) {
  var result_2986344647 = ({val: null});

  BeforeRet: {
    if ((node_2986344642.parent == null)) {
    result_2986344647 = nimCopy(result_2986344647, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var i_2986344671 = index_2986344556(node_2986344642);
    if ((subInt(len_2986344536(node_2986344642.parent), 1) <= i_2986344671)) {
    result_2986344647 = nimCopy(result_2986344647, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    result_2986344647 = nimCopy(result_2986344647, some_2986344674(HEX5BHEX5D_2986344532(node_2986344642.parent, addInt(i_2986344671, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2986344647;

}

function HEX5BHEX5D_2952793677(t_2952793680, key_2952793681) {
  var result_2952793682 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2952793683 = [0];
    var indexHEX60gensym20_2952793690 = rawGet_3120562785(t_2952793680, key_2952793681, hcHEX60gensym20_2952793683, 0);
    if ((0 <= indexHEX60gensym20_2952793690)) {
    result_2952793682 = nimCopy(result_2952793682, t_2952793680.data[chckIndx(indexHEX60gensym20_2952793690, 0, (t_2952793680.data).length - 1)].Field2, NTI3087007774);
    }
    else {
    raiseKeyError_2986346264(key_2952793681);
    }
    

  return result_2952793682;

}

function handleSelectedNodeChanged_2952792698(editor_2952792699) {
          
function HEX3Aanonymous_2952793066(t_2952793069) {
            var result_2952793072 = ({x: 0.0, y: 0.0});

              result_2952793072 = nimCopy(result_2952793072, measureText_2315255973(gEditor.platform, t_2952793069), NTI2097152288);

            return result_2952793072;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2952793167(t_2952793170) {
            var result_2952793173 = ({x: 0.0, y: 0.0});

              result_2952793173 = nimCopy(result_2952793173, measureText_2315255973(gEditor.platform, t_2952793170), NTI2097152288);

            return result_2952793173;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2952793344(t_2952793347) {
            var result_2952793350 = ({x: 0.0, y: 0.0});

              result_2952793350 = nimCopy(result_2952793350, measureText_2315255973(gEditor.platform, t_2952793347), NTI2097152288);

            return result_2952793350;

          }
    
function HEX3Aanonymous_2952793528(t_2952793531) {
      var result_2952793534 = ({x: 0.0, y: 0.0});

        result_2952793534 = nimCopy(result_2952793534, measureText_2315255973(gEditor.platform, t_2952793531), NTI2097152288);

      return result_2952793534;

    }

  BeforeRet: {
    var node_2952792700 = node_2952792695(editor_2952792699);
    var foundNode_2952792701 = false;
    var i_2952792702 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2952792702 < (editor_2952792699.lastLayouts).length)) break Label2;
          try {
          var layout_2952792712 = nimCopy(null, editor_2952792699.lastLayouts[chckIndx(i_2952792702, 0, (editor_2952792699.lastLayouts).length - 1)].Field0, NTI3087007775);
          var offset_2952792713 = nimCopy(null, editor_2952792699.lastLayouts[chckIndx(i_2952792702, 0, (editor_2952792699.lastLayouts).length - 1)].Field1, NTI2097152288);
          if (contains_2952792772(layout_2952792712.nodeToVisualNode, node_2952792700.id)) {
          var visualNode_2952792971 = nimCopy(null, HEX5BHEX5D_2952792868(layout_2952792712.nodeToVisualNode, node_2952792700.id), NTI3087007774);
          var bounds_2952792981 = HEX2B_2063597723(absoluteBounds_3087009572(visualNode_2952792971), vec2_2097152861(0.0, offset_2952792713.y));
          if (!(intersects_2063597745(bounds_2952792981, editor_2952792699.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2952792981.y + bounds_2952792981.h) < 100.0)) {
          var subbase_2952792982 = subbase_2986344549(node_2952792700);
          editor_2952792699.previousBaseIndex = index_2986344556(subbase_2952792982);
          editor_2952792699.scrollOffset = (100.0 - ((bounds_2952792981.y + bounds_2952792981.h) - offset_2952792713.y));
          }
          else {
          if (((editor_2952792699.lastBounds.h - 100.0) < bounds_2952792981.y)) {
          var subbase_2952792983 = subbase_2986344549(node_2952792700);
          editor_2952792699.previousBaseIndex = index_2986344556(subbase_2952792983);
          editor_2952792699.scrollOffset = ((-((bounds_2952792981.y - offset_2952792713.y)) + editor_2952792699.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2952792702 = addInt(i_2952792702, 1);
          }
        }
    };
    i_2952792702 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2952792702 < (editor_2952792699.lastLayouts).length)) break Label5;
          try {
          var layout_2952792992 = nimCopy(null, editor_2952792699.lastLayouts[chckIndx(i_2952792702, 0, (editor_2952792699.lastLayouts).length - 1)].Field0, NTI3087007775);
          var offset_2952792993 = [nimCopy(null, editor_2952792699.lastLayouts[chckIndx(i_2952792702, 0, (editor_2952792699.lastLayouts).length - 1)].Field1, NTI2097152288)];
          var targetNode_2952792994 = node_2952792700;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2952792994 == null)) && !(contains_2952792772(layout_2952792992.nodeToVisualNode, targetNode_2952792994.id)))) break Label8;
                targetNode_2952792994 = targetNode_2952792994.parent;
              }
          };
          if (!((targetNode_2952792994 == null))) {
          var input_2952793073 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790069, {node: subbase_2986344549(targetNode_2952792994), selectedNode: nimCopy(null, node_2952792700.id, NTI2181038083), measureText: HEX3Aanonymous_2952793066, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2952792992 = nimCopy(layout_2952792992, computeNodeLayout_3003216215(ctx_2952790069, input_2952793073, true), NTI3087007775);
          foundNode_2952792701 = true;
          }
          else {
            if (!(node_2952792700.parent == editor_2952792699.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym31_2952793080 = prev_2986344687(node_2952792700);
              if (!isSome_2986346330(oHEX60gensym31_2952793080)) Temporary11 = false; else {                var prev_2952793103 = get_2986346350(oHEX60gensym31_2952793080);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2952792772(layout_2952792992.nodeToVisualNode, prev_2952793103.id);            }          if (Temporary9) {
          var input_2952793174 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790069, {node: subbase_2986344549(node_2952792700), selectedNode: nimCopy(null, node_2952792700.id, NTI2181038083), measureText: HEX3Aanonymous_2952793167, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2952792992 = nimCopy(layout_2952792992, computeNodeLayout_3003216215(ctx_2952790069, input_2952793174, true), NTI3087007775);
          HEX2BHEX3D_2952793193(offset_2952792993[0], bounds_3087009959(layout_2952792992).h);
          insert_2952793205(editor_2952792699, "lastLayouts", {Field0: nimCopy(null, layout_2952792992, NTI3087007775), Field1: nimCopy(null, offset_2952792993[0], NTI2097152288)}, chckRange(addInt(i_2952792702, 1), 0, 2147483647));
          Label12: {
            var k_2952793246 = 0;
            var colontmp__2952801266 = 0;
            var colontmp__2952801267 = 0;
            colontmp__2952801266 = addInt(i_2952792702, 1);
            colontmp__2952801267 = (editor_2952792699.lastLayouts).length - 1;
            var res_2952801268 = colontmp__2952801266;
            Label13: {
                Label14: while (true) {
                if (!(res_2952801268 <= colontmp__2952801267)) break Label14;
                  k_2952793246 = res_2952801268;
                  HEX2BHEX3D_2080374897(editor_2952792699.lastLayouts[chckIndx(k_2952793246, 0, (editor_2952792699.lastLayouts).length - 1)].Field1, "y", bounds_3087009959(layout_2952792992).h);
                  res_2952801268 = addInt(res_2952801268, 1);
                }
            };
          };
          foundNode_2952792701 = true;
          }
          else {
            if (!(node_2952792700.parent == editor_2952792699.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym34_2952793257 = next_2986344641(node_2952792700);
              if (!isSome_2986346330(oHEX60gensym34_2952793257)) Temporary17 = false; else {                var next_2952793280 = get_2986346350(oHEX60gensym34_2952793257);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2952792772(layout_2952792992.nodeToVisualNode, next_2952793280.id);            }          if (Temporary15) {
          var input_2952793351 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790069, {node: subbase_2986344549(node_2952792700), selectedNode: nimCopy(null, node_2952792700.id, NTI2181038083), measureText: HEX3Aanonymous_2952793344, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2952792992 = nimCopy(layout_2952792992, computeNodeLayout_3003216215(ctx_2952790069, input_2952793351, true), NTI3087007775);
          insert_2952793205(editor_2952792699, "lastLayouts", {Field0: nimCopy(null, layout_2952792992, NTI3087007775), Field1: nimCopy(null, offset_2952792993[0], NTI2097152288)}, chckRange(i_2952792702, 0, 2147483647));
          Label18: {
            var k_2952793364 = 0;
            var colontmp__2952801271 = 0;
            colontmp__2952801271 = (editor_2952792699.lastLayouts).length - 1;
            var res_2952801272 = i_2952792702;
            Label19: {
                Label20: while (true) {
                if (!(res_2952801272 <= colontmp__2952801271)) break Label20;
                  k_2952793364 = res_2952801272;
                  HEX2BHEX3D_2080374897(editor_2952792699.lastLayouts[chckIndx(k_2952793364, 0, (editor_2952792699.lastLayouts).length - 1)].Field1, "y", bounds_3087009959(layout_2952792992).h);
                  res_2952801272 = addInt(res_2952801272, 1);
                }
            };
          };
          foundNode_2952792701 = true;
          }
          }}
          if ((foundNode_2952792701 && contains_2952792772(layout_2952792992.nodeToVisualNode, node_2952792700.id))) {
          var visualNode_2952793514 = nimCopy(null, HEX5BHEX5D_2952792868(layout_2952792992.nodeToVisualNode, node_2952792700.id), NTI3087007774);
          var bounds_2952793524 = HEX2B_2063597723(absoluteBounds_3087009572(visualNode_2952793514), vec2_2097152861(0.0, offset_2952792993[0].y));
          if (!(intersects_2063597745(bounds_2952793524, rect_2080374802(0.0, 0.0, editor_2952792699.lastBounds.w, editor_2952792699.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2952793524.y + bounds_2952793524.h) < 100.0)) {
          var subbase_2952793525 = subbase_2986344549(node_2952792700);
          editor_2952792699.previousBaseIndex = index_2986344556(subbase_2952793525);
          editor_2952792699.scrollOffset = (100.0 - ((bounds_2952793524.y + bounds_2952793524.h) - offset_2952792993[0].y));
          }
          else {
          if (((editor_2952792699.lastBounds.h - 100.0) < bounds_2952793524.y)) {
          var subbase_2952793526 = subbase_2986344549(node_2952792700);
          editor_2952792699.previousBaseIndex = index_2986344556(subbase_2952793526);
          editor_2952792699.scrollOffset = ((-((bounds_2952793524.y - offset_2952792993[0].y)) + editor_2952792699.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2952792702 = addInt(i_2952792702, 1);
          }
        }
    };
    var subbase_2952793527 = subbase_2986344549(node_2952792700);
    var input_2952793535 = getOrCreateNodeLayoutInput_3003181839(ctx_2952790069, {node: subbase_2952793527, selectedNode: nimCopy(null, node_2952792700.id, NTI2181038083), measureText: HEX3Aanonymous_2952793528, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
    var layout_2952793536 = computeNodeLayout_3003216215(ctx_2952790069, input_2952793535, true);
    if (contains_2952792772(layout_2952793536.nodeToVisualNode, node_2952792700.id)) {
    var visualNode_2952793771 = HEX5BHEX5D_2952793677(layout_2952793536.nodeToVisualNode, node_2952792700.id);
    var bounds_2952793772 = absoluteBounds_3087009572(visualNode_2952793771);
    editor_2952792699.previousBaseIndex = index_2986344556(subbase_2952793527);
    editor_2952792699.scrollOffset = (-(bounds_2952793772.y) + (editor_2952792699.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2952793818(editor_2952793819, node_2952793820) {
  BeforeRet: {
    if ((node_2952793820 == editor_2952793819.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2952793820.parent == null) || !((base_2986344542(node_2952793820) == editor_2952793819.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2952793819.selectedNode == null))) {
    addLast_2952793842(editor_2952793819.selectionHistory, editor_2952793819.selectedNode);
    }
    
    if ((100 < len_2952793983(editor_2952793819.selectionHistory))) {
    var _ = popFirst_2952793992(editor_2952793819.selectionHistory);
    }
    
    editor_2952793819.selectedNode = node_2952793820;
    handleSelectedNodeChanged_2952792698(editor_2952793819);
  };

  
}

function moveCursor_2952801155(self_2952801156, direction_2952801157) {
  BeforeRet: {
    if ((direction_2952801157 < 0)) {
    if (isEditing_2952797462(self_2952801156)) {
    break BeforeRet;
    }
    
    var index_2952801158 = index_2986344556(node_2952792695(self_2952801156));
    if ((0 < index_2952801158)) {
    nodeHEX3D_2952793818(self_2952801156, HEX5BHEX5D_2986344532(node_2952792695(self_2952801156).parent, subInt(index_2952801158, 1)));
    }
    
    }
    else {
      if (isEditing_2952797462(self_2952801156)) {
      break BeforeRet;
      }
      
      var index_2952801159 = index_2986344556(node_2952792695(self_2952801156));
      if (((0 <= index_2952801159) && (index_2952801159 < subInt(len_2986344536(node_2952792695(self_2952801156).parent), 1)))) {
      nodeHEX3D_2952793818(self_2952801156, HEX5BHEX5D_2986344532(node_2952792695(self_2952801156).parent, addInt(index_2952801159, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2952801151(self_2952801211, direction_2952801212) {
    moveCursor_2952801155(self_2952801211, direction_2952801212);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2952801151(this, direction_));};

function moveCursorUp_2952801313(self_2952801314) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952801314)) {
    break BeforeRet;
    }
    
    if (((!((node_2952792695(self_2952801314) == self_2952801314.document.rootNode)) && !((node_2952792695(self_2952801314).parent == self_2952801314.document.rootNode))) && !((node_2952792695(self_2952801314).parent == null)))) {
    nodeHEX3D_2952793818(self_2952801314, node_2952792695(self_2952801314).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2952801309(self_2952801354) {
    moveCursorUp_2952801313(self_2952801354);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2952801309(this));};

function moveCursorDown_2952801375(self_2952801376) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952801376)) {
    break BeforeRet;
    }
    
    if ((0 < len_2986344536(node_2952792695(self_2952801376)))) {
    nodeHEX3D_2952793818(self_2952801376, HEX5BHEX5D_2986344532(node_2952792695(self_2952801376), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2952801371(self_2952801404) {
    moveCursorDown_2952801375(self_2952801404);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2952801371(this));};

function getNextChild_2952792690(document_2952792691, node_2952792692, min_2952792693) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2952798098 = ({val: null});

  BeforeRet: {
    if ((len_2986344536(node_2952792692) == 0)) {
    result_2952798098 = nimCopy(result_2952798098, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2952798101 = node_2952792692;
      var pos_2952798102 = 0;
      var _ = pos_2952798102;
      if ((expr_2952798101.kind == 8)) {
        var oHEX60gensym118_2952798111 = computeSymbol_3003201856(ctx_2952790069, HEX5BHEX5D_2986344532(node_2952792692, 0), true);
        if (!isSome_3087009345(oHEX60gensym118_2952798111)) Temporary3 = false; else {          var sym_2952798134 = get_3087009365(oHEX60gensym118_2952798111);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2952798134.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2952798134;
      if (ConstSet164[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2986344536(node_2952792692) == 3)) {
        if ((min_2952792693 == 0)) {
        result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, 2)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((min_2952792693 == 1)) {
        result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((min_2952792693 == 2)) {
        result_2952798098 = nimCopy(result_2952798098, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2986344536(node_2952792692) == 2)) {
        if ((min_2952792693 == 0)) {
        result_2952798098 = nimCopy(result_2952798098, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        if ((min_2952792693 == 1)) {
        result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2952792693 < 0)) {
    result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, 0)), NTI2986344567);
    break BeforeRet;
    }
    
    if ((subInt(len_2986344536(node_2952792692), 1) <= min_2952792693)) {
    result_2952798098 = nimCopy(result_2952798098, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    result_2952798098 = nimCopy(result_2952798098, some_2986344674(HEX5BHEX5D_2986344532(node_2952792692, addInt(min_2952792693, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798098;

}

function shouldSelectNode_2952798166(node_2952798167) {
  var result_2952798168 = false;

  BeforeRet: {
    switch (node_2952798167.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2952798168 = (len_2986344536(node_2952798167) == 0);
      break BeforeRet;
      break;
    default: 
      result_2952798168 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2952798168;

}

function moveCursorNext_2952801425(self_2952801426) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2952797462(self_2952801426)) {
    break BeforeRet;
    }
    
    var node_2952801427 = node_2952792695(self_2952801426);
    Label1: {
      var __2952801428 = 0;
      var n_2952801429 = null;
      var colontmp__2952801478 = null;
      colontmp__2952801478 = node_2952792695(self_2952801426);
      var n_2952801480 = colontmp__2952801478;
      var i_2952801481 = 0;
      var gotoChild_2952801482 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952801480 == null))) break Label3;
            if ((gotoChild_2952801482 && (0 < len_2986344536(n_2952801480)))) {
            n_2952801480 = get_2986346350(getNextChild_2952792690(self_2952801426.document, n_2952801480, -1));
            __2952801428 = i_2952801481;
            n_2952801429 = n_2952801480;
            Label4: {
              if (!(shouldSelectNode_2952798166(n_2952801429))) {
              break Label4;
              }
              
              if (!((n_2952801429 == node_2952792695(self_2952801426)))) {
              nodeHEX3D_2952793818(self_2952801426, n_2952801429);
              break Label1;
              }
              
            };
            gotoChild_2952801482 = true;
            }
            else {
              if (!!((n_2952801480.parent == null))) Temporary5 = false; else {                var oHEX60gensym75_2952801484 = getNextChild_2952792690(self_2952801426.document, n_2952801480.parent, index_2986344556(n_2952801480));
                if (!isSome_2986346330(oHEX60gensym75_2952801484)) Temporary6 = false; else {                  var ne_2952801485 = get_2986346350(oHEX60gensym75_2952801484);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2952801480 = ne_2952801485;
            __2952801428 = i_2952801481;
            n_2952801429 = n_2952801480;
            Label7: {
              if (!(shouldSelectNode_2952798166(n_2952801429))) {
              break Label7;
              }
              
              if (!((n_2952801429 == node_2952792695(self_2952801426)))) {
              nodeHEX3D_2952793818(self_2952801426, n_2952801429);
              break Label1;
              }
              
            };
            gotoChild_2952801482 = true;
            }
            else {
              gotoChild_2952801482 = false;
              n_2952801480 = n_2952801480.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2952801421(self_2952801461) {
    moveCursorNext_2952801425(self_2952801461);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2952801421(this));};

function getPrevChild_2952792685(document_2952792686, node_2952792687, max_2952792688) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2952798248 = ({val: null});

  BeforeRet: {
    if ((len_2986344536(node_2952792687) == 0)) {
    result_2952798248 = nimCopy(result_2952798248, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2952798251 = node_2952792687;
      var pos_2952798252 = 0;
      var _ = pos_2952798252;
      if ((expr_2952798251.kind == 8)) {
        var oHEX60gensym127_2952798261 = computeSymbol_3003201856(ctx_2952790069, HEX5BHEX5D_2986344532(node_2952792687, 0), true);
        if (!isSome_3087009345(oHEX60gensym127_2952798261)) Temporary3 = false; else {          var sym_2952798284 = get_3087009365(oHEX60gensym127_2952798261);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2952798284.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2952798284;
      if (ConstSet165[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007753)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2986344536(node_2952792687) == 3)) {
        if ((max_2952792688 == 0)) {
        result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((max_2952792688 == 1)) {
        result_2952798248 = nimCopy(result_2952798248, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        if ((max_2952792688 == 2)) {
        result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, 2)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2986344536(node_2952792687) == 2)) {
        if ((max_2952792688 == 0)) {
        result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, 1)), NTI2986344567);
        break BeforeRet;
        }
        
        if ((max_2952792688 == 1)) {
        result_2952798248 = nimCopy(result_2952798248, none_2986344652(), NTI2986344567);
        break BeforeRet;
        }
        
        result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, 0)), NTI2986344567);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2952792688 < 0)) {
    result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, subInt(len_2986344536(node_2952792687), 1))), NTI2986344567);
    break BeforeRet;
    }
    else {
    if ((max_2952792688 == 0)) {
    result_2952798248 = nimCopy(result_2952798248, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    }
    result_2952798248 = nimCopy(result_2952798248, some_2986344674(HEX5BHEX5D_2986344532(node_2952792687, subInt(max_2952792688, 1))), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798248;

}

function moveCursorPrev_2952801493(self_2952801494) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2952797462(self_2952801494)) {
    break BeforeRet;
    }
    
    var node_2952801495 = node_2952792695(self_2952801494);
    Label1: {
      var n_2952801496 = null;
      var colontmp__2952801545 = null;
      colontmp__2952801545 = node_2952792695(self_2952801494);
      var gotoChild_2952801547 = false;
      var n_2952801548 = colontmp__2952801545;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952801548 == null))) break Label3;
            if ((gotoChild_2952801547 && (0 < len_2986344536(n_2952801548)))) {
            n_2952801548 = get_2986346350(getPrevChild_2952792685(self_2952801494.document, n_2952801548, -1));
            gotoChild_2952801547 = true;
            }
            else {
              if (!!((n_2952801548.parent == null))) Temporary4 = false; else {                var oHEX60gensym79_2952801550 = getPrevChild_2952792685(self_2952801494.document, n_2952801548.parent, index_2986344556(n_2952801548));
                if (!isSome_2986346330(oHEX60gensym79_2952801550)) Temporary5 = false; else {                  var ne_2952801551 = get_2986346350(oHEX60gensym79_2952801550);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2952801496 = n_2952801548;
            Label6: {
              if (!(shouldSelectNode_2952798166(n_2952801496))) {
              break Label6;
              }
              
              if (!((n_2952801496 == node_2952792695(self_2952801494)))) {
              nodeHEX3D_2952793818(self_2952801494, n_2952801496);
              break Label1;
              }
              
            };
            n_2952801548 = ne_2952801551;
            gotoChild_2952801547 = true;
            }
            else {
              n_2952801496 = n_2952801548;
              Label7: {
                if (!(shouldSelectNode_2952798166(n_2952801496))) {
                break Label7;
                }
                
                if (!((n_2952801496 == node_2952792695(self_2952801494)))) {
                nodeHEX3D_2952793818(self_2952801494, n_2952801496);
                break Label1;
                }
                
              };
              gotoChild_2952801547 = false;
              n_2952801548 = n_2952801548.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2952801489(self_2952801528) {
    moveCursorPrev_2952801493(self_2952801528);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2952801489(this));};

function getNextLine_2952798332(document_2952798333, node_2952798334) {
              var Temporary6;
              var Temporary7;

  var result_2952798336 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2952798337 = 0;
      var n_2952798338 = null;
      var n_2952801632 = node_2952798334;
      var idx_2952801633 = -1;
      var i_2952801634 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2952801633 == -1)) {
            __2952798337 = i_2952801634;
            n_2952798338 = n_2952801632;
            Label5: {
              if (((n_2952798338 == node_2952798334) || (n_2952798338.parent == null))) {
              break Label5;
              }
              
              if ((n_2952798338.parent.kind == 7)) {
              if (((n_2952798338.kind == 7) && (len_2986344536(n_2952798338) == 0))) {
              result_2952798336 = nimCopy(result_2952798336, some_2986344674(n_2952798338), NTI2986344567);
              break BeforeRet;
              }
              else {
              if (!((n_2952798338.kind == 7))) {
              result_2952798336 = nimCopy(result_2952798336, some_2986344674(n_2952798338), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2952798338.parent.kind == 9)) {
              var isElse_2952798373 = ((n_2952798338 == last_2986344706(n_2952798338.parent)) && !((modInt(len_2986344536(n_2952798338.parent), 2) == 0)));
              var isCondition_2952798374 = (!(isElse_2952798373) && (modInt(index_2986344556(n_2952798338), 2) == 0));
              if (((n_2952798338.kind == 7) && (len_2986344536(n_2952798338) == 0))) {
              result_2952798336 = nimCopy(result_2952798336, some_2986344674(n_2952798338), NTI2986344567);
              break BeforeRet;
              }
              else {
              if ((!((n_2952798338.kind == 7)) && (!(isCondition_2952798374) || (0 < index_2986344556(n_2952798338))))) {
              result_2952798336 = nimCopy(result_2952798336, some_2986344674(n_2952798338), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2952801633, 1) < len_2986344536(n_2952801632))) {
            n_2952801632 = HEX5BHEX5D_2986344532(n_2952801632, addInt(idx_2952801633, 1));
            idx_2952801633 = -1;
            }
            else {
              var oHEX60gensym64_2952801636 = next_2986344641(n_2952801632);
              if (!isSome_2986346330(oHEX60gensym64_2952801636)) Temporary7 = false; else {                var ne_2952801637 = get_2986346350(oHEX60gensym64_2952801636);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2952801632 == null));              }            if (Temporary6) {
            n_2952801632 = ne_2952801637;
            idx_2952801633 = -1;
            }
            else {
            if (((!((n_2952801632.parent == null)) && !((n_2952801632 == null))) && !((n_2952801632.parent == null)))) {
            idx_2952801633 = index_2986344556(n_2952801632);
            n_2952801632 = n_2952801632.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2952801634 = addInt(i_2952801634, 1);
            }
          }
      };
    };
    result_2952798336 = nimCopy(result_2952798336, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798336;

}

function moveCursorNextLine_2952801559(self_2952801560) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797462(self_2952801560)) {
    break BeforeRet;
    }
    
      var oHEX60gensym582_2952801563 = getNextLine_2952798332(self_2952801560.document, node_2952792695(self_2952801560));
      if (!isSome_2986346330(oHEX60gensym582_2952801563)) Temporary1 = false; else {        var next_2952801586 = get_2986346350(oHEX60gensym582_2952801563);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793818(self_2952801560, next_2952801586);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2952801555(self_2952801614) {
    moveCursorNextLine_2952801559(self_2952801614);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2952801555(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2952798391(document_2952798392, node_2952798393) {
              var Temporary4;

  var result_2952798395 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2952798396 = null;
      var idx_2952801717 = 0;
      var n_2952801718 = node_2952798393;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952801718 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952801718), 1)), subInt(idx_2952801717, 1))) {
            n_2952801718 = HEX5BHEX5D_2986344532(n_2952801718, subInt(idx_2952801717, 1));
            idx_2952801717 = len_2986344536(n_2952801718);
            }
            else {
              var oHEX60gensym83_2952801720 = prev_2986344687(n_2952801718);
              if (!isSome_2986346330(oHEX60gensym83_2952801720)) Temporary4 = false; else {                var ne_2952801721 = get_2986346350(oHEX60gensym83_2952801720);
                Temporary4 = true;              }            if (Temporary4) {
            n_2952798396 = n_2952801718;
            Label5: {
              if (((n_2952798396 == node_2952798393) || (n_2952798396.parent == null))) {
              break Label5;
              }
              
              if ((n_2952798396.parent.kind == 7)) {
              if (((n_2952798396.kind == 7) && (len_2986344536(n_2952798396) == 0))) {
              result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
              break BeforeRet;
              }
              else {
              if (!((n_2952798396.kind == 7))) {
              result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2952798396.parent.kind == 9)) {
              var isElse_2952798431 = ((n_2952798396 == last_2986344706(n_2952798396.parent)) && !((modInt(len_2986344536(n_2952798396.parent), 2) == 0)));
              var isCondition_2952798432 = (!(isElse_2952798431) && (modInt(index_2986344556(n_2952798396), 2) == 0));
              if (((n_2952798396.kind == 7) && (len_2986344536(n_2952798396) == 0))) {
              result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
              break BeforeRet;
              }
              else {
              if ((!((n_2952798396.kind == 7)) && (!(isCondition_2952798432) || (0 < index_2986344556(n_2952798396))))) {
              result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2952798396.kind == 9)) {
              result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
              break BeforeRet;
              }
              
            };
            n_2952801718 = ne_2952801721;
            idx_2952801717 = len_2986344536(n_2952801718);
            }
            else {
              n_2952798396 = n_2952801718;
              Label6: {
                if (((n_2952798396 == node_2952798393) || (n_2952798396.parent == null))) {
                break Label6;
                }
                
                if ((n_2952798396.parent.kind == 7)) {
                if (((n_2952798396.kind == 7) && (len_2986344536(n_2952798396) == 0))) {
                result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
                break BeforeRet;
                }
                else {
                if (!((n_2952798396.kind == 7))) {
                result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2952798396.parent.kind == 9)) {
                var isElse_2952801722 = ((n_2952798396 == last_2986344706(n_2952798396.parent)) && !((modInt(len_2986344536(n_2952798396.parent), 2) == 0)));
                var isCondition_2952801723 = (!(isElse_2952801722) && (modInt(index_2986344556(n_2952798396), 2) == 0));
                if (((n_2952798396.kind == 7) && (len_2986344536(n_2952798396) == 0))) {
                result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
                break BeforeRet;
                }
                else {
                if ((!((n_2952798396.kind == 7)) && (!(isCondition_2952801723) || (0 < index_2986344556(n_2952798396))))) {
                result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2952798396.kind == 9)) {
                result_2952798395 = nimCopy(result_2952798395, some_2986344674(n_2952798396), NTI2986344567);
                break BeforeRet;
                }
                
              };
              idx_2952801717 = index_2986344556(n_2952801718);
              n_2952801718 = n_2952801718.parent;
            }
            }
          }
      };
    };
    result_2952798395 = nimCopy(result_2952798395, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798395;

}

function moveCursorPrevLine_2952801644(self_2952801645) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797462(self_2952801645)) {
    break BeforeRet;
    }
    
      var oHEX60gensym591_2952801648 = getPrevLine_2952798391(self_2952801645.document, node_2952792695(self_2952801645));
      if (!isSome_2986346330(oHEX60gensym591_2952801648)) Temporary1 = false; else {        var prev_2952801671 = get_2986346350(oHEX60gensym591_2952801648);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793818(self_2952801645, prev_2952801671);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2952801640(self_2952801699) {
    moveCursorPrevLine_2952801644(self_2952801699);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2952801640(this));};

function selectContaining_2952801730(self_2952801731, container_2952801732) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2952797462(self_2952801731)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2952801732)) {
    case "function":
        var oHEX60gensym601_2952801735 = findWithParentRec_2986346373(node_2952792695(self_2952801731), 11);
        if (!isSome_2986346330(oHEX60gensym601_2952801735)) Temporary1 = false; else {          var child_2952801758 = get_2986346350(oHEX60gensym601_2952801735);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2952793818(self_2952801731, child_2952801758.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym602_2952801761 = findWithParentRec_2986346373(node_2952792695(self_2952801731), 4);
        if (!isSome_2986346330(oHEX60gensym602_2952801761)) Temporary2 = false; else {          var child_2952801784 = get_2986346350(oHEX60gensym602_2952801761);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2952793818(self_2952801731, child_2952801784.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym603_2952801787 = findWithParentRec_2986346373(node_2952792695(self_2952801731), 7);
        if (!isSome_2986346330(oHEX60gensym603_2952801787)) Temporary3 = false; else {          var child_2952801810 = get_2986346350(oHEX60gensym603_2952801787);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2952793818(self_2952801731, child_2952801810);
      }
      
      break;
    case "node-list":
        var oHEX60gensym604_2952801813 = findWithParentRec_2986346373(node_2952792695(self_2952801731), 7);
        if (!isSome_2986346330(oHEX60gensym604_2952801813)) Temporary4 = false; else {          var child_2952801836 = get_2986346350(oHEX60gensym604_2952801813);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2952793818(self_2952801731, child_2952801836.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym605_2952801839 = findWithParentRec_2986346373(node_2952792695(self_2952801731), 9);
        if (!isSome_2986346330(oHEX60gensym605_2952801839)) Temporary5 = false; else {          var child_2952801862 = get_2986346350(oHEX60gensym605_2952801839);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2952793818(self_2952801731, child_2952801862.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym606_2952801865 = findWithParentRec_2986346373(node_2952792695(self_2952801731), 10);
        if (!isSome_2986346330(oHEX60gensym606_2952801865)) Temporary6 = false; else {          var child_2952801888 = get_2986346350(oHEX60gensym606_2952801865);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2952793818(self_2952801731, child_2952801888.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2952801726(self_2952801917, container_2952801918) {
    selectContaining_2952801730(self_2952801917, container_2952801918);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2952801726(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_3003234632(cache_3003234635, key_3003234636) {
    var node_3003234732 = getOrDefault_3019901555(cache_3003234635.table, key_3003234636, null);
    if (!((node_3003234732 == null))) {
    del_3019912654(cache_3003234635.table, key_3003234636);
    remove_3019913413(cache_3003234635.list, node_3003234732);
    }
    

  
}

function deleteNode_3003234562(ctx_3003234563, node_3003234564) {
          var Temporary3;
            var Temporary4;

    ctx_3003234563.depGraph.revision = addInt(ctx_3003234563.depGraph.revision, 1);
    del_3003234632(ctx_3003234563.depGraph.changed, {Field0: getItem_3003175953(node_3003234564), Field1: -1});
    if (!((node_3003234564.parent == null))) {
    HEX5BHEX5DHEX3D_3019910340(ctx_3003234563.depGraph.changed, {Field0: getItem_3003175953(node_3003234564.parent), Field1: -1}, ctx_3003234563.depGraph.revision);
    }
    
    var parent_3003234894 = node_3003234564.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3003234894 == null))) Temporary3 = false; else {            var oHEX60gensym758_3003234901 = findWithParentRec_2986346373(parent_3003234894, 11);
            if (!isSome_2986346330(oHEX60gensym758_3003234901)) Temporary4 = false; else {              var child_3003234947 = get_2986346350(oHEX60gensym758_3003234901);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3003234948 = child_3003234947.parent;
          HEX5BHEX5DHEX3D_3019910340(ctx_3003234563.depGraph.changed, {Field0: getItem_3003175953(functionDefinition_3003234948), Field1: -1}, ctx_3003234563.depGraph.revision);
          parent_3003234894 = functionDefinition_3003234948.parent;
        }
    };

  
}

function rawGet_3187671114(t_3187671117, key_3187671118, hc_3187671119, hc_3187671119_Idx) {
  var result_3187671120 = 0;

  BeforeRet: {
    hc_3187671119[hc_3187671119_Idx] = hash_2181038324(key_3187671118);
    if ((hc_3187671119[hc_3187671119_Idx] == 0)) {
    hc_3187671119[hc_3187671119_Idx] = 314159265;
    }
    
    if (((t_3187671117.data).length == 0)) {
    result_3187671120 = -1;
    break BeforeRet;
    }
    
    var h_3187671172 = (hc_3187671119[hc_3187671119_Idx] & (t_3187671117.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field0)) break Label2;
          if (((t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field0 == hc_3187671119[hc_3187671119_Idx]) && HEX3DHEX3D_2181038320(t_3187671117.data[chckIndx(h_3187671172, 0, (t_3187671117.data).length - 1)].Field1, key_3187671118))) {
          result_3187671120 = h_3187671172;
          break BeforeRet;
          }
          
          h_3187671172 = nextTry_1308622883(h_3187671172, (t_3187671117.data).length - 1);
        }
    };
    result_3187671120 = subInt(-1, h_3187671172);
  };

  return result_3187671120;

}

function del_2952796602(t_2952796605, key_2952796606) {
    var hc_2952796607 = [0];
    var i_2952796614 = rawGet_3187671114(t_2952796605, key_2952796606, hc_2952796607, 0);
    var mskHEX60gensym36_2952796618 = (t_2952796605.data).length - 1;
    if ((0 <= i_2952796614)) {
    t_2952796605.counter = subInt(t_2952796605.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2952796625 = i_2952796614;
            var rHEX60gensym36_2952796626 = jHEX60gensym36_2952796625;
            t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)].Field0 = 0;
            t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)].Field1 = nimCopy(t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2181038083);
            t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2952796614 = (addInt(i_2952796614, 1) & mskHEX60gensym36_2952796618);
                  if (isEmpty_1308622877(t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2952796626 = (t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)].Field0 & mskHEX60gensym36_2952796618);
                  if (!(((((rHEX60gensym36_2952796626 <= i_2952796614) && (jHEX60gensym36_2952796625 < rHEX60gensym36_2952796626)) || ((jHEX60gensym36_2952796625 < rHEX60gensym36_2952796626) && (i_2952796614 < jHEX60gensym36_2952796625))) || ((i_2952796614 < jHEX60gensym36_2952796625) && (rHEX60gensym36_2952796626 <= i_2952796614))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2952796605.data[chckIndx(jHEX60gensym36_2952796625, 0, (t_2952796605.data).length - 1)] = nimCopy(t_2952796605.data[chckIndx(jHEX60gensym36_2952796625, 0, (t_2952796605.data).length - 1)], t_2952796605.data[chckIndx(i_2952796614, 0, (t_2952796605.data).length - 1)], NTI2952791517);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2952796188(doc_2952796189, node_2952796190) {
              var Temporary8;

    var fmtRes_2952796195 = [mnewString(0)];
    fmtRes_2952796195[0].push.apply(fmtRes_2952796195[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3087008579(fmtRes_2952796195, 0, node_2952796190, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952796195[0], NTI33554449)]);
    Label1: {
      var child_2952796204 = null;
      var i_2952801992 = 0;
      var L_2952801993 = (node_2952796190.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952801992 < L_2952801993)) break Label3;
            child_2952796204 = node_2952796190.children[chckIndx(i_2952801992, 0, (node_2952796190.children).length - 1)];
            handleNodeDelete_2952796188(doc_2952796189, child_2952796204);
            i_2952801992 = addInt(i_2952801992, 1);
            if (!(((node_2952796190.children).length == L_2952801993))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_3003234562(ctx_2952790069, node_2952796190);
    Label4: {
      var i_2952796238 = 0;
      var update_2952796239 = null;
      var i_2952802002 = 0;
      var L_2952802003 = (ctx_2952790069.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2952802002 < L_2952802003)) break Label6;
            i_2952796238 = i_2952802002;
            update_2952796239 = ctx_2952790069.updateFunctions[chckIndx(i_2952802002, 0, (ctx_2952790069.updateFunctions).length - 1)];
            var key_2952796240 = {Field0: getItem_3003175953(node_2952796190), Field1: i_2952796238};
            if (contains_3003221607(ctx_2952790069.diagnosticsPerQuery, key_2952796240)) {
            Label7: {
              var id_2952796389 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2952801997 = [];
              colontmp__2952801997 = (Temporary8 = HEX5BHEX5D_3003222052(ctx_2952790069.diagnosticsPerQuery, key_2952796240), Temporary8)[0][Temporary8[1]];
              var i_2952801998 = 0;
              var L_2952801999 = (colontmp__2952801997).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2952801998 < L_2952801999)) break Label10;
                    id_2952796389 = colontmp__2952801997[chckIndx(i_2952801998, 0, (colontmp__2952801997).length - 1)];
                    del_3003222769(HEX5BHEX5D_3003222261(ctx_2952790069.diagnosticsPerNode, id_2952796389).queries, key_2952796240);
                    i_2952801998 = addInt(i_2952801998, 1);
                    if (!(((colontmp__2952801997).length == L_2952801999))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_3003229512(ctx_2952790069.diagnosticsPerQuery, key_2952796240);
            }
            
            i_2952802002 = addInt(i_2952802002, 1);
            if (!(((ctx_2952790069.updateFunctions).length == L_2952802003))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2952796602(doc_2952796189.nodes, node_2952796190.id);

  
}

function HEX5BHEX5DHEX3D_2986344712(node_2986344713, index_2986344714, newNode_2986344715) {
    newNode_2986344715.parent = node_2986344713;
    node_2986344713.children[chckIndx(index_2986344714, 0, (node_2986344713.children).length - 1)].parent = null;
    node_2986344713.children[chckIndx(index_2986344714, 0, (node_2986344713.children).length - 1)] = newNode_2986344715;

  
}

function getOrDefault_3003176208(t_3003176211, key_3003176212, default_3003176213) {
    var Temporary1;

  var result_3003176214 = null;

    var hcHEX60gensym380_3003176217 = [0];
    var indexHEX60gensym380_3003176224 = rawGet_3003122705(t_3003176211, key_3003176212, hcHEX60gensym380_3003176217, 0);
    if ((0 <= indexHEX60gensym380_3003176224)) {
    Temporary1 = t_3003176211.data[chckIndx(indexHEX60gensym380_3003176224, 0, (t_3003176211.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003176213;
    }
    
    result_3003176214 = Temporary1;

  return result_3003176214;

}

function newDoublyLinkedNode_3003176340(value_3003176342) {
  var result_3003176343 = null;

    result_3003176343 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_3003176343.value = nimCopy(result_3003176343.value, value_3003176342, NTI3003121726);

  return result_3003176343;

}

function mustRehash_3003176681(t_3003176683) {
  var result_3003176684 = false;

    if (!((t_3003176683.counter < (t_3003176683.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003176684 = ((mulInt((t_3003176683.data).length, 2) < mulInt(t_3003176683.counter, 3)) || (subInt((t_3003176683.data).length, t_3003176683.counter) < 4));

  return result_3003176684;

}

function rawInsert_3003177374(t_3003177378, data_3003177379, data_3003177379_Idx, key_3003177380, val_3003177381, hc_3003177382, h_3003177383) {
    data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field1 = nimCopy(data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field1, key_3003177380, NTI3019898905);
    data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field2 = val_3003177381;
    data_3003177379[data_3003177379_Idx][chckIndx(h_3003177383, 0, (data_3003177379[data_3003177379_Idx]).length - 1)].Field0 = hc_3003177382;

  
}

function enlarge_3003176938(t_3003176941) {
    var n_3003176944 = [];
    n_3003176944 = new Array(chckRange(mulInt((t_3003176941.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003176941.data).length, 2), 0, 2147483647) ; ++i) { n_3003176944[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_3003176941.data; t_3003176941.data = n_3003176944; n_3003176944 = Temporary1;    Label2: {
      var i_3003177042 = 0;
      var colontmp__2952802036 = 0;
      colontmp__2952802036 = (n_3003176944).length - 1;
      var res_2952802037 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952802037 <= colontmp__2952802036)) break Label4;
            i_3003177042 = res_2952802037;
            var eh_3003177123 = n_3003176944[chckIndx(i_3003177042, 0, (n_3003176944).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003177123)) {
            var j_3003177127 = (eh_3003177123 & (t_3003176941.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003176941.data[chckIndx(j_3003177127, 0, (t_3003176941.data).length - 1)].Field0)) break Label6;
                  j_3003177127 = nextTry_1308622883(j_3003177127, (t_3003176941.data).length - 1);
                }
            };
            rawInsert_3003177374(t_3003176941, t_3003176941, "data", n_3003176944[chckIndx(i_3003177042, 0, (n_3003176944).length - 1)].Field1, n_3003176944[chckIndx(i_3003177042, 0, (n_3003176944).length - 1)].Field2, eh_3003177123, j_3003177127);
            }
            
            res_2952802037 = addInt(res_2952802037, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003177624(t_3003177627, key_3003177628, hc_3003177629) {
  var result_3003177630 = 0;

  BeforeRet: {
    if (((t_3003177627.data).length == 0)) {
    result_3003177630 = -1;
    break BeforeRet;
    }
    
    var h_3003177715 = (hc_3003177629 & (t_3003177627.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003177627.data[chckIndx(h_3003177715, 0, (t_3003177627.data).length - 1)].Field0)) break Label2;
          if (((t_3003177627.data[chckIndx(h_3003177715, 0, (t_3003177627.data).length - 1)].Field0 == hc_3003177629) && HEX3DHEX3D_3003123049(t_3003177627.data[chckIndx(h_3003177715, 0, (t_3003177627.data).length - 1)].Field1, key_3003177628))) {
          result_3003177630 = h_3003177715;
          break BeforeRet;
          }
          
          h_3003177715 = nextTry_1308622883(h_3003177715, (t_3003177627.data).length - 1);
        }
    };
    result_3003177630 = subInt(-1, h_3003177715);
  };

  return result_3003177630;

}

function HEX5BHEX5DHEX3D_3003176413(t_3003176416, key_3003176417, val_3003176418) {
    if (((t_3003176416.data).length == 0)) {
    var correctSizeHEX60gensym383_3003176501 = slotsNeeded_1308622891(32);
    t_3003176416.counter = 0;
    t_3003176416.data = new Array(chckRange(correctSizeHEX60gensym383_3003176501, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym383_3003176501, 0, 2147483647) ; ++i) { t_3003176416.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_3003176506 = [0];
    var index_3003176513 = rawGet_3003122705(t_3003176416, key_3003176417, hc_3003176506, 0);
    if ((0 <= index_3003176513)) {
    t_3003176416.data[chckIndx(index_3003176513, 0, (t_3003176416.data).length - 1)].Field2 = val_3003176418;
    }
    else {
      if (((t_3003176416.data).length == 0)) {
      var correctSizeHEX60gensym386_3003176676 = slotsNeeded_1308622891(32);
      t_3003176416.counter = 0;
      t_3003176416.data = new Array(chckRange(correctSizeHEX60gensym386_3003176676, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym386_3003176676, 0, 2147483647) ; ++i) { t_3003176416.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003176681(t_3003176416)) {
      enlarge_3003176938(t_3003176416);
      index_3003176513 = rawGetKnownHC_3003177624(t_3003176416, key_3003176417, hc_3003176506[0]);
      }
      
      index_3003176513 = subInt(-1, index_3003176513);
      rawInsert_3003177374(t_3003176416, t_3003176416, "data", key_3003176417, val_3003176418, hc_3003176506[0], index_3003176513);
      t_3003176416.counter = addInt(t_3003176416.counter, 1);
    }
    

  
}

function len_3003179189(t_3003179192) {
  var result_3003179193 = 0;

    result_3003179193 = t_3003179192.counter;

  return result_3003179193;

}

function len_3003179106(cache_3003179109) {
  var result_3003179110 = 0;

    result_3003179110 = len_3003179189(cache_3003179109.table);

  return result_3003179110;

}

function del_3003180796(t_3003180799, key_3003180800) {
    var hc_3003180801 = [0];
    var i_3003180808 = rawGet_3003122705(t_3003180799, key_3003180800, hc_3003180801, 0);
    var mskHEX60gensym36_3003180812 = (t_3003180799.data).length - 1;
    if ((0 <= i_3003180808)) {
    t_3003180799.counter = subInt(t_3003180799.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003180819 = i_3003180808;
            var rHEX60gensym36_3003180820 = jHEX60gensym36_3003180819;
            t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field0 = 0;
            t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field1 = nimCopy(t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003180808 = (addInt(i_3003180808, 1) & mskHEX60gensym36_3003180812);
                  if (isEmpty_1308622877(t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003180820 = (t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)].Field0 & mskHEX60gensym36_3003180812);
                  if (!(((((rHEX60gensym36_3003180820 <= i_3003180808) && (jHEX60gensym36_3003180819 < rHEX60gensym36_3003180820)) || ((jHEX60gensym36_3003180819 < rHEX60gensym36_3003180820) && (i_3003180808 < jHEX60gensym36_3003180819))) || ((i_3003180808 < jHEX60gensym36_3003180819) && (rHEX60gensym36_3003180820 <= i_3003180808))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003180799.data[chckIndx(jHEX60gensym36_3003180819, 0, (t_3003180799.data).length - 1)] = nimCopy(t_3003180799.data[chckIndx(jHEX60gensym36_3003180819, 0, (t_3003180799.data).length - 1)], t_3003180799.data[chckIndx(i_3003180808, 0, (t_3003180799.data).length - 1)], NTI3003121762);
          }
      };
    };
    }
    

  
}

function resize_3003179024(cache_3003179027) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003179027.capacity < len_3003179106(cache_3003179027))) break Label2;
          var t_3003179194 = cache_3003179027.list.tail;
          if (cache_3003179027.recordRemovedKeys) {
          incl_3003179214(cache_3003179027.removedKeys, t_3003179194.value.key);
          }
          
          del_3003180796(cache_3003179027.table, t_3003179194.value.key);
          remove_3003123372(cache_3003179027.list, t_3003179194);
        }
    };

  
}

function addNewNode_3003176332(cache_3003176335, key_3003176336, val_3003176337) {
    var node_3003176349 = newDoublyLinkedNode_3003176340({key: nimCopy(null, key_3003176336, NTI3019898905), val: val_3003176337});
    HEX5BHEX5DHEX3D_3003176413(cache_3003176335.table, key_3003176336, node_3003176349);
    prepend_3003123700(cache_3003176335.list, node_3003176349);
    if (cache_3003176335.recordRemovedKeys) {
    excl_3003178043(cache_3003176335.removedKeys, key_3003176336);
    }
    
    resize_3003179024(cache_3003176335);

  
}

function HEX5BHEX5DHEX3D_3003176113(cache_3003176116, key_3003176117, val_3003176118) {
    var node_3003176305 = getOrDefault_3003176208(cache_3003176116.table, key_3003176117, null);
    if ((node_3003176305 == null)) {
    addNewNode_3003176332(cache_3003176116, key_3003176117, val_3003176118);
    }
    else {
      node_3003176305.value.val = val_3003176118;
      remove_3003123372(cache_3003176116.list, node_3003176305);
      prepend_3003123700(cache_3003176116.list, node_3003176305);
    }
    

  
}

function insertNode_3003233870(ctx_3003233871, node_3003233872) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_3003233871.depGraph.revision = addInt(ctx_3003233871.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(node_3003233872), Field1: -1}, ctx_3003233871.depGraph.revision);
    if (!((node_3003233872.parent == null))) {
    HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(node_3003233872.parent), Field1: -1}, ctx_3003233871.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_3003176113(ctx_3003233871.itemsAstNode, getItem_3003175953(node_3003233872), node_3003233872);
    Label1: {
      var key_3003234088 = 0;
      var child_3003234089 = null;
      var n_2952802025 = node_3003233872;
      var idx_2952802026 = -1;
      var i_2952802027 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2952802026 == -1)) {
            var colontmp__2952802030 = nimCopy(null, {Field0: i_2952802027, Field1: n_2952802025}, NTI2986345785);
            key_3003234088 = colontmp__2952802030["Field0"];
            child_3003234089 = colontmp__2952802030["Field1"];
            HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(child_3003234089), Field1: -1}, ctx_3003233871.depGraph.revision);
            HEX5BHEX5DHEX3D_3003176113(ctx_3003233871.itemsAstNode, getItem_3003175953(child_3003234089), child_3003234089);
            }
            
            if ((addInt(idx_2952802026, 1) < len_2986344536(n_2952802025))) {
            n_2952802025 = HEX5BHEX5D_2986344532(n_2952802025, addInt(idx_2952802026, 1));
            idx_2952802026 = -1;
            }
            else {
              var oHEX60gensym74_2952802031 = next_2986344641(n_2952802025);
              if (!isSome_2986346330(oHEX60gensym74_2952802031)) Temporary5 = false; else {                var ne_2952802032 = get_2986346350(oHEX60gensym74_2952802031);
                Temporary5 = true;              }            if (Temporary5) {
            n_2952802025 = ne_2952802032;
            idx_2952802026 = -1;
            }
            else {
            if ((!((n_2952802025.parent == null)) && !((n_2952802025.parent == node_3003233872)))) {
            idx_2952802026 = index_2986344556(n_2952802025);
            n_2952802025 = n_2952802025.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2952802027 = addInt(i_2952802027, 1);
            }
          }
      };
    };
    var parent_3003234228 = node_3003233872.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_3003234228 == null))) Temporary8 = false; else {            var oHEX60gensym752_3003234235 = findWithParentRec_2986346373(parent_3003234228, 11);
            if (!isSome_2986346330(oHEX60gensym752_3003234235)) Temporary9 = false; else {              var child_3003234281 = get_2986346350(oHEX60gensym752_3003234235);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_3003234282 = child_3003234281.parent;
          HEX5BHEX5DHEX3D_3019910340(ctx_3003233871.depGraph.changed, {Field0: getItem_3003175953(functionDefinition_3003234282), Field1: -1}, ctx_3003233871.depGraph.revision);
          parent_3003234228 = functionDefinition_3003234282.parent;
        }
    };

  
}

function mustRehash_2952794928(t_2952794930) {
  var result_2952794931 = false;

    if (!((t_2952794930.counter < (t_2952794930.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2952794931 = ((mulInt((t_2952794930.data).length, 2) < mulInt(t_2952794930.counter, 3)) || (subInt((t_2952794930.data).length, t_2952794930.counter) < 4));

  return result_2952794931;

}

function rawInsert_2952795537(t_2952795541, data_2952795542, data_2952795542_Idx, key_2952795543, val_2952795544, hc_2952795545, h_2952795546) {
    data_2952795542[data_2952795542_Idx][chckIndx(h_2952795546, 0, (data_2952795542[data_2952795542_Idx]).length - 1)].Field1 = nimCopy(data_2952795542[data_2952795542_Idx][chckIndx(h_2952795546, 0, (data_2952795542[data_2952795542_Idx]).length - 1)].Field1, key_2952795543, NTI2181038083);
    data_2952795542[data_2952795542_Idx][chckIndx(h_2952795546, 0, (data_2952795542[data_2952795542_Idx]).length - 1)].Field2 = val_2952795544;
    data_2952795542[data_2952795542_Idx][chckIndx(h_2952795546, 0, (data_2952795542[data_2952795542_Idx]).length - 1)].Field0 = hc_2952795545;

  
}

function enlarge_2952795131(t_2952795134) {
    var n_2952795137 = [];
    n_2952795137 = new Array(chckRange(mulInt((t_2952795134.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2952795134.data).length, 2), 0, 2147483647) ; ++i) { n_2952795137[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2952795134.data; t_2952795134.data = n_2952795137; n_2952795137 = Temporary1;    Label2: {
      var i_2952795217 = 0;
      var colontmp__2952802045 = 0;
      colontmp__2952802045 = (n_2952795137).length - 1;
      var res_2952802046 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952802046 <= colontmp__2952802045)) break Label4;
            i_2952795217 = res_2952802046;
            var eh_2952795295 = n_2952795137[chckIndx(i_2952795217, 0, (n_2952795137).length - 1)].Field0;
            if (isFilled_1308622880(eh_2952795295)) {
            var j_2952795299 = (eh_2952795295 & (t_2952795134.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2952795134.data[chckIndx(j_2952795299, 0, (t_2952795134.data).length - 1)].Field0)) break Label6;
                  j_2952795299 = nextTry_1308622883(j_2952795299, (t_2952795134.data).length - 1);
                }
            };
            rawInsert_2952795537(t_2952795134, t_2952795134, "data", n_2952795137[chckIndx(i_2952795217, 0, (n_2952795137).length - 1)].Field1, n_2952795137[chckIndx(i_2952795217, 0, (n_2952795137).length - 1)].Field2, eh_2952795295, j_2952795299);
            }
            
            res_2952802046 = addInt(res_2952802046, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2952795778(t_2952795781, key_2952795782, hc_2952795783) {
  var result_2952795784 = 0;

  BeforeRet: {
    if (((t_2952795781.data).length == 0)) {
    result_2952795784 = -1;
    break BeforeRet;
    }
    
    var h_2952795851 = (hc_2952795783 & (t_2952795781.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2952795781.data[chckIndx(h_2952795851, 0, (t_2952795781.data).length - 1)].Field0)) break Label2;
          if (((t_2952795781.data[chckIndx(h_2952795851, 0, (t_2952795781.data).length - 1)].Field0 == hc_2952795783) && HEX3DHEX3D_2181038320(t_2952795781.data[chckIndx(h_2952795851, 0, (t_2952795781.data).length - 1)].Field1, key_2952795782))) {
          result_2952795784 = h_2952795851;
          break BeforeRet;
          }
          
          h_2952795851 = nextTry_1308622883(h_2952795851, (t_2952795781.data).length - 1);
        }
    };
    result_2952795784 = subInt(-1, h_2952795851);
  };

  return result_2952795784;

}

function HEX5BHEX5DHEX3D_2952794699(t_2952794702, key_2952794703, val_2952794704) {
    if (((t_2952794702.data).length == 0)) {
    var correctSizeHEX60gensym88_2952794769 = slotsNeeded_1308622891(32);
    t_2952794702.counter = 0;
    t_2952794702.data = new Array(chckRange(correctSizeHEX60gensym88_2952794769, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym88_2952794769, 0, 2147483647) ; ++i) { t_2952794702.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2952794774 = [0];
    var index_2952794781 = rawGet_3187671114(t_2952794702, key_2952794703, hc_2952794774, 0);
    if ((0 <= index_2952794781)) {
    t_2952794702.data[chckIndx(index_2952794781, 0, (t_2952794702.data).length - 1)].Field2 = val_2952794704;
    }
    else {
      if (((t_2952794702.data).length == 0)) {
      var correctSizeHEX60gensym91_2952794923 = slotsNeeded_1308622891(32);
      t_2952794702.counter = 0;
      t_2952794702.data = new Array(chckRange(correctSizeHEX60gensym91_2952794923, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym91_2952794923, 0, 2147483647) ; ++i) { t_2952794702.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2952794928(t_2952794702)) {
      enlarge_2952795131(t_2952794702);
      index_2952794781 = rawGetKnownHC_2952795778(t_2952794702, key_2952794703, hc_2952794774[0]);
      }
      
      index_2952794781 = subInt(-1, index_2952794781);
      rawInsert_2952795537(t_2952794702, t_2952794702, "data", key_2952794703, val_2952794704, hc_2952794774[0], index_2952794781);
      t_2952794702.counter = addInt(t_2952794702.counter, 1);
    }
    

  
}

function handleNodeInserted_2952794613(doc_2952794614, node_2952794615) {
              var Temporary8;

    var fmtRes_2952794620 = [mnewString(0)];
    fmtRes_2952794620[0].push.apply(fmtRes_2952794620[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008579(fmtRes_2952794620, 0, node_2952794615, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794620[0], NTI33554449)]);
    insertNode_3003233870(ctx_2952790069, node_2952794615);
    Label1: {
      var handler_2952794648 = null;
      var i_2952802011 = 0;
      var L_2952802012 = (doc_2952794614.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802011 < L_2952802012)) break Label3;
            handler_2952794648 = doc_2952794614.onNodeInserted[chckIndx(i_2952802011, 0, (doc_2952794614.onNodeInserted).length - 1)];
            handler_2952794648(doc_2952794614, node_2952794615);
            i_2952802011 = addInt(i_2952802011, 1);
            if (!(((doc_2952794614.onNodeInserted).length == L_2952802012))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2952794699(doc_2952794614.nodes, node_2952794615.id, node_2952794615);
    Label4: {
      var key_2952796104 = 0;
      var child_2952796105 = null;
      var n_2952802016 = node_2952794615;
      var idx_2952802017 = -1;
      var i_2952802018 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2952802017 == -1)) {
            var colontmp__2952802021 = nimCopy(null, {Field0: i_2952802018, Field1: n_2952802016}, NTI2986345785);
            key_2952796104 = colontmp__2952802021["Field0"];
            child_2952796105 = colontmp__2952802021["Field1"];
            HEX5BHEX5DHEX3D_2952794699(doc_2952794614.nodes, child_2952796105.id, child_2952796105);
            }
            
            if ((addInt(idx_2952802017, 1) < len_2986344536(n_2952802016))) {
            n_2952802016 = HEX5BHEX5D_2986344532(n_2952802016, addInt(idx_2952802017, 1));
            idx_2952802017 = -1;
            }
            else {
              var oHEX60gensym74_2952802022 = next_2986344641(n_2952802016);
              if (!isSome_2986346330(oHEX60gensym74_2952802022)) Temporary8 = false; else {                var ne_2952802023 = get_2986346350(oHEX60gensym74_2952802022);
                Temporary8 = true;              }            if (Temporary8) {
            n_2952802016 = ne_2952802023;
            idx_2952802017 = -1;
            }
            else {
            if ((!((n_2952802016.parent == null)) && !((n_2952802016.parent == node_2952794615)))) {
            idx_2952802017 = index_2986344556(n_2952802016);
            n_2952802016 = n_2952802016.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2952802018 = addInt(i_2952802018, 1);
            }
          }
      };
    };

  
}

function replaceNode_2952798456(document_2952798457, node_2952798458, newNode_2952798459) {
  var result_2952798460 = null;

  BeforeRet: {
    if ((node_2952798458.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2952798466 = index_2986344556(node_2952798458);
    document_2952798457.undoOps.push({kind: 1, parent: node_2952798458.parent, idx: idx_2952798466, node: node_2952798458, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2952798457.redoOps = nimCopy(null, [], NTI2952794769);
    handleNodeDelete_2952796188(document_2952798457, node_2952798458);
    HEX5BHEX5DHEX3D_2986344712(node_2952798458.parent, idx_2952798466, newNode_2952798459);
    handleNodeInserted_2952794613(document_2952798457, newNode_2952798459);
    result_2952798460 = newNode_2952798459;
    break BeforeRet;
  };

  return result_2952798460;

}

function delete_2986344720(x_2986344722, x_2986344722_Idx, i_2986344723) {
    x_2986344722[x_2986344722_Idx].splice(i_2986344723, 1);

  
}

function delete_2986344716(node_2986344717, index_2986344718) {
  var result_2986344719 = null;

  BeforeRet: {
    if (((index_2986344718 < 0) || (len_2986344536(node_2986344717) <= index_2986344718))) {
    result_2986344719 = node_2986344717;
    break BeforeRet;
    }
    
    HEX5BHEX5D_2986344532(node_2986344717, index_2986344718).parent = null;
    delete_2986344720(node_2986344717, "children", chckRange(index_2986344718, 0, 2147483647));
    if ((index_2986344718 < len_2986344536(node_2986344717))) {
    result_2986344719 = HEX5BHEX5D_2986344532(node_2986344717, index_2986344718);
    break BeforeRet;
    }
    else {
    if ((0 < len_2986344536(node_2986344717))) {
    result_2986344719 = HEX5BHEX5D_2986344532(node_2986344717, subInt(index_2986344718, 1));
    break BeforeRet;
    }
    else {
      result_2986344719 = node_2986344717;
      break BeforeRet;
    }
    }
  };

  return result_2986344719;

}

function deleteNode_2952798520(document_2952798521, node_2952798522) {
  var result_2952798523 = null;

  BeforeRet: {
    if ((node_2952798522.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2952798522.parent == document_2952798521.rootNode) && (len_2986344536(document_2952798521.rootNode) == 1))) {
    result_2952798523 = replaceNode_2952798456(document_2952798521, node_2952798522, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2952798521.undoOps.push({kind: 0, parent: node_2952798522.parent, idx: index_2986344556(node_2952798522), node: node_2952798522, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2952798521.redoOps = nimCopy(null, [], NTI2952794769);
    handleNodeDelete_2952796188(document_2952798521, node_2952798522);
    result_2952798523 = delete_2986344716(node_2952798522.parent, index_2986344556(node_2952798522));
    break BeforeRet;
  };

  return result_2952798523;

}

function deleteSelected_2952801944(self_2952801945) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952801945)) {
    break BeforeRet;
    }
    
    self_2952801945.deletedNode = nimCopy(self_2952801945.deletedNode, some_2986344674(node_2952792695(self_2952801945)), NTI2986344567);
    nodeHEX3D_2952793818(self_2952801945, deleteNode_2952798520(self_2952801945.document, node_2952792695(self_2952801945)));
  };

  
}

function deleteSelectedJsWrapper_2952801940(self_2952801976) {
    deleteSelected_2952801944(self_2952801976);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2952801940(this));};

function initTable_2986346284(initialSize_2986346287) {
  var result_2986346288 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_2986346290 = slotsNeeded_1308622891(chckRange(initialSize_2986346287, 0, 2147483647));
    result_2986346288.counter = 0;
    result_2986346288.data = new Array(chckRange(correctSizeHEX60gensym29_2986346290, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_2986346290, 0, 2147483647) ; ++i) { result_2986346288.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_2986346288;

}

function rawGet_2986344855(t_2986344858, key_2986344859, hc_2986344860, hc_2986344860_Idx) {
  var result_2986344861 = 0;

  BeforeRet: {
    hc_2986344860[hc_2986344860_Idx] = hash_2181038324(key_2986344859);
    if ((hc_2986344860[hc_2986344860_Idx] == 0)) {
    hc_2986344860[hc_2986344860_Idx] = 314159265;
    }
    
    if (((t_2986344858.data).length == 0)) {
    result_2986344861 = -1;
    break BeforeRet;
    }
    
    var h_2986344912 = (hc_2986344860[hc_2986344860_Idx] & (t_2986344858.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986344858.data[chckIndx(h_2986344912, 0, (t_2986344858.data).length - 1)].Field0)) break Label2;
          if (((t_2986344858.data[chckIndx(h_2986344912, 0, (t_2986344858.data).length - 1)].Field0 == hc_2986344860[hc_2986344860_Idx]) && HEX3DHEX3D_2181038320(t_2986344858.data[chckIndx(h_2986344912, 0, (t_2986344858.data).length - 1)].Field1, key_2986344859))) {
          result_2986344861 = h_2986344912;
          break BeforeRet;
          }
          
          h_2986344912 = nextTry_1308622883(h_2986344912, (t_2986344858.data).length - 1);
        }
    };
    result_2986344861 = subInt(-1, h_2986344912);
  };

  return result_2986344861;

}

function mustRehash_2986345200(t_2986345202) {
  var result_2986345203 = false;

    if (!((t_2986345202.counter < (t_2986345202.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986345203 = ((mulInt((t_2986345202.data).length, 2) < mulInt(t_2986345202.counter, 3)) || (subInt((t_2986345202.data).length, t_2986345202.counter) < 4));

  return result_2986345203;

}

function rawInsert_2986345649(t_2986345653, data_2986345654, data_2986345654_Idx, key_2986345655, val_2986345656, hc_2986345657, h_2986345658) {
    data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field1 = nimCopy(data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field1, key_2986345655, NTI2181038083);
    data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field2 = nimCopy(data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field2, val_2986345656, NTI2181038083);
    data_2986345654[data_2986345654_Idx][chckIndx(h_2986345658, 0, (data_2986345654[data_2986345654_Idx]).length - 1)].Field0 = hc_2986345657;

  
}

function enlarge_2986345355(t_2986345358) {
    var n_2986345361 = [];
    n_2986345361 = new Array(chckRange(mulInt((t_2986345358.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986345358.data).length, 2), 0, 2147483647) ; ++i) { n_2986345361[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_2986345358.data; t_2986345358.data = n_2986345361; n_2986345361 = Temporary1;    Label2: {
      var i_2986345425 = 0;
      var colontmp__2952802114 = 0;
      colontmp__2952802114 = (n_2986345361).length - 1;
      var res_2952802115 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2952802115 <= colontmp__2952802114)) break Label4;
            i_2986345425 = res_2952802115;
            var eh_2986345479 = n_2986345361[chckIndx(i_2986345425, 0, (n_2986345361).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986345479)) {
            var j_2986345483 = (eh_2986345479 & (t_2986345358.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986345358.data[chckIndx(j_2986345483, 0, (t_2986345358.data).length - 1)].Field0)) break Label6;
                  j_2986345483 = nextTry_1308622883(j_2986345483, (t_2986345358.data).length - 1);
                }
            };
            rawInsert_2986345649(t_2986345358, t_2986345358, "data", n_2986345361[chckIndx(i_2986345425, 0, (n_2986345361).length - 1)].Field1, n_2986345361[chckIndx(i_2986345425, 0, (n_2986345361).length - 1)].Field2, eh_2986345479, j_2986345483);
            }
            
            res_2952802115 = addInt(res_2952802115, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986345818(t_2986345821, key_2986345822, hc_2986345823) {
  var result_2986345824 = 0;

  BeforeRet: {
    if (((t_2986345821.data).length == 0)) {
    result_2986345824 = -1;
    break BeforeRet;
    }
    
    var h_2986345875 = (hc_2986345823 & (t_2986345821.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986345821.data[chckIndx(h_2986345875, 0, (t_2986345821.data).length - 1)].Field0)) break Label2;
          if (((t_2986345821.data[chckIndx(h_2986345875, 0, (t_2986345821.data).length - 1)].Field0 == hc_2986345823) && HEX3DHEX3D_2181038320(t_2986345821.data[chckIndx(h_2986345875, 0, (t_2986345821.data).length - 1)].Field1, key_2986345822))) {
          result_2986345824 = h_2986345875;
          break BeforeRet;
          }
          
          h_2986345875 = nextTry_1308622883(h_2986345875, (t_2986345821.data).length - 1);
        }
    };
    result_2986345824 = subInt(-1, h_2986345875);
  };

  return result_2986345824;

}

function HEX5BHEX5DHEX3D_2986344794(t_2986344797, key_2986344798, val_2986344799) {
    if (((t_2986344797.data).length == 0)) {
    var correctSizeHEX60gensym15_2986344849 = slotsNeeded_1308622891(32);
    t_2986344797.counter = 0;
    t_2986344797.data = new Array(chckRange(correctSizeHEX60gensym15_2986344849, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2986344849, 0, 2147483647) ; ++i) { t_2986344797.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_2986344854 = [0];
    var index_2986345093 = rawGet_2986344855(t_2986344797, key_2986344798, hc_2986344854, 0);
    if ((0 <= index_2986345093)) {
    t_2986344797.data[chckIndx(index_2986345093, 0, (t_2986344797.data).length - 1)].Field2 = nimCopy(t_2986344797.data[chckIndx(index_2986345093, 0, (t_2986344797.data).length - 1)].Field2, val_2986344799, NTI2181038083);
    }
    else {
      if (((t_2986344797.data).length == 0)) {
      var correctSizeHEX60gensym20_2986345195 = slotsNeeded_1308622891(32);
      t_2986344797.counter = 0;
      t_2986344797.data = new Array(chckRange(correctSizeHEX60gensym20_2986345195, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2986345195, 0, 2147483647) ; ++i) { t_2986344797.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_2986345200(t_2986344797)) {
      enlarge_2986345355(t_2986344797);
      index_2986345093 = rawGetKnownHC_2986345818(t_2986344797, key_2986344798, hc_2986344854[0]);
      }
      
      index_2986345093 = subInt(-1, index_2986345093);
      rawInsert_2986345649(t_2986344797, t_2986344797, "data", key_2986344798, val_2986344799, hc_2986344854[0], index_2986345093);
      t_2986344797.counter = addInt(t_2986344797.counter, 1);
    }
    

  
}

function add_2986344486(node_2986344487, child_2986344488) {
    if (HEX3DHEX3D_2181038320(node_2986344487.id, null_2181038340)) {
    node_2986344487.id = nimCopy(node_2986344487.id, newId_2181038297(), NTI2181038083);
    }
    
    if (HEX3DHEX3D_2181038320(child_2986344488.id, null_2181038340)) {
    child_2986344488.id = nimCopy(child_2986344488.id, newId_2181038297(), NTI2181038083);
    }
    
    child_2986344488.parent = node_2986344487;
    node_2986344487.children.push(child_2986344488);;

  
}

function clone_2986344742(node_2986344743, idMap_2986344751) {
  var result_2986344752 = null;

    var newNodeId_2986344753 = newId_2181038297();
    result_2986344752 = {kind: node_2986344743.kind, id: nimCopy(null, newNodeId_2986344753, NTI2181038083), reff: nimCopy(null, node_2986344743.reff, NTI2181038083), text: nimCopy(null, node_2986344743.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_2986344794(idMap_2986344751, node_2986344743.id, newNodeId_2986344753);
    Label1: {
      var child_2986346059 = null;
      var i_2952802108 = 0;
      var L_2952802109 = (node_2986344743.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802108 < L_2952802109)) break Label3;
            child_2986346059 = node_2986344743.children[chckIndx(i_2952802108, 0, (node_2986344743.children).length - 1)];
            add_2986344486(result_2986344752, clone_2986344742(child_2986346059, idMap_2986344751));
            i_2952802108 = addInt(i_2952802108, 1);
            if (!(((node_2986344743.children).length == L_2952802109))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2986344752;

}

function hasKey_2986346131(t_2986346134, key_2986346135) {
  var result_2986346136 = false;

    var hc_2986346137 = [0];
    result_2986346136 = (0 <= rawGet_2986344855(t_2986346134, key_2986346135, hc_2986346137, 0));

  return result_2986346136;

}

function contains_2986346125(t_2986346128, key_2986346129) {
  var result_2986346130 = false;

  BeforeRet: {
    result_2986346130 = hasKey_2986346131(t_2986346128, key_2986346129);
    break BeforeRet;
  };

  return result_2986346130;

}

function HEX5BHEX5D_2986346197(t_2986346200, key_2986346201) {
  var result_2986346202 = null;

    var hcHEX60gensym22_2986346203 = [0];
    var indexHEX60gensym22_2986346210 = rawGet_2986344855(t_2986346200, key_2986346201, hcHEX60gensym22_2986346203, 0);
    if ((0 <= indexHEX60gensym22_2986346210)) {
    result_2986346202 = t_2986346200.data[chckIndx(indexHEX60gensym22_2986346210, 0, (t_2986346200.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2986346264(key_2986346201);
    }
    

  return result_2986346202;

}

function replaceReferences_2986346078(node_2986346079, idMap_2986346082) {
    if (contains_2986346125(idMap_2986346082, node_2986346079.reff)) {
    node_2986346079.reff = nimCopy(node_2986346079.reff, HEX5BHEX5D_2986346197(idMap_2986346082, node_2986346079.reff), NTI2181038083);
    }
    
    Label1: {
      var child_2986346280 = null;
      var i_2952802119 = 0;
      var L_2952802120 = (node_2986346079.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802119 < L_2952802120)) break Label3;
            child_2986346280 = node_2986346079.children[chckIndx(i_2952802119, 0, (node_2986346079.children).length - 1)];
            replaceReferences_2986346078(child_2986346280, idMap_2986346082);
            i_2952802119 = addInt(i_2952802119, 1);
            if (!(((node_2986346079.children).length == L_2952802120))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_2986346281(node_2986346282) {
  var result_2986346283 = null;

  BeforeRet: {
    var idMap_2986346295 = [initTable_2986346284(32)];
    var newNode_2986346296 = clone_2986344742(node_2986346282, idMap_2986346295[0]);
    replaceReferences_2986346078(newNode_2986346296, idMap_2986346295[0]);
    result_2986346283 = newNode_2986346296;
    break BeforeRet;
  };

  return result_2986346283;

}

function copySelected_2952802060(self_2952802061) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952802061)) {
    break BeforeRet;
    }
    
    self_2952802061.deletedNode = nimCopy(self_2952802061.deletedNode, some_2986344674(cloneAndMapIds_2986346281(node_2952792695(self_2952802061))), NTI2986344567);
  };

  
}

function copySelectedJsWrapper_2952802056(self_2952802092) {
    copySelected_2952802060(self_2952802092);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2952802056(this));};

function getSymbol_3003185027(ctxHEX60gensym80_3003185028, idHEX60gensym80_3003185029) {
  var result_3003185031 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym80_3003185032 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym80_3003185029, NTI2181038083), Field1: 2}, NTI3019898905);
    if (contains_3003143495(ctxHEX60gensym80_3003185028.itemsSymbol, itemHEX60gensym80_3003185032)) {
    result_3003185031 = nimCopy(result_3003185031, some_3003185199(HEX5BHEX5D_3003144048(ctxHEX60gensym80_3003185028.itemsSymbol, itemHEX60gensym80_3003185032)), NTI3087008904);
    break BeforeRet;
    }
    
    result_3003185031 = nimCopy(result_3003185031, none_3003185212(), NTI3087008904);
    break BeforeRet;
  };

  return result_3003185031;

}

function content_2818573982(document_2818573983) {
  var result_2818573984 = [];

  BeforeRet: {
    result_2818573984 = nimCopy(null, document_2818573983.lines, NTI2818572428);
    break BeforeRet;
  };

  return result_2818573984;

}

function updateNode_3003234352(ctx_3003234353, node_3003234354) {
          var Temporary3;
            var Temporary4;

    ctx_3003234353.depGraph.revision = addInt(ctx_3003234353.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3019910340(ctx_3003234353.depGraph.changed, {Field0: getItem_3003175953(node_3003234354), Field1: -1}, ctx_3003234353.depGraph.revision);
    var parent_3003234428 = node_3003234354.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_3003234428 == null))) Temporary3 = false; else {            var oHEX60gensym754_3003234435 = findWithParentRec_2986346373(parent_3003234428, 11);
            if (!isSome_2986346330(oHEX60gensym754_3003234435)) Temporary4 = false; else {              var child_3003234481 = get_2986346350(oHEX60gensym754_3003234435);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_3003234482 = child_3003234481.parent;
          HEX5BHEX5DHEX3D_3019910340(ctx_3003234353.depGraph.changed, {Field0: getItem_3003175953(functionDefinition_3003234482), Field1: -1}, ctx_3003234353.depGraph.revision);
          parent_3003234428 = functionDefinition_3003234482.parent;
        }
    };
    var fmtRes_3003234556 = [mnewString(0)];
    fmtRes_3003234556[0].push.apply(fmtRes_3003234556[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008579(fmtRes_3003234556, 0, node_3003234354, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003234556[0], NTI33554449)]);

  
}

function notifySymbolChanged_3003233784(ctx_3003233785, sym_3003233786) {
    ctx_3003233785.depGraph.revision = addInt(ctx_3003233785.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3019910340(ctx_3003233785.depGraph.changed, {Field0: getItem_3003185222(sym_3003233786), Field1: -1}, ctx_3003233785.depGraph.revision);
    var fmtRes_3003233864 = [mnewString(0)];
    fmtRes_3003233864[0].push.apply(fmtRes_3003233864[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_3003233864, 0, sym_3003233786.name, []);
    fmtRes_3003233864[0].push.apply(fmtRes_3003233864[0], [32,40]);;
    formatValue_3019899100(fmtRes_3003233864, 0, sym_3003233786.id, []);
    fmtRes_3003233864[0].push.apply(fmtRes_3003233864[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_3003233864[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2952802233 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802233 < rows_1979711496)) break Label3;
            i_1979711534 = i_2952802233;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2952802233 = addInt(i_2952802233, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2952802239 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2952802239 < rows_1979711496)) break Label6;
            i_1979711551 = i_2952802239;
            Label7: {
              var k_1979711556 = 0;
              var i_2952802237 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2952802237 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2952802237;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2952802237 = addInt(i_2952802237, 1);
                  }
              };
            };
            i_2952802239 = addInt(i_2952802239, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2952802245 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2952802245 < cols_1979711497)) break Label12;
            col_1979711561 = i_2952802245;
            Label13: {
              var row_1979711566 = 0;
              var i_2952802243 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2952802243 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2952802243;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2952802243 = addInt(i_2952802243, 1);
                  }
              };
            };
            i_2952802245 = addInt(i_2952802245, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2952802255 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952802255 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2952802255];
            addChar(str_33557214, x_33557228);;
            i_2952802255 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3170893928(len_3170893930) {
  var result_3170893931 = [];

    result_3170893931 = new Array(len_3170893930); for (var i = 0 ; i < len_3170893930 ; ++i) { result_3170893931[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3170893931;

}

function mergeAlt_3170893967(a_3170893969, b_3170893970, lo_3170893971, m_3170893972, hi_3170893973, cmp_3170893976, order_3170893977) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3170893976(a_3170893969[chckIndx(m_3170893972, 0, (a_3170893969).length - 1)], a_3170893969[chckIndx(addInt(m_3170893972, 1), 0, (a_3170893969).length - 1)]), order_3170893977) <= 0)) {
    break BeforeRet;
    }
    
    var j_3170893978 = lo_3170893971;
    if (!((j_3170893978 <= m_3170893972))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3170893984 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3170893978 <= m_3170893972)) break Label2;
          b_3170893970[chckIndx(bb_3170893984, 0, (b_3170893970).length - 1)] = nimCopy(b_3170893970[chckIndx(bb_3170893984, 0, (b_3170893970).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)], NTI2952791524);
          bb_3170893984 = addInt(bb_3170893984, 1);
          j_3170893978 = addInt(j_3170893978, 1);
        }
    };
    var i_3170893995 = 0;
    var k_3170893996 = lo_3170893971;
    Label3: {
        Label4: while (true) {
        if (!((k_3170893996 < j_3170893978) && (j_3170893978 <= hi_3170893973))) break Label4;
          if ((HEX2A_1023410184(cmp_3170893976(b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)]), order_3170893977) <= 0)) {
          a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], NTI2952791524);
          i_3170893995 = addInt(i_3170893995, 1);
          }
          else {
            a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], a_3170893969[chckIndx(j_3170893978, 0, (a_3170893969).length - 1)], NTI2952791524);
            j_3170893978 = addInt(j_3170893978, 1);
          }
          
          k_3170893996 = addInt(k_3170893996, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3170893996 < j_3170893978)) break Label6;
          a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)] = nimCopy(a_3170893969[chckIndx(k_3170893996, 0, (a_3170893969).length - 1)], b_3170893970[chckIndx(i_3170893995, 0, (b_3170893970).length - 1)], NTI2952791524);
          k_3170893996 = addInt(k_3170893996, 1);
          i_3170893995 = addInt(i_3170893995, 1);
        }
    };
  };

  
}

function sort_3170893916(a_3170893918, cmp_3170893921, order_3170893922) {
    var n_3170893927 = (a_3170893918).length;
    var b_3170893964 = newSeq_3170893928(chckRange(divInt(n_3170893927, 2), 0, 2147483647));
    var s_3170893965 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3170893965 < n_3170893927)) break Label2;
          var m_3170893966 = subInt(subInt(n_3170893927, 1), s_3170893965);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3170893966)) break Label4;
                mergeAlt_3170893967(a_3170893918, b_3170893964, nimMax(addInt(subInt(m_3170893966, s_3170893965), 1), 0), m_3170893966, addInt(m_3170893966, s_3170893965), cmp_3170893921, order_3170893922);
                m_3170893966 = subInt(m_3170893966, mulInt(s_3170893965, 2));
              }
          };
          s_3170893965 = mulInt(s_3170893965, 2);
        }
    };

  
}

function cmp_3170893896(x_3170893898, y_3170893899) {
  var result_3170893900 = 0;

  BeforeRet: {
    if ((x_3170893898 == y_3170893899)) {
    result_3170893900 = 0;
    break BeforeRet;
    }
    
    if ((x_3170893898 < y_3170893899)) {
    result_3170893900 = -1;
    break BeforeRet;
    }
    
    result_3170893900 = 1;
    break BeforeRet;
  };

  return result_3170893900;

}

function getCompletions_2952797675(editor_2952797676, text_2952797677, contextNode_2952797681) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2952797825(a_2952797843, b_2952797844) {
      var result_2952797849 = 0;

        result_2952797849 = cmp_3170893896(a_2952797843.score, b_2952797844.score);

      return result_2952797849;

    }

  var result_2952797682 = [];

  BeforeRet: {
    result_2952797682 = nimCopy(null, [], NTI3170893842);
    if (((isNone_2986346358(contextNode_2952797681) || (get_2986346350(contextNode_2952797681).kind == 1)) || (get_2986346350(contextNode_2952797681).kind == 0))) {
    var symbols_2952797747 = computeSymbols_3003205356(ctx_2952790069, get_2986346350(contextNode_2952797681), true);
    Label1: {
      var key_2952797752 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2952797753 = null;
      var L_2952802224 = len_3087009054(symbols_2952797747);
      Label2: {
        var h_2952802226 = 0;
        var colontmp__2952802227 = 0;
        colontmp__2952802227 = (symbols_2952797747.data).length - 1;
        var res_2952802228 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952802228 <= colontmp__2952802227)) break Label4;
              h_2952802226 = res_2952802228;
              if (isFilled_1308622880(symbols_2952797747.data[chckIndx(h_2952802226, 0, (symbols_2952797747.data).length - 1)].Field0)) {
              var colontmp__2952802231 = nimCopy(null, {Field0: nimCopy(null, symbols_2952797747.data[chckIndx(h_2952802226, 0, (symbols_2952797747.data).length - 1)].Field1, NTI2181038083), Field1: symbols_2952797747.data[chckIndx(h_2952802226, 0, (symbols_2952797747.data).length - 1)].Field2}, NTI3087008730);
              key_2952797752 = nimCopy(key_2952797752, colontmp__2952802231["Field0"], NTI2181038083);
              symbol_2952797753 = colontmp__2952802231["Field1"];
              var score_2952797754 = fuzzyMatch_1979711568(text_2952797677, symbol_2952797753.name);
              result_2952797682.push({kind: 0, score: score_2952797754, id: nimCopy(null, symbol_2952797753.id, NTI2181038083), nodeKind: 0, name: []});;
              if (!((len_3087009054(symbols_2952797747) == L_2952802224))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952802228 = addInt(res_2952802228, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym111_2952797761 = nimCopy(null, contextNode_2952797681, NTI2986344567);
      if (!isSome_2986346330(oHEX60gensym111_2952797761)) Temporary6 = false; else {        var node_2952797784 = get_2986346350(oHEX60gensym111_2952797761);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2952797784.kind == 0);      }    if (Temporary5) {
    result_2952797682.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2952797677, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797682.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2952797677, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797682.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2952797677, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797682.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2952797677, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797682.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2952797677, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2952797677, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2952797682.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797682.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2952797677, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2952797682.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2952797677, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2952797677);
    result_2952797682.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3170893916(result_2952797682, HEX3Aanonymous_2952797825, 0);
    break BeforeRet;
  };

  return result_2952797682;

}

function updateCompletions_2952792683(editor_2952792684) {
  BeforeRet: {
    if ((editor_2952792684.textDocument == null)) {
    editor_2952792684.completions = nimCopy(null, [], NTI3170893842);
    editor_2952792684.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2952797873 = nsuJoinSep(content_2818573982(editor_2952792684.textDocument), []);
    editor_2952792684.completions = nimCopy(null, getCompletions_2952797675(editor_2952792684, text_2952797873, some_2986344674(node_2952792695(editor_2952792684))), NTI2952794161);
    editor_2952792684.completionText = nimCopy(null, text_2952797873, NTI33554449);
    if ((0 < (editor_2952792684.completions).length)) {
    editor_2952792684.selectedCompletion = clamp_1660945119(editor_2952792684.selectedCompletion, 0, subInt((editor_2952792684.completions).length, 1));
    }
    else {
      editor_2952792684.selectedCompletion = 0;
    }
    
  };

  
}

function finishEdit_2952797888(self_2952797889, apply_2952797890) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2952797462(self_2952797889))) {
    break BeforeRet;
    }
    
    if (apply_2952797890) {
    if (!(HEX3DHEX3D_2181038320(self_2952797889.currentlyEditedSymbol, null_2181038340))) {
      var oHEX60gensym633_2952802133 = getSymbol_3003185027(ctx_2952790069, self_2952797889.currentlyEditedSymbol);
      if (!isSome_3087009345(oHEX60gensym633_2952802133)) Temporary1 = false; else {        var sym_2952802156 = get_3087009365(oHEX60gensym633_2952802133);
        Temporary1 = true;      }    if (Temporary1) {
    self_2952797889.document.undoOps.push({kind: 4, id: nimCopy(null, self_2952797889.currentlyEditedSymbol, NTI2181038083), text: nimCopy(null, sym_2952802156.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2952802156.name = nimCopy(null, nsuJoinSep(content_2818573982(self_2952797889.textDocument), []), NTI33554449);
    if ((sym_2952802156.kind == 0)) {
    var Temporary2 = sym_2952802156;
    if (ConstSet166[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
    Temporary2.node.text = nimCopy(null, sym_2952802156.name, NTI33554449);
    var Temporary3 = sym_2952802156;
    if (ConstSet167[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
    updateNode_3003234352(ctx_2952790069, Temporary3.node);
    }
    
    notifySymbolChanged_3003233784(ctx_2952790069, sym_2952802156);
    }
    
    }
    else {
    if (!((self_2952797889.currentlyEditedNode == null))) {
    self_2952797889.document.undoOps.push({kind: 3, node: self_2952797889.currentlyEditedNode, text: nimCopy(null, self_2952797889.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2952797889.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2818573982(self_2952797889.textDocument), [10]), NTI33554449);
    updateNode_3003234352(ctx_2952790069, self_2952797889.currentlyEditedNode);
    }
    }
    }
    
    unregister_2147483811(self_2952797889.textEditor);
    self_2952797889.textEditor = null;
    self_2952797889.textDocument = null;
    self_2952797889.currentlyEditedSymbol = nimCopy(self_2952797889.currentlyEditedSymbol, null_2181038340, NTI2181038083);
    self_2952797889.currentlyEditedNode = null;
    updateCompletions_2952792683(self_2952797889);
  };

  
}

function finishEditJsWrapper_2952802124(self_2952802201, apply_2952802202) {
    finishEdit_2952797888(self_2952802201, apply_2952802202);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2952802124(this, apply_));};

function pop_2952798593(s_2952798595, s_2952798595_Idx) {
  var result_2952798596 = null;

    var L_2952798600 = subInt((s_2952798595[s_2952798595_Idx]).length, 1);
    result_2952798596 = s_2952798595[s_2952798595_Idx][chckIndx(L_2952798600, 0, (s_2952798595[s_2952798595_Idx]).length - 1)];
    if (s_2952798595[s_2952798595_Idx].length < chckRange(L_2952798600, 0, 2147483647)) { for (var i = s_2952798595[s_2952798595_Idx].length ; i < chckRange(L_2952798600, 0, 2147483647) ; ++i) s_2952798595[s_2952798595_Idx].push(null); }
               else { s_2952798595[s_2952798595_Idx].length = chckRange(L_2952798600, 0, 2147483647); };

  return result_2952798596;

}

function formatValue_2952792557(result_2952792559, result_2952792559_Idx, value_2952792560, specifier_2952792561) {
    formatValue_721420459(result_2952792559, result_2952792559_Idx, reprEnum(value_2952792560, NTI2952791367), specifier_2952792561);

  
}

function HEX24_2952792549(op_2952792550) {
  var result_2952792551 = [];

    var fmtRes_2952792556 = [mnewString(0)];
    formatValue_2952792557(fmtRes_2952792556, 0, op_2952792550.kind, []);
    fmtRes_2952792556[0].push.apply(fmtRes_2952792556[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2952792556, 0, op_2952792550.text, []);
    fmtRes_2952792556[0].push.apply(fmtRes_2952792556[0], [39]);;
    result_2952792551 = nimCopy(null, fmtRes_2952792556[0], NTI33554449);
    if (!(HEX3DHEX3D_2181038320(op_2952792550.id, null_2181038340))) {
    var fmtRes_2952792569 = [mnewString(0)];
    fmtRes_2952792569[0].push.apply(fmtRes_2952792569[0], [44,32,105,100,32,61,32]);;
    formatValue_3019899100(fmtRes_2952792569, 0, op_2952792550.id, []);
    result_2952792551.push.apply(result_2952792551, fmtRes_2952792569[0]);;
    }
    
    if (!((op_2952792550.node == null))) {
    var fmtRes_2952792583 = [mnewString(0)];
    fmtRes_2952792583[0].push.apply(fmtRes_2952792583[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3087008579(fmtRes_2952792583, 0, op_2952792550.node, []);
    result_2952792551.push.apply(result_2952792551, fmtRes_2952792583[0]);;
    }
    
    if (!((op_2952792550.parent == null))) {
    var fmtRes_2952792597 = [mnewString(0)];
    fmtRes_2952792597[0].push.apply(fmtRes_2952792597[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3087008579(fmtRes_2952792597, 0, op_2952792550.parent, []);
    fmtRes_2952792597[0].push.apply(fmtRes_2952792597[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2332033380(fmtRes_2952792597, 0, op_2952792550.idx, []);
    result_2952792551.push.apply(result_2952792551, fmtRes_2952792597[0]);;
    }
    

  return result_2952792551;

}

function formatValue_2952798611(result_2952798613, result_2952798613_Idx, value_2952798614, specifier_2952798615) {
    formatValue_721420459(result_2952798613, result_2952798613_Idx, HEX24_2952792549(value_2952798614), specifier_2952798615);

  
}

function insert_2986344506(x_2986344508, x_2986344508_Idx, item_2986344509, i_2986344510) {
    var it_2986344531 = null;
    x_2986344508[x_2986344508_Idx] = x_2986344508[x_2986344508_Idx] || []; x_2986344508[x_2986344508_Idx].splice(i_2986344510, 0, it_2986344531);
    x_2986344508[x_2986344508_Idx][chckIndx(i_2986344510, 0, (x_2986344508[x_2986344508_Idx]).length - 1)] = item_2986344509;

  
}

function insert_2986344502(node_2986344503, child_2986344504, idx_2986344505) {
    if (HEX3DHEX3D_2181038320(node_2986344503.id, null_2181038340)) {
    node_2986344503.id = nimCopy(node_2986344503.id, newId_2181038297(), NTI2181038083);
    }
    
    if (HEX3DHEX3D_2181038320(child_2986344504.id, null_2181038340)) {
    child_2986344504.id = nimCopy(child_2986344504.id, newId_2181038297(), NTI2181038083);
    }
    
    child_2986344504.parent = node_2986344503;
    insert_2986344506(node_2986344503, "children", child_2986344504, chckRange(idx_2986344505, 0, 2147483647));

  
}

function undo_2952798583(document_2952798584) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952798586 = ({val: null});

  BeforeRet: {
    if (((document_2952798584.undoOps).length == 0)) {
    result_2952798586 = nimCopy(result_2952798586, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var undoOp_2952798605 = pop_2952798593(document_2952798584, "undoOps");
    var fmtRes_2952798610 = [mnewString(0)];
    fmtRes_2952798610[0].push.apply(fmtRes_2952798610[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2952798611(fmtRes_2952798610, 0, undoOp_2952798605, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952798610[0], NTI33554449)]);
    switch (undoOp_2952798605.kind) {
    case 0:
      insert_2986344502(undoOp_2952798605.parent, undoOp_2952798605.node, undoOp_2952798605.idx);
      handleNodeInserted_2952794613(document_2952798584, undoOp_2952798605.node);
      document_2952798584.redoOps.push(undoOp_2952798605);;
      result_2952798586 = nimCopy(result_2952798586, some_2986344674(undoOp_2952798605.node), NTI2986344567);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2952798623 = HEX5BHEX5D_2986344532(undoOp_2952798605.parent, undoOp_2952798605.idx);
      handleNodeDelete_2952796188(document_2952798584, HEX5BHEX5D_2986344532(undoOp_2952798605.parent, undoOp_2952798605.idx));
      HEX5BHEX5DHEX3D_2986344712(undoOp_2952798605.parent, undoOp_2952798605.idx, undoOp_2952798605.node);
      handleNodeInserted_2952794613(document_2952798584, undoOp_2952798605.node);
      document_2952798584.redoOps.push({kind: 1, parent: undoOp_2952798605.parent, idx: undoOp_2952798605.idx, node: oldNode_2952798623, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2952798586 = nimCopy(result_2952798586, some_2986344674(undoOp_2952798605.node), NTI2986344567);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2952796188(document_2952798584, HEX5BHEX5D_2986344532(undoOp_2952798605.parent, undoOp_2952798605.idx));
      var _ = delete_2986344716(undoOp_2952798605.parent, undoOp_2952798605.idx);
      document_2952798584.redoOps.push(undoOp_2952798605);;
      if ((undoOp_2952798605.idx < len_2986344536(undoOp_2952798605.parent))) {
      result_2952798586 = nimCopy(result_2952798586, some_2986344674(HEX5BHEX5D_2986344532(undoOp_2952798605.parent, undoOp_2952798605.idx)), NTI2986344567);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2952798605.idx)) {
      result_2952798586 = nimCopy(result_2952798586, some_2986344674(HEX5BHEX5D_2986344532(undoOp_2952798605.parent, subInt(undoOp_2952798605.idx, 1))), NTI2986344567);
      break BeforeRet;
      }
      }
      result_2952798586 = nimCopy(result_2952798586, some_2986344674(undoOp_2952798605.parent), NTI2986344567);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym141_2952798646 = getSymbol_3003185027(ctx_2952790069, undoOp_2952798605.id);
        if (!isSome_3087009345(oHEX60gensym141_2952798646)) Temporary1 = false; else {          var symbol_2952798669 = get_3087009365(oHEX60gensym141_2952798646);
          Temporary1 = true;        }      if (Temporary1) {
      document_2952798584.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2952798605.id, NTI2181038083), text: nimCopy(null, symbol_2952798669.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2952798669.name = nimCopy(null, undoOp_2952798605.text, NTI33554449);
      if ((symbol_2952798669.kind == 0)) {
      var Temporary2 = symbol_2952798669;
      if (ConstSet175[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2952798669.name, NTI33554449);
      var Temporary3 = symbol_2952798669;
      if (ConstSet176[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3003234352(ctx_2952790069, Temporary3.node);
      }
      
      notifySymbolChanged_3003233784(ctx_2952790069, symbol_2952798669);
      }
      
      break;
    case 3:
      document_2952798584.redoOps.push({kind: 3, node: undoOp_2952798605.node, text: nimCopy(null, undoOp_2952798605.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2952798605.node.text = nimCopy(null, undoOp_2952798605.text, NTI33554449);
      updateNode_3003234352(ctx_2952790069, undoOp_2952798605.node);
      break;
    }
    result_2952798586 = nimCopy(result_2952798586, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798586;

}

function undo_2952802268(self_2952802269) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797462(self_2952802269)) {
    break BeforeRet;
    }
    
    finishEdit_2952797888(self_2952802269, false);
      var oHEX60gensym643_2952802272 = undo_2952798583(self_2952802269.document);
      if (!isSome_2986346330(oHEX60gensym643_2952802272)) Temporary1 = false; else {        var node_2952802295 = get_2986346350(oHEX60gensym643_2952802272);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793818(self_2952802269, node_2952802295);
    }
    
  };

  
}

function undoJsWrapper2_2952802264(self_2952802323) {
    undo_2952802268(self_2952802323);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2952802264(this));};

function redo_2952798684(document_2952798685) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2952798687 = ({val: null});

  BeforeRet: {
    if (((document_2952798685.redoOps).length == 0)) {
    result_2952798687 = nimCopy(result_2952798687, none_2986344652(), NTI2986344567);
    break BeforeRet;
    }
    
    var redoOp_2952798696 = pop_2952798593(document_2952798685, "redoOps");
    var fmtRes_2952798701 = [mnewString(0)];
    fmtRes_2952798701[0].push.apply(fmtRes_2952798701[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2952798611(fmtRes_2952798701, 0, redoOp_2952798696, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952798701[0], NTI33554449)]);
    switch (redoOp_2952798696.kind) {
    case 0:
      document_2952798685.undoOps.push({kind: 0, parent: redoOp_2952798696.parent, idx: redoOp_2952798696.idx, node: redoOp_2952798696.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2952796188(document_2952798685, HEX5BHEX5D_2986344532(redoOp_2952798696.parent, redoOp_2952798696.idx));
      var _ = delete_2986344716(redoOp_2952798696.parent, redoOp_2952798696.idx);
      if ((redoOp_2952798696.idx < len_2986344536(redoOp_2952798696.parent))) {
      result_2952798687 = nimCopy(result_2952798687, some_2986344674(HEX5BHEX5D_2986344532(redoOp_2952798696.parent, redoOp_2952798696.idx)), NTI2986344567);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2952798696.idx)) {
      result_2952798687 = nimCopy(result_2952798687, some_2986344674(HEX5BHEX5D_2986344532(redoOp_2952798696.parent, subInt(redoOp_2952798696.idx, 1))), NTI2986344567);
      break BeforeRet;
      }
      }
      result_2952798687 = nimCopy(result_2952798687, some_2986344674(redoOp_2952798696.parent), NTI2986344567);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2952798720 = HEX5BHEX5D_2986344532(redoOp_2952798696.parent, redoOp_2952798696.idx);
      handleNodeDelete_2952796188(document_2952798685, HEX5BHEX5D_2986344532(redoOp_2952798696.parent, redoOp_2952798696.idx));
      HEX5BHEX5DHEX3D_2986344712(redoOp_2952798696.parent, redoOp_2952798696.idx, redoOp_2952798696.node);
      handleNodeInserted_2952794613(document_2952798685, redoOp_2952798696.node);
      document_2952798685.undoOps.push({kind: 1, parent: redoOp_2952798696.parent, idx: redoOp_2952798696.idx, node: oldNode_2952798720, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2952798687 = nimCopy(result_2952798687, some_2986344674(redoOp_2952798696.node), NTI2986344567);
      break BeforeRet;
      break;
    case 2:
      insert_2986344502(redoOp_2952798696.parent, redoOp_2952798696.node, redoOp_2952798696.idx);
      handleNodeInserted_2952794613(document_2952798685, redoOp_2952798696.node);
      document_2952798685.undoOps.push(redoOp_2952798696);;
      result_2952798687 = nimCopy(result_2952798687, some_2986344674(redoOp_2952798696.node), NTI2986344567);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym144_2952798737 = getSymbol_3003185027(ctx_2952790069, redoOp_2952798696.id);
        if (!isSome_3087009345(oHEX60gensym144_2952798737)) Temporary1 = false; else {          var symbol_2952798760 = get_3087009365(oHEX60gensym144_2952798737);
          Temporary1 = true;        }      if (Temporary1) {
      document_2952798685.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2952798696.id, NTI2181038083), text: nimCopy(null, symbol_2952798760.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2952798760.name = nimCopy(null, redoOp_2952798696.text, NTI33554449);
      if ((symbol_2952798760.kind == 0)) {
      var Temporary2 = symbol_2952798760;
      if (ConstSet177[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      Temporary2.node.text = nimCopy(null, symbol_2952798760.name, NTI33554449);
      var Temporary3 = symbol_2952798760;
      if (ConstSet178[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3087007753)); }
      updateNode_3003234352(ctx_2952790069, Temporary3.node);
      }
      
      notifySymbolChanged_3003233784(ctx_2952790069, symbol_2952798760);
      }
      
      break;
    case 3:
      document_2952798685.undoOps.push({kind: 3, node: redoOp_2952798696.node, text: nimCopy(null, redoOp_2952798696.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2952798696.node.text = nimCopy(null, redoOp_2952798696.text, NTI33554449);
      updateNode_3003234352(ctx_2952790069, redoOp_2952798696.node);
      break;
    }
    result_2952798687 = nimCopy(result_2952798687, none_2986344652(), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798687;

}

function redo_2952802345(self_2952802346) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2952797462(self_2952802346)) {
    break BeforeRet;
    }
    
    finishEdit_2952797888(self_2952802346, false);
      var oHEX60gensym652_2952802349 = redo_2952798684(self_2952802346.document);
      if (!isSome_2986346330(oHEX60gensym652_2952802349)) Temporary1 = false; else {        var node_2952802372 = get_2986346350(oHEX60gensym652_2952802349);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2952793818(self_2952802346, node_2952802372);
    }
    
  };

  
}

function redoJsWrapper2_2952802341(self_2952802400) {
    redo_2952802345(self_2952802400);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2952802341(this));};

function canInsertInto_2952801002(self_2952801003, parent_2952801004) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2952801005 = false;

  BeforeRet: {
    switch (parent_2952801004.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2952801005 = false;
      break BeforeRet;
      break;
    case 4:
      result_2952801005 = (len_2986344536(parent_2952801004) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2952801005 = (len_2986344536(parent_2952801004) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2952801005 = (len_2986344536(parent_2952801004) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2952801005 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_2986344536(parent_2952801004) == 0)) {
      result_2952801005 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym519_2952801008 = computeSymbol_3003201856(ctx_2952790069, HEX5BHEX5D_2986344532(parent_2952801004, 0), true);
        if (!isSome_3087009345(oHEX60gensym519_2952801008)) Temporary1 = false; else {          var sym_2952801031 = get_3087009365(oHEX60gensym519_2952801008);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2952801031.kind == 1)) {
      var Temporary2 = sym_2952801031;
      if (ConstSet179[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2952801005 = (len_2986344536(parent_2952801004) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2952801005 = (len_2986344536(parent_2952801004) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2952801036 = computeType_3003195250(ctx_2952790069, HEX5BHEX5D_2986344532(parent_2952801004, 0), true);
      if ((typ_2952801036.kind == 4)) {
        var Temporary4 = typ_2952801036;
        if (ConstSet180[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2952801036;
          if (ConstSet181[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3087007747)); }
          var Temporary6 = typ_2952801036;
          if (ConstSet182[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3087007747)); }
          Temporary3 = HEX3DHEX3D_3087008302((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3087008177(true));        }      if (Temporary3) {
      result_2952801005 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2952801036;
      if (ConstSet183[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3087007747)); }
      result_2952801005 = (len_2986344536(parent_2952801004) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2952801005 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2952801005;

}

function some_2952798815(val_2952798817) {
  var result_2952798818 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2952798818.has = true;
    result_2952798818.val = nimCopy(result_2952798818.val, val_2952798817, NTI2952795063);

  return result_2952798818;

}

function none_2952798829() {
  var result_2952798836 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2952798836;

}

function none_2952799316() {
  var result_2952799318 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2952799318 = nimCopy(result_2952799318, none_2952798829(), NTI2952795068);

  return result_2952799318;

}

function createNodeFromAction_2952798775(editor_2952798776, arg_2952798777, node_2952798778, typ_2952798779) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2952798785 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2952798777)) {
    case "deleted":
        var oHEX60gensym145_2952798788 = nimCopy(null, editor_2952798776.deletedNode, NTI2986344567);
        if (!isSome_2986346330(oHEX60gensym145_2952798788)) Temporary1 = false; else {          var node_2952798811 = get_2986346350(oHEX60gensym145_2952798788);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2952798776.deletedNode = nimCopy(editor_2952798776.deletedNode, some_2986344674(cloneAndMapIds_2986346281(node_2952798811)), NTI2986344567);
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952798811, Field1: 0}), NTI2952795068);
      break BeforeRet;
      }
      
      result_2952798785 = nimCopy(result_2952798785, none_2952798829(), NTI2952795068);
      break BeforeRet;
      break;
    case "empty":
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: {kind: 0, id: newId_2181038297(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "identifier":
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "number-literal":
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym146_2952798850 = null;
        Label3: {
          var res_2952798920 = null;
          res_2952798920 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952798920.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952798920.id = nimCopy(res_2952798920.id, newId_2181038297(), NTI2181038083);
          Label5: {
            Label6: {
              var res_2952798923 = null;
              res_2952798923 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952798923.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952798920, res_2952798923);
        };
      };
      var node_2952798942 = res_2952798920;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952798942, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym153_2952798950 = null;
        Label9: {
          var res_2952798956 = null;
          res_2952798956 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952798956.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952798956.id = nimCopy(res_2952798956.id, newId_2181038297(), NTI2181038083);
          Label11: {
            Label12: {
              var res_2952798959 = null;
              res_2952798959 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952798959.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952798956, res_2952798959);
            Label14: {
              var res_2952798961 = null;
              res_2952798961 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952798961.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952798956, res_2952798961);
          };
        };
      };
      var node_2952798989 = res_2952798956;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952798989, Field1: 1}), NTI2952795068);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym163_2952798997 = null;
        Label17: {
          var res_2952799003 = null;
          res_2952799003 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799003.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952799003.id = nimCopy(res_2952799003.id, newId_2181038297(), NTI2181038083);
          Label19: {
            Label20: {
              var res_2952799006 = null;
              res_2952799006 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799006.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799003, res_2952799006);
            Label22: {
              var res_2952799008 = null;
              res_2952799008 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799008.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799003, res_2952799008);
          };
        };
      };
      var node_2952799036 = res_2952799003;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799036, Field1: 1}), NTI2952795068);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2952799040 = computeSymbol_3003201856(ctx_2952790069, node_2952798778, true);
        var oHEX60gensym173_2952799043 = nimCopy(null, sym_2952799040, NTI3087008904);
        if (!isSome_3087009345(oHEX60gensym173_2952799043)) Temporary26 = false; else {          var sym_2952799066 = get_3087009365(oHEX60gensym173_2952799043);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2952799066.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2952799066;
      if (ConstSet184[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3087007753)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2952799071 = Temporary24;
      switch (kind_2952799071) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym174_2952799076 = null;
          Label30: {
            var res_2952799082 = null;
            res_2952799082 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799082.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2952799084 = null;
                res_2952799084 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799084.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799082, res_2952799084);
              Label35: {
                var res_2952799086 = null;
                res_2952799086 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799086.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799082, res_2952799086);
            };
          };
        };
        Temporary28 = res_2952799082;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym184_2952799118 = null;
          Label38: {
            var res_2952799124 = null;
            res_2952799124 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799124.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2952799126 = null;
                res_2952799126 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799126.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799124, res_2952799126);
              Label43: {
                var res_2952799128 = null;
                res_2952799128 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799128.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799124, res_2952799128);
              Label45: {
                var res_2952799130 = null;
                res_2952799130 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799130.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799124, res_2952799130);
            };
          };
        };
        Temporary28 = res_2952799124;
        break;
      case 0:
        var typ_2952799167 = computeType_3003195250(ctx_2952790069, node_2952798778, true);
        if ((typ_2952799167.kind == 0)) {
        Label48: {
          var tmpHEX60gensym197_2952799176 = null;
          Label49: {
            var res_2952799182 = null;
            res_2952799182 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799182.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2952799184 = null;
                res_2952799184 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799184.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799182, res_2952799184);
              Label54: {
                var res_2952799186 = null;
                res_2952799186 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799186.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799182, res_2952799186);
              Label56: {
                var res_2952799188 = null;
                res_2952799188 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799188.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952799182, res_2952799188);
            };
          };
        };
        Temporary47 = res_2952799182;
        }
        else {
        if (!((typ_2952799167.kind == 4))) {
        Label58: {
          var tmpHEX60gensym211_2952799233 = null;
          Label59: {
            var res_2952799239 = null;
            res_2952799239 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952799239.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2952799241 = null;
                res_2952799241 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952799241.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_2986344486(res_2952799239, res_2952799241);
          };
        };
        Temporary47 = res_2952799239;
        }
        else {
          Label64: {
            var tmpHEX60gensym218_2952799264 = null;
            Label65: {
              var res_2952799270 = null;
              res_2952799270 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799270.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2952799272 = null;
                  res_2952799272 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2952799272.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2986344486(res_2952799270, res_2952799272);
            };
          };
          var newNode_2952799291 = res_2952799270;
          Label70: {
            var __2952799295 = null;
            var colontmp__2952802655 = [];
            var Temporary71 = typ_2952799167;
            if (ConstSet185[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3087007747)); }
            colontmp__2952802655 = Temporary71.paramTypes;
            var i_2952802656 = 0;
            var L_2952802657 = (colontmp__2952802655).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2952802656 < L_2952802657)) break Label73;
                  __2952799295 = colontmp__2952802655[chckIndx(i_2952802656, 0, (colontmp__2952802655).length - 1)];
                  Label74: {
                    var tmpHEX60gensym225_2952799300 = null;
                    Label75: {
                      var res_2952799306 = null;
                      res_2952799306 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2952799306.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_2986344486(newNode_2952799291, res_2952799306);
                  i_2952802656 = addInt(i_2952802656, 1);
                  if (!(((colontmp__2952802655).length == L_2952802657))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2952799291;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2952798785 = nimCopy(result_2952798785, none_2952799316(), NTI2952795068);
        break BeforeRet;
        break;
      }
      var node_2952799335 = Temporary28;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799335, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym229_2952799343 = null;
        Label78: {
          var res_2952799349 = null;
          res_2952799349 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799349.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2952799351 = null;
              res_2952799351 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799351.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799349, res_2952799351);
            Label83: {
              var res_2952799353 = null;
              res_2952799353 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799353.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799349, res_2952799353);
          };
        };
      };
      var node_2952799381 = res_2952799349;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799381, Field1: 1}), NTI2952795068);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2952798779.kind == 2)) {
      Temporary85 = IdAppendString_2969567243;
      }
      else {
      Temporary85 = IdAdd_2969567235;
      }
      
      var operator_2952799389 = nimCopy(null, Temporary85, NTI2181038083);
      Label86: {
        var tmpHEX60gensym239_2952799394 = null;
        Label87: {
          var res_2952799400 = null;
          res_2952799400 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799400.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2952799402 = null;
              res_2952799402 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799402.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799402.reff = nimCopy(res_2952799402.reff, operator_2952799389, NTI2181038083);
            };
            add_2986344486(res_2952799400, res_2952799402);
            Label92: {
              var res_2952799405 = null;
              res_2952799405 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799405.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799400, res_2952799405);
            Label94: {
              var res_2952799407 = null;
              res_2952799407 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799407.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799400, res_2952799407);
          };
        };
      };
      var node_2952799444 = res_2952799400;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799444, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym252_2952799452 = null;
        Label97: {
          var res_2952799458 = null;
          res_2952799458 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799458.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2952799460 = null;
              res_2952799460 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799460.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799460.reff = nimCopy(res_2952799460.reff, IdSub_2969567236, NTI2181038083);
            };
            add_2986344486(res_2952799458, res_2952799460);
            Label102: {
              var res_2952799463 = null;
              res_2952799463 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799463.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799458, res_2952799463);
            Label104: {
              var res_2952799465 = null;
              res_2952799465 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799465.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799458, res_2952799465);
          };
        };
      };
      var node_2952799502 = res_2952799458;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799502, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym265_2952799510 = null;
        Label107: {
          var res_2952799516 = null;
          res_2952799516 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799516.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2952799518 = null;
              res_2952799518 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799518.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799518.reff = nimCopy(res_2952799518.reff, IdMul_2969567237, NTI2181038083);
            };
            add_2986344486(res_2952799516, res_2952799518);
            Label112: {
              var res_2952799521 = null;
              res_2952799521 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799521.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799516, res_2952799521);
            Label114: {
              var res_2952799523 = null;
              res_2952799523 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799523.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799516, res_2952799523);
          };
        };
      };
      var node_2952799560 = res_2952799516;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799560, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym278_2952799568 = null;
        Label117: {
          var res_2952799574 = null;
          res_2952799574 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799574.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2952799576 = null;
              res_2952799576 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799576.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799576.reff = nimCopy(res_2952799576.reff, IdDiv_2969567238, NTI2181038083);
            };
            add_2986344486(res_2952799574, res_2952799576);
            Label122: {
              var res_2952799579 = null;
              res_2952799579 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799579.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799574, res_2952799579);
            Label124: {
              var res_2952799581 = null;
              res_2952799581 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799581.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799574, res_2952799581);
          };
        };
      };
      var node_2952799618 = res_2952799574;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799618, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym291_2952799626 = null;
        Label127: {
          var res_2952799632 = null;
          res_2952799632 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799632.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2952799634 = null;
              res_2952799634 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799634.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799634.reff = nimCopy(res_2952799634.reff, IdMod_2969567239, NTI2181038083);
            };
            add_2986344486(res_2952799632, res_2952799634);
            Label132: {
              var res_2952799637 = null;
              res_2952799637 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799637.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799632, res_2952799637);
            Label134: {
              var res_2952799639 = null;
              res_2952799639 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799639.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799632, res_2952799639);
          };
        };
      };
      var node_2952799676 = res_2952799632;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799676, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym304_2952799684 = null;
        Label137: {
          var res_2952799690 = null;
          res_2952799690 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799690.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952799690.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2952799701 = res_2952799690;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799701, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym308_2952799709 = null;
        Label140: {
          var res_2952799715 = null;
          res_2952799715 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799715.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2952799717 = null;
              res_2952799717 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799717.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952799715, res_2952799717);
        };
      };
      var node_2952799736 = res_2952799715;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799736, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym315_2952799744 = null;
        Label146: {
          var res_2952799750 = null;
          res_2952799750 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799750.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2952799752 = null;
              res_2952799752 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799752.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799750, res_2952799752);
            Label151: {
              var res_2952799754 = null;
              res_2952799754 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799754.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799750, res_2952799754);
          };
        };
      };
      var node_2952799782 = res_2952799750;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799782, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym325_2952799790 = null;
        Label154: {
          var res_2952799796 = null;
          res_2952799796 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799796.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2952799798 = null;
              res_2952799798 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799798.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799798.reff = nimCopy(res_2952799798.reff, IdEqual_2969567251, NTI2181038083);
            };
            add_2986344486(res_2952799796, res_2952799798);
            Label159: {
              var res_2952799801 = null;
              res_2952799801 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799801.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799796, res_2952799801);
            Label161: {
              var res_2952799803 = null;
              res_2952799803 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799803.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799796, res_2952799803);
          };
        };
      };
      var node_2952799840 = res_2952799796;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799840, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym338_2952799848 = null;
        Label164: {
          var res_2952799854 = null;
          res_2952799854 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799854.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2952799856 = null;
              res_2952799856 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799856.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799856.reff = nimCopy(res_2952799856.reff, IdNotEqual_2969567252, NTI2181038083);
            };
            add_2986344486(res_2952799854, res_2952799856);
            Label169: {
              var res_2952799859 = null;
              res_2952799859 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799859.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799854, res_2952799859);
            Label171: {
              var res_2952799861 = null;
              res_2952799861 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799861.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799854, res_2952799861);
          };
        };
      };
      var node_2952799898 = res_2952799854;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799898, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym351_2952799906 = null;
        Label174: {
          var res_2952799912 = null;
          res_2952799912 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799912.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2952799914 = null;
              res_2952799914 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799914.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799914.reff = nimCopy(res_2952799914.reff, IdLessEqual_2969567248, NTI2181038083);
            };
            add_2986344486(res_2952799912, res_2952799914);
            Label179: {
              var res_2952799917 = null;
              res_2952799917 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799917.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799912, res_2952799917);
            Label181: {
              var res_2952799919 = null;
              res_2952799919 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799919.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799912, res_2952799919);
          };
        };
      };
      var node_2952799956 = res_2952799912;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952799956, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym364_2952799964 = null;
        Label184: {
          var res_2952799970 = null;
          res_2952799970 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952799970.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2952799972 = null;
              res_2952799972 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799972.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952799972.reff = nimCopy(res_2952799972.reff, IdGreaterEqual_2969567250, NTI2181038083);
            };
            add_2986344486(res_2952799970, res_2952799972);
            Label189: {
              var res_2952799975 = null;
              res_2952799975 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799975.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799970, res_2952799975);
            Label191: {
              var res_2952799977 = null;
              res_2952799977 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952799977.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952799970, res_2952799977);
          };
        };
      };
      var node_2952800014 = res_2952799970;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952800014, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym377_2952800022 = null;
        Label194: {
          var res_2952800028 = null;
          res_2952800028 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800028.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2952800030 = null;
              res_2952800030 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800030.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800030.reff = nimCopy(res_2952800030.reff, IdLess_2969567247, NTI2181038083);
            };
            add_2986344486(res_2952800028, res_2952800030);
            Label199: {
              var res_2952800033 = null;
              res_2952800033 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800033.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800028, res_2952800033);
            Label201: {
              var res_2952800035 = null;
              res_2952800035 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800035.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800028, res_2952800035);
          };
        };
      };
      var node_2952800072 = res_2952800028;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952800072, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym390_2952800080 = null;
        Label204: {
          var res_2952800086 = null;
          res_2952800086 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800086.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2952800088 = null;
              res_2952800088 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800088.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800088.reff = nimCopy(res_2952800088.reff, IdGreater_2969567249, NTI2181038083);
            };
            add_2986344486(res_2952800086, res_2952800088);
            Label209: {
              var res_2952800091 = null;
              res_2952800091 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800091.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800086, res_2952800091);
            Label211: {
              var res_2952800093 = null;
              res_2952800093 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800093.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800086, res_2952800093);
          };
        };
      };
      var node_2952800130 = res_2952800086;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952800130, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym403_2952800138 = null;
        Label214: {
          var res_2952800144 = null;
          res_2952800144 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800144.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2952800146 = null;
              res_2952800146 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800146.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800146.reff = nimCopy(res_2952800146.reff, IdOrder_2969567255, NTI2181038083);
            };
            add_2986344486(res_2952800144, res_2952800146);
            Label219: {
              var res_2952800149 = null;
              res_2952800149 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800149.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800144, res_2952800149);
            Label221: {
              var res_2952800151 = null;
              res_2952800151 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800151.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800144, res_2952800151);
          };
        };
      };
      var node_2952800188 = res_2952800144;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952800188, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym416_2952800196 = null;
        Label224: {
          var res_2952800202 = null;
          res_2952800202 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800202.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2952800204 = null;
              res_2952800204 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800204.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800204.reff = nimCopy(res_2952800204.reff, IdAnd_2969567253, NTI2181038083);
            };
            add_2986344486(res_2952800202, res_2952800204);
            Label229: {
              var res_2952800207 = null;
              res_2952800207 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800207.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800202, res_2952800207);
            Label231: {
              var res_2952800209 = null;
              res_2952800209 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800209.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800202, res_2952800209);
          };
        };
      };
      var node_2952800246 = res_2952800202;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952800246, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym429_2952800254 = null;
        Label234: {
          var res_2952800260 = null;
          res_2952800260 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800260.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2952800262 = null;
              res_2952800262 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800262.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2952800262.reff = nimCopy(res_2952800262.reff, IdOr_2969567254, NTI2181038083);
            };
            add_2986344486(res_2952800260, res_2952800262);
            Label239: {
              var res_2952800265 = null;
              res_2952800265 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800265.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800260, res_2952800265);
            Label241: {
              var res_2952800267 = null;
              res_2952800267 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800267.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800260, res_2952800267);
          };
        };
      };
      var node_2952800304 = res_2952800260;
      result_2952798785 = nimCopy(result_2952798785, some_2952798815({Field0: node_2952800304, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    default: 
      result_2952798785 = nimCopy(result_2952798785, none_2952799316(), NTI2952795068);
      break BeforeRet;
      break;
    }
  };

  return result_2952798785;

}

function isSome_2952802434(self_2952802436) {
  var result_2952802437 = false;

    result_2952802437 = self_2952802436.has;

  return result_2952802437;

}

function isNone_2952802459(self_2952802461) {
  var result_2952802462 = false;

    result_2952802462 = !(self_2952802461.has);

  return result_2952802462;

}

function get_2952802451(self_2952802453) {
  var result_2952802454 = {Field0: null, Field1: 0};

    if (isNone_2952802459(self_2952802453)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952802454 = self_2952802453.val;

  return result_2952802454;

}

function insertNode_2952796182(document_2952796183, node_2952796184, index_2952796185, newNode_2952796186) {
  var result_2952798547 = ({val: null});

  BeforeRet: {
    var node_2952798548 = node_2952796184;
    var index_2952798549 = index_2952796185;
    if ((node_2952798548 == null)) {
    node_2952798548 = document_2952796183.rootNode;
    index_2952798549 = 0;
    }
    
    document_2952796183.undoOps.push({kind: 2, parent: node_2952798548, idx: index_2952798549, node: newNode_2952796186, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2952796183.redoOps = nimCopy(null, [], NTI2952794769);
    insert_2986344502(node_2952798548, newNode_2952796186, index_2952798549);
    handleNodeInserted_2952794613(document_2952796183, newNode_2952796186);
    result_2952798547 = nimCopy(result_2952798547, some_2986344674(newNode_2952796186), NTI2986344567);
    break BeforeRet;
  };

  return result_2952798547;

}

function shouldEditNode_2952800654(doc_2952800655, node_2952800656) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2952800657 = false;

  BeforeRet: {
    if (((node_2952800656.kind == 0) && eqStrings(node_2952800656.text, []))) {
    result_2952800657 = true;
    break BeforeRet;
    }
    
    if (((node_2952800656.kind == 2) && eqStrings(node_2952800656.text, []))) {
    result_2952800657 = true;
    break BeforeRet;
    }
    
    if ((node_2952800656.kind == 4)) {
    var oHEX60gensym512_2952800672 = computeSymbol_3003201856(ctx_2952790069, node_2952800656, true);
    if (!isSome_3087009345(oHEX60gensym512_2952800672)) Temporary2 = false; else {      var symbol_2952800695 = get_3087009365(oHEX60gensym512_2952800672);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2952800695.name, []);    }    result_2952800657 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2952800656.kind == 5)) {
    var oHEX60gensym513_2952800702 = computeSymbol_3003201856(ctx_2952790069, node_2952800656, true);
    if (!isSome_3087009345(oHEX60gensym513_2952800702)) Temporary4 = false; else {      var symbol_2952800725 = get_3087009365(oHEX60gensym513_2952800702);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2952800725.name, []);    }    result_2952800657 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2952800656.kind == 6)) {
    var oHEX60gensym514_2952800732 = computeSymbol_3003201856(ctx_2952790069, node_2952800656, true);
    if (!isSome_3087009345(oHEX60gensym514_2952800732)) Temporary6 = false; else {      var symbol_2952800755 = get_3087009365(oHEX60gensym514_2952800732);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2952800755.name, []);    }    result_2952800657 = Temporary5;
    break BeforeRet;
    }
    
    result_2952800657 = false;
    break BeforeRet;
  };

  return result_2952800657;

}

function formatValue_2952797477(result_2952797479, result_2952797479_Idx, value_2952797480, specifier_2952797481) {
    formatValue_721420459(result_2952797479, result_2952797479_Idx, reprEnum(value_2952797480, NTI3087007753), specifier_2952797481);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2952802760 = 0;
      var last_2952802761 = 0;
      var eolpos_2952802762 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2952802761 < (s_855638695).length) && !((ConstSet187[s_855638695[chckIndx(last_2952802761, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2952802761 = addInt(last_2952802761, 1);
                }
            };
            eolpos_2952802762 = last_2952802761;
            if ((last_2952802761 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2952802761, 0, (s_855638695).length - 1)] == 10)) {
            last_2952802761 = addInt(last_2952802761, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2952802761, 0, (s_855638695).length - 1)] == 13)) {
            last_2952802761 = addInt(last_2952802761, 1);
            if (((last_2952802761 < (s_855638695).length) && (s_855638695[chckIndx(last_2952802761, 0, (s_855638695).length - 1)] == 10))) {
            last_2952802761 = addInt(last_2952802761, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2952802761, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2952802762, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2952802760, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2952802762 == last_2952802761)) {
            break Label2;
            }
            
            first_2952802760 = last_2952802761;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2818573845(self_2818573846, value_2818573847) {
    if (self_2818573846.singleLine) {
    self_2818573846.lines = nimCopy(null, [nsuReplaceStr(value_2818573847, [10], [])], NTI1560281203);
    if (((self_2818573846.lines).length == 0)) {
    self_2818573846.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2818573846.tsParser == null))) {
    self_2818573846.currentTree = parseString_2885681211(self_2818573846.tsParser, self_2818573846.lines[chckIndx(0, 0, (self_2818573846.lines).length - 1)], none_2885681218());
    }
    
    }
    else {
      self_2818573846.lines = nimCopy(null, nsuSplitLines(value_2818573847, false), NTI855638530);
      if (((self_2818573846.lines).length == 0)) {
      self_2818573846.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2818573846.tsParser == null))) {
      self_2818573846.currentTree = parseString_2885681211(self_2818573846.tsParser, value_2818573847, none_2885681218());
      }
      
    }
    
    self_2818573846.version = addInt(self_2818573846.version, 1);
    notifyTextChanged_2818573211(self_2818573846);

  
}

function newTextDocument_3170894353(filename_3170894355, content_3170894356, app_3170894357) {
  var result_3170894358 = null;

    result_3170894358 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false});
    var self_3170894362 = result_3170894358;
    self_3170894362.filename = nimCopy(null, filename_3170894355, NTI33554449);
    self_3170894362.currentTree = null;
    self_3170894362.appFile = app_3170894357;
    var _ = initTreesitter_2818578426(self_3170894362);
    var language_3170894363 = getLanguageForFile_2902458372(filename_3170894355);
    if (isSome_2768240699(language_3170894363)) {
    self_3170894362.languageId = nimCopy(null, get_2818578463(language_3170894363), NTI33554449);
    }
    
    contentHEX3D_2818573845(self_3170894362, content_3170894356);

  return result_3170894358;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2818573886(self_2818573887, value_2818573888) {
    if (self_2818573887.singleLine) {
    self_2818573887.lines = nimCopy(null, [nsuJoinSep(value_2818573888, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym22_2818573950 = 0;
        var resultHEX60gensym22_2818573957 = newSeq_503316959(chckRange((value_2818573888).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym22_2818573961 = [];
          var i_2952802767 = 0;
          var L_2952802768 = (value_2818573888).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2952802767 < L_2952802768)) break Label4;
                itHEX60gensym22_2818573961 = value_2818573888[chckIndx(i_2952802767, 0, (value_2818573888).length - 1)];
                resultHEX60gensym22_2818573957[chckIndx(iHEX60gensym22_2818573950, 0, (resultHEX60gensym22_2818573957).length - 1)] = nimCopy(null, itHEX60gensym22_2818573961, NTI33554449);
                iHEX60gensym22_2818573950 = addInt(iHEX60gensym22_2818573950, 1);
                i_2952802767 = addInt(i_2952802767, 1);
                if (!(((value_2818573888).length == L_2952802768))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2818573887.lines = nimCopy(null, resultHEX60gensym22_2818573957, NTI503316776);
    }
    
    if (((self_2818573887.lines).length == 0)) {
    self_2818573887.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2818573973 = nsuJoinSep(value_2818573888, [10]);
    if (!((self_2818573887.tsParser == null))) {
    self_2818573887.currentTree = parseString_2885681211(self_2818573887.tsParser, strValue_2818573973, none_2885681218());
    }
    
    self_2818573887.version = addInt(self_2818573887.version, 1);
    notifyTextChanged_2818573211(self_2818573887);

  
}

function createTextEditorInstance_2818590799() {
  var result_2818590800 = null;

  BeforeRet: {
    var editor_2818590805 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2231370221({Field0: 0, Field1: 0}), NTI2231369739)], m_type: NTI2818572510, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2818590805 = createWithPrototype(editor_text_prototype, editor_2818590805);
    result_2818590800 = editor_2818590805;
    break BeforeRet;
  };

  return result_2818590800;

}

function newEditorId_2231370043() {
  var result_2231370044 = 0;

    result_2231370044 = nextEditorId_2231370042[0];
    nextEditorId_2231370042[0] = addInt(nextEditorId_2231370042[0], 1);

  return result_2231370044;

}

function init_2147483681(self_2147483682) {
    self_2147483682.id = newEditorId_2231370043();
    self_2147483682.renderHeader = true;
    self_2147483682.fillAvailableSpace = true;

  
}

function subscribe_2818590863(event_2818590865, callback_2818590867) {
  var result_2818590868 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2818590868 = nimCopy(result_2818590868, newId_2181038297(), NTI2181038083);
    event_2818590865.handlers.push({Field0: nimCopy(null, result_2818590868, NTI2181038083), Field1: callback_2818590867});;

  return result_2818590868;

}

function clampSelection_2818573209(self_2818573210) {
    selectionsHEX3D_2818573048(self_2818573210, clampAndMergeSelections_2818572785(self_2818573210, self_2818573210.selectionsInternal));
    markDirty_2147483686(self_2818573210);

  
}

function handleTextDocumentTextChanged_2818590797(self_2818590798) {
    clampSelection_2818573209(self_2818590798);
    updateSearchResults_2818579690(self_2818590798);
    markDirty_2147483686(self_2818590798);

  
}

function newTextEditor_2818590815(document_2818590816, ed_2818590817) {
    
function HEX3Aanonymous_2818590838(__2818590839) {
        handleTextDocumentTextChanged_2818590797(editor_2818590819);

      
    }

  var result_2818590818 = null;

  BeforeRet: {
    var editor_2818590819 = createTextEditorInstance_2818590799();
    editor_2818590819.document = document_2818590816;
    init_2147483681(editor_2818590819);
    if (((editor_2818590819.document.lines).length == 0)) {
    editor_2818590819.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847745(editor_2818590819, ed_2818590817);
    var _ = subscribe_2818590863(document_2818590816.textChanged, HEX3Aanonymous_2818590838);
    result_2818590818 = editor_2818590819;
    break BeforeRet;
  };

  return result_2818590818;

}

function some_3170894395(val_3170894397) {
  var result_3170894398 = ({val: 0, has: false});

    result_3170894398.has = true;
    result_3170894398.val = val_3170894397;

  return result_3170894398;

}

function handleTextDocumentChanged_2952797460(self_2952797461) {
    updateCompletions_2952792683(self_2952797461);

  
}

function editSymbol_2952797469(self_2952797470, symbol_2952797471) {
    var Temporary1;
    
function HEX3Aanonymous_2952797527(doc_2952797528) {
        handleTextDocumentChanged_2952797460(self_2952797470);

      
    }

    var fmtRes_2952797476 = [mnewString(0)];
    fmtRes_2952797476[0].push.apply(fmtRes_2952797476[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2952797476, 0, symbol_2952797471.name, []);
    fmtRes_2952797476[0].push.apply(fmtRes_2952797476[0], [32,40]);;
    formatValue_2952797477(fmtRes_2952797476, 0, symbol_2952797471.kind, []);
    fmtRes_2952797476[0].push.apply(fmtRes_2952797476[0], [44,32]);;
    formatValue_3019899100(fmtRes_2952797476, 0, symbol_2952797471.id, []);
    fmtRes_2952797476[0].push.apply(fmtRes_2952797476[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797476[0], NTI33554449)]);
    if ((symbol_2952797471.kind == 0)) {
    var fmtRes_2952797498 = [mnewString(0)];
    fmtRes_2952797498[0].push.apply(fmtRes_2952797498[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2952797471;
    if (ConstSet186[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3087007753)); }
    formatValue_3087008579(fmtRes_2952797498, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797498[0], NTI33554449)]);
    }
    
    self_2952797470.currentlyEditedNode = null;
    self_2952797470.currentlyEditedSymbol = nimCopy(self_2952797470.currentlyEditedSymbol, symbol_2952797471.id, NTI2181038083);
    self_2952797470.textDocument = newTextDocument_3170894353([], [], false);
    contentHEX3D_2818573886(self_2952797470.textDocument, [nimCopy(null, symbol_2952797471.name, NTI33554449)]);
    self_2952797470.textEditor = newTextEditor_2818590815(self_2952797470.textDocument, self_2952797470.editor);
    setMode_2818583356(self_2952797470.textEditor, [105,110,115,101,114,116]);
    self_2952797470.textEditor.renderHeader = false;
    self_2952797470.textEditor.fillAvailableSpace = false;
    self_2952797470.textEditor.lineNumbers = nimCopy(self_2952797470.textEditor.lineNumbers, some_3170894395(0), NTI2818572554);
    var _ = subscribe_2818590863(self_2952797470.textDocument.textChanged, HEX3Aanonymous_2952797527);
    updateCompletions_2952792683(self_2952797470);

  
}

function editNode_2952797557(self_2952797558, node_2952797559) {
    
function HEX3Aanonymous_2952797589(doc_2952797590) {
        handleTextDocumentChanged_2952797460(self_2952797558);

      
    }

    var fmtRes_2952797564 = [mnewString(0)];
    fmtRes_2952797564[0].push.apply(fmtRes_2952797564[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3087008579(fmtRes_2952797564, 0, node_2952797559, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797564[0], NTI33554449)]);
    self_2952797558.currentlyEditedNode = node_2952797559;
    self_2952797558.currentlyEditedSymbol = nimCopy(self_2952797558.currentlyEditedSymbol, null_2181038340, NTI2181038083);
    self_2952797558.textDocument = newTextDocument_3170894353([], [], false);
    contentHEX3D_2818573886(self_2952797558.textDocument, nsuSplitLines(node_2952797559.text, false));
    self_2952797558.textEditor = newTextEditor_2818590815(self_2952797558.textDocument, self_2952797558.editor);
    setMode_2818583356(self_2952797558.textEditor, [105,110,115,101,114,116]);
    self_2952797558.textEditor.renderHeader = false;
    self_2952797558.textEditor.fillAvailableSpace = false;
    self_2952797558.textEditor.lineNumbers = nimCopy(self_2952797558.textEditor.lineNumbers, some_3170894395(0), NTI2818572554);
    var _ = subscribe_2818590863(self_2952797558.textDocument.textChanged, HEX3Aanonymous_2952797589);
    updateCompletions_2952792683(self_2952797558);

  
}

function tryEdit_2952797619(self_2952797620, node_2952797621) {
      var Temporary1;
      var Temporary2;

  var result_2952797622 = false;

  BeforeRet: {
      var oHEX60gensym109_2952797625 = getSymbol_3003185027(ctx_2952790069, node_2952797621.id);
      if (!isSome_3087009345(oHEX60gensym109_2952797625)) Temporary1 = false; else {        var sym_2952797648 = get_3087009365(oHEX60gensym109_2952797625);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2952797469(self_2952797620, sym_2952797648);
    result_2952797622 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym110_2952797651 = getSymbol_3003185027(ctx_2952790069, node_2952797621.reff);
      if (!isSome_3087009345(oHEX60gensym110_2952797651)) Temporary2 = false; else {        var sym_2952797674 = get_3087009365(oHEX60gensym110_2952797651);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2952797469(self_2952797620, sym_2952797674);
    result_2952797622 = true;
    break BeforeRet;
    }
    else {
      switch (node_2952797621.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2952797557(self_2952797620, node_2952797621);
        result_2952797622 = true;
        break BeforeRet;
        break;
      default: 
        result_2952797622 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2952797622;

}

function insertAfterSmart_2952802421(self_2952802422, nodeTemplate_2952802423) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2952802503(n_2952802506) {
        var result_2952802509 = false;

          result_2952802509 = shouldEditNode_2952800654(self_2952802422.document, n_2952802506);

        return result_2952802509;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2952797462(self_2952802422)) {
    break BeforeRet;
    }
    
    var node_2952802424 = node_2952792695(self_2952802422);
    Label1: {
      var next_2952802425 = null;
      if (true) {
      Temporary2 = node_2952802424;
      }
      else {
      Temporary2 = node_2952802424.parent;
      }
      
      var node_2952802592 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2952802592 == null))) break Label4;
            next_2952802425 = node_2952802592;
            if (canInsertInto_2952801002(self_2952802422, next_2952802425.parent)) {
            node_2952802424 = next_2952802425;
            break Label1;
            }
            
            node_2952802592 = node_2952802592.parent;
          }
      };
    };
    var index_2952802426 = index_2986344556(node_2952802424);
      var oHEX60gensym662_2952802429 = createNodeFromAction_2952798775(self_2952802422, nodeTemplate_2952802423, node_2952802424, errorType_3087008120());
      if (!isSome_2952802434(oHEX60gensym662_2952802429)) Temporary5 = false; else {        var newNodeIndex_2952802474 = nimCopy(null, get_2952802451(oHEX60gensym662_2952802429), NTI2952795063);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2952802475 = newNodeIndex_2952802474["Field0"];
    var __2952802476 = newNodeIndex_2952802474["Field1"];
      var oHEX60gensym664_2952802479 = insertNode_2952796182(self_2952802422.document, node_2952802424.parent, addInt(index_2952802426, 1), newNode_2952802475);
      if (!isSome_2986346330(oHEX60gensym664_2952802479)) Temporary6 = false; else {        var node_2952802502 = get_2986346350(oHEX60gensym664_2952802479);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2952793818(self_2952802422, node_2952802502);
    Label7: {
      var __2952802510 = 0;
      var emptyNode_2952802511 = null;
      var colontmp__2952802595 = null;
      colontmp__2952802595 = HEX3Aanonymous_2952802503;
      var i_2952802603 = 0;
      Label8: {
        var __2952802605 = 0;
        var child_2952802606 = null;
        var n_2952802607 = newNode_2952802475;
        var idx_2952802608 = -1;
        var i_2952802609 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2952802608 == -1)) {
              __2952802605 = i_2952802609;
              child_2952802606 = n_2952802607;
              if (colontmp__2952802595(child_2952802606)) {
              __2952802510 = i_2952802603;
              emptyNode_2952802511 = child_2952802606;
              nodeHEX3D_2952793818(self_2952802422, emptyNode_2952802511);
              var _ = tryEdit_2952797619(self_2952802422, node_2952792695(self_2952802422));
              break Label7;
              i_2952802603 = addInt(i_2952802603, 1);
              }
              
              }
              
              if ((addInt(idx_2952802608, 1) < len_2986344536(n_2952802607))) {
              n_2952802607 = HEX5BHEX5D_2986344532(n_2952802607, addInt(idx_2952802608, 1));
              idx_2952802608 = -1;
              }
              else {
                var oHEX60gensym64_2952802611 = next_2986344641(n_2952802607);
                if (!isSome_2986346330(oHEX60gensym64_2952802611)) Temporary13 = false; else {                  var ne_2952802612 = get_2986346350(oHEX60gensym64_2952802611);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2952802607 == newNode_2952802475));                }              if (Temporary12) {
              n_2952802607 = ne_2952802612;
              idx_2952802608 = -1;
              }
              else {
              if (((!((n_2952802607.parent == null)) && !((n_2952802607 == newNode_2952802475))) && !((n_2952802607.parent == newNode_2952802475)))) {
              idx_2952802608 = index_2986344556(n_2952802607);
              n_2952802607 = n_2952802607.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2952802609 = addInt(i_2952802609, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952802516 = [mnewString(0)];
      fmtRes_2952802516[0].push.apply(fmtRes_2952802516[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952802516, 0, newNode_2952802475, []);
      fmtRes_2952802516[0].push.apply(fmtRes_2952802516[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952802516, 0, node_2952792695(self_2952802422).parent, []);
      fmtRes_2952802516[0].push.apply(fmtRes_2952802516[0], [32,97,116,32]);;
      formatValue_2332033380(fmtRes_2952802516, 0, addInt(index_2952802426, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952802516[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2952802417(self_2952802569, nodeTemplate_2952802570) {
    insertAfterSmart_2952802421(self_2952802569, nodeTemplate_2952802570);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2952802417(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2952802776(self_2952802777, nodeTemplate_2952802778) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2952802835(n_2952802838) {
        var result_2952802841 = false;

          result_2952802841 = shouldEditNode_2952800654(self_2952802777.document, n_2952802838);

        return result_2952802841;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797462(self_2952802777)) {
    break BeforeRet;
    }
    
    var node_2952802779 = node_2952792695(self_2952802777);
    var index_2952802780 = index_2986344556(node_2952802779);
      var oHEX60gensym675_2952802783 = createNodeFromAction_2952798775(self_2952802777, nodeTemplate_2952802778, node_2952802779, errorType_3087008120());
      if (!isSome_2952802434(oHEX60gensym675_2952802783)) Temporary1 = false; else {        var newNodeIndex_2952802806 = nimCopy(null, get_2952802451(oHEX60gensym675_2952802783), NTI2952795063);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952802807 = newNodeIndex_2952802806["Field0"];
    var __2952802808 = newNodeIndex_2952802806["Field1"];
      var oHEX60gensym676_2952802811 = insertNode_2952796182(self_2952802777.document, node_2952802779.parent, addInt(index_2952802780, 1), newNode_2952802807);
      if (!isSome_2986346330(oHEX60gensym676_2952802811)) Temporary2 = false; else {        var node_2952802834 = get_2986346350(oHEX60gensym676_2952802811);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2952793818(self_2952802777, node_2952802834);
    Label3: {
      var __2952802842 = 0;
      var emptyNode_2952802843 = null;
      var colontmp__2952802914 = null;
      colontmp__2952802914 = HEX3Aanonymous_2952802835;
      var i_2952802915 = 0;
      Label4: {
        var __2952802917 = 0;
        var child_2952802918 = null;
        var n_2952802919 = newNode_2952802807;
        var idx_2952802920 = -1;
        var i_2952802921 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952802920 == -1)) {
              __2952802917 = i_2952802921;
              child_2952802918 = n_2952802919;
              if (colontmp__2952802914(child_2952802918)) {
              __2952802842 = i_2952802915;
              emptyNode_2952802843 = child_2952802918;
              nodeHEX3D_2952793818(self_2952802777, emptyNode_2952802843);
              var _ = tryEdit_2952797619(self_2952802777, node_2952792695(self_2952802777));
              break Label3;
              i_2952802915 = addInt(i_2952802915, 1);
              }
              
              }
              
              if ((addInt(idx_2952802920, 1) < len_2986344536(n_2952802919))) {
              n_2952802919 = HEX5BHEX5D_2986344532(n_2952802919, addInt(idx_2952802920, 1));
              idx_2952802920 = -1;
              }
              else {
                var oHEX60gensym64_2952802923 = next_2986344641(n_2952802919);
                if (!isSome_2986346330(oHEX60gensym64_2952802923)) Temporary9 = false; else {                  var ne_2952802924 = get_2986346350(oHEX60gensym64_2952802923);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952802919 == newNode_2952802807));                }              if (Temporary8) {
              n_2952802919 = ne_2952802924;
              idx_2952802920 = -1;
              }
              else {
              if (((!((n_2952802919.parent == null)) && !((n_2952802919 == newNode_2952802807))) && !((n_2952802919.parent == newNode_2952802807)))) {
              idx_2952802920 = index_2986344556(n_2952802919);
              n_2952802919 = n_2952802919.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952802921 = addInt(i_2952802921, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952802848 = [mnewString(0)];
      fmtRes_2952802848[0].push.apply(fmtRes_2952802848[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952802848, 0, newNode_2952802807, []);
      fmtRes_2952802848[0].push.apply(fmtRes_2952802848[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952802848, 0, node_2952792695(self_2952802777).parent, []);
      fmtRes_2952802848[0].push.apply(fmtRes_2952802848[0], [32,97,116,32]);;
      formatValue_2332033380(fmtRes_2952802848, 0, addInt(index_2952802780, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952802848[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2952802772(self_2952802892, nodeTemplate_2952802893) {
    insertAfter_2952802776(self_2952802892, nodeTemplate_2952802893);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2952802772(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2952802931(self_2952802932, nodeTemplate_2952802933) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2952802989(n_2952802992) {
        var result_2952802995 = false;

          result_2952802995 = shouldEditNode_2952800654(self_2952802932.document, n_2952802992);

        return result_2952802995;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797462(self_2952802932)) {
    break BeforeRet;
    }
    
    var index_2952802934 = index_2986344556(node_2952792695(self_2952802932));
      var oHEX60gensym687_2952802937 = createNodeFromAction_2952798775(self_2952802932, nodeTemplate_2952802933, node_2952792695(self_2952802932), errorType_3087008120());
      if (!isSome_2952802434(oHEX60gensym687_2952802937)) Temporary1 = false; else {        var newNodeIndex_2952802960 = nimCopy(null, get_2952802451(oHEX60gensym687_2952802937), NTI2952795063);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952802961 = newNodeIndex_2952802960["Field0"];
    var __2952802962 = newNodeIndex_2952802960["Field1"];
      var oHEX60gensym688_2952802965 = insertNode_2952796182(self_2952802932.document, node_2952792695(self_2952802932).parent, index_2952802934, newNode_2952802961);
      if (!isSome_2986346330(oHEX60gensym688_2952802965)) Temporary2 = false; else {        var node_2952802988 = get_2986346350(oHEX60gensym688_2952802965);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2952793818(self_2952802932, node_2952802988);
    Label3: {
      var __2952802996 = 0;
      var emptyNode_2952802997 = null;
      var colontmp__2952803068 = null;
      colontmp__2952803068 = HEX3Aanonymous_2952802989;
      var i_2952803069 = 0;
      Label4: {
        var __2952803071 = 0;
        var child_2952803072 = null;
        var n_2952803073 = newNode_2952802961;
        var idx_2952803074 = -1;
        var i_2952803075 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952803074 == -1)) {
              __2952803071 = i_2952803075;
              child_2952803072 = n_2952803073;
              if (colontmp__2952803068(child_2952803072)) {
              __2952802996 = i_2952803069;
              emptyNode_2952802997 = child_2952803072;
              nodeHEX3D_2952793818(self_2952802932, emptyNode_2952802997);
              var _ = tryEdit_2952797619(self_2952802932, node_2952792695(self_2952802932));
              break Label3;
              i_2952803069 = addInt(i_2952803069, 1);
              }
              
              }
              
              if ((addInt(idx_2952803074, 1) < len_2986344536(n_2952803073))) {
              n_2952803073 = HEX5BHEX5D_2986344532(n_2952803073, addInt(idx_2952803074, 1));
              idx_2952803074 = -1;
              }
              else {
                var oHEX60gensym64_2952803077 = next_2986344641(n_2952803073);
                if (!isSome_2986346330(oHEX60gensym64_2952803077)) Temporary9 = false; else {                  var ne_2952803078 = get_2986346350(oHEX60gensym64_2952803077);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952803073 == newNode_2952802961));                }              if (Temporary8) {
              n_2952803073 = ne_2952803078;
              idx_2952803074 = -1;
              }
              else {
              if (((!((n_2952803073.parent == null)) && !((n_2952803073 == newNode_2952802961))) && !((n_2952803073.parent == newNode_2952802961)))) {
              idx_2952803074 = index_2986344556(n_2952803073);
              n_2952803073 = n_2952803073.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952803075 = addInt(i_2952803075, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952803002 = [mnewString(0)];
      fmtRes_2952803002[0].push.apply(fmtRes_2952803002[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952803002, 0, newNode_2952802961, []);
      fmtRes_2952803002[0].push.apply(fmtRes_2952803002[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952803002, 0, node_2952792695(self_2952802932).parent, []);
      fmtRes_2952803002[0].push.apply(fmtRes_2952803002[0], [32,97,116,32]);;
      formatValue_2332033380(fmtRes_2952803002, 0, index_2952802934, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952803002[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2952802927(self_2952803046, nodeTemplate_2952803047) {
    insertBefore_2952802931(self_2952803046, nodeTemplate_2952803047);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2952802927(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2952803085(self_2952803086, nodeTemplate_2952803087) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2952803142(n_2952803145) {
        var result_2952803148 = false;

          result_2952803148 = shouldEditNode_2952800654(self_2952803086.document, n_2952803145);

        return result_2952803148;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797462(self_2952803086)) {
    break BeforeRet;
    }
    
      var oHEX60gensym699_2952803090 = createNodeFromAction_2952798775(self_2952803086, nodeTemplate_2952803087, node_2952792695(self_2952803086), errorType_3087008120());
      if (!isSome_2952802434(oHEX60gensym699_2952803090)) Temporary1 = false; else {        var newNodeIndex_2952803113 = nimCopy(null, get_2952802451(oHEX60gensym699_2952803090), NTI2952795063);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803114 = newNodeIndex_2952803113["Field0"];
    var __2952803115 = newNodeIndex_2952803113["Field1"];
      var oHEX60gensym700_2952803118 = insertNode_2952796182(self_2952803086.document, node_2952792695(self_2952803086), len_2986344536(node_2952792695(self_2952803086)), newNode_2952803114);
      if (!isSome_2986346330(oHEX60gensym700_2952803118)) Temporary2 = false; else {        var node_2952803141 = get_2986346350(oHEX60gensym700_2952803118);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2952793818(self_2952803086, node_2952803141);
    Label3: {
      var __2952803149 = 0;
      var emptyNode_2952803150 = null;
      var colontmp__2952803221 = null;
      colontmp__2952803221 = HEX3Aanonymous_2952803142;
      var i_2952803222 = 0;
      Label4: {
        var __2952803224 = 0;
        var child_2952803225 = null;
        var n_2952803226 = newNode_2952803114;
        var idx_2952803227 = -1;
        var i_2952803228 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952803227 == -1)) {
              __2952803224 = i_2952803228;
              child_2952803225 = n_2952803226;
              if (colontmp__2952803221(child_2952803225)) {
              __2952803149 = i_2952803222;
              emptyNode_2952803150 = child_2952803225;
              nodeHEX3D_2952793818(self_2952803086, emptyNode_2952803150);
              var _ = tryEdit_2952797619(self_2952803086, node_2952792695(self_2952803086));
              break Label3;
              i_2952803222 = addInt(i_2952803222, 1);
              }
              
              }
              
              if ((addInt(idx_2952803227, 1) < len_2986344536(n_2952803226))) {
              n_2952803226 = HEX5BHEX5D_2986344532(n_2952803226, addInt(idx_2952803227, 1));
              idx_2952803227 = -1;
              }
              else {
                var oHEX60gensym64_2952803230 = next_2986344641(n_2952803226);
                if (!isSome_2986346330(oHEX60gensym64_2952803230)) Temporary9 = false; else {                  var ne_2952803231 = get_2986346350(oHEX60gensym64_2952803230);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952803226 == newNode_2952803114));                }              if (Temporary8) {
              n_2952803226 = ne_2952803231;
              idx_2952803227 = -1;
              }
              else {
              if (((!((n_2952803226.parent == null)) && !((n_2952803226 == newNode_2952803114))) && !((n_2952803226.parent == newNode_2952803114)))) {
              idx_2952803227 = index_2986344556(n_2952803226);
              n_2952803226 = n_2952803226.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952803228 = addInt(i_2952803228, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2952803155 = [mnewString(0)];
      fmtRes_2952803155[0].push.apply(fmtRes_2952803155[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3087008579(fmtRes_2952803155, 0, newNode_2952803114, []);
      fmtRes_2952803155[0].push.apply(fmtRes_2952803155[0], [32,105,110,116,111,32]);;
      formatValue_3087008579(fmtRes_2952803155, 0, node_2952792695(self_2952803086), []);
      fmtRes_2952803155[0].push.apply(fmtRes_2952803155[0], [32,97,116,32]);;
      formatValue_2332033380(fmtRes_2952803155, 0, len_2986344536(node_2952792695(self_2952803086)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952803155[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2952803081(self_2952803199, nodeTemplate_2952803200) {
    insertChild_2952803085(self_2952803199, nodeTemplate_2952803200);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2952803081(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2952803238(self_2952803239, nodeTemplate_2952803240) {
      var Temporary1;
      
function HEX3Aanonymous_2952803269(n_2952803272) {
        var result_2952803275 = false;

          result_2952803275 = shouldEditNode_2952800654(self_2952803239.document, n_2952803272);

        return result_2952803275;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2952797462(self_2952803239)) {
    break BeforeRet;
    }
    
      var oHEX60gensym711_2952803243 = createNodeFromAction_2952798775(self_2952803239, nodeTemplate_2952803240, node_2952792695(self_2952803239), errorType_3087008120());
      if (!isSome_2952802434(oHEX60gensym711_2952803243)) Temporary1 = false; else {        var newNodeIndex_2952803266 = nimCopy(null, get_2952802451(oHEX60gensym711_2952803243), NTI2952795063);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803267 = newNodeIndex_2952803266["Field0"];
    var __2952803268 = newNodeIndex_2952803266["Field1"];
    nodeHEX3D_2952793818(self_2952803239, replaceNode_2952798456(self_2952803239.document, node_2952792695(self_2952803239), newNode_2952803267));
    Label2: {
      var __2952803276 = 0;
      var emptyNode_2952803277 = null;
      var colontmp__2952803328 = null;
      colontmp__2952803328 = HEX3Aanonymous_2952803269;
      var i_2952803329 = 0;
      Label3: {
        var __2952803331 = 0;
        var child_2952803332 = null;
        var n_2952803333 = newNode_2952803267;
        var idx_2952803334 = -1;
        var i_2952803335 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2952803334 == -1)) {
              __2952803331 = i_2952803335;
              child_2952803332 = n_2952803333;
              if (colontmp__2952803328(child_2952803332)) {
              __2952803276 = i_2952803329;
              emptyNode_2952803277 = child_2952803332;
              nodeHEX3D_2952793818(self_2952803239, emptyNode_2952803277);
              var _ = tryEdit_2952797619(self_2952803239, node_2952792695(self_2952803239));
              break Label2;
              i_2952803329 = addInt(i_2952803329, 1);
              }
              
              }
              
              if ((addInt(idx_2952803334, 1) < len_2986344536(n_2952803333))) {
              n_2952803333 = HEX5BHEX5D_2986344532(n_2952803333, addInt(idx_2952803334, 1));
              idx_2952803334 = -1;
              }
              else {
                var oHEX60gensym64_2952803337 = next_2986344641(n_2952803333);
                if (!isSome_2986346330(oHEX60gensym64_2952803337)) Temporary8 = false; else {                  var ne_2952803338 = get_2986346350(oHEX60gensym64_2952803337);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2952803333 == newNode_2952803267));                }              if (Temporary7) {
              n_2952803333 = ne_2952803338;
              idx_2952803334 = -1;
              }
              else {
              if (((!((n_2952803333.parent == null)) && !((n_2952803333 == newNode_2952803267))) && !((n_2952803333.parent == newNode_2952803267)))) {
              idx_2952803334 = index_2986344556(n_2952803333);
              n_2952803333 = n_2952803333.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2952803335 = addInt(i_2952803335, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2952803234(self_2952803306, nodeTemplate_2952803307) {
    replace_2952803238(self_2952803306, nodeTemplate_2952803307);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2952803234(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2952803345(self_2952803346, nodeTemplate_2952803347) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2952803380(n_2952803383) {
        var result_2952803386 = false;

          result_2952803386 = shouldEditNode_2952800654(self_2952803346.document, n_2952803383);

        return result_2952803386;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2952797462(self_2952803346)) {
    break BeforeRet;
    }
    
      if (!(node_2952792695(self_2952803346).kind == 0)) Temporary1 = false; else {        var oHEX60gensym721_2952803354 = createNodeFromAction_2952798775(self_2952803346, nodeTemplate_2952803347, node_2952792695(self_2952803346), errorType_3087008120());
        if (!isSome_2952802434(oHEX60gensym721_2952803354)) Temporary2 = false; else {          var newNodeIndex_2952803377 = nimCopy(null, get_2952802451(oHEX60gensym721_2952803354), NTI2952795063);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2952803378 = newNodeIndex_2952803377["Field0"];
    var __2952803379 = newNodeIndex_2952803377["Field1"];
    nodeHEX3D_2952793818(self_2952803346, replaceNode_2952798456(self_2952803346.document, node_2952792695(self_2952803346), newNode_2952803378));
    Label3: {
      var __2952803387 = 0;
      var emptyNode_2952803388 = null;
      var colontmp__2952803439 = null;
      colontmp__2952803439 = HEX3Aanonymous_2952803380;
      var i_2952803440 = 0;
      Label4: {
        var __2952803442 = 0;
        var child_2952803443 = null;
        var n_2952803444 = newNode_2952803378;
        var idx_2952803445 = -1;
        var i_2952803446 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2952803445 == -1)) {
              __2952803442 = i_2952803446;
              child_2952803443 = n_2952803444;
              if (colontmp__2952803439(child_2952803443)) {
              __2952803387 = i_2952803440;
              emptyNode_2952803388 = child_2952803443;
              nodeHEX3D_2952793818(self_2952803346, emptyNode_2952803388);
              var _ = tryEdit_2952797619(self_2952803346, node_2952792695(self_2952803346));
              break Label3;
              i_2952803440 = addInt(i_2952803440, 1);
              }
              
              }
              
              if ((addInt(idx_2952803445, 1) < len_2986344536(n_2952803444))) {
              n_2952803444 = HEX5BHEX5D_2986344532(n_2952803444, addInt(idx_2952803445, 1));
              idx_2952803445 = -1;
              }
              else {
                var oHEX60gensym64_2952803448 = next_2986344641(n_2952803444);
                if (!isSome_2986346330(oHEX60gensym64_2952803448)) Temporary9 = false; else {                  var ne_2952803449 = get_2986346350(oHEX60gensym64_2952803448);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2952803444 == newNode_2952803378));                }              if (Temporary8) {
              n_2952803444 = ne_2952803449;
              idx_2952803445 = -1;
              }
              else {
              if (((!((n_2952803444.parent == null)) && !((n_2952803444 == newNode_2952803378))) && !((n_2952803444.parent == newNode_2952803378)))) {
              idx_2952803445 = index_2986344556(n_2952803444);
              n_2952803444 = n_2952803444.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2952803446 = addInt(i_2952803446, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2952803341(self_2952803417, nodeTemplate_2952803418) {
    replaceEmpty_2952803345(self_2952803417, nodeTemplate_2952803418);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2952803341(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2952803456(self_2952803457) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952803457)) {
    break BeforeRet;
    }
    
    var node_2952803458 = node_2952792695(self_2952803457);
    if (((node_2952803458.parent == null) || (node_2952803458.parent == self_2952803457.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2952803467 = node_2952803458.parent;
    var _ = deleteNode_2952798520(self_2952803457.document, node_2952792695(self_2952803457));
    nodeHEX3D_2952793818(self_2952803457, replaceNode_2952798456(self_2952803457.document, parent_2952803467, node_2952803458));
  };

  
}

function replaceParentJsWrapper_2952803452(self_2952803495) {
    replaceParent_2952803456(self_2952803495);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2952803452(this));};

function wrap_2952803516(self_2952803517, nodeTemplate_2952803518) {
      var Temporary1;
      
function HEX3Aanonymous_2952803549(n_2952803552) {
        var result_2952803555 = false;

          result_2952803555 = (n_2952803552.kind == 0);

        return result_2952803555;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2952803562(n_2952803565) {
        var result_2952803568 = false;

          result_2952803568 = shouldEditNode_2952800654(self_2952803517.document, n_2952803565);

        return result_2952803568;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2952797462(self_2952803517)) {
    break BeforeRet;
    }
    
    var typ_2952803519 = computeType_3003195250(ctx_2952790069, node_2952792695(self_2952803517), true);
      var oHEX60gensym739_2952803522 = createNodeFromAction_2952798775(self_2952803517, nodeTemplate_2952803518, node_2952792695(self_2952803517), typ_2952803519);
      if (!isSome_2952802434(oHEX60gensym739_2952803522)) Temporary1 = false; else {        var newNodeIndex_2952803545 = nimCopy(null, get_2952802451(oHEX60gensym739_2952803522), NTI2952795063);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2952803546 = newNodeIndex_2952803545["Field0"];
    var index_2952803547 = newNodeIndex_2952803545["Field1"];
    var oldNode_2952803548 = node_2952792695(self_2952803517);
    nodeHEX3D_2952793818(self_2952803517, replaceNode_2952798456(self_2952803517.document, node_2952792695(self_2952803517), newNode_2952803546));
    Label2: {
      var i_2952803560 = 0;
      var emptyNode_2952803561 = null;
      var colontmp__2952803630 = null;
      colontmp__2952803630 = HEX3Aanonymous_2952803549;
      var i_2952803631 = 0;
      Label3: {
        var __2952803633 = 0;
        var child_2952803634 = null;
        var n_2952803635 = newNode_2952803546;
        var idx_2952803636 = -1;
        var i_2952803637 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2952803636 == -1)) {
              __2952803633 = i_2952803637;
              child_2952803634 = n_2952803635;
              if (colontmp__2952803630(child_2952803634)) {
              i_2952803560 = i_2952803631;
              emptyNode_2952803561 = child_2952803634;
              if ((i_2952803560 == index_2952803547)) {
              nodeHEX3D_2952793818(self_2952803517, replaceNode_2952798456(self_2952803517.document, emptyNode_2952803561, oldNode_2952803548));
              break Label2;
              }
              
              i_2952803631 = addInt(i_2952803631, 1);
              }
              
              }
              
              if ((addInt(idx_2952803636, 1) < len_2986344536(n_2952803635))) {
              n_2952803635 = HEX5BHEX5D_2986344532(n_2952803635, addInt(idx_2952803636, 1));
              idx_2952803636 = -1;
              }
              else {
                var oHEX60gensym64_2952803639 = next_2986344641(n_2952803635);
                if (!isSome_2986346330(oHEX60gensym64_2952803639)) Temporary8 = false; else {                  var ne_2952803640 = get_2986346350(oHEX60gensym64_2952803639);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2952803635 == newNode_2952803546));                }              if (Temporary7) {
              n_2952803635 = ne_2952803640;
              idx_2952803636 = -1;
              }
              else {
              if (((!((n_2952803635.parent == null)) && !((n_2952803635 == newNode_2952803546))) && !((n_2952803635.parent == newNode_2952803546)))) {
              idx_2952803636 = index_2986344556(n_2952803635);
              n_2952803635 = n_2952803635.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2952803637 = addInt(i_2952803637, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2952803569 = 0;
      var emptyNode_2952803570 = null;
      var colontmp__2952803642 = null;
      colontmp__2952803642 = HEX3Aanonymous_2952803562;
      var i_2952803643 = 0;
      Label10: {
        var __2952803645 = 0;
        var child_2952803646 = null;
        var n_2952803647 = newNode_2952803546;
        var idx_2952803648 = -1;
        var i_2952803649 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2952803648 == -1)) {
              __2952803645 = i_2952803649;
              child_2952803646 = n_2952803647;
              if (colontmp__2952803642(child_2952803646)) {
              __2952803569 = i_2952803643;
              emptyNode_2952803570 = child_2952803646;
              nodeHEX3D_2952793818(self_2952803517, emptyNode_2952803570);
              var _ = tryEdit_2952797619(self_2952803517, node_2952792695(self_2952803517));
              break Label9;
              i_2952803643 = addInt(i_2952803643, 1);
              }
              
              }
              
              if ((addInt(idx_2952803648, 1) < len_2986344536(n_2952803647))) {
              n_2952803647 = HEX5BHEX5D_2986344532(n_2952803647, addInt(idx_2952803648, 1));
              idx_2952803648 = -1;
              }
              else {
                var oHEX60gensym64_2952803651 = next_2986344641(n_2952803647);
                if (!isSome_2986346330(oHEX60gensym64_2952803651)) Temporary15 = false; else {                  var ne_2952803652 = get_2986346350(oHEX60gensym64_2952803651);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2952803647 == newNode_2952803546));                }              if (Temporary14) {
              n_2952803647 = ne_2952803652;
              idx_2952803648 = -1;
              }
              else {
              if (((!((n_2952803647.parent == null)) && !((n_2952803647 == newNode_2952803546))) && !((n_2952803647.parent == newNode_2952803546)))) {
              idx_2952803648 = index_2986344556(n_2952803647);
              n_2952803647 = n_2952803647.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2952803649 = addInt(i_2952803649, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2952803512(self_2952803608, nodeTemplate_2952803609) {
    wrap_2952803516(self_2952803608, nodeTemplate_2952803609);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2952803512(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2952803659(self_2952803660) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2952797462(self_2952803660)) {
    break BeforeRet;
    }
    
    var current_2952803661 = node_2952792695(self_2952803660);
    Label1: {
      var emptyNode_2952803662 = null;
      var colontmp__2952803710 = null;
      colontmp__2952803710 = node_2952792695(self_2952803660);
      var idx_2952803711 = 0;
      var n_2952803712 = colontmp__2952803710;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952803712 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952803712), 1)), subInt(idx_2952803711, 1))) {
            n_2952803712 = HEX5BHEX5D_2986344532(n_2952803712, subInt(idx_2952803711, 1));
            idx_2952803711 = len_2986344536(n_2952803712);
            }
            else {
              var oHEX60gensym83_2952803714 = prev_2986344687(n_2952803712);
              if (!isSome_2986346330(oHEX60gensym83_2952803714)) Temporary4 = false; else {                var ne_2952803715 = get_2986346350(oHEX60gensym83_2952803714);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2952803662 = n_2952803712;
            if ((!((emptyNode_2952803662 == current_2952803661)) && shouldEditNode_2952800654(self_2952803660.document, emptyNode_2952803662))) {
            nodeHEX3D_2952793818(self_2952803660, emptyNode_2952803662);
            var _ = tryEdit_2952797619(self_2952803660, node_2952792695(self_2952803660));
            break Label1;
            }
            
            n_2952803712 = ne_2952803715;
            idx_2952803711 = len_2986344536(n_2952803712);
            }
            else {
              emptyNode_2952803662 = n_2952803712;
              if ((!((emptyNode_2952803662 == current_2952803661)) && shouldEditNode_2952800654(self_2952803660.document, emptyNode_2952803662))) {
              nodeHEX3D_2952793818(self_2952803660, emptyNode_2952803662);
              var _ = tryEdit_2952797619(self_2952803660, node_2952792695(self_2952803660));
              break Label1;
              }
              
              idx_2952803711 = index_2986344556(n_2952803712);
              n_2952803712 = n_2952803712.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2952803655(self_2952803694) {
    editPrevEmpty_2952803659(self_2952803694);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2952803655(this));};

function editNextEmpty_2952803722(self_2952803723) {
      
function HEX3Aanonymous_2952803725(n_2952803728) {
        var result_2952803731 = false;

          result_2952803731 = (!((n_2952803728 == current_2952803724)) && shouldEditNode_2952800654(self_2952803723.document, n_2952803728));

        return result_2952803731;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2952797462(self_2952803723)) {
    break BeforeRet;
    }
    
    var current_2952803724 = node_2952792695(self_2952803723);
    Label1: {
      var __2952803736 = 0;
      var emptyNode_2952803737 = null;
      var colontmp__2952803781 = null;
      var colontmp__2952803782 = null;
      colontmp__2952803781 = node_2952792695(self_2952803723);
      colontmp__2952803782 = HEX3Aanonymous_2952803725;
      var i_2952803783 = 0;
      Label2: {
        var __2952803785 = 0;
        var child_2952803786 = null;
        var n_2952803787 = colontmp__2952803781;
        var idx_2952803788 = -1;
        var i_2952803789 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2952803788 == -1)) {
              __2952803785 = i_2952803789;
              child_2952803786 = n_2952803787;
              if (colontmp__2952803782(child_2952803786)) {
              __2952803736 = i_2952803783;
              emptyNode_2952803737 = child_2952803786;
              nodeHEX3D_2952793818(self_2952803723, emptyNode_2952803737);
              var _ = tryEdit_2952797619(self_2952803723, node_2952792695(self_2952803723));
              break Label1;
              i_2952803783 = addInt(i_2952803783, 1);
              }
              
              }
              
              if ((addInt(idx_2952803788, 1) < len_2986344536(n_2952803787))) {
              n_2952803787 = HEX5BHEX5D_2986344532(n_2952803787, addInt(idx_2952803788, 1));
              idx_2952803788 = -1;
              }
              else {
                var oHEX60gensym64_2952803791 = next_2986344641(n_2952803787);
                if (!isSome_2986346330(oHEX60gensym64_2952803791)) Temporary7 = false; else {                  var ne_2952803792 = get_2986346350(oHEX60gensym64_2952803791);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2952803787 == null));                }              if (Temporary6) {
              n_2952803787 = ne_2952803792;
              idx_2952803788 = -1;
              }
              else {
              if (((!((n_2952803787.parent == null)) && !((n_2952803787 == null))) && !((n_2952803787.parent == null)))) {
              idx_2952803788 = index_2986344556(n_2952803787);
              n_2952803787 = n_2952803787.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2952803789 = addInt(i_2952803789, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2952803718(self_2952803765) {
    editNextEmpty_2952803722(self_2952803765);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2952803718(this));};

function rename_2952803799(self_2952803800) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952803800)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2952797619(self_2952803800, node_2952792695(self_2952803800));
  };

  
}

function renameJsWrapper_2952803795(self_2952803828) {
    rename_2952803799(self_2952803828);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2952803795(this));};

function selectPrevCompletion_2952803849(self_2952803850) {
    if ((0 < (self_2952803850.completions).length)) {
    self_2952803850.selectedCompletion = clamp_1660945119(subInt(self_2952803850.selectedCompletion, 1), 0, subInt((self_2952803850.completions).length, 1));
    }
    else {
      self_2952803850.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionJsWrapper2_2952803845(self_2952803889) {
    selectPrevCompletion_2952803849(self_2952803889);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2952803845(this));};

function selectNextCompletion_2952803910(editor_2952803911) {
    if ((0 < (editor_2952803911.completions).length)) {
    editor_2952803911.selectedCompletion = clamp_1660945119(addInt(editor_2952803911.selectedCompletion, 1), 0, subInt((editor_2952803911.completions).length, 1));
    }
    else {
      editor_2952803911.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionJsWrapper2_2952803906(editor_2952803950) {
    selectNextCompletion_2952803910(editor_2952803950);

  
}
editor_ast_prototype.selectNextCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (selectNextCompletionJsWrapper2_2952803906(editor_));};

function createDefaultNode_2952800310(editor_2952800311, kind_2952800312) {
  var result_2952800314 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2952800312) {
    case 0:
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: {kind: 0, id: newId_2181038297(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 1:
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 2:
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 3:
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym442_2952800331 = null;
        Label2: {
          var res_2952800337 = null;
          res_2952800337 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800337.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952800337.id = nimCopy(res_2952800337.id, newId_2181038297(), NTI2181038083);
          Label4: {
            Label5: {
              var res_2952800340 = null;
              res_2952800340 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800340.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952800337, res_2952800340);
        };
      };
      var node_2952800359 = res_2952800337;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800359, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym449_2952800367 = null;
        Label8: {
          var res_2952800373 = null;
          res_2952800373 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800373.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952800373.id = nimCopy(res_2952800373.id, newId_2181038297(), NTI2181038083);
          Label10: {
            Label11: {
              var res_2952800376 = null;
              res_2952800376 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800376.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800373, res_2952800376);
            Label13: {
              var res_2952800378 = null;
              res_2952800378 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800378.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800373, res_2952800378);
          };
        };
      };
      var node_2952800406 = res_2952800373;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800406, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym459_2952800414 = null;
        Label16: {
          var res_2952800420 = null;
          res_2952800420 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800420.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2952800420.id = nimCopy(res_2952800420.id, newId_2181038297(), NTI2181038083);
          Label18: {
            Label19: {
              var res_2952800423 = null;
              res_2952800423 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800423.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800420, res_2952800423);
            Label21: {
              var res_2952800425 = null;
              res_2952800425 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800425.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800420, res_2952800425);
          };
        };
      };
      var node_2952800453 = res_2952800420;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800453, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym469_2952800461 = null;
        Label24: {
          var res_2952800467 = null;
          res_2952800467 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800467.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2952800469 = null;
              res_2952800469 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800469.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800467, res_2952800469);
            Label29: {
              var res_2952800471 = null;
              res_2952800471 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800471.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800467, res_2952800471);
            Label31: {
              var res_2952800473 = null;
              res_2952800473 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800473.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2952800475 = null;
                  res_2952800475 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2952800475.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2986344486(res_2952800473, res_2952800475);
            };
            add_2986344486(res_2952800467, res_2952800473);
          };
        };
      };
      var node_2952800521 = res_2952800467;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800521, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym485_2952800529 = null;
        Label37: {
          var res_2952800535 = null;
          res_2952800535 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800535.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2952800537 = null;
              res_2952800537 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800537.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800535, res_2952800537);
            Label42: {
              var res_2952800539 = null;
              res_2952800539 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800539.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800535, res_2952800539);
          };
        };
      };
      var node_2952800567 = res_2952800535;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800567, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym495_2952800575 = null;
        Label45: {
          var res_2952800581 = null;
          res_2952800581 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800581.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2952800583 = null;
              res_2952800583 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800583.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800581, res_2952800583);
            Label50: {
              var res_2952800585 = null;
              res_2952800585 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800585.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2986344486(res_2952800581, res_2952800585);
          };
        };
      };
      var node_2952800613 = res_2952800581;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800613, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym505_2952800621 = null;
        Label53: {
          var res_2952800627 = null;
          res_2952800627 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2952800627.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2952800629 = null;
              res_2952800629 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2952800629.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2986344486(res_2952800627, res_2952800629);
        };
      };
      var node_2952800648 = res_2952800627;
      result_2952800314 = nimCopy(result_2952800314, some_2952798815({Field0: node_2952800648, Field1: 0}), NTI2952795068);
      break BeforeRet;
      break;
    default: 
      result_2952800314 = nimCopy(result_2952800314, none_2952799316(), NTI2952795068);
      break BeforeRet;
      break;
    }
  };

  return result_2952800314;

}

function applySelectedCompletion_2952803971(editor_2952803972) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2952804077(n_2952804080) {
          var result_2952804083 = false;

            result_2952804083 = shouldEditNode_2952800654(editor_2952803972.document, n_2952804080);

          return result_2952804083;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2952803972.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2952803972.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2952803980 = nimCopy(null, editor_2952803972.completions[chckIndx(editor_2952803972.selectedCompletion, 0, (editor_2952803972.completions).length - 1)], NTI2952791524);
    var completionText_2952803981 = nimCopy(null, editor_2952803972.completionText, NTI33554449);
    var fmtRes_2952803986 = [mnewString(0)];
    fmtRes_2952803986[0].push.apply(fmtRes_2952803986[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2332033380(fmtRes_2952803986, 0, editor_2952803972.selectedCompletion, []);
    fmtRes_2952803986[0].push.apply(fmtRes_2952803986[0], [32,40]);;
    formatValue_721420459(fmtRes_2952803986, 0, completionText_2952803981, []);
    fmtRes_2952803986[0].push.apply(fmtRes_2952803986[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952803986[0], NTI33554449)]);
    finishEdit_2952797888(editor_2952803972, false);
    switch (com_2952803980.kind) {
    case 0:
        var Temporary2 = com_2952803980;
        if (ConstSet188[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952791523)); }
        var oHEX60gensym793_2952803994 = getSymbol_3003185027(ctx_2952790069, Temporary2.id);
        if (!isSome_3087009345(oHEX60gensym793_2952803994)) Temporary1 = false; else {          var symbol_2952804017 = get_3087009365(oHEX60gensym793_2952803994);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2952793818(editor_2952803972, replaceNode_2952798456(editor_2952803972.document, node_2952792695(editor_2952803972), {kind: 1, reff: nimCopy(null, symbol_2952804017.id, NTI2181038083), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2952803980;
        if (ConstSet189[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2952791523)); }
        var oHEX60gensym794_2952804020 = createDefaultNode_2952800310(editor_2952803972, Temporary4.nodeKind);
        if (!isSome_2952802434(oHEX60gensym794_2952804020)) Temporary3 = false; else {          var nodeIndex_2952804043 = nimCopy(null, get_2952802451(oHEX60gensym794_2952804020), NTI2952795063);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2952804044 = nodeIndex_2952804043["Field0"];
      var __2952804045 = nodeIndex_2952804043["Field1"];
      var _ = replaceNode_2952798456(editor_2952803972.document, node_2952792695(editor_2952803972), newNode_2952804044);
      if ((newNode_2952804044.kind == 2)) {
      newNode_2952804044.text = nimCopy(null, completionText_2952803981, NTI33554449);
      updateNode_3003234352(ctx_2952790069, newNode_2952804044);
      }
      else {
      if ((newNode_2952804044.kind == 3)) {
      if (!((completionText_2952803981[chckIndx(0, 0, (completionText_2952803981).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,53,57,55,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2952804044.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2952803981, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_3003234352(ctx_2952790069, newNode_2952804044);
      }
      }
      nodeHEX3D_2952793818(editor_2952803972, newNode_2952804044);
      Label5: {
        var __2952804084 = 0;
        var emptyNode_2952804085 = null;
        var colontmp__2952804129 = null;
        colontmp__2952804129 = HEX3Aanonymous_2952804077;
        var i_2952804130 = 0;
        Label6: {
          var __2952804132 = 0;
          var child_2952804133 = null;
          var n_2952804134 = newNode_2952804044;
          var idx_2952804135 = -1;
          var i_2952804136 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2952804135 == -1)) {
                __2952804132 = i_2952804136;
                child_2952804133 = n_2952804134;
                if (colontmp__2952804129(child_2952804133)) {
                __2952804084 = i_2952804130;
                emptyNode_2952804085 = child_2952804133;
                nodeHEX3D_2952793818(editor_2952803972, emptyNode_2952804085);
                var _ = tryEdit_2952797619(editor_2952803972, node_2952792695(editor_2952803972));
                break Label5;
                i_2952804130 = addInt(i_2952804130, 1);
                }
                
                }
                
                if ((addInt(idx_2952804135, 1) < len_2986344536(n_2952804134))) {
                n_2952804134 = HEX5BHEX5D_2986344532(n_2952804134, addInt(idx_2952804135, 1));
                idx_2952804135 = -1;
                }
                else {
                  var oHEX60gensym64_2952804138 = next_2986344641(n_2952804134);
                  if (!isSome_2986346330(oHEX60gensym64_2952804138)) Temporary11 = false; else {                    var ne_2952804139 = get_2986346350(oHEX60gensym64_2952804138);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2952804134 == newNode_2952804044));                  }                if (Temporary10) {
                n_2952804134 = ne_2952804139;
                idx_2952804135 = -1;
                }
                else {
                if (((!((n_2952804134.parent == null)) && !((n_2952804134 == newNode_2952804044))) && !((n_2952804134.parent == newNode_2952804044)))) {
                idx_2952804135 = index_2986344556(n_2952804134);
                n_2952804134 = n_2952804134.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2952804136 = addInt(i_2952804136, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2952803967(editor_2952804113) {
    applySelectedCompletion_2952803971(editor_2952804113);

  
}
editor_ast_prototype.applySelectedCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (applySelectedCompletionJsWrapper2_2952803967(editor_));};

function cancelAndNextCompletion_2952804182(self_2952804183) {
    finishEdit_2952797888(self_2952804183, false);
    editNextEmpty_2952803722(self_2952804183);

  
}

function cancelAndNextCompletionJsWrapper_2952804178(self_2952804211) {
    cancelAndNextCompletion_2952804182(self_2952804211);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2952804178(this));};

function cancelAndPrevCompletion_2952804232(self_2952804233) {
    finishEdit_2952797888(self_2952804233, false);
    editPrevEmpty_2952803659(self_2952804233);

  
}

function cancelAndPrevCompletionJsWrapper_2952804228(self_2952804261) {
    cancelAndPrevCompletion_2952804232(self_2952804261);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2952804228(this));};

function cancelAndDelete_2952804282(self_2952804283) {
    finishEdit_2952797888(self_2952804283, false);
    self_2952804283.deletedNode = nimCopy(self_2952804283.deletedNode, some_2986344674(node_2952792695(self_2952804283)), NTI2986344567);
    nodeHEX3D_2952793818(self_2952804283, deleteNode_2952798520(self_2952804283.document, node_2952792695(self_2952804283)));

  
}

function cancelAndDeleteJsWrapper_2952804278(self_2952804314) {
    cancelAndDelete_2952804282(self_2952804314);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2952804278(this));};

function none_2986344626() {
  var result_2986344633 = ({val: 0, has: false});

  return result_2986344633;

}

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function index_2986344618(node_2986344619, parent_2986344620) {
  var result_2986344622 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_2986344619.parent == null)) {
    result_2986344622 = nimCopy(result_2986344622, none_2986344626(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_2986344619.parent == parent_2986344620)) {
    result_2986344622 = nimCopy(result_2986344622, some_1191184367(index_2986344556(node_2986344619)), NTI1191183280);
    break BeforeRet;
    }
    
    result_2986344622 = nimCopy(result_2986344622, index_2986344618(node_2986344619.parent, parent_2986344620), NTI1191183280);
    break BeforeRet;
  };

  return result_2986344622;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2952804335(self_2952804336) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2952804337 = isEditing_2952797462(self_2952804336);
    finishEdit_2952797888(self_2952804336, false);
    var targetNode_2952804344 = none_2986344655();
    Label1: {
      var next_2952804345 = null;
      var colontmp__2952804485 = null;
      colontmp__2952804485 = node_2952792695(self_2952804336);
      var idx_2952804486 = 0;
      var n_2952804487 = colontmp__2952804485;
      Label2: {
          Label3: while (true) {
          if (!!((n_2952804487 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952804487), 1)), subInt(idx_2952804486, 1))) {
            n_2952804487 = HEX5BHEX5D_2986344532(n_2952804487, subInt(idx_2952804486, 1));
            idx_2952804486 = len_2986344536(n_2952804487);
            }
            else {
              var oHEX60gensym83_2952804489 = prev_2986344687(n_2952804487);
              if (!isSome_2986346330(oHEX60gensym83_2952804489)) Temporary4 = false; else {                var ne_2952804490 = get_2986346350(oHEX60gensym83_2952804489);
                Temporary4 = true;              }            if (Temporary4) {
            next_2952804345 = n_2952804487;
            Label5: {
              if ((next_2952804345 == node_2952792695(self_2952804336))) {
              break Label5;
              }
              
              if ((canInsertInto_2952801002(self_2952804336, next_2952804345) && (!((next_2952804345 == node_2952792695(self_2952804336).parent)) || (0 < index_2986344556(node_2952792695(self_2952804336)))))) {
              targetNode_2952804344 = nimCopy(targetNode_2952804344, some_2986344674(next_2952804345), NTI2986344588);
              break Label1;
              }
              
            };
            n_2952804487 = ne_2952804490;
            idx_2952804486 = len_2986344536(n_2952804487);
            }
            else {
              next_2952804345 = n_2952804487;
              Label6: {
                if ((next_2952804345 == node_2952792695(self_2952804336))) {
                break Label6;
                }
                
                if ((canInsertInto_2952801002(self_2952804336, next_2952804345) && (!((next_2952804345 == node_2952792695(self_2952804336).parent)) || (0 < index_2986344556(node_2952792695(self_2952804336)))))) {
                targetNode_2952804344 = nimCopy(targetNode_2952804344, some_2986344674(next_2952804345), NTI2986344588);
                break Label1;
                }
                
              };
              idx_2952804486 = index_2986344556(n_2952804487);
              n_2952804487 = n_2952804487.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym833_2952804359 = nimCopy(null, targetNode_2952804344, NTI2986344588);
      if (!isSome_2986346330(oHEX60gensym833_2952804359)) Temporary7 = false; else {        var newParent_2952804382 = get_2986346350(oHEX60gensym833_2952804359);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2952804383 = node_2952792695(self_2952804336);
    if ((nodeToMove_2952804383.parent == newParent_2952804382)) {
    Temporary8 = subInt(index_2986344556(nodeToMove_2952804383), 1);
    }
    else {
      var oHEX60gensym834_2952804390 = index_2986344618(nodeToMove_2952804383, newParent_2952804382);
      if (!isSome_1191185117(oHEX60gensym834_2952804390)) Temporary9 = false; else {        var index_2952804413 = get_1191185211(oHEX60gensym834_2952804390);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2952804413;
    }
    else {
    Temporary8 = len_2986344536(newParent_2952804382);
    }
    }
    var index_2952804414 = Temporary8;
    nodeHEX3D_2952793818(self_2952804336, deleteNode_2952798520(self_2952804336.document, nodeToMove_2952804383));
      var oHEX60gensym835_2952804417 = insertNode_2952796182(self_2952804336.document, newParent_2952804382, index_2952804414, nodeToMove_2952804383);
      if (!isSome_2986346330(oHEX60gensym835_2952804417)) Temporary10 = false; else {        var newNode_2952804440 = get_2986346350(oHEX60gensym835_2952804417);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2952793818(self_2952804336, newNode_2952804440);
    if (wasEditing_2952804337) {
    var _ = tryEdit_2952797619(self_2952804336, node_2952792695(self_2952804336));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2952804331(self_2952804468) {
    moveNodeToPrevSpace_2952804335(self_2952804468);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2952804331(this));};

function moveNodeToNextSpace_2952804497(self_2952804498) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2952804499 = isEditing_2952797462(self_2952804498);
    finishEdit_2952797888(self_2952804498, false);
    var targetNode_2952804506 = none_2986344655();
    Label1: {
      var __2952804507 = 0;
      var next_2952804508 = null;
      var colontmp__2952804648 = null;
      var colontmp__2952804649 = 0;
      colontmp__2952804648 = node_2952792695(self_2952804498).parent;
      colontmp__2952804649 = index_2986344556(node_2952792695(self_2952804498));
      var n_2952804651 = colontmp__2952804648;
      var idx_2952804652 = colontmp__2952804649;
      var i_2952804653 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2952804652 == subInt(len_2986344536(n_2952804651), 1))) {
            var colontmp__2952804656 = nimCopy(null, {Field0: i_2952804653, Field1: n_2952804651}, NTI2952792468);
            __2952804507 = colontmp__2952804656["Field0"];
            next_2952804508 = colontmp__2952804656["Field1"];
            Label5: {
              if ((next_2952804508 == node_2952792695(self_2952804498))) {
              break Label5;
              }
              
              if ((canInsertInto_2952801002(self_2952804498, next_2952804508) && (!((next_2952804508 == node_2952792695(self_2952804498).parent)) || (addInt(index_2986344556(node_2952792695(self_2952804498)), 1) < len_2986344536(node_2952792695(self_2952804498).parent))))) {
              targetNode_2952804506 = nimCopy(targetNode_2952804506, some_2986344674(next_2952804508), NTI2986344588);
              break Label1;
              }
              
            };
            if (((!((n_2952804651.parent == null)) && !((n_2952804651 == null))) && !((n_2952804651.parent == null)))) {
            idx_2952804652 = index_2986344556(n_2952804651);
            n_2952804651 = n_2952804651.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2952804652, 1) < len_2986344536(colontmp__2952804648))) {
            n_2952804651 = HEX5BHEX5D_2986344532(n_2952804651, addInt(idx_2952804652, 1));
            idx_2952804652 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2952804653 = addInt(i_2952804653, 1);
            }
          }
      };
    };
      var oHEX60gensym845_2952804522 = nimCopy(null, targetNode_2952804506, NTI2986344588);
      if (!isSome_2986346330(oHEX60gensym845_2952804522)) Temporary6 = false; else {        var newParent_2952804545 = get_2986346350(oHEX60gensym845_2952804522);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2952804546 = node_2952792695(self_2952804498);
    if ((nodeToMove_2952804546.parent == newParent_2952804545)) {
    Temporary7 = addInt(index_2986344556(nodeToMove_2952804546), 1);
    }
    else {
      var oHEX60gensym846_2952804553 = index_2986344618(nodeToMove_2952804546, newParent_2952804545);
      if (!isSome_1191185117(oHEX60gensym846_2952804553)) Temporary8 = false; else {        var index_2952804576 = get_1191185211(oHEX60gensym846_2952804553);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2952804576, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2952804577 = Temporary7;
    nodeHEX3D_2952793818(self_2952804498, deleteNode_2952798520(self_2952804498.document, nodeToMove_2952804546));
      var oHEX60gensym847_2952804580 = insertNode_2952796182(self_2952804498.document, newParent_2952804545, index_2952804577, nodeToMove_2952804546);
      if (!isSome_2986346330(oHEX60gensym847_2952804580)) Temporary9 = false; else {        var newNode_2952804603 = get_2986346350(oHEX60gensym847_2952804580);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2952793818(self_2952804498, newNode_2952804603);
    if (wasEditing_2952804499) {
    var _ = tryEdit_2952797619(self_2952804498, node_2952792695(self_2952804498));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2952804493(self_2952804631) {
    moveNodeToNextSpace_2952804497(self_2952804631);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2952804493(this));};

function popLast_2952794075(deq_2952794077) {
    var Temporary1;

  var result_2952794078 = null;

    if ((deq_2952794077.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2952794077.count = subInt(deq_2952794077.count, 1);
    deq_2952794077.tail = (subInt(deq_2952794077.tail, 1) & deq_2952794077.mask);
    Temporary1 = deq_2952794077.data[chckIndx(deq_2952794077.tail, 0, (deq_2952794077.data).length - 1)];
    deq_2952794077.data[chckIndx(deq_2952794077.tail, 0, (deq_2952794077.data).length - 1)] = genericReset(deq_2952794077.data[chckIndx(deq_2952794077.tail, 0, (deq_2952794077.data).length - 1)], NTI2986344452);
    result_2952794078 = Temporary1;

  return result_2952794078;

}

function addFirst_2952794106(deq_2952794108, item_2952794109) {
    expandIfNeeded_2952793851(deq_2952794108);
    deq_2952794108.count = addInt(deq_2952794108.count, 1);
    deq_2952794108.head = (subInt(deq_2952794108.head, 1) & deq_2952794108.mask);
    deq_2952794108.data[chckIndx(deq_2952794108.head, 0, (deq_2952794108.data).length - 1)] = item_2952794109;

  
}

function selectPrevNode_2952794005(editor_2952794006) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2952793983(editor_2952794006.selectionHistory))) break Label2;
          var node_2952794088 = popLast_2952794075(editor_2952794006.selectionHistory);
          if (((!((node_2952794088 == null)) && !((node_2952794088.parent == null))) && (base_2986344542(node_2952794088) == editor_2952794006.document.rootNode))) {
          addFirst_2952794106(editor_2952794006.selectionHistory, editor_2952794006.selectedNode);
          editor_2952794006.selectedNode = node_2952794088;
          handleSelectedNodeChanged_2952792698(editor_2952794006);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2952804663(self_2952804664) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952804664)) {
    break BeforeRet;
    }
    
    selectPrevNode_2952794005(self_2952804664);
  };

  
}

function selectPrevJsWrapper2_2952804659(self_2952804692) {
    selectPrev_2952804663(self_2952804692);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2952804659(this));};

function selectNextNode_2952794123(editor_2952794124) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2952793983(editor_2952794124.selectionHistory))) break Label2;
          var node_2952794196 = popFirst_2952793992(editor_2952794124.selectionHistory);
          if (((!((node_2952794196 == null)) && !((node_2952794196.parent == null))) && (base_2986344542(node_2952794196) == editor_2952794124.document.rootNode))) {
          addLast_2952793842(editor_2952794124.selectionHistory, editor_2952794124.selectedNode);
          editor_2952794124.selectedNode = node_2952794196;
          handleSelectedNodeChanged_2952792698(editor_2952794124);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2952804714(self_2952804715) {
  BeforeRet: {
    if (isEditing_2952797462(self_2952804715)) {
    break BeforeRet;
    }
    
    selectNextNode_2952794123(self_2952804715);
  };

  
}

function selectNextJsWrapper2_2952804710(self_2952804743) {
    selectNext_2952804714(self_2952804743);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2952804710(this));};

function len_2952805087(t_2952805090) {
  var result_2952805091 = 0;

    result_2952805091 = t_2952805090.counter;

  return result_2952805091;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2583691902 = 0;
      colontmp__2583691902 = (a_1979711593).length - 1;
      var res_2583691903 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2583691903 <= colontmp__2583691902)) break Label3;
            i_1979711612 = res_2583691903;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2583691903 = addInt(res_2583691903, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2952805698 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952805698 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2952805698;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2952805698 = addInt(res_2952805698, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function getCompletions_3170893860(self_3170893861, text_3170893862) {
    
function HEX3Aanonymous_3170893884(a_3170893903, b_3170893904) {
      var result_3170893909 = 0;

        result_3170893909 = cmp_3170893896(a_3170893903.score, b_3170893904.score);

      return result_3170893909;

    }

  var result_3170893863 = [];

  BeforeRet: {
    result_3170893863 = nimCopy(null, [], NTI3170893842);
    var symbols_3170893868 = computeSymbols_3003205356(ctx_2952790069, self_3170893861.document.rootNode, true);
    Label1: {
      var key_3170893873 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3170893874 = null;
      var L_2952805689 = len_3087009054(symbols_3170893868);
      Label2: {
        var h_2952805691 = 0;
        var colontmp__2952805692 = 0;
        colontmp__2952805692 = (symbols_3170893868.data).length - 1;
        var res_2952805693 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2952805693 <= colontmp__2952805692)) break Label4;
              h_2952805691 = res_2952805693;
              if (isFilled_1308622880(symbols_3170893868.data[chckIndx(h_2952805691, 0, (symbols_3170893868.data).length - 1)].Field0)) {
              var colontmp__2952805696 = nimCopy(null, {Field0: nimCopy(null, symbols_3170893868.data[chckIndx(h_2952805691, 0, (symbols_3170893868.data).length - 1)].Field1, NTI2181038083), Field1: symbols_3170893868.data[chckIndx(h_2952805691, 0, (symbols_3170893868.data).length - 1)].Field2}, NTI3087008730);
              key_3170893873 = nimCopy(key_3170893873, colontmp__2952805696["Field0"], NTI2181038083);
              symbol_3170893874 = colontmp__2952805696["Field1"];
              Label5: {
                if (!((symbol_3170893874.kind == 0))) {
                break Label5;
                }
                
                var score_3170893879 = fuzzyMatchSmart_1979711572(text_3170893862, symbol_3170893874.name, true);
                result_3170893863.push({kind: 0, score: score_3170893879, id: nimCopy(null, symbol_3170893874.id, NTI2181038083), nodeKind: 0, name: []});;
              };
              if (!((len_3087009054(symbols_3170893868) == L_2952805689))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2952805693 = addInt(res_2952805693, 1);
            }
        };
      };
    };
    sort_3170893916(result_3170893863, HEX3Aanonymous_3170893884, 0);
    break BeforeRet;
  };

  return result_3170893863;

}

function updateCompletions_3170894072(self_3170894073) {
    var text_3170894074 = nsuJoinSep(content_2818573982(self_3170894073.textEditor.document), []);
    self_3170894073.completions = nimCopy(null, getCompletions_3170893860(self_3170894073, text_3170894074), NTI3170893834);
    if ((0 < (self_3170894073.completions).length)) {
    self_3170894073.selected = clamp_1660945119(self_3170894073.selected, 0, subInt((self_3170894073.completions).length, 1));
    }
    else {
      self_3170894073.selected = 0;
    }
    

  
}

function handleTextChanged_3170894266(self_3170894267) {
    updateCompletions_3170894072(self_3170894267);
    self_3170894267.selected = 0;

  
}

function pop_1291849124(s_1291849126, s_1291849126_Idx) {
  var result_1291849127 = null;

    var L_1291849131 = subInt((s_1291849126[s_1291849126_Idx]).length, 1);
    result_1291849127 = s_1291849126[s_1291849126_Idx][chckIndx(L_1291849131, 0, (s_1291849126[s_1291849126_Idx]).length - 1)];
    if (s_1291849126[s_1291849126_Idx].length < chckRange(L_1291849131, 0, 2147483647)) { for (var i = s_1291849126[s_1291849126_Idx].length ; i < chckRange(L_1291849131, 0, 2147483647) ; ++i) s_1291849126[s_1291849126_Idx].push(null); }
               else { s_1291849126[s_1291849126_Idx].length = chckRange(L_1291849131, 0, 2147483647); };

  return result_1291849127;

}

function popPopup_1291849107(self_1291849108, popup_1291849109) {
    if (((0 < (self_1291849108.popups).length) && (self_1291849108.popups[chckIndx((self_1291849108.popups).length - 1, 0, (self_1291849108.popups).length - 1)] == popup_1291849109))) {
    var _ = pop_1291849124(self_1291849108, "popups");
    }
    
    requestRender_2315255914(self_1291849108.platform, false);

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function handleUnknownPopupAction_1291848825(self_1291848826, popup_1291848827, action_1291848828, arg_1291848829) {
  var result_1291848830 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848830 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848840 = [mnewString(0)];
    fmtRes_1291848840[0].push.apply(fmtRes_1291848840[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848840, 0, action_1291848828, []);
    fmtRes_1291848840[0].push.apply(fmtRes_1291848840[0], [32]);;
    formatValue_721420459(fmtRes_1291848840, 0, arg_1291848829, []);
    fmtRes_1291848840[0].push.apply(fmtRes_1291848840[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848840, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848840[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848830 = 0;
    break BeforeRet;
  };

  return result_1291848830;

}

function handleAction_3170894232(self_3170894233, action_3170894234, arg_3170894235) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3170894236 = 0;

  BeforeRet: {
    switch (toJSStr(action_3170894234)) {
    case "accept":
      if ((self_3170894233.selected < (self_3170894233.completions).length)) {
      var Temporary1 = self_3170894233.completions[chckIndx(self_3170894233.selected, 0, (self_3170894233.completions).length - 1)];
      if (ConstSet191[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2952791523)); }
      self_3170894233.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1291849107(self_3170894233.editor, self_3170894233);
      break;
    case "cancel":
      popPopup_1291849107(self_3170894233.editor, self_3170894233);
      break;
    case "prev":
      if (((self_3170894233.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_3170894233.selected, (self_3170894233.completions).length), 1), (self_3170894233.completions).length);
      }
      
      self_3170894233.selected = Temporary2;
      break;
    case "next":
      if (((self_3170894233.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_3170894233.selected, 1), (self_3170894233.completions).length);
      }
      
      self_3170894233.selected = Temporary3;
      break;
    default: 
      result_3170894236 = handleUnknownPopupAction_1291848825(self_3170894233.editor, self_3170894233, action_3170894234, arg_3170894235);
      break BeforeRet;
      break;
    }
    result_3170894236 = 3;
    break BeforeRet;
  };

  return result_3170894236;

}

function newGotoPopup_3170894348(editor_3170894349, document_3170894350) {
    
function HEX3Aanonymous_3170894420(doc_3170894421) {
        handleTextChanged_3170894266(popup_3170894352);

      
    }
      
function HEX3Aanonymous_3170894469(actionHEX60gensym9HEX60gensym10_3170894470, argHEX60gensym9HEX60gensym10_3170894471) {
        var result_3170894472 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3170894457.config.handleActions) {
          var action_3170894473 = nimCopy(null, actionHEX60gensym9HEX60gensym10_3170894470, NTI33554449);
          var arg_3170894474 = nimCopy(null, argHEX60gensym9HEX60gensym10_3170894471, NTI33554449);
          var responseHEX60gensym9HEX60gensym10_3170894475 = handleAction_3170894232(popup_3170894352, action_3170894473, arg_3170894474);
          if (handlerHEX60gensym9_3170894457.config.consumeAllActions) {
          result_3170894472 = 3;
          break BeforeRet;
          }
          
          result_3170894472 = responseHEX60gensym9HEX60gensym10_3170894475;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym9_3170894457.config.consumeAllActions) {
          result_3170894472 = 3;
          break BeforeRet;
          }
          else {
            result_3170894472 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3170894472;

      }
      
function HEX3Aanonymous_3170894477(inputHEX60gensym9HEX60gensym11_3170894478) {
        var result_3170894479 = 0;

        BeforeRet: {
          if (handlerHEX60gensym9_3170894457.config.handleInputs) {
          var input_3170894480 = nimCopy(null, inputHEX60gensym9HEX60gensym11_3170894478, NTI33554449);
          result_3170894479 = 1;
          break BeforeRet;
          }
          else {
            result_3170894479 = 1;
            break BeforeRet;
          }
          
        };

        return result_3170894479;

      }

  var result_3170894351 = null;

  BeforeRet: {
    var popup_3170894352 = {editor: editor_3170894349, document: document_3170894350, m_type: NTI3170893828, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3170894352.textEditor = newTextEditor_2818590815(newTextDocument_3170894353([], [], false), editor_3170894349);
    setMode_2818583356(popup_3170894352.textEditor, [105,110,115,101,114,116]);
    popup_3170894352.textEditor.renderHeader = false;
    popup_3170894352.textEditor.lineNumbers = nimCopy(popup_3170894352.textEditor.lineNumbers, some_3170894395(0), NTI2818572554);
    popup_3170894352.textEditor.document.singleLine = true;
    var _ = subscribe_2818590863(popup_3170894352.textEditor.document.textChanged, HEX3Aanonymous_3170894420);
    Label1: {
      var handlerHEX60gensym9_3170894457 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym9_3170894457.config = getEventHandlerConfig_1291849154(editor_3170894349, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym9_3170894457.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(editor_3170894349, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym9_3170894457.handleAction = HEX3Aanonymous_3170894469;
      handlerHEX60gensym9_3170894457.handleInput = HEX3Aanonymous_3170894477;
    };
    popup_3170894352.eventHandler = handlerHEX60gensym9_3170894457;
    updateCompletions_3170894072(popup_3170894352);
    result_3170894351 = popup_3170894352;
    break BeforeRet;
  };

  return result_3170894351;

}

function init_2264924210(self_2264924211) {
    self_2264924211.id = newEditorId_2231370043();

  
}

function subscribe_1291848989(event_1291848991, callback_1291848992) {
  var result_1291848993 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291848993 = nimCopy(result_1291848993, newId_2181038297(), NTI2181038083);
    event_1291848991.handlers.push({Field0: nimCopy(null, result_1291848993, NTI2181038083), Field1: callback_1291848992});;

  return result_1291848993;

}

function pushPopup_1291849052(self_1291849053, popup_1291849054) {
    
function HEX3Aanonymous_1291849070() {
        requestRender_2315255914(self_1291849053.platform, false);

      
    }

    init_2264924210(popup_1291849054);
    self_1291849053.popups.push(popup_1291849054);;
    var _ = subscribe_1291848989(popup_1291849054.onMarkedDirty, HEX3Aanonymous_1291849070);
    requestRender_2315255914(self_1291849053.platform, false);

  
}

function goto_2952804765(self_2952804766, where_2952804767) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2952804811(n_2952804814) {
          var result_2952804817 = false;

            result_2952804817 = (!((n_2952804814 == node_2952792695(self_2952804766))) && (HEX3DHEX3D_2181038320(n_2952804814.id, id_2952804810) || HEX3DHEX3D_2181038320(n_2952804814.reff, id_2952804810)));

          return result_2952804817;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2952804838(n_2952804841) {
          var result_2952804844 = false;

            result_2952804844 = (!((n_2952804841 == node_2952792695(self_2952804766))) && (computeType_3003195250(ctx_2952790069, n_2952804841, true).kind == 0));

          return result_2952804844;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2952804864(n_2952804867) {
          var result_2952804870 = false;

            result_2952804870 = !((n_2952804867 == node_2952792695(self_2952804766)));

          return result_2952804870;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2952805488(id_2952805489) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym890_2952805492 = getAstNode_3003175776(ctx_2952790069, id_2952805489);
            if (!isSome_2986346330(oHEX60gensym890_2952805492)) Temporary2 = false; else {              var node_2952805515 = get_2986346350(oHEX60gensym890_2952805492);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_2986344542(node_2952805515) == self_2952804766.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2952793818(self_2952804766, node_2952805515);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2952797462(self_2952804766)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2952804767)) {
    case "definition":
        var oHEX60gensym873_2952804770 = computeSymbol_3003201856(ctx_2952790069, node_2952792695(self_2952804766), true);
        if (!isSome_3087009345(oHEX60gensym873_2952804770)) Temporary1 = false; else {          var sym_2952804793 = get_3087009365(oHEX60gensym873_2952804770);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2952804793.kind == 0) && !((sym_2952804793.node == self_2952804766.document.rootNode)))) {
      var Temporary2 = sym_2952804793;
      if (ConstSet190[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3087007753)); }
      nodeHEX3D_2952793818(self_2952804766, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2952804802 = node_2952792695(self_2952804766);
        var pos_2952804803 = 0;
        var _ = pos_2952804803;
        if ((expr_2952804802.kind == 1)) {
        Temporary4 = node_2952792695(self_2952804766).reff;
        }
        else {
        Temporary4 = node_2952792695(self_2952804766).id;
        }
        
      };
      var id_2952804810 = nimCopy(null, Temporary4, NTI2181038083);
      Label5: {
        var __2952804822 = 0;
        var n_2952804823 = null;
        var colontmp__2952805598 = null;
        var colontmp__2952805599 = null;
        colontmp__2952805598 = node_2952792695(self_2952804766);
        colontmp__2952805599 = HEX3Aanonymous_2952804811;
        var i_2952805600 = 0;
        Label6: {
          var __2952805602 = 0;
          var child_2952805603 = null;
          var n_2952805604 = colontmp__2952805598;
          var idx_2952805605 = -1;
          var i_2952805606 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2952805605 == -1)) {
                __2952805602 = i_2952805606;
                child_2952805603 = n_2952805604;
                if (colontmp__2952805599(child_2952805603)) {
                __2952804822 = i_2952805600;
                n_2952804823 = child_2952805603;
                nodeHEX3D_2952793818(self_2952804766, n_2952804823);
                break Label5;
                i_2952805600 = addInt(i_2952805600, 1);
                }
                
                }
                
                if ((addInt(idx_2952805605, 1) < len_2986344536(n_2952805604))) {
                n_2952805604 = HEX5BHEX5D_2986344532(n_2952805604, addInt(idx_2952805605, 1));
                idx_2952805605 = -1;
                }
                else {
                  var oHEX60gensym64_2952805608 = next_2986344641(n_2952805604);
                  if (!isSome_2986346330(oHEX60gensym64_2952805608)) Temporary11 = false; else {                    var ne_2952805609 = get_2986346350(oHEX60gensym64_2952805608);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2952805604 == null));                  }                if (Temporary10) {
                n_2952805604 = ne_2952805609;
                idx_2952805605 = -1;
                }
                else {
                if (((!((n_2952805604.parent == null)) && !((n_2952805604 == null))) && !((n_2952805604.parent == null)))) {
                idx_2952805605 = index_2986344556(n_2952805604);
                n_2952805604 = n_2952805604.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2952805606 = addInt(i_2952805606, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2952804824 = node_2952792695(self_2952804766);
        var pos_2952804825 = 0;
        var _ = pos_2952804825;
        if ((expr_2952804824.kind == 1)) {
        Temporary13 = node_2952792695(self_2952804766).reff;
        }
        else {
        Temporary13 = node_2952792695(self_2952804766).id;
        }
        
      };
      var id_2952804832 = nimCopy(null, Temporary13, NTI2181038083);
      Label14: {
        var n_2952804833 = null;
        var colontmp__2952805612 = null;
        colontmp__2952805612 = node_2952792695(self_2952804766);
        var idx_2952805613 = 0;
        var n_2952805614 = colontmp__2952805612;
        Label15: {
            Label16: while (true) {
            if (!!((n_2952805614 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952805614), 1)), subInt(idx_2952805613, 1))) {
              n_2952805614 = HEX5BHEX5D_2986344532(n_2952805614, subInt(idx_2952805613, 1));
              idx_2952805613 = len_2986344536(n_2952805614);
              }
              else {
                var oHEX60gensym83_2952805616 = prev_2986344687(n_2952805614);
                if (!isSome_2986346330(oHEX60gensym83_2952805616)) Temporary17 = false; else {                  var ne_2952805617 = get_2986346350(oHEX60gensym83_2952805616);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2952804833 = n_2952805614;
              if ((!((n_2952804833 == node_2952792695(self_2952804766))) && (HEX3DHEX3D_2181038320(n_2952804833.id, id_2952804832) || HEX3DHEX3D_2181038320(n_2952804833.reff, id_2952804832)))) {
              nodeHEX3D_2952793818(self_2952804766, n_2952804833);
              break Label14;
              }
              
              n_2952805614 = ne_2952805617;
              idx_2952805613 = len_2986344536(n_2952805614);
              }
              else {
                n_2952804833 = n_2952805614;
                if ((!((n_2952804833 == node_2952792695(self_2952804766))) && (HEX3DHEX3D_2181038320(n_2952804833.id, id_2952804832) || HEX3DHEX3D_2181038320(n_2952804833.reff, id_2952804832)))) {
                nodeHEX3D_2952793818(self_2952804766, n_2952804833);
                break Label14;
                }
                
                idx_2952805613 = index_2986344556(n_2952805614);
                n_2952805614 = n_2952805614.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2952804853 = 0;
        var n_2952804854 = null;
        var colontmp__2952805619 = null;
        var colontmp__2952805620 = null;
        colontmp__2952805619 = node_2952792695(self_2952804766);
        colontmp__2952805620 = HEX3Aanonymous_2952804838;
        var i_2952805621 = 0;
        Label19: {
          var __2952805623 = 0;
          var child_2952805624 = null;
          var n_2952805625 = colontmp__2952805619;
          var idx_2952805626 = -1;
          var i_2952805627 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2952805626 == -1)) {
                __2952805623 = i_2952805627;
                child_2952805624 = n_2952805625;
                if (colontmp__2952805620(child_2952805624)) {
                __2952804853 = i_2952805621;
                n_2952804854 = child_2952805624;
                nodeHEX3D_2952793818(self_2952804766, n_2952804854);
                break Label18;
                i_2952805621 = addInt(i_2952805621, 1);
                }
                
                }
                
                if ((addInt(idx_2952805626, 1) < len_2986344536(n_2952805625))) {
                n_2952805625 = HEX5BHEX5D_2986344532(n_2952805625, addInt(idx_2952805626, 1));
                idx_2952805626 = -1;
                }
                else {
                  var oHEX60gensym64_2952805629 = next_2986344641(n_2952805625);
                  if (!isSome_2986346330(oHEX60gensym64_2952805629)) Temporary24 = false; else {                    var ne_2952805630 = get_2986346350(oHEX60gensym64_2952805629);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2952805625 == null));                  }                if (Temporary23) {
                n_2952805625 = ne_2952805630;
                idx_2952805626 = -1;
                }
                else {
                if (((!((n_2952805625.parent == null)) && !((n_2952805625 == null))) && !((n_2952805625.parent == null)))) {
                idx_2952805626 = index_2986344556(n_2952805625);
                n_2952805625 = n_2952805625.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2952805627 = addInt(i_2952805627, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2952804855 = null;
        var colontmp__2952805632 = null;
        colontmp__2952805632 = node_2952792695(self_2952804766);
        var idx_2952805633 = 0;
        var n_2952805634 = colontmp__2952805632;
        Label26: {
            Label27: while (true) {
            if (!!((n_2952805634 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952805634), 1)), subInt(idx_2952805633, 1))) {
              n_2952805634 = HEX5BHEX5D_2986344532(n_2952805634, subInt(idx_2952805633, 1));
              idx_2952805633 = len_2986344536(n_2952805634);
              }
              else {
                var oHEX60gensym83_2952805636 = prev_2986344687(n_2952805634);
                if (!isSome_2986346330(oHEX60gensym83_2952805636)) Temporary28 = false; else {                  var ne_2952805637 = get_2986346350(oHEX60gensym83_2952805636);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2952804855 = n_2952805634;
              if ((!((n_2952804855 == node_2952792695(self_2952804766))) && (computeType_3003195250(ctx_2952790069, n_2952804855, true).kind == 0))) {
              nodeHEX3D_2952793818(self_2952804766, n_2952804855);
              break Label25;
              }
              
              n_2952805634 = ne_2952805637;
              idx_2952805633 = len_2986344536(n_2952805634);
              }
              else {
                n_2952804855 = n_2952805634;
                if ((!((n_2952804855 == node_2952792695(self_2952804766))) && (computeType_3003195250(ctx_2952790069, n_2952804855, true).kind == 0))) {
                nodeHEX3D_2952793818(self_2952804766, n_2952804855);
                break Label25;
                }
                
                idx_2952805633 = index_2986344556(n_2952805634);
                n_2952805634 = n_2952805634.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2952804875 = 0;
        var n_2952804876 = null;
        var colontmp__2952805651 = null;
        var colontmp__2952805652 = null;
        colontmp__2952805651 = node_2952792695(self_2952804766);
        colontmp__2952805652 = HEX3Aanonymous_2952804864;
        var i_2952805653 = 0;
        Label30: {
          var __2952805655 = 0;
          var child_2952805656 = null;
          var n_2952805657 = colontmp__2952805651;
          var idx_2952805658 = -1;
          var i_2952805659 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2952805658 == -1)) {
                __2952805655 = i_2952805659;
                child_2952805656 = n_2952805657;
                if (colontmp__2952805652(child_2952805656)) {
                __2952804875 = i_2952805653;
                n_2952804876 = child_2952805656;
                if (contains_3003225619(ctx_2952790069.diagnosticsPerNode, n_2952804876.id)) {
                var found_2952804940 = false;
                Label34: {
                  var diags_2952805324 = [];
                  var colontmp__2952805640 = ({data: [], counter: 0});
                  colontmp__2952805640 = nimCopy(colontmp__2952805640, HEX5BHEX5D_3003222261(ctx_2952790069.diagnosticsPerNode, n_2952804876.id).queries, NTI3003121678);
                  var L_2952805645 = len_2952805087(colontmp__2952805640);
                  Label35: {
                    var h_2952805647 = 0;
                    var colontmp__2952805648 = 0;
                    colontmp__2952805648 = (colontmp__2952805640.data).length - 1;
                    var res_2952805649 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2952805649 <= colontmp__2952805648)) break Label37;
                          h_2952805647 = res_2952805649;
                          if (isFilled_1308622880(colontmp__2952805640.data[chckIndx(h_2952805647, 0, (colontmp__2952805640.data).length - 1)].Field0)) {
                          diags_2952805324 = colontmp__2952805640.data[chckIndx(h_2952805647, 0, (colontmp__2952805640.data).length - 1)]["Field2"];
                          if ((0 < (diags_2952805324).length)) {
                          found_2952804940 = true;
                          }
                          
                          if (!((len_2952805087(colontmp__2952805640) == L_2952805645))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2952805649 = addInt(res_2952805649, 1);
                        }
                    };
                  };
                };
                if (found_2952804940) {
                nodeHEX3D_2952793818(self_2952804766, n_2952804876);
                }
                
                break Label29;
                }
                
                i_2952805653 = addInt(i_2952805653, 1);
                }
                
                }
                
                if ((addInt(idx_2952805658, 1) < len_2986344536(n_2952805657))) {
                n_2952805657 = HEX5BHEX5D_2986344532(n_2952805657, addInt(idx_2952805658, 1));
                idx_2952805658 = -1;
                }
                else {
                  var oHEX60gensym64_2952805661 = next_2986344641(n_2952805657);
                  if (!isSome_2986346330(oHEX60gensym64_2952805661)) Temporary39 = false; else {                    var ne_2952805662 = get_2986346350(oHEX60gensym64_2952805661);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2952805657 == null));                  }                if (Temporary38) {
                n_2952805657 = ne_2952805662;
                idx_2952805658 = -1;
                }
                else {
                if (((!((n_2952805657.parent == null)) && !((n_2952805657 == null))) && !((n_2952805657.parent == null)))) {
                idx_2952805658 = index_2986344556(n_2952805657);
                n_2952805657 = n_2952805657.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2952805659 = addInt(i_2952805659, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2952805328 = null;
        var colontmp__2952805673 = null;
        colontmp__2952805673 = node_2952792695(self_2952804766);
        var idx_2952805674 = 0;
        var n_2952805675 = colontmp__2952805673;
        Label41: {
            Label42: while (true) {
            if (!!((n_2952805675 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2986344536(n_2952805675), 1)), subInt(idx_2952805674, 1))) {
              n_2952805675 = HEX5BHEX5D_2986344532(n_2952805675, subInt(idx_2952805674, 1));
              idx_2952805674 = len_2986344536(n_2952805675);
              }
              else {
                var oHEX60gensym83_2952805677 = prev_2986344687(n_2952805675);
                if (!isSome_2986346330(oHEX60gensym83_2952805677)) Temporary43 = false; else {                  var ne_2952805678 = get_2986346350(oHEX60gensym83_2952805677);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2952805328 = n_2952805675;
              Label44: {
                if ((n_2952805328 == node_2952792695(self_2952804766))) {
                break Label44;
                }
                
                if (contains_3003225619(ctx_2952790069.diagnosticsPerNode, n_2952805328.id)) {
                var found_2952805396 = false;
                Label45: {
                  var diags_2952805483 = [];
                  var colontmp__2952805666 = ({data: [], counter: 0});
                  colontmp__2952805666 = nimCopy(colontmp__2952805666, HEX5BHEX5D_3003222261(ctx_2952790069.diagnosticsPerNode, n_2952805328.id).queries, NTI3003121678);
                  var L_2952805667 = len_2952805087(colontmp__2952805666);
                  Label46: {
                    var h_2952805669 = 0;
                    var colontmp__2952805670 = 0;
                    colontmp__2952805670 = (colontmp__2952805666.data).length - 1;
                    var res_2952805671 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2952805671 <= colontmp__2952805670)) break Label48;
                          h_2952805669 = res_2952805671;
                          if (isFilled_1308622880(colontmp__2952805666.data[chckIndx(h_2952805669, 0, (colontmp__2952805666.data).length - 1)].Field0)) {
                          diags_2952805483 = colontmp__2952805666.data[chckIndx(h_2952805669, 0, (colontmp__2952805666.data).length - 1)]["Field2"];
                          if ((0 < (diags_2952805483).length)) {
                          found_2952805396 = true;
                          }
                          
                          if (!((len_2952805087(colontmp__2952805666) == L_2952805667))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2952805671 = addInt(res_2952805671, 1);
                        }
                    };
                  };
                };
                if (found_2952805396) {
                nodeHEX3D_2952793818(self_2952804766, n_2952805328);
                break Label40;
                }
                
                }
                
              };
              n_2952805675 = ne_2952805678;
              idx_2952805674 = len_2986344536(n_2952805675);
              }
              else {
                n_2952805328 = n_2952805675;
                Label49: {
                  if ((n_2952805328 == node_2952792695(self_2952804766))) {
                  break Label49;
                  }
                  
                  if (contains_3003225619(ctx_2952790069.diagnosticsPerNode, n_2952805328.id)) {
                  var found_2952805679 = false;
                  Label50: {
                    var diags_2952805680 = [];
                    var colontmp__2952805681 = ({data: [], counter: 0});
                    colontmp__2952805681 = nimCopy(colontmp__2952805681, HEX5BHEX5D_3003222261(ctx_2952790069.diagnosticsPerNode, n_2952805328.id).queries, NTI3003121678);
                    var L_2952805682 = len_2952805087(colontmp__2952805681);
                    Label51: {
                      var h_2952805683 = 0;
                      var colontmp__2952805684 = 0;
                      colontmp__2952805684 = (colontmp__2952805681.data).length - 1;
                      var res_2952805685 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2952805685 <= colontmp__2952805684)) break Label53;
                            h_2952805683 = res_2952805685;
                            if (isFilled_1308622880(colontmp__2952805681.data[chckIndx(h_2952805683, 0, (colontmp__2952805681.data).length - 1)].Field0)) {
                            diags_2952805680 = colontmp__2952805681.data[chckIndx(h_2952805683, 0, (colontmp__2952805681.data).length - 1)]["Field2"];
                            if ((0 < (diags_2952805680).length)) {
                            found_2952805679 = true;
                            }
                            
                            if (!((len_2952805087(colontmp__2952805681) == L_2952805682))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2952805685 = addInt(res_2952805685, 1);
                          }
                      };
                    };
                  };
                  if (found_2952805679) {
                  nodeHEX3D_2952793818(self_2952804766, n_2952805328);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2952805674 = index_2986344556(n_2952805675);
                n_2952805675 = n_2952805675.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2952805487 = newGotoPopup_3170894348(self_2952804766.editor, self_2952804766.document);
      popup_2952805487.handleSymbolSelected = HEX3Aanonymous_2952805488;
      pushPopup_1291849052(self_2952804766.editor, popup_2952805487);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2952804761(self_2952805575, where_2952805576) {
    goto_2952804765(self_2952805575, where_2952805576);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2952804761(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function color_2449473569(c_2449473570) {
  var result_2449473571 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473571.r = (c_2449473570.r / 255.0);
    result_2449473571.g = (c_2449473570.g / 255.0);
    result_2449473571.b = (c_2449473570.b / 255.0);
    result_2449473571.a = 1.0;

  return result_2449473571;

}

function addOutput_2952805742(self_2952805744, line_2952805745, color_2952805746) {
    if ((1500 <= (self_2952805744.lines).length)) {
    delete_2952790829(self_2952805744, "lines", HEX2EHEX2E_805306418(0, subInt((self_2952805744.lines).length, 1000)));
    }
    
    if ((0 < self_2952805744.scroll)) {
    self_2952805744.scroll = addInt(self_2952805744.scroll, 1);
    }
    
    self_2952805744.lines.push({Field0: nimCopy(null, line_2952805745, NTI33554449), Field1: color_2449473569(color_2952805746)});;

  
}

function rgb_2365587543(r_2365587544, g_2365587545, b_2365587546) {
  var result_2365587547 = ({r: 0, g: 0, b: 0});

    result_2365587547 = nimCopy(result_2365587547, {r: r_2365587544, g: g_2365587545, b: b_2365587546}, NTI2365587460);

  return result_2365587547;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2952805972 = 0;
      colontmp__2952805972 = (result_855640118).length;
      var i_2952805973 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952805973 < colontmp__2952805972)) break Label3;
            i_855640125 = i_2952805973;
            if ((ConstSet192[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2952805973 = addInt(i_2952805973, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet194[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2952805976 = 0;
      colontmp__2952805976 = subInt((s_855638126).length, 1);
      var res_2952805977 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2952805977 <= colontmp__2952805976)) break Label3;
            iHEX60gensym11_855638133 = res_2952805977;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2952805977 = addInt(res_2952805977, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2332033500(result_2332033502, result_2332033502_Idx, value_2332033503, specifier_2332033504) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2332033504).length == 0)) {
    result_2332033502[result_2332033502_Idx].push.apply(result_2332033502[result_2332033502_Idx], HEX24_33557336(value_2332033503));;
    break BeforeRet;
    }
    
    var spec_2332033508 = parseStandardFormatSpecifier_721420346(specifier_2332033504, 0, false);
    var fmode_2332033509 = 0;
    switch (spec_2332033508.typ) {
    case 101:
    case 69:
      fmode_2332033509 = 2;
      break;
    case 102:
    case 70:
      fmode_2332033509 = 1;
      break;
    case 103:
    case 71:
      fmode_2332033509 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2332033508.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2332033511 = [nsuformatBiggestFloat(value_2332033503, fmode_2332033509, chckRange(spec_2332033508.precision, -1, 32), 46)];
    var sign_2332033512 = false;
    if ((0.0 <= value_2332033503)) {
    if (!((spec_2332033508.sign == 45))) {
    sign_2332033512 = true;
    if ((value_2332033503 == 0.0)) {
    if (((1.0 / value_2332033503) == Infinity)) {
    insert_33557745(f_2332033511, 0, nimCharToStr(spec_2332033508.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2332033511, 0, nimCharToStr(spec_2332033508.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2332033512 = true;
    }
    
    if (spec_2332033508.padWithZero) {
    var signStr_2332033513 = [];
    if (sign_2332033512) {
    signStr_2332033513 = nimCopy(null, nimCharToStr(f_2332033511[0][chckIndx(0, 0, (f_2332033511[0]).length - 1)]), NTI33554449);
    f_2332033511[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2332033511[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2332033535 = subInt(subInt(spec_2332033508.minimumWidth, (f_2332033511[0]).length), (sign_2332033512 ? 1 : 0));
    if ((0 < toFill_2332033535)) {
    f_2332033511[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2332033535, 0, 2147483647)) || []).concat(f_2332033511[0] || []), NTI33554449);
    }
    
    if (sign_2332033512) {
    f_2332033511[0] = nimCopy(null, (signStr_2332033513 || []).concat(f_2332033511[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2332033508.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2332033508.align;
    }
    
    var align_2332033536 = Temporary1;
    var res_2332033537 = alignString_721420308(f_2332033511[0], spec_2332033508.minimumWidth, align_2332033536, spec_2332033508.fill);
    if ((ConstSet193[spec_2332033508.typ] != undefined)) {
    result_2332033502[result_2332033502_Idx].push.apply(result_2332033502[result_2332033502_Idx], nsuToUpperAsciiStr(res_2332033537));;
    }
    else {
    result_2332033502[result_2332033502_Idx].push.apply(result_2332033502[result_2332033502_Idx], res_2332033537);;
    }
    
  };

  
}

function ms_2281701425(nanos_2281701426) {
  var result_2281701427 = 0.0;

    result_2281701427 = (nanos_2281701426 / 1000000.0);

  return result_2281701427;

}

function runSelectedFunction_2952805707(self_2952805708) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2952797462(self_2952805708)) {
    break BeforeRet;
    }
    
    var node_2952805709 = node_2952792695(self_2952805708);
    Label1: {
        Label2: while (true) {
        if (!!((node_2952805709.parent == null))) break Label2;
          if (((node_2952805709.parent == self_2952805708.document.rootNode) && (node_2952805709.kind == 8))) {
          var timer_2952805722 = startTimer_2281701428();
          var fmtRes_2952805727 = [mnewString(0)];
          fmtRes_2952805727[0].push.apply(fmtRes_2952805727[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3087008579(fmtRes_2952805727, 0, node_2952805709, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805727[0], NTI33554449)]);
          updateNode_3003234352(ctx_2952790069, node_2952805709);
          var result_2952805733 = computeValue_3003198726(ctx_2952790069, node_2952805709, true);
          if (!((result_2952805733.kind == 1))) {
          if ((result_2952805733.kind == 0)) {
          Temporary3 = rgb_2365587543(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2365587543(50, 255, 50);
          }
          
          addOutput_2952805742(executionOutput_2952790068[0], HEX24_3087008487(result_2952805733), Temporary3);
          }
          
          var fmtRes_2952805774 = [mnewString(0)];
          fmtRes_2952805774[0].push.apply(fmtRes_2952805774[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3087008579(fmtRes_2952805774, 0, node_2952805709, []);
          fmtRes_2952805774[0].push.apply(fmtRes_2952805774[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3137340831(fmtRes_2952805774, 0, result_2952805733, []);
          fmtRes_2952805774[0].push.apply(fmtRes_2952805774[0], [32,40,84,111,111,107,32]);;
          formatValue_2332033500(fmtRes_2952805774, 0, ms_2281701425(elapsed_2281701439(timer_2952805722)), []);
          fmtRes_2952805774[0].push.apply(fmtRes_2952805774[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805774[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2952805709.kind == 4) && (0 < len_2986344536(node_2952805709))) && (HEX5BHEX5D_2986344532(node_2952805709, 0).kind == 11))) {
          var functionType_2952805798 = computeType_3003195250(ctx_2952790069, node_2952805709, true);
          if ((functionType_2952805798.kind == 0)) {
          var fmtRes_2952805807 = [mnewString(0)];
          fmtRes_2952805807[0].push.apply(fmtRes_2952805807[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3087008579(fmtRes_2952805807, 0, node_2952805709, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805807[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2952805798.kind == 4))) {
          var fmtRes_2952805821 = [mnewString(0)];
          fmtRes_2952805821[0].push.apply(fmtRes_2952805821[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3087008579(fmtRes_2952805821, 0, node_2952805709, []);
          fmtRes_2952805821[0].push.apply(fmtRes_2952805821[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3003230324(fmtRes_2952805821, 0, functionType_2952805798, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805821[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2952805798;
            if (ConstSet195[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3087007747)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2952805839 = [mnewString(0)];
          fmtRes_2952805839[0].push.apply(fmtRes_2952805839[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3087008579(fmtRes_2952805839, 0, node_2952805709, []);
          fmtRes_2952805839[0].push.apply(fmtRes_2952805839[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_3003230324(fmtRes_2952805839, 0, functionType_2952805798, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805839[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2952805854 = [mnewString(0)];
          fmtRes_2952805854[0].push.apply(fmtRes_2952805854[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3087008579(fmtRes_2952805854, 0, node_2952805709, []);
          fmtRes_2952805854[0].push.apply(fmtRes_2952805854[0], [32,40]);;
          formatValue_3003230324(fmtRes_2952805854, 0, functionType_2952805798, []);
          fmtRes_2952805854[0].push.apply(fmtRes_2952805854[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805854[0], NTI33554449)]);
          var timer_2952805865 = startTimer_2281701428();
          var maxLoopIterations_2952805875 = getOption_2818588651(self_2952805708.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2952805883 = newFunctionExecutionContext_3003191967(ctx_2952790069, {node: HEX5BHEX5D_2986344532(node_2952805709, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2952805875), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2952805884 = computeFunctionExecution_3003215035(ctx_2952790069, fec_2952805883);
          if (!((result_2952805884.kind == 1))) {
          if ((result_2952805884.kind == 0)) {
          Temporary5 = rgb_2365587543(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2365587543(50, 255, 50);
          }
          
          addOutput_2952805742(executionOutput_2952790068[0], HEX24_3087008487(result_2952805884), Temporary5);
          }
          
          var fmtRes_2952805902 = [mnewString(0)];
          fmtRes_2952805902[0].push.apply(fmtRes_2952805902[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3087008579(fmtRes_2952805902, 0, node_2952805709, []);
          fmtRes_2952805902[0].push.apply(fmtRes_2952805902[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3137340831(fmtRes_2952805902, 0, result_2952805884, []);
          fmtRes_2952805902[0].push.apply(fmtRes_2952805902[0], [32,40,84,111,111,107,32]);;
          formatValue_2332033500(fmtRes_2952805902, 0, ms_2281701425(elapsed_2281701439(timer_2952805865)), []);
          fmtRes_2952805902[0].push.apply(fmtRes_2952805902[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952805902[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2952805709 = node_2952805709.parent;
        }
    };
    var fmtRes_2952805922 = [mnewString(0)];
    fmtRes_2952805922[0].push.apply(fmtRes_2952805922[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3087008579(fmtRes_2952805922, 0, node_2952792695(self_2952805708), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952805922[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2952805703(self_2952805955) {
    runSelectedFunction_2952805707(self_2952805955);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2952805703(this));};

function toggleOption_2952805985(self_2952805986, name_2952805987) {
    switch (toJSStr(name_2952805987)) {
    case "logging":
      ctx_2952790069.enableLogging = !(ctx_2952790069.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2952805981(self_2952806016, name_2952806017) {
    toggleOption_2952805985(self_2952806016, name_2952806017);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2952805981(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2952806047(self_2952806048, which_2952806049) {
    switch (toJSStr(which_2952806049)) {
    case "":
      var _ = handleAction_2952806037(self_2952806048, self_2952806048.lastCommand["Field0"], self_2952806048.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2952806037(self_2952806048, self_2952806048.lastMoveCommand["Field0"], self_2952806048.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2952806037(self_2952806048, self_2952806048.lastEditCommand["Field0"], self_2952806048.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2952806037(self_2952806048, self_2952806048.lastOtherCommand["Field0"], self_2952806048.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2952806043(self_2952806078, which_2952806079) {
    runLastCommand_2952806047(self_2952806078, which_2952806079);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2952806043(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3087007956(node_3087007957, index_3087007958) {
  var result_3087007959 = null;

  BeforeRet: {
    result_3087007959 = node_3087007957.children[chckIndx(index_3087007958, 0, (node_3087007957.children).length - 1)];
    break BeforeRet;
  };

  return result_3087007959;

}

function none_3087007989() {
  var result_3087007995 = ({val: null});

  return result_3087007995;

}

function none_3087007986() {
  var result_3087007988 = ({val: null});

    result_3087007988 = nimCopy(result_3087007988, none_3087007989(), NTI3087007896);

  return result_3087007988;

}

function index_3087007903(node_3087007904) {
  var result_3087007905 = 0;

  BeforeRet: {
    if ((node_3087007904.parent == null)) {
    result_3087007905 = -1;
    break BeforeRet;
    }
    
    result_3087007905 = 0;
    Label1: {
      var i_3087007932 = null;
      var i_2952806427 = 0;
      var L_2952806428 = (node_3087007904.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952806427 < L_2952806428)) break Label3;
            i_3087007932 = node_3087007904.parent.children[chckIndx(i_2952806427, 0, (node_3087007904.parent.children).length - 1)];
            if (HEX3DHEX3D_2181038320(i_3087007932.id, node_3087007904.id)) {
            break BeforeRet;
            }
            
            result_3087007905 = addInt(result_3087007905, 1);
            i_2952806427 = addInt(i_2952806427, 1);
            if (!(((node_3087007904.parent.children).length == L_2952806428))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3087007905;

}

function some_3087008008(val_3087008010) {
  var result_3087008011 = ({val: null});

    if (!(!((val_3087008010 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3087008011.val = val_3087008010;

  return result_3087008011;

}

function next_3087007975(node_3087007976) {
  var result_3087007981 = ({val: null});

  BeforeRet: {
    if ((node_3087007976.parent == null)) {
    result_3087007981 = nimCopy(result_3087007981, none_3087007986(), NTI3087007896);
    break BeforeRet;
    }
    
    var i_3087008005 = index_3087007903(node_3087007976);
    if ((subInt(len_3087007969(node_3087007976.parent), 1) <= i_3087008005)) {
    result_3087007981 = nimCopy(result_3087007981, none_3087007986(), NTI3087007896);
    break BeforeRet;
    }
    
    result_3087007981 = nimCopy(result_3087007981, some_3087008008(HEX5BHEX5D_3087007956(node_3087007976.parent, addInt(i_3087008005, 1))), NTI3087007896);
    break BeforeRet;
  };

  return result_3087007981;

}

function isSome_3087008057(self_3087008059) {
  var result_3087008060 = false;

    result_3087008060 = !((self_3087008059.val == null));

  return result_3087008060;

}

function isNone_3087008085(self_3087008087) {
  var result_3087008088 = false;

    result_3087008088 = (self_3087008087.val == null);

  return result_3087008088;

}

function get_3087008077(self_3087008079) {
  var result_3087008080 = null;

    if (isNone_3087008085(self_3087008079)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3087008080 = self_3087008079["val"];

  return result_3087008080;

}

function newSeq_2952806182(len_2952806184) {
  var result_2952806185 = [];

    result_2952806185 = new Array(len_2952806184); for (var i = 0 ; i < len_2952806184 ; ++i) { result_2952806185[i] = {Field0: 0.0, Field1: null}; }
  return result_2952806185;

}

function mergeAlt_2952806211(a_2952806213, b_2952806214, lo_2952806215, m_2952806216, hi_2952806217, cmp_2952806220, order_2952806221) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2952806220(a_2952806213[chckIndx(m_2952806216, 0, (a_2952806213).length - 1)], a_2952806213[chckIndx(addInt(m_2952806216, 1), 0, (a_2952806213).length - 1)]), order_2952806221) <= 0)) {
    break BeforeRet;
    }
    
    var j_2952806222 = lo_2952806215;
    if (!((j_2952806222 <= m_2952806216))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2952806228 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2952806222 <= m_2952806216)) break Label2;
          b_2952806214[chckIndx(bb_2952806228, 0, (b_2952806214).length - 1)] = nimCopy(b_2952806214[chckIndx(bb_2952806228, 0, (b_2952806214).length - 1)], a_2952806213[chckIndx(j_2952806222, 0, (a_2952806213).length - 1)], NTI2952800745);
          bb_2952806228 = addInt(bb_2952806228, 1);
          j_2952806222 = addInt(j_2952806222, 1);
        }
    };
    var i_2952806239 = 0;
    var k_2952806240 = lo_2952806215;
    Label3: {
        Label4: while (true) {
        if (!((k_2952806240 < j_2952806222) && (j_2952806222 <= hi_2952806217))) break Label4;
          if ((HEX2A_1023410184(cmp_2952806220(b_2952806214[chckIndx(i_2952806239, 0, (b_2952806214).length - 1)], a_2952806213[chckIndx(j_2952806222, 0, (a_2952806213).length - 1)]), order_2952806221) <= 0)) {
          a_2952806213[chckIndx(k_2952806240, 0, (a_2952806213).length - 1)] = nimCopy(a_2952806213[chckIndx(k_2952806240, 0, (a_2952806213).length - 1)], b_2952806214[chckIndx(i_2952806239, 0, (b_2952806214).length - 1)], NTI2952800745);
          i_2952806239 = addInt(i_2952806239, 1);
          }
          else {
            a_2952806213[chckIndx(k_2952806240, 0, (a_2952806213).length - 1)] = nimCopy(a_2952806213[chckIndx(k_2952806240, 0, (a_2952806213).length - 1)], a_2952806213[chckIndx(j_2952806222, 0, (a_2952806213).length - 1)], NTI2952800745);
            j_2952806222 = addInt(j_2952806222, 1);
          }
          
          k_2952806240 = addInt(k_2952806240, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2952806240 < j_2952806222)) break Label6;
          a_2952806213[chckIndx(k_2952806240, 0, (a_2952806213).length - 1)] = nimCopy(a_2952806213[chckIndx(k_2952806240, 0, (a_2952806213).length - 1)], b_2952806214[chckIndx(i_2952806239, 0, (b_2952806214).length - 1)], NTI2952800745);
          k_2952806240 = addInt(k_2952806240, 1);
          i_2952806239 = addInt(i_2952806239, 1);
        }
    };
  };

  
}

function sort_2952806170(a_2952806172, cmp_2952806175, order_2952806176) {
    var n_2952806181 = (a_2952806172).length;
    var b_2952806208 = newSeq_2952806182(chckRange(divInt(n_2952806181, 2), 0, 2147483647));
    var s_2952806209 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2952806209 < n_2952806181)) break Label2;
          var m_2952806210 = subInt(subInt(n_2952806181, 1), s_2952806209);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2952806210)) break Label4;
                mergeAlt_2952806211(a_2952806172, b_2952806208, nimMax(addInt(subInt(m_2952806210, s_2952806209), 1), 0), m_2952806210, addInt(m_2952806210, s_2952806209), cmp_2952806175, order_2952806176);
                m_2952806210 = subInt(m_2952806210, mulInt(s_2952806209, 2));
              }
          };
          s_2952806209 = mulInt(s_2952806209, 2);
        }
    };

  
}

function cmp_2952806150(x_2952806152, y_2952806153) {
  var result_2952806154 = 0;

  BeforeRet: {
    if ((x_2952806152 == y_2952806153)) {
    result_2952806154 = 0;
    break BeforeRet;
    }
    
    if ((x_2952806152 < y_2952806153)) {
    result_2952806154 = -1;
    break BeforeRet;
    }
    
    result_2952806154 = 1;
    break BeforeRet;
  };

  return result_2952806154;

}

function selectCenterNode_2952806105(self_2952806106) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2952806138(a_2952806157, b_2952806158) {
      var result_2952806163 = 0;

        result_2952806163 = cmp_2952806150(a_2952806157.Field0, b_2952806158.Field0);

      return result_2952806163;

    }

    var nodes_2952806113 = [];
    Label1: {
      var layout_2952806117 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2952806118 = ({x: 0.0, y: 0.0});
      var i_2952806418 = 0;
      var L_2952806419 = (self_2952806106.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2952806418 < L_2952806419)) break Label3;
            layout_2952806117 = self_2952806106.lastLayouts[chckIndx(i_2952806418, 0, (self_2952806106.lastLayouts).length - 1)]["Field0"];
            offset_2952806118 = self_2952806106.lastLayouts[chckIndx(i_2952806418, 0, (self_2952806106.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2952806119 = 0;
              var node_2952806120 = null;
              var n_2952806409 = layout_2952806117.root;
              var idx_2952806410 = -1;
              var i_2952806411 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2952806410 == -1)) {
                    var colontmp__2952806414 = nimCopy(null, {Field0: i_2952806411, Field1: n_2952806409}, NTI3087007967);
                    i_2952806119 = colontmp__2952806414["Field0"];
                    node_2952806120 = colontmp__2952806414["Field1"];
                    if ((!((node_2952806120.node == null)) && (0 < len_3087007969(node_2952806120)))) {
                    var bounds_2952806124 = absoluteBounds_3087009534(node_2952806120);
                    if (intersects_2063597745(rect_2080374802(0.0, 0.0, self_2952806106.lastBounds.w, self_2952806106.lastBounds.h), HEX2B_2063597723(bounds_2952806124, vec2_2097152861(0.0, offset_2952806118.y)))) {
                    nodes_2952806113.push({Field0: (bounds_2952806124.y + offset_2952806118.y), Field1: node_2952806120});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2952806410, 1) < len_3087007969(n_2952806409))) {
                    n_2952806409 = HEX5BHEX5D_3087007956(n_2952806409, addInt(idx_2952806410, 1));
                    idx_2952806410 = -1;
                    }
                    else {
                      var oHEX60gensym5_2952806415 = next_3087007975(n_2952806409);
                      if (!isSome_3087008057(oHEX60gensym5_2952806415)) Temporary9 = false; else {                        var ne_2952806416 = get_3087008077(oHEX60gensym5_2952806415);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2952806409 == null));                      }                    if (Temporary8) {
                    n_2952806409 = ne_2952806416;
                    idx_2952806410 = -1;
                    }
                    else {
                    if (((!((n_2952806409.parent == null)) && !((n_2952806409 == null))) && !((n_2952806409.parent == null)))) {
                    idx_2952806410 = index_3087007903(n_2952806409);
                    n_2952806409 = n_2952806409.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2952806411 = addInt(i_2952806411, 1);
                    }
                  }
              };
            };
            i_2952806418 = addInt(i_2952806418, 1);
            if (!(((self_2952806106.lastLayouts).length == L_2952806419))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2952806170(nodes_2952806113, HEX3Aanonymous_2952806138, 1);
    if ((0 < (nodes_2952806113).length)) {
    var firstY_2952806284 = nodes_2952806113[chckIndx(0, 0, (nodes_2952806113).length - 1)].Field0;
    var lastY_2952806288 = nodes_2952806113[chckIndx((nodes_2952806113).length - 1, 0, (nodes_2952806113).length - 1)].Field0;
    var middleY_2952806289 = ((firstY_2952806284 + lastY_2952806288) * 0.5);
    Label10: {
      var i_2952806322 = 0;
      var y_2952806323 = 0.0;
      var node_2952806324 = null;
      var i_2952806423 = 0;
      var L_2952806424 = (nodes_2952806113).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2952806423 < L_2952806424)) break Label12;
            i_2952806322 = i_2952806423;
            y_2952806323 = nodes_2952806113[chckIndx(i_2952806423, 0, (nodes_2952806113).length - 1)]["Field0"];
            node_2952806324 = nodes_2952806113[chckIndx(i_2952806423, 0, (nodes_2952806113).length - 1)]["Field1"];
            if (((i_2952806322 == (nodes_2952806113).length - 1) || (middleY_2952806289 < nodes_2952806113[chckIndx(addInt(i_2952806322, 1), 0, (nodes_2952806113).length - 1)].Field0))) {
            nodeHEX3D_2952793818(self_2952806106, node_2952806324.node);
            break Label10;
            }
            
            i_2952806423 = addInt(i_2952806423, 1);
            if (!(((nodes_2952806113).length == L_2952806424))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2952806101(self_2952806391) {
    selectCenterNode_2952806105(self_2952806391);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2952806101(this));};

function scroll_2952806441(self_2952806442, amount_2952806443) {
    HEX2BHEX3D_855640304(self_2952806442, "scrollOffset", amount_2952806443);

  
}

function scrollJsWrapper_2952806437(self_2952806476, amount_2952806477) {
    scroll_2952806441(self_2952806476, amount_2952806477);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2952806437(this, amount_));};

function scrollOutput_2952806503(self_2952806504, arg_2952806505) {
    switch (toJSStr(arg_2952806505)) {
    case "home":
      executionOutput_2952790068[0].scroll = (executionOutput_2952790068[0].lines).length;
      break;
    case "end":
      executionOutput_2952790068[0].scroll = 0;
      break;
    default: 
      executionOutput_2952790068[0].scroll = clamp_1660945119(addInt(executionOutput_2952790068[0].scroll, nsuParseInt(arg_2952806505)), 0, (executionOutput_2952790068[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2952806499(self_2952806545, arg_2952806546) {
    scrollOutput_2952806503(self_2952806545, arg_2952806546);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2952806499(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2952806751 = 0;
      var last_2952806752 = 0;
      var eolpos_2952806753 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2952806752 < (s_855639240).length) && !((ConstSet196[s_855639240[chckIndx(last_2952806752, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2952806752 = addInt(last_2952806752, 1);
                }
            };
            eolpos_2952806753 = last_2952806752;
            if ((last_2952806752 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2952806752, 0, (s_855639240).length - 1)] == 10)) {
            last_2952806752 = addInt(last_2952806752, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2952806752, 0, (s_855639240).length - 1)] == 13)) {
            last_2952806752 = addInt(last_2952806752, 1);
            if (((last_2952806752 < (s_855639240).length) && (s_855639240[chckIndx(last_2952806752, 0, (s_855639240).length - 1)] == 10))) {
            last_2952806752 = addInt(last_2952806752, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2952806752, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2952806753, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2952806751, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2952806748 = 0;
              colontmp__2952806748 = count_855639241;
              var res_2952806749 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2952806749 <= colontmp__2952806748)) break Label9;
                    j_855639250 = res_2952806749;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2952806749 = addInt(res_2952806749, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2952806753 == last_2952806752)) {
            break Label2;
            }
            
            first_2952806751 = last_2952806752;
          }
      };
    };

  return result_855639243;

}

function HEX24_3019916972(graph_3019916973) {
  var result_3019916974 = [];

    result_3019916974 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3019916974.push.apply(result_3019916974, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3019916973.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3019916974.push.apply(result_3019916974, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3019916974;

}

function toString_3003174380(HEX3Atmp_3003121877) {
  var result_3003174381 = [];

  BeforeRet: {
    var HEX3Atmp_3003121878 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym50_3003174477 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym50_3003174478 = null;
      Label2: {
        var node_2952806622 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806623 = HEX3Atmp_3003121877.itemsAstNode.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2952806623 == null))) break Label4;
              node_2952806622 = nimCopy(node_2952806622, it_2952806623.value, NTI3003121726);
              var colontmp__2952806626 = nimCopy(null, {Field0: nimCopy(null, node_2952806622.key, NTI3019898905), Field1: node_2952806622.val}, NTI3003152662);
              keyHEX60gensym50_3003174477 = nimCopy(keyHEX60gensym50_3003174477, colontmp__2952806626["Field0"], NTI3019898905);
              valueHEX60gensym50_3003174478 = colontmp__2952806626["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym50_3003174477) || [],[32,45,62,32] || [],HEX24_2986346455(valueHEX60gensym50_3003174478) || [],[10] || []));;
              it_2952806623 = it_2952806623.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label5: {
      var keyHEX60gensym51_3003174574 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym51_3003174575 = null;
      Label6: {
        var node_2952806632 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806633 = HEX3Atmp_3003121877.itemsNodeLayoutInput.list.head;
        Label7: {
            Label8: while (true) {
            if (!!((it_2952806633 == null))) break Label8;
              node_2952806632 = nimCopy(node_2952806632, it_2952806633.value, NTI3003121799);
              var colontmp__2952806636 = nimCopy(null, {Field0: nimCopy(null, node_2952806632.key, NTI3019898905), Field1: node_2952806632.val}, NTI3003152715);
              keyHEX60gensym51_3003174574 = nimCopy(keyHEX60gensym51_3003174574, colontmp__2952806636["Field0"], NTI3019898905);
              valueHEX60gensym51_3003174575 = colontmp__2952806636["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym51_3003174574) || [],[32,45,62,32] || [],HEX24_3087009962(valueHEX60gensym51_3003174575) || [],[10] || []));;
              it_2952806633 = it_2952806633.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label9: {
      var keyHEX60gensym52_3003174671 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym52_3003174672 = null;
      Label10: {
        var node_2952806643 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806644 = HEX3Atmp_3003121877.itemsSymbol.list.head;
        Label11: {
            Label12: while (true) {
            if (!!((it_2952806644 == null))) break Label12;
              node_2952806643 = nimCopy(node_2952806643, it_2952806644.value, NTI3003121863);
              var colontmp__2952806647 = nimCopy(null, {Field0: nimCopy(null, node_2952806643.key, NTI3019898905), Field1: node_2952806643.val}, NTI3003152768);
              keyHEX60gensym52_3003174671 = nimCopy(keyHEX60gensym52_3003174671, colontmp__2952806647["Field0"], NTI3019898905);
              valueHEX60gensym52_3003174672 = colontmp__2952806647["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym52_3003174671) || [],[32,45,62,32] || [],HEX24_3087008904(valueHEX60gensym52_3003174672) || [],[10] || []));;
              it_2952806644 = it_2952806644.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label13: {
      var keyHEX60gensym53_3003174768 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_3003174769 = null;
      Label14: {
        var node_2952806653 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2952806654 = HEX3Atmp_3003121877.itemsFunctionExecutionContext.list.head;
        Label15: {
            Label16: while (true) {
            if (!!((it_2952806654 == null))) break Label16;
              node_2952806653 = nimCopy(node_2952806653, it_2952806654.value, NTI3003121927);
              var colontmp__2952806657 = nimCopy(null, {Field0: nimCopy(null, node_2952806653.key, NTI3019898905), Field1: node_2952806653.val}, NTI3003152821);
              keyHEX60gensym53_3003174768 = nimCopy(keyHEX60gensym53_3003174768, colontmp__2952806657["Field0"], NTI3019898905);
              valueHEX60gensym53_3003174769 = colontmp__2952806657["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3019899092(keyHEX60gensym53_3003174768) || [],[32,45,62,32] || [],HEX24_3087008571(valueHEX60gensym53_3003174769) || [],[10] || []));;
              it_2952806654 = it_2952806654.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label17: {
      var keyHEX60gensym54_3003174856 = null;
      var valueHEX60gensym54_3003174857 = null;
      Label18: {
        var node_2952806664 = ({key: null, val: null});
        var it_2952806665 = HEX3Atmp_3003121877.queryCacheType.list.head;
        Label19: {
            Label20: while (true) {
            if (!!((it_2952806665 == null))) break Label20;
              node_2952806664 = nimCopy(node_2952806664, it_2952806665.value, NTI3003122029);
              var colontmp__2952806668 = nimCopy(null, {Field0: node_2952806664.key, Field1: node_2952806664.val}, NTI3003152874);
              keyHEX60gensym54_3003174856 = colontmp__2952806668["Field0"];
              valueHEX60gensym54_3003174857 = colontmp__2952806668["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym54_3003174856) || [],[32,45,62,32] || [],HEX24_3087008180(valueHEX60gensym54_3003174857) || [],[10] || []));;
              it_2952806665 = it_2952806665.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label21: {
      var keyHEX60gensym55_3003174953 = null;
      var valueHEX60gensym55_3003174954 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label22: {
        var node_2952806675 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2952806676 = HEX3Atmp_3003121877.queryCacheValue.list.head;
        Label23: {
            Label24: while (true) {
            if (!!((it_2952806676 == null))) break Label24;
              node_2952806675 = nimCopy(node_2952806675, it_2952806676.value, NTI3003122104);
              var colontmp__2952806679 = nimCopy(null, {Field0: node_2952806675.key, Field1: nimCopy(null, node_2952806675.val, NTI3087007751)}, NTI3003152921);
              keyHEX60gensym55_3003174953 = colontmp__2952806679["Field0"];
              valueHEX60gensym55_3003174954 = nimCopy(valueHEX60gensym55_3003174954, colontmp__2952806679["Field1"], NTI3087007751);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym55_3003174953) || [],[32,45,62,32] || [],HEX24_3087008487(valueHEX60gensym55_3003174954) || [],[10] || []));;
              it_2952806676 = it_2952806676.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label25: {
      var keyHEX60gensym56_3003175041 = null;
      var valueHEX60gensym56_3003175042 = ({val: null});
      Label26: {
        var node_2952806686 = ({key: null, val: ({val: null})});
        var it_2952806687 = HEX3Atmp_3003121877.queryCacheSymbol.list.head;
        Label27: {
            Label28: while (true) {
            if (!!((it_2952806687 == null))) break Label28;
              node_2952806686 = nimCopy(node_2952806686, it_2952806687.value, NTI3003122175);
              var colontmp__2952806690 = nimCopy(null, {Field0: node_2952806686.key, Field1: nimCopy(null, node_2952806686.val, NTI3087008904)}, NTI3003152968);
              keyHEX60gensym56_3003175041 = colontmp__2952806690["Field0"];
              valueHEX60gensym56_3003175042 = nimCopy(valueHEX60gensym56_3003175042, colontmp__2952806690["Field1"], NTI3087008904);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym56_3003175041) || [],[32,45,62,32] || [],HEX24_3003175100(valueHEX60gensym56_3003175042) || [],[10] || []));;
              it_2952806687 = it_2952806687.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label29: {
      var keyHEX60gensym57_3003175207 = null;
      var valueHEX60gensym57_3003175208 = null;
      Label30: {
        var node_2952806697 = ({key: null, val: null});
        var it_2952806698 = HEX3Atmp_3003121877.queryCacheSymbols.list.head;
        Label31: {
            Label32: while (true) {
            if (!!((it_2952806698 == null))) break Label32;
              node_2952806697 = nimCopy(node_2952806697, it_2952806698.value, NTI3003122248);
              var colontmp__2952806701 = nimCopy(null, {Field0: node_2952806697.key, Field1: node_2952806697.val}, NTI3003153062);
              keyHEX60gensym57_3003175207 = colontmp__2952806701["Field0"];
              valueHEX60gensym57_3003175208 = colontmp__2952806701["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_2986346455(keyHEX60gensym57_3003175207) || [],[32,45,62,32] || [],HEX24_3003175266(valueHEX60gensym57_3003175208) || [],[10] || []));;
              it_2952806698 = it_2952806698.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label33: {
      var keyHEX60gensym58_3003175455 = null;
      var valueHEX60gensym58_3003175456 = null;
      Label34: {
        var node_2952806708 = ({key: null, val: null});
        var it_2952806709 = HEX3Atmp_3003121877.queryCacheSymbolType.list.head;
        Label35: {
            Label36: while (true) {
            if (!!((it_2952806709 == null))) break Label36;
              node_2952806708 = nimCopy(node_2952806708, it_2952806709.value, NTI3003122314);
              var colontmp__2952806712 = nimCopy(null, {Field0: node_2952806708.key, Field1: node_2952806708.val}, NTI3003153195);
              keyHEX60gensym58_3003175455 = colontmp__2952806712["Field0"];
              valueHEX60gensym58_3003175456 = colontmp__2952806712["Field1"];
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087008904(keyHEX60gensym58_3003175455) || [],[32,45,62,32] || [],HEX24_3087008180(valueHEX60gensym58_3003175456) || [],[10] || []));;
              it_2952806709 = it_2952806709.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label37: {
      var keyHEX60gensym59_3003175552 = null;
      var valueHEX60gensym59_3003175553 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label38: {
        var node_2952806719 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2952806720 = HEX3Atmp_3003121877.queryCacheSymbolValue.list.head;
        Label39: {
            Label40: while (true) {
            if (!!((it_2952806720 == null))) break Label40;
              node_2952806719 = nimCopy(node_2952806719, it_2952806720.value, NTI3003122389);
              var colontmp__2952806723 = nimCopy(null, {Field0: node_2952806719.key, Field1: nimCopy(null, node_2952806719.val, NTI3087007751)}, NTI3003153242);
              keyHEX60gensym59_3003175552 = colontmp__2952806723["Field0"];
              valueHEX60gensym59_3003175553 = nimCopy(valueHEX60gensym59_3003175553, colontmp__2952806723["Field1"], NTI3087007751);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087008904(keyHEX60gensym59_3003175552) || [],[32,45,62,32] || [],HEX24_3087008487(valueHEX60gensym59_3003175553) || [],[10] || []));;
              it_2952806720 = it_2952806720.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label41: {
      var keyHEX60gensym60_3003175649 = null;
      var valueHEX60gensym60_3003175650 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label42: {
        var node_2952806730 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2952806731 = HEX3Atmp_3003121877.queryCacheFunctionExecution.list.head;
        Label43: {
            Label44: while (true) {
            if (!!((it_2952806731 == null))) break Label44;
              node_2952806730 = nimCopy(node_2952806730, it_2952806731.value, NTI3003122455);
              var colontmp__2952806734 = nimCopy(null, {Field0: node_2952806730.key, Field1: nimCopy(null, node_2952806730.val, NTI3087007751)}, NTI3003153289);
              keyHEX60gensym60_3003175649 = colontmp__2952806734["Field0"];
              valueHEX60gensym60_3003175650 = nimCopy(valueHEX60gensym60_3003175650, colontmp__2952806734["Field1"], NTI3087007751);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087008571(keyHEX60gensym60_3003175649) || [],[32,45,62,32] || [],HEX24_3087008487(valueHEX60gensym60_3003175650) || [],[10] || []));;
              it_2952806731 = it_2952806731.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label45: {
      var keyHEX60gensym61_3003175737 = null;
      var valueHEX60gensym61_3003175738 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      Label46: {
        var node_2952806741 = ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})});
        var it_2952806742 = HEX3Atmp_3003121877.queryCacheNodeLayout.list.head;
        Label47: {
            Label48: while (true) {
            if (!!((it_2952806742 == null))) break Label48;
              node_2952806741 = nimCopy(node_2952806741, it_2952806742.value, NTI3003122530);
              var colontmp__2952806745 = nimCopy(null, {Field0: node_2952806741.key, Field1: nimCopy(null, node_2952806741.val, NTI3087007775)}, NTI3003153336);
              keyHEX60gensym61_3003175737 = colontmp__2952806745["Field0"];
              valueHEX60gensym61_3003175738 = nimCopy(valueHEX60gensym61_3003175738, colontmp__2952806745["Field1"], NTI3087007775);
              HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, (repeat2_3019898895([124,32], 2) || []).concat(HEX24_3087009962(keyHEX60gensym61_3003175737) || [],[32,45,62,32] || [],HEX24_3087009925(valueHEX60gensym61_3003175738) || [],[10] || []));;
              it_2952806742 = it_2952806742.next;
            }
        };
      };
    };
    HEX3Atmp_3003121878.push.apply(HEX3Atmp_3003121878, nsuIndent(HEX24_3019916972(HEX3Atmp_3003121877.depGraph), 1, [124,32]));;
    result_3003174381 = nimCopy(null, HEX3Atmp_3003121878, NTI33554449);
    break BeforeRet;
  };

  return result_3003174381;

}

function dumpContext_2952806572(self_2952806573) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_3003174380(ctx_2952790069)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2952806568(self_2952806601) {
    dumpContext_2952806572(self_2952806601);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2952806568(this));};

function getModeConfig_2952806756(self_2952806757, mode_2952806758) {
  var result_2952806759 = null;

  BeforeRet: {
    result_2952806759 = getEventHandlerConfig_1291849154(self_2952806757.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2952806758 || []));
    break BeforeRet;
  };

  return result_2952806759;

}

function setMode_2952806766(self_2952806767, mode_2952806768) {
        
function HEX3Aanonymous_2952806789(actionHEX60gensym982HEX60gensym983_2952806790, argHEX60gensym982HEX60gensym983_2952806791) {
          var result_2952806792 = 0;

          BeforeRet: {
            if (handlerHEX60gensym982_2952806777.config.handleActions) {
            var action_2952806793 = nimCopy(null, actionHEX60gensym982HEX60gensym983_2952806790, NTI33554449);
            var arg_2952806794 = nimCopy(null, argHEX60gensym982HEX60gensym983_2952806791, NTI33554449);
            var responseHEX60gensym982HEX60gensym983_2952806795 = handleAction_2952806037(self_2952806767, action_2952806793, arg_2952806794);
            if (handlerHEX60gensym982_2952806777.config.consumeAllActions) {
            result_2952806792 = 3;
            break BeforeRet;
            }
            
            result_2952806792 = responseHEX60gensym982HEX60gensym983_2952806795;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym982_2952806777.config.consumeAllActions) {
            result_2952806792 = 3;
            break BeforeRet;
            }
            else {
              result_2952806792 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2952806792;

        }
        
function HEX3Aanonymous_2952806797(inputHEX60gensym982HEX60gensym984_2952806798) {
          var result_2952806799 = 0;

          BeforeRet: {
            if (handlerHEX60gensym982_2952806777.config.handleInputs) {
            var input_2952806800 = nimCopy(null, inputHEX60gensym982HEX60gensym984_2952806798, NTI33554449);
            result_2952806799 = 1;
            break BeforeRet;
            }
            else {
              result_2952806799 = 1;
              break BeforeRet;
            }
            
          };

          return result_2952806799;

        }

    if (((mode_2952806768).length == 0)) {
    self_2952806767.modeEventHandler = null;
    }
    else {
      var config_2952806769 = getModeConfig_2952806756(self_2952806767, mode_2952806768);
      Label1: {
        var handlerHEX60gensym982_2952806777 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym982_2952806777.config = config_2952806769;
        handlerHEX60gensym982_2952806777.dfaInternal = buildDFA_2046820415(config_2952806769);
        handlerHEX60gensym982_2952806777.handleAction = HEX3Aanonymous_2952806789;
        handlerHEX60gensym982_2952806777.handleInput = HEX3Aanonymous_2952806797;
      };
      self_2952806767.modeEventHandler = handlerHEX60gensym982_2952806777;
    }
    
    self_2952806767.currentMode = nimCopy(null, mode_2952806768, NTI33554449);

  
}

function setModeJsWrapper2_2952806762(self_2952806829, mode_2952806830) {
    setMode_2952806766(self_2952806829, mode_2952806830);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2952806762(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2952806857(self_2952806858) {
  var result_2952806859 = [];

  BeforeRet: {
    result_2952806859 = nimCopy(null, self_2952806858.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2952806859;

}

function modeJsWrapper2_2952806853(self_2952806888) {
  var result_2952806889 = [];

    result_2952806889 = nimCopy(null, mode_2952806857(self_2952806888), NTI33554449);

  return result_2952806889;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2952806853(this));};

function getContextWithMode_2952806914(self_2952806915, context_2952806916) {
  var result_2952806917 = [];

  BeforeRet: {
    result_2952806917 = nimCopy(null, (context_2952806916 || []).concat([46] || [],self_2952806915.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2952806917;

}

function getContextWithModeJsWrapper2_2952806910(self_2952806947, context_2952806948) {
  var result_2952806949 = [];

    result_2952806949 = nimCopy(null, getContextWithMode_2952806914(self_2952806947, context_2952806948), NTI33554449);

  return result_2952806949;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2952806910(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function markDirty_2264924181(self_2264924182) {
    if (!(self_2264924182.mDirty)) {
    invoke_2147483710(self_2264924182.onMarkedDirty);
    }
    
    self_2264924182.mDirty = true;

  
}

function accept_3221225856(self_3221225857) {
    if ((self_3221225857.selected < (self_3221225857.completions).length)) {
    self_3221225857.handleItemConfirmed(self_3221225857.completions[chckIndx(self_3221225857.selected, 0, (self_3221225857.completions).length - 1)]);
    }
    
    popPopup_1291849107(self_3221225857.editor, self_3221225857);
    markDirty_2264924181(self_3221225857);

  
}

function acceptJsWrapper_3221225852(self_3221225913) {
    accept_3221225856(self_3221225913);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3221225852(this));};

function cancel_3221225955(self_3221225956) {
    if (!((self_3221225956.handleCanceled == null))) {
    self_3221225956.handleCanceled();
    }
    
    popPopup_1291849107(self_3221225956.editor, self_3221225956);
    markDirty_2264924181(self_3221225956);

  
}

function cancelJsWrapper_3221225951(self_3221225990) {
    cancel_3221225955(self_3221225990);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3221225951(this));};

function prev_3221226011(self_3221226012) {
    var Temporary1;

    if (((self_3221226012.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3221226012.selected, (self_3221226012.completions).length), 1), (self_3221226012.completions).length);
    }
    
    self_3221226012.selected = Temporary1;
    if (((0 < (self_3221226012.completions).length) && !((self_3221226012.handleItemSelected == null)))) {
    self_3221226012.handleItemSelected(self_3221226012.completions[chckIndx(self_3221226012.selected, 0, (self_3221226012.completions).length - 1)]);
    }
    
    markDirty_2264924181(self_3221226012);

  
}

function prevJsWrapper_3221226007(self_3221226058) {
    prev_3221226011(self_3221226058);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3221226007(this));};

function next_3221226079(self_3221226080) {
    var Temporary1;

    if (((self_3221226080.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3221226080.selected, 1), (self_3221226080.completions).length);
    }
    
    self_3221226080.selected = Temporary1;
    if (((0 < (self_3221226080.completions).length) && !((self_3221226080.handleItemSelected == null)))) {
    self_3221226080.handleItemSelected(self_3221226080.completions[chckIndx(self_3221226080.selected, 0, (self_3221226080.completions).length - 1)]);
    }
    
    markDirty_2264924181(self_3221226080);

  
}

function nextJsWrapper_3221226075(self_3221226123) {
    next_3221226079(self_3221226123);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3221226075(this));};

function getBackend_1291853803(self_1291853804) {
  var result_1291853805 = 0;

  BeforeRet: {
    result_1291853805 = self_1291853804.backend;
    break BeforeRet;
  };

  return result_1291853805;

}

function getBackendJsWrapper_1291853799(self_1291853856) {
  var result_1291853857 = 0;

    result_1291853857 = getBackend_1291853803(self_1291853856);

  return result_1291853857;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291853799(this));};

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291854039(a_1291854041, opt_1291854042) {
  var result_1291854043 = null;

    result_1291854043 = HEX25_1627391792(a_1291854041);

  return result_1291854043;

}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet197[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2818588113(a_2818588115, opt_2818588116) {
  var result_2818588117 = null;

    result_2818588117 = HEX25_1627391795(a_2818588115);

  return result_2818588117;

}

function toJson_1291854078(a_1291854080, opt_1291854081) {
  var result_1291854082 = null;

    result_1291854082 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854082, [102,105,108,101,110,97,109,101], toJson_1811939932(a_1291854080.filename, opt_1291854081));
    HEX5BHEX5DHEX3D_1627391903(result_1291854082, [97,115,116], toJson_2818588113(a_1291854080.ast, opt_1291854081));
    HEX5BHEX5DHEX3D_1627391903(result_1291854082, [108,97,110,103,117,97,103,101,73,68], toJson_1811939932(a_1291854080.languageID, opt_1291854081));
    HEX5BHEX5DHEX3D_1627391903(result_1291854082, [97,112,112,70,105,108,101], toJson_2818588113(a_1291854080.appFile, opt_1291854081));

  return result_1291854082;

}

function toJson_1291854066(a_1291854068, opt_1291854069) {
  var result_1291854070 = null;

    result_1291854070 = newJArray_1627390082();
    Label1: {
      var ai_1291854077 = ({filename: [], ast: false, languageID: [], appFile: false});
      var i_1291854178 = 0;
      var L_1291854179 = (a_1291854068).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291854178 < L_1291854179)) break Label3;
            ai_1291854077 = a_1291854068[chckIndx(i_1291854178, 0, (a_1291854068).length - 1)];
            add_1627390190(result_1291854070, toJson_1291854078(ai_1291854077, opt_1291854069));
            i_1291854178 = addInt(i_1291854178, 1);
            if (!(((a_1291854068).length == L_1291854179))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291854070;

}

function toJson_1291854022(a_1291854024, opt_1291854025) {
  var result_1291854026 = null;

    result_1291854026 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [116,104,101,109,101], toJson_1811939932(a_1291854024.theme, opt_1291854025));
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [102,111,110,116,83,105,122,101], toJson_1291854039(a_1291854024.fontSize, opt_1291854025));
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [102,111,110,116,82,101,103,117,108,97,114], toJson_1811939932(a_1291854024.fontRegular, opt_1291854025));
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [102,111,110,116,66,111,108,100], toJson_1811939932(a_1291854024.fontBold, opt_1291854025));
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [102,111,110,116,73,116,97,108,105,99], toJson_1811939932(a_1291854024.fontItalic, opt_1291854025));
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [102,111,110,116,66,111,108,100,73,116,97,108,105,99], toJson_1811939932(a_1291854024.fontBoldItalic, opt_1291854025));
    HEX5BHEX5DHEX3D_1627391903(result_1291854026, [111,112,101,110,69,100,105,116,111,114,115], toJson_1291854066(a_1291854024.openEditors, opt_1291854025));

  return result_1291854026;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__1291854197 = 0;
      colontmp__1291854197 = subInt(len_855638790, 1);
      var res_1291854198 = colontmp__1291854197;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_1291854198)) break Label3;
            j_855638800 = res_1291854198;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_1291854198 = subInt(res_1291854198, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_1291854193 = 0;
      var L_1291854194 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291854193 < L_1291854194)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_1291854193, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_1291854193 = addInt(i_1291854193, 1);
            if (!(((s_1627394347).length == L_1291854194))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__1291854201 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet200[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__1291854201 = Temporary2.elems;
        var i_1291854203 = 0;
        var L_1291854204 = (colontmp__1291854201).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291854203 < L_1291854204)) break Label4;
              child_1627394384 = colontmp__1291854201[chckIndx(i_1291854203, 0, (colontmp__1291854201).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_1291854203 = addInt(i_1291854203, 1);
              if (!(((colontmp__1291854201).length == L_1291854204))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__1291854207 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet201[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291854207 = nimCopy(colontmp__1291854207, Temporary6.fields, NTI1627389966);
        var L_1291854208 = len_1627392114(colontmp__1291854207);
        if ((0 < colontmp__1291854207.counter)) {
        var h_1291854209 = colontmp__1291854207.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291854209)) break Label8;
              var nxt_1291854211 = colontmp__1291854207.data[chckIndx(h_1291854209, 0, (colontmp__1291854207.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291854207.data[chckIndx(h_1291854209, 0, (colontmp__1291854207.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__1291854207.data[chckIndx(h_1291854209, 0, (colontmp__1291854207.data).length - 1)].Field2;
              value_1627394390 = colontmp__1291854207.data[chckIndx(h_1291854209, 0, (colontmp__1291854207.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__1291854207) == L_1291854208))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291854209 = nxt_1291854211;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet202[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet203[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet204[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet205[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet206[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet198[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291854182 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet199[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291854182 = nimCopy(colontmp__1291854182, Temporary3.fields, NTI1627389966);
        var L_1291854184 = len_1627392114(colontmp__1291854182);
        if ((0 < colontmp__1291854182.counter)) {
        var h_1291854185 = colontmp__1291854182.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291854185)) break Label5;
              var nxt_1291854187 = colontmp__1291854182.data[chckIndx(h_1291854185, 0, (colontmp__1291854182.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291854182.data[chckIndx(h_1291854185, 0, (colontmp__1291854182.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291854182.data[chckIndx(h_1291854185, 0, (colontmp__1291854182.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291854182.data[chckIndx(h_1291854185, 0, (colontmp__1291854182.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291854182) == L_1291854184))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291854185 = nxt_1291854187;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet207[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet208[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet209[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet210[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291854189 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet211[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291854189 = subInt((Temporary12.elems).length, 1);
        var res_1291854190 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291854190 <= colontmp__1291854189)) break Label14;
              i_1627394476 = res_1291854190;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet212[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291854190 = addInt(res_1291854190, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function saveAppState_1291853524(self_1291853525) {
    var state_1291853972 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []};
    state_1291853972.theme = nimCopy(null, self_1291853525.theme.path, NTI33554449);
    if ((self_1291853525.backend == 1)) {
    state_1291853972.fontSize = self_1291853525.loadedFontSize;
    }
    else {
      state_1291853972.fontSize = fontSize_2315255952(self_1291853525.platform);
    }
    
    state_1291853972.fontRegular = nimCopy(null, self_1291853525.fontRegular, NTI33554449);
    state_1291853972.fontBold = nimCopy(null, self_1291853525.fontBold, NTI33554449);
    state_1291853972.fontItalic = nimCopy(null, self_1291853525.fontItalic, NTI33554449);
    state_1291853972.fontBoldItalic = nimCopy(null, self_1291853525.fontBoldItalic, NTI33554449);
    Label1: {
      var view_1291853999 = null;
      var i_1291854173 = 0;
      var L_1291854174 = (self_1291853525.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291854173 < L_1291854174)) break Label3;
            view_1291853999 = self_1291853525.views[chckIndx(i_1291854173, 0, (self_1291853525.views).length - 1)];
            if (isObj(view_1291853999.document.m_type, NTI2818572427)) {
            var textDocument_1291854006 = view_1291853999.document;
            state_1291853972.openEditors.push({filename: nimCopy(null, textDocument_1291854006.filename, NTI33554449), ast: false, languageID: nimCopy(null, textDocument_1291854006.languageId, NTI33554449), appFile: textDocument_1291854006.appFile});;
            }
            else {
            if (isObj(view_1291853999.document.m_type, NTI2952791498)) {
            var astDocument_1291854017 = view_1291853999.document;
            state_1291853972.openEditors.push({filename: nimCopy(null, astDocument_1291854017.filename, NTI33554449), ast: true, languageID: [97,115,116], appFile: astDocument_1291854017.appFile});;
            }
            }
            i_1291854173 = addInt(i_1291854173, 1);
            if (!(((self_1291853525.views).length == L_1291854174))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var serialized_1291854107 = toJson_1291854022(state_1291853972, initToJsonOptions_1811939362());
    saveApplicationFile_2499805208(fs_2499805237, [99,111,110,102,105,103,46,106,115,111,110], pretty_1627394477(serialized_1291854107, 2));
    saveApplicationFile_2499805208(fs_2499805237, [111,112,116,105,111,110,115,46,106,115,111,110], pretty_1627394477(self_1291853525.options, 2));

  
}

function saveAppStateJsWrapper_1291853966(self_1291854161) {
    saveAppState_1291853524(self_1291854161);

  
}
editor_prototype.saveAppState = function() { return (saveAppStateJsWrapper_1291853966(this));};

function requestRender_1291854218(self_1291854219, redrawEverything_1291854220) {
    requestRender_2315255914(self_1291854219.platform, redrawEverything_1291854220);

  
}

function requestRenderJsWrapper_1291854214(self_1291854248, redrawEverything_1291854249) {
    requestRender_1291854218(self_1291854248, redrawEverything_1291854249);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291854214(this, redrawEverything_));};

function setHandleInputs_2046820706(config_2046820707, value_2046820708) {
    config_2046820707.handleInputs = value_2046820708;
    config_2046820707.revision = addInt(config_2046820707.revision, 1);

  
}

function setHandleInputs_1291854270(self_1291854271, context_1291854272, value_1291854273) {
    setHandleInputs_2046820706(getEventHandlerConfig_1291849154(self_1291854271, context_1291854272), value_1291854273);

  
}

function setHandleInputsJsWrapper_1291854266(self_1291854302, context_1291854303, value_1291854304) {
    setHandleInputs_1291854270(self_1291854302, context_1291854303, value_1291854304);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291854266(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2046820713(config_2046820714, value_2046820715) {
    config_2046820714.handleActions = value_2046820715;
    config_2046820714.revision = addInt(config_2046820714.revision, 1);

  
}

function setHandleActions_1291854330(self_1291854331, context_1291854332, value_1291854333) {
    setHandleActions_2046820713(getEventHandlerConfig_1291849154(self_1291854331, context_1291854332), value_1291854333);

  
}

function setHandleActionsJsWrapper_1291854326(self_1291854362, context_1291854363, value_1291854364) {
    setHandleActions_1291854330(self_1291854362, context_1291854363, value_1291854364);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291854326(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2046820720(config_2046820721, value_2046820722) {
    config_2046820721.consumeAllActions = value_2046820722;
    config_2046820721.revision = addInt(config_2046820721.revision, 1);

  
}

function setConsumeAllActions_1291854390(self_1291854391, context_1291854392, value_1291854393) {
    setConsumeAllActions_2046820720(getEventHandlerConfig_1291849154(self_1291854391, context_1291854392), value_1291854393);

  
}

function setConsumeAllActionsJsWrapper_1291854386(self_1291854422, context_1291854423, value_1291854424) {
    setConsumeAllActions_1291854390(self_1291854422, context_1291854423, value_1291854424);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291854386(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2046820727(config_2046820728, value_2046820729) {
    config_2046820728.consumeAllInput = value_2046820729;
    config_2046820728.revision = addInt(config_2046820728.revision, 1);

  
}

function setConsumeAllInput_1291854450(self_1291854451, context_1291854452, value_1291854453) {
    setConsumeAllInput_2046820727(getEventHandlerConfig_1291849154(self_1291854451, context_1291854452), value_1291854453);

  
}

function setConsumeAllInputJsWrapper_1291854446(self_1291854482, context_1291854483, value_1291854484) {
    setConsumeAllInput_1291854450(self_1291854482, context_1291854483, value_1291854484);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291854446(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function initTable_2701133671(initialSize_2701133674) {
  var result_2701133675 = ({data: [], counter: 0});

    var correctSizeHEX60gensym36_2701133677 = slotsNeeded_1308622891(chckRange(initialSize_2701133674, 0, 2147483647));
    result_2701133675.counter = 0;
    result_2701133675.data = new Array(chckRange(correctSizeHEX60gensym36_2701133677, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_2701133677, 0, 2147483647) ; ++i) { result_2701133675.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2701133675;

}

function newWorkspaceFolderGithub_2701133652(user_2701133653, repository_2701133654, branchOrHash_2701133655) {
  var result_2701133656 = null;

    result_2701133656 = ({m_type: NTI2701131780, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: []});
    var fmtRes_2701133664 = [mnewString(0)];
    fmtRes_2701133664[0].push.apply(fmtRes_2701133664[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2701133664, 0, user_2701133653, []);
    fmtRes_2701133664[0].push.apply(fmtRes_2701133664[0], [47]);;
    formatValue_721420459(fmtRes_2701133664, 0, repository_2701133654, []);
    result_2701133656.baseUrl = nimCopy(null, fmtRes_2701133664[0], NTI33554449);
    var fmtRes_2701133670 = [mnewString(0)];
    fmtRes_2701133670[0].push.apply(fmtRes_2701133670[0], [79,112,101,110,105,110,103,32,110,101,119,32,103,105,116,104,117,98,32,119,111,114,107,115,112,97,99,101,32,102,111,108,100,101,114,32,97,116,32]);;
    formatValue_721420459(fmtRes_2701133670, 0, result_2701133656.baseUrl, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2701133670[0], NTI33554449)]);
    result_2701133656.user = nimCopy(null, user_2701133653, NTI33554449);
    result_2701133656.repository = nimCopy(null, repository_2701133654, NTI33554449);
    result_2701133656.branchOrHash = nimCopy(null, branchOrHash_2701133655, NTI33554449);
    result_2701133656.cachedDirectoryListings = nimCopy(result_2701133656.cachedDirectoryListings, initTable_2701133671(32), NTI2701131788);
    result_2701133656.pathToSha = nimCopy(result_2701133656.pathToSha, initTable_1795162117(32), NTI1795162120);

  return result_2701133656;

}

function openGithubWorkspace_1291854510(self_1291854511, user_1291854512, repository_1291854513, branchOrHash_1291854514) {
    self_1291854511.workspace.folders.push(newWorkspaceFolderGithub_2701133652(user_1291854512, repository_1291854513, branchOrHash_1291854514));;

  
}

function openGithubWorkspaceJsWrapper_1291854506(self_1291854557, user_1291854558, repository_1291854559, branchOrHash_1291854560) {
    openGithubWorkspace_1291854510(self_1291854557, user_1291854558, repository_1291854559, branchOrHash_1291854560);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291854506(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function newWorkspaceFolderAbsytreeServer_2785017997(url_2785017998) {
  var result_2785017999 = null;

    result_2785017999 = ({m_type: NTI2785017860, baseUrl: [], name: []});
    result_2785017999.baseUrl = nimCopy(null, url_2785017998, NTI33554449);
    var fmtRes_2785018008 = [mnewString(0)];
    fmtRes_2785018008[0].push.apply(fmtRes_2785018008[0], [79,112,101,110,105,110,103,32,110,101,119,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,119,111,114,107,115,112,97,99,101,32,102,111,108,100,101,114,32,97,116,32]);;
    formatValue_721420459(fmtRes_2785018008, 0, result_2785017999.baseUrl, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2785018008[0], NTI33554449)]);

  return result_2785017999;

}

function openAbsytreeServerWorkspace_1291854591(self_1291854592, url_1291854593) {
    self_1291854592.workspace.folders.push(newWorkspaceFolderAbsytreeServer_2785017997(url_1291854593));;

  
}

function openAbsytreeServerWorkspaceJsWrapper_1291854587(self_1291854625, url_1291854626) {
    openAbsytreeServerWorkspace_1291854591(self_1291854625, url_1291854626);

  
}
editor_prototype.openAbsytreeServerWorkspace = function(url_ /* : string */) { return (openAbsytreeServerWorkspaceJsWrapper_1291854587(this, url_ == undefined ? undefined : cstrToNimstr(url_)));};

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet213[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2818582801(editor_2818582803, path_2818582804, default_2818582805) {
  var result_2818582810 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2818582803 == null)) {
      result_2818582810 = default_2818582805;
      break BeforeRet;
      }
      
      var nodeHEX60gensym156_2818582821 = HEX7BHEX7D_1627393316(editor_2818582803.options, nsuSplitString(path_2818582804, [46], -1));
      if ((nodeHEX60gensym156_2818582821 == null)) {
      result_2818582810 = default_2818582805;
      break BeforeRet;
      }
      
    };
    result_2818582810 = getBool_1627390147(nodeHEX60gensym156_2818582821, default_2818582805);
    break BeforeRet;
  };

  return result_2818582810;

}

function getFlag_1291848866(self_1291848867, flag_1291848868, default_1291848869) {
  var result_1291854651 = false;

  BeforeRet: {
    result_1291854651 = getOption_2818582801(self_1291848867, flag_1291848868, default_1291848869);
    break BeforeRet;
  };

  return result_1291854651;

}

function getFlagJsWrapper2_1291854643(self_1291854690, flag_1291854691, default_1291854692) {
  var result_1291854693 = false;

    result_1291854693 = getFlag_1291848866(self_1291854690, flag_1291854691, default_1291854692);

  return result_1291854693;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291854643(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function setOption_1291854728(editor_1291854730, path_1291854731, value_1291854732) {
  BeforeRet: {
    Label1: {
      if ((editor_1291854730 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym232_1291854747 = nsuSplitString(path_1291854731, [46], -1);
      var nodeHEX60gensym232_1291854748 = editor_1291854730.options;
      Label2: {
        var keyHEX60gensym232_1291854767 = [];
        var colontmp__1291854835 = [];
        colontmp__1291854835 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym232_1291854747, HEX2EHEX2E_1040187488(0, 2));
        var i_1291854836 = 0;
        var L_1291854837 = (colontmp__1291854835).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291854836 < L_1291854837)) break Label4;
              keyHEX60gensym232_1291854767 = colontmp__1291854835[chckIndx(i_1291854836, 0, (colontmp__1291854835).length - 1)];
              if (!((nodeHEX60gensym232_1291854748.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym232_1291854748, keyHEX60gensym232_1291854767))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym232_1291854748, keyHEX60gensym232_1291854767, newJObject_1627390051());
              }
              
              nodeHEX60gensym232_1291854748 = HEX5BHEX5D_1627393037(nodeHEX60gensym232_1291854748, keyHEX60gensym232_1291854767);
              i_1291854836 = addInt(i_1291854836, 1);
              if (!(((colontmp__1291854835).length == L_1291854837))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym232_1291854748 == null) || !((nodeHEX60gensym232_1291854748.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym232_1291854748, HEX5BHEX5D_2600469248(pathItemsHEX60gensym232_1291854747, 1), newJBool_1627390046(value_1291854732));
    };
  };

  
}

function setFlag_1291848943(self_1291848944, flag_1291848945, value_1291848946) {
    setOption_1291854728(self_1291848944, flag_1291848945, value_1291848946);

  
}

function setFlagJsWrapper2_1291854720(self_1291854811, flag_1291854812, value_1291854813) {
    setFlag_1291848943(self_1291854811, flag_1291854812, value_1291854813);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291854720(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848947(self_1291848948, flag_1291848949) {
    setFlag_1291848943(self_1291848948, flag_1291848949, !(getFlag_1291848866(self_1291848948, flag_1291848949, false)));

  
}

function toggleFlagJsWrapper_1291854841(self_1291854875, flag_1291854876) {
    toggleFlag_1291848947(self_1291854875, flag_1291854876);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291854841(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291854897(self_1291854898, option_1291854899, value_1291854900) {
  BeforeRet: {
    if ((self_1291854898 == null)) {
    break BeforeRet;
    }
    
    var pathItems_1291854904 = nsuSplitString(option_1291854899, [46], -1);
    var node_1291854905 = self_1291854898.options;
    Label1: {
      var key_1291854924 = [];
      var colontmp__1291854986 = [];
      colontmp__1291854986 = HEX5BHEX5D_2818588583(pathItems_1291854904, HEX2EHEX2E_1040187488(0, 2));
      var i_1291854987 = 0;
      var L_1291854988 = (colontmp__1291854986).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291854987 < L_1291854988)) break Label3;
            key_1291854924 = colontmp__1291854986[chckIndx(i_1291854987, 0, (colontmp__1291854986).length - 1)];
            if (!((node_1291854905.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291854905, key_1291854924))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291854905, key_1291854924, newJObject_1627390051());
            }
            
            node_1291854905 = HEX5BHEX5D_1627393037(node_1291854905, key_1291854924);
            i_1291854987 = addInt(i_1291854987, 1);
            if (!(((colontmp__1291854986).length == L_1291854988))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291854905 == null) || !((node_1291854905.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291854905, HEX5BHEX5D_2600469248(pathItems_1291854904, 1), value_1291854900);
  };

  
}

function setOptionJsWrapper_1291854893(self_1291854968, option_1291854969, value_1291854970) {
    setOption_1291854897(self_1291854968, option_1291854969, value_1291854970);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291854893(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291854996(self_1291854997) {
    self_1291854997.closeRequested = true;

  
}

function quitJsWrapper_1291854992(self_1291855024) {
    quit_1291854996(self_1291855024);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291854992(this));};

function changeFontSize_1291855040(self_1291855041, amount_1291855042) {
    fontSizeHEX3D_2315255944(self_1291855041.platform, (fontSize_2315255952(self_1291855041.platform) + amount_1291855042));
    requestRender_2315255914(self_1291855041.platform, true);

  
}

function changeFontSizeJsWrapper_1291855036(self_1291855070, amount_1291855071) {
    changeFontSize_1291855040(self_1291855070, amount_1291855071);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291855036(this, amount_));};

function rawGet_1291848304(t_1291848307, key_1291848308, hc_1291848309, hc_1291848309_Idx) {
  var result_1291848310 = 0;

  BeforeRet: {
    hc_1291848309[hc_1291848309_Idx] = hash_1325400491(key_1291848308);
    if ((hc_1291848309[hc_1291848309_Idx] == 0)) {
    hc_1291848309[hc_1291848309_Idx] = 314159265;
    }
    
    if (((t_1291848307.data).length == 0)) {
    result_1291848310 = -1;
    break BeforeRet;
    }
    
    var h_1291848362 = (hc_1291848309[hc_1291848309_Idx] & (t_1291848307.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848307.data[chckIndx(h_1291848362, 0, (t_1291848307.data).length - 1)].Field0)) break Label2;
          if (((t_1291848307.data[chckIndx(h_1291848362, 0, (t_1291848307.data).length - 1)].Field0 == hc_1291848309[hc_1291848309_Idx]) && eqStrings(t_1291848307.data[chckIndx(h_1291848362, 0, (t_1291848307.data).length - 1)].Field1, key_1291848308))) {
          result_1291848310 = h_1291848362;
          break BeforeRet;
          }
          
          h_1291848362 = nextTry_1308622883(h_1291848362, (t_1291848307.data).length - 1);
        }
    };
    result_1291848310 = subInt(-1, h_1291848362);
  };

  return result_1291848310;

}

function mustRehash_1291851908(t_1291851910) {
  var result_1291851911 = false;

    if (!((t_1291851910.counter < (t_1291851910.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851911 = ((mulInt((t_1291851910.data).length, 2) < mulInt(t_1291851910.counter, 3)) || (subInt((t_1291851910.data).length, t_1291851910.counter) < 4));

  return result_1291851911;

}

function rawInsert_1291852357(t_1291852361, data_1291852362, data_1291852362_Idx, key_1291852363, val_1291852364, hc_1291852365, h_1291852366) {
    data_1291852362[data_1291852362_Idx][chckIndx(h_1291852366, 0, (data_1291852362[data_1291852362_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852363, NTI33554449);
    data_1291852362[data_1291852362_Idx][chckIndx(h_1291852366, 0, (data_1291852362[data_1291852362_Idx]).length - 1)].Field2 = val_1291852364;
    data_1291852362[data_1291852362_Idx][chckIndx(h_1291852366, 0, (data_1291852362[data_1291852362_Idx]).length - 1)].Field0 = hc_1291852365;

  
}

function enlarge_1291852063(t_1291852066) {
    var n_1291852069 = [];
    n_1291852069 = new Array(chckRange(mulInt((t_1291852066.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291852066.data).length, 2), 0, 2147483647) ; ++i) { n_1291852069[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291852066.data; t_1291852066.data = n_1291852069; n_1291852069 = Temporary1;    Label2: {
      var i_1291852133 = 0;
      var colontmp__1291855398 = 0;
      colontmp__1291855398 = (n_1291852069).length - 1;
      var res_1291855399 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291855399 <= colontmp__1291855398)) break Label4;
            i_1291852133 = res_1291855399;
            var eh_1291852187 = n_1291852069[chckIndx(i_1291852133, 0, (n_1291852069).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852187)) {
            var j_1291852191 = (eh_1291852187 & (t_1291852066.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291852066.data[chckIndx(j_1291852191, 0, (t_1291852066.data).length - 1)].Field0)) break Label6;
                  j_1291852191 = nextTry_1308622883(j_1291852191, (t_1291852066.data).length - 1);
                }
            };
            rawInsert_1291852357(t_1291852066, t_1291852066, "data", n_1291852069[chckIndx(i_1291852133, 0, (n_1291852069).length - 1)].Field1, n_1291852069[chckIndx(i_1291852133, 0, (n_1291852069).length - 1)].Field2, eh_1291852187, j_1291852191);
            }
            
            res_1291855399 = addInt(res_1291855399, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852535(t_1291852538, key_1291852539, hc_1291852540) {
  var result_1291852541 = 0;

  BeforeRet: {
    if (((t_1291852538.data).length == 0)) {
    result_1291852541 = -1;
    break BeforeRet;
    }
    
    var h_1291852592 = (hc_1291852540 & (t_1291852538.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852538.data[chckIndx(h_1291852592, 0, (t_1291852538.data).length - 1)].Field0)) break Label2;
          if (((t_1291852538.data[chckIndx(h_1291852592, 0, (t_1291852538.data).length - 1)].Field0 == hc_1291852540) && eqStrings(t_1291852538.data[chckIndx(h_1291852592, 0, (t_1291852538.data).length - 1)].Field1, key_1291852539))) {
          result_1291852541 = h_1291852592;
          break BeforeRet;
          }
          
          h_1291852592 = nextTry_1308622883(h_1291852592, (t_1291852538.data).length - 1);
        }
    };
    result_1291852541 = subInt(-1, h_1291852592);
  };

  return result_1291852541;

}

function mgetOrPut_1291855122(t_1291855125, key_1291855126, val_1291855127) {
  var result_1291855128 = null;
  var result_1291855128_Idx = 0;

    if (((t_1291855125.data).length == 0)) {
    var correctSizeHEX60gensym289_1291855177 = slotsNeeded_1308622891(32);
    t_1291855125.counter = 0;
    t_1291855125.data = new Array(chckRange(correctSizeHEX60gensym289_1291855177, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym289_1291855177, 0, 2147483647) ; ++i) { t_1291855125.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291855182 = [0];
    var index_1291855189 = rawGet_1291848304(t_1291855125, key_1291855126, hc_1291855182, 0);
    if ((index_1291855189 < 0)) {
    if (((t_1291855125.data).length == 0)) {
    var correctSizeHEX60gensym292_1291855238 = slotsNeeded_1308622891(32);
    t_1291855125.counter = 0;
    t_1291855125.data = new Array(chckRange(correctSizeHEX60gensym292_1291855238, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym292_1291855238, 0, 2147483647) ; ++i) { t_1291855125.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851908(t_1291855125)) {
    enlarge_1291852063(t_1291855125);
    index_1291855189 = rawGetKnownHC_1291852535(t_1291855125, key_1291855126, hc_1291855182[0]);
    }
    
    index_1291855189 = subInt(-1, index_1291855189);
    rawInsert_1291852357(t_1291855125, t_1291855125, "data", key_1291855126, val_1291855127, hc_1291855182[0], index_1291855189);
    t_1291855125.counter = addInt(t_1291855125.counter, 1);
    }
    
    result_1291855128 = t_1291855125.data[chckIndx(index_1291855189, 0, (t_1291855125.data).length - 1)]; result_1291855128_Idx = "Field2";

  return [result_1291855128, result_1291855128_Idx];

}

function changeLayoutProp_1291855092(self_1291855093, prop_1291855094, change_1291855095) {
    var Temporary1;

    HEX2BHEX3D_2080374897((Temporary1 = mgetOrPut_1291855122(self_1291855093.layout_props.props, prop_1291855094, 0.0), Temporary1)[0], Temporary1[1], change_1291855095);
    requestRender_2315255914(self_1291855093.platform, true);

  
}

function changeLayoutPropJsWrapper_1291855088(self_1291855373, prop_1291855374, change_1291855375) {
    changeLayoutProp_1291855092(self_1291855373, prop_1291855374, change_1291855375);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291855088(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291855408(self_1291855409) {
    self_1291855409.statusBarOnTop = !(self_1291855409.statusBarOnTop);
    requestRender_2315255914(self_1291855409.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291855404(self_1291855436) {
    toggleStatusBarLocation_1291855408(self_1291855436);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291855404(this));};

function createEditorForDocument_1291848870(self_1291848871, document_1291848872) {
  var result_1291848873 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848896 = null;
      var i_1291855497 = 0;
      var L_1291855498 = (self_1291848871.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855497 < L_1291855498)) break Label3;
            editor_1291848896 = self_1291848871.editor_defaults[chckIndx(i_1291855497, 0, (self_1291848871.editor_defaults).length - 1)];
            if (canEdit_2147483771(editor_1291848896, document_1291848872)) {
            result_1291848873 = createWithDocument_2147483786(editor_1291848896, document_1291848872);
            break BeforeRet;
            }
            
            i_1291855497 = addInt(i_1291855497, 1);
            if (!(((self_1291848871.editor_defaults).length == L_1291855498))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2130706439(document_1291848872) || [])]);
    result_1291848873 = null;
    break BeforeRet;
  };

  return result_1291848873;

}

function createView_1291848950(self_1291848951, document_1291848952) {
    
function HEX3Aanonymous_1291848965() {
        requestRender_2315255914(self_1291848951.platform, false);

      
    }

    var editor_1291848953 = createEditorForDocument_1291848870(self_1291848951, document_1291848952);
    injectDependencies_1291847745(editor_1291848953, self_1291848951);
    var _ = subscribe_1291848989(editor_1291848953.onMarkedDirty, HEX3Aanonymous_1291848965);
    var view_1291849016 = {document: document_1291848952, editor: editor_1291848953};
    self_1291848951.views.push(view_1291849016);;
    self_1291848951.currentView = subInt((self_1291848951.views).length, 1);
    requestRender_2315255914(self_1291848951.platform, false);

  
}

function createView_1291855452(self_1291855453) {
    createView_1291848950(self_1291855453, newTextDocument_3170894353([], [], false));

  
}

function createViewJsWrapper_1291855448(self_1291855485) {
    createView_1291855452(self_1291855485);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291855448(this));};

function delete_1291855508(x_1291855510, x_1291855510_Idx, i_1291855511) {
    x_1291855510[x_1291855510_Idx].splice(i_1291855511, 1);

  
}

function closeCurrentView_1291855506(self_1291855507) {
    unregister_2147483811(self_1291855507.views[chckIndx(self_1291855507.currentView, 0, (self_1291855507.views).length - 1)].editor);
    delete_1291855508(self_1291855507, "views", chckRange(self_1291855507.currentView, 0, 2147483647));
    self_1291855507.currentView = clamp_1660945119(self_1291855507.currentView, 0, subInt((self_1291855507.views).length, 1));
    requestRender_2315255914(self_1291855507.platform, false);

  
}

function closeCurrentViewJsWrapper_1291855502(self_1291855564) {
    closeCurrentView_1291855506(self_1291855564);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291855502(this));};

function insert_1291855598(x_1291855600, x_1291855600_Idx, item_1291855601, i_1291855602) {
    var it_1291855622 = null;
    x_1291855600[x_1291855600_Idx] = x_1291855600[x_1291855600_Idx] || []; x_1291855600[x_1291855600_Idx].splice(i_1291855602, 0, it_1291855622);
    x_1291855600[x_1291855600_Idx][chckIndx(i_1291855602, 0, (x_1291855600[x_1291855600_Idx]).length - 1)] = item_1291855601;

  
}

function moveCurrentViewToTop_1291855585(self_1291855586) {
    if ((0 < (self_1291855586.views).length)) {
    var view_1291855593 = self_1291855586.views[chckIndx(self_1291855586.currentView, 0, (self_1291855586.views).length - 1)];
    delete_1291855508(self_1291855586, "views", chckRange(self_1291855586.currentView, 0, 2147483647));
    insert_1291855598(self_1291855586, "views", view_1291855593, 0);
    }
    
    self_1291855586.currentView = 0;
    requestRender_2315255914(self_1291855586.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291855581(self_1291855649) {
    moveCurrentViewToTop_1291855585(self_1291855649);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291855581(this));};

function nextView_1291855666(self_1291855667) {
    var Temporary1;

    if (((self_1291855667.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291855667.currentView, 1), (self_1291855667.views).length);
    }
    
    self_1291855667.currentView = Temporary1;
    requestRender_2315255914(self_1291855667.platform, false);

  
}

function nextViewJsWrapper_1291855662(self_1291855700) {
    nextView_1291855666(self_1291855700);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291855662(this));};

function prevView_1291855716(self_1291855717) {
    var Temporary1;

    if (((self_1291855717.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291855717.currentView, (self_1291855717.views).length), 1), (self_1291855717.views).length);
    }
    
    self_1291855717.currentView = Temporary1;
    requestRender_2315255914(self_1291855717.platform, false);

  
}

function prevViewJsWrapper_1291855712(self_1291855753) {
    prevView_1291855716(self_1291855753);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291855712(this));};

function moveCurrentViewPrev_1291855769(self_1291855770) {
    if ((0 < (self_1291855770.views).length)) {
    var view_1291855777 = self_1291855770.views[chckIndx(self_1291855770.currentView, 0, (self_1291855770.views).length - 1)];
    var index_1291855784 = modInt(subInt(addInt(self_1291855770.currentView, (self_1291855770.views).length), 1), (self_1291855770.views).length);
    delete_1291855508(self_1291855770, "views", chckRange(self_1291855770.currentView, 0, 2147483647));
    insert_1291855598(self_1291855770, "views", view_1291855777, chckRange(index_1291855784, 0, 2147483647));
    self_1291855770.currentView = index_1291855784;
    }
    
    requestRender_2315255914(self_1291855770.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291855765(self_1291855820) {
    moveCurrentViewPrev_1291855769(self_1291855820);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291855765(this));};

function moveCurrentViewNext_1291855836(self_1291855837) {
    if ((0 < (self_1291855837.views).length)) {
    var view_1291855844 = self_1291855837.views[chckIndx(self_1291855837.currentView, 0, (self_1291855837.views).length - 1)];
    var index_1291855848 = modInt(addInt(self_1291855837.currentView, 1), (self_1291855837.views).length);
    delete_1291855508(self_1291855837, "views", chckRange(self_1291855837.currentView, 0, 2147483647));
    insert_1291855598(self_1291855837, "views", view_1291855844, chckRange(index_1291855848, 0, 2147483647));
    self_1291855837.currentView = index_1291855848;
    }
    
    requestRender_2315255914(self_1291855837.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291855832(self_1291855884) {
    moveCurrentViewNext_1291855836(self_1291855884);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291855832(this));};

function setLayout_1291855900(self_1291855901, layout_1291855902) {
    var Temporary1;

    switch (toJSStr(layout_1291855902)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291855901.layout = Temporary1;
    requestRender_2315255914(self_1291855901.platform, false);

  
}

function setLayoutJsWrapper_1291855896(self_1291855966, layout_1291855967) {
    setLayout_1291855900(self_1291855966, layout_1291855967);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291855896(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851055(self_1291851056) {
  var result_1291851057 = null;

    result_1291851057 = self_1291851056.commandLineTextEditor;

  return result_1291851057;

}

function commandLine_1291855988(self_1291855989, initialValue_1291855990) {
    contentHEX3D_2818573886(getCommandLineTextEditor_1291851055(self_1291855989).document, [nimCopy(null, initialValue_1291855990, NTI33554449)]);
    self_1291855989.commandLineMode = true;
    requestRender_2315255914(self_1291855989.platform, false);

  
}

function commandLineJsWrapper_1291855984(self_1291856022, initialValue_1291856023) {
    commandLine_1291855988(self_1291856022, initialValue_1291856023);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291855984(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291856044(self_1291856045) {
    contentHEX3D_2818573886(getCommandLineTextEditor_1291851055(self_1291856045).document, [[]]);
    self_1291856045.commandLineMode = false;
    requestRender_2315255914(self_1291856045.platform, false);

  
}

function exitCommandLineJsWrapper_1291856040(self_1291856076) {
    exitCommandLine_1291856044(self_1291856076);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291856040(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291856149 = 0;
      var L_1291856150 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856149 < L_1291856150)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291856149, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291856149 = addInt(i_1291856149, 1);
            if (!(((a_1593835606).length == L_1291856150))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2046821786(action_2046821787) {
  var result_2046821790 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2046821796 = find_1593835603(action_2046821787, 32);
    if ((spaceIndex_2046821796 == -1)) {
    var colontmp__1291856144 = nimCopy(null, action_2046821787, NTI33554449);
    var colontmp__1291856145 = [];
    result_2046821790 = nimCopy(result_2046821790, {Field0: nimCopy(null, colontmp__1291856144, NTI33554449), Field1: nimCopy(null, colontmp__1291856145, NTI33554449)}, NTI2046821074);
    break BeforeRet;
    }
    else {
      var colontmp__1291856146 = HEX5BHEX5D_855639291(action_2046821787, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2046821796, 1)));
      var colontmp__1291856147 = HEX5BHEX5D_855639319(action_2046821787, HEX2EHEX2E_1040187488(addInt(spaceIndex_2046821796, 1), 1));
      result_2046821790 = nimCopy(result_2046821790, {Field0: nimCopy(null, colontmp__1291856146, NTI33554449), Field1: nimCopy(null, colontmp__1291856147, NTI33554449)}, NTI2046821074);
      break BeforeRet;
    }
    
  };

  return result_2046821790;

}

function executeCommandLine_1291856092(self_1291856093) {
  var result_1291856094 = false;

  BeforeRet: {
    try {
    self_1291856093.commandLineMode = false;
    var colontmp__1291856143 = parseAction_2046821786(nsuJoinSep(content_2818573982(getCommandLineTextEditor_1291851055(self_1291856093).document), []));
    var action_1291856095 = nimCopy(null, colontmp__1291856143["Field0"], NTI33554449);
    var arg_1291856096 = nimCopy(null, colontmp__1291856143["Field1"], NTI33554449);
    contentHEX3D_2818573886(getCommandLineTextEditor_1291851055(self_1291856093).document, [[]]);
    result_1291856094 = handleAction_1291848862(self_1291856093, action_1291856095, arg_1291856096);
    break BeforeRet;
    } finally {
    requestRender_2315255914(self_1291856093.platform, false);
    }
  };

  return result_1291856094;

}

function executeCommandLineJsWrapper_1291856088(self_1291856128) {
  var result_1291856129 = false;

    result_1291856129 = executeCommandLine_1291856092(self_1291856128);

  return result_1291856129;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291856088(this));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__1291856253 = 0;
        colontmp__1291856253 = len_1627395282(x_1627395286);
        var i_1291856254 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_1291856254 < colontmp__1291856253)) break Label3;
              i_1627395293 = i_1291856254;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_1291856254 = addInt(i_1291856254, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__1291856276 = 0;
      colontmp__1291856276 = subInt((x_1627392045).length, 1);
      var res_1291856277 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291856277 <= colontmp__1291856276)) break Label3;
            i_1627392069 = res_1291856277;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_1291856277 = addInt(res_1291856277, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet214[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet215[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet216[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet217[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet218[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet219[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet220[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet221[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet222[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet223[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet224[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet225[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__1291856270 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet226[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__1291856270 = nimCopy(colontmp__1291856270, Temporary14.fields, NTI1627389966);
          var L_1291856271 = len_1627392114(colontmp__1291856270);
          if ((0 < colontmp__1291856270.counter)) {
          var h_1291856272 = colontmp__1291856270.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_1291856272)) break Label16;
                var nxt_1291856274 = colontmp__1291856270.data[chckIndx(h_1291856272, 0, (colontmp__1291856270.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__1291856270.data[chckIndx(h_1291856272, 0, (colontmp__1291856270.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__1291856270.data[chckIndx(h_1291856272, 0, (colontmp__1291856270.data).length - 1)].Field2;
                val_1627392497 = colontmp__1291856270.data[chckIndx(h_1291856272, 0, (colontmp__1291856270.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet227[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet228[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__1291856270) == L_1291856271))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_1291856272 = nxt_1291856274;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet229[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet230[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function parseEnum_2986346693(s_2986346695, default_2986346696) {
    var Temporary1;

  var result_2986346697 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2986346695))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_2986346696;
      break;
    }
    result_2986346697 = Temporary1;

  return result_2986346697;

}

function fromJsonHook_2986346690(t_2986346691, t_2986346691_Idx, jsonNode_2986346692) {
    var Temporary1;

    var Temporary1 = jsonNode_2986346692;
    if (ConstSet231[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_2986346691[t_2986346691_Idx] = parseEnum_2986346693(Temporary1.str, 0);

  
}

function fromJson_2986346761(a_2986346763, a_2986346763_Idx, b_2986346764, opt_2986346765) {
    if (!(!(HEX3DHEX3D_1627392026(b_2986346764, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_2986346764}));
    }
    
    fromJsonHook_2986346690(a_2986346763, a_2986346763_Idx, b_2986346764);

  
}

function jsonTo_2986346755(b_2986346757, opt_2986346759) {
  var result_2986346760 = [0];

    fromJson_2986346761(result_2986346760, 0, b_2986346757, opt_2986346759);

  return result_2986346760[0];

}

function fromJsonHook_2181038341(id_2181038342, json_2181038343) {
    var Temporary1;

    if ((json_2181038343.kind == 4)) {
    var Temporary1 = json_2181038343;
    if (ConstSet232[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2181038342 = nimCopy(id_2181038342, parseId_2181038327(Temporary1.str), NTI2181038083);
    }
    else {
      id_2181038342 = nimCopy(id_2181038342, null_2181038340, NTI2181038083);
    }
    

  
}

function fromJson_2986346778(a_2986346780, b_2986346781, opt_2986346782) {
    if (!(!(HEX3DHEX3D_1627392026(b_2986346781, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_2986346781}));
    }
    
    fromJsonHook_2181038341(a_2986346780, b_2986346781);

  
}

function jsonTo_2986346772(b_2986346774, opt_2986346776) {
  var result_2986346777 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_2986346778(result_2986346777[0], b_2986346774, opt_2986346776);

  return result_2986346777[0];

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet237[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet234[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet235[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet236[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet238[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_1291856289 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856289 <= 6)) break Label3;
            if ((x_1627395424[i_1291856289] != undefined)) {
            value_1627395451 = i_1291856289;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_1291856289 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet233[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet239), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet240[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function jsonToAstNode_2986346751(json_2986346752, opt_2986346753) {
        var Temporary3;

  var result_2986346754 = null;

    result_2986346754 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_2986346754.kind = jsonTo_2986346755(HEX5BHEX5D_1627393037(json_2986346752, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_2986346754.id = nimCopy(result_2986346754.id, jsonTo_2986346772(HEX5BHEX5D_1627393037(json_2986346752, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2181038083);
    if (hasKey_1627393154(json_2986346752, [114,101,102,102])) {
    result_2986346754.reff = nimCopy(result_2986346754.reff, jsonTo_2986346772(HEX5BHEX5D_1627393037(json_2986346752, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2181038083);
    }
    
    if (hasKey_1627393154(json_2986346752, [116,101,120,116])) {
    result_2986346754.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2986346752, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2986346752, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_2986346799 = null;
      var colontmp__1291856257 = null;
      colontmp__1291856257 = HEX5BHEX5D_1627393037(json_2986346752, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__1291856257.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__1291856257.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_1291856264 = null;
        var colontmp__1291856265 = [];
        var Temporary3 = colontmp__1291856257;
        if (ConstSet241[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291856265 = Temporary3.elems;
        var i_1291856266 = 0;
        var L_1291856267 = (colontmp__1291856265).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291856266 < L_1291856267)) break Label5;
              i_1291856264 = colontmp__1291856265[chckIndx(i_1291856266, 0, (colontmp__1291856265).length - 1)];
              child_2986346799 = i_1291856264;
              add_2986344486(result_2986346754, jsonToAstNode_2986346751(child_2986346799, {allowExtraKeys: false, allowMissingKeys: false}));
              i_1291856266 = addInt(i_1291856266, 1);
              if (!(((colontmp__1291856265).length == L_1291856267))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2986346754;

}

function newAstDocument_2952794221(filename_2952794222, app_2952794223) {
  var result_2952794224 = null;

    result_2952794224 = ({m_type: NTI2952791498, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: [], appFile: false});
    result_2952794224.filename = nimCopy(null, filename_2952794222, NTI33554449);
    result_2952794224.rootNode = {kind: 7, parent: null, id: newId_2181038297(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2952794224.symbols = nimCopy(result_2952794224.symbols, initTable_3003174248(32), NTI3087008712);
    result_2952794224.appFile = app_2952794223;
    if ((0 < (filename_2952794222).length)) {
    var fmtRes_2952794236 = [mnewString(0)];
    fmtRes_2952794236[0].push.apply(fmtRes_2952794236[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794236, 0, result_2952794224.filename, []);
    fmtRes_2952794236[0].push.apply(fmtRes_2952794236[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794236[0], NTI33554449)]);
++excHandler;
    try {
    var file_2952794237 = loadFile_2499805191(fs_2499805237, result_2952794224.filename);
    var jsn_2952794238 = parseJson_1627395313(file_2952794237);
    result_2952794224.rootNode = jsonToAstNode_2986346751(jsn_2952794238, {allowExtraKeys: false, allowMissingKeys: false});
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2952794243 = [mnewString(0)];
    fmtRes_2952794243[0].push.apply(fmtRes_2952794243[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794243, 0, result_2952794224.filename, []);
    fmtRes_2952794243[0].push.apply(fmtRes_2952794243[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2952794243[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    

  return result_2952794224;

}

function newTextDocument_1291856163(filename_1291856165, content_1291856166, app_1291856167) {
  var result_1291856168 = null;

    result_1291856168 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false});
    var self_1291856172 = result_1291856168;
    self_1291856172.filename = nimCopy(null, filename_1291856165, NTI33554449);
    self_1291856172.currentTree = null;
    self_1291856172.appFile = app_1291856167;
    var _ = initTreesitter_2818578426(self_1291856172);
    var language_1291856173 = getLanguageForFile_2902458372(filename_1291856165);
    if (isSome_2768240699(language_1291856173)) {
    self_1291856172.languageId = nimCopy(null, get_2818578463(language_1291856173), NTI33554449);
    }
    
    contentHEX3D_2818573886(self_1291856172, content_1291856166);

  return result_1291856168;

}

function openFile_1291856158(self_1291856159, path_1291856160, app_1291856161) {
      var Temporary3;

    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291856160, [46,97,115,116])) {
    createView_1291848950(self_1291856159, newAstDocument_2952794221(path_1291856160, app_1291856161));
    }
    else {
      if (app_1291856161) {
      Temporary3 = loadApplicationFile_2499805202(fs_2499805237, path_1291856160);
      }
      else {
      Temporary3 = loadFile_2499805191(fs_2499805237, path_1291856160);
      }
      
      var file_1291856162 = nimCopy(null, Temporary3, NTI33554449);
      createView_1291848950(self_1291856159, newTextDocument_1291856163(path_1291856160, nsuSplitLines(file_1291856162, false), app_1291856161));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856200 = [mnewString(0)];
    fmtRes_1291856200[0].push.apply(fmtRes_1291856200[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856200, 0, path_1291856160, []);
    fmtRes_1291856200[0].push.apply(fmtRes_1291856200[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856200, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856200[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2315255914(self_1291856159.platform, false);
    }

  
}

function openFileJsWrapper_1291856154(self_1291856229, path_1291856230, app_1291856231) {
    openFile_1291856158(self_1291856229, path_1291856230, app_1291856231);

  
}
editor_prototype.openFile = function(path_ /* : string */, app_ /* : bool */) { return (openFileJsWrapper_1291856154(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function writeFile_1291856368(self_1291856369, path_1291856370, app_1291856371) {
    try {
    if ((((0 <= self_1291856369.currentView) && (self_1291856369.currentView < (self_1291856369.views).length)) && !((self_1291856369.views[chckIndx(self_1291856369.currentView, 0, (self_1291856369.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2130706445(self_1291856369.views[chckIndx(self_1291856369.currentView, 0, (self_1291856369.views).length - 1)].document, path_1291856370, app_1291856371);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856383 = [mnewString(0)];
    fmtRes_1291856383[0].push.apply(fmtRes_1291856383[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856383, 0, path_1291856370, []);
    fmtRes_1291856383[0].push.apply(fmtRes_1291856383[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856383, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856383[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255914(self_1291856369.platform, false);
    }

  
}

function writeFileJsWrapper_1291856364(self_1291856412, path_1291856413, app_1291856414) {
    writeFile_1291856368(self_1291856412, path_1291856413, app_1291856414);

  
}
editor_prototype.writeFile = function(path_ /* : string */, app_ /* : bool */) { return (writeFileJsWrapper_1291856364(this, path_ == undefined ? undefined : cstrToNimstr(path_), app_));};

function loadFile_1291856440(self_1291856441, path_1291856442) {
    try {
    if ((((0 <= self_1291856441.currentView) && (self_1291856441.currentView < (self_1291856441.views).length)) && !((self_1291856441.views[chckIndx(self_1291856441.currentView, 0, (self_1291856441.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2130706449(self_1291856441.views[chckIndx(self_1291856441.currentView, 0, (self_1291856441.views).length - 1)].document, path_1291856442);
    handleDocumentChanged_2147483808(self_1291856441.views[chckIndx(self_1291856441.currentView, 0, (self_1291856441.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856454 = [mnewString(0)];
    fmtRes_1291856454[0].push.apply(fmtRes_1291856454[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856454, 0, path_1291856442, []);
    fmtRes_1291856454[0].push.apply(fmtRes_1291856454[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856454, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856454[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255914(self_1291856441.platform, false);
    }

  
}

function loadFileJsWrapper_1291856436(self_1291856482, path_1291856483) {
    loadFile_1291856440(self_1291856482, path_1291856483);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291856436(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function removeFromLocalStorage_1291856504(self_1291856505) {
    var Temporary1;

    if ((((0 <= self_1291856505.currentView) && (self_1291856505.currentView < (self_1291856505.views).length)) && !((self_1291856505.views[chckIndx(self_1291856505.currentView, 0, (self_1291856505.views).length - 1)].document == null)))) {
    if (isObj(self_1291856505.views[chckIndx(self_1291856505.currentView, 0, (self_1291856505.views).length - 1)].document.m_type, NTI2818572427)) {
    Temporary1 = self_1291856505.views[chckIndx(self_1291856505.currentView, 0, (self_1291856505.views).length - 1)].document.filename;
    }
    else {
    Temporary1 = self_1291856505.views[chckIndx(self_1291856505.currentView, 0, (self_1291856505.views).length - 1)].document.filename;
    }
    
    var filename_1291856521 = nimCopy(null, Temporary1, NTI33554449);
    window.localStorage.removeItem(toJSStr(filename_1291856521));;
    }
    

  
}

function removeFromLocalStorageJsWrapper_1291856500(self_1291856548) {
    removeFromLocalStorage_1291856504(self_1291856548);

  
}
editor_prototype.removeFromLocalStorage = function() { return (removeFromLocalStorageJsWrapper_1291856500(this));};

function loadFromFile_2483031627(path_2483031628) {
  var result_2483031630 = ({val: null});

  return result_2483031630;

}

function isSome_1291851008(self_1291851010) {
  var result_1291851011 = false;

    result_1291851011 = !((self_1291851010.val == null));

  return result_1291851011;

}

function isNone_1291851036(self_1291851038) {
  var result_1291851039 = false;

    result_1291851039 = (self_1291851038.val == null);

  return result_1291851039;

}

function get_1291851028(self_1291851030) {
  var result_1291851031 = null;

    if (isNone_1291851036(self_1291851030)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851031 = self_1291851030["val"];

  return result_1291851031;

}

function loadTheme_1291856564(self_1291856565, name_1291856566) {
      var Temporary2;

    try {
      var fmtRes_1291856571 = [mnewString(0)];
      fmtRes_1291856571[0].push.apply(fmtRes_1291856571[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291856571, 0, name_1291856566, []);
      fmtRes_1291856571[0].push.apply(fmtRes_1291856571[0], [46,106,115,111,110]);;
      var oHEX60gensym467_1291856574 = loadFromFile_2483031627(fmtRes_1291856571[0]);
      if (!isSome_1291851008(oHEX60gensym467_1291856574)) Temporary2 = false; else {        var theme_1291856597 = get_1291851028(oHEX60gensym467_1291856574);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291856565.theme = theme_1291856597;
    }
    else {
      var fmtRes_1291856602 = [mnewString(0)];
      fmtRes_1291856602[0].push.apply(fmtRes_1291856602[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291856602, 0, name_1291856566, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856602[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2315255914(self_1291856565.platform, false);
    }

  
}

function loadThemeJsWrapper_1291856560(self_1291856630, name_1291856631) {
    loadTheme_1291856564(self_1291856630, name_1291856631);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291856560(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function setCompletions_3221225544(self_3221225545, newCompletions_3221225546) {
    if (!(((newCompletions_3221225546).length == (self_3221225545.completions).length))) {
    markDirty_2264924181(self_3221225545);
    }
    else {
      Label1: {
        var i_3221225564 = 0;
        var colontmp__1291856970 = 0;
        colontmp__1291856970 = (newCompletions_3221225546).length - 1;
        var res_1291856971 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_1291856971 <= colontmp__1291856970)) break Label3;
              i_3221225564 = res_1291856971;
              if (changed_3221225542(self_3221225545.completions[chckIndx(i_3221225564, 0, (self_3221225545.completions).length - 1)], newCompletions_3221225546[chckIndx(i_3221225564, 0, (newCompletions_3221225546).length - 1)])) {
              markDirty_2264924181(self_3221225545);
              break Label1;
              }
              
              res_1291856971 = addInt(res_1291856971, 1);
            }
        };
      };
    }
    
    self_3221225545.completions = nimCopy(null, newCompletions_3221225546, NTI3221225512);
    if ((0 < (self_3221225545.completions).length)) {
    self_3221225545.selected = clamp_1660945119(self_3221225545.selected, 0, subInt((self_3221225545.completions).length, 1));
    }
    else {
      self_3221225545.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3221225604(self_3221225605) {
  var result_3221225607 = null;

  BeforeRet: {
    var text_3221225613 = nsuJoinSep(content_2818573982(self_3221225605.textEditor.document), []);
    var newCompletions_3221225618 = (await self_3221225605.getCompletionsAsync(self_3221225605, text_3221225613));
    setCompletions_3221225544(self_3221225605, newCompletions_3221225618);
    result_3221225607 = undefined;
    break BeforeRet;
  };

  return result_3221225607;

}
async function updateCompletionsAsyncIter_3221225631(self_3221225632) {
  var result_3221225634 = null;

  BeforeRet: {
    var text_3221225640 = nsuJoinSep(content_2818573982(self_3221225632.textEditor.document), []);
    setCompletions_3221225544(self_3221225632, []);
    (await self_3221225632.getCompletionsAsyncIter(self_3221225632, text_3221225640));
    result_3221225634 = undefined;
    break BeforeRet;
  };

  return result_3221225634;

}

function updateCompletions_3221225651(self_3221225652) {
    var text_3221225653 = nsuJoinSep(content_2818573982(self_3221225652.textEditor.document), []);
    if (!((self_3221225652.getCompletions == null))) {
    var newCompletions_3221225657 = self_3221225652.getCompletions(self_3221225652, text_3221225653);
    setCompletions_3221225544(self_3221225652, newCompletions_3221225657);
    }
    else {
    if (!((self_3221225652.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3221225604(self_3221225652);
    }
    else {
    if (!((self_3221225652.getCompletionsAsyncIter == null))) {
    var _ = updateCompletionsAsyncIter_3221225631(self_3221225652);
    }
    else {
      var fmtRes_3221225668 = [mnewString(0)];
      fmtRes_3221225668[0].push.apply(fmtRes_3221225668[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2332033380(fmtRes_3221225668, 0, self_3221225652.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3221225668[0], NTI33554449)]);
    }
    }}

  
}

function handleTextChanged_3221226180(self_3221226181) {
    updateCompletions_3221225651(self_3221226181);
    self_3221226181.selected = 0;

  
}

function toJson_3221225838(self_3221225839, opt_3221225840) {
  var result_3221225841 = null;

    result_3221225841 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3221225841, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3221225841, [105,100], newJInt_1627390040(self_3221225839.id));

  return result_3221225841;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_1291856981 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856981 < L_855639192)) break Label3;
            i_855639197 = i_1291856981;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_1291856981 = addInt(i_1291856981, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__1291856984 = 0;
        var colontmp__1291856985 = 0;
        colontmp__1291856984 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__1291856985 = addInt(a_855639190, (b_855639188).length);
        var res_1291856986 = colontmp__1291856984;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__1291856985 <= res_1291856986)) break Label6;
              iHEX60gensym109_855639210 = res_1291856986;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_1291856986 = subInt(res_1291856986, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__1291856989 = 0;
          var colontmp__1291856990 = 0;
          colontmp__1291856989 = addInt(a_855639190, (b_855639188).length);
          colontmp__1291856990 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_1291856991 = colontmp__1291856989;
          Label8: {
              Label9: while (true) {
              if (!(res_1291856991 <= colontmp__1291856990)) break Label9;
                iHEX60gensym109_855639216 = res_1291856991;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_1291856991 = addInt(res_1291856991, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__1291856994 = 0;
        colontmp__1291856994 = (b_855639188).length;
        var i_1291856995 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_1291856995 < colontmp__1291856994)) break Label12;
              iHEX60gensym109_855639221 = i_1291856995;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_1291856995 = addInt(i_1291856995, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_1291856998 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856998 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_1291856998;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_1291856998 = addInt(i_1291856998, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet242);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet243[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet244[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet245[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet246[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet247[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__1291857009 = 0;
      colontmp__1291857009 = start_855639721;
      var res_1291857010 = colontmp__1291857009;
      Label3: {
          Label4: while (true) {
          if (!(res_1291857010 <= last_855639724)) break Label4;
            i_855639729 = res_1291857010;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_1291857010 = addInt(res_1291857010, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_1291857017 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291857017 <= 3)) break Label3;
            __1694499043 = res_1291857017;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_1291857017 = addInt(res_1291857017, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_1291857014 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_1291857014 <= length_1694499110)) break Label5;
                      i_1694499115 = res_1291857014;
                      if ((ConstSet249[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_1291857014 = addInt(res_1291857014, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet250[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet251[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet248)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet252[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function isSome_2818590685(self_2818590687) {
  var result_2818590688 = false;

    result_2818590688 = !((self_2818590687.val == null));

  return result_2818590688;

}

function some_2818590421(val_2818590423) {
  var result_2818590424 = ({val: null});

    if (!(!((val_2818590423 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818590424.val = val_2818590423;

  return result_2818590424;

}

function none_3221225751() {
  var result_3221225757 = ({val: null});

  return result_3221225757;

}

function some_1291850917(val_1291850919) {
  var result_1291850920 = ({val: null});

    if (!(!((val_1291850919 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850920.val = val_1291850919;

  return result_1291850920;

}

function none_1291850930() {
  var result_1291850936 = ({val: null});

  return result_1291850936;

}

function getPopupForId_1291850887(self_1291850888, id_1291850889) {
  var result_1291850894 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850916 = null;
      var i_1291857026 = 0;
      var L_1291857027 = (self_1291850888.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857026 < L_1291857027)) break Label3;
            popup_1291850916 = self_1291850888.popups[chckIndx(i_1291857026, 0, (self_1291850888.popups).length - 1)];
            if ((popup_1291850916.id == id_1291850889)) {
            result_1291850894 = nimCopy(result_1291850894, some_1291850917(popup_1291850916), NTI1291848455);
            break BeforeRet;
            }
            
            i_1291857026 = addInt(i_1291857026, 1);
            if (!(((self_1291850888.popups).length == L_1291857027))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850894 = nimCopy(result_1291850894, none_1291850930(), NTI1291848455);
    break BeforeRet;
  };

  return result_1291850894;

}

function isSome_3221225765(self_3221225767) {
  var result_3221225768 = false;

    result_3221225768 = !((self_3221225767.val == null));

  return result_3221225768;

}

function isNone_3221225793(self_3221225795) {
  var result_3221225796 = false;

    result_3221225796 = (self_3221225795.val == null);

  return result_3221225796;

}

function get_3221225785(self_3221225787) {
  var result_3221225788 = null;

    if (isNone_3221225793(self_3221225787)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221225788 = self_3221225787["val"];

  return result_3221225788;

}

function some_3221225810(val_3221225812) {
  var result_3221225813 = ({val: null});

    if (!(!((val_3221225812 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3221225813.val = val_3221225812;

  return result_3221225813;

}

function getSelectorPopup_3221225741(wrapper_3221225742) {
      var Temporary1;

  var result_3221225747 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3221225747 = nimCopy(result_3221225747, none_3221225751(), NTI3221225686);
    break BeforeRet;
    }
    
      var oHEX60gensym16_3221225760 = getPopupForId_1291850887(gEditor, wrapper_3221225742.id);
      if (!isSome_3221225765(oHEX60gensym16_3221225760)) Temporary1 = false; else {        var editor_3221225802 = get_3221225785(oHEX60gensym16_3221225760);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3221225802.m_type, NTI3221225494)) {
    result_3221225747 = nimCopy(result_3221225747, some_3221225810(editor_3221225802), NTI3221225686);
    break BeforeRet;
    }
    
    }
    
    result_3221225747 = nimCopy(result_3221225747, none_3221225751(), NTI3221225686);
    break BeforeRet;
  };

  return result_3221225747;

}

function isNone_3221225870(self_3221225872) {
  var result_3221225873 = false;

    result_3221225873 = (self_3221225872.val == null);

  return result_3221225873;

}

function get_3221225890(self_3221225892) {
  var result_3221225893 = null;

    if (isNone_3221225870(self_3221225892)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221225893 = self_3221225892["val"];

  return result_3221225893;

}

function acceptScript_3221225851_3221225863(self_3221225864) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym21_3221225865 = getSelectorPopup_3221225741(self_3221225864);
      if (isNone_3221225870(rHEX60gensym21_3221225865)) {
      break BeforeRet;
      }
      
    };
    accept_3221225856(get_3221225890(rHEX60gensym21_3221225865));
  };

  
}

function initFromJson_2818583211(dst_2818583213, dst_2818583213_Idx, jsonNode_2818583214, jsonPath_2818583215, jsonPath_2818583215_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2818583214, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818583215[jsonPath_2818583215_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet253[jsonNode_2818583214.kind] != undefined))) {
    var msgHEX60gensym165_2818583232 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet254), nimCopy(null, jsonPath_2818583215[jsonPath_2818583215_Idx], NTI33554449), reprEnum(jsonNode_2818583214.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym165_2818583232, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2818583214;
    if (ConstSet255[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2818583213[dst_2818583213_Idx] = Temporary1.num;

  
}

function to_2818583200(node_2818583203) {
  var result_2818583205 = [0];

    var jsonPath_2818583206 = [[]];
    result_2818583205[0] = 0;
    initFromJson_2818583211(result_2818583205, 0, node_2818583203, jsonPath_2818583206, 0);

  return result_2818583205[0];

}

function fromJson_2818583187(a_2818583189, a_2818583189_Idx, b_2818583190, opt_2818583191) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818583190, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2818583190}));
    }
    
    a_2818583189[a_2818583189_Idx] = to_2818583200(b_2818583190);

  
}

function jsonTo_2818583181(b_2818583183, opt_2818583185) {
  var result_2818583186 = [0];

    fromJson_2818583187(result_2818583186, 0, b_2818583183, opt_2818583185);

  return result_2818583186[0];

}

function fromJsonHook_3221225842(t_3221225843, jsonNode_3221225844) {
    t_3221225843.id = jsonTo_2818583181(HEX5BHEX5D_1627393037(jsonNode_3221225844, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3221225922(a_3221225924, b_3221225925, opt_3221225926) {
    if (!(!(HEX3DHEX3D_1627392026(b_3221225925, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3221225925}));
    }
    
    fromJsonHook_3221225842(a_3221225924, b_3221225925);

  
}

function jsonTo_3221225916(b_3221225918, opt_3221225920) {
  var result_3221225921 = [({id: 0})];

    fromJson_3221225922(result_3221225921[0], b_3221225918, opt_3221225920);

  return result_3221225921[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet256[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3221225914(HEX3Atmp_3221225853) {
  var result_3221225915 = null;

    result_3221225915 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3221225851_3221225863(jsonTo_3221225916(HEX5BHEX5D_1627393116(HEX3Atmp_3221225853, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym26_3221225933 = [97,99,99,101,112,116];
    var fmtRes_3221225938 = [mnewString(0)];
    fmtRes_3221225938[0].push.apply(fmtRes_3221225938[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221225938, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym26_3221225933 || [],fmtRes_3221225938[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221225915;

}

function cancelScript_3221225950_3221225963(self_3221225964) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym31_3221225965 = getSelectorPopup_3221225741(self_3221225964);
      if (isNone_3221225870(rHEX60gensym31_3221225965)) {
      break BeforeRet;
      }
      
    };
    cancel_3221225955(get_3221225890(rHEX60gensym31_3221225965));
  };

  
}

function cancelApi_3221225991(HEX3Atmp_3221225952) {
  var result_3221225992 = null;

    result_3221225992 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3221225950_3221225963(jsonTo_3221225916(HEX5BHEX5D_1627393116(HEX3Atmp_3221225952, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym36_3221225998 = [99,97,110,99,101,108];
    var fmtRes_3221226003 = [mnewString(0)];
    fmtRes_3221226003[0].push.apply(fmtRes_3221226003[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226003, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym36_3221225998 || [],fmtRes_3221226003[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221225992;

}

function prevScript_3221226006_3221226031(self_3221226032) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym40_3221226033 = getSelectorPopup_3221225741(self_3221226032);
      if (isNone_3221225870(rHEX60gensym40_3221226033)) {
      break BeforeRet;
      }
      
    };
    prev_3221226011(get_3221225890(rHEX60gensym40_3221226033));
  };

  
}

function prevApi_3221226059(HEX3Atmp_3221226008) {
  var result_3221226060 = null;

    result_3221226060 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3221226006_3221226031(jsonTo_3221225916(HEX5BHEX5D_1627393116(HEX3Atmp_3221226008, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym45_3221226066 = [112,114,101,118];
    var fmtRes_3221226071 = [mnewString(0)];
    fmtRes_3221226071[0].push.apply(fmtRes_3221226071[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226071, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym45_3221226066 || [],fmtRes_3221226071[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221226060;

}

function nextScript_3221226074_3221226096(self_3221226097) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym50_3221226098 = getSelectorPopup_3221225741(self_3221226097);
      if (isNone_3221225870(rHEX60gensym50_3221226098)) {
      break BeforeRet;
      }
      
    };
    next_3221226079(get_3221225890(rHEX60gensym50_3221226098));
  };

  
}

function nextApi_3221226124(HEX3Atmp_3221226076) {
  var result_3221226125 = null;

    result_3221226125 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3221226074_3221226096(jsonTo_3221225916(HEX5BHEX5D_1627393116(HEX3Atmp_3221226076, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym55_3221226131 = [110,101,120,116];
    var fmtRes_3221226136 = [mnewString(0)];
    fmtRes_3221226136[0].push.apply(fmtRes_3221226136[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3221226136, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym55_3221226131 || [],fmtRes_3221226136[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3221226125;

}

function none_2818590617() {
  var result_2818590623 = ({val: null});

  return result_2818590623;

}

function dispatch_3221226141(command_3221226140, arg_3221226139) {
    var Temporary1;

  var result_3221226143 = ({val: null});

    switch (toJSStr(command_3221226140)) {
    case "accept":
      Temporary1 = some_2818590421(acceptApi_3221225914(arg_3221226139));
      break;
    case "cancel":
      Temporary1 = some_2818590421(cancelApi_3221225991(arg_3221226139));
      break;
    case "prev":
      Temporary1 = some_2818590421(prevApi_3221226059(arg_3221226139));
      break;
    case "next":
      Temporary1 = some_2818590421(nextApi_3221226124(arg_3221226139));
      break;
    default: 
      Temporary1 = none_2818590617();
      break;
    }
    result_3221226143 = nimCopy(result_3221226143, Temporary1, NTI2818584054);

  return result_3221226143;

}

function handleAction_3221226162(self_3221226163, action_3221226164, arg_3221226165) {
  var result_3221226166 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848825(self_3221226163.editor, self_3221226163, action_3221226164, arg_3221226165) == 3)) {
    result_3221226166 = 3;
    break BeforeRet;
    }
    
    var args_3221226171 = newJArray_1627390082();
    add_1627390190(args_3221226171, toJson_3221225838({id: self_3221226163.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3221226172 = null;
      var colontmp__1291856974 = null;
      colontmp__1291856974 = newStringStream_1660945417(arg_3221226165);
      var p_1291856976 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_1291856976[0], colontmp__1291856974, [], false);
      try {
      var _ = getTok_1694499270(p_1291856976[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_1291856976[0].tok == 1))) break Label4;
            a_3221226172 = parseJson_1627395211(p_1291856976[0], false, false, 0);
            add_1627390190(args_3221226171, a_3221226172);
          }
      };
      } finally {
      close_1694498967(p_1291856976[0]);
      }
    };
    if (isSome_2818590685(dispatch_3221226141(action_3221226164, args_3221226171))) {
    result_3221226166 = 3;
    break BeforeRet;
    }
    
    result_3221226166 = 1;
    break BeforeRet;
  };

  return result_3221226166;

}

function newSelectorPopup_3221226268(editor_3221226269) {
    
function HEX3Aanonymous_3221226291(doc_3221226292) {
        handleTextChanged_3221226180(popup_3221226271);

      
    }
      
function HEX3Aanonymous_3221226340(actionHEX60gensym67HEX60gensym68_3221226341, argHEX60gensym67HEX60gensym68_3221226342) {
        var result_3221226343 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3221226328.config.handleActions) {
          var action_3221226344 = nimCopy(null, actionHEX60gensym67HEX60gensym68_3221226341, NTI33554449);
          var arg_3221226345 = nimCopy(null, argHEX60gensym67HEX60gensym68_3221226342, NTI33554449);
          var responseHEX60gensym67HEX60gensym68_3221226346 = handleAction_3221226162(popup_3221226271, action_3221226344, arg_3221226345);
          if (handlerHEX60gensym67_3221226328.config.consumeAllActions) {
          result_3221226343 = 3;
          break BeforeRet;
          }
          
          result_3221226343 = responseHEX60gensym67HEX60gensym68_3221226346;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym67_3221226328.config.consumeAllActions) {
          result_3221226343 = 3;
          break BeforeRet;
          }
          else {
            result_3221226343 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3221226343;

      }
      
function HEX3Aanonymous_3221226348(inputHEX60gensym67HEX60gensym69_3221226349) {
        var result_3221226350 = 0;

        BeforeRet: {
          if (handlerHEX60gensym67_3221226328.config.handleInputs) {
          var input_3221226351 = nimCopy(null, inputHEX60gensym67HEX60gensym69_3221226349, NTI33554449);
          result_3221226350 = 1;
          break BeforeRet;
          }
          else {
            result_3221226350 = 1;
            break BeforeRet;
          }
          
        };

        return result_3221226350;

      }

  var result_3221226270 = null;

  BeforeRet: {
    var popup_3221226271 = {editor: editor_3221226269, m_type: NTI3221225494, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, getCompletionsAsyncIter: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3221226271.textEditor = newTextEditor_2818590815(newTextDocument_3170894353([], [], false), editor_3221226269);
    setMode_2818583356(popup_3221226271.textEditor, [105,110,115,101,114,116]);
    popup_3221226271.textEditor.renderHeader = false;
    popup_3221226271.textEditor.lineNumbers = nimCopy(popup_3221226271.textEditor.lineNumbers, some_3170894395(0), NTI2818572554);
    popup_3221226271.textEditor.document.singleLine = true;
    var _ = subscribe_2818590863(popup_3221226271.textEditor.document.textChanged, HEX3Aanonymous_3221226291);
    Label1: {
      var handlerHEX60gensym67_3221226328 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym67_3221226328.config = getEventHandlerConfig_1291849154(editor_3221226269, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym67_3221226328.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(editor_3221226269, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym67_3221226328.handleAction = HEX3Aanonymous_3221226340;
      handlerHEX60gensym67_3221226328.handleInput = HEX3Aanonymous_3221226348;
    };
    popup_3221226271.eventHandler = handlerHEX60gensym67_3221226328;
    result_3221226270 = popup_3221226271;
    break BeforeRet;
  };

  return result_3221226270;

}

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet259[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet260[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet262[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet263[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291857097 = it_1442840587.prev;
    var colontmp__1291857098 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291857097, Field1: colontmp__1291857098}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet264[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet265[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet261[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet266[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet267[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet268[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet269[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet257[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet258[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function newSeq_1291856715(len_1291856717) {
  var result_1291856718 = [];

    result_1291856718 = new Array(len_1291856717); for (var i = 0 ; i < len_1291856717 ; ++i) { result_1291856718[i] = null; }
  return result_1291856718;

}

function mergeAlt_1291856726(a_1291856728, b_1291856729, lo_1291856730, m_1291856731, hi_1291856732, cmp_1291856735, order_1291856736) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1291856735(a_1291856728[chckIndx(m_1291856731, 0, (a_1291856728).length - 1)], a_1291856728[chckIndx(addInt(m_1291856731, 1), 0, (a_1291856728).length - 1)]), order_1291856736) <= 0)) {
    break BeforeRet;
    }
    
    var j_1291856737 = lo_1291856730;
    if (!((j_1291856737 <= m_1291856731))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1291856743 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1291856737 <= m_1291856731)) break Label2;
          b_1291856729[chckIndx(bb_1291856743, 0, (b_1291856729).length - 1)] = a_1291856728[chckIndx(j_1291856737, 0, (a_1291856728).length - 1)];
          bb_1291856743 = addInt(bb_1291856743, 1);
          j_1291856737 = addInt(j_1291856737, 1);
        }
    };
    var i_1291856754 = 0;
    var k_1291856755 = lo_1291856730;
    Label3: {
        Label4: while (true) {
        if (!((k_1291856755 < j_1291856737) && (j_1291856737 <= hi_1291856732))) break Label4;
          if ((HEX2A_1023410184(cmp_1291856735(b_1291856729[chckIndx(i_1291856754, 0, (b_1291856729).length - 1)], a_1291856728[chckIndx(j_1291856737, 0, (a_1291856728).length - 1)]), order_1291856736) <= 0)) {
          a_1291856728[chckIndx(k_1291856755, 0, (a_1291856728).length - 1)] = b_1291856729[chckIndx(i_1291856754, 0, (b_1291856729).length - 1)];
          i_1291856754 = addInt(i_1291856754, 1);
          }
          else {
            a_1291856728[chckIndx(k_1291856755, 0, (a_1291856728).length - 1)] = a_1291856728[chckIndx(j_1291856737, 0, (a_1291856728).length - 1)];
            j_1291856737 = addInt(j_1291856737, 1);
          }
          
          k_1291856755 = addInt(k_1291856755, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1291856755 < j_1291856737)) break Label6;
          a_1291856728[chckIndx(k_1291856755, 0, (a_1291856728).length - 1)] = b_1291856729[chckIndx(i_1291856754, 0, (b_1291856729).length - 1)];
          k_1291856755 = addInt(k_1291856755, 1);
          i_1291856754 = addInt(i_1291856754, 1);
        }
    };
  };

  
}

function sort_1291856703(a_1291856705, cmp_1291856708, order_1291856709) {
    var n_1291856714 = (a_1291856705).length;
    var b_1291856723 = newSeq_1291856715(chckRange(divInt(n_1291856714, 2), 0, 2147483647));
    var s_1291856724 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1291856724 < n_1291856714)) break Label2;
          var m_1291856725 = subInt(subInt(n_1291856714, 1), s_1291856724);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1291856725)) break Label4;
                mergeAlt_1291856726(a_1291856705, b_1291856723, nimMax(addInt(subInt(m_1291856725, s_1291856724), 1), 0), m_1291856725, addInt(m_1291856725, s_1291856724), cmp_1291856708, order_1291856709);
                m_1291856725 = subInt(m_1291856725, mulInt(s_1291856724, 2));
              }
          };
          s_1291856724 = mulInt(s_1291856724, 2);
        }
    };

  
}

function chooseTheme_1291856652(self_1291856653) {
    
function HEX3Aanonymous_1291856656(popup_1291856657, text_1291856658) {
                          var Temporary9;
        
function HEX3Aanonymous_1291856672(a_1291856690, b_1291856691) {
          var result_1291856696 = 0;

            result_1291856696 = cmp_2952806150(a_1291856690.score, b_1291856691.score);

          return result_1291856696;

        }

      var result_1291856659 = [];

        Label1: {
          var file_1291856660 = [];
          var stack_1291857065 = [[[]]];
          var checkDir_1291857066 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291857065[0]).length)) break Label3;
                var d_1291857068 = pop_1560281227(stack_1291857065, 0);
                Label4: {
                  var k_1291857070 = 0;
                  var p_1291857071 = [];
                  var colontmp__1291857072 = [];
                  colontmp__1291857072 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291857068);
                  Label5: {
                    var k_1291857082 = 0;
                    var v_1291857083 = [];
                    var colontmp__1291857084 = [];
                    colontmp__1291857084 = staticWalkDir_1560281124(colontmp__1291857072, true);
                    var i_1291857085 = 0;
                    var L_1291857086 = (colontmp__1291857084).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291857085 < L_1291857086)) break Label7;
                          k_1291857082 = colontmp__1291857084[chckIndx(i_1291857085, 0, (colontmp__1291857084).length - 1)]["Field0"];
                          v_1291857083 = colontmp__1291857084[chckIndx(i_1291857085, 0, (colontmp__1291857084).length - 1)]["Field1"];
                          k_1291857070 = k_1291857082;
                          p_1291857071 = v_1291857083;
                          var rel_1291857088 = HEX2F_1426063446(d_1291857068, p_1291857071);
                          if (((ConstSet270[k_1291857070] != undefined) && (ConstSet271[k_1291857070] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291857088, NTI33554449);
                          stack_1291857065[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet272[k_1291857070] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291857088;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291857088);
                          }
                          
                          file_1291856660 = Temporary9;
                          if (nsuEndsWith(file_1291856660, [46,106,115,111,110])) {
                          var name_1291857089 = nimCopy(null, nossplitFile(file_1291856660).Field1, NTI33554449);
                          var score_1291857090 = fuzzyMatchSmart_1979711572(text_1291856658, name_1291857089, true);
                          var fmtRes_1291857091 = [mnewString(0)];
                          fmtRes_1291857091[0].push.apply(fmtRes_1291857091[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291857091, 0, file_1291856660, []);
                          result_1291856659.push({name: nimCopy(null, name_1291857089, NTI33554449), path: nimCopy(null, fmtRes_1291857091[0], NTI33554449), score: score_1291857090, m_type: NTI1291848510});;
                          }
                          
                          }
                          
                          i_1291857085 = addInt(i_1291857085, 1);
                          if (!(((colontmp__1291857084).length == L_1291857086))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291857066 = false;
              }
          };
        };
        sort_1291856703(result_1291856659, HEX3Aanonymous_1291856672, 0);

      return result_1291856659;

    }
    
function HEX3Aanonymous_1291856822(item_1291856823) {
          var Temporary1;

          var oHEX60gensym480_1291856826 = loadFromFile_2483031627(item_1291856823.path);
          if (!isSome_1291851008(oHEX60gensym480_1291856826)) Temporary1 = false; else {            var theme_1291856849 = get_1291851028(oHEX60gensym480_1291856826);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856653.theme = theme_1291856849;
        }
        

      
    }
    
function HEX3Aanonymous_1291856850(item_1291856851) {
          var Temporary1;

          var oHEX60gensym481_1291856854 = loadFromFile_2483031627(item_1291856851.path);
          if (!isSome_1291851008(oHEX60gensym481_1291856854)) Temporary1 = false; else {            var theme_1291856877 = get_1291851028(oHEX60gensym481_1291856854);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856653.theme = theme_1291856877;
        }
        

      
    }
    
function HEX3Aanonymous_1291856878() {
          var Temporary1;

          var oHEX60gensym482_1291856881 = loadFromFile_2483031627(originalTheme_1291856654);
          if (!isSome_1291851008(oHEX60gensym482_1291856881)) Temporary1 = false; else {            var theme_1291856904 = get_1291851028(oHEX60gensym482_1291856881);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856653.theme = theme_1291856904;
        }
        

      
    }

    try {
    var originalTheme_1291856654 = nimCopy(null, self_1291856653.theme.path, NTI33554449);
    var popup_1291856655 = newSelectorPopup_3221226268(self_1291856653);
    popup_1291856655.getCompletions = HEX3Aanonymous_1291856656;
    popup_1291856655.handleItemSelected = HEX3Aanonymous_1291856822;
    popup_1291856655.handleItemConfirmed = HEX3Aanonymous_1291856850;
    popup_1291856655.handleCanceled = HEX3Aanonymous_1291856878;
    updateCompletions_3221225651(popup_1291856655);
    pushPopup_1291849052(self_1291856653, popup_1291856655);
    } finally {
    requestRender_2315255914(self_1291856653.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291856648(self_1291856958) {
    chooseTheme_1291856652(self_1291856958);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291856648(this));};
async function iterateDirectoryRec_1291857211(self_1291857212, folder_1291857213, path_1291857214, callback_1291857217) {
  var result_1291857219 = null;

  BeforeRet: {
    var path_1291857225 = nimCopy(null, path_1291857214, NTI33554449);
    var resultItems_1291857226 = [];
    var folders_1291857227 = [];
    var items_1291857232 = (await getDirectoryListing_2667577382(folder_1291857213, path_1291857225));
    Label1: {
      var file_1291857236 = [];
      var i_1291857578 = 0;
      var L_1291857579 = (items_1291857232.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857578 < L_1291857579)) break Label3;
            file_1291857236 = items_1291857232.files[chckIndx(i_1291857578, 0, (items_1291857232.files).length - 1)];
            resultItems_1291857226.push(HEX2F_1426063446(path_1291857225, file_1291857236));;
            i_1291857578 = addInt(i_1291857578, 1);
            if (!(((items_1291857232.files).length == L_1291857579))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291857244 = [];
      var i_1291857582 = 0;
      var L_1291857583 = (items_1291857232.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291857582 < L_1291857583)) break Label6;
            dir_1291857244 = items_1291857232.folders[chckIndx(i_1291857582, 0, (items_1291857232.folders).length - 1)];
            folders_1291857227.push(HEX2F_1426063446(path_1291857225, dir_1291857244));;
            i_1291857582 = addInt(i_1291857582, 1);
            if (!(((items_1291857232.folders).length == L_1291857583))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    callback_1291857217(resultItems_1291857226);
    var futs_1291857250 = [];
    Label7: {
      var dir_1291857254 = [];
      var i_1291857586 = 0;
      var L_1291857587 = (folders_1291857227).length;
      Label8: {
          Label9: while (true) {
          if (!(i_1291857586 < L_1291857587)) break Label9;
            dir_1291857254 = folders_1291857227[chckIndx(i_1291857586, 0, (folders_1291857227).length - 1)];
            futs_1291857250.push(iterateDirectoryRec_1291857211(self_1291857212, folder_1291857213, dir_1291857254, callback_1291857217));;
            i_1291857586 = addInt(i_1291857586, 1);
            if (!(((folders_1291857227).length == L_1291857587))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label10: {
      var fut_1291857281 = null;
      var i_1291857591 = 0;
      var L_1291857592 = (futs_1291857250).length;
      Label11: {
          Label12: while (true) {
          if (!(i_1291857591 < L_1291857592)) break Label12;
            fut_1291857281 = futs_1291857250[chckIndx(i_1291857591, 0, (futs_1291857250).length - 1)];
            (await fut_1291857281);
            i_1291857591 = addInt(i_1291857591, 1);
            if (!(((futs_1291857250).length == L_1291857592))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291857219 = undefined;
    break BeforeRet;
  };

  return result_1291857219;

}

function some_1291857364(val_1291857366) {
  var result_1291857367 = ({val: null});

    if (!(!((val_1291857366 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291857367.val = val_1291857366;

  return result_1291857367;

}

function isSome_1291857465(self_1291857467) {
  var result_1291857468 = false;

    result_1291857468 = !((self_1291857467.val == null));

  return result_1291857468;

}

function newTextDocument_1291856323(filename_1291856325, content_1291856326, app_1291856327) {
  var result_1291856328 = null;

    result_1291856328 = ({m_type: NTI2818572427, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0, styledTextCache: ({data: [], counter: 0}), appFile: false});
    var self_1291856332 = result_1291856328;
    self_1291856332.filename = nimCopy(null, filename_1291856325, NTI33554449);
    self_1291856332.currentTree = null;
    self_1291856332.appFile = app_1291856327;
    var _ = initTreesitter_2818578426(self_1291856332);
    var language_1291856333 = getLanguageForFile_2902458372(filename_1291856325);
    if (isSome_2768240699(language_1291856333)) {
    self_1291856332.languageId = nimCopy(null, get_2818578463(language_1291856333), NTI33554449);
    }
    
    contentHEX3D_2818573886(self_1291856332, content_1291856326);

  return result_1291856328;

}
async function updateDocumentContent_1291856292(self_1291856293, document_1291856294, path_1291856295, folder_1291856296) {
  var result_1291856298 = null;

  BeforeRet: {
    var content_1291856308 = (await loadFile_2667577366(folder_1291856296, path_1291856295));
    if (isObj(document_1291856294.m_type, NTI2818572427)) {
    contentHEX3D_2818573845(document_1291856294, content_1291856308);
    }
    
    result_1291856298 = undefined;
    break BeforeRet;
  };

  return result_1291856298;

}

function openWorkspaceFile_1291856315(self_1291856316, path_1291856317, folder_1291856318) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291856317, [46,97,115,116])) {
    createView_1291848950(self_1291856316, newAstDocument_2952794221(path_1291856317, false));
    }
    else {
      var document_1291856356 = newTextDocument_1291856323(path_1291856317, [], false);
      var _ = updateDocumentContent_1291856292(self_1291856316, document_1291856356, path_1291856317, folder_1291856318);
      createView_1291848950(self_1291856316, document_1291856356);
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856361 = [mnewString(0)];
    fmtRes_1291856361[0].push.apply(fmtRes_1291856361[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856361, 0, path_1291856317, []);
    fmtRes_1291856361[0].push.apply(fmtRes_1291856361[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856361, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856361[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2315255914(self_1291856316.platform, false);
    }

  
}

function isNone_1291857493(self_1291857495) {
  var result_1291857496 = false;

    result_1291857496 = (self_1291857495.val == null);

  return result_1291857496;

}

function get_1291857485(self_1291857487) {
  var result_1291857488 = null;
  var result_1291857488_Idx = 0;

  BeforeRet: {
    if (isNone_1291857493(self_1291857487)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291857488 = self_1291857487; result_1291857488_Idx = "val";
    break BeforeRet;
  };

  return [result_1291857488, result_1291857488_Idx];

}

function chooseFile_1291857310(self_1291857311, view_1291857312) {
    async function HEX3Aanonymous_1291857315(popup_1291857316, text_1291857317) {
                text_1291857317 = nimCopy(null, text_1291857317, NTI33554449);
                
function HEX3Aanonymous_1291857350(files_1291857351) {
                    
function HEX3Aanonymous_1291857381(a_1291857399, b_1291857400) {
                      var result_1291857405 = 0;

                        result_1291857405 = cmp_2952806150(a_1291857399.score, b_1291857400.score);

                      return result_1291857405;

                    }

                    var folder_1291857352 = folder_1291857349;
                    Label1: {
                      var file_1291857356 = [];
                      var i_1291857570 = 0;
                      var L_1291857571 = (files_1291857351).length;
                      Label2: {
                          Label3: while (true) {
                          if (!(i_1291857570 < L_1291857571)) break Label3;
                            file_1291857356 = files_1291857351[chckIndx(i_1291857570, 0, (files_1291857351).length - 1)];
                            var name_1291857357 = nimCopy(null, nossplitFile(file_1291857356).Field1, NTI33554449);
                            var score_1291857358 = fuzzyMatchSmart_1979711572(text_1291857317, name_1291857357, true);
                            var fmtRes_1291857363 = [mnewString(0)];
                            formatValue_721420459(fmtRes_1291857363, 0, file_1291857356, []);
                            popup_1291857316.completions.push({path: nimCopy(null, fmtRes_1291857363[0], NTI33554449), score: score_1291857358, workspaceFolder: some_1291857364(folder_1291857352), m_type: NTI1291848512});;
                            i_1291857570 = addInt(i_1291857570, 1);
                            if (!(((files_1291857351).length == L_1291857571))) {
                            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                            }
                            
                          }
                      };
                    };
                    sort_1291856703(popup_1291857316.completions, HEX3Aanonymous_1291857381, 0);
                    markDirty_2264924181(popup_1291857316);

                  
                }

      var result_1291857319 = null;

      BeforeRet: {
        var resultItems_1291857325 = [];
        Label1: {
          var folder_1291857348 = null;
          var i_1291857574 = 0;
          var L_1291857575 = (self_1291857311.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291857574 < L_1291857575)) break Label3;
                folder_1291857348 = self_1291857311.workspace.folders[chckIndx(i_1291857574, 0, (self_1291857311.workspace.folders).length - 1)];
                var folder_1291857349 = folder_1291857348;
                (await iterateDirectoryRec_1291857211(self_1291857311, folder_1291857349, [], HEX3Aanonymous_1291857350));
                i_1291857574 = addInt(i_1291857574, 1);
                if (!(((self_1291857311.workspace.folders).length == L_1291857575))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        result_1291857319 = undefined;
        break BeforeRet;
      };

      return result_1291857319;

    }
    view_1291857312 = nimCopy(null, view_1291857312, NTI33554449);
    
function HEX3Aanonymous_1291857459(item_1291857460) {
          var Temporary1;

        switch (toJSStr(view_1291857312)) {
        case "current":
          loadFile_1291856440(self_1291857311, item_1291857460.path);
          break;
        case "new":
          if (isSome_1291857465(item_1291857460.workspaceFolder)) {
          openWorkspaceFile_1291856315(self_1291857311, item_1291857460.path, (Temporary1 = get_1291857485(item_1291857460.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          openFile_1291856158(self_1291857311, item_1291857460.path, false);
          }
          
          break;
        default: 
          var fmtRes_1291857515 = [mnewString(0)];
          fmtRes_1291857515[0].push.apply(fmtRes_1291857515[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291857515, 0, view_1291857312, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857515[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291857313 = newSelectorPopup_3221226268(self_1291857311);
    popup_1291857313.getCompletionsAsyncIter = HEX3Aanonymous_1291857315;
    popup_1291857313.handleItemConfirmed = HEX3Aanonymous_1291857459;
    updateCompletions_3221225651(popup_1291857313);
    pushPopup_1291849052(self_1291857311, popup_1291857313);
    } finally {
    requestRender_2315255914(self_1291857311.platform, false);
    }

  
}

function chooseFileJsWrapper_1291857306(self_1291857552, view_1291857553) {
    chooseFile_1291857310(self_1291857552, view_1291857553);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291857306(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291857600(self_1291857601, token_1291857602) {
    saveApplicationFile_2499805208(fs_2499805237, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291857602);

  
}

function setGithubAccessTokenJsWrapper_1291857596(self_1291857630, token_1291857631) {
    setGithubAccessToken_1291857600(self_1291857630, token_1291857631);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291857596(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291857652(self_1291857653) {
    try {
    if (!((self_1291857653.scriptContext == null))) {
++excHandler;
    try {
    reload_2650800143(self_1291857653.scriptContext);
    if (!(self_1291857653.initializeCalled)) {
    var _ = false;
    self_1291857653.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857666 = mnewString(0);
    fmtRes_1291857666.push.apply(fmtRes_1291857666, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857666, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255914(self_1291857653.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291857648(self_1291857693) {
    reloadConfig_1291857652(self_1291857693);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291857648(this));};

function logOptions_1291857709(self_1291857710) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291857710.options, 2)]);

  
}

function logOptionsJsWrapper_1291857705(self_1291857737) {
    logOptions_1291857709(self_1291857737);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291857705(this));};

function clear_2046821383(t_2046821386) {
    Label1: {
      var i_2046821438 = 0;
      var colontmp__1291857800 = 0;
      colontmp__1291857800 = (t_2046821386.data).length;
      var i_1291857801 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857801 < colontmp__1291857800)) break Label3;
            i_2046821438 = i_1291857801;
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field0 = 0;
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291857801 = addInt(i_1291857801, 1);
          }
      };
    };
    t_2046821386.counter = 0;

  
}

function clearCommands_2046821341(config_2046821342) {
    clear_2046821383(config_2046821342.commands);
    config_2046821342.revision = addInt(config_2046821342.revision, 1);

  
}

function clearCommands_1291857753(self_1291857754, context_1291857755) {
    clearCommands_2046821341(getEventHandlerConfig_1291849154(self_1291857754, context_1291857755));

  
}

function clearCommandsJsWrapper_1291857749(self_1291857783, context_1291857784) {
    clearCommands_1291857753(self_1291857783, context_1291857784);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291857749(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853576(t_1291853579) {
  var result_1291853580 = 0;

    result_1291853580 = t_1291853579.counter;

  return result_1291853580;

}

function getAllEditors_1291857809(self_1291857810) {
  var result_1291857811 = [];

    Label1: {
      var id_1291858032 = 0;
      var L_1291858096 = len_1291853576(self_1291857810.editors);
      Label2: {
        var h_1291858098 = 0;
        var colontmp__1291858099 = 0;
        colontmp__1291858099 = (self_1291857810.editors.data).length - 1;
        var res_1291858100 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291858100 <= colontmp__1291858099)) break Label4;
              h_1291858098 = res_1291858100;
              if (isFilled_1308622880(self_1291857810.editors.data[chckIndx(h_1291858098, 0, (self_1291857810.editors.data).length - 1)].Field0)) {
              id_1291858032 = self_1291857810.editors.data[chckIndx(h_1291858098, 0, (self_1291857810.editors.data).length - 1)]["Field1"];
              result_1291857811.push(id_1291858032);;
              if (!((len_1291853576(self_1291857810.editors) == L_1291858096))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291858100 = addInt(res_1291858100, 1);
            }
        };
      };
    };

  return result_1291857811;

}

function getAllEditorsJsWrapper_1291857805(self_1291858064) {
  var result_1291858065 = [];

    result_1291858065 = nimCopy(null, getAllEditors_1291857809(self_1291858064), NTI1291853660);

  return result_1291858065;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291857805(this));};

function getModeConfig_1291858102(self_1291858103, mode_1291858104) {
  var result_1291858105 = null;

  BeforeRet: {
    result_1291858105 = getEventHandlerConfig_1291849154(self_1291858103, ([101,100,105,116,111,114,46] || []).concat(mode_1291858104 || []));
    break BeforeRet;
  };

  return result_1291858105;

}

function setMode_1291858112(self_1291858113, mode_1291858114) {
        
function HEX3Aanonymous_1291858135(actionHEX60gensym571HEX60gensym572_1291858136, argHEX60gensym571HEX60gensym572_1291858137) {
            var Temporary1;

          var result_1291858138 = 0;

          BeforeRet: {
            if (handlerHEX60gensym571_1291858123.config.handleActions) {
            var action_1291858139 = nimCopy(null, actionHEX60gensym571HEX60gensym572_1291858136, NTI33554449);
            var arg_1291858140 = nimCopy(null, argHEX60gensym571HEX60gensym572_1291858137, NTI33554449);
            if (handleAction_1291848862(self_1291858113, action_1291858139, arg_1291858140)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym571HEX60gensym572_1291858141 = Temporary1;
            if (handlerHEX60gensym571_1291858123.config.consumeAllActions) {
            result_1291858138 = 3;
            break BeforeRet;
            }
            
            result_1291858138 = responseHEX60gensym571HEX60gensym572_1291858141;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym571_1291858123.config.consumeAllActions) {
            result_1291858138 = 3;
            break BeforeRet;
            }
            else {
              result_1291858138 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291858138;

        }
        
function HEX3Aanonymous_1291858143(inputHEX60gensym571HEX60gensym573_1291858144) {
          var result_1291858145 = 0;

          BeforeRet: {
            if (handlerHEX60gensym571_1291858123.config.handleInputs) {
            var input_1291858146 = nimCopy(null, inputHEX60gensym571HEX60gensym573_1291858144, NTI33554449);
            result_1291858145 = 1;
            break BeforeRet;
            }
            else {
              result_1291858145 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291858145;

        }

    try {
    if (((mode_1291858114).length == 0)) {
    self_1291858113.modeEventHandler = null;
    }
    else {
      var config_1291858115 = getModeConfig_1291858102(self_1291858113, mode_1291858114);
      Label2: {
        var handlerHEX60gensym571_1291858123 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym571_1291858123.config = config_1291858115;
        handlerHEX60gensym571_1291858123.dfaInternal = buildDFA_2046820415(config_1291858115);
        handlerHEX60gensym571_1291858123.handleAction = HEX3Aanonymous_1291858135;
        handlerHEX60gensym571_1291858123.handleInput = HEX3Aanonymous_1291858143;
      };
      self_1291858113.modeEventHandler = handlerHEX60gensym571_1291858123;
    }
    
    self_1291858113.currentMode = nimCopy(null, mode_1291858114, NTI33554449);
    } finally {
    requestRender_2315255914(self_1291858113.platform, false);
    }

  
}

function setModeJsWrapper22_1291858108(self_1291858174, mode_1291858175) {
    setMode_1291858112(self_1291858174, mode_1291858175);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291858108(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291858197(self_1291858198) {
  var result_1291858199 = [];

  BeforeRet: {
    result_1291858199 = nimCopy(null, self_1291858198.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291858199;

}

function modeJsWrapper22_1291858193(self_1291858227) {
  var result_1291858228 = [];

    result_1291858228 = nimCopy(null, mode_1291858197(self_1291858227), NTI33554449);

  return result_1291858228;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291858193(this));};

function getContextWithMode_1291858248(self_1291858249, context_1291858250) {
  var result_1291858251 = [];

  BeforeRet: {
    result_1291858251 = nimCopy(null, (context_1291858250 || []).concat([46] || [],self_1291858249.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291858251;

}

function getContextWithModeJsWrapper22_1291858244(self_1291858280, context_1291858281) {
  var result_1291858282 = [];

    result_1291858282 = nimCopy(null, getContextWithMode_1291858248(self_1291858280, context_1291858281), NTI33554449);

  return result_1291858282;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291858244(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291858533(action_1291858534, arg_1291858535) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848862(gEditor, action_1291858534, arg_1291858535);
  };

  
}

function scriptRunActionJsWrapper_1291858530(action_1291858544, arg_1291858545) {
    scriptRunAction_1291858533(action_1291858544, arg_1291858545);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291858530(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291858570(message_1291858571) {
    var fmtRes_1291858576 = [mnewString(0)];
    fmtRes_1291858576[0].push.apply(fmtRes_1291858576[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291858576, 0, message_1291858571, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291858576[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291858567(message_1291858581) {
    scriptLog_1291858570(message_1291858581);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291858567(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291858675 = 0;
      colontmp__1291858675 = (n_1795163066).length - 1;
      var res_1291858676 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291858676 <= colontmp__1291858675)) break Label4;
            i_1795163130 = res_1291858676;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291858676 = addInt(res_1291858676, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2046820734(config_2046820735, keys_2046820736, action_2046820737) {
    HEX5BHEX5DHEX3D_1795162732(config_2046820735.commands, keys_2046820736, action_2046820737);
    config_2046820735.revision = addInt(config_2046820735.revision, 1);

  
}

function addCommandScript_1291858602(self_1291858603, context_1291858604, keys_1291858605, action_1291858606, arg_1291858607) {
    var Temporary1;

    if (((arg_1291858607).length == 0)) {
    Temporary1 = action_1291858606;
    }
    else {
    Temporary1 = (action_1291858606 || []).concat([32] || [],arg_1291858607 || []);
    }
    
    var command_1291858608 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2046820734(getEventHandlerConfig_1291849154(self_1291858603, context_1291858604), keys_1291858605, command_1291858608);

  
}

function addCommandScriptJsWrapper_1291858598(self_1291858639, context_1291858640, keys_1291858641, action_1291858642, arg_1291858643) {
    addCommandScript_1291858602(self_1291858639, context_1291858640, keys_1291858641, action_1291858642, arg_1291858643);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291858598(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2046820831(t_2046820834, key_2046820835) {
    var hc_2046820836 = [0];
    var i_2046820843 = rawGet_1795162457(t_2046820834, key_2046820835, hc_2046820836, 0);
    var mskHEX60gensym36_2046820847 = (t_2046820834.data).length - 1;
    if ((0 <= i_2046820843)) {
    t_2046820834.counter = subInt(t_2046820834.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2046820854 = i_2046820843;
            var rHEX60gensym36_2046820855 = jHEX60gensym36_2046820854;
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0 = 0;
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2046820843 = (addInt(i_2046820843, 1) & mskHEX60gensym36_2046820847);
                  if (isEmpty_1308622877(t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2046820855 = (t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0 & mskHEX60gensym36_2046820847);
                  if (!(((((rHEX60gensym36_2046820855 <= i_2046820843) && (jHEX60gensym36_2046820854 < rHEX60gensym36_2046820855)) || ((jHEX60gensym36_2046820854 < rHEX60gensym36_2046820855) && (i_2046820843 < jHEX60gensym36_2046820854))) || ((i_2046820843 < jHEX60gensym36_2046820854) && (rHEX60gensym36_2046820855 <= i_2046820843))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2046820834.data[chckIndx(jHEX60gensym36_2046820854, 0, (t_2046820834.data).length - 1)] = nimCopy(t_2046820834.data[chckIndx(jHEX60gensym36_2046820854, 0, (t_2046820834.data).length - 1)], t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2046820788(config_2046820789, keys_2046820790) {
    del_2046820831(config_2046820789.commands, keys_2046820790);
    config_2046820789.revision = addInt(config_2046820789.revision, 1);

  
}

function removeCommand_1291858685(self_1291858686, context_1291858687, keys_1291858688) {
    removeCommand_2046820788(getEventHandlerConfig_1291849154(self_1291858686, context_1291858687), keys_1291858688);

  
}

function removeCommandJsWrapper_1291858681(self_1291858717, context_1291858718, keys_1291858719) {
    removeCommand_1291858685(self_1291858717, context_1291858718, keys_1291858719);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291858681(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291858746() {
  var result_1291858747 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858747 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291858747 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291858747 = -1;
    break BeforeRet;
  };

  return result_1291858747;

}

function getActivePopupJsWrapper_1291858743() {
  var result_1291858764 = 0;

    result_1291858764 = getActivePopup_1291858746();

  return result_1291858764;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291858743());};

function getActiveEditor_1291858783() {
  var result_1291858784 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858784 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291858784 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291858784 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291858784 = -1;
    break BeforeRet;
  };

  return result_1291858784;

}

function getActiveEditorJsWrapper_1291858780() {
  var result_1291858795 = 0;

    result_1291858795 = getActiveEditor_1291858783();

  return result_1291858795;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291858780());};

function getActiveEditor2_1291858814(self_1291858815) {
  var result_1291858816 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858816 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291858816 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291858816 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291858816 = null;
    break BeforeRet;
  };

  return result_1291858816;

}

function getActiveEditor2JsWrapper_1291858811(self_1291858850) {
  var result_1291858851 = null;

    result_1291858851 = getActiveEditor2_1291858814(self_1291858850);

  return result_1291858851;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291858811(this));};

function loadCurrentConfig_1291858858(self_1291858859) {
    createView_1291848950(self_1291858859, newTextDocument_3170894353([99,111,110,102,105,103,46,106,115], loadApplicationFile_2499805202(fs_2499805237, [99,111,110,102,105,103,46,106,115]), false));

  
}

function loadCurrentConfigJsWrapper_1291858854(self_1291858891) {
    loadCurrentConfig_1291858858(self_1291858891);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291858854(this));};

function sourceCurrentDocument_1291858907(self_1291858908) {
    var editor_1291858913 = getActiveEditor2_1291858814(self_1291858908);
    if (isObj(editor_1291858913.m_type, NTI2818572510)) {
    var document_1291858920 = editor_1291858913.document;
    var contentStrict_1291858921 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2818573985(document_1291858920) || []);
    rawEcho(contentStrict_1291858921);
      var fmtRes_1291858926 = [mnewString(0)];
      fmtRes_1291858926[0].push.apply(fmtRes_1291858926[0], [89,111,117,32,97,114,101,32,97,98,111,117,116,32,116,111,32,101,118,97,108,40,41,32,115,111,109,101,32,106,97,118,97,115,99,114,105,112,116,32,40]);;
      formatValue_721420459(fmtRes_1291858926, 0, document_1291858920.filename, []);
      fmtRes_1291858926[0].push.apply(fmtRes_1291858926[0], [41,46,32,76,111,111,107,32,105,110,32,116,104,101,32,99,111,110,115,111,108,101,32,116,111,32,115,101,101,32,119,104,97,116,39,115,32,105,110,32,116,104,101,114,101,46]);;
    if (confirm(toJSStr(fmtRes_1291858926[0]))) {
    eval(toJSStr(contentStrict_1291858921));
    }
    else {
      var fmtRes_1291858931 = mnewString(0);
      fmtRes_1291858931.push.apply(fmtRes_1291858931, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_1291858931, NTI33554449)]);
    }
    
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291858903(self_1291858958) {
    sourceCurrentDocument_1291858907(self_1291858958);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291858903(this));};

function getEditor_1291858973(index_1291858974) {
  var result_1291858975 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858975 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291858974) && (index_1291858974 < (gEditor.views).length))) {
    result_1291858975 = gEditor.views[chckIndx(index_1291858974, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291858975 = -1;
    break BeforeRet;
  };

  return result_1291858975;

}

function getEditorJsWrapper_1291858970(index_1291858987) {
  var result_1291858988 = 0;

    result_1291858988 = getEditor_1291858973(index_1291858987);

  return result_1291858988;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291858970(index_));};

function rawGet_1291845892(t_1291845895, key_1291845896, hc_1291845897, hc_1291845897_Idx) {
  var result_1291845898 = 0;

  BeforeRet: {
    hc_1291845897[hc_1291845897_Idx] = hash_1325400236(key_1291845896);
    if ((hc_1291845897[hc_1291845897_Idx] == 0)) {
    hc_1291845897[hc_1291845897_Idx] = 314159265;
    }
    
    if (((t_1291845895.data).length == 0)) {
    result_1291845898 = -1;
    break BeforeRet;
    }
    
    var h_1291845952 = (hc_1291845897[hc_1291845897_Idx] & (t_1291845895.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845895.data[chckIndx(h_1291845952, 0, (t_1291845895.data).length - 1)].Field0)) break Label2;
          if (((t_1291845895.data[chckIndx(h_1291845952, 0, (t_1291845895.data).length - 1)].Field0 == hc_1291845897[hc_1291845897_Idx]) && (t_1291845895.data[chckIndx(h_1291845952, 0, (t_1291845895.data).length - 1)].Field1 == key_1291845896))) {
          result_1291845898 = h_1291845952;
          break BeforeRet;
          }
          
          h_1291845952 = nextTry_1308622883(h_1291845952, (t_1291845895.data).length - 1);
        }
    };
    result_1291845898 = subInt(-1, h_1291845952);
  };

  return result_1291845898;

}

function hasKey_1291850709(t_1291850712, key_1291850713) {
  var result_1291850714 = false;

    var hc_1291850715 = [0];
    result_1291850714 = (0 <= rawGet_1291845892(t_1291850712, key_1291850713, hc_1291850715, 0));

  return result_1291850714;

}

function contains_1291850703(t_1291850706, key_1291850707) {
  var result_1291850708 = false;

  BeforeRet: {
    result_1291850708 = hasKey_1291850709(t_1291850706, key_1291850707);
    break BeforeRet;
  };

  return result_1291850708;

}

function some_1291850855(val_1291850857) {
  var result_1291850858 = ({val: null});

    if (!(!((val_1291850857 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850858.val = val_1291850857;

  return result_1291850858;

}

function HEX5BHEX5D_1291850775(t_1291850778, key_1291850779) {
  var result_1291850780 = null;
  var result_1291850780_Idx = 0;

    var hcHEX60gensym22_1291850781 = [0];
    var indexHEX60gensym22_1291850788 = rawGet_1291845892(t_1291850778, key_1291850779, hcHEX60gensym22_1291850781, 0);
    if ((0 <= indexHEX60gensym22_1291850788)) {
    result_1291850780 = t_1291850778.data[chckIndx(indexHEX60gensym22_1291850788, 0, (t_1291850778.data).length - 1)]; result_1291850780_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850842(key_1291850779);
    }
    

  return [result_1291850780, result_1291850780_Idx];

}

function none_1291850871() {
  var result_1291850877 = ({val: null});

  return result_1291850877;

}

function getEditorForId_1291850653(self_1291850654, id_1291850655) {
    var Temporary1;

  var result_1291850660 = ({val: null});

  BeforeRet: {
    if (contains_1291850703(self_1291850654.editors, id_1291850655)) {
    result_1291850660 = nimCopy(result_1291850660, some_1291850855((Temporary1 = HEX5BHEX5D_1291850775(self_1291850654.editors, id_1291850655), Temporary1)[0][Temporary1[1]]), NTI1291848323);
    break BeforeRet;
    }
    
    if ((self_1291850654.commandLineTextEditor.id == id_1291850655)) {
    result_1291850660 = nimCopy(result_1291850660, some_1291850855(self_1291850654.commandLineTextEditor), NTI1291848323);
    break BeforeRet;
    }
    
    result_1291850660 = nimCopy(result_1291850660, none_1291850871(), NTI1291848323);
    break BeforeRet;
  };

  return result_1291850660;

}

function isSome_2818583094(self_2818583096) {
  var result_2818583097 = false;

    result_2818583097 = !((self_2818583096.val == null));

  return result_2818583097;

}

function isNone_2818583122(self_2818583124) {
  var result_2818583125 = false;

    result_2818583125 = (self_2818583124.val == null);

  return result_2818583125;

}

function get_2818583114(self_2818583116) {
  var result_2818583117 = null;

    if (isNone_2818583122(self_2818583116)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583117 = self_2818583116["val"];

  return result_2818583117;

}

function scriptIsTextEditor_1291859012(editorId_1291859013) {
      var Temporary1;

  var result_1291859014 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859014 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym698_1291859020 = getEditorForId_1291850653(gEditor, editorId_1291859013);
      if (!isSome_2818583094(oHEX60gensym698_1291859020)) Temporary1 = false; else {        var editor_1291859043 = get_2818583114(oHEX60gensym698_1291859020);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859014 = isObj(editor_1291859043.m_type, NTI2818572510);
    break BeforeRet;
    }
    
    result_1291859014 = false;
    break BeforeRet;
  };

  return result_1291859014;

}

function scriptIsTextEditorJsWrapper_1291859009(editorId_1291859055) {
  var result_1291859056 = false;

    result_1291859056 = scriptIsTextEditor_1291859012(editorId_1291859055);

  return result_1291859056;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291859009(editorId_));};

function scriptIsAstEditor_1291859081(editorId_1291859082) {
      var Temporary1;

  var result_1291859083 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859083 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym707_1291859089 = getEditorForId_1291850653(gEditor, editorId_1291859082);
      if (!isSome_2818583094(oHEX60gensym707_1291859089)) Temporary1 = false; else {        var editor_1291859112 = get_2818583114(oHEX60gensym707_1291859089);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291859083 = isObj(editor_1291859112.m_type, NTI2952791527);
    break BeforeRet;
    }
    
    result_1291859083 = false;
    break BeforeRet;
  };

  return result_1291859083;

}

function scriptIsAstEditorJsWrapper_1291859078(editorId_1291859124) {
  var result_1291859125 = false;

    result_1291859125 = scriptIsAstEditor_1291859081(editorId_1291859124);

  return result_1291859125;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291859078(editorId_));};

function scriptRunActionFor_1291859149(editorId_1291859150, action_1291859151, arg_1291859152) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym717_1291859158 = getEditorForId_1291850653(gEditor, editorId_1291859150);
      if (!isSome_2818583094(oHEX60gensym717_1291859158)) Temporary2 = false; else {        var editor_1291859181 = get_2818583114(oHEX60gensym717_1291859158);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291859181.eventHandler.handleAction(action_1291859151, arg_1291859152);
    }
    else {
      var oHEX60gensym718_1291859184 = getPopupForId_1291850887(gEditor, editorId_1291859150);
      if (!isSome_3221225765(oHEX60gensym718_1291859184)) Temporary3 = false; else {        var popup_1291859207 = get_3221225785(oHEX60gensym718_1291859184);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291859207.eventHandler.handleAction(action_1291859151, arg_1291859152);
    }
    }
    } finally {
    requestRender_2315255914(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291859146(editorId_1291859218, action_1291859219, arg_1291859220) {
    scriptRunActionFor_1291859149(editorId_1291859218, action_1291859219, arg_1291859220);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291859146(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291859250(editorId_1291859251, text_1291859252) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym727_1291859258 = getEditorForId_1291850653(gEditor, editorId_1291859251);
      if (!isSome_2818583094(oHEX60gensym727_1291859258)) Temporary2 = false; else {        var editor_1291859281 = get_2818583114(oHEX60gensym727_1291859258);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291859281.eventHandler.handleInput(text_1291859252);
    }
    
    } finally {
    requestRender_2315255914(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291859247(editorId_1291859289, text_1291859290) {
    scriptInsertTextInto_1291859250(editorId_1291859289, text_1291859290);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291859247(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291859315(editorId_1291859316) {
      var Temporary2;

  var result_1291859317 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291859379 = {Field0: 0, Field1: 0};
    var colontmp__1291859380 = {Field0: 0, Field1: 0};
    result_1291859317 = nimCopy(result_1291859317, {Field0: nimCopy(null, colontmp__1291859379, NTI2231369737), Field1: nimCopy(null, colontmp__1291859380, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym736_1291859323 = getEditorForId_1291850653(gEditor, editorId_1291859316);
      if (!isSome_2818583094(oHEX60gensym736_1291859323)) Temporary2 = false; else {        var editor_1291859346 = get_2818583114(oHEX60gensym736_1291859323);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291859346.m_type, NTI2818572510)) {
    var editor_1291859353 = editor_1291859346;
    result_1291859317 = nimCopy(result_1291859317, selection_2818572792(editor_1291859353), NTI2231369739);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291859381 = {Field0: 0, Field1: 0};
    var colontmp__1291859382 = {Field0: 0, Field1: 0};
    result_1291859317 = nimCopy(result_1291859317, {Field0: nimCopy(null, colontmp__1291859381, NTI2231369737), Field1: nimCopy(null, colontmp__1291859382, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    } finally {
    requestRender_2315255914(gEditor.platform, false);
    }
  };

  return result_1291859317;

}

function scriptTextEditorSelectionJsWrapper_1291859312(editorId_1291859359) {
  var result_1291859360 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291859360 = nimCopy(result_1291859360, scriptTextEditorSelection_1291859315(editorId_1291859359), NTI2231369739);

  return result_1291859360;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291859312(editorId_));};

function scriptSetTextEditorSelection_1291859388(editorId_1291859389, selection_1291859390) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym745_1291859396 = getEditorForId_1291850653(gEditor, editorId_1291859389);
      if (!isSome_2818583094(oHEX60gensym745_1291859396)) Temporary2 = false; else {        var editor_1291859419 = get_2818583114(oHEX60gensym745_1291859396);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291859419.m_type, NTI2818572510)) {
    selectionHEX3D_2818572798(editor_1291859419, selection_1291859390);
    }
    
    }
    
    } finally {
    requestRender_2315255914(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291859385(editorId_1291859431, selection_1291859432) {
    scriptSetTextEditorSelection_1291859388(editorId_1291859431, selection_1291859432);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291859385(editorId_, selection_));};

function scriptTextEditorSelections_1291859457(editorId_1291859458) {
      var Temporary1;

  var result_1291859459 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859459 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291854990);
    break BeforeRet;
    }
    
      var oHEX60gensym754_1291859469 = getEditorForId_1291850653(gEditor, editorId_1291859458);
      if (!isSome_2818583094(oHEX60gensym754_1291859469)) Temporary1 = false; else {        var editor_1291859492 = get_2818583114(oHEX60gensym754_1291859469);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291859492.m_type, NTI2818572510)) {
    var editor_1291859499 = editor_1291859492;
    result_1291859459 = nimCopy(null, selections_2818572789(editor_1291859499), NTI2231369747);
    break BeforeRet;
    }
    
    }
    
    result_1291859459 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291854990);
    break BeforeRet;
  };

  return result_1291859459;

}

function scriptTextEditorSelectionsJsWrapper_1291859454(editorId_1291859509) {
  var result_1291859510 = [];

    result_1291859510 = nimCopy(null, scriptTextEditorSelections_1291859457(editorId_1291859509), NTI1291854977);

  return result_1291859510;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291859454(editorId_));};

function scriptSetTextEditorSelections_1291859534(editorId_1291859535, selections_1291859536) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym763_1291859542 = getEditorForId_1291850653(gEditor, editorId_1291859535);
      if (!isSome_2818583094(oHEX60gensym763_1291859542)) Temporary2 = false; else {        var editor_1291859565 = get_2818583114(oHEX60gensym763_1291859542);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291859565.m_type, NTI2818572510)) {
    selectionsHEX3D_2818573048(editor_1291859565, selections_1291859536);
    }
    
    }
    
    } finally {
    requestRender_2315255914(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291859531(editorId_1291859577, selections_1291859578) {
    scriptSetTextEditorSelections_1291859534(editorId_1291859577, selections_1291859578);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291859531(editorId_, selections_));};

function scriptGetTextEditorLine_1291859603(editorId_1291859604, line_1291859605) {
      var Temporary1;
    var Temporary2;

  var result_1291859606 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859606 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym773_1291859612 = getEditorForId_1291850653(gEditor, editorId_1291859604);
      if (!isSome_2818583094(oHEX60gensym773_1291859612)) Temporary1 = false; else {        var editor_1291859635 = get_2818583114(oHEX60gensym773_1291859612);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291859635.m_type, NTI2818572510)) {
    var editor_1291859642 = editor_1291859635;
    if (((0 <= line_1291859605) && (line_1291859605 < (content_2818573982(editor_1291859642.document)).length))) {
    result_1291859606 = nimCopy(null, (Temporary2 = content_2818573982(editor_1291859642.document), Temporary2)[chckIndx(line_1291859605, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291859606 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291859606;

}

function scriptGetTextEditorLineJsWrapper_1291859600(editorId_1291859652, line_1291859653) {
  var result_1291859654 = [];

    result_1291859654 = nimCopy(null, scriptGetTextEditorLine_1291859603(editorId_1291859652, line_1291859653), NTI33554449);

  return result_1291859654;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291859600(editorId_, line_));};

function scriptGetTextEditorLineCount_1291859683(editorId_1291859684) {
      var Temporary1;

  var result_1291859685 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859685 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym783_1291859691 = getEditorForId_1291850653(gEditor, editorId_1291859684);
      if (!isSome_2818583094(oHEX60gensym783_1291859691)) Temporary1 = false; else {        var editor_1291859714 = get_2818583114(oHEX60gensym783_1291859691);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291859714.m_type, NTI2818572510)) {
    var editor_1291859721 = editor_1291859714;
    result_1291859685 = (content_2818573982(editor_1291859721.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291859685 = 0;
    break BeforeRet;
  };

  return result_1291859685;

}

function scriptGetTextEditorLineCountJsWrapper_1291859680(editorId_1291859730) {
  var result_1291859731 = 0;

    result_1291859731 = scriptGetTextEditorLineCount_1291859683(editorId_1291859730);

  return result_1291859731;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291859680(editorId_));};

function scriptGetOptionInt_1291859766(path_1291859767, default_1291859768) {
  var result_1291859769 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859769 = default_1291859768;
      break BeforeRet;
      }
      
      var nodeHEX60gensym793_1291859774 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859767, [46], -1));
      if ((nodeHEX60gensym793_1291859774 == null)) {
      result_1291859769 = default_1291859768;
      break BeforeRet;
      }
      
    };
    result_1291859769 = getInt_1627390118(nodeHEX60gensym793_1291859774, default_1291859768);
  };

  return result_1291859769;

}

function scriptGetOptionIntJsWrapper_1291859763(path_1291859784, default_1291859785) {
  var result_1291859786 = 0;

    result_1291859786 = scriptGetOptionInt_1291859766(path_1291859784, default_1291859785);

  return result_1291859786;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291859763(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291859816(path_1291859817, default_1291859818) {
  var result_1291859819 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859819 = default_1291859818;
      break BeforeRet;
      }
      
      var nodeHEX60gensym803_1291859824 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859817, [46], -1));
      if ((nodeHEX60gensym803_1291859824 == null)) {
      result_1291859819 = default_1291859818;
      break BeforeRet;
      }
      
    };
    result_1291859819 = getFloat_1627390140(nodeHEX60gensym803_1291859824, default_1291859818);
  };

  return result_1291859819;

}

function scriptGetOptionFloatJsWrapper_1291859813(path_1291859834, default_1291859835) {
  var result_1291859836 = 0.0;

    result_1291859836 = scriptGetOptionFloat_1291859816(path_1291859834, default_1291859835);

  return result_1291859836;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291859813(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291859931(path_1291859932, default_1291859933) {
  var result_1291859934 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859934 = default_1291859933;
      break BeforeRet;
      }
      
      var nodeHEX60gensym819_1291859939 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859932, [46], -1));
      if ((nodeHEX60gensym819_1291859939 == null)) {
      result_1291859934 = default_1291859933;
      break BeforeRet;
      }
      
    };
    result_1291859934 = getBool_1627390147(nodeHEX60gensym819_1291859939, default_1291859933);
  };

  return result_1291859934;

}

function scriptGetOptionBoolJsWrapper_1291859928(path_1291859949, default_1291859950) {
  var result_1291859951 = false;

    result_1291859951 = scriptGetOptionBool_1291859931(path_1291859949, default_1291859950);

  return result_1291859951;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291859928(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291859981(path_1291859982, default_1291859983) {
  var result_1291859984 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859984 = nimCopy(null, default_1291859983, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym829_1291859989 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859982, [46], -1));
      if ((nodeHEX60gensym829_1291859989 == null)) {
      result_1291859984 = nimCopy(null, default_1291859983, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291859984 = nimCopy(null, getStr_1627390106(nodeHEX60gensym829_1291859989, default_1291859983), NTI33554449);
  };

  return result_1291859984;

}

function scriptGetOptionStringJsWrapper_1291859978(path_1291859999, default_1291860000) {
  var result_1291860001 = [];

    result_1291860001 = nimCopy(null, scriptGetOptionString_1291859981(path_1291859999, default_1291860000), NTI33554449);

  return result_1291860001;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291859978(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291860031(path_1291860032, value_1291860033) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym838_1291860040 = nsuSplitString(path_1291860032, [46], -1);
      var nodeHEX60gensym838_1291860041 = gEditor.options;
      Label3: {
        var keyHEX60gensym838_1291860060 = [];
        var colontmp__1291860104 = [];
        colontmp__1291860104 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym838_1291860040, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860105 = 0;
        var L_1291860106 = (colontmp__1291860104).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860105 < L_1291860106)) break Label5;
              keyHEX60gensym838_1291860060 = colontmp__1291860104[chckIndx(i_1291860105, 0, (colontmp__1291860104).length - 1)];
              if (!((nodeHEX60gensym838_1291860041.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym838_1291860041, keyHEX60gensym838_1291860060))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym838_1291860041, keyHEX60gensym838_1291860060, newJObject_1627390051());
              }
              
              nodeHEX60gensym838_1291860041 = HEX5BHEX5D_1627393037(nodeHEX60gensym838_1291860041, keyHEX60gensym838_1291860060);
              i_1291860105 = addInt(i_1291860105, 1);
              if (!(((colontmp__1291860104).length == L_1291860106))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym838_1291860041 == null) || !((nodeHEX60gensym838_1291860041.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym838_1291860041, HEX5BHEX5D_2600469248(pathItemsHEX60gensym838_1291860040, 1), newJInt_1627390040(value_1291860033));
      } finally {
      requestRender_2315255914(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291860028(path_1291860081, value_1291860082) {
    scriptSetOptionInt_1291860031(path_1291860081, value_1291860082);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291860028(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291860113(path_1291860114, value_1291860115) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym852_1291860122 = nsuSplitString(path_1291860114, [46], -1);
      var nodeHEX60gensym852_1291860123 = gEditor.options;
      Label3: {
        var keyHEX60gensym852_1291860142 = [];
        var colontmp__1291860186 = [];
        colontmp__1291860186 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym852_1291860122, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860187 = 0;
        var L_1291860188 = (colontmp__1291860186).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860187 < L_1291860188)) break Label5;
              keyHEX60gensym852_1291860142 = colontmp__1291860186[chckIndx(i_1291860187, 0, (colontmp__1291860186).length - 1)];
              if (!((nodeHEX60gensym852_1291860123.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym852_1291860123, keyHEX60gensym852_1291860142))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym852_1291860123, keyHEX60gensym852_1291860142, newJObject_1627390051());
              }
              
              nodeHEX60gensym852_1291860123 = HEX5BHEX5D_1627393037(nodeHEX60gensym852_1291860123, keyHEX60gensym852_1291860142);
              i_1291860187 = addInt(i_1291860187, 1);
              if (!(((colontmp__1291860186).length == L_1291860188))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym852_1291860123 == null) || !((nodeHEX60gensym852_1291860123.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym852_1291860123, HEX5BHEX5D_2600469248(pathItemsHEX60gensym852_1291860122, 1), newJFloat_1627390043(value_1291860115));
      } finally {
      requestRender_2315255914(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291860110(path_1291860163, value_1291860164) {
    scriptSetOptionFloat_1291860113(path_1291860163, value_1291860164);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291860110(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291860195(path_1291860196, value_1291860197) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym866_1291860204 = nsuSplitString(path_1291860196, [46], -1);
      var nodeHEX60gensym866_1291860205 = gEditor.options;
      Label3: {
        var keyHEX60gensym866_1291860224 = [];
        var colontmp__1291860268 = [];
        colontmp__1291860268 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym866_1291860204, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860269 = 0;
        var L_1291860270 = (colontmp__1291860268).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860269 < L_1291860270)) break Label5;
              keyHEX60gensym866_1291860224 = colontmp__1291860268[chckIndx(i_1291860269, 0, (colontmp__1291860268).length - 1)];
              if (!((nodeHEX60gensym866_1291860205.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym866_1291860205, keyHEX60gensym866_1291860224))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym866_1291860205, keyHEX60gensym866_1291860224, newJObject_1627390051());
              }
              
              nodeHEX60gensym866_1291860205 = HEX5BHEX5D_1627393037(nodeHEX60gensym866_1291860205, keyHEX60gensym866_1291860224);
              i_1291860269 = addInt(i_1291860269, 1);
              if (!(((colontmp__1291860268).length == L_1291860270))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym866_1291860205 == null) || !((nodeHEX60gensym866_1291860205.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym866_1291860205, HEX5BHEX5D_2600469248(pathItemsHEX60gensym866_1291860204, 1), newJBool_1627390046(value_1291860197));
      } finally {
      requestRender_2315255914(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291860192(path_1291860245, value_1291860246) {
    scriptSetOptionBool_1291860195(path_1291860245, value_1291860246);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291860192(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291860277(path_1291860278, value_1291860279) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym880_1291860286 = nsuSplitString(path_1291860278, [46], -1);
      var nodeHEX60gensym880_1291860287 = gEditor.options;
      Label3: {
        var keyHEX60gensym880_1291860306 = [];
        var colontmp__1291860350 = [];
        colontmp__1291860350 = HEX5BHEX5D_2818588583(pathItemsHEX60gensym880_1291860286, HEX2EHEX2E_1040187488(0, 2));
        var i_1291860351 = 0;
        var L_1291860352 = (colontmp__1291860350).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291860351 < L_1291860352)) break Label5;
              keyHEX60gensym880_1291860306 = colontmp__1291860350[chckIndx(i_1291860351, 0, (colontmp__1291860350).length - 1)];
              if (!((nodeHEX60gensym880_1291860287.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym880_1291860287, keyHEX60gensym880_1291860306))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym880_1291860287, keyHEX60gensym880_1291860306, newJObject_1627390051());
              }
              
              nodeHEX60gensym880_1291860287 = HEX5BHEX5D_1627393037(nodeHEX60gensym880_1291860287, keyHEX60gensym880_1291860306);
              i_1291860351 = addInt(i_1291860351, 1);
              if (!(((colontmp__1291860350).length == L_1291860352))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym880_1291860287 == null) || !((nodeHEX60gensym880_1291860287.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym880_1291860287, HEX5BHEX5D_2600469248(pathItemsHEX60gensym880_1291860286, 1), newJString_1627389994(value_1291860279));
      } finally {
      requestRender_2315255914(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291860274(path_1291860327, value_1291860328) {
    scriptSetOptionString_1291860277(path_1291860327, value_1291860328);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291860274(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847806(t_1291847809, key_1291847810, hc_1291847811, hc_1291847811_Idx) {
  var result_1291847812 = 0;

  BeforeRet: {
    hc_1291847811[hc_1291847811_Idx] = hash_1325400491(key_1291847810);
    if ((hc_1291847811[hc_1291847811_Idx] == 0)) {
    hc_1291847811[hc_1291847811_Idx] = 314159265;
    }
    
    if (((t_1291847809.data).length == 0)) {
    result_1291847812 = -1;
    break BeforeRet;
    }
    
    var h_1291847864 = (hc_1291847811[hc_1291847811_Idx] & (t_1291847809.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847809.data[chckIndx(h_1291847864, 0, (t_1291847809.data).length - 1)].Field0)) break Label2;
          if (((t_1291847809.data[chckIndx(h_1291847864, 0, (t_1291847809.data).length - 1)].Field0 == hc_1291847811[hc_1291847811_Idx]) && eqStrings(t_1291847809.data[chckIndx(h_1291847864, 0, (t_1291847809.data).length - 1)].Field1, key_1291847810))) {
          result_1291847812 = h_1291847864;
          break BeforeRet;
          }
          
          h_1291847864 = nextTry_1308622883(h_1291847864, (t_1291847809.data).length - 1);
        }
    };
    result_1291847812 = subInt(-1, h_1291847864);
  };

  return result_1291847812;

}

function mustRehash_3019917621(t_3019917623) {
  var result_3019917624 = false;

    if (!((t_3019917623.counter < (t_3019917623.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3019917624 = ((mulInt((t_3019917623.data).length, 2) < mulInt(t_3019917623.counter, 3)) || (subInt((t_3019917623.data).length, t_3019917623.counter) < 4));

  return result_3019917624;

}

function rawInsert_3019918314(t_3019918318, data_3019918319, data_3019918319_Idx, key_3019918320, val_3019918321, hc_3019918322, h_3019918323) {
    data_3019918319[data_3019918319_Idx][chckIndx(h_3019918323, 0, (data_3019918319[data_3019918319_Idx]).length - 1)].Field1 = nimCopy(null, key_3019918320, NTI33554449);
    data_3019918319[data_3019918319_Idx][chckIndx(h_3019918323, 0, (data_3019918319[data_3019918319_Idx]).length - 1)].Field2 = val_3019918321;
    data_3019918319[data_3019918319_Idx][chckIndx(h_3019918323, 0, (data_3019918319[data_3019918319_Idx]).length - 1)].Field0 = hc_3019918322;

  
}

function enlarge_3019917878(t_3019917881) {
    var n_3019917884 = [];
    n_3019917884 = new Array(chckRange(mulInt((t_3019917881.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3019917881.data).length, 2), 0, 2147483647) ; ++i) { n_3019917884[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3019917881.data; t_3019917881.data = n_3019917884; n_3019917884 = Temporary1;    Label2: {
      var i_3019917982 = 0;
      var colontmp__1291860439 = 0;
      colontmp__1291860439 = (n_3019917884).length - 1;
      var res_1291860440 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291860440 <= colontmp__1291860439)) break Label4;
            i_3019917982 = res_1291860440;
            var eh_3019918063 = n_3019917884[chckIndx(i_3019917982, 0, (n_3019917884).length - 1)].Field0;
            if (isFilled_1308622880(eh_3019918063)) {
            var j_3019918067 = (eh_3019918063 & (t_3019917881.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3019917881.data[chckIndx(j_3019918067, 0, (t_3019917881.data).length - 1)].Field0)) break Label6;
                  j_3019918067 = nextTry_1308622883(j_3019918067, (t_3019917881.data).length - 1);
                }
            };
            rawInsert_3019918314(t_3019917881, t_3019917881, "data", n_3019917884[chckIndx(i_3019917982, 0, (n_3019917884).length - 1)].Field1, n_3019917884[chckIndx(i_3019917982, 0, (n_3019917884).length - 1)].Field2, eh_3019918063, j_3019918067);
            }
            
            res_1291860440 = addInt(res_1291860440, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3019918564(t_3019918567, key_3019918568, hc_3019918569) {
  var result_3019918570 = 0;

  BeforeRet: {
    if (((t_3019918567.data).length == 0)) {
    result_3019918570 = -1;
    break BeforeRet;
    }
    
    var h_3019918655 = (hc_3019918569 & (t_3019918567.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3019918567.data[chckIndx(h_3019918655, 0, (t_3019918567.data).length - 1)].Field0)) break Label2;
          if (((t_3019918567.data[chckIndx(h_3019918655, 0, (t_3019918567.data).length - 1)].Field0 == hc_3019918569) && eqStrings(t_3019918567.data[chckIndx(h_3019918655, 0, (t_3019918567.data).length - 1)].Field1, key_3019918568))) {
          result_3019918570 = h_3019918655;
          break BeforeRet;
          }
          
          h_3019918655 = nextTry_1308622883(h_3019918655, (t_3019918567.data).length - 1);
        }
    };
    result_3019918570 = subInt(-1, h_3019918655);
  };

  return result_3019918570;

}

function HEX5BHEX5DHEX3D_3019917353(t_3019917356, key_3019917357, val_3019917358) {
    if (((t_3019917356.data).length == 0)) {
    var correctSizeHEX60gensym115_3019917441 = slotsNeeded_1308622891(32);
    t_3019917356.counter = 0;
    t_3019917356.data = new Array(chckRange(correctSizeHEX60gensym115_3019917441, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym115_3019917441, 0, 2147483647) ; ++i) { t_3019917356.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3019917446 = [0];
    var index_3019917453 = rawGet_1291847806(t_3019917356, key_3019917357, hc_3019917446, 0);
    if ((0 <= index_3019917453)) {
    t_3019917356.data[chckIndx(index_3019917453, 0, (t_3019917356.data).length - 1)].Field2 = val_3019917358;
    }
    else {
      if (((t_3019917356.data).length == 0)) {
      var correctSizeHEX60gensym118_3019917616 = slotsNeeded_1308622891(32);
      t_3019917356.counter = 0;
      t_3019917356.data = new Array(chckRange(correctSizeHEX60gensym118_3019917616, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym118_3019917616, 0, 2147483647) ; ++i) { t_3019917356.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3019917621(t_3019917356)) {
      enlarge_3019917878(t_3019917356);
      index_3019917453 = rawGetKnownHC_3019918564(t_3019917356, key_3019917357, hc_3019917446[0]);
      }
      
      index_3019917453 = subInt(-1, index_3019917453);
      rawInsert_3019918314(t_3019917356, t_3019917356, "data", key_3019917357, val_3019917358, hc_3019917446[0], index_3019917453);
      t_3019917356.counter = addInt(t_3019917356.counter, 1);
    }
    

  
}

function scriptSetCallback_1291860359(path_1291860360, id_1291860361) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3019917353(gEditor.callbacks, path_1291860360, id_1291860361);
  };

  
}

function scriptSetCallbackJsWrapper_1291860356(path_1291860416, id_1291860417) {
    scriptSetCallback_1291860359(path_1291860416, id_1291860417);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291860356(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3238002731(initialSize_3238002734) {
  var result_3238002740 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3238002742 = slotsNeeded_1308622891(chckRange(initialSize_3238002734, 0, 2147483647));
    result_3238002740.counter = 0;
    result_3238002740.data = new Array(chckRange(correctSizeHEX60gensym0_3238002742, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3238002742, 0, 2147483647) ; ++i) { result_3238002740.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3238002740;

}
var commandLineWidget_3238002727 = [null];
var mainStack_3238002728 = [null];
var viewPanel_3238002729 = [null];
var mainPanel_3238002730 = [null];
var widgetsPerEditor_3238002756 = [initTable_3238002731(32)];

function new_536870928() {
  var result_536870931 = null;

  BeforeRet: {
    var r_536870933 = null;
    r_536870933 = ({m_type: NTI3305111563, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, domUpdates: [], redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), onDropFile: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870931 = r_536870933;
    break BeforeRet;
  };

  return result_536870931;

}

function subscribe_1291851144(event_1291851146, callback_1291851148) {
  var result_1291851149 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851149 = nimCopy(result_1291851149, newId_2181038297(), NTI2181038083);
    event_1291851146.handlers.push({Field0: nimCopy(null, result_1291851149, NTI2181038083), Field1: callback_1291851148});;

  return result_1291851149;

}

function anyInProgress_2046821873(handlers_2046821874) {
  var result_2046821875 = false;

  BeforeRet: {
    Label1: {
      var h_2046821889 = null;
      var i_536871005 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871005 < (handlers_2046821874).length)) break Label3;
            h_2046821889 = handlers_2046821874[chckIndx(i_536871005, 0, (handlers_2046821874).length - 1)];
            if (!((h_2046821889.state.current == 0))) {
            result_2046821875 = true;
            break BeforeRet;
            }
            
            i_536871005 = addInt(i_536871005, 1);
          }
      };
    };
    result_2046821875 = false;
    break BeforeRet;
  };

  return result_2046821875;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2046820703(handler_2046820704) {
  var result_2046820705 = null;

  BeforeRet: {
    if ((handler_2046820704.revision < handler_2046820704.config.revision)) {
    handler_2046820704.dfaInternal = buildDFA_2046820415(handler_2046820704.config);
    handler_2046820704.revision = handler_2046820704.config.revision;
    }
    
    result_2046820705 = handler_2046820704.dfaInternal;
    break BeforeRet;
  };

  return result_2046820705;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet275)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet276))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet277)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2046821839(handler_2046821840, handler_2046821840_Idx, input_2046821841, modifiers_2046821842, handleUnknownAsInput_2046821843) {
  var result_2046821844 = 0;

  BeforeRet: {
    if (!((input_2046821841 == 0))) {
    var prevState_2046821845 = nimCopy(null, handler_2046821840[handler_2046821840_Idx].state, NTI2013265955);
    handler_2046821840[handler_2046821840_Idx].state = nimCopy(handler_2046821840[handler_2046821840_Idx].state, step_2013266020(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state, input_2046821841, modifiers_2046821842), NTI2013265955);
    if ((handler_2046821840[handler_2046821840_Idx].state.current == 0)) {
    if ((prevState_2046821845.current == 0)) {
    if ((((handleUnknownAsInput_2046821843 && (0 < input_2046821841)) && SetEq(SetPlus(modifiers_2046821842, ConstSet273), ConstSet274)) && !((handler_2046821840[handler_2046821840_Idx].handleInput == null)))) {
    result_2046821844 = handler_2046821840[handler_2046821840_Idx].handleInput(inputToString_2013267082(input_2046821841, ConstSet278));
    break BeforeRet;
    }
    
    result_2046821844 = 1;
    break BeforeRet;
    }
    else {
      result_2046821844 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current)) {
    var colontmp__536871007 = parseAction_2046821786(getAction_2013267075(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current));
    var action_2046821858 = nimCopy(null, colontmp__536871007["Field0"], NTI33554449);
    var arg_2046821859 = nimCopy(null, colontmp__536871007["Field1"], NTI33554449);
    handler_2046821840[handler_2046821840_Idx].state.current = getDefaultState_2013267071(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current);
    result_2046821844 = handler_2046821840[handler_2046821840_Idx].handleAction(action_2046821858, arg_2046821859);
    break BeforeRet;
    }
    else {
      result_2046821844 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2046821844 = 0;
      break BeforeRet;
    }
    
  };

  return result_2046821844;

}

function reset_2046821779(handler_2046821780, handler_2046821780_Idx) {
    handler_2046821780[handler_2046821780_Idx].state = nimCopy(handler_2046821780[handler_2046821780_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2046821899(handlers_2046821900, input_2046821901, modifiers_2046821902) {
            var Temporary4;

    var anyInProgress_2046821903 = anyInProgress_2046821873(handlers_2046821900);
    var allowHandlingUnknownAsInput_2046821904 = true;
    Label1: {
      var i_2046821913 = 0;
      var colontmp__536871000 = 0;
      colontmp__536871000 = (handlers_2046821900).length;
      var i_536871001 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871001 < colontmp__536871000)) break Label3;
            i_2046821913 = i_536871001;
            var handlerIndex_2046821917 = subInt(subInt((handlers_2046821900).length, i_2046821913), 1);
            var handler_2046821918 = [handlers_2046821900[chckIndx(handlerIndex_2046821917, 0, (handlers_2046821900).length - 1)]];
            if (((anyInProgress_2046821903 && !((handler_2046821918[0].state.current == 0))) || (!(anyInProgress_2046821903) && (handler_2046821918[0].state.current == 0)))) {
            Temporary4 = handleEvent_2046821839(handler_2046821918, 0, input_2046821901, modifiers_2046821902, allowHandlingUnknownAsInput_2046821904);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2046821919 = Temporary4;
            switch (response_2046821919) {
            case 3:
              allowHandlingUnknownAsInput_2046821904 = false;
              Label5: {
                var k_2046821961 = 0;
                var h_2046821962 = null;
                var i_536870997 = 0;
                var L_536870998 = (handlers_2046821900).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536870997 < L_536870998)) break Label7;
                      k_2046821961 = i_536870997;
                      h_2046821962 = handlers_2046821900[chckIndx(i_536870997, 0, (handlers_2046821900).length - 1)];
                      if (!((k_2046821961 == handlerIndex_2046821917))) {
                      var h_2046821963 = [h_2046821962];
                      reset_2046821779(h_2046821963, 0);
                      }
                      
                      i_536870997 = addInt(i_536870997, 1);
                      if (!(((handlers_2046821900).length == L_536870998))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2046821904 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2046821918[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871001 = addInt(i_536871001, 1);
          }
      };
    };

  
}

function add_2952797925(x_2952797927, x_2952797927_Idx, y_2952797928) {
    var Temporary1;

    var xl_2952797932 = (x_2952797927[x_2952797927_Idx]).length;
    if (x_2952797927[x_2952797927_Idx].length < (Temporary1 = chckRange(addInt(xl_2952797932, (y_2952797928).length), 0, 2147483647), Temporary1)) { for (var i = x_2952797927[x_2952797927_Idx].length ; i < Temporary1 ; ++i) x_2952797927[x_2952797927_Idx].push(null); }
               else { x_2952797927[x_2952797927_Idx].length = Temporary1; };
    Label2: {
      var i_2952797947 = 0;
      var colontmp__536871009 = 0;
      colontmp__536871009 = (y_2952797928).length - 1;
      var res_536871010 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871010 <= colontmp__536871009)) break Label4;
            i_2952797947 = res_536871010;
            x_2952797927[x_2952797927_Idx][chckIndx(addInt(xl_2952797932, i_2952797947), 0, (x_2952797927[x_2952797927_Idx]).length - 1)] = y_2952797928[chckIndx(i_2952797947, 0, (y_2952797928).length - 1)];
            res_536871010 = addInt(res_536871010, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291858301(self_1291858302) {
  var result_1291858303 = [[]];

    result_1291858303[0] = nimCopy(null, [self_1291858302.eventHandler], NTI2248146958);
    var modeOnTop_1291858317 = getOption_2818582801(self_1291858302, getContextWithMode_1291858248(self_1291858302, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291858302.modeEventHandler == null)) && !(modeOnTop_1291858317))) {
    result_1291858303[0].push(self_1291858302.modeEventHandler);;
    }
    
    if (self_1291858302.commandLineMode) {
    add_2952797925(result_1291858303, 0, getEventHandlers_2147483804(getCommandLineTextEditor_1291851055(self_1291858302)));
    result_1291858303[0].push(self_1291858302.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291858302.popups).length)) {
    add_2952797925(result_1291858303, 0, getEventHandlers_2264924219(self_1291858302.popups[chckIndx((self_1291858302.popups).length - 1, 0, (self_1291858302.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291858302.currentView) && (self_1291858302.currentView < (self_1291858302.views).length))) {
    add_2952797925(result_1291858303, 0, getEventHandlers_2147483804(self_1291858302.views[chckIndx(self_1291858302.currentView, 0, (self_1291858302.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291858302.modeEventHandler == null)) && modeOnTop_1291858317)) {
    result_1291858303[0].push(self_1291858302.modeEventHandler);;
    }
    

  return result_1291858303[0];

}

function handleKeyPress_1291851058(self_1291851059, input_1291851060, modifiers_1291851061) {
    handleEvent_2046821899(currentEventHandlers_1291858301(self_1291851059), input_1291851060, modifiers_1291851061);

  
}

function handleKeyRelease_1291851062(self_1291851063, input_1291851064, modifiers_1291851065) {
  
}

function handleRune_1291851066(self_1291851067, input_1291851068, modifiers_1291851069) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851068)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851068, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851069;
    }
    else {
    Temporary1 = ConstSet279;
    }
    
    var modifiers_1291858518 = nimCopy(null, Temporary1, NTI2013265950);
    handleEvent_2046821899(currentEventHandlers_1291858301(self_1291851067), input_1291851068, modifiers_1291858518);

  
}

function subscribe_1291851314(event_1291851316, callback_1291851318) {
  var result_1291851319 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851319 = nimCopy(result_1291851319, newId_2181038297(), NTI2181038083);
    event_1291851316.handlers.push({Field0: nimCopy(null, result_1291851319, NTI2181038083), Field1: callback_1291851318});;

  return result_1291851319;

}

function contains_2063597750(a_2063597751, b_2063597752) {
  var result_2063597753 = false;

  BeforeRet: {
    result_2063597753 = ((((a_2063597751.x <= b_2063597752.x) && (b_2063597752.x <= (a_2063597751.x + a_2063597751.w))) && (a_2063597751.y <= b_2063597752.y)) && (b_2063597752.y <= (a_2063597751.y + a_2063597751.h)));
    break BeforeRet;
  };

  return result_2063597753;

}

function handleMousePress_1291851070(self_1291851071, button_1291851072, modifiers_1291851073, mousePosWindow_1291851074) {
  BeforeRet: {
    Label1: {
      var i_1291858372 = 0;
      var colontmp__536871013 = 0;
      colontmp__536871013 = (self_1291851071.popups).length - 1;
      var res_536871014 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871014 <= colontmp__536871013)) break Label3;
            i_1291858372 = res_536871014;
            var popup_1291858376 = self_1291851071.popups[chckIndx(subInt((self_1291851071.popups).length - 1, i_1291858372), 0, (self_1291851071.popups).length - 1)];
            if (contains_2063597750(popup_1291858376.lastBounds, mousePosWindow_1291851074)) {
            handleMousePress_2264924230(popup_1291858376, button_1291851072, mousePosWindow_1291851074);
            break BeforeRet;
            }
            
            res_536871014 = addInt(res_536871014, 1);
          }
      };
    };
    var rects_1291858380 = layoutViews_1291848220(self_1291851071.layout, self_1291851071.layout_props, self_1291851071.lastBounds, (self_1291851071.views).length);
    Label4: {
      var i_1291858413 = 0;
      var view_1291858414 = null;
      var i_536871018 = 0;
      var L_536871019 = (self_1291851071.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871018 < L_536871019)) break Label6;
            i_1291858413 = i_536871018;
            view_1291858414 = self_1291851071.views[chckIndx(i_536871018, 0, (self_1291851071.views).length - 1)];
            if (((rects_1291858380).length <= i_1291858413)) {
            break BeforeRet;
            }
            
            if (contains_2063597750(rects_1291858380[chckIndx(i_1291858413, 0, (rects_1291858380).length - 1)], mousePosWindow_1291851074)) {
            self_1291851071.currentView = i_1291858413;
            handleMousePress_2147483821(view_1291858414.editor, button_1291851072, mousePosWindow_1291851074);
            break BeforeRet;
            }
            
            i_536871018 = addInt(i_536871018, 1);
            if (!(((self_1291851071.views).length == L_536871019))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851075(self_1291851076, button_1291851077, modifiers_1291851078, mousePosWindow_1291851079) {
  BeforeRet: {
    Label1: {
      var i_1291858431 = 0;
      var colontmp__536871022 = 0;
      colontmp__536871022 = (self_1291851076.popups).length - 1;
      var res_536871023 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871023 <= colontmp__536871022)) break Label3;
            i_1291858431 = res_536871023;
            var popup_1291858435 = self_1291851076.popups[chckIndx(subInt((self_1291851076.popups).length - 1, i_1291858431), 0, (self_1291851076.popups).length - 1)];
            if (contains_2063597750(popup_1291858435.lastBounds, mousePosWindow_1291851079)) {
            handleMouseRelease_2264924235(popup_1291858435, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            res_536871023 = addInt(res_536871023, 1);
          }
      };
    };
    var rects_1291858439 = layoutViews_1291848220(self_1291851076.layout, self_1291851076.layout_props, self_1291851076.lastBounds, (self_1291851076.views).length);
    Label4: {
      var i_1291858445 = 0;
      var view_1291858446 = null;
      var i_536871026 = 0;
      var L_536871027 = (self_1291851076.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871026 < L_536871027)) break Label6;
            i_1291858445 = i_536871026;
            view_1291858446 = self_1291851076.views[chckIndx(i_536871026, 0, (self_1291851076.views).length - 1)];
            if (((rects_1291858439).length <= i_1291858445)) {
            break BeforeRet;
            }
            
            if (((self_1291851076.currentView == i_1291858445) && contains_2063597750(rects_1291858439[chckIndx(i_1291858445, 0, (rects_1291858439).length - 1)], mousePosWindow_1291851079))) {
            handleMouseRelease_2147483826(view_1291858446.editor, button_1291851077, mousePosWindow_1291851079);
            break BeforeRet;
            }
            
            i_536871026 = addInt(i_536871026, 1);
            if (!(((self_1291851076.views).length == L_536871027))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851435(event_1291851437, callback_1291851439) {
  var result_1291851440 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851440 = nimCopy(result_1291851440, newId_2181038297(), NTI2181038083);
    event_1291851437.handlers.push({Field0: nimCopy(null, result_1291851440, NTI2181038083), Field1: callback_1291851439});;

  return result_1291851440;

}

function handleMouseMove_1291851080(self_1291851081, mousePosWindow_1291851082, mousePosDelta_1291851083, modifiers_1291851084, buttons_1291851085) {
  BeforeRet: {
    Label1: {
      var i_1291858463 = 0;
      var colontmp__536871030 = 0;
      colontmp__536871030 = (self_1291851081.popups).length - 1;
      var res_536871031 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871031 <= colontmp__536871030)) break Label3;
            i_1291858463 = res_536871031;
            var popup_1291858467 = self_1291851081.popups[chckIndx(subInt((self_1291851081.popups).length - 1, i_1291858463), 0, (self_1291851081.popups).length - 1)];
            if (contains_2063597750(popup_1291858467.lastBounds, mousePosWindow_1291851082)) {
            handleMouseMove_2264924242(popup_1291858467, mousePosWindow_1291851082, mousePosDelta_1291851083, modifiers_1291851084, buttons_1291851085);
            break BeforeRet;
            }
            
            res_536871031 = addInt(res_536871031, 1);
          }
      };
    };
    var rects_1291858471 = layoutViews_1291848220(self_1291851081.layout, self_1291851081.layout_props, self_1291851081.lastBounds, (self_1291851081.views).length);
    Label4: {
      var i_1291858477 = 0;
      var view_1291858478 = null;
      var i_536871034 = 0;
      var L_536871035 = (self_1291851081.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871034 < L_536871035)) break Label6;
            i_1291858477 = i_536871034;
            view_1291858478 = self_1291851081.views[chckIndx(i_536871034, 0, (self_1291851081.views).length - 1)];
            if (((rects_1291858471).length <= i_1291858477)) {
            break BeforeRet;
            }
            
            if (((self_1291851081.currentView == i_1291858477) && contains_2063597750(rects_1291858471[chckIndx(i_1291858477, 0, (rects_1291858471).length - 1)], mousePosWindow_1291851082))) {
            handleMouseMove_2147483833(view_1291858478.editor, mousePosWindow_1291851082, mousePosDelta_1291851083, modifiers_1291851084, buttons_1291851085);
            break BeforeRet;
            }
            
            i_536871034 = addInt(i_536871034, 1);
            if (!(((self_1291851081.views).length == L_536871035))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851507(event_1291851509, callback_1291851511) {
  var result_1291851512 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851512 = nimCopy(result_1291851512, newId_2181038297(), NTI2181038083);
    event_1291851509.handlers.push({Field0: nimCopy(null, result_1291851512, NTI2181038083), Field1: callback_1291851511});;

  return result_1291851512;

}

function handleScroll_1291851086(self_1291851087, scroll_1291851088, mousePosWindow_1291851089, modifiers_1291851090) {
  BeforeRet: {
    Label1: {
      var i_1291858494 = 0;
      var colontmp__536871038 = 0;
      colontmp__536871038 = (self_1291851087.popups).length - 1;
      var res_536871039 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871039 <= colontmp__536871038)) break Label3;
            i_1291858494 = res_536871039;
            var popup_1291858498 = self_1291851087.popups[chckIndx(subInt((self_1291851087.popups).length - 1, i_1291858494), 0, (self_1291851087.popups).length - 1)];
            if (contains_2063597750(popup_1291858498.lastBounds, mousePosWindow_1291851089)) {
            handleScroll_2264924225(popup_1291858498, scroll_1291851088, mousePosWindow_1291851089);
            break BeforeRet;
            }
            
            res_536871039 = addInt(res_536871039, 1);
          }
      };
    };
    Label4: {
      var i_1291858504 = 0;
      var view_1291858505 = null;
      var i_536871042 = 0;
      var L_536871043 = (self_1291851087.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871042 < L_536871043)) break Label6;
            i_1291858504 = i_536871042;
            view_1291858505 = self_1291851087.views[chckIndx(i_536871042, 0, (self_1291851087.views).length - 1)];
            if (contains_2063597750(view_1291858505.editor.lastContentBounds, mousePosWindow_1291851089)) {
            handleScroll_2147483816(view_1291858505.editor, scroll_1291851088, mousePosWindow_1291851089);
            break BeforeRet;
            }
            
            i_536871042 = addInt(i_536871042, 1);
            if (!(((self_1291851087.views).length == L_536871043))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851579(event_1291851581, callback_1291851583) {
  var result_1291851584 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851584 = nimCopy(result_1291851584, newId_2181038297(), NTI2181038083);
    event_1291851581.handlers.push({Field0: nimCopy(null, result_1291851584, NTI2181038083), Field1: callback_1291851583});;

  return result_1291851584;

}

function handleDropFile_1291851091(self_1291851092, path_1291851093, content_1291851094) {
    createView_1291848950(self_1291851092, newTextDocument_3170894353(path_1291851093, content_1291851094, false));

  
}

function subscribe_1291851651(event_1291851653, callback_1291851655) {
  var result_1291851656 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851656 = nimCopy(result_1291851656, newId_2181038297(), NTI2181038083);
    event_1291851653.handlers.push({Field0: nimCopy(null, result_1291851656, NTI2181038083), Field1: callback_1291851655});;

  return result_1291851656;

}

function initTable_1291851666(initialSize_1291851669) {
  var result_1291851670 = ({data: [], counter: 0});

    var correctSizeHEX60gensym61_1291851672 = slotsNeeded_1308622891(chckRange(initialSize_1291851669, 0, 2147483647));
    result_1291851670.counter = 0;
    result_1291851670.data = new Array(chckRange(correctSizeHEX60gensym61_1291851672, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym61_1291851672, 0, 2147483647) ; ++i) { result_1291851670.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851670;

}

function HEX5BHEX5DHEX3D_1291851735(t_1291851738, key_1291851739, val_1291851740) {
    if (((t_1291851738.data).length == 0)) {
    var correctSizeHEX60gensym64_1291851789 = slotsNeeded_1308622891(32);
    t_1291851738.counter = 0;
    t_1291851738.data = new Array(chckRange(correctSizeHEX60gensym64_1291851789, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym64_1291851789, 0, 2147483647) ; ++i) { t_1291851738.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851794 = [0];
    var index_1291851801 = rawGet_1291848304(t_1291851738, key_1291851739, hc_1291851794, 0);
    if ((0 <= index_1291851801)) {
    t_1291851738.data[chckIndx(index_1291851801, 0, (t_1291851738.data).length - 1)].Field2 = val_1291851740;
    }
    else {
      if (((t_1291851738.data).length == 0)) {
      var correctSizeHEX60gensym67_1291851903 = slotsNeeded_1308622891(32);
      t_1291851738.counter = 0;
      t_1291851738.data = new Array(chckRange(correctSizeHEX60gensym67_1291851903, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym67_1291851903, 0, 2147483647) ; ++i) { t_1291851738.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851908(t_1291851738)) {
      enlarge_1291852063(t_1291851738);
      index_1291851801 = rawGetKnownHC_1291852535(t_1291851738, key_1291851739, hc_1291851794[0]);
      }
      
      index_1291851801 = subInt(-1, index_1291851801);
      rawInsert_1291852357(t_1291851738, t_1291851738, "data", key_1291851739, val_1291851740, hc_1291851794[0], index_1291851801);
      t_1291851738.counter = addInt(t_1291851738.counter, 1);
    }
    

  
}

function toTable_1291851661(pairs_1291851664) {
  var result_1291851665 = [({data: [], counter: 0})];

    result_1291851665[0] = nimCopy(result_1291851665[0], initTable_1291851666((pairs_1291851664).length), NTI1291845654);
    Label1: {
      var key_1291851693 = [];
      var val_1291851694 = 0.0;
      var i_536871047 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871047 < (pairs_1291851664).length)) break Label3;
            key_1291851693 = pairs_1291851664[chckIndx(i_536871047, 0, (pairs_1291851664).length - 1)]["Field0"];
            val_1291851694 = pairs_1291851664[chckIndx(i_536871047, 0, (pairs_1291851664).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851735(result_1291851665[0], key_1291851693, val_1291851694);
            i_536871047 = addInt(i_536871047, 1);
          }
      };
    };

  return result_1291851665[0];

}

function rawGet_2483028997(t_2483029000, key_2483029001, hc_2483029002, hc_2483029002_Idx) {
  var result_2483029003 = 0;

  BeforeRet: {
    hc_2483029002[hc_2483029002_Idx] = hash_1325400491(key_2483029001);
    if ((hc_2483029002[hc_2483029002_Idx] == 0)) {
    hc_2483029002[hc_2483029002_Idx] = 314159265;
    }
    
    if (((t_2483029000.data).length == 0)) {
    result_2483029003 = -1;
    break BeforeRet;
    }
    
    var h_2483029054 = (hc_2483029002[hc_2483029002_Idx] & (t_2483029000.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field0)) break Label2;
          if (((t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field0 == hc_2483029002[hc_2483029002_Idx]) && eqStrings(t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field1, key_2483029001))) {
          result_2483029003 = h_2483029054;
          break BeforeRet;
          }
          
          h_2483029054 = nextTry_1308622883(h_2483029054, (t_2483029000.data).length - 1);
        }
    };
    result_2483029003 = subInt(-1, h_2483029054);
  };

  return result_2483029003;

}

function mustRehash_2483029342(t_2483029344) {
  var result_2483029345 = false;

    if (!((t_2483029344.counter < (t_2483029344.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2483029345 = ((mulInt((t_2483029344.data).length, 2) < mulInt(t_2483029344.counter, 3)) || (subInt((t_2483029344.data).length, t_2483029344.counter) < 4));

  return result_2483029345;

}

function rawInsert_2483029791(t_2483029795, data_2483029796, data_2483029796_Idx, key_2483029797, val_2483029798, hc_2483029799, h_2483029800) {
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field1 = nimCopy(null, key_2483029797, NTI33554449);
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field2 = nimCopy(data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field2, val_2483029798, NTI2365587459);
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field0 = hc_2483029799;

  
}

function enlarge_2483029497(t_2483029500) {
    var n_2483029503 = [];
    n_2483029503 = new Array(chckRange(mulInt((t_2483029500.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2483029500.data).length, 2), 0, 2147483647) ; ++i) { n_2483029503[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2483029500.data; t_2483029500.data = n_2483029503; n_2483029503 = Temporary1;    Label2: {
      var i_2483029567 = 0;
      var colontmp__536871052 = 0;
      colontmp__536871052 = (n_2483029503).length - 1;
      var res_536871053 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871053 <= colontmp__536871052)) break Label4;
            i_2483029567 = res_536871053;
            var eh_2483029621 = n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field0;
            if (isFilled_1308622880(eh_2483029621)) {
            var j_2483029625 = (eh_2483029621 & (t_2483029500.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2483029500.data[chckIndx(j_2483029625, 0, (t_2483029500.data).length - 1)].Field0)) break Label6;
                  j_2483029625 = nextTry_1308622883(j_2483029625, (t_2483029500.data).length - 1);
                }
            };
            rawInsert_2483029791(t_2483029500, t_2483029500, "data", n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field1, n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field2, eh_2483029621, j_2483029625);
            }
            
            res_536871053 = addInt(res_536871053, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2483029960(t_2483029963, key_2483029964, hc_2483029965) {
  var result_2483029966 = 0;

  BeforeRet: {
    if (((t_2483029963.data).length == 0)) {
    result_2483029966 = -1;
    break BeforeRet;
    }
    
    var h_2483030017 = (hc_2483029965 & (t_2483029963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field0)) break Label2;
          if (((t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field0 == hc_2483029965) && eqStrings(t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field1, key_2483029964))) {
          result_2483029966 = h_2483030017;
          break BeforeRet;
          }
          
          h_2483030017 = nextTry_1308622883(h_2483030017, (t_2483029963.data).length - 1);
        }
    };
    result_2483029966 = subInt(-1, h_2483030017);
  };

  return result_2483029966;

}

function HEX5BHEX5DHEX3D_2483028936(t_2483028939, key_2483028940, val_2483028941) {
    if (((t_2483028939.data).length == 0)) {
    var correctSizeHEX60gensym23_2483028991 = slotsNeeded_1308622891(32);
    t_2483028939.counter = 0;
    t_2483028939.data = new Array(chckRange(correctSizeHEX60gensym23_2483028991, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2483028991, 0, 2147483647) ; ++i) { t_2483028939.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2483028996 = [0];
    var index_2483029235 = rawGet_2483028997(t_2483028939, key_2483028940, hc_2483028996, 0);
    if ((0 <= index_2483029235)) {
    t_2483028939.data[chckIndx(index_2483029235, 0, (t_2483028939.data).length - 1)].Field2 = nimCopy(t_2483028939.data[chckIndx(index_2483029235, 0, (t_2483028939.data).length - 1)].Field2, val_2483028941, NTI2365587459);
    }
    else {
      if (((t_2483028939.data).length == 0)) {
      var correctSizeHEX60gensym28_2483029337 = slotsNeeded_1308622891(32);
      t_2483028939.counter = 0;
      t_2483028939.data = new Array(chckRange(correctSizeHEX60gensym28_2483029337, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2483029337, 0, 2147483647) ; ++i) { t_2483028939.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2483029342(t_2483028939)) {
      enlarge_2483029497(t_2483028939);
      index_2483029235 = rawGetKnownHC_2483029960(t_2483028939, key_2483028940, hc_2483028996[0]);
      }
      
      index_2483029235 = subInt(-1, index_2483029235);
      rawInsert_2483029791(t_2483028939, t_2483028939, "data", key_2483028940, val_2483028941, hc_2483028996[0], index_2483029235);
      t_2483028939.counter = addInt(t_2483028939.counter, 1);
    }
    

  
}

function c2n_2348810428(hex_2348810429, i_2348810430) {
  var result_2348810431 = 0;

  BeforeRet: {
    var c_2348810435 = hex_2348810429[chckIndx(i_2348810430, 0, (hex_2348810429).length - 1)];
    if (    c_2348810435 >= 48 && c_2348810435 <= 57    ){      result_2348810431 = subInt(c_2348810435, 48);
      break BeforeRet;
      }
    else if (    c_2348810435 >= 97 && c_2348810435 <= 102    ){      result_2348810431 = subInt(addInt(10, c_2348810435), 97);
      break BeforeRet;
      }
    else if (    c_2348810435 >= 65 && c_2348810435 <= 70    ){      result_2348810431 = subInt(addInt(10, c_2348810435), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2365587477, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2348810431;

}

function parseHex_2348810482(hex_2348810483) {
  var result_2348810484 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2348810483).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2348810484.r = (addInt(mulInt(c2n_2348810428(hex_2348810483, 0), 16), c2n_2348810428(hex_2348810483, 1)) / 255.0);
    result_2348810484.g = (addInt(mulInt(c2n_2348810428(hex_2348810483, 2), 16), c2n_2348810428(hex_2348810483, 3)) / 255.0);
    result_2348810484.b = (addInt(mulInt(c2n_2348810428(hex_2348810483, 4), 16), c2n_2348810428(hex_2348810483, 5)) / 255.0);
    result_2348810484.a = 1.0;

  return result_2348810484;

}

function parseHexAlpha_2348810573(hex_2348810574) {
  var result_2348810575 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2348810574).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2348810575.r = (addInt(mulInt(c2n_2348810428(hex_2348810574, 0), 16), c2n_2348810428(hex_2348810574, 1)) / 255.0);
    result_2348810575.g = (addInt(mulInt(c2n_2348810428(hex_2348810574, 2), 16), c2n_2348810428(hex_2348810574, 3)) / 255.0);
    result_2348810575.b = (addInt(mulInt(c2n_2348810428(hex_2348810574, 4), 16), c2n_2348810428(hex_2348810574, 5)) / 255.0);
    result_2348810575.a = (addInt(mulInt(c2n_2348810428(hex_2348810574, 6), 16), c2n_2348810428(hex_2348810574, 7)) / 255.0);

  return result_2348810575;

}

function parseHtmlHexTiny_2348810683(hex_2348810684) {
  var result_2348810685 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2348810684[chckIndx(0, 0, (hex_2348810684).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2365587477, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2348810684).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2348810685.r = (c2n_2348810428(hex_2348810684, 1) / 15.0);
    result_2348810685.g = (c2n_2348810428(hex_2348810684, 2) / 15.0);
    result_2348810685.b = (c2n_2348810428(hex_2348810684, 3) / 15.0);
    result_2348810685.a = 1.0;

  return result_2348810685;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet280[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2348810522(s_2348810525, x_2348810526) {
  var result_2348810527 = [];

    var a_2348810529 = subInt((s_2348810525).length, x_2348810526.a);
    var L_2348810531 = addInt(subInt(subInt((s_2348810525).length, x_2348810526.b), a_2348810529), 1);
    result_2348810527 = nimCopy(null, mnewString(chckRange(L_2348810531, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2348810536 = 0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < L_2348810531)) break Label3;
            i_2348810536 = i_536871058;
            result_2348810527[chckIndx(i_2348810536, 0, (result_2348810527).length - 1)] = s_2348810525[chckIndx(addInt(i_2348810536, a_2348810529), 0, (s_2348810525).length - 1)];
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_2348810527;

}

function HEX2EHEX2E_2348810495(a_2348810498, b_2348810499) {
  var result_2348810502 = ({a: 0, b: 0});

    result_2348810502 = nimCopy(result_2348810502, {a: a_2348810498, b: b_2348810499}, NTI2348810397);

  return result_2348810502;

}

function parseHexVar_2483028016(text_2483028017) {
    var Temporary1;

  var result_2483028018 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2483028017, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2483028019 = Temporary1;
    if (((text_2483028017).length == addInt(6, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHex_2348810482(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1))), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(8, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHexAlpha_2348810573(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1))), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(3, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHtmlHexTiny_2348810683(([35] || []).concat(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1)) || [])), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(4, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHtmlHexTiny_2348810683(([35] || []).concat(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 2)) || [])), NTI2365587459);
    result_2483028018.a = (nsuParseHexInt(HEX5BHEX5D_2348810522(text_2483028017, HEX2EHEX2E_2348810495(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2483028017, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2483028018 = nimCopy(result_2483028018, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2365587459);
    break BeforeRet;
  };

  return result_2483028018;

}

function rawGet_2483028233(t_2483028236, key_2483028237, hc_2483028238, hc_2483028238_Idx) {
  var result_2483028239 = 0;

  BeforeRet: {
    hc_2483028238[hc_2483028238_Idx] = hash_1325400491(key_2483028237);
    if ((hc_2483028238[hc_2483028238_Idx] == 0)) {
    hc_2483028238[hc_2483028238_Idx] = 314159265;
    }
    
    if (((t_2483028236.data).length == 0)) {
    result_2483028239 = -1;
    break BeforeRet;
    }
    
    var h_2483028291 = (hc_2483028238[hc_2483028238_Idx] & (t_2483028236.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field0)) break Label2;
          if (((t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field0 == hc_2483028238[hc_2483028238_Idx]) && eqStrings(t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field1, key_2483028237))) {
          result_2483028239 = h_2483028291;
          break BeforeRet;
          }
          
          h_2483028291 = nextTry_1308622883(h_2483028291, (t_2483028236.data).length - 1);
        }
    };
    result_2483028239 = subInt(-1, h_2483028291);
  };

  return result_2483028239;

}

function mustRehash_2483030507(t_2483030509) {
  var result_2483030510 = false;

    if (!((t_2483030509.counter < (t_2483030509.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2483030510 = ((mulInt((t_2483030509.data).length, 2) < mulInt(t_2483030509.counter, 3)) || (subInt((t_2483030509.data).length, t_2483030509.counter) < 4));

  return result_2483030510;

}

function rawInsert_2483030956(t_2483030960, data_2483030961, data_2483030961_Idx, key_2483030962, val_2483030963, hc_2483030964, h_2483030965) {
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field1 = nimCopy(null, key_2483030962, NTI33554449);
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field2 = nimCopy(data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field2, val_2483030963, NTI2483027972);
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field0 = hc_2483030964;

  
}

function enlarge_2483030662(t_2483030665) {
    var n_2483030668 = [];
    n_2483030668 = new Array(chckRange(mulInt((t_2483030665.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2483030665.data).length, 2), 0, 2147483647) ; ++i) { n_2483030668[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2483030665.data; t_2483030665.data = n_2483030668; n_2483030668 = Temporary1;    Label2: {
      var i_2483030732 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2483030668).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2483030732 = res_536871064;
            var eh_2483030786 = n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field0;
            if (isFilled_1308622880(eh_2483030786)) {
            var j_2483030790 = (eh_2483030786 & (t_2483030665.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2483030665.data[chckIndx(j_2483030790, 0, (t_2483030665.data).length - 1)].Field0)) break Label6;
                  j_2483030790 = nextTry_1308622883(j_2483030790, (t_2483030665.data).length - 1);
                }
            };
            rawInsert_2483030956(t_2483030665, t_2483030665, "data", n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field1, n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field2, eh_2483030786, j_2483030790);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2483031125(t_2483031128, key_2483031129, hc_2483031130) {
  var result_2483031131 = 0;

  BeforeRet: {
    if (((t_2483031128.data).length == 0)) {
    result_2483031131 = -1;
    break BeforeRet;
    }
    
    var h_2483031182 = (hc_2483031130 & (t_2483031128.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field0)) break Label2;
          if (((t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field0 == hc_2483031130) && eqStrings(t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field1, key_2483031129))) {
          result_2483031131 = h_2483031182;
          break BeforeRet;
          }
          
          h_2483031182 = nextTry_1308622883(h_2483031182, (t_2483031128.data).length - 1);
        }
    };
    result_2483031131 = subInt(-1, h_2483031182);
  };

  return result_2483031131;

}

function HEX5BHEX5DHEX3D_2483030334(t_2483030337, key_2483030338, val_2483030339) {
    if (((t_2483030337.data).length == 0)) {
    var correctSizeHEX60gensym37_2483030388 = slotsNeeded_1308622891(32);
    t_2483030337.counter = 0;
    t_2483030337.data = new Array(chckRange(correctSizeHEX60gensym37_2483030388, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2483030388, 0, 2147483647) ; ++i) { t_2483030337.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2483030393 = [0];
    var index_2483030400 = rawGet_2483028233(t_2483030337, key_2483030338, hc_2483030393, 0);
    if ((0 <= index_2483030400)) {
    t_2483030337.data[chckIndx(index_2483030400, 0, (t_2483030337.data).length - 1)].Field2 = nimCopy(t_2483030337.data[chckIndx(index_2483030400, 0, (t_2483030337.data).length - 1)].Field2, val_2483030339, NTI2483027972);
    }
    else {
      if (((t_2483030337.data).length == 0)) {
      var correctSizeHEX60gensym40_2483030502 = slotsNeeded_1308622891(32);
      t_2483030337.counter = 0;
      t_2483030337.data = new Array(chckRange(correctSizeHEX60gensym40_2483030502, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2483030502, 0, 2147483647) ; ++i) { t_2483030337.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2483030507(t_2483030337)) {
      enlarge_2483030662(t_2483030337);
      index_2483030400 = rawGetKnownHC_2483031125(t_2483030337, key_2483030338, hc_2483030393[0]);
      }
      
      index_2483030400 = subInt(-1, index_2483030400);
      rawInsert_2483030956(t_2483030337, t_2483030337, "data", key_2483030338, val_2483030339, hc_2483030393[0], index_2483030400);
      t_2483030337.counter = addInt(t_2483030337.counter, 1);
    }
    

  
}

function some_2483028819(val_2483028821) {
  var result_2483028822 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2483028822.has = true;
    result_2483028822.val = nimCopy(result_2483028822.val, val_2483028821, NTI2365587459);

  return result_2483028822;

}

function defaultTheme_2483031631() {
  var result_2483031632 = null;

    result_2483031632 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2483031632.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2483031632.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2483028016([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483030334(result_2483031632.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2483028819(parseHexVar_2483028016([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet281, NTI2483027991), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2483031632;

}

function setTheme_1291850998(self_1291850999, path_1291851000) {
      var Temporary1;

      var oHEX60gensym59_1291851003 = loadFromFile_2483031627(path_1291851000);
      if (!isSome_1291851008(oHEX60gensym59_1291851003)) Temporary1 = false; else {        var theme_1291851054 = get_1291851028(oHEX60gensym59_1291851003);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291850999.theme = theme_1291851054;
    }
    
    requestRender_2315255914(self_1291850999.platform, false);

  
}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function symbolName_1291853876(a_1291853878) {
  var result_1291853879 = [];

    result_1291853879 = nimCopy(null, names_1291853881[chckIndx(subInt(a_1291853878, 0), 0, (names_1291853881).length - 1)], NTI33554449);

  return result_1291853879;

}

function toJson_1291853860(a_1291853862, opt_1291853863) {
    var Temporary1;

  var result_1291853864 = null;

    switch (opt_1291853863.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291853862);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291853876(a_1291853862), opt_1291853863);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291853862, NTI2231369745), opt_1291853863);
      break;
    }
    result_1291853864 = Temporary1;

  return result_1291853864;

}

function none_1291853768() {
  var result_1291853774 = ({val: null});

  return result_1291853774;

}

function some_1291853775(val_1291853777) {
  var result_1291853778 = ({val: null});

    if (!(!((val_1291853777 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291853778.val = val_1291853777;

  return result_1291853778;

}

function getEditor_1291853759() {
  var result_1291853764 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291853764 = nimCopy(result_1291853764, none_1291853768(), NTI1291850224);
    break BeforeRet;
    }
    
    result_1291853764 = nimCopy(result_1291853764, some_1291853775(gEditor), NTI1291850224);
    break BeforeRet;
  };

  return result_1291853764;

}

function isNone_1291853813(self_1291853815) {
  var result_1291853816 = false;

    result_1291853816 = (self_1291853815.val == null);

  return result_1291853816;

}

function get_1291853833(self_1291853835) {
  var result_1291853836 = null;

    if (isNone_1291853813(self_1291853835)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291853836 = self_1291853835["val"];

  return result_1291853836;

}

function getBackendScript_1291853798_1291853806() {
  var result_1291853807 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym121_1291853808 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym121_1291853808)) {
      break BeforeRet;
      }
      
    };
    result_1291853807 = getBackend_1291853803(get_1291853833(rHEX60gensym121_1291853808));
  };

  return result_1291853807;

}

function getBackendApi_1291853858(HEX3Atmp_1291853800) {
  var result_1291853859 = null;

  BeforeRet: {
    result_1291853859 = newJNull_1627390049();
++excHandler;
    try {
    result_1291853859 = toJson_1291853860(getBackendScript_1291853798_1291853806(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym127_1291853957 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291853962 = [mnewString(0)];
    fmtRes_1291853962[0].push.apply(fmtRes_1291853962[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291853962, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym127_1291853957 || [],fmtRes_1291853962[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291853859;

}

function saveAppStateScript_1291853965_1291854135() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym132_1291854136 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym132_1291854136)) {
      break BeforeRet;
      }
      
    };
    saveAppState_1291853524(get_1291853833(rHEX60gensym132_1291854136));
  };

  
}

function saveAppStateApi_1291854162(HEX3Atmp_1291853967) {
  var result_1291854163 = null;

    result_1291854163 = newJNull_1627390049();
++excHandler;
    try {
    saveAppStateScript_1291853965_1291854135();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym137_1291854164 = [115,97,118,101,65,112,112,83,116,97,116,101];
    var fmtRes_1291854169 = [mnewString(0)];
    fmtRes_1291854169[0].push.apply(fmtRes_1291854169[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854169, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym137_1291854164 || [],fmtRes_1291854169[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854163;

}

function requestRenderScript_1291854213_1291854221(redrawEverything_1291854222) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym143_1291854223 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym143_1291854223)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291854218(get_1291853833(rHEX60gensym143_1291854223), redrawEverything_1291854222);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet282[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet283), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet284[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2818584240(node_2818584243) {
  var result_2818584245 = [false];

    var jsonPath_2818584246 = [[]];
    result_2818584245[0] = false;
    initFromJson_1627395343(result_2818584245, 0, node_2818584243, jsonPath_2818584246, 0);

  return result_2818584245[0];

}

function fromJson_2818584229(a_2818584231, a_2818584231_Idx, b_2818584232, opt_2818584233) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818584232, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2818584232}));
    }
    
    a_2818584231[a_2818584231_Idx] = to_2818584240(b_2818584232);

  
}

function jsonTo_2818584223(b_2818584225, opt_2818584227) {
  var result_2818584228 = [false];

    fromJson_2818584229(result_2818584228, 0, b_2818584225, opt_2818584227);

  return result_2818584228[0];

}

function requestRenderApi_1291854250(HEX3Atmp_1291854215) {
      var Temporary3;

  var result_1291854251 = null;

    result_1291854251 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291854215))) {
      Temporary3 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854215, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291854213_1291854221(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym148_1291854257 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291854262 = [mnewString(0)];
    fmtRes_1291854262[0].push.apply(fmtRes_1291854262[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854262, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym148_1291854257 || [],fmtRes_1291854262[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854251;

}

function setHandleInputsScript_1291854265_1291854274(context_1291854275, value_1291854276) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym154_1291854277 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym154_1291854277)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291854270(get_1291853833(rHEX60gensym154_1291854277), context_1291854275, value_1291854276);
  };

  
}

function setHandleInputsApi_1291854305(HEX3Atmp_1291854267) {
  var result_1291854306 = null;

    result_1291854306 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291854265_1291854274(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854267, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854267, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym159_1291854317 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291854322 = [mnewString(0)];
    fmtRes_1291854322[0].push.apply(fmtRes_1291854322[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854322, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym159_1291854317 || [],fmtRes_1291854322[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854306;

}

function setHandleActionsScript_1291854325_1291854334(context_1291854335, value_1291854336) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym164_1291854337 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym164_1291854337)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291854330(get_1291853833(rHEX60gensym164_1291854337), context_1291854335, value_1291854336);
  };

  
}

function setHandleActionsApi_1291854365(HEX3Atmp_1291854327) {
  var result_1291854366 = null;

    result_1291854366 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291854325_1291854334(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854327, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854327, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym169_1291854377 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291854382 = [mnewString(0)];
    fmtRes_1291854382[0].push.apply(fmtRes_1291854382[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854382, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym169_1291854377 || [],fmtRes_1291854382[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854366;

}

function setConsumeAllActionsScript_1291854385_1291854394(context_1291854395, value_1291854396) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym174_1291854397 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym174_1291854397)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291854390(get_1291853833(rHEX60gensym174_1291854397), context_1291854395, value_1291854396);
  };

  
}

function setConsumeAllActionsApi_1291854425(HEX3Atmp_1291854387) {
  var result_1291854426 = null;

    result_1291854426 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291854385_1291854394(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854387, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854387, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym179_1291854437 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291854442 = [mnewString(0)];
    fmtRes_1291854442[0].push.apply(fmtRes_1291854442[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854442, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym179_1291854437 || [],fmtRes_1291854442[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854426;

}

function setConsumeAllInputScript_1291854445_1291854454(context_1291854455, value_1291854456) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym184_1291854457 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym184_1291854457)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291854450(get_1291853833(rHEX60gensym184_1291854457), context_1291854455, value_1291854456);
  };

  
}

function setConsumeAllInputApi_1291854485(HEX3Atmp_1291854447) {
  var result_1291854486 = null;

    result_1291854486 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291854445_1291854454(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854447, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854447, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym189_1291854497 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291854502 = [mnewString(0)];
    fmtRes_1291854502[0].push.apply(fmtRes_1291854502[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854502, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym189_1291854497 || [],fmtRes_1291854502[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854486;

}

function openGithubWorkspaceScript_1291854505_1291854528(user_1291854529, repository_1291854530, branchOrHash_1291854531) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym195_1291854532 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym195_1291854532)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291854510(get_1291853833(rHEX60gensym195_1291854532), user_1291854529, repository_1291854530, branchOrHash_1291854531);
  };

  
}

function openGithubWorkspaceApi_1291854561(HEX3Atmp_1291854507) {
  var result_1291854562 = null;

    result_1291854562 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291854505_1291854528(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854507, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854507, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854507, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym200_1291854578 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291854583 = [mnewString(0)];
    fmtRes_1291854583[0].push.apply(fmtRes_1291854583[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854583, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym200_1291854578 || [],fmtRes_1291854583[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854562;

}

function openAbsytreeServerWorkspaceScript_1291854586_1291854598(url_1291854599) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym204_1291854600 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym204_1291854600)) {
      break BeforeRet;
      }
      
    };
    openAbsytreeServerWorkspace_1291854591(get_1291853833(rHEX60gensym204_1291854600), url_1291854599);
  };

  
}

function openAbsytreeServerWorkspaceApi_1291854627(HEX3Atmp_1291854588) {
  var result_1291854628 = null;

    result_1291854628 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openAbsytreeServerWorkspaceScript_1291854586_1291854598(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854588, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym209_1291854634 = [111,112,101,110,65,98,115,121,116,114,101,101,83,101,114,118,101,114,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291854639 = [mnewString(0)];
    fmtRes_1291854639[0].push.apply(fmtRes_1291854639[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854639, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym209_1291854634 || [],fmtRes_1291854639[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854628;

}

function getFlagScript2_1291854642_1291854661(flag_1291854662, default_1291854663) {
  var result_1291854664 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym214_1291854665 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym214_1291854665)) {
      break BeforeRet;
      }
      
    };
    result_1291854664 = getFlag_1291848866(get_1291853833(rHEX60gensym214_1291854665), flag_1291854662, default_1291854663);
  };

  return result_1291854664;

}

function getFlagApi2_1291854694(HEX3Atmp_1291854644) {
      var Temporary4;

  var result_1291854695 = null;

  BeforeRet: {
    result_1291854695 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291854644))) {
      Temporary4 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854644, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291854695 = toJson_2818588113(getFlagScript2_1291854642_1291854661(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854644, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym220_1291854710 = [103,101,116,70,108,97,103];
    var fmtRes_1291854715 = [mnewString(0)];
    fmtRes_1291854715[0].push.apply(fmtRes_1291854715[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854715, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym220_1291854710 || [],fmtRes_1291854715[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854695;

}

function setFlagScript2_1291854719_1291854783(flag_1291854784, value_1291854785) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym226_1291854786 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym226_1291854786)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848943(get_1291853833(rHEX60gensym226_1291854786), flag_1291854784, value_1291854785);
  };

  
}

function setFlagApi2_1291854814(HEX3Atmp_1291854721) {
  var result_1291854815 = null;

    result_1291854815 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291854719_1291854783(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854721, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291854721, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym231_1291854826 = [115,101,116,70,108,97,103];
    var fmtRes_1291854831 = [mnewString(0)];
    fmtRes_1291854831[0].push.apply(fmtRes_1291854831[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854831, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym231_1291854826 || [],fmtRes_1291854831[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854815;

}

function toggleFlagScript_1291854840_1291854848(flag_1291854849) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym240_1291854850 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym240_1291854850)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848947(get_1291853833(rHEX60gensym240_1291854850), flag_1291854849);
  };

  
}

function toggleFlagApi_1291854877(HEX3Atmp_1291854842) {
  var result_1291854878 = null;

    result_1291854878 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291854840_1291854848(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854842, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym245_1291854884 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291854889 = [mnewString(0)];
    fmtRes_1291854889[0].push.apply(fmtRes_1291854889[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854889, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym245_1291854884 || [],fmtRes_1291854889[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854878;

}

function setOptionScript_1291854892_1291854940(option_1291854941, value_1291854942) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym250_1291854943 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym250_1291854943)) {
      break BeforeRet;
      }
      
    };
    setOption_1291854897(get_1291853833(rHEX60gensym250_1291854943), option_1291854941, value_1291854942);
  };

  
}

function setOptionApi_1291854971(HEX3Atmp_1291854894) {
  var result_1291854972 = null;

    result_1291854972 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291854892_1291854940(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854894, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291854894, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym255_1291854978 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291854983 = [mnewString(0)];
    fmtRes_1291854983[0].push.apply(fmtRes_1291854983[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854983, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym255_1291854978 || [],fmtRes_1291854983[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854972;

}

function quitScript_1291854991_1291854998() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym263_1291854999 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym263_1291854999)) {
      break BeforeRet;
      }
      
    };
    quit_1291854996(get_1291853833(rHEX60gensym263_1291854999));
  };

  
}

function quitApi_1291855025(HEX3Atmp_1291854993) {
  var result_1291855026 = null;

    result_1291855026 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291854991_1291854998();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym268_1291855027 = [113,117,105,116];
    var fmtRes_1291855032 = [mnewString(0)];
    fmtRes_1291855032[0].push.apply(fmtRes_1291855032[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855032, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym268_1291855027 || [],fmtRes_1291855032[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855026;

}

function changeFontSizeScript_1291855035_1291855043(amount_1291855044) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym272_1291855045 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym272_1291855045)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291855040(get_1291853833(rHEX60gensym272_1291855045), amount_1291855044);
  };

  
}

function initFromJson_2818585600(dst_2818585602, dst_2818585602_Idx, jsonNode_2818585603, jsonPath_2818585604, jsonPath_2818585604_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2818585603.kind == 4)) {
    var Temporary1 = jsonNode_2818585603;
    if (ConstSet285[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2818585609 = NaN;
      dst_2818585602[dst_2818585602_Idx] = b_2818585609;
      break;
    case "inf":
      var b_2818585610 = Infinity;
      dst_2818585602[dst_2818585602_Idx] = b_2818585610;
      break;
    case "-inf":
      var b_2818585611 = -Infinity;
      dst_2818585602[dst_2818585602_Idx] = b_2818585611;
      break;
    default: 
      var Temporary2 = jsonNode_2818585603;
      if (ConstSet286[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2818585603, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2818585604[jsonPath_2818585604_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet287[jsonNode_2818585603.kind] != undefined))) {
      var msgHEX60gensym389_2818585625 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet288), nimCopy(null, jsonPath_2818585604[jsonPath_2818585604_Idx], NTI33554449), reprEnum(jsonNode_2818585603.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym389_2818585625, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2818585603.kind == 3)) {
      var Temporary3 = jsonNode_2818585603;
      if (ConstSet289[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2818585602[dst_2818585602_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2818585603;
        if (ConstSet290[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2818585602[dst_2818585602_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2818585589(node_2818585592) {
  var result_2818585594 = [0.0];

    var jsonPath_2818585595 = [[]];
    result_2818585594[0] = 0.0;
    initFromJson_2818585600(result_2818585594, 0, node_2818585592, jsonPath_2818585595, 0);

  return result_2818585594[0];

}

function fromJson_2818585574(a_2818585576, a_2818585576_Idx, b_2818585577, opt_2818585578) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818585577, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2818585577}));
    }
    
    a_2818585576[a_2818585576_Idx] = to_2818585589(b_2818585577);

  
}

function jsonTo_2818585568(b_2818585570, opt_2818585572) {
  var result_2818585573 = [0.0];

    fromJson_2818585574(result_2818585573, 0, b_2818585570, opt_2818585572);

  return result_2818585573[0];

}

function changeFontSizeApi_1291855072(HEX3Atmp_1291855037) {
  var result_1291855073 = null;

    result_1291855073 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291855035_1291855043(jsonTo_2818585568(HEX5BHEX5D_1627393116(HEX3Atmp_1291855037, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym277_1291855079 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291855084 = [mnewString(0)];
    fmtRes_1291855084[0].push.apply(fmtRes_1291855084[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855084, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym277_1291855079 || [],fmtRes_1291855084[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855073;

}

function changeLayoutPropScript_1291855087_1291855345(prop_1291855346, change_1291855347) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym282_1291855348 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym282_1291855348)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291855092(get_1291853833(rHEX60gensym282_1291855348), prop_1291855346, change_1291855347);
  };

  
}

function changeLayoutPropApi_1291855376(HEX3Atmp_1291855089) {
  var result_1291855377 = null;

    result_1291855377 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291855087_1291855345(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855089, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585568(HEX5BHEX5D_1627393116(HEX3Atmp_1291855089, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym287_1291855388 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291855393 = [mnewString(0)];
    fmtRes_1291855393[0].push.apply(fmtRes_1291855393[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855393, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym287_1291855388 || [],fmtRes_1291855393[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855377;

}

function toggleStatusBarLocationScript_1291855403_1291855410() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym296_1291855411 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym296_1291855411)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291855408(get_1291853833(rHEX60gensym296_1291855411));
  };

  
}

function toggleStatusBarLocationApi_1291855437(HEX3Atmp_1291855405) {
  var result_1291855438 = null;

    result_1291855438 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291855403_1291855410();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym301_1291855439 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291855444 = [mnewString(0)];
    fmtRes_1291855444[0].push.apply(fmtRes_1291855444[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855444, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym301_1291855439 || [],fmtRes_1291855444[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855438;

}

function createViewScript_1291855447_1291855459() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym304_1291855460 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym304_1291855460)) {
      break BeforeRet;
      }
      
    };
    createView_1291855452(get_1291853833(rHEX60gensym304_1291855460));
  };

  
}

function createViewApi_1291855486(HEX3Atmp_1291855449) {
  var result_1291855487 = null;

    result_1291855487 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291855447_1291855459();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym309_1291855488 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291855493 = [mnewString(0)];
    fmtRes_1291855493[0].push.apply(fmtRes_1291855493[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855493, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym309_1291855488 || [],fmtRes_1291855493[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855487;

}

function closeCurrentViewScript_1291855501_1291855538() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym312_1291855539 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym312_1291855539)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291855506(get_1291853833(rHEX60gensym312_1291855539));
  };

  
}

function closeCurrentViewApi_1291855565(HEX3Atmp_1291855503) {
  var result_1291855566 = null;

    result_1291855566 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291855501_1291855538();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym317_1291855567 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291855572 = [mnewString(0)];
    fmtRes_1291855572[0].push.apply(fmtRes_1291855572[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855572, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym317_1291855567 || [],fmtRes_1291855572[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855566;

}

function moveCurrentViewToTopScript_1291855580_1291855623() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym322_1291855624 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym322_1291855624)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291855585(get_1291853833(rHEX60gensym322_1291855624));
  };

  
}

function moveCurrentViewToTopApi_1291855650(HEX3Atmp_1291855582) {
  var result_1291855651 = null;

    result_1291855651 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291855580_1291855623();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym327_1291855652 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291855657 = [mnewString(0)];
    fmtRes_1291855657[0].push.apply(fmtRes_1291855657[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855657, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym327_1291855652 || [],fmtRes_1291855657[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855651;

}

function nextViewScript_1291855661_1291855674() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym333_1291855675 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym333_1291855675)) {
      break BeforeRet;
      }
      
    };
    nextView_1291855666(get_1291853833(rHEX60gensym333_1291855675));
  };

  
}

function nextViewApi_1291855701(HEX3Atmp_1291855663) {
  var result_1291855702 = null;

    result_1291855702 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291855661_1291855674();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym338_1291855703 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291855708 = [mnewString(0)];
    fmtRes_1291855708[0].push.apply(fmtRes_1291855708[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855708, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym338_1291855703 || [],fmtRes_1291855708[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855702;

}

function prevViewScript_1291855711_1291855727() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym341_1291855728 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym341_1291855728)) {
      break BeforeRet;
      }
      
    };
    prevView_1291855716(get_1291853833(rHEX60gensym341_1291855728));
  };

  
}

function prevViewApi_1291855754(HEX3Atmp_1291855713) {
  var result_1291855755 = null;

    result_1291855755 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291855711_1291855727();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym346_1291855756 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291855761 = [mnewString(0)];
    fmtRes_1291855761[0].push.apply(fmtRes_1291855761[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855761, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym346_1291855756 || [],fmtRes_1291855761[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855755;

}

function moveCurrentViewPrevScript_1291855764_1291855794() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym349_1291855795 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym349_1291855795)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291855769(get_1291853833(rHEX60gensym349_1291855795));
  };

  
}

function moveCurrentViewPrevApi_1291855821(HEX3Atmp_1291855766) {
  var result_1291855822 = null;

    result_1291855822 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291855764_1291855794();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym354_1291855823 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291855828 = [mnewString(0)];
    fmtRes_1291855828[0].push.apply(fmtRes_1291855828[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855828, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym354_1291855823 || [],fmtRes_1291855828[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855822;

}

function moveCurrentViewNextScript_1291855831_1291855858() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym358_1291855859 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym358_1291855859)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291855836(get_1291853833(rHEX60gensym358_1291855859));
  };

  
}

function moveCurrentViewNextApi_1291855885(HEX3Atmp_1291855833) {
  var result_1291855886 = null;

    result_1291855886 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291855831_1291855858();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym363_1291855887 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291855892 = [mnewString(0)];
    fmtRes_1291855892[0].push.apply(fmtRes_1291855892[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855892, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym363_1291855887 || [],fmtRes_1291855892[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855886;

}

function setLayoutScript_1291855895_1291855939(layout_1291855940) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym368_1291855941 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym368_1291855941)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291855900(get_1291853833(rHEX60gensym368_1291855941), layout_1291855940);
  };

  
}

function setLayoutApi_1291855968(HEX3Atmp_1291855897) {
  var result_1291855969 = null;

    result_1291855969 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291855895_1291855939(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855897, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym373_1291855975 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291855980 = [mnewString(0)];
    fmtRes_1291855980[0].push.apply(fmtRes_1291855980[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855980, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym373_1291855975 || [],fmtRes_1291855980[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855969;

}

function commandLineScript_1291855983_1291855995(initialValue_1291855996) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym377_1291855997 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym377_1291855997)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291855988(get_1291853833(rHEX60gensym377_1291855997), initialValue_1291855996);
  };

  
}

function commandLineApi_1291856024(HEX3Atmp_1291855985) {
      var Temporary3;

  var result_1291856025 = null;

    result_1291856025 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855985))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855985, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291855983_1291855995(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym382_1291856031 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291856036 = [mnewString(0)];
    fmtRes_1291856036[0].push.apply(fmtRes_1291856036[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856036, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym382_1291856031 || [],fmtRes_1291856036[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856025;

}

function exitCommandLineScript_1291856039_1291856050() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym386_1291856051 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym386_1291856051)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291856044(get_1291853833(rHEX60gensym386_1291856051));
  };

  
}

function exitCommandLineApi_1291856077(HEX3Atmp_1291856041) {
  var result_1291856078 = null;

    result_1291856078 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291856039_1291856050();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym391_1291856079 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291856084 = [mnewString(0)];
    fmtRes_1291856084[0].push.apply(fmtRes_1291856084[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856084, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym391_1291856079 || [],fmtRes_1291856084[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856078;

}

function executeCommandLineScript_1291856087_1291856101() {
  var result_1291856102 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym394_1291856103 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym394_1291856103)) {
      break BeforeRet;
      }
      
    };
    result_1291856102 = executeCommandLine_1291856092(get_1291853833(rHEX60gensym394_1291856103));
  };

  return result_1291856102;

}

function executeCommandLineApi_1291856130(HEX3Atmp_1291856089) {
  var result_1291856131 = null;

  BeforeRet: {
    result_1291856131 = newJNull_1627390049();
++excHandler;
    try {
    result_1291856131 = toJson_2818588113(executeCommandLineScript_1291856087_1291856101(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym400_1291856136 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291856141 = [mnewString(0)];
    fmtRes_1291856141[0].push.apply(fmtRes_1291856141[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856141, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym400_1291856136 || [],fmtRes_1291856141[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291856131;

}

function openFileScript_1291856153_1291856201(path_1291856202, app_1291856203) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym405_1291856204 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym405_1291856204)) {
      break BeforeRet;
      }
      
    };
    openFile_1291856158(get_1291853833(rHEX60gensym405_1291856204), path_1291856202, app_1291856203);
  };

  
}

function openFileApi_1291856232(HEX3Atmp_1291856155) {
      var Temporary4;

  var result_1291856233 = null;

    result_1291856233 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291856155))) {
      Temporary4 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291856155, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    openFileScript_1291856153_1291856201(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856155, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym410_1291856244 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291856249 = [mnewString(0)];
    fmtRes_1291856249[0].push.apply(fmtRes_1291856249[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856249, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym410_1291856244 || [],fmtRes_1291856249[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856233;

}

function writeFileScript_1291856363_1291856384(path_1291856385, app_1291856386) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym423_1291856387 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym423_1291856387)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291856368(get_1291853833(rHEX60gensym423_1291856387), path_1291856385, app_1291856386);
  };

  
}

function writeFileApi_1291856415(HEX3Atmp_1291856365) {
      var Temporary3;
      var Temporary5;

  var result_1291856416 = null;

    result_1291856416 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291856365))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856365, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    Label4: {
      if ((1 < len_1627392983(HEX3Atmp_1291856365))) {
      Temporary5 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291856365, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = false;
      }
      
    };
    writeFileScript_1291856363_1291856384(Temporary3, Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym428_1291856427 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291856432 = [mnewString(0)];
    fmtRes_1291856432[0].push.apply(fmtRes_1291856432[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856432, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym428_1291856427 || [],fmtRes_1291856432[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856416;

}

function loadFileScript_1291856435_1291856455(path_1291856456) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym437_1291856457 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym437_1291856457)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291856440(get_1291853833(rHEX60gensym437_1291856457), path_1291856456);
  };

  
}

function loadFileApi_1291856484(HEX3Atmp_1291856437) {
      var Temporary3;

  var result_1291856485 = null;

    result_1291856485 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291856437))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856437, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291856435_1291856455(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym442_1291856491 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291856496 = [mnewString(0)];
    fmtRes_1291856496[0].push.apply(fmtRes_1291856496[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856496, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym442_1291856491 || [],fmtRes_1291856496[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856485;

}

function removeFromLocalStorageScript_1291856499_1291856522() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym449_1291856523 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym449_1291856523)) {
      break BeforeRet;
      }
      
    };
    removeFromLocalStorage_1291856504(get_1291853833(rHEX60gensym449_1291856523));
  };

  
}

function removeFromLocalStorageApi_1291856549(HEX3Atmp_1291856501) {
  var result_1291856550 = null;

    result_1291856550 = newJNull_1627390049();
++excHandler;
    try {
    removeFromLocalStorageScript_1291856499_1291856522();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym454_1291856551 = [114,101,109,111,118,101,70,114,111,109,76,111,99,97,108,83,116,111,114,97,103,101];
    var fmtRes_1291856556 = [mnewString(0)];
    fmtRes_1291856556[0].push.apply(fmtRes_1291856556[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856556, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym454_1291856551 || [],fmtRes_1291856556[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856550;

}

function loadThemeScript_1291856559_1291856603(name_1291856604) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym460_1291856605 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym460_1291856605)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291856564(get_1291853833(rHEX60gensym460_1291856605), name_1291856604);
  };

  
}

function loadThemeApi_1291856632(HEX3Atmp_1291856561) {
  var result_1291856633 = null;

    result_1291856633 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291856559_1291856603(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856561, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym465_1291856639 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291856644 = [mnewString(0)];
    fmtRes_1291856644[0].push.apply(fmtRes_1291856644[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856644, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym465_1291856639 || [],fmtRes_1291856644[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856633;

}

function chooseThemeScript_1291856647_1291856932() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym471_1291856933 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym471_1291856933)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291856652(get_1291853833(rHEX60gensym471_1291856933));
  };

  
}

function chooseThemeApi_1291856959(HEX3Atmp_1291856649) {
  var result_1291856960 = null;

    result_1291856960 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291856647_1291856932();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym476_1291856961 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291856966 = [mnewString(0)];
    fmtRes_1291856966[0].push.apply(fmtRes_1291856966[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856966, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym476_1291856961 || [],fmtRes_1291856966[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856960;

}

function chooseFileScript_1291857305_1291857525(view_1291857526) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym497_1291857527 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym497_1291857527)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291857310(get_1291853833(rHEX60gensym497_1291857527), view_1291857526);
  };

  
}

function chooseFileApi_1291857554(HEX3Atmp_1291857307) {
      var Temporary3;

  var result_1291857555 = null;

    result_1291857555 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291857307))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857307, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291857305_1291857525(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym502_1291857561 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291857566 = [mnewString(0)];
    fmtRes_1291857566[0].push.apply(fmtRes_1291857566[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857566, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym502_1291857561 || [],fmtRes_1291857566[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857555;

}

function setGithubAccessTokenScript_1291857595_1291857603(token_1291857604) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym518_1291857605 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym518_1291857605)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291857600(get_1291853833(rHEX60gensym518_1291857605), token_1291857604);
  };

  
}

function setGithubAccessTokenApi_1291857632(HEX3Atmp_1291857597) {
  var result_1291857633 = null;

    result_1291857633 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291857595_1291857603(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857597, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym523_1291857639 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291857644 = [mnewString(0)];
    fmtRes_1291857644[0].push.apply(fmtRes_1291857644[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857644, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym523_1291857639 || [],fmtRes_1291857644[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857633;

}

function reloadConfigScript_1291857647_1291857667() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym526_1291857668 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym526_1291857668)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291857652(get_1291853833(rHEX60gensym526_1291857668));
  };

  
}

function reloadConfigApi_1291857694(HEX3Atmp_1291857649) {
  var result_1291857695 = null;

    result_1291857695 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291857647_1291857667();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym531_1291857696 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291857701 = [mnewString(0)];
    fmtRes_1291857701[0].push.apply(fmtRes_1291857701[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857701, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym531_1291857696 || [],fmtRes_1291857701[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857695;

}

function logOptionsScript_1291857704_1291857711() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym536_1291857712 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym536_1291857712)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291857709(get_1291853833(rHEX60gensym536_1291857712));
  };

  
}

function logOptionsApi_1291857738(HEX3Atmp_1291857706) {
  var result_1291857739 = null;

    result_1291857739 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291857704_1291857711();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym541_1291857740 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291857745 = [mnewString(0)];
    fmtRes_1291857745[0].push.apply(fmtRes_1291857745[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857745, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym541_1291857740 || [],fmtRes_1291857745[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857739;

}

function clearCommandsScript_1291857748_1291857756(context_1291857757) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym545_1291857758 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym545_1291857758)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291857753(get_1291853833(rHEX60gensym545_1291857758), context_1291857757);
  };

  
}

function clearCommandsApi_1291857785(HEX3Atmp_1291857750) {
  var result_1291857786 = null;

    result_1291857786 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291857748_1291857756(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857750, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym550_1291857792 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291857797 = [mnewString(0)];
    fmtRes_1291857797[0].push.apply(fmtRes_1291857797[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857797, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym550_1291857792 || [],fmtRes_1291857797[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857786;

}

function toJson_2818584299(a_2818584301, opt_2818584302) {
  var result_2818584303 = null;

    result_2818584303 = HEX25_1627391779(a_2818584301);

  return result_2818584303;

}

function toJson_1291858068(a_1291858070, opt_1291858071) {
  var result_1291858072 = null;

    result_1291858072 = newJArray_1627390082();
    Label1: {
      var ai_1291858079 = 0;
      var i_536871145 = 0;
      var L_536871146 = (a_1291858070).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871145 < L_536871146)) break Label3;
            ai_1291858079 = a_1291858070[chckIndx(i_536871145, 0, (a_1291858070).length - 1)];
            add_1627390190(result_1291858072, toJson_2818584299(ai_1291858079, opt_1291858071));
            i_536871145 = addInt(i_536871145, 1);
            if (!(((a_1291858070).length == L_536871146))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291858072;

}

function getAllEditorsScript_1291857804_1291858037() {
  var result_1291858038 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym553_1291858039 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym553_1291858039)) {
      break BeforeRet;
      }
      
    };
    result_1291858038 = nimCopy(null, getAllEditors_1291857809(get_1291853833(rHEX60gensym553_1291858039)), NTI1291853660);
  };

  return result_1291858038;

}

function getAllEditorsApi_1291858066(HEX3Atmp_1291857806) {
  var result_1291858067 = null;

  BeforeRet: {
    result_1291858067 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858067 = toJson_1291858068(getAllEditorsScript_1291857804_1291858037(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym559_1291858084 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291858089 = [mnewString(0)];
    fmtRes_1291858089[0].push.apply(fmtRes_1291858089[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858089, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym559_1291858084 || [],fmtRes_1291858089[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858067;

}

function setModeScript22_1291858107_1291858147(mode_1291858148) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym565_1291858149 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym565_1291858149)) {
      break BeforeRet;
      }
      
    };
    setMode_1291858112(get_1291853833(rHEX60gensym565_1291858149), mode_1291858148);
  };

  
}

function setModeApi22_1291858176(HEX3Atmp_1291858109) {
  var result_1291858177 = null;

    result_1291858177 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291858107_1291858147(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858109, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym570_1291858183 = [115,101,116,77,111,100,101];
    var fmtRes_1291858188 = [mnewString(0)];
    fmtRes_1291858188[0].push.apply(fmtRes_1291858188[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858188, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym570_1291858183 || [],fmtRes_1291858188[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858177;

}

function modeScript22_1291858192_1291858200() {
  var result_1291858201 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym576_1291858202 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym576_1291858202)) {
      break BeforeRet;
      }
      
    };
    result_1291858201 = nimCopy(null, mode_1291858197(get_1291853833(rHEX60gensym576_1291858202)), NTI33554449);
  };

  return result_1291858201;

}

function modeApi22_1291858229(HEX3Atmp_1291858194) {
  var result_1291858230 = null;

  BeforeRet: {
    result_1291858230 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858230 = toJson_1811939932(modeScript22_1291858192_1291858200(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym582_1291858235 = [109,111,100,101];
    var fmtRes_1291858240 = [mnewString(0)];
    fmtRes_1291858240[0].push.apply(fmtRes_1291858240[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858240, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym582_1291858235 || [],fmtRes_1291858240[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858230;

}

function getContextWithModeScript22_1291858243_1291858252(context_1291858253) {
  var result_1291858254 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym586_1291858255 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym586_1291858255)) {
      break BeforeRet;
      }
      
    };
    result_1291858254 = nimCopy(null, getContextWithMode_1291858248(get_1291853833(rHEX60gensym586_1291858255), context_1291858253), NTI33554449);
  };

  return result_1291858254;

}

function getContextWithModeApi22_1291858283(HEX3Atmp_1291858245) {
  var result_1291858284 = null;

  BeforeRet: {
    result_1291858284 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858284 = toJson_1811939932(getContextWithModeScript22_1291858243_1291858252(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858245, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym592_1291858294 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291858299 = [mnewString(0)];
    fmtRes_1291858299[0].push.apply(fmtRes_1291858299[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858299, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym592_1291858294 || [],fmtRes_1291858299[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858284;

}

function scriptRunActionScript_1291858529_1291858539(action_1291858540, arg_1291858541) {
    scriptRunAction_1291858533(action_1291858540, arg_1291858541);

  
}

function scriptRunActionApi_1291858546(HEX3Atmp_1291858531) {
  var result_1291858547 = null;

    result_1291858547 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291858529_1291858539(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858531, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858531, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym607_1291858558 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291858563 = [mnewString(0)];
    fmtRes_1291858563[0].push.apply(fmtRes_1291858563[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858563, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym607_1291858558 || [],fmtRes_1291858563[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858547;

}

function scriptLogScript_1291858566_1291858577(message_1291858578) {
    scriptLog_1291858570(message_1291858578);

  
}

function scriptLogApi_1291858582(HEX3Atmp_1291858568) {
  var result_1291858583 = null;

    result_1291858583 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291858566_1291858577(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858568, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym614_1291858589 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291858594 = [mnewString(0)];
    fmtRes_1291858594[0].push.apply(fmtRes_1291858594[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858594, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym614_1291858589 || [],fmtRes_1291858594[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858583;

}

function addCommandScriptScript_1291858597_1291858609(context_1291858610, keys_1291858611, action_1291858612, arg_1291858613) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym622_1291858614 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym622_1291858614)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291858602(get_1291853833(rHEX60gensym622_1291858614), context_1291858610, keys_1291858611, action_1291858612, arg_1291858613);
  };

  
}

function addCommandScriptApi_1291858644(HEX3Atmp_1291858599) {
      var Temporary6;

  var result_1291858645 = null;

    result_1291858645 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291858599))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858599, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291858597_1291858609(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858599, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858599, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858599, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym627_1291858666 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291858671 = [mnewString(0)];
    fmtRes_1291858671[0].push.apply(fmtRes_1291858671[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858671, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym627_1291858666 || [],fmtRes_1291858671[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858645;

}

function removeCommandScript_1291858680_1291858689(context_1291858690, keys_1291858691) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym633_1291858692 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym633_1291858692)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291858685(get_1291853833(rHEX60gensym633_1291858692), context_1291858690, keys_1291858691);
  };

  
}

function removeCommandApi_1291858720(HEX3Atmp_1291858682) {
  var result_1291858721 = null;

    result_1291858721 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291858680_1291858689(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858682, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858682, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym638_1291858732 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291858737 = [mnewString(0)];
    fmtRes_1291858737[0].push.apply(fmtRes_1291858737[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858737, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym638_1291858732 || [],fmtRes_1291858737[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858721;

}

function getActivePopupScript_1291858742_1291858760() {
  var result_1291858761 = 0;

    result_1291858761 = getActivePopup_1291858746();

  return result_1291858761;

}

function getActivePopupApi_1291858765(HEX3Atmp_1291858744) {
  var result_1291858766 = null;

  BeforeRet: {
    result_1291858766 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858766 = toJson_2818584299(getActivePopupScript_1291858742_1291858760(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym645_1291858771 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291858776 = [mnewString(0)];
    fmtRes_1291858776[0].push.apply(fmtRes_1291858776[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858776, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym645_1291858771 || [],fmtRes_1291858776[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858766;

}

function getActiveEditorScript_1291858779_1291858791() {
  var result_1291858792 = 0;

    result_1291858792 = getActiveEditor_1291858783();

  return result_1291858792;

}

function getActiveEditorApi_1291858796(HEX3Atmp_1291858781) {
  var result_1291858797 = null;

  BeforeRet: {
    result_1291858797 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858797 = toJson_2818584299(getActiveEditorScript_1291858779_1291858791(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym653_1291858802 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291858807 = [mnewString(0)];
    fmtRes_1291858807[0].push.apply(fmtRes_1291858807[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858807, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym653_1291858802 || [],fmtRes_1291858807[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858797;

}

function loadCurrentConfigScript_1291858853_1291858865() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym665_1291858866 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym665_1291858866)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291858858(get_1291853833(rHEX60gensym665_1291858866));
  };

  
}

function loadCurrentConfigApi_1291858892(HEX3Atmp_1291858855) {
  var result_1291858893 = null;

    result_1291858893 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291858853_1291858865();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym670_1291858894 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291858899 = [mnewString(0)];
    fmtRes_1291858899[0].push.apply(fmtRes_1291858899[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858899, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym670_1291858894 || [],fmtRes_1291858899[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858893;

}

function sourceCurrentDocumentScript_1291858902_1291858932() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym673_1291858933 = getEditor_1291853759();
      if (isNone_1291853813(rHEX60gensym673_1291858933)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291858907(get_1291853833(rHEX60gensym673_1291858933));
  };

  
}

function sourceCurrentDocumentApi_1291858959(HEX3Atmp_1291858904) {
  var result_1291858960 = null;

    result_1291858960 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291858902_1291858932();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym678_1291858961 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291858966 = [mnewString(0)];
    fmtRes_1291858966[0].push.apply(fmtRes_1291858966[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858966, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym678_1291858961 || [],fmtRes_1291858966[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858960;

}

function getEditorScript_1291858969_1291858982(index_1291858983) {
  var result_1291858984 = 0;

    result_1291858984 = getEditor_1291858973(index_1291858983);

  return result_1291858984;

}

function getEditorApi_1291858989(HEX3Atmp_1291858971) {
  var result_1291858990 = null;

  BeforeRet: {
    result_1291858990 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858990 = toJson_2818584299(getEditorScript_1291858969_1291858982(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291858971, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym688_1291859000 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291859005 = [mnewString(0)];
    fmtRes_1291859005[0].push.apply(fmtRes_1291859005[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859005, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym688_1291859000 || [],fmtRes_1291859005[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858990;

}

function scriptIsTextEditorScript_1291859008_1291859050(editorId_1291859051) {
  var result_1291859052 = false;

    result_1291859052 = scriptIsTextEditor_1291859012(editorId_1291859051);

  return result_1291859052;

}

function scriptIsTextEditorApi_1291859057(HEX3Atmp_1291859010) {
  var result_1291859058 = null;

  BeforeRet: {
    result_1291859058 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859058 = toJson_2818588113(scriptIsTextEditorScript_1291859008_1291859050(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859010, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym697_1291859068 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291859073 = [mnewString(0)];
    fmtRes_1291859073[0].push.apply(fmtRes_1291859073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym697_1291859068 || [],fmtRes_1291859073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859058;

}

function scriptIsAstEditorScript_1291859077_1291859119(editorId_1291859120) {
  var result_1291859121 = false;

    result_1291859121 = scriptIsAstEditor_1291859081(editorId_1291859120);

  return result_1291859121;

}

function scriptIsAstEditorApi_1291859126(HEX3Atmp_1291859079) {
  var result_1291859127 = null;

  BeforeRet: {
    result_1291859127 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859127 = toJson_2818588113(scriptIsAstEditorScript_1291859077_1291859119(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859079, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym706_1291859137 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291859142 = [mnewString(0)];
    fmtRes_1291859142[0].push.apply(fmtRes_1291859142[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859142, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym706_1291859137 || [],fmtRes_1291859142[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859127;

}

function scriptRunActionForScript_1291859145_1291859212(editorId_1291859213, action_1291859214, arg_1291859215) {
    scriptRunActionFor_1291859149(editorId_1291859213, action_1291859214, arg_1291859215);

  
}

function scriptRunActionForApi_1291859221(HEX3Atmp_1291859147) {
  var result_1291859222 = null;

    result_1291859222 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291859145_1291859212(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859147, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859147, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859147, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym716_1291859238 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291859243 = [mnewString(0)];
    fmtRes_1291859243[0].push.apply(fmtRes_1291859243[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859243, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym716_1291859238 || [],fmtRes_1291859243[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859222;

}

function scriptInsertTextIntoScript_1291859246_1291859284(editorId_1291859285, text_1291859286) {
    scriptInsertTextInto_1291859250(editorId_1291859285, text_1291859286);

  
}

function scriptInsertTextIntoApi_1291859291(HEX3Atmp_1291859248) {
  var result_1291859292 = null;

    result_1291859292 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291859246_1291859284(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859248, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859248, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym726_1291859303 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291859308 = [mnewString(0)];
    fmtRes_1291859308[0].push.apply(fmtRes_1291859308[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859308, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym726_1291859303 || [],fmtRes_1291859308[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859292;

}

function toJson_2818584286(a_2818584288, opt_2818584289) {
  var result_2818584290 = null;

    result_2818584290 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584290, [108,105,110,101], toJson_2818584299(a_2818584288["Field0"], opt_2818584289));
    HEX5BHEX5DHEX3D_1627391903(result_2818584290, [99,111,108,117,109,110], toJson_2818584299(a_2818584288["Field1"], opt_2818584289));

  return result_2818584290;

}

function toJson_2818584273(a_2818584275, opt_2818584276) {
  var result_2818584277 = null;

    result_2818584277 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818584277, [102,105,114,115,116], toJson_2818584286(a_2818584275["Field0"], opt_2818584276));
    HEX5BHEX5DHEX3D_1627391903(result_2818584277, [108,97,115,116], toJson_2818584286(a_2818584275["Field1"], opt_2818584276));

  return result_2818584277;

}

function scriptTextEditorSelectionScript_1291859311_1291859354(editorId_1291859355) {
  var result_1291859356 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291859356 = nimCopy(result_1291859356, scriptTextEditorSelection_1291859315(editorId_1291859355), NTI2231369739);

  return result_1291859356;

}

function scriptTextEditorSelectionApi_1291859361(HEX3Atmp_1291859313) {
  var result_1291859362 = null;

  BeforeRet: {
    result_1291859362 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859362 = toJson_2818584273(scriptTextEditorSelectionScript_1291859311_1291859354(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859313, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym735_1291859372 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291859377 = [mnewString(0)];
    fmtRes_1291859377[0].push.apply(fmtRes_1291859377[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859377, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym735_1291859372 || [],fmtRes_1291859377[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859362;

}

function scriptSetTextEditorSelectionScript_1291859384_1291859426(editorId_1291859427, selection_1291859428) {
    scriptSetTextEditorSelection_1291859388(editorId_1291859427, selection_1291859428);

  
}

function fromJson_2818584084(a_2818584086, b_2818584087, opt_2818584088) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584087, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2818584087}));
    }
    
    if (!((b_2818584087.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584087.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584114 = 0;
    var numMatchedHEX60gensym25_2818584115 = 0;
    numHEX60gensym25_2818584114 = addInt(numHEX60gensym25_2818584114, 1);
    if (hasKey_1627393154(b_2818584087, [108,105,110,101])) {
    numMatchedHEX60gensym25_2818584115 = addInt(numMatchedHEX60gensym25_2818584115, 1);
    fromJson_2818583187(a_2818584086, "Field0", HEX5BHEX5D_1627393037(b_2818584087, [108,105,110,101]), opt_2818584088);
    }
    else {
    if (opt_2818584088.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2818584087, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584114 = addInt(numHEX60gensym25_2818584114, 1);
    if (hasKey_1627393154(b_2818584087, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2818584115 = addInt(numMatchedHEX60gensym25_2818584115, 1);
    fromJson_2818583187(a_2818584086, "Field1", HEX5BHEX5D_1627393037(b_2818584087, [99,111,108,117,109,110]), opt_2818584088);
    }
    else {
    if (opt_2818584088.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2818584087, 2)]));
      }
      
    }
    }
    if ((opt_2818584088.allowExtraKeys && opt_2818584088.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584088.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584114 == numMatchedHEX60gensym25_2818584115))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584114 == numMatchedHEX60gensym25_2818584115);
    }
    else {
    if (opt_2818584088.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584087) == numMatchedHEX60gensym25_2818584115);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584087) == numHEX60gensym25_2818584114) && (numHEX60gensym25_2818584114 == numMatchedHEX60gensym25_2818584115));
    }
    }}
    var okHEX60gensym25_2818584176 = Temporary1;
    if (!(okHEX60gensym25_2818584176)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584087)), HEX24_369098760(numHEX60gensym25_2818584114), [67,117,114,115,111,114], pretty_1627394477(b_2818584087, 2)]));
    }
    

  
}

function fromJson_2818584030(a_2818584032, b_2818584033, opt_2818584034) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818584033, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2818584033}));
    }
    
    if (!((b_2818584033.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2818584033.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2818584060 = 0;
    var numMatchedHEX60gensym25_2818584061 = 0;
    numHEX60gensym25_2818584060 = addInt(numHEX60gensym25_2818584060, 1);
    if (hasKey_1627393154(b_2818584033, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2818584061 = addInt(numMatchedHEX60gensym25_2818584061, 1);
    fromJson_2818584084(a_2818584032["Field0"], HEX5BHEX5D_1627393037(b_2818584033, [102,105,114,115,116]), opt_2818584034);
    }
    else {
    if (opt_2818584034.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584033, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2818584060 = addInt(numHEX60gensym25_2818584060, 1);
    if (hasKey_1627393154(b_2818584033, [108,97,115,116])) {
    numMatchedHEX60gensym25_2818584061 = addInt(numMatchedHEX60gensym25_2818584061, 1);
    fromJson_2818584084(a_2818584032["Field1"], HEX5BHEX5D_1627393037(b_2818584033, [108,97,115,116]), opt_2818584034);
    }
    else {
    if (opt_2818584034.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584033, 2)]));
      }
      
    }
    }
    if ((opt_2818584034.allowExtraKeys && opt_2818584034.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2818584034.allowExtraKeys) {
    if (!((numHEX60gensym25_2818584060 == numMatchedHEX60gensym25_2818584061))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2818584060 == numMatchedHEX60gensym25_2818584061);
    }
    else {
    if (opt_2818584034.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2818584033) == numMatchedHEX60gensym25_2818584061);
    }
    else {
    Temporary1 = ((len_1627392983(b_2818584033) == numHEX60gensym25_2818584060) && (numHEX60gensym25_2818584060 == numMatchedHEX60gensym25_2818584061));
    }
    }}
    var okHEX60gensym25_2818584214 = Temporary1;
    if (!(okHEX60gensym25_2818584214)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2818584033)), HEX24_369098760(numHEX60gensym25_2818584060), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2818584033, 2)]));
    }
    

  
}

function jsonTo_2818585186(b_2818585188, opt_2818585190) {
  var result_2818585191 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2818584030(result_2818585191[0], b_2818585188, opt_2818585190);

  return result_2818585191[0];

}

function scriptSetTextEditorSelectionApi_1291859433(HEX3Atmp_1291859386) {
  var result_1291859434 = null;

    result_1291859434 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291859384_1291859426(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859386, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585186(HEX5BHEX5D_1627393116(HEX3Atmp_1291859386, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym744_1291859445 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291859450 = [mnewString(0)];
    fmtRes_1291859450[0].push.apply(fmtRes_1291859450[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859450, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym744_1291859445 || [],fmtRes_1291859450[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859434;

}

function toJson_2818584261(a_2818584263, opt_2818584264) {
  var result_2818584265 = null;

    result_2818584265 = newJArray_1627390082();
    Label1: {
      var ai_2818584272 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871180 = 0;
      var L_536871181 = (a_2818584263).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871180 < L_536871181)) break Label3;
            ai_2818584272 = a_2818584263[chckIndx(i_536871180, 0, (a_2818584263).length - 1)];
            add_1627390190(result_2818584265, toJson_2818584273(ai_2818584272, opt_2818584264));
            i_536871180 = addInt(i_536871180, 1);
            if (!(((a_2818584263).length == L_536871181))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818584265;

}

function scriptTextEditorSelectionsScript_1291859453_1291859504(editorId_1291859505) {
  var result_1291859506 = [];

    result_1291859506 = nimCopy(null, scriptTextEditorSelections_1291859457(editorId_1291859505), NTI1291854977);

  return result_1291859506;

}

function scriptTextEditorSelectionsApi_1291859511(HEX3Atmp_1291859455) {
  var result_1291859512 = null;

  BeforeRet: {
    result_1291859512 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859512 = toJson_2818584261(scriptTextEditorSelectionsScript_1291859453_1291859504(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859455, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym753_1291859522 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291859527 = [mnewString(0)];
    fmtRes_1291859527[0].push.apply(fmtRes_1291859527[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859527, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym753_1291859522 || [],fmtRes_1291859527[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859512;

}

function scriptSetTextEditorSelectionsScript_1291859530_1291859572(editorId_1291859573, selections_1291859574) {
    scriptSetTextEditorSelections_1291859534(editorId_1291859573, selections_1291859574);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet291[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2818583975(a_2818583977, a_2818583977_Idx, b_2818583978, opt_2818583979) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2818583978, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2818583978}));
    }
    
    if (a_2818583977[a_2818583977_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2818583978), 0, 2147483647), Temporary1)) { for (var i = a_2818583977[a_2818583977_Idx].length ; i < Temporary1 ; ++i) a_2818583977[a_2818583977_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2818583977[a_2818583977_Idx].length = Temporary1; };
    Label2: {
      var i_2818584028 = 0;
      var val_2818584029 = null;
      var colontmp__536871186 = [];
      colontmp__536871186 = getElems_1627390175(b_2818583978, []);
      var i_536871188 = 0;
      var L_536871189 = (colontmp__536871186).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871188 < L_536871189)) break Label4;
            i_2818584028 = i_536871188;
            val_2818584029 = colontmp__536871186[chckIndx(i_536871188, 0, (colontmp__536871186).length - 1)];
            fromJson_2818584030(a_2818583977[a_2818583977_Idx][chckIndx(i_2818584028, 0, (a_2818583977[a_2818583977_Idx]).length - 1)], val_2818584029, opt_2818583979);
            i_536871188 = addInt(i_536871188, 1);
            if (!(((colontmp__536871186).length == L_536871189))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2818583969(b_2818583971, opt_2818583973) {
  var result_2818583974 = [[]];

    fromJson_2818583975(result_2818583974, 0, b_2818583971, opt_2818583973);

  return result_2818583974[0];

}

function scriptSetTextEditorSelectionsApi_1291859579(HEX3Atmp_1291859532) {
  var result_1291859580 = null;

    result_1291859580 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291859530_1291859572(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859532, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583969(HEX5BHEX5D_1627393116(HEX3Atmp_1291859532, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym762_1291859591 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291859596 = [mnewString(0)];
    fmtRes_1291859596[0].push.apply(fmtRes_1291859596[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859596, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym762_1291859591 || [],fmtRes_1291859596[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859580;

}

function scriptGetTextEditorLineScript_1291859599_1291859646(editorId_1291859647, line_1291859648) {
  var result_1291859649 = [];

    result_1291859649 = nimCopy(null, scriptGetTextEditorLine_1291859603(editorId_1291859647, line_1291859648), NTI33554449);

  return result_1291859649;

}

function scriptGetTextEditorLineApi_1291859655(HEX3Atmp_1291859601) {
  var result_1291859656 = null;

  BeforeRet: {
    result_1291859656 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859656 = toJson_1811939932(scriptGetTextEditorLineScript_1291859599_1291859646(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859601, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859601, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym772_1291859671 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291859676 = [mnewString(0)];
    fmtRes_1291859676[0].push.apply(fmtRes_1291859676[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859676, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym772_1291859671 || [],fmtRes_1291859676[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859656;

}

function scriptGetTextEditorLineCountScript_1291859679_1291859725(editorId_1291859726) {
  var result_1291859727 = 0;

    result_1291859727 = scriptGetTextEditorLineCount_1291859683(editorId_1291859726);

  return result_1291859727;

}

function scriptGetTextEditorLineCountApi_1291859732(HEX3Atmp_1291859681) {
  var result_1291859733 = null;

  BeforeRet: {
    result_1291859733 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859733 = toJson_2818584299(scriptGetTextEditorLineCountScript_1291859679_1291859725(jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859681, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym782_1291859743 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291859748 = [mnewString(0)];
    fmtRes_1291859748[0].push.apply(fmtRes_1291859748[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859748, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym782_1291859743 || [],fmtRes_1291859748[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859733;

}

function scriptGetOptionIntScript_1291859762_1291859778(path_1291859779, default_1291859780) {
  var result_1291859781 = 0;

    result_1291859781 = scriptGetOptionInt_1291859766(path_1291859779, default_1291859780);

  return result_1291859781;

}

function scriptGetOptionIntApi_1291859787(HEX3Atmp_1291859764) {
  var result_1291859788 = null;

  BeforeRet: {
    result_1291859788 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859788 = toJson_2818584299(scriptGetOptionIntScript_1291859762_1291859778(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859764, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291859764, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym792_1291859803 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291859808 = [mnewString(0)];
    fmtRes_1291859808[0].push.apply(fmtRes_1291859808[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859808, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym792_1291859803 || [],fmtRes_1291859808[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859788;

}

function toJson_1291859907(a_1291859909, opt_1291859910) {
  var result_1291859911 = null;

    result_1291859911 = HEX25_1627391792(a_1291859909);

  return result_1291859911;

}

function scriptGetOptionFloatScript_1291859812_1291859828(path_1291859829, default_1291859830) {
  var result_1291859831 = 0.0;

    result_1291859831 = scriptGetOptionFloat_1291859816(path_1291859829, default_1291859830);

  return result_1291859831;

}

function initFromJson_1291859876(dst_1291859878, dst_1291859878_Idx, jsonNode_1291859879, jsonPath_1291859880, jsonPath_1291859880_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291859879.kind == 4)) {
    var Temporary1 = jsonNode_1291859879;
    if (ConstSet292[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291859885 = NaN;
      dst_1291859878[dst_1291859878_Idx] = b_1291859885;
      break;
    case "inf":
      var b_1291859886 = Infinity;
      dst_1291859878[dst_1291859878_Idx] = b_1291859886;
      break;
    case "-inf":
      var b_1291859887 = -Infinity;
      dst_1291859878[dst_1291859878_Idx] = b_1291859887;
      break;
    default: 
      var Temporary2 = jsonNode_1291859879;
      if (ConstSet293[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291859879, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291859880[jsonPath_1291859880_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet294[jsonNode_1291859879.kind] != undefined))) {
      var msgHEX60gensym806_1291859901 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet295), nimCopy(null, jsonPath_1291859880[jsonPath_1291859880_Idx], NTI33554449), reprEnum(jsonNode_1291859879.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym806_1291859901, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291859879.kind == 3)) {
      var Temporary3 = jsonNode_1291859879;
      if (ConstSet296[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291859878[dst_1291859878_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291859879;
        if (ConstSet297[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291859878[dst_1291859878_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291859865(node_1291859868) {
  var result_1291859870 = [0.0];

    var jsonPath_1291859871 = [[]];
    result_1291859870[0] = 0.0;
    initFromJson_1291859876(result_1291859870, 0, node_1291859868, jsonPath_1291859871, 0);

  return result_1291859870[0];

}

function fromJson_1291859850(a_1291859852, a_1291859852_Idx, b_1291859853, opt_1291859854) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291859853, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291859853}));
    }
    
    a_1291859852[a_1291859852_Idx] = to_1291859865(b_1291859853);

  
}

function jsonTo_1291859844(b_1291859846, opt_1291859848) {
  var result_1291859849 = [0.0];

    fromJson_1291859850(result_1291859849, 0, b_1291859846, opt_1291859848);

  return result_1291859849[0];

}

function scriptGetOptionFloatApi_1291859837(HEX3Atmp_1291859814) {
  var result_1291859838 = null;

  BeforeRet: {
    result_1291859838 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859838 = toJson_1291859907(scriptGetOptionFloatScript_1291859812_1291859828(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859814, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291859844(HEX5BHEX5D_1627393116(HEX3Atmp_1291859814, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym802_1291859918 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291859923 = [mnewString(0)];
    fmtRes_1291859923[0].push.apply(fmtRes_1291859923[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859923, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym802_1291859918 || [],fmtRes_1291859923[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859838;

}

function scriptGetOptionBoolScript_1291859927_1291859943(path_1291859944, default_1291859945) {
  var result_1291859946 = false;

    result_1291859946 = scriptGetOptionBool_1291859931(path_1291859944, default_1291859945);

  return result_1291859946;

}

function scriptGetOptionBoolApi_1291859952(HEX3Atmp_1291859929) {
  var result_1291859953 = null;

  BeforeRet: {
    result_1291859953 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859953 = toJson_2818588113(scriptGetOptionBoolScript_1291859927_1291859943(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859929, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291859929, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym818_1291859968 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291859973 = [mnewString(0)];
    fmtRes_1291859973[0].push.apply(fmtRes_1291859973[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859973, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym818_1291859968 || [],fmtRes_1291859973[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859953;

}

function scriptGetOptionStringScript_1291859977_1291859993(path_1291859994, default_1291859995) {
  var result_1291859996 = [];

    result_1291859996 = nimCopy(null, scriptGetOptionString_1291859981(path_1291859994, default_1291859995), NTI33554449);

  return result_1291859996;

}

function scriptGetOptionStringApi_1291860002(HEX3Atmp_1291859979) {
  var result_1291860003 = null;

  BeforeRet: {
    result_1291860003 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291860003 = toJson_1811939932(scriptGetOptionStringScript_1291859977_1291859993(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859979, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859979, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym828_1291860018 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291860023 = [mnewString(0)];
    fmtRes_1291860023[0].push.apply(fmtRes_1291860023[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860023, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym828_1291860018 || [],fmtRes_1291860023[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291860003;

}

function scriptSetOptionIntScript_1291860027_1291860076(path_1291860077, value_1291860078) {
    scriptSetOptionInt_1291860031(path_1291860077, value_1291860078);

  
}

function scriptSetOptionIntApi_1291860083(HEX3Atmp_1291860029) {
  var result_1291860084 = null;

    result_1291860084 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291860027_1291860076(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860029, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291860029, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym837_1291860095 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291860100 = [mnewString(0)];
    fmtRes_1291860100[0].push.apply(fmtRes_1291860100[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860100, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym837_1291860095 || [],fmtRes_1291860100[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860084;

}

function scriptSetOptionFloatScript_1291860109_1291860158(path_1291860159, value_1291860160) {
    scriptSetOptionFloat_1291860113(path_1291860159, value_1291860160);

  
}

function scriptSetOptionFloatApi_1291860165(HEX3Atmp_1291860111) {
  var result_1291860166 = null;

    result_1291860166 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291860109_1291860158(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860111, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291859844(HEX5BHEX5D_1627393116(HEX3Atmp_1291860111, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym851_1291860177 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291860182 = [mnewString(0)];
    fmtRes_1291860182[0].push.apply(fmtRes_1291860182[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860182, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym851_1291860177 || [],fmtRes_1291860182[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860166;

}

function scriptSetOptionBoolScript_1291860191_1291860240(path_1291860241, value_1291860242) {
    scriptSetOptionBool_1291860195(path_1291860241, value_1291860242);

  
}

function scriptSetOptionBoolApi_1291860247(HEX3Atmp_1291860193) {
  var result_1291860248 = null;

    result_1291860248 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291860191_1291860240(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860193, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_1291860193, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym865_1291860259 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291860264 = [mnewString(0)];
    fmtRes_1291860264[0].push.apply(fmtRes_1291860264[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860264, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym865_1291860259 || [],fmtRes_1291860264[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860248;

}

function scriptSetOptionStringScript_1291860273_1291860322(path_1291860323, value_1291860324) {
    scriptSetOptionString_1291860277(path_1291860323, value_1291860324);

  
}

function scriptSetOptionStringApi_1291860329(HEX3Atmp_1291860275) {
  var result_1291860330 = null;

    result_1291860330 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291860273_1291860322(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860275, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860275, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_1291860341 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291860346 = [mnewString(0)];
    fmtRes_1291860346[0].push.apply(fmtRes_1291860346[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860346, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_1291860341 || [],fmtRes_1291860346[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860330;

}

function scriptSetCallbackScript_1291860355_1291860411(path_1291860412, id_1291860413) {
    scriptSetCallback_1291860359(path_1291860412, id_1291860413);

  
}

function scriptSetCallbackApi_1291860418(HEX3Atmp_1291860357) {
  var result_1291860419 = null;

    result_1291860419 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291860355_1291860411(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291860357, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_1291860357, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym893_1291860430 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291860435 = [mnewString(0)];
    fmtRes_1291860435[0].push.apply(fmtRes_1291860435[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291860435, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym893_1291860430 || [],fmtRes_1291860435[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291860419;

}

function dispatch_1291860446(command_1291860445, arg_1291860444) {
    var Temporary1;

  var result_1291860448 = ({val: null});

    switch (toJSStr(command_1291860445)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2818590421(getBackendApi_1291853858(arg_1291860444));
      break;
    case "saveAppState":
    case "save-app-state":
      Temporary1 = some_2818590421(saveAppStateApi_1291854162(arg_1291860444));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2818590421(requestRenderApi_1291854250(arg_1291860444));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2818590421(setHandleInputsApi_1291854305(arg_1291860444));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2818590421(setHandleActionsApi_1291854365(arg_1291860444));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2818590421(setConsumeAllActionsApi_1291854425(arg_1291860444));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2818590421(setConsumeAllInputApi_1291854485(arg_1291860444));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2818590421(openGithubWorkspaceApi_1291854561(arg_1291860444));
      break;
    case "openAbsytreeServerWorkspace":
    case "open-absytree-server-workspace":
      Temporary1 = some_2818590421(openAbsytreeServerWorkspaceApi_1291854627(arg_1291860444));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818590421(getFlagApi2_1291854694(arg_1291860444));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818590421(setFlagApi2_1291854814(arg_1291860444));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2818590421(toggleFlagApi_1291854877(arg_1291860444));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2818590421(setOptionApi_1291854971(arg_1291860444));
      break;
    case "quit":
      Temporary1 = some_2818590421(quitApi_1291855025(arg_1291860444));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2818590421(changeFontSizeApi_1291855072(arg_1291860444));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2818590421(changeLayoutPropApi_1291855376(arg_1291860444));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2818590421(toggleStatusBarLocationApi_1291855437(arg_1291860444));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2818590421(createViewApi_1291855486(arg_1291860444));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2818590421(closeCurrentViewApi_1291855565(arg_1291860444));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2818590421(moveCurrentViewToTopApi_1291855650(arg_1291860444));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2818590421(nextViewApi_1291855701(arg_1291860444));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2818590421(prevViewApi_1291855754(arg_1291860444));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2818590421(moveCurrentViewPrevApi_1291855821(arg_1291860444));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2818590421(moveCurrentViewNextApi_1291855885(arg_1291860444));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2818590421(setLayoutApi_1291855968(arg_1291860444));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2818590421(commandLineApi_1291856024(arg_1291860444));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2818590421(exitCommandLineApi_1291856077(arg_1291860444));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2818590421(executeCommandLineApi_1291856130(arg_1291860444));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2818590421(openFileApi_1291856232(arg_1291860444));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2818590421(writeFileApi_1291856415(arg_1291860444));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2818590421(loadFileApi_1291856484(arg_1291860444));
      break;
    case "removeFromLocalStorage":
    case "remove-from-local-storage":
      Temporary1 = some_2818590421(removeFromLocalStorageApi_1291856549(arg_1291860444));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2818590421(loadThemeApi_1291856632(arg_1291860444));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2818590421(chooseThemeApi_1291856959(arg_1291860444));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2818590421(chooseFileApi_1291857554(arg_1291860444));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2818590421(setGithubAccessTokenApi_1291857632(arg_1291860444));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2818590421(reloadConfigApi_1291857694(arg_1291860444));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2818590421(logOptionsApi_1291857738(arg_1291860444));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2818590421(clearCommandsApi_1291857785(arg_1291860444));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2818590421(getAllEditorsApi_1291858066(arg_1291860444));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818590421(setModeApi22_1291858176(arg_1291860444));
      break;
    case "mode":
      Temporary1 = some_2818590421(modeApi22_1291858229(arg_1291860444));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818590421(getContextWithModeApi22_1291858283(arg_1291860444));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2818590421(scriptRunActionApi_1291858546(arg_1291860444));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2818590421(scriptLogApi_1291858582(arg_1291860444));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2818590421(addCommandScriptApi_1291858644(arg_1291860444));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2818590421(removeCommandApi_1291858720(arg_1291860444));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2818590421(getActivePopupApi_1291858765(arg_1291860444));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2818590421(getActiveEditorApi_1291858796(arg_1291860444));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2818590421(loadCurrentConfigApi_1291858892(arg_1291860444));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2818590421(sourceCurrentDocumentApi_1291858959(arg_1291860444));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2818590421(getEditorApi_1291858989(arg_1291860444));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2818590421(scriptIsTextEditorApi_1291859057(arg_1291860444));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2818590421(scriptIsAstEditorApi_1291859126(arg_1291860444));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2818590421(scriptRunActionForApi_1291859221(arg_1291860444));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2818590421(scriptInsertTextIntoApi_1291859291(arg_1291860444));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2818590421(scriptTextEditorSelectionApi_1291859361(arg_1291860444));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2818590421(scriptSetTextEditorSelectionApi_1291859433(arg_1291860444));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2818590421(scriptTextEditorSelectionsApi_1291859511(arg_1291860444));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2818590421(scriptSetTextEditorSelectionsApi_1291859579(arg_1291860444));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2818590421(scriptGetTextEditorLineApi_1291859655(arg_1291860444));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2818590421(scriptGetTextEditorLineCountApi_1291859732(arg_1291860444));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2818590421(scriptGetOptionIntApi_1291859787(arg_1291860444));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2818590421(scriptGetOptionFloatApi_1291859837(arg_1291860444));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2818590421(scriptGetOptionBoolApi_1291859952(arg_1291860444));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2818590421(scriptGetOptionStringApi_1291860002(arg_1291860444));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2818590421(scriptSetOptionIntApi_1291860083(arg_1291860444));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2818590421(scriptSetOptionFloatApi_1291860165(arg_1291860444));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2818590421(scriptSetOptionBoolApi_1291860247(arg_1291860444));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2818590421(scriptSetOptionStringApi_1291860329(arg_1291860444));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2818590421(scriptSetCallbackApi_1291860418(arg_1291860444));
      break;
    default: 
      Temporary1 = none_2818590617();
      break;
    }
    result_1291860448 = nimCopy(result_1291860448, Temporary1, NTI2818584054);

  return result_1291860448;

}

function handleAction_1291848862(self_1291848863, action_1291848864, arg_1291848865) {
  var result_1291860672 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848864, NTI33554449), nimCopy(null, arg_1291848865, NTI33554449)])]);
++excHandler;
    try {
    if (false) {
    result_1291860672 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291860682 = [mnewString(0)];
    fmtRes_1291860682[0].push.apply(fmtRes_1291860682[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291860682, 0, action_1291848864, []);
    fmtRes_1291860682[0].push.apply(fmtRes_1291860682[0], [32]);;
    formatValue_721420459(fmtRes_1291860682, 0, arg_1291848865, []);
    fmtRes_1291860682[0].push.apply(fmtRes_1291860682[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291860682, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291860682[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291860672 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    var args_1291860683 = newJArray_1627390082();
    Label2: {
      var a_1291860684 = null;
      var colontmp__536871068 = null;
      colontmp__536871068 = newStringStream_1660945417(arg_1291848865);
      var p_536871069 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871069[0], colontmp__536871068, [], false);
      try {
      var _ = getTok_1694499270(p_536871069[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871069[0].tok == 1))) break Label5;
            a_1291860684 = parseJson_1627395211(p_536871069[0], false, false, 0);
            add_1627390190(args_1291860683, a_1291860684);
          }
      };
      } finally {
      close_1694498967(p_536871069[0]);
      }
    };
    result_1291860672 = isSome_2818590685(dispatch_1291860446(action_1291848864, args_1291860683));
    break BeforeRet;
  };

  return result_1291860672;

}

function fromJson_1291853109(a_1291853111, b_1291853112, opt_1291853113) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853112, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853112}));
    }
    
    if (!((b_1291853112.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853112.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853148 = 0;
    var numMatchedHEX60gensym16_1291853149 = 0;
    numHEX60gensym16_1291853148 = addInt(numHEX60gensym16_1291853148, 1);
    if (hasKey_1627393154(b_1291853112, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853149 = addInt(numMatchedHEX60gensym16_1291853149, 1);
    fromJson_1811939890(a_1291853111, "filename", HEX5BHEX5D_1627393037(b_1291853112, [102,105,108,101,110,97,109,101]), opt_1291853113);
    }
    else {
    if (opt_1291853113.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853112, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853148 = addInt(numHEX60gensym16_1291853148, 1);
    if (hasKey_1627393154(b_1291853112, [97,115,116])) {
    numMatchedHEX60gensym16_1291853149 = addInt(numMatchedHEX60gensym16_1291853149, 1);
    fromJson_2818584229(a_1291853111, "ast", HEX5BHEX5D_1627393037(b_1291853112, [97,115,116]), opt_1291853113);
    }
    else {
    if (opt_1291853113.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853112, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853148 = addInt(numHEX60gensym16_1291853148, 1);
    if (hasKey_1627393154(b_1291853112, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853149 = addInt(numMatchedHEX60gensym16_1291853149, 1);
    fromJson_1811939890(a_1291853111, "languageID", HEX5BHEX5D_1627393037(b_1291853112, [108,97,110,103,117,97,103,101,73,68]), opt_1291853113);
    }
    else {
    if (opt_1291853113.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853112, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853148 = addInt(numHEX60gensym16_1291853148, 1);
    if (hasKey_1627393154(b_1291853112, [97,112,112,70,105,108,101])) {
    numMatchedHEX60gensym16_1291853149 = addInt(numMatchedHEX60gensym16_1291853149, 1);
    fromJson_2818584229(a_1291853111, "appFile", HEX5BHEX5D_1627393037(b_1291853112, [97,112,112,70,105,108,101]), opt_1291853113);
    }
    else {
    if (opt_1291853113.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,112,112,70,105,108,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853112, 2)]));
      }
      
    }
    }
    if ((opt_1291853113.allowExtraKeys && opt_1291853113.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853113.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853148 == numMatchedHEX60gensym16_1291853149))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853148 == numMatchedHEX60gensym16_1291853149);
    }
    else {
    if (opt_1291853113.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853112) == numMatchedHEX60gensym16_1291853149);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853112) == numHEX60gensym16_1291853148) && (numHEX60gensym16_1291853148 == numMatchedHEX60gensym16_1291853149));
    }
    }}
    var okHEX60gensym16_1291853246 = Temporary1;
    if (!(okHEX60gensym16_1291853246)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853112)), HEX24_369098760(numHEX60gensym16_1291853148), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853112, 2)]));
    }
    

  
}

function fromJson_1291853081(a_1291853083, a_1291853083_Idx, b_1291853084, opt_1291853085) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853084, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853084}));
    }
    
    if (a_1291853083[a_1291853083_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853084), 0, 2147483647), Temporary1)) { for (var i = a_1291853083[a_1291853083_Idx].length ; i < Temporary1 ; ++i) a_1291853083[a_1291853083_Idx].push(({filename: [], ast: false, languageID: [], appFile: false})); }
               else { a_1291853083[a_1291853083_Idx].length = Temporary1; };
    Label2: {
      var i_1291853107 = 0;
      var val_1291853108 = null;
      var colontmp__536871213 = [];
      colontmp__536871213 = getElems_1627390175(b_1291853084, []);
      var i_536871214 = 0;
      var L_536871215 = (colontmp__536871213).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871214 < L_536871215)) break Label4;
            i_1291853107 = i_536871214;
            val_1291853108 = colontmp__536871213[chckIndx(i_536871214, 0, (colontmp__536871213).length - 1)];
            fromJson_1291853109(a_1291853083[a_1291853083_Idx][chckIndx(i_1291853107, 0, (a_1291853083[a_1291853083_Idx]).length - 1)], val_1291853108, opt_1291853085);
            i_536871214 = addInt(i_536871214, 1);
            if (!(((colontmp__536871213).length == L_536871215))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852884(a_1291852886, b_1291852887, opt_1291852888) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852887, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852887}));
    }
    
    if (!((b_1291852887.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852887.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852930 = 0;
    var numMatchedHEX60gensym16_1291852931 = 0;
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_1811939890(a_1291852886, "theme", HEX5BHEX5D_1627393037(b_1291852887, [116,104,101,109,101]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_2818585574(a_1291852886, "fontSize", HEX5BHEX5D_1627393037(b_1291852887, [102,111,110,116,83,105,122,101]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_1811939890(a_1291852886, "fontRegular", HEX5BHEX5D_1627393037(b_1291852887, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_1811939890(a_1291852886, "fontBold", HEX5BHEX5D_1627393037(b_1291852887, [102,111,110,116,66,111,108,100]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_1811939890(a_1291852886, "fontItalic", HEX5BHEX5D_1627393037(b_1291852887, [102,111,110,116,73,116,97,108,105,99]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_1811939890(a_1291852886, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852887, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852930 = addInt(numHEX60gensym16_1291852930, 1);
    if (hasKey_1627393154(b_1291852887, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852931 = addInt(numMatchedHEX60gensym16_1291852931, 1);
    fromJson_1291853081(a_1291852886, "openEditors", HEX5BHEX5D_1627393037(b_1291852887, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852888);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
      }
      
    }
    }
    if ((opt_1291852888.allowExtraKeys && opt_1291852888.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852888.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852930 == numMatchedHEX60gensym16_1291852931))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852930 == numMatchedHEX60gensym16_1291852931);
    }
    else {
    if (opt_1291852888.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852887) == numMatchedHEX60gensym16_1291852931);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852887) == numHEX60gensym16_1291852930) && (numHEX60gensym16_1291852930 == numMatchedHEX60gensym16_1291852931));
    }
    }}
    var okHEX60gensym16_1291853258 = Temporary1;
    if (!(okHEX60gensym16_1291853258)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852887)), HEX24_369098760(numHEX60gensym16_1291852930), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852887, 2)]));
    }
    

  
}

function jsonTo_1291852878(b_1291852880, opt_1291852882) {
  var result_1291852883 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []})];

    fromJson_1291852884(result_1291852883[0], b_1291852880, opt_1291852882);

  return result_1291852883[0];

}

function new_1291853290() {
  var result_1291853293 = null;

  BeforeRet: {
    var r_1291853295 = null;
    r_1291853295 = ({m_type: NTI2801795076});
    result_1291853293 = r_1291853295;
    break BeforeRet;
  };

  return result_1291853293;

}

function newEditor_1291851095(backend_1291851096, platform_1291851097) {
    
function HEX3Aanonymous_1291851111(event_1291851129) {
        handleKeyPress_1291851058(self_1291851099, event_1291851129.Field0, event_1291851129.Field1);

      
    }
    
function HEX3Aanonymous_1291851183(event_1291851201) {
        handleKeyRelease_1291851062(self_1291851099, event_1291851201.Field0, event_1291851201.Field1);

      
    }
    
function HEX3Aanonymous_1291851232(event_1291851250) {
        handleRune_1291851066(self_1291851099, event_1291851250.Field0, event_1291851250.Field1);

      
    }
    
function HEX3Aanonymous_1291851281(event_1291851299) {
        handleMousePress_1291851070(self_1291851099, event_1291851299.Field0, event_1291851299.Field1, event_1291851299.Field2);

      
    }
    
function HEX3Aanonymous_1291851353(event_1291851371) {
        handleMouseRelease_1291851075(self_1291851099, event_1291851371.Field0, event_1291851371.Field1, event_1291851371.Field2);

      
    }
    
function HEX3Aanonymous_1291851402(event_1291851420) {
        handleMouseMove_1291851080(self_1291851099, event_1291851420.Field0, event_1291851420.Field1, event_1291851420.Field2, event_1291851420.Field3);

      
    }
    
function HEX3Aanonymous_1291851474(event_1291851492) {
        handleScroll_1291851086(self_1291851099, event_1291851492.Field1, event_1291851492.Field0, event_1291851492.Field2);

      
    }
    
function HEX3Aanonymous_1291851546(event_1291851564) {
        handleDropFile_1291851091(self_1291851099, event_1291851564.Field0, event_1291851564.Field1);

      
    }
    
function HEX3Aanonymous_1291851618() {
        self_1291851099.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852826(actionHEX60gensym75HEX60gensym76_1291852827, argHEX60gensym75HEX60gensym76_1291852828) {
          var Temporary1;

        var result_1291852829 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852814.config.handleActions) {
          var action_1291852830 = nimCopy(null, actionHEX60gensym75HEX60gensym76_1291852827, NTI33554449);
          var arg_1291852831 = nimCopy(null, argHEX60gensym75HEX60gensym76_1291852828, NTI33554449);
          if (handleAction_1291848862(self_1291851099, action_1291852830, arg_1291852831)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym75HEX60gensym76_1291852832 = Temporary1;
          if (handlerHEX60gensym75_1291852814.config.consumeAllActions) {
          result_1291852829 = 3;
          break BeforeRet;
          }
          
          result_1291852829 = responseHEX60gensym75HEX60gensym76_1291852832;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym75_1291852814.config.consumeAllActions) {
          result_1291852829 = 3;
          break BeforeRet;
          }
          else {
            result_1291852829 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852829;

      }
      
function HEX3Aanonymous_1291852834(inputHEX60gensym75HEX60gensym77_1291852835) {
        var result_1291852836 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852814.config.handleInputs) {
          var input_1291852837 = nimCopy(null, inputHEX60gensym75HEX60gensym77_1291852835, NTI33554449);
          result_1291852836 = 1;
          break BeforeRet;
          }
          else {
            result_1291852836 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852836;

      }
      
function HEX3Aanonymous_1291852857(actionHEX60gensym78HEX60gensym79_1291852858, argHEX60gensym78HEX60gensym79_1291852859) {
          var Temporary1;

        var result_1291852860 = 0;

        BeforeRet: {
          if (handlerHEX60gensym78_1291852845.config.handleActions) {
          var action_1291852861 = nimCopy(null, actionHEX60gensym78HEX60gensym79_1291852858, NTI33554449);
          var arg_1291852862 = nimCopy(null, argHEX60gensym78HEX60gensym79_1291852859, NTI33554449);
          if (handleAction_1291848862(self_1291851099, action_1291852861, arg_1291852862)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym78HEX60gensym79_1291852863 = Temporary1;
          if (handlerHEX60gensym78_1291852845.config.consumeAllActions) {
          result_1291852860 = 3;
          break BeforeRet;
          }
          
          result_1291852860 = responseHEX60gensym78HEX60gensym79_1291852863;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym78_1291852845.config.consumeAllActions) {
          result_1291852860 = 3;
          break BeforeRet;
          }
          else {
            result_1291852860 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852860;

      }
      
function HEX3Aanonymous_1291852865(inputHEX60gensym78HEX60gensym80_1291852866) {
        var result_1291852867 = 0;

        BeforeRet: {
          if (handlerHEX60gensym78_1291852845.config.handleInputs) {
          var input_1291852868 = nimCopy(null, inputHEX60gensym78HEX60gensym80_1291852866, NTI33554449);
          result_1291852867 = 1;
          break BeforeRet;
          }
          else {
            result_1291852867 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852867;

      }
        var Temporary7;
              var Temporary14;
                var Temporary15;
                var Temporary17;

  var result_1291851098 = null;

  BeforeRet: {
    var self_1291851099 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: ({start: 0}), timer: ({start: 0}), frameTimer: ({start: 0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851099 = createWithPrototype(editor_prototype, self_1291851099);
    gEditor = self_1291851099;
    self_1291851099.platform = platform_1291851097;
    self_1291851099.backend = backend_1291851096;
    self_1291851099.statusBarOnTop = false;
    var _ = subscribe_1291851144(platform_1291851097.onKeyPress, HEX3Aanonymous_1291851111);
    var _ = subscribe_1291851144(platform_1291851097.onKeyRelease, HEX3Aanonymous_1291851183);
    var _ = subscribe_1291851144(platform_1291851097.onRune, HEX3Aanonymous_1291851232);
    var _ = subscribe_1291851314(platform_1291851097.onMousePress, HEX3Aanonymous_1291851281);
    var _ = subscribe_1291851314(platform_1291851097.onMouseRelease, HEX3Aanonymous_1291851353);
    var _ = subscribe_1291851435(platform_1291851097.onMouseMove, HEX3Aanonymous_1291851402);
    var _ = subscribe_1291851507(platform_1291851097.onScroll, HEX3Aanonymous_1291851474);
    var _ = subscribe_1291851579(platform_1291851097.onDropFile, HEX3Aanonymous_1291851546);
    var _ = subscribe_1291851651(platform_1291851097.onCloseRequested, HEX3Aanonymous_1291851618);
    self_1291851099.timer = nimCopy(self_1291851099.timer, startTimer_2281701428(), NTI2281701407);
    self_1291851099.frameTimer = nimCopy(self_1291851099.frameTimer, startTimer_2281701428(), NTI2281701407);
    self_1291851099.layout = {m_type: NTI1291845643};
    self_1291851099.layout_props = {props: toTable_1291851661([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2315255944(self_1291851099.platform, 20.0);
    self_1291851099.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851099.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851099.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851099.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851099.editor_defaults = nimCopy(null, [{m_type: NTI2818572510, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2952791527, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849434);
    self_1291851099.workspace = ({folders: []});
    self_1291851099.theme = defaultTheme_2483031631();
    setTheme_1291850998(self_1291851099, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851099.currentView = 0;
    addCommand_2046820734(getEventHandlerConfig_1291849154(self_1291851099, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2046820734(getEventHandlerConfig_1291849154(self_1291851099, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851099.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym75_1291852814 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym75_1291852814.config = getEventHandlerConfig_1291849154(self_1291851099, [101,100,105,116,111,114]);
      handlerHEX60gensym75_1291852814.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(self_1291851099, [101,100,105,116,111,114]));
      handlerHEX60gensym75_1291852814.handleAction = HEX3Aanonymous_1291852826;
      handlerHEX60gensym75_1291852814.handleInput = HEX3Aanonymous_1291852834;
    };
    self_1291851099.eventHandler = handlerHEX60gensym75_1291852814;
    Label2: {
      var handlerHEX60gensym78_1291852845 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym78_1291852845.config = getEventHandlerConfig_1291849154(self_1291851099, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym78_1291852845.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(self_1291851099, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym78_1291852845.handleAction = HEX3Aanonymous_1291852857;
      handlerHEX60gensym78_1291852845.handleInput = HEX3Aanonymous_1291852865;
    };
    self_1291851099.commandLineEventHandler = handlerHEX60gensym78_1291852845;
    self_1291851099.commandLineMode = false;
    self_1291851099.commandLineTextEditor = newTextEditor_2818590815(newTextDocument_3170894353([], [], false), self_1291851099);
    self_1291851099.commandLineTextEditor.renderHeader = false;
    self_1291851099.commandLineTextEditor.lineNumbers = nimCopy(self_1291851099.commandLineTextEditor.lineNumbers, some_3170894395(0), NTI2818572554);
    getCommandLineTextEditor_1291851055(self_1291851099).hideCursorWhenInactive = true;
    var state_1291852877 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []};
++excHandler;
    try {
    state_1291852877 = nimCopy(state_1291852877, jsonTo_1291852878(parseJson_1627395313(loadApplicationFile_2499805202(fs_2499805237, [99,111,110,102,105,103,46,106,115,111,110])), {allowMissingKeys: true, allowExtraKeys: true}), NTI1291845663);
    setTheme_1291850998(self_1291851099, state_1291852877.theme);
    self_1291851099.loadedFontSize = state_1291852877.fontSize;
    fontSizeHEX3D_2315255944(self_1291851099.platform, state_1291852877.fontSize);
    if ((0 < (state_1291852877.fontRegular).length)) {
    self_1291851099.fontRegular = nimCopy(null, state_1291852877.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852877.fontBold).length)) {
    self_1291851099.fontBold = nimCopy(null, state_1291852877.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852877.fontItalic).length)) {
    self_1291851099.fontItalic = nimCopy(null, state_1291852877.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852877.fontBoldItalic).length)) {
    self_1291851099.fontBoldItalic = nimCopy(null, state_1291852877.fontBoldItalic, NTI33554449);
    }
    
    self_1291851099.options = parseJson_1627395313(loadApplicationFile_2499805202(fs_2499805237, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853266 = [mnewString(0)];
    fmtRes_1291853266[0].push.apply(fmtRes_1291853266[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853266, 0, pretty_1627394477(self_1291851099.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853266[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853271 = [mnewString(0)];
    fmtRes_1291853271[0].push.apply(fmtRes_1291853271[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853271, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853271[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
++excHandler;
    try {
    var searchPaths_1291853276 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853281 = HEX7BHEX7D_1627393316(self_1291851099.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853281 == null))) {
    Label5: {
      var sp_1291853285 = null;
      if (!((searchPathsJson_1291853281.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853281.kind, NTI1627389955) || []));
      }
      
      Label6: {
        var i_536870984 = null;
        var colontmp__536870985 = [];
        var Temporary7 = searchPathsJson_1291853281;
        if (ConstSet298[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        colontmp__536870985 = Temporary7.elems;
        var i_536870986 = 0;
        var L_536870987 = (colontmp__536870985).length;
        Label8: {
            Label9: while (true) {
            if (!(i_536870986 < L_536870987)) break Label9;
              i_536870984 = colontmp__536870985[chckIndx(i_536870986, 0, (colontmp__536870985).length - 1)];
              sp_1291853285 = i_536870984;
              searchPaths_1291853276.push(getStr_1627390106(sp_1291853285, []));;
              i_536870986 = addInt(i_536870986, 1);
              if (!(((colontmp__536870985).length == L_536870987))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851099.scriptContext = new_1291853290();
    init_2650800140(self_1291851099.scriptContext, []);
    var _ = false;
    self_1291851099.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853326 = mnewString(0);
    fmtRes_1291853326.push.apply(fmtRes_1291853326, [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853326, NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848866(self_1291851099, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label10: {
      var editorState_1291853349 = ({filename: [], ast: false, languageID: [], appFile: false});
      var i_536870991 = 0;
      var L_536870992 = (state_1291852877.openEditors).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536870991 < L_536870992)) break Label12;
            editorState_1291853349 = state_1291852877.openEditors[chckIndx(i_536870991, 0, (state_1291852877.openEditors).length - 1)];
            Label13: {
              if (editorState_1291853349.ast) {
              Temporary14 = newAstDocument_2952794221(editorState_1291853349.filename, editorState_1291853349.appFile);
              }
              else {
++excHandler;
                try {
                if (editorState_1291853349.appFile) {
                Temporary17 = loadApplicationFile_2499805202(fs_2499805237, editorState_1291853349.filename);
                }
                else {
                Temporary17 = loadFile_2499805191(fs_2499805237, editorState_1291853349.filename);
                }
                
                var fileContent_1291853350 = nimCopy(null, Temporary17, NTI33554449);
                Temporary15 = newTextDocument_3170894353(editorState_1291853349.filename, fileContent_1291853350, editorState_1291853349.appFile);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853360 = [mnewString(0)];
                fmtRes_1291853360[0].push.apply(fmtRes_1291853360[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853360, 0, editorState_1291853349.filename, []);
                fmtRes_1291853360[0].push.apply(fmtRes_1291853360[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853360, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853360[0], NTI33554449)]);
                break Label13;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary14 = Temporary15;
              }
              
              var document_1291853361 = Temporary14;
              createView_1291848950(self_1291851099, document_1291853361);
            };
            i_536870991 = addInt(i_536870991, 1);
            if (!(((state_1291852877.openEditors).length == L_536870992))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851098 = self_1291851099;
    break BeforeRet;
  };

  return result_1291851098;

}

function fromJsonHook_2483028776(color_2483028777, jsonNode_2483028778) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2483028778.kind == 0)) {
    color_2483028777 = nimCopy(color_2483028777, parseHex_2348810482([48,48,48,48,48,48]), NTI2365587459);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2483028778;
    if (ConstSet300[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2483028777 = nimCopy(color_2483028777, parseHexVar_2483028016(Temporary1.str), NTI2365587459);
  };

  
}

function fromJson_2483028808(a_2483028810, b_2483028811, opt_2483028812) {
    if (!(!(HEX3DHEX3D_1627392026(b_2483028811, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2483028811}));
    }
    
    fromJsonHook_2483028776(a_2483028810, b_2483028811);

  
}

function jsonTo_2483028802(b_2483028804, opt_2483028806) {
  var result_2483028807 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2483028808(result_2483028807[0], b_2483028804, opt_2483028806);

  return result_2483028807[0];

}

function hasKey_2483028226(t_2483028229, key_2483028230) {
  var result_2483028231 = false;

    var hc_2483028232 = [0];
    result_2483028231 = (0 <= rawGet_2483028233(t_2483028229, key_2483028230, hc_2483028232, 0));

  return result_2483028231;

}

function contains_2483028220(t_2483028223, key_2483028224) {
  var result_2483028225 = false;

  BeforeRet: {
    result_2483028225 = hasKey_2483028226(t_2483028223, key_2483028224);
    break BeforeRet;
  };

  return result_2483028225;

}

function none_2483028832() {
  var result_2483028839 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2483028839;

}

function HEX5BHEX5D_2483028525(t_2483028528, key_2483028529) {
  var result_2483028530 = null;

    var hcHEX60gensym22_2483028531 = [0];
    var indexHEX60gensym22_2483028538 = rawGet_2483028233(t_2483028528, key_2483028529, hcHEX60gensym22_2483028531, 0);
    if ((0 <= indexHEX60gensym22_2483028538)) {
    result_2483028530 = t_2483028528.data[chckIndx(indexHEX60gensym22_2483028538, 0, (t_2483028528.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2483028529);
    }
    

  return result_2483028530;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2483028783(style_2483028784, jsonNode_2483028785) {
    var Temporary1;

    style_2483028784 = nimCopy(style_2483028784, ConstSet305, NTI2483028483);
    var Temporary1 = jsonNode_2483028785;
    if (ConstSet306[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2483028786 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2483028786, [105,116,97,108,105,99])) {
    style_2483028784[0] = true;
    }
    
    if (contains_855639877(text_2483028786, [98,111,108,100])) {
    style_2483028784[2] = true;
    }
    
    if (contains_855639877(text_2483028786, [117,110,100,101,114,108,105,110,101])) {
    style_2483028784[1] = true;
    }
    

  
}

function fromJson_2483028846(a_2483028848, b_2483028849, opt_2483028850) {
    if (!(!(HEX3DHEX3D_1627392026(b_2483028849, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2483028849}));
    }
    
    fromJsonHook_2483028783(a_2483028848, b_2483028849);

  
}

function jsonTo_2483028840(b_2483028842, opt_2483028844) {
  var result_2483028845 = [{}];

    fromJson_2483028846(result_2483028845[0], b_2483028842, opt_2483028844);

  return result_2483028845[0];

}

function jsonToTheme_2483028866(json_2483028867, opt_2483028868) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2483028869 = null;

    result_2483028869 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2483028869.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2483028867, [116,121,112,101])) {
    result_2483028869.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2483028867, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2483028869.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2483028867, [99,111,108,111,114,115])) {
    Label1: {
      var key_2483028889 = [];
      var value_2483028890 = null;
      var colontmp__536871218 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2483028867, [99,111,108,111,114,115]);
      if (ConstSet299[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871218 = nimCopy(colontmp__536871218, Temporary2.fields, NTI1627389966);
      var L_536871219 = len_1627392114(colontmp__536871218);
      if ((0 < colontmp__536871218.counter)) {
      var h_536871220 = colontmp__536871218.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871220)) break Label4;
            var nxt_536871222 = colontmp__536871218.data[chckIndx(h_536871220, 0, (colontmp__536871218.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871218.data[chckIndx(h_536871220, 0, (colontmp__536871218.data).length - 1)].Field0)) {
            var colontmp__536871224 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871218.data[chckIndx(h_536871220, 0, (colontmp__536871218.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871218.data[chckIndx(h_536871220, 0, (colontmp__536871218.data).length - 1)].Field3}, NTI1627391161);
            key_2483028889 = colontmp__536871224["Field0"];
            value_2483028890 = colontmp__536871224["Field1"];
            HEX5BHEX5DHEX3D_2483028936(result_2483028869.colors, key_2483028889, jsonTo_2483028802(value_2483028890, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871218) == L_536871219))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871220 = nxt_536871222;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2483028867, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2483030201 = null;
      var colontmp__536871235 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2483028867, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet301[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871235 = Temporary6.elems;
      var i_536871236 = 0;
      var L_536871237 = (colontmp__536871235).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871236 < L_536871237)) break Label8;
            item_2483030201 = colontmp__536871235[chckIndx(i_536871236, 0, (colontmp__536871235).length - 1)];
            var scopes_2483030206 = [];
            if (hasKey_1627393154(item_2483030201, [115,99,111,112,101])) {
            var scope_2483030207 = HEX5BHEX5D_1627393037(item_2483030201, [115,99,111,112,101]);
            if ((scope_2483030207.kind == 4)) {
            var Temporary9 = scope_2483030207;
            if (ConstSet302[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2483030206.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2483030219 = null;
                var colontmp__536871227 = [];
                var Temporary12 = scope_2483030207;
                if (ConstSet303[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871227 = Temporary12.elems;
                var i_536871228 = 0;
                var L_536871229 = (colontmp__536871227).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871228 < L_536871229)) break Label14;
                      scopeName_2483030219 = colontmp__536871227[chckIndx(i_536871228, 0, (colontmp__536871227).length - 1)];
                      var Temporary15 = scopeName_2483030219;
                      if (ConstSet304[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2483030206.push(Temporary16);;
                      i_536871228 = addInt(i_536871228, 1);
                      if (!(((colontmp__536871227).length == L_536871229))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2483030206.push([46]);;
            }
            
            var settings_2483030228 = HEX5BHEX5D_1627393037(item_2483030201, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2483030232 = [];
              var i_536871232 = 0;
              var L_536871233 = (scopes_2483030206).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871232 < L_536871233)) break Label19;
                    scope_2483030232 = scopes_2483030206[chckIndx(i_536871232, 0, (scopes_2483030206).length - 1)];
                    if (!(contains_2483028220(result_2483028869.tokenColors, scope_2483030232))) {
                    HEX5BHEX5DHEX3D_2483030334(result_2483028869.tokenColors, scope_2483030232, {foreground: none_2483028832(), background: none_2483028832(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).foreground = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).foreground, some_2483028819(jsonTo_2483028802(HEX5BHEX5D_1627393037(settings_2483030228, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2483027980);
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).background = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).background, some_2483028819(jsonTo_2483028802(HEX5BHEX5D_1627393037(settings_2483030228, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2483027980);
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).fontStyle = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).fontStyle, jsonTo_2483028840(HEX5BHEX5D_1627393037(settings_2483030228, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2483027991);
                    }
                    
                    i_536871232 = addInt(i_536871232, 1);
                    if (!(((scopes_2483030206).length == L_536871233))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871236 = addInt(i_536871236, 1);
            if (!(((colontmp__536871235).length == L_536871237))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2483028869;

}

function some_2483031586(val_2483031588) {
  var result_2483031589 = ({val: null});

    if (!(!((val_2483031588 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2483031589.val = val_2483031588;

  return result_2483031589;

}

function none_2483031611() {
  var result_2483031617 = ({val: null});

  return result_2483031617;

}

function loadFromString_2483031576(input_2483031577, path_2483031578) {
  var result_2483031583 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2483031584 = parseJson_1627395313(input_2483031577);
    var newTheme_2483031585 = jsonToTheme_2483028866(json_2483031584, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2483031585.path = nimCopy(null, path_2483031578, NTI33554449);
    result_2483031583 = nimCopy(result_2483031583, some_2483031586(newTheme_2483031585), NTI2483029956);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2483031604 = [mnewString(0)];
    fmtRes_2483031604[0].push.apply(fmtRes_2483031604[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2483031604, 0, path_2483031578, []);
    fmtRes_2483031604[0].push.apply(fmtRes_2483031604[0], [58,32]);;
    formatValue_721420459(fmtRes_2483031604, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2483031604[0], NTI33554449)]);
    var fmtRes_2483031610 = [mnewString(0)];
    formatValue_721420459(fmtRes_2483031610, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2483031610[0], NTI33554449)]);
    result_2483031583 = nimCopy(result_2483031583, none_2483031611(), NTI2483029956);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2483031583;

}
  var Temporary273;
var rend_536870946 = [new_536870928()];
init_2315255932(rend_536870946[0]);
var initializedEditor_536870947 = [false];
var ed_536870948 = [newEditor_1291851095(2, rend_536870946[0])];
  var oHEX60gensym0_536870952 = loadFromString_2483031576(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851008(oHEX60gensym0_536870952)) Temporary273 = false; else {    var theme_536870975 = get_1291851028(oHEX60gensym0_536870952);
    Temporary273 = true;  }if (Temporary273) {
ed_536870948[0].theme = theme_536870975;
}

setLayout_1291855900(ed_536870948[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870976 = [0.0];
var frameIndex_536870977 = [0];
var hasRequestedRerender_536870978 = [false];
var isRenderInProgress_536870979 = [false];

function color_2365587528(r_2365587529, g_2365587530, b_2365587531, a_2365587532) {
  var result_2365587533 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2365587533 = nimCopy(result_2365587533, {r: r_2365587529, g: g_2365587530, b: b_2365587531, a: a_2365587532}, NTI2365587459);

  return result_2365587533;

}

function rawGet_3238002855(t_3238002858, key_3238002859, hc_3238002860, hc_3238002860_Idx) {
  var result_3238002861 = 0;

  BeforeRet: {
    hc_3238002860[hc_3238002860_Idx] = hash_1325400236(key_3238002859);
    if ((hc_3238002860[hc_3238002860_Idx] == 0)) {
    hc_3238002860[hc_3238002860_Idx] = 314159265;
    }
    
    if (((t_3238002858.data).length == 0)) {
    result_3238002861 = -1;
    break BeforeRet;
    }
    
    var h_3238002916 = (hc_3238002860[hc_3238002860_Idx] & (t_3238002858.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3238002858.data[chckIndx(h_3238002916, 0, (t_3238002858.data).length - 1)].Field0)) break Label2;
          if (((t_3238002858.data[chckIndx(h_3238002916, 0, (t_3238002858.data).length - 1)].Field0 == hc_3238002860[hc_3238002860_Idx]) && (t_3238002858.data[chckIndx(h_3238002916, 0, (t_3238002858.data).length - 1)].Field1 == key_3238002859))) {
          result_3238002861 = h_3238002916;
          break BeforeRet;
          }
          
          h_3238002916 = nextTry_1308622883(h_3238002916, (t_3238002858.data).length - 1);
        }
    };
    result_3238002861 = subInt(-1, h_3238002916);
  };

  return result_3238002861;

}

function hasKey_3238002848(t_3238002851, key_3238002852) {
  var result_3238002853 = false;

    var hc_3238002854 = [0];
    result_3238002853 = (0 <= rawGet_3238002855(t_3238002851, key_3238002852, hc_3238002854, 0));

  return result_3238002853;

}

function contains_3238002842(t_3238002845, key_3238002846) {
  var result_3238002847 = false;

  BeforeRet: {
    result_3238002847 = hasKey_3238002848(t_3238002845, key_3238002846);
    break BeforeRet;
  };

  return result_3238002847;

}

function HEX5BHEX5D_3238003141(t_3238003144, key_3238003145) {
  var result_3238003146 = null;
  var result_3238003146_Idx = 0;

    var hcHEX60gensym22_3238003147 = [0];
    var indexHEX60gensym22_3238003154 = rawGet_3238002855(t_3238003144, key_3238003145, hcHEX60gensym22_3238003147, 0);
    if ((0 <= indexHEX60gensym22_3238003154)) {
    result_3238003146 = t_3238003144.data[chckIndx(indexHEX60gensym22_3238003154, 0, (t_3238003144.data).length - 1)]; result_3238003146_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850842(key_3238003145);
    }
    

  return [result_3238003146, result_3238003146_Idx];

}

function mustRehash_3238003433(t_3238003435) {
  var result_3238003436 = false;

    if (!((t_3238003435.counter < (t_3238003435.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3238003436 = ((mulInt((t_3238003435.data).length, 2) < mulInt(t_3238003435.counter, 3)) || (subInt((t_3238003435.data).length, t_3238003435.counter) < 4));

  return result_3238003436;

}

function rawInsert_3238003882(t_3238003886, data_3238003887, data_3238003887_Idx, key_3238003888, val_3238003889, hc_3238003890, h_3238003891) {
    data_3238003887[data_3238003887_Idx][chckIndx(h_3238003891, 0, (data_3238003887[data_3238003887_Idx]).length - 1)].Field1 = key_3238003888;
    data_3238003887[data_3238003887_Idx][chckIndx(h_3238003891, 0, (data_3238003887[data_3238003887_Idx]).length - 1)].Field2 = val_3238003889;
    data_3238003887[data_3238003887_Idx][chckIndx(h_3238003891, 0, (data_3238003887[data_3238003887_Idx]).length - 1)].Field0 = hc_3238003890;

  
}

function enlarge_3238003588(t_3238003591) {
    var n_3238003594 = [];
    n_3238003594 = new Array(chckRange(mulInt((t_3238003591.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3238003591.data).length, 2), 0, 2147483647) ; ++i) { n_3238003594[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3238003591.data; t_3238003591.data = n_3238003594; n_3238003594 = Temporary1;    Label2: {
      var i_3238003658 = 0;
      var colontmp__536871836 = 0;
      colontmp__536871836 = (n_3238003594).length - 1;
      var res_536871837 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871837 <= colontmp__536871836)) break Label4;
            i_3238003658 = res_536871837;
            var eh_3238003712 = n_3238003594[chckIndx(i_3238003658, 0, (n_3238003594).length - 1)].Field0;
            if (isFilled_1308622880(eh_3238003712)) {
            var j_3238003716 = (eh_3238003712 & (t_3238003591.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3238003591.data[chckIndx(j_3238003716, 0, (t_3238003591.data).length - 1)].Field0)) break Label6;
                  j_3238003716 = nextTry_1308622883(j_3238003716, (t_3238003591.data).length - 1);
                }
            };
            rawInsert_3238003882(t_3238003591, t_3238003591, "data", n_3238003594[chckIndx(i_3238003658, 0, (n_3238003594).length - 1)].Field1, n_3238003594[chckIndx(i_3238003658, 0, (n_3238003594).length - 1)].Field2, eh_3238003712, j_3238003716);
            }
            
            res_536871837 = addInt(res_536871837, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3238004051(t_3238004054, key_3238004055, hc_3238004056) {
  var result_3238004057 = 0;

  BeforeRet: {
    if (((t_3238004054.data).length == 0)) {
    result_3238004057 = -1;
    break BeforeRet;
    }
    
    var h_3238004108 = (hc_3238004056 & (t_3238004054.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3238004054.data[chckIndx(h_3238004108, 0, (t_3238004054.data).length - 1)].Field0)) break Label2;
          if (((t_3238004054.data[chckIndx(h_3238004108, 0, (t_3238004054.data).length - 1)].Field0 == hc_3238004056) && (t_3238004054.data[chckIndx(h_3238004108, 0, (t_3238004054.data).length - 1)].Field1 == key_3238004055))) {
          result_3238004057 = h_3238004108;
          break BeforeRet;
          }
          
          h_3238004108 = nextTry_1308622883(h_3238004108, (t_3238004054.data).length - 1);
        }
    };
    result_3238004057 = subInt(-1, h_3238004108);
  };

  return result_3238004057;

}

function HEX5BHEX5DHEX3D_3238003260(t_3238003263, key_3238003264, val_3238003265) {
    if (((t_3238003263.data).length == 0)) {
    var correctSizeHEX60gensym5_3238003314 = slotsNeeded_1308622891(32);
    t_3238003263.counter = 0;
    t_3238003263.data = new Array(chckRange(correctSizeHEX60gensym5_3238003314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3238003314, 0, 2147483647) ; ++i) { t_3238003263.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3238003319 = [0];
    var index_3238003326 = rawGet_3238002855(t_3238003263, key_3238003264, hc_3238003319, 0);
    if ((0 <= index_3238003326)) {
    t_3238003263.data[chckIndx(index_3238003326, 0, (t_3238003263.data).length - 1)].Field2 = val_3238003265;
    }
    else {
      if (((t_3238003263.data).length == 0)) {
      var correctSizeHEX60gensym8_3238003428 = slotsNeeded_1308622891(32);
      t_3238003263.counter = 0;
      t_3238003263.data = new Array(chckRange(correctSizeHEX60gensym8_3238003428, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3238003428, 0, 2147483647) ; ++i) { t_3238003263.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3238003433(t_3238003263)) {
      enlarge_3238003588(t_3238003263);
      index_3238003326 = rawGetKnownHC_3238004051(t_3238003263, key_3238003264, hc_3238003319[0]);
      }
      
      index_3238003326 = subInt(-1, index_3238003326);
      rawInsert_3238003882(t_3238003263, t_3238003263, "data", key_3238003264, val_3238003265, hc_3238003319[0], index_3238003326);
      t_3238003263.counter = addInt(t_3238003263.counter, 1);
    }
    

  
}

function activeHEX3D_2147483758(self_2147483759, newActive_2147483760) {
    if (!((newActive_2147483760 == self_2147483759.active))) {
    markDirty_2147483686(self_2147483759);
    }
    
    self_2147483759.active = newActive_2147483760;

  
}

function HEX5BHEX5D_3238004305(s_3238004309, x_3238004310) {
  var result_3238004311 = [];

    var a_3238004313 = x_3238004310.a;
    var L_3238004319 = addInt(subInt(subInt((s_3238004309).length, x_3238004310.b), a_3238004313), 1);
    result_3238004311 = new Array(chckRange(L_3238004319, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3238004319, 0, 2147483647) ; ++i) { result_3238004311[i] = null; }    Label1: {
      var i_3238004328 = 0;
      var i_536871841 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871841 < L_3238004319)) break Label3;
            i_3238004328 = i_536871841;
            result_3238004311[chckIndx(i_3238004328, 0, (result_3238004311).length - 1)] = s_3238004309[chckIndx(addInt(i_3238004328, a_3238004313), 0, (s_3238004309).length - 1)];
            i_536871841 = addInt(i_536871841, 1);
          }
      };
    };

  return result_3238004311;

}

function find_3238004533(a_3238004536, item_3238004537) {
  var result_3238004538 = 0;

  BeforeRet: {
    result_3238004538 = 0;
    Label1: {
      var i_3238004551 = null;
      var i_536871845 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871845 < (a_3238004536).length)) break Label3;
            i_3238004551 = a_3238004536[chckIndx(i_536871845, 0, (a_3238004536).length - 1)];
            if ((i_3238004551 == item_3238004537)) {
            break BeforeRet;
            }
            
            result_3238004538 = addInt(result_3238004538, 1);
            i_536871845 = addInt(i_536871845, 1);
          }
      };
    };
    result_3238004538 = -1;
  };

  return result_3238004538;

}

function contains_3238004528(a_3238004530, item_3238004531) {
  var result_3238004532 = false;

  BeforeRet: {
    result_3238004532 = (0 <= find_3238004533(a_3238004530, item_3238004531));
    break BeforeRet;
  };

  return result_3238004532;

}

function contains_2063597754(a_2063597755, b_2063597756) {
  var result_2063597757 = false;

  BeforeRet: {
    result_2063597757 = ((((a_2063597755.x <= b_2063597756.x) && ((b_2063597756.x + b_2063597756.w) <= (a_2063597755.x + a_2063597755.w))) && (a_2063597755.y <= b_2063597756.y)) && ((b_2063597756.y + b_2063597756.h) <= (a_2063597755.y + a_2063597755.h)));
    break BeforeRet;
  };

  return result_2063597757;

}

function invalidate_2332033255(self_2332033256, currentIndex_2332033257, rect_2332033258) {
  BeforeRet: {
    if ((!(intersects_2063597745(self_2332033256.lastBounds, rect_2332033258)) || ((currentIndex_2332033257 <= self_2332033256.lastInvalidation) && contains_2063597754(self_2332033256.lastInvalidationRect, rect_2332033258)))) {
    break BeforeRet;
    }
    
    self_2332033256.lastInvalidationRect = nimCopy(self_2332033256.lastInvalidationRect, and_2080374868(rect_2332033258, self_2332033256.lastBounds), NTI2080374789);
    self_2332033256.lastInvalidation = currentIndex_2332033257;
    if (isObj(self_2332033256.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033268 = null;
      var colontmp__536871848 = [];
      colontmp__536871848 = self_2332033256.children;
      var i_536871849 = 0;
      var L_536871850 = (colontmp__536871848).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871849 < L_536871850)) break Label3;
            c_2332033268 = colontmp__536871848[chckIndx(i_536871849, 0, (colontmp__536871848).length - 1)];
            invalidate_2332033255(c_2332033268, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871849 = addInt(i_536871849, 1);
            if (!(((colontmp__536871848).length == L_536871850))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033278 = null;
      var colontmp__536871853 = [];
      colontmp__536871853 = self_2332033256.children;
      var i_536871854 = 0;
      var L_536871855 = (colontmp__536871853).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871854 < L_536871855)) break Label6;
            c_2332033278 = colontmp__536871853[chckIndx(i_536871854, 0, (colontmp__536871853).length - 1)];
            invalidate_2332033255(c_2332033278, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871854 = addInt(i_536871854, 1);
            if (!(((colontmp__536871853).length == L_536871855))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033288 = null;
      var colontmp__536871858 = [];
      colontmp__536871858 = self_2332033256.children;
      var i_536871859 = 0;
      var L_536871860 = (colontmp__536871858).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871859 < L_536871860)) break Label9;
            c_2332033288 = colontmp__536871858[chckIndx(i_536871859, 0, (colontmp__536871858).length - 1)];
            invalidate_2332033255(c_2332033288, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871859 = addInt(i_536871859, 1);
            if (!(((colontmp__536871858).length == L_536871860))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033298 = null;
      var colontmp__536871863 = [];
      colontmp__536871863 = self_2332033256.children;
      var i_536871864 = 0;
      var L_536871865 = (colontmp__536871863).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871864 < L_536871865)) break Label12;
            c_2332033298 = colontmp__536871863[chckIndx(i_536871864, 0, (colontmp__536871863).length - 1)];
            invalidate_2332033255(c_2332033298, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871864 = addInt(i_536871864, 1);
            if (!(((colontmp__536871863).length == L_536871865))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3187671625(t_3187671628, key_3187671629) {
  var result_3187671630 = false;

    var hc_3187671631 = [0];
    result_3187671630 = (0 <= rawGet_2483028997(t_3187671628, key_3187671629, hc_3187671631, 0));

  return result_3187671630;

}

function contains_3187671619(t_3187671622, key_3187671623) {
  var result_3187671624 = false;

  BeforeRet: {
    result_3187671624 = hasKey_3187671625(t_3187671622, key_3187671623);
    break BeforeRet;
  };

  return result_3187671624;

}

function HEX5BHEX5D_3187671709(t_3187671712, key_3187671713) {
  var result_3187671714 = null;

    var hcHEX60gensym22_3187671715 = [0];
    var indexHEX60gensym22_3187671722 = rawGet_2483028997(t_3187671712, key_3187671713, hcHEX60gensym22_3187671715, 0);
    if ((0 <= indexHEX60gensym22_3187671722)) {
    result_3187671714 = t_3187671712.data[chckIndx(indexHEX60gensym22_3187671722, 0, (t_3187671712.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3187671713);
    }
    

  return result_3187671714;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871872 = 0;
      var colontmp__536871873 = 0;
      colontmp__536871872 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871873 = start_855639774;
      var res_536871874 = colontmp__536871872;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871873 <= res_536871874)) break Label5;
            i_855639789 = res_536871874;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871869 = 0;
              colontmp__536871869 = subInt((sub_855639773).length, 1);
              var res_536871870 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871870 <= colontmp__536871869)) break Label8;
                    j_855639794 = res_536871870;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871870 = addInt(res_536871870, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871874 = subInt(res_536871874, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3271557240(table_3271557242, key_3271557243, default_3271557244) {
  var result_3271557245 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3187671619(table_3271557242, key_3271557243)) {
    result_3271557245 = nimCopy(result_3271557245, HEX5BHEX5D_3187671709(table_3271557242, key_3271557243), NTI2365587459);
    break BeforeRet;
    }
    
    var index_3271557351 = nsuRFindStr(key_3271557243, [46], 0, -1);
    if (!((index_3271557351 == -1))) {
    result_3271557245 = nimCopy(result_3271557245, getCascading_3271557240(table_3271557242, HEX5BHEX5D_855639291(key_3271557243, HEX2EHEX2E_805306418(0, subInt(index_3271557351, 1))), default_3271557244), NTI2365587459);
    break BeforeRet;
    }
    
    result_3271557245 = nimCopy(result_3271557245, default_3271557244, NTI2365587459);
    break BeforeRet;
  };

  return result_3271557245;

}

function color_3271557229(theme_3271557231, name_3271557232, default_3271557233) {
  var result_3271557234 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3271557234 = nimCopy(result_3271557234, getCascading_3271557240(theme_3271557231.colors, name_3271557232, color_2449473569(default_3271557233)), NTI2365587459);
    break BeforeRet;
  };

  return result_3271557234;

}

function HEX3DHEX3D_2332033092(x_2332033094, y_2332033095) {
  var result_2332033096 = false;

  BeforeRet: {
    if (!((x_2332033094.r == y_2332033095.r))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.g == y_2332033095.g))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.b == y_2332033095.b))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.a == y_2332033095.a))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    result_2332033096 = true;
    break BeforeRet;
  };

  return result_2332033096;

}

function updateForegroundColor_2332033088(self_2332033089, color_2332033090, frameIndex_2332033091) {
    if (!(HEX3DHEX3D_2332033092(self_2332033089.foregroundColor, color_2332033090))) {
    self_2332033089.lastHierarchyChange = nimMax(self_2332033089.lastHierarchyChange, frameIndex_2332033091);
    }
    
    self_2332033089.foregroundColor = nimCopy(self_2332033089.foregroundColor, color_2332033090, NTI2365587459);

  
}

function updateLastHierarchyChangeFromChildren_2332033110(self_2332033111, currentIndex_2332033112) {
    if (isObj(self_2332033111.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033142 = null;
      var colontmp__536871877 = [];
      colontmp__536871877 = self_2332033111.children;
      var i_536871878 = 0;
      var L_536871879 = (colontmp__536871877).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871878 < L_536871879)) break Label3;
            c_2332033142 = colontmp__536871877[chckIndx(i_536871878, 0, (colontmp__536871877).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033142, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033142.lastHierarchyChange), c_2332033142.lastBoundsChange);
            i_536871878 = addInt(i_536871878, 1);
            if (!(((colontmp__536871877).length == L_536871879))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033153 = null;
      var colontmp__536871882 = [];
      colontmp__536871882 = self_2332033111.children;
      var i_536871883 = 0;
      var L_536871884 = (colontmp__536871882).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871883 < L_536871884)) break Label6;
            c_2332033153 = colontmp__536871882[chckIndx(i_536871883, 0, (colontmp__536871882).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033153, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033153.lastHierarchyChange), c_2332033153.lastBoundsChange);
            i_536871883 = addInt(i_536871883, 1);
            if (!(((colontmp__536871882).length == L_536871884))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033164 = null;
      var colontmp__536871887 = [];
      colontmp__536871887 = self_2332033111.children;
      var i_536871888 = 0;
      var L_536871889 = (colontmp__536871887).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871888 < L_536871889)) break Label9;
            c_2332033164 = colontmp__536871887[chckIndx(i_536871888, 0, (colontmp__536871887).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033164, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033164.lastHierarchyChange), c_2332033164.lastBoundsChange);
            i_536871888 = addInt(i_536871888, 1);
            if (!(((colontmp__536871887).length == L_536871889))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033175 = null;
      var colontmp__536871892 = [];
      colontmp__536871892 = self_2332033111.children;
      var i_536871893 = 0;
      var L_536871894 = (colontmp__536871892).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871893 < L_536871894)) break Label12;
            c_2332033175 = colontmp__536871892[chckIndx(i_536871893, 0, (colontmp__536871892).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033175, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033175.lastHierarchyChange), c_2332033175.lastBoundsChange);
            i_536871893 = addInt(i_536871893, 1);
            if (!(((colontmp__536871892).length == L_536871894))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033044)) {
    if (!(eqStrings(self_2332033111.text, self_2332033111.lastRenderedText))) {
    self_2332033111.lastHierarchyChange = nimMax(self_2332033111.lastHierarchyChange, currentIndex_2332033112);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3238002704(self_3238002705, frameIndex_3238002706, statusBarWidget_3238002707) {
    var Temporary1;

    var statusWidget_3238002708 = null;
    var commandLineWidget_3238002709 = null;
    if (((statusBarWidget_3238002707.children).length == 0)) {
    statusWidget_3238002708 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 0.5)}, NTI2332033035), lastHierarchyChange: frameIndex_3238002706, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3238002707.children.push(statusWidget_3238002708);;
    commandLineWidget_3238002709 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.5), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3238002706, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3238002707.children.push(commandLineWidget_3238002709);;
    layoutWidget_2332033348(statusWidget_3238002708, statusBarWidget_3238002707.lastBounds, frameIndex_3238002706, self_3238002705.platform.layoutOptions);
    layoutWidget_2332033348(commandLineWidget_3238002709, statusBarWidget_3238002707.lastBounds, frameIndex_3238002706, self_3238002705.platform.layoutOptions);
    }
    else {
      statusWidget_3238002708 = statusBarWidget_3238002707.children[chckIndx(0, 0, (statusBarWidget_3238002707.children).length - 1)];
      commandLineWidget_3238002709 = statusBarWidget_3238002707.children[chckIndx(1, 0, (statusBarWidget_3238002707.children).length - 1)];
    }
    
    var textColor_3238002726 = color_3271557229(self_3238002705.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((self_3238002705.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3238002705.currentMode;
    }
    
    statusWidget_3238002708.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2332033088(statusWidget_3238002708, textColor_3238002726, frameIndex_3238002706);
    updateLastHierarchyChangeFromChildren_2332033110(statusWidget_3238002708, frameIndex_3238002706);
    statusBarWidget_3238002707.lastHierarchyChange = nimMax(statusBarWidget_3238002707.lastHierarchyChange, statusWidget_3238002708.lastHierarchyChange);
    activeHEX3D_2147483758(getCommandLineTextEditor_1291851055(self_3238002705), self_3238002705.commandLineMode);
    updateWidget_3254779914(getCommandLineTextEditor_1291851055(self_3238002705), self_3238002705, commandLineWidget_3238002709, frameIndex_3238002706);
    statusBarWidget_3238002707.lastHierarchyChange = nimMax(statusBarWidget_3238002707.lastHierarchyChange, commandLineWidget_3238002709.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2332033299(self_2332033300, currentIndex_2332033301, recurse_2332033302) {
    if (isObj(self_2332033300.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033312 = null;
      var colontmp__536871897 = [];
      colontmp__536871897 = self_2332033300.children;
      var i_536871898 = 0;
      var L_536871899 = (colontmp__536871897).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871898 < L_536871899)) break Label3;
            c_2332033312 = colontmp__536871897[chckIndx(i_536871898, 0, (colontmp__536871897).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033312, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033312.lastInvalidation), currentIndex_2332033301);
            i_536871898 = addInt(i_536871898, 1);
            if (!(((colontmp__536871897).length == L_536871899))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033322 = null;
      var colontmp__536871902 = [];
      colontmp__536871902 = self_2332033300.children;
      var i_536871903 = 0;
      var L_536871904 = (colontmp__536871902).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871903 < L_536871904)) break Label6;
            c_2332033322 = colontmp__536871902[chckIndx(i_536871903, 0, (colontmp__536871902).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033322, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033322.lastInvalidation), currentIndex_2332033301);
            i_536871903 = addInt(i_536871903, 1);
            if (!(((colontmp__536871902).length == L_536871904))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033332 = null;
      var colontmp__536871907 = [];
      colontmp__536871907 = self_2332033300.children;
      var i_536871908 = 0;
      var L_536871909 = (colontmp__536871907).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871908 < L_536871909)) break Label9;
            c_2332033332 = colontmp__536871907[chckIndx(i_536871908, 0, (colontmp__536871907).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033332, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033332.lastInvalidation), currentIndex_2332033301);
            i_536871908 = addInt(i_536871908, 1);
            if (!(((colontmp__536871907).length == L_536871909))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033342 = null;
      var colontmp__536871912 = [];
      colontmp__536871912 = self_2332033300.children;
      var i_536871913 = 0;
      var L_536871914 = (colontmp__536871912).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871913 < L_536871914)) break Label12;
            c_2332033342 = colontmp__536871912[chckIndx(i_536871913, 0, (colontmp__536871912).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033342, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033342.lastInvalidation), currentIndex_2332033301);
            i_536871913 = addInt(i_536871913, 1);
            if (!(((colontmp__536871912).length == L_536871914))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3238002766(self_3238002767, frameIndex_3238002768) {
            var Temporary4;
            var Temporary8;

    if ((self_3238002767.widget == null)) {
    mainStack_3238002728[0] = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), right: -1.0, logLayout: false, m_type: NTI2332033038, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3238002767.widget = mainStack_3238002728[0];
    mainPanel_3238002730[0] = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3238002728[0].children.push(mainPanel_3238002730[0]);;
    viewPanel_3238002729[0] = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), bottom: (-2.0 * totalLineHeight_2315255975(self_3238002767.platform)), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3238002730[0].children.push(viewPanel_3238002729[0]);;
    commandLineWidget_3238002727[0] = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 1.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), top: (-2.0 * totalLineHeight_2315255975(self_3238002767.platform)), fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3238002730[0].children.push(commandLineWidget_3238002727[0]);;
    layoutWidget_2332033348(self_3238002767.widget, rect_2080374808(vec2_2097152861(0.0, 0.0), size_2315255928(self_3238002767.platform)), frameIndex_3238002768, self_3238002767.platform.layoutOptions);
    }
    
    if (viewPanel_3238002729[0].children.length < 0) { for (var i = viewPanel_3238002729[0].children.length ; i < 0 ; ++i) viewPanel_3238002729[0].children.push(null); }
               else { viewPanel_3238002729[0].children.length = 0; };
    var rects_3238002791 = layoutViews_1291848220(self_3238002767.layout, self_3238002767.layout_props, rect_2080374802(0.0, 0.0, 1.0, 1.0), (self_3238002767.views).length);
    Label1: {
      var i_3238002797 = 0;
      var view_3238002798 = null;
      var i_536871813 = 0;
      var L_536871814 = (self_3238002767.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871813 < L_536871814)) break Label3;
            i_3238002797 = i_536871813;
            view_3238002798 = self_3238002767.views[chckIndx(i_536871813, 0, (self_3238002767.views).length - 1)];
            var widget_3238002799 = null;
            if (contains_3238002842(widgetsPerEditor_3238002756[0], view_3238002798.editor.id)) {
            widget_3238002799 = (Temporary4 = HEX5BHEX5D_3238003141(widgetsPerEditor_3238002756[0], view_3238002798.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3238002799 = {lastHierarchyChange: frameIndex_3238002768, logLayout: false, m_type: NTI2332033036, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3238003260(widgetsPerEditor_3238002756[0], view_3238002798.editor.id, widget_3238002799);
            }
            
            if ((i_3238002797 < (rects_3238002791).length)) {
            var colontmp__536871811 = xy_2080374816(rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)]);
            var colontmp__536871812 = vec2_2097152861((rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].x + rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].w), (rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].y + rects_3238002791[chckIndx(i_3238002797, 0, (rects_3238002791).length - 1)].h));
            widget_3238002799.anchor = nimCopy(widget_3238002799.anchor, {Field0: nimCopy(null, colontmp__536871811, NTI2097152288), Field1: nimCopy(null, colontmp__536871812, NTI2097152288)}, NTI2332033035);
            layoutWidget_2332033348(widget_3238002799, viewPanel_3238002729[0].lastBounds, frameIndex_3238002768, self_3238002767.platform.layoutOptions);
            viewPanel_3238002729[0].children.push(widget_3238002799);;
            activeHEX3D_2147483758(view_3238002798.editor, (self_3238002767.currentView == i_3238002797));
            updateWidget_3254779914(view_3238002798.editor, self_3238002767, widget_3238002799, frameIndex_3238002768);
            viewPanel_3238002729[0].lastHierarchyChange = nimMax(viewPanel_3238002729[0].lastHierarchyChange, widget_3238002799.lastHierarchyChange);
            }
            
            i_536871813 = addInt(i_536871813, 1);
            if (!(((self_3238002767.views).length == L_536871814))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3238002730[0].lastHierarchyChange = nimMax(mainPanel_3238002730[0].lastHierarchyChange, viewPanel_3238002729[0].lastHierarchyChange);
    var lastPopups_3238004329 = HEX5BHEX5D_3238004305(mainStack_3238002728[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3238002728[0].children.length < 1) { for (var i = mainStack_3238002728[0].children.length ; i < 1 ; ++i) mainStack_3238002728[0].children.push(null); }
               else { mainStack_3238002728[0].children.length = 1; };
    Label5: {
      var i_3238004366 = 0;
      var popup_3238004367 = null;
      var i_536871820 = 0;
      var L_536871821 = (self_3238002767.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871820 < L_536871821)) break Label7;
            i_3238004366 = i_536871820;
            popup_3238004367 = self_3238002767.popups[chckIndx(i_536871820, 0, (self_3238002767.popups).length - 1)];
            var widget_3238004368 = null;
            if (contains_3238002842(widgetsPerEditor_3238002756[0], popup_3238004367.id)) {
            widget_3238004368 = (Temporary8 = HEX5BHEX5D_3238003141(widgetsPerEditor_3238002756[0], popup_3238004367.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3238004368 = {backgroundColor: color_2365587528(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3238002768, logLayout: false, m_type: NTI2332033036, maskContent: false, children: [], anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3238003260(widgetsPerEditor_3238002756[0], popup_3238004367.id, widget_3238004368);
            }
            
            var colontmp__536871817 = vec2_2097152861(0.25, 0.25);
            var colontmp__536871818 = vec2_2097152861(0.75, 0.75);
            widget_3238004368.anchor = nimCopy(widget_3238004368.anchor, {Field0: nimCopy(null, colontmp__536871817, NTI2097152288), Field1: nimCopy(null, colontmp__536871818, NTI2097152288)}, NTI2332033035);
            layoutWidget_2332033348(widget_3238004368, mainStack_3238002728[0].lastBounds, frameIndex_3238002768, self_3238002767.platform.layoutOptions);
            mainStack_3238002728[0].children.push(widget_3238004368);;
            updateWidget_3254779920(popup_3238004367, self_3238002767, widget_3238004368, frameIndex_3238002768);
            mainStack_3238002728[0].lastHierarchyChange = nimMax(mainStack_3238002728[0].lastHierarchyChange, widget_3238004368.lastHierarchyChange);
            i_536871820 = addInt(i_536871820, 1);
            if (!(((self_3238002767.popups).length == L_536871821))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3238004527 = null;
      var i_536871830 = 0;
      var L_536871831 = (lastPopups_3238004329).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871830 < L_536871831)) break Label11;
            p_3238004527 = lastPopups_3238004329[chckIndx(i_536871830, 0, (lastPopups_3238004329).length - 1)];
            Label12: {
              if (contains_3238004528(mainStack_3238002728[0].children, p_3238004527)) {
              break Label12;
              }
              
              Label13: {
                var c_3238004564 = null;
                var i_536871827 = 0;
                var L_536871828 = (mainStack_3238002728[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871827 < L_536871828)) break Label15;
                      c_3238004564 = mainStack_3238002728[0].children[chckIndx(i_536871827, 0, (mainStack_3238002728[0].children).length - 1)];
                      invalidate_2332033255(c_3238004564, frameIndex_3238002768, p_3238004527.lastBounds);
                      i_536871827 = addInt(i_536871827, 1);
                      if (!(((mainStack_3238002728[0].children).length == L_536871828))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871830 = addInt(i_536871830, 1);
            if (!(((lastPopups_3238004329).length == L_536871831))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3238002704(self_3238002767, frameIndex_3238002768, commandLineWidget_3238002727[0]);
    mainPanel_3238002730[0].lastHierarchyChange = nimMax(mainPanel_3238002730[0].lastHierarchyChange, commandLineWidget_3238002727[0].lastHierarchyChange);
    mainStack_3238002728[0].lastHierarchyChange = nimMax(mainStack_3238002728[0].lastHierarchyChange, mainPanel_3238002730[0].lastHierarchyChange);
    updateInvalidationFromChildren_2332033299(mainStack_3238002728[0], -1, false);
    self_3238002767.widget.lastHierarchyChange = nimMax(self_3238002767.widget.lastHierarchyChange, commandLineWidget_3238002727[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3238004583(self_3238004584, size_3238004585, frameIndex_3238004586) {
  BeforeRet: {
    self_3238004584.lastBounds = nimCopy(self_3238004584.lastBounds, rect_2080374808(vec2_2097152861(0.0, 0.0), size_3238004585), NTI2080374789);
    if ((self_3238004584.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2332033348(self_3238004584.widget, self_3238004584.lastBounds, frameIndex_3238004586, self_3238004584.platform.layoutOptions);
  };

  
}

function requestRender_536871239(redrawEverything_536871240) {
    
function HEX3Aanonymous_536871241(time_536871242) {
        hasRequestedRerender_536870978[0] = false;
        isRenderInProgress_536870979[0] = true;
        try {
        try {
        var layoutTime_536871248 = 0.0;
        var updateTime_536871249 = 0.0;
        var renderTime_536871250 = 0.0;
        Label3: {
          ed_536870948[0].frameTimer = nimCopy(ed_536870948[0].frameTimer, startTimer_2281701428(), NTI2281701407);
          var updateTimer_536871251 = startTimer_2281701428();
          updateWidgetTree_3238002766(ed_536870948[0], frameIndex_536870977[0]);
          updateTime_536871249 = ms_2281701425(elapsed_2281701439(updateTimer_536871251));
          var layoutTimer_536871252 = startTimer_2281701428();
          layoutWidgetTree_3238004583(ed_536870948[0], size_2315255928(rend_536870946[0]), frameIndex_536870977[0]);
          layoutTime_536871248 = ms_2281701425(elapsed_2281701439(layoutTimer_536871252));
          var renderTimer_536871253 = startTimer_2281701428();
          render_2315255919(rend_536870946[0], ed_536870948[0].widget, frameIndex_536870977[0]);
          renderTime_536871250 = ms_2281701425(elapsed_2281701439(renderTimer_536871253));
          frameTime_536870976[0] = ms_2281701425(elapsed_2281701439(ed_536870948[0].frameTimer));
        };
        if ((10.0 < frameTime_536870976[0])) {
        var fmtRes_536871258 = [mnewString(0)];
        fmtRes_536871258[0].push.apply(fmtRes_536871258[0], [70,114,97,109,101,58,32]);;
        formatValue_2332033500(fmtRes_536871258, 0, frameTime_536870976[0], [62,53,46,50]);
        fmtRes_536871258[0].push.apply(fmtRes_536871258[0], [109,115,32,40,117,58,32]);;
        formatValue_2332033500(fmtRes_536871258, 0, updateTime_536871249, [62,53,46,50]);
        fmtRes_536871258[0].push.apply(fmtRes_536871258[0], [109,115,44,32,108,58,32]);;
        formatValue_2332033500(fmtRes_536871258, 0, layoutTime_536871248, [62,53,46,50]);
        fmtRes_536871258[0].push.apply(fmtRes_536871258[0], [109,115,44,32,114,58,32]);;
        formatValue_2332033500(fmtRes_536871258, 0, renderTime_536871250, [62,53,46,50]);
        fmtRes_536871258[0].push.apply(fmtRes_536871258[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871258[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870977[0] = addInt(frameIndex_536870977[0], 1);
        }
        } finally {
        isRenderInProgress_536870979[0] = false;
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870947[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870978[0]) {
    break BeforeRet;
    }
    
    if (isRenderInProgress_536870979[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871241);
  };

  
}

function subscribe_536871726(event_536871728, callback_536871730) {
  var result_536871731 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871731 = nimCopy(result_536871731, newId_2181038297(), NTI2181038083);
    event_536871728.handlers.push({Field0: nimCopy(null, result_536871731, NTI2181038083), Field1: callback_536871730});;

  return result_536871731;

}

function HEX3Aanonymous_536871308(event_536871326) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871357(event_536871375) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871406(event_536871424) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871455(event_536871473) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871504(event_536871522) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871553(event_536871571) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871602(event_536871620) {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871651() {
    requestRender_536871239(false);

  
}

function HEX3Aanonymous_536871700(redrawEverything_536871701) {
    requestRender_536871239(redrawEverything_536871701);

  
}
var _ = subscribe_1291851144(rend_536870946[0].onKeyPress, HEX3Aanonymous_536871308);
var _ = subscribe_1291851144(rend_536870946[0].onKeyRelease, HEX3Aanonymous_536871357);
var _ = subscribe_1291851144(rend_536870946[0].onRune, HEX3Aanonymous_536871406);
var _ = subscribe_1291851314(rend_536870946[0].onMousePress, HEX3Aanonymous_536871455);
var _ = subscribe_1291851314(rend_536870946[0].onMouseRelease, HEX3Aanonymous_536871504);
var _ = subscribe_1291851435(rend_536870946[0].onMouseMove, HEX3Aanonymous_536871553);
var _ = subscribe_1291851507(rend_536870946[0].onScroll, HEX3Aanonymous_536871602);
var _ = subscribe_1291851651(rend_536870946[0].onCloseRequested, HEX3Aanonymous_536871651);
var _ = subscribe_536871726(rend_536870946[0].onResized, HEX3Aanonymous_536871700);
Label307: {
  setHandleInputs_1291854270(ed_536870948[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291860277([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291860195([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291858602(ed_536870948[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,108], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291858602(ed_536870948[0], [101,100,105,116,111,114], [60,83,45,83,80,65,67,69,62,99,115], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870947[0] = true;
requestRender_536871239(false);

function formatValue_1291848857(result_1291848859, result_1291848859_Idx, value_1291848860, specifier_1291848861) {
    formatValue_721420459(result_1291848859, result_1291848859_Idx, HEX24_1627394481(value_1291848860), specifier_1291848861);

  
}

function handleUnknownDocumentEditorAction_1291848841(self_1291848842, editor_1291848843, action_1291848844, args_1291848845) {
  var result_1291848846 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848846 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848856 = [mnewString(0)];
    fmtRes_1291848856[0].push.apply(fmtRes_1291848856[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848856, 0, action_1291848844, []);
    fmtRes_1291848856[0].push.apply(fmtRes_1291848856[0], [32]);;
    formatValue_1291848857(fmtRes_1291848856, 0, args_1291848845, []);
    fmtRes_1291848856[0].push.apply(fmtRes_1291848856[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848856, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848856[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848846 = 0;
    break BeforeRet;
  };

  return result_1291848846;

}

function insert_2818590656(x_2818590658, x_2818590658_Idx, item_2818590659, i_2818590660) {
    var it_2818590680 = null;
    x_2818590658[x_2818590658_Idx] = x_2818590658[x_2818590658_Idx] || []; x_2818590658[x_2818590658_Idx].splice(i_2818590660, 0, it_2818590680);
    x_2818590658[x_2818590658_Idx][chckIndx(i_2818590660, 0, (x_2818590658[x_2818590658_Idx]).length - 1)] = item_2818590659;

  
}

function toJson_2818583174(self_2818583175, opt_2818583176) {
  var result_2818583177 = null;

    result_2818583177 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2818583177, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2818583177, [105,100], newJInt_1627390040(self_2818583175.id));

  return result_2818583177;

}

function none_2818583080() {
  var result_2818583086 = ({val: null});

  return result_2818583086;

}

function some_2818583139(val_2818583141) {
  var result_2818583142 = ({val: null});

    if (!(!((val_2818583141 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2818583142.val = val_2818583141;

  return result_2818583142;

}

function getTextDocumentEditor_2818583070(wrapper_2818583071) {
      var Temporary1;

  var result_2818583076 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2818583076 = nimCopy(result_2818583076, none_2818583080(), NTI2818578071);
    break BeforeRet;
    }
    
      var oHEX60gensym160_2818583089 = getEditorForId_1291850653(gEditor, wrapper_2818583071.id);
      if (!isSome_2818583094(oHEX60gensym160_2818583089)) Temporary1 = false; else {        var editor_2818583131 = get_2818583114(oHEX60gensym160_2818583089);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2818583131.m_type, NTI2818572510)) {
    result_2818583076 = nimCopy(result_2818583076, some_2818583139(editor_2818583131), NTI2818578071);
    break BeforeRet;
    }
    
    }
    
    result_2818583076 = nimCopy(result_2818583076, none_2818583080(), NTI2818578071);
    break BeforeRet;
  };

  return result_2818583076;

}

function isNone_2818583431(self_2818583433) {
  var result_2818583434 = false;

    result_2818583434 = (self_2818583433.val == null);

  return result_2818583434;

}

function get_2818583451(self_2818583453) {
  var result_2818583454 = null;

    if (isNone_2818583431(self_2818583453)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818583454 = self_2818583453["val"];

  return result_2818583454;

}

function setModeScript_2818583316_2818583423(self_2818583424, mode_2818583425) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym171_2818583426 = getTextDocumentEditor_2818583070(self_2818583424);
      if (isNone_2818583431(rHEX60gensym171_2818583426)) {
      break BeforeRet;
      }
      
    };
    setMode_2818583356(get_2818583451(rHEX60gensym171_2818583426), mode_2818583425);
  };

  
}

function fromJsonHook_2818583178(t_2818583179, jsonNode_2818583180) {
    t_2818583179.id = jsonTo_2818583181(HEX5BHEX5D_1627393037(jsonNode_2818583180, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2818583491(a_2818583493, b_2818583494, opt_2818583495) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818583494, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2818583494}));
    }
    
    fromJsonHook_2818583178(a_2818583493, b_2818583494);

  
}

function jsonTo_2818583485(b_2818583487, opt_2818583489) {
  var result_2818583490 = [({id: 0})];

    fromJson_2818583491(result_2818583490[0], b_2818583487, opt_2818583489);

  return result_2818583490[0];

}

function setModeApi_2818583483(HEX3Atmp_2818583319) {
  var result_2818583484 = null;

    result_2818583484 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2818583316_2818583423(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818583319, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818583319, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym176_2818583507 = [115,101,116,77,111,100,101];
    var fmtRes_2818583512 = [mnewString(0)];
    fmtRes_2818583512[0].push.apply(fmtRes_2818583512[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583512, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym176_2818583507 || [],fmtRes_2818583512[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818583484;

}

function modeScript_2818583607_2818583615(self_2818583616) {
  var result_2818583617 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym185_2818583618 = getTextDocumentEditor_2818583070(self_2818583616);
      if (isNone_2818583431(rHEX60gensym185_2818583618)) {
      break BeforeRet;
      }
      
    };
    result_2818583617 = nimCopy(null, mode_2818583612(get_2818583451(rHEX60gensym185_2818583618)), NTI33554449);
  };

  return result_2818583617;

}

function modeApi_2818583645(HEX3Atmp_2818583609) {
  var result_2818583646 = null;

  BeforeRet: {
    result_2818583646 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818583646 = toJson_1811939932(modeScript_2818583607_2818583615(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818583609, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym191_2818583656 = [109,111,100,101];
    var fmtRes_2818583661 = [mnewString(0)];
    fmtRes_2818583661[0].push.apply(fmtRes_2818583661[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583661, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym191_2818583656 || [],fmtRes_2818583661[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818583646;

}

function getContextWithModeScript_2818583664_2818583673(self_2818583674, context_2818583675) {
  var result_2818583676 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym195_2818583677 = getTextDocumentEditor_2818583070(self_2818583674);
      if (isNone_2818583431(rHEX60gensym195_2818583677)) {
      break BeforeRet;
      }
      
    };
    result_2818583676 = nimCopy(null, getContextWithMode_2818582795(get_2818583451(rHEX60gensym195_2818583677), context_2818583675), NTI33554449);
  };

  return result_2818583676;

}

function getContextWithModeApi_2818583705(HEX3Atmp_2818583666) {
  var result_2818583706 = null;

  BeforeRet: {
    result_2818583706 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818583706 = toJson_1811939932(getContextWithModeScript_2818583664_2818583673(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818583666, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818583666, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym201_2818583721 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2818583726 = [mnewString(0)];
    fmtRes_2818583726[0].push.apply(fmtRes_2818583726[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583726, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym201_2818583721 || [],fmtRes_2818583726[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818583706;

}

function updateTargetColumnScript_2818583729_2818583737(self_2818583738, cursor_2818583739) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym205_2818583740 = getTextDocumentEditor_2818583070(self_2818583738);
      if (isNone_2818583431(rHEX60gensym205_2818583740)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2818583734(get_2818583451(rHEX60gensym205_2818583740), cursor_2818583739);
  };

  
}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet308[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_2818583792(s_2818583794) {
    var Temporary1;

  var result_2818583795 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2818583794))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2818583794 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2818583795 = Temporary1;

  return result_2818583795;

}

function fromJson_2818583780(a_2818583782, a_2818583782_Idx, b_2818583783, opt_2818583784) {
    if (!(!(HEX3DHEX3D_1627392026(b_2818583783, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2818583783}));
    }
    
    switch (b_2818583783.kind) {
    case 2:
      a_2818583782[a_2818583782_Idx] = chckRange(getBiggestInt_1627390129(b_2818583783, 0), 0, 4);
      break;
    case 4:
      a_2818583782[a_2818583782_Idx] = parseEnum_2818583792(getStr_1627390106(b_2818583783, []));
      break;
    default: 
      if (true) {
      var fmtRes_2818583820 = [mnewString(0)];
      fmtRes_2818583820[0].push.apply(fmtRes_2818583820[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2818583820, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2818583820[0].push.apply(fmtRes_2818583820[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2818583820, 0, pretty_1627394477(b_2818583783, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2818583820[0]);
      }
      
      break;
    }

  
}

function jsonTo_2818583774(b_2818583776, opt_2818583778) {
  var result_2818583779 = [0];

    fromJson_2818583780(result_2818583779, 0, b_2818583776, opt_2818583778);

  return result_2818583779[0];

}

function updateTargetColumnApi_2818583767(HEX3Atmp_2818583731) {
  var result_2818583768 = null;

    result_2818583768 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2818583729_2818583737(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818583731, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818583731, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym210_2818583824 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2818583829 = [mnewString(0)];
    fmtRes_2818583829[0].push.apply(fmtRes_2818583829[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583829, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym210_2818583824 || [],fmtRes_2818583829[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818583768;

}

function invertSelectionScript_2818583846_2818583853(self_2818583854) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym219_2818583855 = getTextDocumentEditor_2818583070(self_2818583854);
      if (isNone_2818583431(rHEX60gensym219_2818583855)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2818583851(get_2818583451(rHEX60gensym219_2818583855));
  };

  
}

function invertSelectionApi_2818583881(HEX3Atmp_2818583848) {
  var result_2818583882 = null;

    result_2818583882 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2818583846_2818583853(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818583848, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym224_2818583888 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818583893 = [mnewString(0)];
    fmtRes_2818583893[0].push.apply(fmtRes_2818583893[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818583893, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym224_2818583888 || [],fmtRes_2818583893[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818583882;

}

function insertScript_2818583909_2818583922(self_2818583923, selections_2818583924, text_2818583925, notify_2818583926, record_2818583927, autoIndent_2818583928) {
  var result_2818583929 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym232_2818583930 = getTextDocumentEditor_2818583070(self_2818583923);
      if (isNone_2818583431(rHEX60gensym232_2818583930)) {
      break BeforeRet;
      }
      
    };
    result_2818583929 = nimCopy(null, insert_2818583914(get_2818583451(rHEX60gensym232_2818583930), selections_2818583924, text_2818583925, notify_2818583926, record_2818583927, autoIndent_2818583928), NTI2818578754);
  };

  return result_2818583929;

}

function insertApi_2818583962(HEX3Atmp_2818583911) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2818583963 = null;

  BeforeRet: {
    result_2818583963 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818583911))) {
      Temporary6 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818583911, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2818583911))) {
      Temporary8 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818583911, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2818583911))) {
      Temporary10 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818583911, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2818583963 = toJson_2818584261(insertScript_2818583909_2818583922(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818583911, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583969(HEX5BHEX5D_1627393116(HEX3Atmp_2818583911, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818583911, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym238_2818584317 = [105,110,115,101,114,116];
    var fmtRes_2818584322 = [mnewString(0)];
    fmtRes_2818584322[0].push.apply(fmtRes_2818584322[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584322, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym238_2818584317 || [],fmtRes_2818584322[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818583963;

}

function deleteScript_2818584410_2818584421(self_2818584422, selections_2818584423, notify_2818584424, record_2818584425) {
  var result_2818584426 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym265_2818584427 = getTextDocumentEditor_2818583070(self_2818584422);
      if (isNone_2818583431(rHEX60gensym265_2818584427)) {
      break BeforeRet;
      }
      
    };
    result_2818584426 = nimCopy(null, delete_2818584415(get_2818583451(rHEX60gensym265_2818584427), selections_2818584423, notify_2818584424, record_2818584425), NTI2818579270);
  };

  return result_2818584426;

}

function deleteApi_2818584457(HEX3Atmp_2818584412) {
      var Temporary5;
      var Temporary7;

  var result_2818584458 = null;

  BeforeRet: {
    result_2818584458 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818584412))) {
      Temporary5 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818584412, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818584412))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818584412, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2818584458 = toJson_2818584261(deleteScript_2818584410_2818584421(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818584412, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583969(HEX5BHEX5D_1627393116(HEX3Atmp_2818584412, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym271_2818584483 = [100,101,108,101,116,101];
    var fmtRes_2818584488 = [mnewString(0)];
    fmtRes_2818584488[0].push.apply(fmtRes_2818584488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym271_2818584483 || [],fmtRes_2818584488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818584458;

}

function selectPrevScript_2818584526_2818584678(self_2818584679) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym276_2818584680 = getTextDocumentEditor_2818583070(self_2818584679);
      if (isNone_2818583431(rHEX60gensym276_2818584680)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2818584531(get_2818583451(rHEX60gensym276_2818584680));
  };

  
}

function selectPrevApi_2818584706(HEX3Atmp_2818584528) {
  var result_2818584707 = null;

    result_2818584707 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2818584526_2818584678(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818584528, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym281_2818584713 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2818584718 = [mnewString(0)];
    fmtRes_2818584718[0].push.apply(fmtRes_2818584718[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584718, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym281_2818584713 || [],fmtRes_2818584718[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584707;

}

function selectNextScript_2818584722_2818584851(self_2818584852) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym287_2818584853 = getTextDocumentEditor_2818583070(self_2818584852);
      if (isNone_2818583431(rHEX60gensym287_2818584853)) {
      break BeforeRet;
      }
      
    };
    selectNext_2818584727(get_2818583451(rHEX60gensym287_2818584853));
  };

  
}

function selectNextApi_2818584879(HEX3Atmp_2818584724) {
  var result_2818584880 = null;

    result_2818584880 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2818584722_2818584851(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818584724, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym292_2818584886 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2818584891 = [mnewString(0)];
    fmtRes_2818584891[0].push.apply(fmtRes_2818584891[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584891, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym292_2818584886 || [],fmtRes_2818584891[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584880;

}

function selectInsideScript_2818584894_2818584913(self_2818584914, cursor_2818584915) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym297_2818584916 = getTextDocumentEditor_2818583070(self_2818584914);
      if (isNone_2818583431(rHEX60gensym297_2818584916)) {
      break BeforeRet;
      }
      
    };
    selectInside_2818584899(get_2818583451(rHEX60gensym297_2818584916), cursor_2818584915);
  };

  
}

function jsonTo_2818584950(b_2818584952, opt_2818584954) {
  var result_2818584955 = [{Field0: 0, Field1: 0}];

    fromJson_2818584084(result_2818584955[0], b_2818584952, opt_2818584954);

  return result_2818584955[0];

}

function selectInsideApi_2818584943(HEX3Atmp_2818584896) {
  var result_2818584944 = null;

    result_2818584944 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2818584894_2818584913(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818584896, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584950(HEX5BHEX5D_1627393116(HEX3Atmp_2818584896, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym302_2818584961 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2818584966 = [mnewString(0)];
    fmtRes_2818584966[0].push.apply(fmtRes_2818584966[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818584966, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym302_2818584961 || [],fmtRes_2818584966[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818584944;

}

function selectInsideCurrentScript_2818584971_2818584978(self_2818584979) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym306_2818584980 = getTextDocumentEditor_2818583070(self_2818584979);
      if (isNone_2818583431(rHEX60gensym306_2818584980)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2818584976(get_2818583451(rHEX60gensym306_2818584980));
  };

  
}

function selectInsideCurrentApi_2818585006(HEX3Atmp_2818584973) {
  var result_2818585007 = null;

    result_2818585007 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2818584971_2818584978(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818584973, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym311_2818585013 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2818585018 = [mnewString(0)];
    fmtRes_2818585018[0].push.apply(fmtRes_2818585018[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585018, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym311_2818585013 || [],fmtRes_2818585018[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585007;

}

function selectLineScript_2818585021_2818585029(self_2818585030, line_2818585031) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym315_2818585032 = getTextDocumentEditor_2818583070(self_2818585030);
      if (isNone_2818583431(rHEX60gensym315_2818585032)) {
      break BeforeRet;
      }
      
    };
    selectLine_2818585026(get_2818583451(rHEX60gensym315_2818585032), line_2818585031);
  };

  
}

function selectLineApi_2818585059(HEX3Atmp_2818585023) {
  var result_2818585060 = null;

    result_2818585060 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2818585021_2818585029(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585023, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818585023, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym320_2818585071 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2818585076 = [mnewString(0)];
    fmtRes_2818585076[0].push.apply(fmtRes_2818585076[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585076, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym320_2818585071 || [],fmtRes_2818585076[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585060;

}

function selectLineCurrentScript_2818585079_2818585086(self_2818585087) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym323_2818585088 = getTextDocumentEditor_2818583070(self_2818585087);
      if (isNone_2818583431(rHEX60gensym323_2818585088)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2818585084(get_2818583451(rHEX60gensym323_2818585088));
  };

  
}

function selectLineCurrentApi_2818585114(HEX3Atmp_2818585081) {
  var result_2818585115 = null;

    result_2818585115 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2818585079_2818585086(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585081, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym328_2818585121 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2818585126 = [mnewString(0)];
    fmtRes_2818585126[0].push.apply(fmtRes_2818585126[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585126, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym328_2818585121 || [],fmtRes_2818585126[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585115;

}

function selectParentTsScript_2818585129_2818585149(self_2818585150, selection_2818585151) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym332_2818585152 = getTextDocumentEditor_2818583070(self_2818585150);
      if (isNone_2818583431(rHEX60gensym332_2818585152)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2818585134(get_2818583451(rHEX60gensym332_2818585152), selection_2818585151);
  };

  
}

function selectParentTsApi_2818585179(HEX3Atmp_2818585131) {
  var result_2818585180 = null;

    result_2818585180 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2818585129_2818585149(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585131, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585186(HEX5BHEX5D_1627393116(HEX3Atmp_2818585131, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym337_2818585197 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2818585202 = [mnewString(0)];
    fmtRes_2818585202[0].push.apply(fmtRes_2818585202[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585202, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym337_2818585197 || [],fmtRes_2818585202[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585180;

}

function selectParentCurrentTsScript_2818585212_2818585219(self_2818585220) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym341_2818585221 = getTextDocumentEditor_2818583070(self_2818585220);
      if (isNone_2818583431(rHEX60gensym341_2818585221)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2818585217(get_2818583451(rHEX60gensym341_2818585221));
  };

  
}

function selectParentCurrentTsApi_2818585247(HEX3Atmp_2818585214) {
  var result_2818585248 = null;

    result_2818585248 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2818585212_2818585219(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585214, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym346_2818585254 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2818585259 = [mnewString(0)];
    fmtRes_2818585259[0].push.apply(fmtRes_2818585259[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585259, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym346_2818585254 || [],fmtRes_2818585259[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585248;

}

function insertTextScript_2818585265_2818585274(self_2818585275, text_2818585276) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym351_2818585277 = getTextDocumentEditor_2818583070(self_2818585275);
      if (isNone_2818583431(rHEX60gensym351_2818585277)) {
      break BeforeRet;
      }
      
    };
    insertText_2818585270(get_2818583451(rHEX60gensym351_2818585277), text_2818585276);
  };

  
}

function insertTextApi_2818585304(HEX3Atmp_2818585267) {
  var result_2818585305 = null;

    result_2818585305 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2818585265_2818585274(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585267, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818585267, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym356_2818585316 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2818585321 = [mnewString(0)];
    fmtRes_2818585321[0].push.apply(fmtRes_2818585321[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585321, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym356_2818585316 || [],fmtRes_2818585321[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585305;

}

function undoScript_2818585337_2818585392(self_2818585393) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym361_2818585394 = getTextDocumentEditor_2818583070(self_2818585393);
      if (isNone_2818583431(rHEX60gensym361_2818585394)) {
      break BeforeRet;
      }
      
    };
    undo_2818585342(get_2818583451(rHEX60gensym361_2818585394));
  };

  
}

function undoApi_2818585420(HEX3Atmp_2818585339) {
  var result_2818585421 = null;

    result_2818585421 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2818585337_2818585392(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585339, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym366_2818585427 = [117,110,100,111];
    var fmtRes_2818585432 = [mnewString(0)];
    fmtRes_2818585432[0].push.apply(fmtRes_2818585432[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585432, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym366_2818585427 || [],fmtRes_2818585432[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585421;

}

function redoScript_2818585439_2818585472(self_2818585473) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym371_2818585474 = getTextDocumentEditor_2818583070(self_2818585473);
      if (isNone_2818583431(rHEX60gensym371_2818585474)) {
      break BeforeRet;
      }
      
    };
    redo_2818585444(get_2818583451(rHEX60gensym371_2818585474));
  };

  
}

function redoApi_2818585500(HEX3Atmp_2818585441) {
  var result_2818585501 = null;

    result_2818585501 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2818585439_2818585472(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585441, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym376_2818585507 = [114,101,100,111];
    var fmtRes_2818585512 = [mnewString(0)];
    fmtRes_2818585512[0].push.apply(fmtRes_2818585512[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585512, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym376_2818585507 || [],fmtRes_2818585512[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585501;

}

function scrollTextScript_2818585519_2818585531(self_2818585532, amount_2818585533) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym381_2818585534 = getTextDocumentEditor_2818583070(self_2818585532);
      if (isNone_2818583431(rHEX60gensym381_2818585534)) {
      break BeforeRet;
      }
      
    };
    scrollText_2818585524(get_2818583451(rHEX60gensym381_2818585534), amount_2818585533);
  };

  
}

function scrollTextApi_2818585561(HEX3Atmp_2818585521) {
  var result_2818585562 = null;

    result_2818585562 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2818585519_2818585531(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585521, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585568(HEX5BHEX5D_1627393116(HEX3Atmp_2818585521, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym386_2818585631 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2818585636 = [mnewString(0)];
    fmtRes_2818585636[0].push.apply(fmtRes_2818585636[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585636, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym386_2818585631 || [],fmtRes_2818585636[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585562;

}

function duplicateLastSelectionScript_2818585639_2818585688(self_2818585689) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym395_2818585690 = getTextDocumentEditor_2818583070(self_2818585689);
      if (isNone_2818583431(rHEX60gensym395_2818585690)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2818585644(get_2818583451(rHEX60gensym395_2818585690));
  };

  
}

function duplicateLastSelectionApi_2818585716(HEX3Atmp_2818585641) {
  var result_2818585717 = null;

    result_2818585717 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2818585639_2818585688(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585641, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym400_2818585723 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818585728 = [mnewString(0)];
    fmtRes_2818585728[0].push.apply(fmtRes_2818585728[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585728, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym400_2818585723 || [],fmtRes_2818585728[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585717;

}

function addCursorBelowScript_2818585739_2818585758(self_2818585759) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym403_2818585760 = getTextDocumentEditor_2818583070(self_2818585759);
      if (isNone_2818583431(rHEX60gensym403_2818585760)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2818585744(get_2818583451(rHEX60gensym403_2818585760));
  };

  
}

function addCursorBelowApi_2818585786(HEX3Atmp_2818585741) {
  var result_2818585787 = null;

    result_2818585787 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2818585739_2818585758(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585741, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym408_2818585793 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2818585798 = [mnewString(0)];
    fmtRes_2818585798[0].push.apply(fmtRes_2818585798[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585798, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym408_2818585793 || [],fmtRes_2818585798[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585787;

}

function addCursorAboveScript_2818585805_2818585824(self_2818585825) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym411_2818585826 = getTextDocumentEditor_2818583070(self_2818585825);
      if (isNone_2818583431(rHEX60gensym411_2818585826)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2818585810(get_2818583451(rHEX60gensym411_2818585826));
  };

  
}

function addCursorAboveApi_2818585852(HEX3Atmp_2818585807) {
  var result_2818585853 = null;

    result_2818585853 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2818585805_2818585824(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585807, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym416_2818585859 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2818585864 = [mnewString(0)];
    fmtRes_2818585864[0].push.apply(fmtRes_2818585864[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818585864, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym416_2818585859 || [],fmtRes_2818585864[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818585853;

}

function getPrevFindResultScript_2818585867_2818586128(self_2818586129, cursor_2818586130, offset_2818586131) {
  var result_2818586132 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym421_2818586133 = getTextDocumentEditor_2818583070(self_2818586129);
      if (isNone_2818583431(rHEX60gensym421_2818586133)) {
      break BeforeRet;
      }
      
    };
    result_2818586132 = nimCopy(result_2818586132, getPrevFindResult_2818582724(get_2818583451(rHEX60gensym421_2818586133), cursor_2818586130, offset_2818586131), NTI2231369739);
  };

  return result_2818586132;

}

function getPrevFindResultApi_2818586162(HEX3Atmp_2818585869) {
      var Temporary5;

  var result_2818586163 = null;

  BeforeRet: {
    result_2818586163 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818585869))) {
      Temporary5 = jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818585869, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818586163 = toJson_2818584273(getPrevFindResultScript_2818585867_2818586128(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818585869, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584950(HEX5BHEX5D_1627393116(HEX3Atmp_2818585869, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym427_2818586183 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818586188 = [mnewString(0)];
    fmtRes_2818586188[0].push.apply(fmtRes_2818586188[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586188, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym427_2818586183 || [],fmtRes_2818586188[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818586163;

}

function getNextFindResultScript_2818586199_2818586357(self_2818586358, cursor_2818586359, offset_2818586360) {
  var result_2818586361 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym433_2818586362 = getTextDocumentEditor_2818583070(self_2818586358);
      if (isNone_2818583431(rHEX60gensym433_2818586362)) {
      break BeforeRet;
      }
      
    };
    result_2818586361 = nimCopy(result_2818586361, getNextFindResult_2818582728(get_2818583451(rHEX60gensym433_2818586362), cursor_2818586359, offset_2818586360), NTI2231369739);
  };

  return result_2818586361;

}

function getNextFindResultApi_2818586391(HEX3Atmp_2818586201) {
      var Temporary5;

  var result_2818586392 = null;

  BeforeRet: {
    result_2818586392 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586201))) {
      Temporary5 = jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818586201, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2818586392 = toJson_2818584273(getNextFindResultScript_2818586199_2818586357(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818586201, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584950(HEX5BHEX5D_1627393116(HEX3Atmp_2818586201, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym439_2818586412 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818586417 = [mnewString(0)];
    fmtRes_2818586417[0].push.apply(fmtRes_2818586417[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586417, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym439_2818586412 || [],fmtRes_2818586417[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818586392;

}

function addNextFindResultToSelectionScript_2818586430_2818586445(self_2818586446) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym443_2818586447 = getTextDocumentEditor_2818583070(self_2818586446);
      if (isNone_2818583431(rHEX60gensym443_2818586447)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2818586435(get_2818583451(rHEX60gensym443_2818586447));
  };

  
}

function addNextFindResultToSelectionApi_2818586473(HEX3Atmp_2818586432) {
  var result_2818586474 = null;

    result_2818586474 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2818586430_2818586445(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818586432, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym448_2818586480 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586485 = [mnewString(0)];
    fmtRes_2818586485[0].push.apply(fmtRes_2818586485[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586485, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym448_2818586480 || [],fmtRes_2818586485[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586474;

}

function addPrevFindResultToSelectionScript_2818586488_2818586503(self_2818586504) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym451_2818586505 = getTextDocumentEditor_2818583070(self_2818586504);
      if (isNone_2818583431(rHEX60gensym451_2818586505)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2818586493(get_2818583451(rHEX60gensym451_2818586505));
  };

  
}

function addPrevFindResultToSelectionApi_2818586531(HEX3Atmp_2818586490) {
  var result_2818586532 = null;

    result_2818586532 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2818586488_2818586503(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818586490, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym456_2818586538 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586543 = [mnewString(0)];
    fmtRes_2818586543[0].push.apply(fmtRes_2818586543[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586543, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym456_2818586538 || [],fmtRes_2818586543[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586532;

}

function setAllFindResultToSelectionScript_2818586546_2818586847(self_2818586848) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym459_2818586849 = getTextDocumentEditor_2818583070(self_2818586848);
      if (isNone_2818583431(rHEX60gensym459_2818586849)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2818586551(get_2818583451(rHEX60gensym459_2818586849));
  };

  
}

function setAllFindResultToSelectionApi_2818586875(HEX3Atmp_2818586548) {
  var result_2818586876 = null;

    result_2818586876 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2818586546_2818586847(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818586548, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym464_2818586882 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2818586887 = [mnewString(0)];
    fmtRes_2818586887[0].push.apply(fmtRes_2818586887[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586887, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym464_2818586882 || [],fmtRes_2818586887[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586876;

}

function moveCursorColumnScript_2818586905_2818586933(self_2818586934, distance_2818586935, cursor_2818586936, all_2818586937) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym472_2818586938 = getTextDocumentEditor_2818583070(self_2818586934);
      if (isNone_2818583431(rHEX60gensym472_2818586938)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2818586910(get_2818583451(rHEX60gensym472_2818586938), distance_2818586935, cursor_2818586936, all_2818586937);
  };

  
}

function moveCursorColumnApi_2818586967(HEX3Atmp_2818586907) {
      var Temporary5;
      var Temporary7;

  var result_2818586968 = null;

    result_2818586968 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818586907))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818586907, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818586907))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818586907, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2818586905_2818586933(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818586907, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818586907, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym477_2818586989 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2818586994 = [mnewString(0)];
    fmtRes_2818586994[0].push.apply(fmtRes_2818586994[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818586994, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym477_2818586989 || [],fmtRes_2818586994[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818586968;

}

function moveCursorLineScript_2818587013_2818587023(self_2818587024, distance_2818587025, cursor_2818587026, all_2818587027) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym485_2818587028 = getTextDocumentEditor_2818583070(self_2818587024);
      if (isNone_2818583431(rHEX60gensym485_2818587028)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2818587018(get_2818583451(rHEX60gensym485_2818587028), distance_2818587025, cursor_2818587026, all_2818587027);
  };

  
}

function moveCursorLineApi_2818587057(HEX3Atmp_2818587015) {
      var Temporary5;
      var Temporary7;

  var result_2818587058 = null;

    result_2818587058 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587015))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587015, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587015))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587015, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2818587013_2818587023(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587015, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818587015, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym490_2818587079 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2818587084 = [mnewString(0)];
    fmtRes_2818587084[0].push.apply(fmtRes_2818587084[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587084, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym490_2818587079 || [],fmtRes_2818587084[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587058;

}

function moveCursorHomeScript_2818587087_2818587096(self_2818587097, cursor_2818587098, all_2818587099) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym497_2818587100 = getTextDocumentEditor_2818583070(self_2818587097);
      if (isNone_2818583431(rHEX60gensym497_2818587100)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2818587092(get_2818583451(rHEX60gensym497_2818587100), cursor_2818587098, all_2818587099);
  };

  
}

function moveCursorHomeApi_2818587128(HEX3Atmp_2818587089) {
      var Temporary4;
      var Temporary6;

  var result_2818587129 = null;

    result_2818587129 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587089))) {
      Temporary4 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587089, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587089))) {
      Temporary6 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587089, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2818587087_2818587096(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587089, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym502_2818587145 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2818587150 = [mnewString(0)];
    fmtRes_2818587150[0].push.apply(fmtRes_2818587150[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587150, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym502_2818587145 || [],fmtRes_2818587150[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587129;

}

function moveCursorEndScript_2818587155_2818587164(self_2818587165, cursor_2818587166, all_2818587167) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym509_2818587168 = getTextDocumentEditor_2818583070(self_2818587165);
      if (isNone_2818583431(rHEX60gensym509_2818587168)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2818587160(get_2818583451(rHEX60gensym509_2818587168), cursor_2818587166, all_2818587167);
  };

  
}

function moveCursorEndApi_2818587196(HEX3Atmp_2818587157) {
      var Temporary4;
      var Temporary6;

  var result_2818587197 = null;

    result_2818587197 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587157))) {
      Temporary4 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587157, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587157))) {
      Temporary6 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587157, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2818587155_2818587164(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587157, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym514_2818587213 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2818587218 = [mnewString(0)];
    fmtRes_2818587218[0].push.apply(fmtRes_2818587218[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587218, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym514_2818587213 || [],fmtRes_2818587218[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587197;

}

function moveCursorToScript_2818587223_2818587240(self_2818587241, str_2818587242, cursor_2818587243, all_2818587244) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym522_2818587245 = getTextDocumentEditor_2818583070(self_2818587241);
      if (isNone_2818583431(rHEX60gensym522_2818587245)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2818587228(get_2818583451(rHEX60gensym522_2818587245), str_2818587242, cursor_2818587243, all_2818587244);
  };

  
}

function moveCursorToApi_2818587274(HEX3Atmp_2818587225) {
      var Temporary5;
      var Temporary7;

  var result_2818587275 = null;

    result_2818587275 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587225))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587225, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587225))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587225, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2818587223_2818587240(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587225, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818587225, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym527_2818587296 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2818587301 = [mnewString(0)];
    fmtRes_2818587301[0].push.apply(fmtRes_2818587301[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587301, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym527_2818587296 || [],fmtRes_2818587301[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587275;

}

function moveCursorBeforeScript_2818587306_2818587323(self_2818587324, str_2818587325, cursor_2818587326, all_2818587327) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym536_2818587328 = getTextDocumentEditor_2818583070(self_2818587324);
      if (isNone_2818583431(rHEX60gensym536_2818587328)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2818587311(get_2818583451(rHEX60gensym536_2818587328), str_2818587325, cursor_2818587326, all_2818587327);
  };

  
}

function moveCursorBeforeApi_2818587357(HEX3Atmp_2818587308) {
      var Temporary5;
      var Temporary7;

  var result_2818587358 = null;

    result_2818587358 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818587308))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587308, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818587308))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587308, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2818587306_2818587323(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587308, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818587308, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym541_2818587379 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2818587384 = [mnewString(0)];
    fmtRes_2818587384[0].push.apply(fmtRes_2818587384[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587384, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym541_2818587379 || [],fmtRes_2818587384[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587358;

}

function moveCursorNextFindResultScript_2818587389_2818587398(self_2818587399, cursor_2818587400, all_2818587401) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym549_2818587402 = getTextDocumentEditor_2818583070(self_2818587399);
      if (isNone_2818583431(rHEX60gensym549_2818587402)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2818587394(get_2818583451(rHEX60gensym549_2818587402), cursor_2818587400, all_2818587401);
  };

  
}

function moveCursorNextFindResultApi_2818587430(HEX3Atmp_2818587391) {
      var Temporary4;
      var Temporary6;

  var result_2818587431 = null;

    result_2818587431 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587391))) {
      Temporary4 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587391, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587391))) {
      Temporary6 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587391, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2818587389_2818587398(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587391, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym554_2818587447 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587452 = [mnewString(0)];
    fmtRes_2818587452[0].push.apply(fmtRes_2818587452[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587452, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym554_2818587447 || [],fmtRes_2818587452[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587431;

}

function moveCursorPrevFindResultScript_2818587455_2818587464(self_2818587465, cursor_2818587466, all_2818587467) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym561_2818587468 = getTextDocumentEditor_2818583070(self_2818587465);
      if (isNone_2818583431(rHEX60gensym561_2818587468)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2818587460(get_2818583451(rHEX60gensym561_2818587468), cursor_2818587466, all_2818587467);
  };

  
}

function moveCursorPrevFindResultApi_2818587496(HEX3Atmp_2818587457) {
      var Temporary4;
      var Temporary6;

  var result_2818587497 = null;

    result_2818587497 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587457))) {
      Temporary4 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587457, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2818587457))) {
      Temporary6 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587457, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2818587455_2818587464(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587457, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym566_2818587513 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2818587518 = [mnewString(0)];
    fmtRes_2818587518[0].push.apply(fmtRes_2818587518[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587518, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym566_2818587513 || [],fmtRes_2818587518[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587497;

}

function scrollToCursorScript_2818587521_2818587529(self_2818587530, cursor_2818587531) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym572_2818587532 = getTextDocumentEditor_2818583070(self_2818587530);
      if (isNone_2818583431(rHEX60gensym572_2818587532)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2818583171(get_2818583451(rHEX60gensym572_2818587532), cursor_2818587531);
  };

  
}

function scrollToCursorApi_2818587559(HEX3Atmp_2818587523) {
      var Temporary4;

  var result_2818587560 = null;

    result_2818587560 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2818587523))) {
      Temporary4 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818587523, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2818587521_2818587529(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587523, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym577_2818587571 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2818587576 = [mnewString(0)];
    fmtRes_2818587576[0].push.apply(fmtRes_2818587576[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587576, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym577_2818587571 || [],fmtRes_2818587576[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587560;

}

function reloadTreesitterScript_2818587579_2818587586(self_2818587587) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_2818587588 = getTextDocumentEditor_2818583070(self_2818587587);
      if (isNone_2818583431(rHEX60gensym581_2818587588)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2818587584(get_2818583451(rHEX60gensym581_2818587588));
  };

  
}

function reloadTreesitterApi_2818587614(HEX3Atmp_2818587581) {
  var result_2818587615 = null;

    result_2818587615 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2818587579_2818587586(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587581, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym586_2818587621 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2818587626 = [mnewString(0)];
    fmtRes_2818587626[0].push.apply(fmtRes_2818587626[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587626, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym586_2818587621 || [],fmtRes_2818587626[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587615;

}

function deleteLeftScript_2818587635_2818587650(self_2818587651) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym590_2818587652 = getTextDocumentEditor_2818583070(self_2818587651);
      if (isNone_2818583431(rHEX60gensym590_2818587652)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2818587640(get_2818583451(rHEX60gensym590_2818587652));
  };

  
}

function deleteLeftApi_2818587678(HEX3Atmp_2818587637) {
  var result_2818587679 = null;

    result_2818587679 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2818587635_2818587650(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587637, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym595_2818587685 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2818587690 = [mnewString(0)];
    fmtRes_2818587690[0].push.apply(fmtRes_2818587690[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587690, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym595_2818587685 || [],fmtRes_2818587690[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587679;

}

function deleteRightScript_2818587699_2818587714(self_2818587715) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym598_2818587716 = getTextDocumentEditor_2818583070(self_2818587715);
      if (isNone_2818583431(rHEX60gensym598_2818587716)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2818587704(get_2818583451(rHEX60gensym598_2818587716));
  };

  
}

function deleteRightApi_2818587742(HEX3Atmp_2818587701) {
  var result_2818587743 = null;

    result_2818587743 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2818587699_2818587714(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587701, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym603_2818587749 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2818587754 = [mnewString(0)];
    fmtRes_2818587754[0].push.apply(fmtRes_2818587754[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587754, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym603_2818587749 || [],fmtRes_2818587754[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587743;

}

function getCommandCountScript_2818587763_2818587771(self_2818587772) {
  var result_2818587773 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym606_2818587774 = getTextDocumentEditor_2818583070(self_2818587772);
      if (isNone_2818583431(rHEX60gensym606_2818587774)) {
      break BeforeRet;
      }
      
    };
    result_2818587773 = getCommandCount_2818587768(get_2818583451(rHEX60gensym606_2818587774));
  };

  return result_2818587773;

}

function getCommandCountApi_2818587801(HEX3Atmp_2818587765) {
  var result_2818587802 = null;

  BeforeRet: {
    result_2818587802 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2818587802 = toJson_2818584299(getCommandCountScript_2818587763_2818587771(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587765, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym612_2818587812 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818587817 = [mnewString(0)];
    fmtRes_2818587817[0].push.apply(fmtRes_2818587817[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587817, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym612_2818587812 || [],fmtRes_2818587817[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818587802;

}

function setCommandCountScript_2818587820_2818587828(self_2818587829, count_2818587830) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym616_2818587831 = getTextDocumentEditor_2818583070(self_2818587829);
      if (isNone_2818583431(rHEX60gensym616_2818587831)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2818587825(get_2818583451(rHEX60gensym616_2818587831), count_2818587830);
  };

  
}

function setCommandCountApi_2818587858(HEX3Atmp_2818587822) {
  var result_2818587859 = null;

    result_2818587859 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2818587820_2818587828(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587822, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818587822, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym621_2818587870 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818587875 = [mnewString(0)];
    fmtRes_2818587875[0].push.apply(fmtRes_2818587875[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587875, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym621_2818587870 || [],fmtRes_2818587875[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587859;

}

function setCommandCountRestoreScript_2818587878_2818587886(self_2818587887, count_2818587888) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym625_2818587889 = getTextDocumentEditor_2818583070(self_2818587887);
      if (isNone_2818583431(rHEX60gensym625_2818587889)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2818587883(get_2818583451(rHEX60gensym625_2818587889), count_2818587888);
  };

  
}

function setCommandCountRestoreApi_2818587916(HEX3Atmp_2818587880) {
  var result_2818587917 = null;

    result_2818587917 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2818587878_2818587886(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587880, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818587880, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym630_2818587928 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2818587933 = [mnewString(0)];
    fmtRes_2818587933[0].push.apply(fmtRes_2818587933[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587933, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym630_2818587928 || [],fmtRes_2818587933[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587917;

}

function updateCommandCountScript_2818587936_2818587944(self_2818587945, digit_2818587946) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym634_2818587947 = getTextDocumentEditor_2818583070(self_2818587945);
      if (isNone_2818583431(rHEX60gensym634_2818587947)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2818587941(get_2818583451(rHEX60gensym634_2818587947), digit_2818587946);
  };

  
}

function updateCommandCountApi_2818587974(HEX3Atmp_2818587938) {
  var result_2818587975 = null;

    result_2818587975 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2818587936_2818587944(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818587938, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym639_2818587986 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2818587991 = [mnewString(0)];
    fmtRes_2818587991[0].push.apply(fmtRes_2818587991[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818587991, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym639_2818587986 || [],fmtRes_2818587991[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818587975;

}

function setFlagScript_2818587994_2818588003(self_2818588004, name_2818588005, value_2818588006) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym644_2818588007 = getTextDocumentEditor_2818583070(self_2818588004);
      if (isNone_2818583431(rHEX60gensym644_2818588007)) {
      break BeforeRet;
      }
      
    };
    setFlag_2818587999(get_2818583451(rHEX60gensym644_2818588007), name_2818588005, value_2818588006);
  };

  
}

function setFlagApi_2818588035(HEX3Atmp_2818587996) {
  var result_2818588036 = null;

    result_2818588036 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2818587994_2818588003(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818587996, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818587996, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818587996, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym649_2818588052 = [115,101,116,70,108,97,103];
    var fmtRes_2818588057 = [mnewString(0)];
    fmtRes_2818588057[0].push.apply(fmtRes_2818588057[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588057, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym649_2818588052 || [],fmtRes_2818588057[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588036;

}

function getFlagScript_2818588060_2818588069(self_2818588070, name_2818588071) {
  var result_2818588072 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym653_2818588073 = getTextDocumentEditor_2818583070(self_2818588070);
      if (isNone_2818583431(rHEX60gensym653_2818588073)) {
      break BeforeRet;
      }
      
    };
    result_2818588072 = getFlag_2818588065(get_2818583451(rHEX60gensym653_2818588073), name_2818588071);
  };

  return result_2818588072;

}

function getFlagApi_2818588101(HEX3Atmp_2818588062) {
  var result_2818588102 = null;

  BeforeRet: {
    result_2818588102 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818588102 = toJson_2818588113(getFlagScript_2818588060_2818588069(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588062, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588062, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym659_2818588122 = [103,101,116,70,108,97,103];
    var fmtRes_2818588127 = [mnewString(0)];
    fmtRes_2818588127[0].push.apply(fmtRes_2818588127[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588127, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym659_2818588122 || [],fmtRes_2818588127[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588102;

}

function runActionScript_2818588130_2818588145(self_2818588146, action_2818588147, args_2818588148) {
  var result_2818588149 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym664_2818588150 = getTextDocumentEditor_2818583070(self_2818588146);
      if (isNone_2818583431(rHEX60gensym664_2818588150)) {
      break BeforeRet;
      }
      
    };
    result_2818588149 = runAction_2818588135(get_2818583451(rHEX60gensym664_2818588150), action_2818588147, args_2818588148);
  };

  return result_2818588149;

}

function runActionApi_2818588179(HEX3Atmp_2818588132) {
  var result_2818588180 = null;

  BeforeRet: {
    result_2818588180 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2818588180 = toJson_2818588113(runActionScript_2818588130_2818588145(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588132, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588132, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2818588132, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym670_2818588195 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2818588200 = [mnewString(0)];
    fmtRes_2818588200[0].push.apply(fmtRes_2818588200[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588200, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym670_2818588195 || [],fmtRes_2818588200[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588180;

}

function findWordBoundaryScript_2818588206_2818588242(self_2818588243, cursor_2818588244) {
  var result_2818588245 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym674_2818588246 = getTextDocumentEditor_2818583070(self_2818588243);
      if (isNone_2818583431(rHEX60gensym674_2818588246)) {
      break BeforeRet;
      }
      
    };
    result_2818588245 = nimCopy(result_2818588245, findWordBoundary_2818588211(get_2818583451(rHEX60gensym674_2818588246), cursor_2818588244), NTI2231369739);
  };

  return result_2818588245;

}

function findWordBoundaryApi_2818588274(HEX3Atmp_2818588208) {
  var result_2818588275 = null;

  BeforeRet: {
    result_2818588275 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2818588275 = toJson_2818584273(findWordBoundaryScript_2818588206_2818588242(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588208, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584950(HEX5BHEX5D_1627393116(HEX3Atmp_2818588208, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym680_2818588290 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2818588295 = [mnewString(0)];
    fmtRes_2818588295[0].push.apply(fmtRes_2818588295[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588295, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym680_2818588290 || [],fmtRes_2818588295[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588275;

}

function getSelectionForMoveScript_2818588300_2818588403(self_2818588404, cursor_2818588405, move_2818588406, count_2818588407) {
  var result_2818588408 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym690_2818588409 = getTextDocumentEditor_2818583070(self_2818588404);
      if (isNone_2818583431(rHEX60gensym690_2818588409)) {
      break BeforeRet;
      }
      
    };
    result_2818588408 = nimCopy(result_2818588408, getSelectionForMove_2818588305(get_2818583451(rHEX60gensym690_2818588409), cursor_2818588405, move_2818588406, count_2818588407), NTI2231369739);
  };

  return result_2818588408;

}

function getSelectionForMoveApi_2818588439(HEX3Atmp_2818588302) {
      var Temporary6;

  var result_2818588440 = null;

  BeforeRet: {
    result_2818588440 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2818588302))) {
      Temporary6 = jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818588302, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2818588440 = toJson_2818584273(getSelectionForMoveScript_2818588300_2818588403(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588302, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584950(HEX5BHEX5D_1627393116(HEX3Atmp_2818588302, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588302, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym696_2818588465 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2818588470 = [mnewString(0)];
    fmtRes_2818588470[0].push.apply(fmtRes_2818588470[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588470, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym696_2818588465 || [],fmtRes_2818588470[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818588440;

}

function setMoveScript_2818588545_2818588741(self_2818588742, args_2818588743) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym712_2818588744 = getTextDocumentEditor_2818583070(self_2818588742);
      if (isNone_2818583431(rHEX60gensym712_2818588744)) {
      break BeforeRet;
      }
      
    };
    setMove_2818588550(get_2818583451(rHEX60gensym712_2818588744), args_2818588743);
  };

  
}

function HEX5BHEX5D_2818588785(a_2818588788, x_2818588789) {
  var result_2818588790 = null;

    if (!((a_2818588788.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2818588790 = newJArray_1627390082();
    var xa_2818588801 = x_2818588789.a;
    var L_2818588803 = addInt(subInt(subInt(len_1627392983(a_2818588788), x_2818588789.b), xa_2818588801), 1);
    Label1: {
      var i_2818588808 = 0;
      var i_536872076 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872076 < L_2818588803)) break Label3;
            i_2818588808 = i_536872076;
            add_1627390190(result_2818588790, HEX5BHEX5D_1627393116(a_2818588788, addInt(i_2818588808, xa_2818588801)));
            i_536872076 = addInt(i_536872076, 1);
          }
      };
    };

  return result_2818588790;

}

function setMoveApi_2818588771(HEX3Atmp_2818588547) {
  var result_2818588772 = null;

    result_2818588772 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2818588545_2818588741(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588547, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2818588785(HEX3Atmp_2818588547, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym717_2818588809 = [115,101,116,77,111,118,101];
    var fmtRes_2818588814 = [mnewString(0)];
    fmtRes_2818588814[0].push.apply(fmtRes_2818588814[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588814, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym717_2818588809 || [],fmtRes_2818588814[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588772;

}

function deleteMoveScript_2818588837_2818588877(self_2818588878, move_2818588879, which_2818588880, all_2818588881) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym739_2818588882 = getTextDocumentEditor_2818583070(self_2818588878);
      if (isNone_2818583431(rHEX60gensym739_2818588882)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2818588842(get_2818583451(rHEX60gensym739_2818588882), move_2818588879, which_2818588880, all_2818588881);
  };

  
}

function deleteMoveApi_2818588911(HEX3Atmp_2818588839) {
      var Temporary5;
      var Temporary7;

  var result_2818588912 = null;

    result_2818588912 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588839))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818588839, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588839))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818588839, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2818588837_2818588877(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588839, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588839, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym744_2818588933 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2818588938 = [mnewString(0)];
    fmtRes_2818588938[0].push.apply(fmtRes_2818588938[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818588938, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym744_2818588933 || [],fmtRes_2818588938[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818588912;

}

function selectMoveScript_2818588941_2818589006(self_2818589007, move_2818589008, which_2818589009, all_2818589010) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym752_2818589011 = getTextDocumentEditor_2818583070(self_2818589007);
      if (isNone_2818583431(rHEX60gensym752_2818589011)) {
      break BeforeRet;
      }
      
    };
    selectMove_2818588946(get_2818583451(rHEX60gensym752_2818589011), move_2818589008, which_2818589009, all_2818589010);
  };

  
}

function selectMoveApi_2818589040(HEX3Atmp_2818588943) {
      var Temporary5;
      var Temporary7;

  var result_2818589041 = null;

    result_2818589041 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818588943))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818588943, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818588943))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818588943, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2818588941_2818589006(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818588943, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818588943, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym757_2818589062 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2818589067 = [mnewString(0)];
    fmtRes_2818589067[0].push.apply(fmtRes_2818589067[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589067, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym757_2818589062 || [],fmtRes_2818589067[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589041;

}

function changeMoveScript_2818589070_2818589110(self_2818589111, move_2818589112, which_2818589113, all_2818589114) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym766_2818589115 = getTextDocumentEditor_2818583070(self_2818589111);
      if (isNone_2818583431(rHEX60gensym766_2818589115)) {
      break BeforeRet;
      }
      
    };
    changeMove_2818589075(get_2818583451(rHEX60gensym766_2818589115), move_2818589112, which_2818589113, all_2818589114);
  };

  
}

function changeMoveApi_2818589144(HEX3Atmp_2818589072) {
      var Temporary5;
      var Temporary7;

  var result_2818589145 = null;

    result_2818589145 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589072))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818589072, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589072))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818589072, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2818589070_2818589110(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589072, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589072, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym771_2818589166 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2818589171 = [mnewString(0)];
    fmtRes_2818589171[0].push.apply(fmtRes_2818589171[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589171, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym771_2818589166 || [],fmtRes_2818589171[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589145;

}

function moveLastScript_2818589174_2818589222(self_2818589223, move_2818589224, which_2818589225, all_2818589226, count_2818589227) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym780_2818589228 = getTextDocumentEditor_2818583070(self_2818589223);
      if (isNone_2818583431(rHEX60gensym780_2818589228)) {
      break BeforeRet;
      }
      
    };
    moveLast_2818589179(get_2818583451(rHEX60gensym780_2818589228), move_2818589224, which_2818589225, all_2818589226, count_2818589227);
  };

  
}

function moveLastApi_2818589258(HEX3Atmp_2818589176) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818589259 = null;

    result_2818589259 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589176))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818589176, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589176))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818589176, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818589176))) {
      Temporary9 = jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818589176, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2818589174_2818589222(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589176, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589176, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym785_2818589285 = [109,111,118,101,76,97,115,116];
    var fmtRes_2818589290 = [mnewString(0)];
    fmtRes_2818589290[0].push.apply(fmtRes_2818589290[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589290, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym785_2818589285 || [],fmtRes_2818589290[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589259;

}

function moveFirstScript_2818589301_2818589349(self_2818589350, move_2818589351, which_2818589352, all_2818589353, count_2818589354) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym795_2818589355 = getTextDocumentEditor_2818583070(self_2818589350);
      if (isNone_2818583431(rHEX60gensym795_2818589355)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2818589306(get_2818583451(rHEX60gensym795_2818589355), move_2818589351, which_2818589352, all_2818589353, count_2818589354);
  };

  
}

function moveFirstApi_2818589385(HEX3Atmp_2818589303) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2818589386 = null;

    result_2818589386 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589303))) {
      Temporary5 = jsonTo_2818583774(HEX5BHEX5D_1627393116(HEX3Atmp_2818589303, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2818589303))) {
      Temporary7 = jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2818589303, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2818589303))) {
      Temporary9 = jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818589303, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2818589301_2818589349(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589303, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589303, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym800_2818589412 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2818589417 = [mnewString(0)];
    fmtRes_2818589417[0].push.apply(fmtRes_2818589417[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589417, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym800_2818589412 || [],fmtRes_2818589417[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589386;

}

function setSearchQueryScript_2818589420_2818589442(self_2818589443, query_2818589444) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym807_2818589445 = getTextDocumentEditor_2818583070(self_2818589443);
      if (isNone_2818583431(rHEX60gensym807_2818589445)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2818589425(get_2818583451(rHEX60gensym807_2818589445), query_2818589444);
  };

  
}

function setSearchQueryApi_2818589472(HEX3Atmp_2818589422) {
  var result_2818589473 = null;

    result_2818589473 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2818589420_2818589442(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589422, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589422, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym812_2818589484 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2818589489 = [mnewString(0)];
    fmtRes_2818589489[0].push.apply(fmtRes_2818589489[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589489, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym812_2818589484 || [],fmtRes_2818589489[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589473;

}

function setSearchQueryFromMoveScript_2818589512_2818589522(self_2818589523, move_2818589524, count_2818589525) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym817_2818589526 = getTextDocumentEditor_2818583070(self_2818589523);
      if (isNone_2818583431(rHEX60gensym817_2818589526)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2818589517(get_2818583451(rHEX60gensym817_2818589526), move_2818589524, count_2818589525);
  };

  
}

function setSearchQueryFromMoveApi_2818589554(HEX3Atmp_2818589514) {
      var Temporary5;

  var result_2818589555 = null;

    result_2818589555 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2818589514))) {
      Temporary5 = jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2818589514, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2818589512_2818589522(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589514, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2818589514, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym822_2818589571 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2818589576 = [mnewString(0)];
    fmtRes_2818589576[0].push.apply(fmtRes_2818589576[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589576, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym822_2818589571 || [],fmtRes_2818589576[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589555;

}

function gotoDefinitionScript_2818589907_2818589914(self_2818589915) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym844_2818589916 = getTextDocumentEditor_2818583070(self_2818589915);
      if (isNone_2818583431(rHEX60gensym844_2818589916)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2818589912(get_2818583451(rHEX60gensym844_2818589916));
  };

  
}

function gotoDefinitionApi_2818589942(HEX3Atmp_2818589909) {
  var result_2818589943 = null;

    result_2818589943 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2818589907_2818589914(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589909, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym849_2818589949 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2818589954 = [mnewString(0)];
    fmtRes_2818589954[0].push.apply(fmtRes_2818589954[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818589954, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym849_2818589949 || [],fmtRes_2818589954[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818589943;

}

function getCompletionsScript_2818589971_2818589978(self_2818589979) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym853_2818589980 = getTextDocumentEditor_2818583070(self_2818589979);
      if (isNone_2818583431(rHEX60gensym853_2818589980)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2818589976(get_2818583451(rHEX60gensym853_2818589980));
  };

  
}

function getCompletionsApi_2818590006(HEX3Atmp_2818589973) {
  var result_2818590007 = null;

    result_2818590007 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2818589971_2818589978(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818589973, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym858_2818590013 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818590018 = [mnewString(0)];
    fmtRes_2818590018[0].push.apply(fmtRes_2818590018[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590018, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym858_2818590013 || [],fmtRes_2818590018[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590007;

}

function hideCompletionsScript_2818590021_2818590028(self_2818590029) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym862_2818590030 = getTextDocumentEditor_2818583070(self_2818590029);
      if (isNone_2818583431(rHEX60gensym862_2818590030)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2818590026(get_2818583451(rHEX60gensym862_2818590030));
  };

  
}

function hideCompletionsApi_2818590056(HEX3Atmp_2818590023) {
  var result_2818590057 = null;

    result_2818590057 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2818590021_2818590028(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818590023, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym867_2818590063 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2818590068 = [mnewString(0)];
    fmtRes_2818590068[0].push.apply(fmtRes_2818590068[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590068, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym867_2818590063 || [],fmtRes_2818590068[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590057;

}

function selectPrevCompletionScript_2818590071_2818590092(self_2818590093) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym870_2818590094 = getTextDocumentEditor_2818583070(self_2818590093);
      if (isNone_2818583431(rHEX60gensym870_2818590094)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2818590076(get_2818583451(rHEX60gensym870_2818590094));
  };

  
}

function selectPrevCompletionApi_2818590120(HEX3Atmp_2818590073) {
  var result_2818590121 = null;

    result_2818590121 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2818590071_2818590092(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818590073, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym875_2818590127 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818590132 = [mnewString(0)];
    fmtRes_2818590132[0].push.apply(fmtRes_2818590132[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590132, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym875_2818590127 || [],fmtRes_2818590132[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590121;

}

function selectNextCompletionScript_2818590135_2818590156(self_2818590157) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym879_2818590158 = getTextDocumentEditor_2818583070(self_2818590157);
      if (isNone_2818583431(rHEX60gensym879_2818590158)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2818590140(get_2818583451(rHEX60gensym879_2818590158));
  };

  
}

function selectNextCompletionApi_2818590184(HEX3Atmp_2818590137) {
  var result_2818590185 = null;

    result_2818590185 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2818590135_2818590156(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818590137, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym884_2818590191 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818590196 = [mnewString(0)];
    fmtRes_2818590196[0].push.apply(fmtRes_2818590196[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590196, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym884_2818590191 || [],fmtRes_2818590196[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590185;

}

function applySelectedCompletionScript_2818590199_2818590348(self_2818590349) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym888_2818590350 = getTextDocumentEditor_2818583070(self_2818590349);
      if (isNone_2818583431(rHEX60gensym888_2818590350)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2818590204(get_2818583451(rHEX60gensym888_2818590350));
  };

  
}

function applySelectedCompletionApi_2818590376(HEX3Atmp_2818590201) {
  var result_2818590377 = null;

    result_2818590377 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2818590199_2818590348(jsonTo_2818583485(HEX5BHEX5D_1627393116(HEX3Atmp_2818590201, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym893_2818590383 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2818590388 = [mnewString(0)];
    fmtRes_2818590388[0].push.apply(fmtRes_2818590388[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2818590388, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym893_2818590383 || [],fmtRes_2818590388[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2818590377;

}

function dispatch_2818590415(command_2818590414, arg_2818590413) {
    var Temporary1;

  var result_2818590420 = ({val: null});

    switch (toJSStr(command_2818590414)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818590421(setModeApi_2818583483(arg_2818590413));
      break;
    case "mode":
      Temporary1 = some_2818590421(modeApi_2818583645(arg_2818590413));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818590421(getContextWithModeApi_2818583705(arg_2818590413));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2818590421(updateTargetColumnApi_2818583767(arg_2818590413));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2818590421(invertSelectionApi_2818583881(arg_2818590413));
      break;
    case "insert":
      Temporary1 = some_2818590421(insertApi_2818583962(arg_2818590413));
      break;
    case "delete":
      Temporary1 = some_2818590421(deleteApi_2818584457(arg_2818590413));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818590421(selectPrevApi_2818584706(arg_2818590413));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818590421(selectNextApi_2818584879(arg_2818590413));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2818590421(selectInsideApi_2818584943(arg_2818590413));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2818590421(selectInsideCurrentApi_2818585006(arg_2818590413));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2818590421(selectLineApi_2818585059(arg_2818590413));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2818590421(selectLineCurrentApi_2818585114(arg_2818590413));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2818590421(selectParentTsApi_2818585179(arg_2818590413));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2818590421(selectParentCurrentTsApi_2818585247(arg_2818590413));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2818590421(insertTextApi_2818585304(arg_2818590413));
      break;
    case "undo":
      Temporary1 = some_2818590421(undoApi_2818585420(arg_2818590413));
      break;
    case "redo":
      Temporary1 = some_2818590421(redoApi_2818585500(arg_2818590413));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2818590421(scrollTextApi_2818585561(arg_2818590413));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2818590421(duplicateLastSelectionApi_2818585716(arg_2818590413));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2818590421(addCursorBelowApi_2818585786(arg_2818590413));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2818590421(addCursorAboveApi_2818585852(arg_2818590413));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2818590421(getPrevFindResultApi_2818586162(arg_2818590413));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2818590421(getNextFindResultApi_2818586391(arg_2818590413));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2818590421(addNextFindResultToSelectionApi_2818586473(arg_2818590413));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2818590421(addPrevFindResultToSelectionApi_2818586531(arg_2818590413));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2818590421(setAllFindResultToSelectionApi_2818586875(arg_2818590413));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2818590421(moveCursorColumnApi_2818586967(arg_2818590413));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2818590421(moveCursorLineApi_2818587057(arg_2818590413));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2818590421(moveCursorHomeApi_2818587128(arg_2818590413));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2818590421(moveCursorEndApi_2818587196(arg_2818590413));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2818590421(moveCursorToApi_2818587274(arg_2818590413));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2818590421(moveCursorBeforeApi_2818587357(arg_2818590413));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2818590421(moveCursorNextFindResultApi_2818587430(arg_2818590413));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2818590421(moveCursorPrevFindResultApi_2818587496(arg_2818590413));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2818590421(scrollToCursorApi_2818587559(arg_2818590413));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2818590421(reloadTreesitterApi_2818587614(arg_2818590413));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2818590421(deleteLeftApi_2818587678(arg_2818590413));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2818590421(deleteRightApi_2818587742(arg_2818590413));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2818590421(getCommandCountApi_2818587801(arg_2818590413));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2818590421(setCommandCountApi_2818587858(arg_2818590413));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2818590421(setCommandCountRestoreApi_2818587916(arg_2818590413));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2818590421(updateCommandCountApi_2818587974(arg_2818590413));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2818590421(setFlagApi_2818588035(arg_2818590413));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2818590421(getFlagApi_2818588101(arg_2818590413));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2818590421(runActionApi_2818588179(arg_2818590413));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2818590421(findWordBoundaryApi_2818588274(arg_2818590413));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2818590421(getSelectionForMoveApi_2818588439(arg_2818590413));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2818590421(setMoveApi_2818588771(arg_2818590413));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2818590421(deleteMoveApi_2818588911(arg_2818590413));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2818590421(selectMoveApi_2818589040(arg_2818590413));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2818590421(changeMoveApi_2818589144(arg_2818590413));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2818590421(moveLastApi_2818589258(arg_2818590413));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2818590421(moveFirstApi_2818589385(arg_2818590413));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2818590421(setSearchQueryApi_2818589472(arg_2818590413));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2818590421(setSearchQueryFromMoveApi_2818589554(arg_2818590413));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2818590421(gotoDefinitionApi_2818589942(arg_2818590413));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2818590421(getCompletionsApi_2818590006(arg_2818590413));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2818590421(hideCompletionsApi_2818590056(arg_2818590413));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818590421(selectPrevCompletionApi_2818590120(arg_2818590413));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818590421(selectNextCompletionApi_2818590184(arg_2818590413));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818590421(applySelectedCompletionApi_2818590376(arg_2818590413));
      break;
    default: 
      Temporary1 = none_2818590617();
      break;
    }
    result_2818590420 = nimCopy(result_2818590420, Temporary1, NTI2818584054);

  return result_2818590420;

}

function isNone_2818590702(self_2818590704) {
  var result_2818590705 = false;

    result_2818590705 = (self_2818590704.val == null);

  return result_2818590705;

}

function handleActionInternal_2818572646(self_2818572647, action_2818572648, args_2818572649) {
    var Temporary3;

  var result_2818590637 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848841(self_2818572647.editor, self_2818572647, action_2818572648, args_2818572649) == 3)) {
    self_2818572647.commandCount = subInt(self_2818572647.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2818572647.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848841(self_2818572647.editor, self_2818572647, action_2818572648, args_2818572649) == 3))) {
          break Label1;
          }
          
          self_2818572647.commandCount = subInt(self_2818572647.commandCount, 1);
        }
    };
    self_2818572647.commandCount = self_2818572647.commandCountRestore;
    self_2818572647.commandCountRestore = 0;
    result_2818590637 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2818572649;
    if (ConstSet307[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2818590656(Temporary3, "elems", toJson_2818583174({id: self_2818572647.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2818590685(dispatch_2818590415(action_2818572648, args_2818572649))) {
    self_2818572647.commandCount = subInt(self_2818572647.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2818572647.commandCount)) break Label5;
          if (isNone_2818590702(dispatch_2818590415(action_2818572648, args_2818572649))) {
          break Label4;
          }
          
          self_2818572647.commandCount = subInt(self_2818572647.commandCount, 1);
        }
    };
    self_2818572647.commandCount = self_2818572647.commandCountRestore;
    self_2818572647.commandCountRestore = 0;
    result_2818590637 = 3;
    break BeforeRet;
    }
    
    result_2818590637 = 1;
    break BeforeRet;
  };

  return result_2818590637;

}

function handleAction_2818572642(self_2818572643, action_2818572644, arg_2818572645) {
  var result_2818590719 = 0;

  BeforeRet: {
    var args_2818590720 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2818590721 = null;
      var colontmp__536871917 = null;
      colontmp__536871917 = newStringStream_1660945417(arg_2818572645);
      var p_536871918 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871918[0], colontmp__536871917, [], false);
      try {
      var _ = getTok_1694499270(p_536871918[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871918[0].tok == 1))) break Label5;
            a_2818590721 = parseJson_1627395211(p_536871918[0], false, false, 0);
            add_1627390190(args_2818590720, a_2818590721);
          }
      };
      } finally {
      close_1694498967(p_536871918[0]);
      }
    };
    result_2818590719 = handleActionInternal_2818572646(self_2818572643, action_2818572644, args_2818590720);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2818590726 = [mnewString(0)];
    fmtRes_2818590726[0].push.apply(fmtRes_2818590726[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2818590726, 0, action_2818572644, []);
    fmtRes_2818590726[0].push.apply(fmtRes_2818590726[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2818590726, 0, arg_2818572645, []);
    fmtRes_2818590726[0].push.apply(fmtRes_2818590726[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818590726[0], NTI33554449)]);
    result_2818590719 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2818590719;

}

function hasKey_1291847799(t_1291847802, key_1291847803) {
  var result_1291847804 = false;

    var hc_1291847805 = [0];
    result_1291847804 = (0 <= rawGet_1291847806(t_1291847802, key_1291847803, hc_1291847805, 0));

  return result_1291847804;

}

function contains_1291847793(t_1291847796, key_1291847797) {
  var result_1291847798 = false;

  BeforeRet: {
    result_1291847798 = hasKey_1291847799(t_1291847796, key_1291847797);
    break BeforeRet;
  };

  return result_1291847798;

}

function HEX5BHEX5D_1291848098(t_1291848101, key_1291848102) {
  var result_1291848103 = null;
  var result_1291848103_Idx = 0;

    var hcHEX60gensym22_1291848104 = [0];
    var indexHEX60gensym22_1291848111 = rawGet_1291847806(t_1291848101, key_1291848102, hcHEX60gensym22_1291848104, 0);
    if ((0 <= indexHEX60gensym22_1291848111)) {
    result_1291848103 = t_1291848101.data[chckIndx(indexHEX60gensym22_1291848111, 0, (t_1291848101.data).length - 1)]; result_1291848103_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848102);
    }
    

  return [result_1291848103, result_1291848103_Idx];

}

function invokeCallback_1291847746(self_1291847747, context_1291847748, args_1291847749) {
    var Temporary1;

  var result_1291847750 = false;

  BeforeRet: {
    if (!(contains_1291847793(self_1291847747.callbacks, context_1291847748))) {
    result_1291847750 = false;
    break BeforeRet;
    }
    
    var id_1291848168 = (Temporary1 = HEX5BHEX5D_1291848098(self_1291847747.callbacks, context_1291847748), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847750 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848179 = [mnewString(0)];
    fmtRes_1291848179[0].push.apply(fmtRes_1291848179[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2332033380(fmtRes_1291848179, 0, id_1291848168, []);
    fmtRes_1291848179[0].push.apply(fmtRes_1291848179[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848179, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848179[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847750 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847750;

}

function handleInput_2818572650(self_2818572651, input_2818572652) {
  var result_2818590730 = 0;

  BeforeRet: {
    if (invokeCallback_1291847746(self_2818572651.editor, getContextWithMode_2818582795(self_2818572651, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2818572652))) {
    result_2818590730 = 3;
    break BeforeRet;
    }
    
    insertText_2818585270(self_2818572651, input_2818572652);
    result_2818590730 = 3;
    break BeforeRet;
  };

  return result_2818590730;

}

function toJson_2952801137(self_2952801138, opt_2952801139) {
  var result_2952801140 = null;

    result_2952801140 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2952801140, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2952801140, [105,100], newJInt_1627390040(self_2952801138.id));

  return result_2952801140;

}

function none_2952801060() {
  var result_2952801066 = ({val: null});

  return result_2952801066;

}

function some_2952801100(val_2952801102) {
  var result_2952801103 = ({val: null});

    if (!(!((val_2952801102 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2952801103.val = val_2952801102;

  return result_2952801103;

}

function getAstDocumentEditor_2952801050(wrapper_2952801051) {
      var Temporary1;

  var result_2952801056 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2952801056 = nimCopy(result_2952801056, none_2952801060(), NTI2952796958);
    break BeforeRet;
    }
    
      var oHEX60gensym521_2952801069 = getEditorForId_1291850653(gEditor, wrapper_2952801051.id);
      if (!isSome_2818583094(oHEX60gensym521_2952801069)) Temporary1 = false; else {        var editor_2952801092 = get_2818583114(oHEX60gensym521_2952801069);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2952801092.m_type, NTI2952791527)) {
    result_2952801056 = nimCopy(result_2952801056, some_2952801100(editor_2952801092), NTI2952796958);
    break BeforeRet;
    }
    
    }
    
    result_2952801056 = nimCopy(result_2952801056, none_2952801060(), NTI2952796958);
    break BeforeRet;
  };

  return result_2952801056;

}

function isNone_2952801168(self_2952801170) {
  var result_2952801171 = false;

    result_2952801171 = (self_2952801170.val == null);

  return result_2952801171;

}

function get_2952801188(self_2952801190) {
  var result_2952801191 = null;

    if (isNone_2952801168(self_2952801190)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2952801191 = self_2952801190["val"];

  return result_2952801191;

}

function moveCursorScript_2952801150_2952801160(self_2952801161, direction_2952801162) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym526_2952801163 = getAstDocumentEditor_2952801050(self_2952801161);
      if (isNone_2952801168(rHEX60gensym526_2952801163)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2952801155(get_2952801188(rHEX60gensym526_2952801163), direction_2952801162);
  };

  
}

function fromJsonHook_2952801141(t_2952801142, jsonNode_2952801143) {
    t_2952801142.id = jsonTo_2818583181(HEX5BHEX5D_1627393037(jsonNode_2952801143, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2952801221(a_2952801223, b_2952801224, opt_2952801225) {
    if (!(!(HEX3DHEX3D_1627392026(b_2952801224, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2952801224}));
    }
    
    fromJsonHook_2952801141(a_2952801223, b_2952801224);

  
}

function jsonTo_2952801215(b_2952801217, opt_2952801219) {
  var result_2952801220 = [({id: 0})];

    fromJson_2952801221(result_2952801220[0], b_2952801217, opt_2952801219);

  return result_2952801220[0];

}

function moveCursorApi_2952801213(HEX3Atmp_2952801152) {
  var result_2952801214 = null;

    result_2952801214 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2952801150_2952801160(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801152, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818583181(HEX5BHEX5D_1627393116(HEX3Atmp_2952801152, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym531_2952801237 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2952801242 = [mnewString(0)];
    fmtRes_2952801242[0].push.apply(fmtRes_2952801242[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801242, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym531_2952801237 || [],fmtRes_2952801242[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801214;

}

function moveCursorUpScript_2952801308_2952801327(self_2952801328) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym538_2952801329 = getAstDocumentEditor_2952801050(self_2952801328);
      if (isNone_2952801168(rHEX60gensym538_2952801329)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2952801313(get_2952801188(rHEX60gensym538_2952801329));
  };

  
}

function moveCursorUpApi_2952801355(HEX3Atmp_2952801310) {
  var result_2952801356 = null;

    result_2952801356 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2952801308_2952801327(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801310, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym543_2952801362 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2952801367 = [mnewString(0)];
    fmtRes_2952801367[0].push.apply(fmtRes_2952801367[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801367, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym543_2952801362 || [],fmtRes_2952801367[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801356;

}

function moveCursorDownScript_2952801370_2952801377(self_2952801378) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym549_2952801379 = getAstDocumentEditor_2952801050(self_2952801378);
      if (isNone_2952801168(rHEX60gensym549_2952801379)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2952801375(get_2952801188(rHEX60gensym549_2952801379));
  };

  
}

function moveCursorDownApi_2952801405(HEX3Atmp_2952801372) {
  var result_2952801406 = null;

    result_2952801406 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2952801370_2952801377(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801372, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym554_2952801412 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2952801417 = [mnewString(0)];
    fmtRes_2952801417[0].push.apply(fmtRes_2952801417[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801417, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym554_2952801412 || [],fmtRes_2952801417[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801406;

}

function moveCursorNextScript_2952801420_2952801434(self_2952801435) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym558_2952801436 = getAstDocumentEditor_2952801050(self_2952801435);
      if (isNone_2952801168(rHEX60gensym558_2952801436)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2952801425(get_2952801188(rHEX60gensym558_2952801436));
  };

  
}

function moveCursorNextApi_2952801462(HEX3Atmp_2952801422) {
  var result_2952801463 = null;

    result_2952801463 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2952801420_2952801434(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801422, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym563_2952801469 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2952801474 = [mnewString(0)];
    fmtRes_2952801474[0].push.apply(fmtRes_2952801474[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801474, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym563_2952801469 || [],fmtRes_2952801474[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801463;

}

function moveCursorPrevScript_2952801488_2952801501(self_2952801502) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym567_2952801503 = getAstDocumentEditor_2952801050(self_2952801502);
      if (isNone_2952801168(rHEX60gensym567_2952801503)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2952801493(get_2952801188(rHEX60gensym567_2952801503));
  };

  
}

function moveCursorPrevApi_2952801529(HEX3Atmp_2952801490) {
  var result_2952801530 = null;

    result_2952801530 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2952801488_2952801501(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801490, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym572_2952801536 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2952801541 = [mnewString(0)];
    fmtRes_2952801541[0].push.apply(fmtRes_2952801541[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801541, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym572_2952801536 || [],fmtRes_2952801541[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801530;

}

function moveCursorNextLineScript_2952801554_2952801587(self_2952801588) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym576_2952801589 = getAstDocumentEditor_2952801050(self_2952801588);
      if (isNone_2952801168(rHEX60gensym576_2952801589)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2952801559(get_2952801188(rHEX60gensym576_2952801589));
  };

  
}

function moveCursorNextLineApi_2952801615(HEX3Atmp_2952801556) {
  var result_2952801616 = null;

    result_2952801616 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2952801554_2952801587(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801556, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym581_2952801622 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2952801627 = [mnewString(0)];
    fmtRes_2952801627[0].push.apply(fmtRes_2952801627[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801627, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym581_2952801622 || [],fmtRes_2952801627[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801616;

}

function moveCursorPrevLineScript_2952801639_2952801672(self_2952801673) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym585_2952801674 = getAstDocumentEditor_2952801050(self_2952801673);
      if (isNone_2952801168(rHEX60gensym585_2952801674)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2952801644(get_2952801188(rHEX60gensym585_2952801674));
  };

  
}

function moveCursorPrevLineApi_2952801700(HEX3Atmp_2952801641) {
  var result_2952801701 = null;

    result_2952801701 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2952801639_2952801672(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801641, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym590_2952801707 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2952801712 = [mnewString(0)];
    fmtRes_2952801712[0].push.apply(fmtRes_2952801712[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801712, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym590_2952801707 || [],fmtRes_2952801712[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801701;

}

function selectContainingScript_2952801725_2952801889(self_2952801890, container_2952801891) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym595_2952801892 = getAstDocumentEditor_2952801050(self_2952801890);
      if (isNone_2952801168(rHEX60gensym595_2952801892)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2952801730(get_2952801188(rHEX60gensym595_2952801892), container_2952801891);
  };

  
}

function selectContainingApi_2952801919(HEX3Atmp_2952801727) {
  var result_2952801920 = null;

    result_2952801920 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2952801725_2952801889(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801727, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952801727, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym600_2952801931 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2952801936 = [mnewString(0)];
    fmtRes_2952801936[0].push.apply(fmtRes_2952801936[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801936, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym600_2952801931 || [],fmtRes_2952801936[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801920;

}

function deleteSelectedScript_2952801939_2952801949(self_2952801950) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym609_2952801951 = getAstDocumentEditor_2952801050(self_2952801950);
      if (isNone_2952801168(rHEX60gensym609_2952801951)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2952801944(get_2952801188(rHEX60gensym609_2952801951));
  };

  
}

function deleteSelectedApi_2952801977(HEX3Atmp_2952801941) {
  var result_2952801978 = null;

    result_2952801978 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2952801939_2952801949(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952801941, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym614_2952801984 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2952801989 = [mnewString(0)];
    fmtRes_2952801989[0].push.apply(fmtRes_2952801989[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952801989, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym614_2952801984 || [],fmtRes_2952801989[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952801978;

}

function copySelectedScript_2952802055_2952802065(self_2952802066) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym617_2952802067 = getAstDocumentEditor_2952801050(self_2952802066);
      if (isNone_2952801168(rHEX60gensym617_2952802067)) {
      break BeforeRet;
      }
      
    };
    copySelected_2952802060(get_2952801188(rHEX60gensym617_2952802067));
  };

  
}

function copySelectedApi_2952802093(HEX3Atmp_2952802057) {
  var result_2952802094 = null;

    result_2952802094 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2952802055_2952802065(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802057, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym622_2952802100 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2952802105 = [mnewString(0)];
    fmtRes_2952802105[0].push.apply(fmtRes_2952802105[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802105, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym622_2952802100 || [],fmtRes_2952802105[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802094;

}

function finishEditScript_2952802123_2952802173(self_2952802174, apply_2952802175) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym626_2952802176 = getAstDocumentEditor_2952801050(self_2952802174);
      if (isNone_2952801168(rHEX60gensym626_2952802176)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2952797888(get_2952801188(rHEX60gensym626_2952802176), apply_2952802175);
  };

  
}

function finishEditApi_2952802203(HEX3Atmp_2952802125) {
  var result_2952802204 = null;

    result_2952802204 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2952802123_2952802173(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802125, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818584223(HEX5BHEX5D_1627393116(HEX3Atmp_2952802125, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym631_2952802215 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2952802220 = [mnewString(0)];
    fmtRes_2952802220[0].push.apply(fmtRes_2952802220[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802220, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym631_2952802215 || [],fmtRes_2952802220[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802204;

}

function undoScript2_2952802263_2952802296(self_2952802297) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym637_2952802298 = getAstDocumentEditor_2952801050(self_2952802297);
      if (isNone_2952801168(rHEX60gensym637_2952802298)) {
      break BeforeRet;
      }
      
    };
    undo_2952802268(get_2952801188(rHEX60gensym637_2952802298));
  };

  
}

function undoApi2_2952802324(HEX3Atmp_2952802265) {
  var result_2952802325 = null;

    result_2952802325 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2952802263_2952802296(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802265, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym642_2952802331 = [117,110,100,111];
    var fmtRes_2952802336 = [mnewString(0)];
    fmtRes_2952802336[0].push.apply(fmtRes_2952802336[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802336, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym642_2952802331 || [],fmtRes_2952802336[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802325;

}

function redoScript2_2952802340_2952802373(self_2952802374) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym646_2952802375 = getAstDocumentEditor_2952801050(self_2952802374);
      if (isNone_2952801168(rHEX60gensym646_2952802375)) {
      break BeforeRet;
      }
      
    };
    redo_2952802345(get_2952801188(rHEX60gensym646_2952802375));
  };

  
}

function redoApi2_2952802401(HEX3Atmp_2952802342) {
  var result_2952802402 = null;

    result_2952802402 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2952802340_2952802373(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802342, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym651_2952802408 = [114,101,100,111];
    var fmtRes_2952802413 = [mnewString(0)];
    fmtRes_2952802413[0].push.apply(fmtRes_2952802413[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802413, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym651_2952802408 || [],fmtRes_2952802413[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802402;

}

function insertAfterSmartScript_2952802416_2952802541(self_2952802542, nodeTemplate_2952802543) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym656_2952802544 = getAstDocumentEditor_2952801050(self_2952802542);
      if (isNone_2952801168(rHEX60gensym656_2952802544)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2952802421(get_2952801188(rHEX60gensym656_2952802544), nodeTemplate_2952802543);
  };

  
}

function insertAfterSmartApi_2952802571(HEX3Atmp_2952802418) {
  var result_2952802572 = null;

    result_2952802572 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2952802416_2952802541(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802418, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952802418, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym661_2952802583 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2952802588 = [mnewString(0)];
    fmtRes_2952802588[0].push.apply(fmtRes_2952802588[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802588, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym661_2952802583 || [],fmtRes_2952802588[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802572;

}

function insertAfterScript_2952802771_2952802864(self_2952802865, nodeTemplate_2952802866) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym669_2952802867 = getAstDocumentEditor_2952801050(self_2952802865);
      if (isNone_2952801168(rHEX60gensym669_2952802867)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2952802776(get_2952801188(rHEX60gensym669_2952802867), nodeTemplate_2952802866);
  };

  
}

function insertAfterApi_2952802894(HEX3Atmp_2952802773) {
  var result_2952802895 = null;

    result_2952802895 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2952802771_2952802864(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802773, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952802773, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym674_2952802906 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2952802911 = [mnewString(0)];
    fmtRes_2952802911[0].push.apply(fmtRes_2952802911[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952802911, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym674_2952802906 || [],fmtRes_2952802911[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952802895;

}

function insertBeforeScript_2952802926_2952803018(self_2952803019, nodeTemplate_2952803020) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym681_2952803021 = getAstDocumentEditor_2952801050(self_2952803019);
      if (isNone_2952801168(rHEX60gensym681_2952803021)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2952802931(get_2952801188(rHEX60gensym681_2952803021), nodeTemplate_2952803020);
  };

  
}

function insertBeforeApi_2952803048(HEX3Atmp_2952802928) {
  var result_2952803049 = null;

    result_2952803049 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2952802926_2952803018(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952802928, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952802928, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym686_2952803060 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2952803065 = [mnewString(0)];
    fmtRes_2952803065[0].push.apply(fmtRes_2952803065[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803065, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym686_2952803060 || [],fmtRes_2952803065[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803049;

}

function insertChildScript_2952803080_2952803171(self_2952803172, nodeTemplate_2952803173) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym693_2952803174 = getAstDocumentEditor_2952801050(self_2952803172);
      if (isNone_2952801168(rHEX60gensym693_2952803174)) {
      break BeforeRet;
      }
      
    };
    insertChild_2952803085(get_2952801188(rHEX60gensym693_2952803174), nodeTemplate_2952803173);
  };

  
}

function insertChildApi_2952803201(HEX3Atmp_2952803082) {
  var result_2952803202 = null;

    result_2952803202 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2952803080_2952803171(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803082, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803082, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym698_2952803213 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2952803218 = [mnewString(0)];
    fmtRes_2952803218[0].push.apply(fmtRes_2952803218[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803218, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym698_2952803213 || [],fmtRes_2952803218[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803202;

}

function replaceScript_2952803233_2952803278(self_2952803279, nodeTemplate_2952803280) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym705_2952803281 = getAstDocumentEditor_2952801050(self_2952803279);
      if (isNone_2952801168(rHEX60gensym705_2952803281)) {
      break BeforeRet;
      }
      
    };
    replace_2952803238(get_2952801188(rHEX60gensym705_2952803281), nodeTemplate_2952803280);
  };

  
}

function replaceApi_2952803308(HEX3Atmp_2952803235) {
  var result_2952803309 = null;

    result_2952803309 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2952803233_2952803278(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803235, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803235, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym710_2952803320 = [114,101,112,108,97,99,101];
    var fmtRes_2952803325 = [mnewString(0)];
    fmtRes_2952803325[0].push.apply(fmtRes_2952803325[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803325, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym710_2952803320 || [],fmtRes_2952803325[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803309;

}

function replaceEmptyScript_2952803340_2952803389(self_2952803390, nodeTemplate_2952803391) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym715_2952803392 = getAstDocumentEditor_2952801050(self_2952803390);
      if (isNone_2952801168(rHEX60gensym715_2952803392)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2952803345(get_2952801188(rHEX60gensym715_2952803392), nodeTemplate_2952803391);
  };

  
}

function replaceEmptyApi_2952803419(HEX3Atmp_2952803342) {
  var result_2952803420 = null;

    result_2952803420 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2952803340_2952803389(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803342, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803342, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym720_2952803431 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2952803436 = [mnewString(0)];
    fmtRes_2952803436[0].push.apply(fmtRes_2952803436[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803436, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym720_2952803431 || [],fmtRes_2952803436[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803420;

}

function replaceParentScript_2952803451_2952803468(self_2952803469) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym724_2952803470 = getAstDocumentEditor_2952801050(self_2952803469);
      if (isNone_2952801168(rHEX60gensym724_2952803470)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2952803456(get_2952801188(rHEX60gensym724_2952803470));
  };

  
}

function replaceParentApi_2952803496(HEX3Atmp_2952803453) {
  var result_2952803497 = null;

    result_2952803497 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2952803451_2952803468(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803453, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym729_2952803503 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2952803508 = [mnewString(0)];
    fmtRes_2952803508[0].push.apply(fmtRes_2952803508[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803508, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym729_2952803503 || [],fmtRes_2952803508[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803497;

}

function wrapScript_2952803511_2952803580(self_2952803581, nodeTemplate_2952803582) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym733_2952803583 = getAstDocumentEditor_2952801050(self_2952803581);
      if (isNone_2952801168(rHEX60gensym733_2952803583)) {
      break BeforeRet;
      }
      
    };
    wrap_2952803516(get_2952801188(rHEX60gensym733_2952803583), nodeTemplate_2952803582);
  };

  
}

function wrapApi_2952803610(HEX3Atmp_2952803513) {
  var result_2952803611 = null;

    result_2952803611 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2952803511_2952803580(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803513, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952803513, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym738_2952803622 = [119,114,97,112];
    var fmtRes_2952803627 = [mnewString(0)];
    fmtRes_2952803627[0].push.apply(fmtRes_2952803627[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803627, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym738_2952803622 || [],fmtRes_2952803627[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803611;

}

function editPrevEmptyScript_2952803654_2952803667(self_2952803668) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym742_2952803669 = getAstDocumentEditor_2952801050(self_2952803668);
      if (isNone_2952801168(rHEX60gensym742_2952803669)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2952803659(get_2952801188(rHEX60gensym742_2952803669));
  };

  
}

function editPrevEmptyApi_2952803695(HEX3Atmp_2952803656) {
  var result_2952803696 = null;

    result_2952803696 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2952803654_2952803667(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803656, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym747_2952803702 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2952803707 = [mnewString(0)];
    fmtRes_2952803707[0].push.apply(fmtRes_2952803707[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803707, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym747_2952803702 || [],fmtRes_2952803707[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803696;

}

function editNextEmptyScript_2952803717_2952803738(self_2952803739) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym751_2952803740 = getAstDocumentEditor_2952801050(self_2952803739);
      if (isNone_2952801168(rHEX60gensym751_2952803740)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2952803722(get_2952801188(rHEX60gensym751_2952803740));
  };

  
}

function editNextEmptyApi_2952803766(HEX3Atmp_2952803719) {
  var result_2952803767 = null;

    result_2952803767 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2952803717_2952803738(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803719, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym756_2952803773 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2952803778 = [mnewString(0)];
    fmtRes_2952803778[0].push.apply(fmtRes_2952803778[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803778, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym756_2952803773 || [],fmtRes_2952803778[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803767;

}

function renameScript_2952803794_2952803801(self_2952803802) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym760_2952803803 = getAstDocumentEditor_2952801050(self_2952803802);
      if (isNone_2952801168(rHEX60gensym760_2952803803)) {
      break BeforeRet;
      }
      
    };
    rename_2952803799(get_2952801188(rHEX60gensym760_2952803803));
  };

  
}

function renameApi_2952803829(HEX3Atmp_2952803796) {
  var result_2952803830 = null;

    result_2952803830 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2952803794_2952803801(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803796, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym765_2952803836 = [114,101,110,97,109,101];
    var fmtRes_2952803841 = [mnewString(0)];
    fmtRes_2952803841[0].push.apply(fmtRes_2952803841[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803841, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym765_2952803836 || [],fmtRes_2952803841[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803830;

}

function selectPrevCompletionScript2_2952803844_2952803862(self_2952803863) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym768_2952803864 = getAstDocumentEditor_2952801050(self_2952803863);
      if (isNone_2952801168(rHEX60gensym768_2952803864)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2952803849(get_2952801188(rHEX60gensym768_2952803864));
  };

  
}

function selectPrevCompletionApi2_2952803890(HEX3Atmp_2952803846) {
  var result_2952803891 = null;

    result_2952803891 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2952803844_2952803862(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803846, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym773_2952803897 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952803902 = [mnewString(0)];
    fmtRes_2952803902[0].push.apply(fmtRes_2952803902[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803902, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym773_2952803897 || [],fmtRes_2952803902[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803891;

}

function selectNextCompletionScript2_2952803905_2952803923(editor_2952803924) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym777_2952803925 = getAstDocumentEditor_2952801050(editor_2952803924);
      if (isNone_2952801168(rHEX60gensym777_2952803925)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2952803910(get_2952801188(rHEX60gensym777_2952803925));
  };

  
}

function selectNextCompletionApi2_2952803951(HEX3Atmp_2952803907) {
  var result_2952803952 = null;

    result_2952803952 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2952803905_2952803923(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803907, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym782_2952803958 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952803963 = [mnewString(0)];
    fmtRes_2952803963[0].push.apply(fmtRes_2952803963[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952803963, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym782_2952803958 || [],fmtRes_2952803963[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952803952;

}

function applySelectedCompletionScript2_2952803966_2952804086(editor_2952804087) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym786_2952804088 = getAstDocumentEditor_2952801050(editor_2952804087);
      if (isNone_2952801168(rHEX60gensym786_2952804088)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2952803971(get_2952801188(rHEX60gensym786_2952804088));
  };

  
}

function applySelectedCompletionApi2_2952804114(HEX3Atmp_2952803968) {
  var result_2952804115 = null;

    result_2952804115 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2952803966_2952804086(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952803968, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym791_2952804121 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804126 = [mnewString(0)];
    fmtRes_2952804126[0].push.apply(fmtRes_2952804126[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804126, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym791_2952804121 || [],fmtRes_2952804126[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804115;

}

function cancelAndNextCompletionScript_2952804177_2952804184(self_2952804185) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym801_2952804186 = getAstDocumentEditor_2952801050(self_2952804185);
      if (isNone_2952801168(rHEX60gensym801_2952804186)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2952804182(get_2952801188(rHEX60gensym801_2952804186));
  };

  
}

function cancelAndNextCompletionApi_2952804212(HEX3Atmp_2952804179) {
  var result_2952804213 = null;

    result_2952804213 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2952804177_2952804184(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804179, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym806_2952804219 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804224 = [mnewString(0)];
    fmtRes_2952804224[0].push.apply(fmtRes_2952804224[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804224, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym806_2952804219 || [],fmtRes_2952804224[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804213;

}

function cancelAndPrevCompletionScript_2952804227_2952804234(self_2952804235) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym809_2952804236 = getAstDocumentEditor_2952801050(self_2952804235);
      if (isNone_2952801168(rHEX60gensym809_2952804236)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2952804232(get_2952801188(rHEX60gensym809_2952804236));
  };

  
}

function cancelAndPrevCompletionApi_2952804262(HEX3Atmp_2952804229) {
  var result_2952804263 = null;

    result_2952804263 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2952804227_2952804234(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804229, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym814_2952804269 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2952804274 = [mnewString(0)];
    fmtRes_2952804274[0].push.apply(fmtRes_2952804274[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804274, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym814_2952804269 || [],fmtRes_2952804274[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804263;

}

function cancelAndDeleteScript_2952804277_2952804287(self_2952804288) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym817_2952804289 = getAstDocumentEditor_2952801050(self_2952804288);
      if (isNone_2952801168(rHEX60gensym817_2952804289)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2952804282(get_2952801188(rHEX60gensym817_2952804289));
  };

  
}

function cancelAndDeleteApi_2952804315(HEX3Atmp_2952804279) {
  var result_2952804316 = null;

    result_2952804316 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2952804277_2952804287(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804279, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym822_2952804322 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2952804327 = [mnewString(0)];
    fmtRes_2952804327[0].push.apply(fmtRes_2952804327[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804327, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym822_2952804322 || [],fmtRes_2952804327[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804316;

}

function moveNodeToPrevSpaceScript_2952804330_2952804441(self_2952804442) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym825_2952804443 = getAstDocumentEditor_2952801050(self_2952804442);
      if (isNone_2952801168(rHEX60gensym825_2952804443)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2952804335(get_2952801188(rHEX60gensym825_2952804443));
  };

  
}

function moveNodeToPrevSpaceApi_2952804469(HEX3Atmp_2952804332) {
  var result_2952804470 = null;

    result_2952804470 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2952804330_2952804441(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804332, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym830_2952804476 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2952804481 = [mnewString(0)];
    fmtRes_2952804481[0].push.apply(fmtRes_2952804481[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804481, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym830_2952804476 || [],fmtRes_2952804481[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804470;

}

function moveNodeToNextSpaceScript_2952804492_2952804604(self_2952804605) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym838_2952804606 = getAstDocumentEditor_2952801050(self_2952804605);
      if (isNone_2952801168(rHEX60gensym838_2952804606)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2952804497(get_2952801188(rHEX60gensym838_2952804606));
  };

  
}

function moveNodeToNextSpaceApi_2952804632(HEX3Atmp_2952804494) {
  var result_2952804633 = null;

    result_2952804633 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2952804492_2952804604(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804494, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym843_2952804639 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2952804644 = [mnewString(0)];
    fmtRes_2952804644[0].push.apply(fmtRes_2952804644[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804644, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym843_2952804639 || [],fmtRes_2952804644[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804633;

}

function selectPrevScript2_2952804658_2952804665(self_2952804666) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym850_2952804667 = getAstDocumentEditor_2952801050(self_2952804666);
      if (isNone_2952801168(rHEX60gensym850_2952804667)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2952804663(get_2952801188(rHEX60gensym850_2952804667));
  };

  
}

function selectPrevApi2_2952804693(HEX3Atmp_2952804660) {
  var result_2952804694 = null;

    result_2952804694 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2952804658_2952804665(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804660, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym855_2952804700 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2952804705 = [mnewString(0)];
    fmtRes_2952804705[0].push.apply(fmtRes_2952804705[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804705, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym855_2952804700 || [],fmtRes_2952804705[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804694;

}

function selectNextScript2_2952804709_2952804716(self_2952804717) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym858_2952804718 = getAstDocumentEditor_2952801050(self_2952804717);
      if (isNone_2952801168(rHEX60gensym858_2952804718)) {
      break BeforeRet;
      }
      
    };
    selectNext_2952804714(get_2952801188(rHEX60gensym858_2952804718));
  };

  
}

function selectNextApi2_2952804744(HEX3Atmp_2952804711) {
  var result_2952804745 = null;

    result_2952804745 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2952804709_2952804716(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804711, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym863_2952804751 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2952804756 = [mnewString(0)];
    fmtRes_2952804756[0].push.apply(fmtRes_2952804756[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952804756, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym863_2952804751 || [],fmtRes_2952804756[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952804745;

}

function gotoScript_2952804760_2952805547(self_2952805548, where_2952805549) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym867_2952805550 = getAstDocumentEditor_2952801050(self_2952805548);
      if (isNone_2952801168(rHEX60gensym867_2952805550)) {
      break BeforeRet;
      }
      
    };
    goto_2952804765(get_2952801188(rHEX60gensym867_2952805550), where_2952805549);
  };

  
}

function gotoApi_2952805577(HEX3Atmp_2952804762) {
  var result_2952805578 = null;

    result_2952805578 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2952804760_2952805547(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952804762, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952804762, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym872_2952805589 = [103,111,116,111];
    var fmtRes_2952805594 = [mnewString(0)];
    fmtRes_2952805594[0].push.apply(fmtRes_2952805594[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952805594, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym872_2952805589 || [],fmtRes_2952805594[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952805578;

}

function runSelectedFunctionScript_2952805702_2952805928(self_2952805929) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym893_2952805930 = getAstDocumentEditor_2952801050(self_2952805929);
      if (isNone_2952801168(rHEX60gensym893_2952805930)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2952805707(get_2952801188(rHEX60gensym893_2952805930));
  };

  
}

function runSelectedFunctionApi_2952805956(HEX3Atmp_2952805704) {
  var result_2952805957 = null;

    result_2952805957 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2952805702_2952805928(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952805704, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym898_2952805963 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2952805968 = [mnewString(0)];
    fmtRes_2952805968[0].push.apply(fmtRes_2952805968[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952805968, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym898_2952805963 || [],fmtRes_2952805968[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952805957;

}

function toggleOptionScript_2952805980_2952805988(self_2952805989, name_2952805990) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym916_2952805991 = getAstDocumentEditor_2952801050(self_2952805989);
      if (isNone_2952801168(rHEX60gensym916_2952805991)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2952805985(get_2952801188(rHEX60gensym916_2952805991), name_2952805990);
  };

  
}

function toggleOptionApi_2952806018(HEX3Atmp_2952805982) {
  var result_2952806019 = null;

    result_2952806019 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2952805980_2952805988(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952805982, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952805982, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym921_2952806030 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2952806035 = [mnewString(0)];
    fmtRes_2952806035[0].push.apply(fmtRes_2952806035[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806035, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym921_2952806030 || [],fmtRes_2952806035[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806019;

}

function runLastCommandScript_2952806042_2952806050(self_2952806051, which_2952806052) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym925_2952806053 = getAstDocumentEditor_2952801050(self_2952806051);
      if (isNone_2952801168(rHEX60gensym925_2952806053)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2952806047(get_2952801188(rHEX60gensym925_2952806053), which_2952806052);
  };

  
}

function runLastCommandApi_2952806080(HEX3Atmp_2952806044) {
  var result_2952806081 = null;

    result_2952806081 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2952806042_2952806050(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806044, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806044, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym930_2952806092 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2952806097 = [mnewString(0)];
    fmtRes_2952806097[0].push.apply(fmtRes_2952806097[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806097, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym930_2952806092 || [],fmtRes_2952806097[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806081;

}

function selectCenterNodeScript_2952806100_2952806364(self_2952806365) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym933_2952806366 = getAstDocumentEditor_2952801050(self_2952806365);
      if (isNone_2952801168(rHEX60gensym933_2952806366)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2952806105(get_2952801188(rHEX60gensym933_2952806366));
  };

  
}

function selectCenterNodeApi_2952806392(HEX3Atmp_2952806102) {
  var result_2952806393 = null;

    result_2952806393 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2952806100_2952806364(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806102, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym938_2952806399 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2952806404 = [mnewString(0)];
    fmtRes_2952806404[0].push.apply(fmtRes_2952806404[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806404, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym938_2952806399 || [],fmtRes_2952806404[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806393;

}

function scrollScript_2952806436_2952806448(self_2952806449, amount_2952806450) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym950_2952806451 = getAstDocumentEditor_2952801050(self_2952806449);
      if (isNone_2952801168(rHEX60gensym950_2952806451)) {
      break BeforeRet;
      }
      
    };
    scroll_2952806441(get_2952801188(rHEX60gensym950_2952806451), amount_2952806450);
  };

  
}

function scrollApi_2952806478(HEX3Atmp_2952806438) {
  var result_2952806479 = null;

    result_2952806479 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2952806436_2952806448(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806438, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2818585568(HEX5BHEX5D_1627393116(HEX3Atmp_2952806438, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym955_2952806490 = [115,99,114,111,108,108];
    var fmtRes_2952806495 = [mnewString(0)];
    fmtRes_2952806495[0].push.apply(fmtRes_2952806495[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806495, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym955_2952806490 || [],fmtRes_2952806495[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806479;

}

function scrollOutputScript_2952806498_2952806517(self_2952806518, arg_2952806519) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym959_2952806520 = getAstDocumentEditor_2952801050(self_2952806518);
      if (isNone_2952801168(rHEX60gensym959_2952806520)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2952806503(get_2952801188(rHEX60gensym959_2952806520), arg_2952806519);
  };

  
}

function scrollOutputApi_2952806547(HEX3Atmp_2952806500) {
  var result_2952806548 = null;

    result_2952806548 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2952806498_2952806517(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806500, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806500, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym964_2952806559 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2952806564 = [mnewString(0)];
    fmtRes_2952806564[0].push.apply(fmtRes_2952806564[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806564, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym964_2952806559 || [],fmtRes_2952806564[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806548;

}

function dumpContextScript_2952806567_2952806574(self_2952806575) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym967_2952806576 = getAstDocumentEditor_2952801050(self_2952806575);
      if (isNone_2952801168(rHEX60gensym967_2952806576)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2952806572(get_2952801188(rHEX60gensym967_2952806576));
  };

  
}

function dumpContextApi_2952806602(HEX3Atmp_2952806569) {
  var result_2952806603 = null;

    result_2952806603 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2952806567_2952806574(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806569, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym972_2952806609 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2952806614 = [mnewString(0)];
    fmtRes_2952806614[0].push.apply(fmtRes_2952806614[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806614, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym972_2952806609 || [],fmtRes_2952806614[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806603;

}

function setModeScript2_2952806761_2952806801(self_2952806802, mode_2952806803) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym976_2952806804 = getAstDocumentEditor_2952801050(self_2952806802);
      if (isNone_2952801168(rHEX60gensym976_2952806804)) {
      break BeforeRet;
      }
      
    };
    setMode_2952806766(get_2952801188(rHEX60gensym976_2952806804), mode_2952806803);
  };

  
}

function setModeApi2_2952806831(HEX3Atmp_2952806763) {
  var result_2952806832 = null;

    result_2952806832 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2952806761_2952806801(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806763, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806763, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym981_2952806843 = [115,101,116,77,111,100,101];
    var fmtRes_2952806848 = [mnewString(0)];
    fmtRes_2952806848[0].push.apply(fmtRes_2952806848[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806848, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym981_2952806843 || [],fmtRes_2952806848[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2952806832;

}

function modeScript2_2952806852_2952806860(self_2952806861) {
  var result_2952806862 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym987_2952806863 = getAstDocumentEditor_2952801050(self_2952806861);
      if (isNone_2952801168(rHEX60gensym987_2952806863)) {
      break BeforeRet;
      }
      
    };
    result_2952806862 = nimCopy(null, mode_2952806857(get_2952801188(rHEX60gensym987_2952806863)), NTI33554449);
  };

  return result_2952806862;

}

function modeApi2_2952806890(HEX3Atmp_2952806854) {
  var result_2952806891 = null;

  BeforeRet: {
    result_2952806891 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2952806891 = toJson_1811939932(modeScript2_2952806852_2952806860(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806854, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym993_2952806901 = [109,111,100,101];
    var fmtRes_2952806906 = [mnewString(0)];
    fmtRes_2952806906[0].push.apply(fmtRes_2952806906[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806906, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym993_2952806901 || [],fmtRes_2952806906[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2952806891;

}

function getContextWithModeScript2_2952806909_2952806918(self_2952806919, context_2952806920) {
  var result_2952806921 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym997_2952806922 = getAstDocumentEditor_2952801050(self_2952806919);
      if (isNone_2952801168(rHEX60gensym997_2952806922)) {
      break BeforeRet;
      }
      
    };
    result_2952806921 = nimCopy(null, getContextWithMode_2952806914(get_2952801188(rHEX60gensym997_2952806922), context_2952806920), NTI33554449);
  };

  return result_2952806921;

}

function getContextWithModeApi2_2952806950(HEX3Atmp_2952806911) {
  var result_2952806951 = null;

  BeforeRet: {
    result_2952806951 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2952806951 = toJson_1811939932(getContextWithModeScript2_2952806909_2952806918(jsonTo_2952801215(HEX5BHEX5D_1627393116(HEX3Atmp_2952806911, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2952806911, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1003_2952806966 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2952806971 = [mnewString(0)];
    fmtRes_2952806971[0].push.apply(fmtRes_2952806971[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2952806971, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1003_2952806966 || [],fmtRes_2952806971[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2952806951;

}

function dispatch_2952806976(command_2952806975, arg_2952806974) {
    var Temporary1;

  var result_2952806978 = ({val: null});

    switch (toJSStr(command_2952806975)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2818590421(moveCursorApi_2952801213(arg_2952806974));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2818590421(moveCursorUpApi_2952801355(arg_2952806974));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2818590421(moveCursorDownApi_2952801405(arg_2952806974));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2818590421(moveCursorNextApi_2952801462(arg_2952806974));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2818590421(moveCursorPrevApi_2952801529(arg_2952806974));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2818590421(moveCursorNextLineApi_2952801615(arg_2952806974));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2818590421(moveCursorPrevLineApi_2952801700(arg_2952806974));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2818590421(selectContainingApi_2952801919(arg_2952806974));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2818590421(deleteSelectedApi_2952801977(arg_2952806974));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2818590421(copySelectedApi_2952802093(arg_2952806974));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2818590421(finishEditApi_2952802203(arg_2952806974));
      break;
    case "undo":
      Temporary1 = some_2818590421(undoApi2_2952802324(arg_2952806974));
      break;
    case "redo":
      Temporary1 = some_2818590421(redoApi2_2952802401(arg_2952806974));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2818590421(insertAfterSmartApi_2952802571(arg_2952806974));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2818590421(insertAfterApi_2952802894(arg_2952806974));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2818590421(insertBeforeApi_2952803048(arg_2952806974));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2818590421(insertChildApi_2952803201(arg_2952806974));
      break;
    case "replace":
      Temporary1 = some_2818590421(replaceApi_2952803308(arg_2952806974));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2818590421(replaceEmptyApi_2952803419(arg_2952806974));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2818590421(replaceParentApi_2952803496(arg_2952806974));
      break;
    case "wrap":
      Temporary1 = some_2818590421(wrapApi_2952803610(arg_2952806974));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2818590421(editPrevEmptyApi_2952803695(arg_2952806974));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2818590421(editNextEmptyApi_2952803766(arg_2952806974));
      break;
    case "rename":
      Temporary1 = some_2818590421(renameApi_2952803829(arg_2952806974));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2818590421(selectPrevCompletionApi2_2952803890(arg_2952806974));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2818590421(selectNextCompletionApi2_2952803951(arg_2952806974));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2818590421(applySelectedCompletionApi2_2952804114(arg_2952806974));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2818590421(cancelAndNextCompletionApi_2952804212(arg_2952806974));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2818590421(cancelAndPrevCompletionApi_2952804262(arg_2952806974));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2818590421(cancelAndDeleteApi_2952804315(arg_2952806974));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2818590421(moveNodeToPrevSpaceApi_2952804469(arg_2952806974));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2818590421(moveNodeToNextSpaceApi_2952804632(arg_2952806974));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2818590421(selectPrevApi2_2952804693(arg_2952806974));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2818590421(selectNextApi2_2952804744(arg_2952806974));
      break;
    case "goto":
      Temporary1 = some_2818590421(gotoApi_2952805577(arg_2952806974));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2818590421(runSelectedFunctionApi_2952805956(arg_2952806974));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2818590421(toggleOptionApi_2952806018(arg_2952806974));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2818590421(runLastCommandApi_2952806080(arg_2952806974));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2818590421(selectCenterNodeApi_2952806392(arg_2952806974));
      break;
    case "scroll":
      Temporary1 = some_2818590421(scrollApi_2952806478(arg_2952806974));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2818590421(scrollOutputApi_2952806547(arg_2952806974));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2818590421(dumpContextApi_2952806602(arg_2952806974));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2818590421(setModeApi2_2952806831(arg_2952806974));
      break;
    case "mode":
      Temporary1 = some_2818590421(modeApi2_2952806890(arg_2952806974));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2818590421(getContextWithModeApi2_2952806950(arg_2952806974));
      break;
    default: 
      Temporary1 = none_2818590617();
      break;
    }
    result_2952806978 = nimCopy(result_2952806978, Temporary1, NTI2818584054);

  return result_2952806978;

}

function handleAction_2952806037(self_2952806038, action_2952806039, arg_2952806040) {
  var result_2952807124 = 0;

  BeforeRet: {
    var args_2952807125 = newJArray_1627390082();
    add_1627390190(args_2952807125, toJson_2952801137({id: self_2952806038.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2952807126 = null;
      var colontmp__536872125 = null;
      colontmp__536872125 = newStringStream_1660945417(arg_2952806040);
      var p_536872126 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872126[0], colontmp__536872125, [], false);
      try {
      var _ = getTok_1694499270(p_536872126[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872126[0].tok == 1))) break Label4;
            a_2952807126 = parseJson_1627395211(p_536872126[0], false, false, 0);
            add_1627390190(args_2952807125, a_2952807126);
          }
      };
      } finally {
      close_1694498967(p_536872126[0]);
      }
    };
    var newLastCommand_2952807127 = {Field0: nimCopy(null, action_2952806039, NTI33554449), Field1: nimCopy(null, arg_2952806040, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848841(self_2952806038.editor, self_2952806038, action_2952806039, args_2952807125) == 3)) {
    result_2952807124 = 3;
    break BeforeRet;
    }
    
    if (isSome_2818590685(dispatch_2952806976(action_2952806039, args_2952807125))) {
    result_2952807124 = 3;
    break BeforeRet;
    }
    
    result_2952807124 = 1;
    break BeforeRet;
    } finally {
    self_2952806038.lastCommand = nimCopy(self_2952806038.lastCommand, newLastCommand_2952807127, NTI2952791550);
    }
  };

  return result_2952807124;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet310[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872244 = 0;
      colontmp__536872244 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872245 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872245 <= colontmp__536872244)) break Label3;
            i_855638867 = res_536872245;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872245 = addInt(res_536872245, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872248 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872249 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872250 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872248, NTI1191182360), Field1: colontmp__536872249, Field2: colontmp__536872250}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872251 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872251["Field0"];
    var m_1191182547 = colontmp__536872251["Field1"];
    var d_1191182548 = colontmp__536872251["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872247 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872247["Field0"];
    var m_1191183687 = colontmp__536872247["Field1"];
    var y_1191183688 = colontmp__536872247["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872236 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872236 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872236, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872236 = addInt(i_536872236, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet309[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872241 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872241 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872241, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872241 = addInt(i_536872241, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function HEX24_2952794218(document_2952794219) {
  var result_2952794220 = [];

  BeforeRet: {
    result_2952794220 = nimCopy(null, document_2952794219.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2952794220;

}

function HEX24_2818578716(document_2818578717) {
  var result_2818578718 = [];

  BeforeRet: {
    result_2818578718 = nimCopy(null, document_2818578717.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2818578718;

}

function HEX24_2130706436(document_2130706437) {
  var result_2130706438 = [];

  BeforeRet: {
    result_2130706438 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2130706438;

}

function HEX24_2130706439(document_2130706437) {
  var result_2130706440 = [];

  BeforeRet: {
    chckNilDisp(document_2130706437);
    if (isObj(document_2130706437.m_type, NTI2952791498)) {
    result_2130706440 = HEX24_2952794218(document_2130706437);
    break BeforeRet;
    }
    else {
    if (isObj(document_2130706437.m_type, NTI2818572427)) {
    result_2130706440 = HEX24_2818578716(document_2130706437);
    break BeforeRet;
    }
    else {
    if (isObj(document_2130706437.m_type, NTI2130706436)) {
    result_2130706440 = HEX24_2130706436(document_2130706437);
    break BeforeRet;
    }
    }}
  };

  return result_2130706440;

}

function toJson_2986346683(kind_2986346684, opt_2986346685) {
  var result_2986346686 = null;

  BeforeRet: {
    result_2986346686 = newJString_1627389994(reprEnum(kind_2986346684, NTI2986344451));
    break BeforeRet;
  };

  return result_2986346686;

}

function toJson_2181038348(id_2181038349, opt_2181038350) {
  var result_2181038351 = null;

  BeforeRet: {
    result_2181038351 = newJString_1627389994(HEX24_2181038317(id_2181038349));
    break BeforeRet;
  };

  return result_2181038351;

}

function join_2986346725(a_2986346727, sep_2986346728) {
  var result_2986346729 = [];

    result_2986346729 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2986346744 = 0;
      var x_2986346745 = 0;
      var i_536872258 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872258 < (a_2986346727).length)) break Label3;
            i_2986346744 = i_536872258;
            x_2986346745 = a_2986346727[chckIndx(i_536872258, 0, (a_2986346727).length - 1)];
            if ((0 < i_2986346744)) {
            result_2986346729.push.apply(result_2986346729, sep_2986346728);;
            }
            
            result_2986346729.push.apply(result_2986346729, HEX24_369098760(x_2986346745));;
            i_536872258 = addInt(i_536872258, 1);
          }
      };
    };

  return result_2986346729;

}

function toJson_2986346717(node_2986346718, opt_2986346719) {
  var result_2986346720 = null;

    result_2986346720 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [107,105,110,100], toJson_2986346683(node_2986346718.kind, opt_2986346719));
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [105,100], toJson_2181038348(node_2986346718.id, opt_2986346719));
    if (!(HEX3DHEX3D_2181038320(node_2986346718.reff, null_2181038340))) {
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [114,101,102,102], toJson_2181038348(node_2986346718.reff, opt_2986346719));
    }
    
    if ((0 < (node_2986346718.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [116,101,120,116], toJson_1811939932(node_2986346718.text, opt_2986346719));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [112,97,116,104], newJString_1627389994(join_2986346725(path_2986346403(node_2986346718), [44,32])));
    if ((0 < len_2986344536(node_2986346718))) {
    var children_2986346746 = newJArray_1627390082();
    Label1: {
      var child_2986346750 = null;
      var i_536872253 = 0;
      var L_536872254 = (node_2986346718.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872253 < L_536872254)) break Label3;
            child_2986346750 = node_2986346718.children[chckIndx(i_536872253, 0, (node_2986346718.children).length - 1)];
            add_1627390190(children_2986346746, toJson_2986346717(child_2986346750, opt_2986346719));
            i_536872253 = addInt(i_536872253, 1);
            if (!(((node_2986346718.children).length == L_536872254))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_2986346720, [99,104,105,108,100,114,101,110], children_2986346746);
    }
    

  return result_2986346720;

}

function saveApplicationFile_2516582578(self_2516582579, name_2516582580, content_2516582581) {
    window.localStorage.setItem(toJSStr(name_2516582580), toJSStr(content_2516582581));

  
}

function saveApplicationFile_2499805204(self_2499805205, name_2499805206, content_2499805207) {
  
}

function saveApplicationFile_2499805208(self_2499805205, name_2499805206, content_2499805207) {
    chckNilDisp(self_2499805205);
    if (isObj(self_2499805205.m_type, NTI2516582404)) {
    saveApplicationFile_2516582578(self_2499805205, name_2499805206, content_2499805207);
    }
    else {
    if (isObj(self_2499805205.m_type, NTI2499805188)) {
    saveApplicationFile_2499805204(self_2499805205, name_2499805206, content_2499805207);
    }
    }

  
}

function saveFile_2516582412(self_2516582413, path_2516582414, content_2516582415) {
  
}

function saveFile_2499805193(self_2499805194, path_2499805195, content_2499805196) {
  
}

function saveFile_2499805197(self_2499805194, path_2499805195, content_2499805196) {
    chckNilDisp(self_2499805194);
    if (isObj(self_2499805194.m_type, NTI2516582404)) {
    saveFile_2516582412(self_2499805194, path_2499805195, content_2499805196);
    }
    else {
    if (isObj(self_2499805194.m_type, NTI2499805188)) {
    saveFile_2499805193(self_2499805194, path_2499805195, content_2499805196);
    }
    }

  
}

function serializeHtml_3187672156(self_3187672157, theme_3187672158) {
  var result_3187672159 = [];

  BeforeRet: {
    var title_3187672160 = nimCopy(null, nossplitFile(self_3187672157.filename).Field1, NTI33554449);
    var body_3187672161 = [];
    var diagnosticsCss_3187672162 = [];
    var fmtRes_3187672167 = [mnewString(0)];
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_721420459(fmtRes_3187672167, 0, diagnosticsCss_3187672162, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_721420459(fmtRes_3187672167, 0, title_3187672160, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_721420459(fmtRes_3187672167, 0, body_3187672161, []);
    fmtRes_3187672167[0].push.apply(fmtRes_3187672167[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_3187672159 = nimCopy(null, fmtRes_3187672167[0], NTI33554449);
    break BeforeRet;
  };

  return result_3187672159;

}

function saveHtml_2952794254(self_2952794255) {
    var pathParts_2952794256 = nossplitFile(self_2952794255.filename);
    var htmlPath_2952794257 = HEX2F_1426063446(pathParts_2952794256.Field0, (pathParts_2952794256.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2952794258 = serializeHtml_3187672156(self_2952794255, gEditor.theme);
    saveFile_2499805197(fs_2499805237, htmlPath_2952794257, html_2952794258);

  
}

function save_2952794259(self_2952794260, filename_2952794261, app_2952794262) {
    var Temporary1;

    if ((0 < (filename_2952794261).length)) {
    Temporary1 = filename_2952794261;
    }
    else {
    Temporary1 = self_2952794260.filename;
    }
    
    self_2952794260.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2952794260.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2952794268 = [mnewString(0)];
    fmtRes_2952794268[0].push.apply(fmtRes_2952794268[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794268, 0, self_2952794260.filename, []);
    fmtRes_2952794268[0].push.apply(fmtRes_2952794268[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794268[0], NTI33554449)]);
    var serialized_2952794269 = toJson_2986346717(self_2952794260.rootNode, initToJsonOptions_1811939362());
    if (app_2952794262) {
    saveApplicationFile_2499805208(fs_2499805237, self_2952794260.filename, pretty_1627394477(serialized_2952794269, 2));
    }
    else {
    saveFile_2499805197(fs_2499805237, self_2952794260.filename, pretty_1627394477(serialized_2952794269, 2));
    }
    
    saveHtml_2952794254(self_2952794260);

  
}

function save_2818578719(self_2818578720, filename_2818578721, app_2818578722) {
    var Temporary1;

    if ((0 < (filename_2818578721).length)) {
    Temporary1 = filename_2818578721;
    }
    else {
    Temporary1 = self_2818578720.filename;
    }
    
    self_2818578720.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2818578720.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818578720.appFile = app_2818578722;
    if (app_2818578722) {
    saveApplicationFile_2499805208(fs_2499805237, self_2818578720.filename, nsuJoinSep(self_2818578720.lines, [10]));
    }
    else {
    saveFile_2499805197(fs_2499805237, self_2818578720.filename, nsuJoinSep(self_2818578720.lines, [10]));
    }
    

  
}

function save_2130706441(self_2130706442, filename_2130706443, app_2130706444) {
  
}

function save_2130706445(self_2130706442, filename_2130706443, app_2130706444) {
    chckNilDisp(self_2130706442);
    if (isObj(self_2130706442.m_type, NTI2952791498)) {
    save_2952794259(self_2130706442, filename_2130706443, app_2130706444);
    }
    else {
    if (isObj(self_2130706442.m_type, NTI2818572427)) {
    save_2818578719(self_2130706442, filename_2130706443, app_2130706444);
    }
    else {
    if (isObj(self_2130706442.m_type, NTI2130706436)) {
    save_2130706441(self_2130706442, filename_2130706443, app_2130706444);
    }
    }}

  
}

function loadFile_2516582408(self_2516582409, path_2516582410) {
  var result_2516582411 = [];

  BeforeRet: {
    result_2516582411 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2516582410))), NTI33554449);
    break BeforeRet;
  };

  return result_2516582411;

}

function loadFile_2499805187(self_2499805188, path_2499805189) {
  var result_2499805190 = [];

  return result_2499805190;

}

function loadFile_2499805191(self_2499805188, path_2499805189) {
  var result_2499805192 = [];

  BeforeRet: {
    chckNilDisp(self_2499805188);
    if (isObj(self_2499805188.m_type, NTI2516582404)) {
    result_2499805192 = loadFile_2516582408(self_2499805188, path_2499805189);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805188.m_type, NTI2499805188)) {
    result_2499805192 = loadFile_2499805187(self_2499805188, path_2499805189);
    break BeforeRet;
    }
    }
  };

  return result_2499805192;

}

function clear_3003235180(t_3003235183) {
    Label1: {
      var i_3003235269 = 0;
      var colontmp__536872261 = 0;
      colontmp__536872261 = (t_3003235183.data).length;
      var i_536872262 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872262 < colontmp__536872261)) break Label3;
            i_3003235269 = i_536872262;
            t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field0 = 0;
            t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field1 = nimCopy(t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003235183.data[chckIndx(i_3003235269, 0, (t_3003235183.data).length - 1)].Field2 = null;
            i_536872262 = addInt(i_536872262, 1);
          }
      };
    };
    t_3003235183.counter = 0;

  
}

function clear_3003235098(cache_3003235101) {
    cache_3003235101.list = nimCopy(cache_3003235101.list, initDoublyLinkedList_3019901154(), NTI3019898950);
    clear_3003235180(cache_3003235101.table);

  
}

function clear_3003235992(t_3003235995) {
    Label1: {
      var i_3003236081 = 0;
      var colontmp__536872265 = 0;
      colontmp__536872265 = (t_3003235995.data).length;
      var i_536872266 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872266 < colontmp__536872265)) break Label3;
            i_3003236081 = i_536872266;
            t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field0 = 0;
            t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field1 = nimCopy(t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003235995.data[chckIndx(i_3003236081, 0, (t_3003235995.data).length - 1)].Field2 = null;
            i_536872266 = addInt(i_536872266, 1);
          }
      };
    };
    t_3003235995.counter = 0;

  
}

function clear_3003235910(cache_3003235913) {
    cache_3003235913.list = nimCopy(cache_3003235913.list, initDoublyLinkedList_3019901226(), NTI3019899029);
    clear_3003235992(cache_3003235913.table);

  
}

function clear_3003236726(t_3003236729) {
    Label1: {
      var i_3003236815 = 0;
      var colontmp__536872269 = 0;
      colontmp__536872269 = (t_3003236729.data).length;
      var i_536872270 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872270 < colontmp__536872269)) break Label3;
            i_3003236815 = i_536872270;
            t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field0 = 0;
            t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field1 = nimCopy(t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3019898908);
            t_3003236729.data[chckIndx(i_3003236815, 0, (t_3003236729.data).length - 1)].Field2 = null;
            i_536872270 = addInt(i_536872270, 1);
          }
      };
    };
    t_3003236729.counter = 0;

  
}

function clear_3003236644(cache_3003236647) {
    cache_3003236647.list = nimCopy(cache_3003236647.list, initDoublyLinkedList_3019901294(), NTI3019899096);
    clear_3003236726(cache_3003236647.table);

  
}

function clear_3003237460(t_3003237463) {
    Label1: {
      var i_3003237549 = 0;
      var colontmp__536872273 = 0;
      colontmp__536872273 = (t_3003237463.data).length;
      var i_536872274 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872274 < colontmp__536872273)) break Label3;
            i_3003237549 = i_536872274;
            t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field0 = 0;
            t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field1 = nimCopy(t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003237463.data[chckIndx(i_3003237549, 0, (t_3003237463.data).length - 1)].Field2 = null;
            i_536872274 = addInt(i_536872274, 1);
          }
      };
    };
    t_3003237463.counter = 0;

  
}

function clear_3003237378(cache_3003237381) {
    cache_3003237381.list = nimCopy(cache_3003237381.list, initDoublyLinkedList_3003173910(), NTI3003121744);
    clear_3003237460(cache_3003237381.table);

  
}

function clear_3003238194(t_3003238197) {
    Label1: {
      var i_3003238283 = 0;
      var colontmp__536872277 = 0;
      colontmp__536872277 = (t_3003238197.data).length;
      var i_536872278 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872278 < colontmp__536872277)) break Label3;
            i_3003238283 = i_536872278;
            t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field0 = 0;
            t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field1 = nimCopy(t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003238197.data[chckIndx(i_3003238283, 0, (t_3003238197.data).length - 1)].Field2 = null;
            i_536872278 = addInt(i_536872278, 1);
          }
      };
    };
    t_3003238197.counter = 0;

  
}

function clear_3003238112(cache_3003238115) {
    cache_3003238115.list = nimCopy(cache_3003238115.list, initDoublyLinkedList_3003174106(), NTI3003121881);
    clear_3003238194(cache_3003238115.table);

  
}

function clear_3003238928(t_3003238931) {
    Label1: {
      var i_3003239017 = 0;
      var colontmp__536872281 = 0;
      colontmp__536872281 = (t_3003238931.data).length;
      var i_536872282 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872282 < colontmp__536872281)) break Label3;
            i_3003239017 = i_536872282;
            t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field0 = 0;
            t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field1 = nimCopy(t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003238931.data[chckIndx(i_3003239017, 0, (t_3003238931.data).length - 1)].Field2 = null;
            i_536872282 = addInt(i_536872282, 1);
          }
      };
    };
    t_3003238931.counter = 0;

  
}

function clear_3003238846(cache_3003238849) {
    cache_3003238849.list = nimCopy(cache_3003238849.list, initDoublyLinkedList_3003174008(), NTI3003121817);
    clear_3003238928(cache_3003238849.table);

  
}

function clear_3003239662(t_3003239665) {
    Label1: {
      var i_3003239751 = 0;
      var colontmp__536872285 = 0;
      colontmp__536872285 = (t_3003239665.data).length;
      var i_536872286 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872286 < colontmp__536872285)) break Label3;
            i_3003239751 = i_536872286;
            t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field0 = 0;
            t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field1 = nimCopy(t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3019898905);
            t_3003239665.data[chckIndx(i_3003239751, 0, (t_3003239665.data).length - 1)].Field2 = null;
            i_536872286 = addInt(i_536872286, 1);
          }
      };
    };
    t_3003239665.counter = 0;

  
}

function clear_3003239580(cache_3003239583) {
    cache_3003239583.list = nimCopy(cache_3003239583.list, initDoublyLinkedList_3003174204(), NTI3003121945);
    clear_3003239662(cache_3003239583.table);

  
}

function clear_3003240396(t_3003240399) {
    Label1: {
      var i_3003240485 = 0;
      var colontmp__536872289 = 0;
      colontmp__536872289 = (t_3003240399.data).length;
      var i_536872290 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872290 < colontmp__536872289)) break Label3;
            i_3003240485 = i_536872290;
            t_3003240399.data[chckIndx(i_3003240485, 0, (t_3003240399.data).length - 1)].Field0 = 0;
            t_3003240399.data[chckIndx(i_3003240485, 0, (t_3003240399.data).length - 1)].Field1 = null;
            t_3003240399.data[chckIndx(i_3003240485, 0, (t_3003240399.data).length - 1)].Field2 = null;
            i_536872290 = addInt(i_536872290, 1);
          }
      };
    };
    t_3003240399.counter = 0;

  
}

function clear_3003240314(cache_3003240317) {
    cache_3003240317.list = nimCopy(cache_3003240317.list, initDoublyLinkedList_3003130454(), NTI3003122047);
    clear_3003240396(cache_3003240317.table);

  
}

function clear_3003241130(t_3003241133) {
    Label1: {
      var i_3003241219 = 0;
      var colontmp__536872293 = 0;
      colontmp__536872293 = (t_3003241133.data).length;
      var i_536872294 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872294 < colontmp__536872293)) break Label3;
            i_3003241219 = i_536872294;
            t_3003241133.data[chckIndx(i_3003241219, 0, (t_3003241133.data).length - 1)].Field0 = 0;
            t_3003241133.data[chckIndx(i_3003241219, 0, (t_3003241133.data).length - 1)].Field1 = null;
            t_3003241133.data[chckIndx(i_3003241219, 0, (t_3003241133.data).length - 1)].Field2 = null;
            i_536872294 = addInt(i_536872294, 1);
          }
      };
    };
    t_3003241133.counter = 0;

  
}

function clear_3003241048(cache_3003241051) {
    cache_3003241051.list = nimCopy(cache_3003241051.list, initDoublyLinkedList_3003134765(), NTI3003122122);
    clear_3003241130(cache_3003241051.table);

  
}

function clear_3003241864(t_3003241867) {
    Label1: {
      var i_3003241953 = 0;
      var colontmp__536872297 = 0;
      colontmp__536872297 = (t_3003241867.data).length;
      var i_536872298 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872298 < colontmp__536872297)) break Label3;
            i_3003241953 = i_536872298;
            t_3003241867.data[chckIndx(i_3003241953, 0, (t_3003241867.data).length - 1)].Field0 = 0;
            t_3003241867.data[chckIndx(i_3003241953, 0, (t_3003241867.data).length - 1)].Field1 = null;
            t_3003241867.data[chckIndx(i_3003241953, 0, (t_3003241867.data).length - 1)].Field2 = null;
            i_536872298 = addInt(i_536872298, 1);
          }
      };
    };
    t_3003241867.counter = 0;

  
}

function clear_3003241782(cache_3003241785) {
    cache_3003241785.list = nimCopy(cache_3003241785.list, initDoublyLinkedList_3003151329(), NTI3003122332);
    clear_3003241864(cache_3003241785.table);

  
}

function clear_3003242598(t_3003242601) {
    Label1: {
      var i_3003242687 = 0;
      var colontmp__536872301 = 0;
      colontmp__536872301 = (t_3003242601.data).length;
      var i_536872302 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872302 < colontmp__536872301)) break Label3;
            i_3003242687 = i_536872302;
            t_3003242601.data[chckIndx(i_3003242687, 0, (t_3003242601.data).length - 1)].Field0 = 0;
            t_3003242601.data[chckIndx(i_3003242687, 0, (t_3003242601.data).length - 1)].Field1 = null;
            t_3003242601.data[chckIndx(i_3003242687, 0, (t_3003242601.data).length - 1)].Field2 = null;
            i_536872302 = addInt(i_536872302, 1);
          }
      };
    };
    t_3003242601.counter = 0;

  
}

function clear_3003242516(cache_3003242519) {
    cache_3003242519.list = nimCopy(cache_3003242519.list, initDoublyLinkedList_3003155632(), NTI3003122407);
    clear_3003242598(cache_3003242519.table);

  
}

function clear_3003243332(t_3003243335) {
    Label1: {
      var i_3003243421 = 0;
      var colontmp__536872305 = 0;
      colontmp__536872305 = (t_3003243335.data).length;
      var i_536872306 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872306 < colontmp__536872305)) break Label3;
            i_3003243421 = i_536872306;
            t_3003243335.data[chckIndx(i_3003243421, 0, (t_3003243335.data).length - 1)].Field0 = 0;
            t_3003243335.data[chckIndx(i_3003243421, 0, (t_3003243335.data).length - 1)].Field1 = null;
            t_3003243335.data[chckIndx(i_3003243421, 0, (t_3003243335.data).length - 1)].Field2 = null;
            i_536872306 = addInt(i_536872306, 1);
          }
      };
    };
    t_3003243335.counter = 0;

  
}

function clear_3003243250(cache_3003243253) {
    cache_3003243253.list = nimCopy(cache_3003243253.list, initDoublyLinkedList_3003139068(), NTI3003122193);
    clear_3003243332(cache_3003243253.table);

  
}

function clear_3003244066(t_3003244069) {
    Label1: {
      var i_3003244155 = 0;
      var colontmp__536872309 = 0;
      colontmp__536872309 = (t_3003244069.data).length;
      var i_536872310 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872310 < colontmp__536872309)) break Label3;
            i_3003244155 = i_536872310;
            t_3003244069.data[chckIndx(i_3003244155, 0, (t_3003244069.data).length - 1)].Field0 = 0;
            t_3003244069.data[chckIndx(i_3003244155, 0, (t_3003244069.data).length - 1)].Field1 = null;
            t_3003244069.data[chckIndx(i_3003244155, 0, (t_3003244069.data).length - 1)].Field2 = null;
            i_536872310 = addInt(i_536872310, 1);
          }
      };
    };
    t_3003244069.counter = 0;

  
}

function clear_3003243984(cache_3003243987) {
    cache_3003243987.list = nimCopy(cache_3003243987.list, initDoublyLinkedList_3003143372(), NTI3003122266);
    clear_3003244066(cache_3003243987.table);

  
}

function clear_3003244800(t_3003244803) {
    Label1: {
      var i_3003244889 = 0;
      var colontmp__536872313 = 0;
      colontmp__536872313 = (t_3003244803.data).length;
      var i_536872314 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872314 < colontmp__536872313)) break Label3;
            i_3003244889 = i_536872314;
            t_3003244803.data[chckIndx(i_3003244889, 0, (t_3003244803.data).length - 1)].Field0 = 0;
            t_3003244803.data[chckIndx(i_3003244889, 0, (t_3003244803.data).length - 1)].Field1 = null;
            t_3003244803.data[chckIndx(i_3003244889, 0, (t_3003244803.data).length - 1)].Field2 = null;
            i_536872314 = addInt(i_536872314, 1);
          }
      };
    };
    t_3003244803.counter = 0;

  
}

function clear_3003244718(cache_3003244721) {
    cache_3003244721.list = nimCopy(cache_3003244721.list, initDoublyLinkedList_3003163611(), NTI3003122473);
    clear_3003244800(cache_3003244721.table);

  
}

function clear_3003245534(t_3003245537) {
    Label1: {
      var i_3003245623 = 0;
      var colontmp__536872317 = 0;
      colontmp__536872317 = (t_3003245537.data).length;
      var i_536872318 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872318 < colontmp__536872317)) break Label3;
            i_3003245623 = i_536872318;
            t_3003245537.data[chckIndx(i_3003245623, 0, (t_3003245537.data).length - 1)].Field0 = 0;
            t_3003245537.data[chckIndx(i_3003245623, 0, (t_3003245537.data).length - 1)].Field1 = null;
            t_3003245537.data[chckIndx(i_3003245623, 0, (t_3003245537.data).length - 1)].Field2 = null;
            i_536872318 = addInt(i_536872318, 1);
          }
      };
    };
    t_3003245537.counter = 0;

  
}

function clear_3003245452(cache_3003245455) {
    cache_3003245455.list = nimCopy(cache_3003245455.list, initDoublyLinkedList_3003171590(), NTI3003122548);
    clear_3003245534(cache_3003245455.table);

  
}

function deleteAllNodesAndSymbols_3003235018(ctx_3003235019) {
    ctx_3003235019.depGraph.revision = addInt(ctx_3003235019.depGraph.revision, 1);
    clear_3003235098(ctx_3003235019.depGraph.changed);
    clear_3003235098(ctx_3003235019.depGraph.verified);
    clear_3003235910(ctx_3003235019.depGraph.fingerprints);
    clear_3003236644(ctx_3003235019.depGraph.dependencies);
    clear_3003237378(ctx_3003235019.itemsAstNode);
    clear_3003238112(ctx_3003235019.itemsSymbol);
    clear_3003238846(ctx_3003235019.itemsNodeLayoutInput);
    clear_3003239580(ctx_3003235019.itemsFunctionExecutionContext);
    clear_3003240314(ctx_3003235019.queryCacheType);
    clear_3003241048(ctx_3003235019.queryCacheValue);
    clear_3003241782(ctx_3003235019.queryCacheSymbolType);
    clear_3003242516(ctx_3003235019.queryCacheSymbolValue);
    clear_3003243250(ctx_3003235019.queryCacheSymbol);
    clear_3003243984(ctx_3003235019.queryCacheSymbols);
    clear_3003244718(ctx_3003235019.queryCacheFunctionExecution);
    clear_3003245452(ctx_3003235019.queryCacheNodeLayout);

  
}

function load_2952794270(self_2952794271, filename_2952794272) {
    var Temporary1;

    if ((0 < (filename_2952794272).length)) {
    Temporary1 = filename_2952794272;
    }
    else {
    Temporary1 = self_2952794271.filename;
    }
    
    var filename_2952794273 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2952794273).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2952794271.filename = nimCopy(null, filename_2952794273, NTI33554449);
    var fmtRes_2952794279 = [mnewString(0)];
    fmtRes_2952794279[0].push.apply(fmtRes_2952794279[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2952794279, 0, self_2952794271.filename, []);
    fmtRes_2952794279[0].push.apply(fmtRes_2952794279[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952794279[0], NTI33554449)]);
    var jsonText_2952794280 = loadFile_2499805191(fs_2499805237, self_2952794271.filename);
    var json_2952794281 = parseJson_1627395313(jsonText_2952794280);
    var newAst_2952794282 = jsonToAstNode_2986346751(json_2952794281, {allowExtraKeys: false, allowMissingKeys: false});
    deleteAllNodesAndSymbols_3003235018(ctx_2952790069);
    self_2952794271.rootNode = newAst_2952794282;
    insertNode_3003233870(ctx_2952790069, self_2952794271.rootNode);
    if (self_2952794271.undoOps.length < 0) { for (var i = self_2952794271.undoOps.length ; i < 0 ; ++i) self_2952794271.undoOps.push(null); }
               else { self_2952794271.undoOps.length = 0; };
    if (self_2952794271.redoOps.length < 0) { for (var i = self_2952794271.redoOps.length ; i < 0 ; ++i) self_2952794271.redoOps.push(null); }
               else { self_2952794271.redoOps.length = 0; };
    saveHtml_2952794254(self_2952794271);

  
}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2348810883(t_2348810886, key_2348810887) {
  var result_2348810888 = false;

  BeforeRet: {
    result_2348810888 = hasKey_1795162450(t_2348810886, key_2348810887);
    break BeforeRet;
  };

  return result_2348810888;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function loadApplicationFile_2516582423(self_2516582424, name_2516582425) {
    var Temporary1;

  var result_2516582426 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2516582425)) !== null)) {
    result_2516582426 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2516582425))), NTI33554449);
    break BeforeRet;
    }
    
    if (!(contains_2348810883(cachedAppFiles_2516582422[0], name_2516582425))) {
    HEX5BHEX5DHEX3D_1795162732(cachedAppFiles_2516582422[0], name_2516582425, cstrToNimstr(loadFileSync(toJSStr(name_2516582425))));
    }
    
    result_2516582426 = nimCopy(null, (Temporary1 = HEX5BHEX5D_1795163814(cachedAppFiles_2516582422[0], name_2516582425), Temporary1)[0][Temporary1[1]], NTI33554449);
    break BeforeRet;
  };

  return result_2516582426;

}

function loadApplicationFile_2499805198(self_2499805199, name_2499805200) {
  var result_2499805201 = [];

  return result_2499805201;

}

function loadApplicationFile_2499805202(self_2499805199, name_2499805200) {
  var result_2499805203 = [];

  BeforeRet: {
    chckNilDisp(self_2499805199);
    if (isObj(self_2499805199.m_type, NTI2516582404)) {
    result_2499805203 = loadApplicationFile_2516582423(self_2499805199, name_2499805200);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805199.m_type, NTI2499805188)) {
    result_2499805203 = loadApplicationFile_2499805198(self_2499805199, name_2499805200);
    break BeforeRet;
    }
    }
  };

  return result_2499805203;

}

function load_2818578724(self_2818578725, filename_2818578726) {
    var Temporary1;
    var Temporary2;

    if ((0 < (filename_2818578726).length)) {
    Temporary1 = filename_2818578726;
    }
    else {
    Temporary1 = self_2818578725.filename;
    }
    
    var filename_2818578727 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2818578727).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2818578725.filename = nimCopy(null, filename_2818578727, NTI33554449);
    if (self_2818578725.appFile) {
    Temporary2 = loadApplicationFile_2499805202(fs_2499805237, self_2818578725.filename);
    }
    else {
    Temporary2 = loadFile_2499805191(fs_2499805237, self_2818578725.filename);
    }
    
    var file_2818578729 = nimCopy(null, Temporary2, NTI33554449);
    contentHEX3D_2818573845(self_2818578725, file_2818578729);

  
}

function load_2130706446(self_2130706447, filename_2130706448) {
  
}

function load_2130706449(self_2130706447, filename_2130706448) {
    chckNilDisp(self_2130706447);
    if (isObj(self_2130706447.m_type, NTI2952791498)) {
    load_2952794270(self_2130706447, filename_2130706448);
    }
    else {
    if (isObj(self_2130706447.m_type, NTI2818572427)) {
    load_2818578724(self_2130706447, filename_2130706448);
    }
    else {
    if (isObj(self_2130706447.m_type, NTI2130706436)) {
    load_2130706446(self_2130706447, filename_2130706448);
    }
    }}

  
}

function hasKey_2919238868(t_2919238871, key_2919238872) {
  var result_2919238873 = false;

    var hc_2919238874 = [0];
    result_2919238873 = (0 <= rawGet_2919236185(t_2919238871, key_2919238872, hc_2919238874, 0));

  return result_2919238873;

}

function contains_2919238862(t_2919238865, key_2919238866) {
  var result_2919238867 = false;

  BeforeRet: {
    result_2919238867 = hasKey_2919238868(t_2919238865, key_2919238866);
    break BeforeRet;
  };

  return result_2919238867;

}

function del_2919238921(t_2919238924, key_2919238925) {
    var hc_2919238926 = [0];
    var i_2919238933 = rawGet_2919236185(t_2919238924, key_2919238925, hc_2919238926, 0);
    var mskHEX60gensym36_2919238937 = (t_2919238924.data).length - 1;
    if ((0 <= i_2919238933)) {
    t_2919238924.counter = subInt(t_2919238924.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2919238944 = i_2919238933;
            var rHEX60gensym36_2919238945 = jHEX60gensym36_2919238944;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field1 = 0;
            t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2919238933 = (addInt(i_2919238933, 1) & mskHEX60gensym36_2919238937);
                  if (isEmpty_1308622877(t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2919238945 = (t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)].Field0 & mskHEX60gensym36_2919238937);
                  if (!(((((rHEX60gensym36_2919238945 <= i_2919238933) && (jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945)) || ((jHEX60gensym36_2919238944 < rHEX60gensym36_2919238945) && (i_2919238933 < jHEX60gensym36_2919238944))) || ((i_2919238933 < jHEX60gensym36_2919238944) && (rHEX60gensym36_2919238945 <= i_2919238933))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)] = nimCopy(t_2919238924.data[chckIndx(jHEX60gensym36_2919238944, 0, (t_2919238924.data).length - 1)], t_2919238924.data[chckIndx(i_2919238933, 0, (t_2919238924.data).length - 1)], NTI2919235608);
          }
      };
    };
    }
    

  
}

function len_2919239477(t_2919239480) {
  var result_2919239481 = 0;

    result_2919239481 = t_2919239480.counter;

  return result_2919239481;

}

function find_2919239714(a_2919239717, item_2919239718) {
  var result_2919239719 = 0;

  BeforeRet: {
    result_2919239719 = 0;
    Label1: {
      var i_2919239723 = 0;
      var i_536872337 = 0;
      var L_536872338 = (a_2919239717).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872337 < L_536872338)) break Label3;
            i_2919239723 = a_2919239717[chckIndx(i_536872337, 0, (a_2919239717).length - 1)];
            if ((i_2919239723 == item_2919239718)) {
            break BeforeRet;
            }
            
            result_2919239719 = addInt(result_2919239719, 1);
            i_536872337 = addInt(i_536872337, 1);
            if (!(((a_2919239717).length == L_536872338))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2919239719 = -1;
  };

  return result_2919239719;

}

function del_2919239730(x_2919239732, x_2919239732_Idx, i_2919239733) {
    var xl_2919239737 = subInt((x_2919239732[x_2919239732_Idx]).length, 1);
    x_2919239732[x_2919239732_Idx][chckIndx(i_2919239733, 0, (x_2919239732[x_2919239732_Idx]).length - 1)] = x_2919239732[x_2919239732_Idx][chckIndx(xl_2919239737, 0, (x_2919239732[x_2919239732_Idx]).length - 1)];
    if (x_2919239732[x_2919239732_Idx].length < chckRange(xl_2919239737, 0, 2147483647)) { for (var i = x_2919239732[x_2919239732_Idx].length ; i < chckRange(xl_2919239737, 0, 2147483647) ; ++i) x_2919239732[x_2919239732_Idx].push(0); }
               else { x_2919239732[x_2919239732_Idx].length = chckRange(xl_2919239737, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2919238817(self_2919238818, handle_2919238819) {
    if (contains_2919238862(self_2919238818.onRequestSave, handle_2919238819)) {
    del_2919238921(self_2919238818.onRequestSave, handle_2919238819);
    Label1: {
      var __2919239712 = [];
      var list_2919239713 = null;
      var list_2919239713_Idx = 0;
      var L_536872325 = len_2919239477(self_2919238818.onRequestSaveIndex);
      Label2: {
        var h_536872327 = 0;
        var colontmp__536872328 = 0;
        colontmp__536872328 = (self_2919238818.onRequestSaveIndex.data).length - 1;
        var res_536872329 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872329 <= colontmp__536872328)) break Label4;
              h_536872327 = res_536872329;
              if (isFilled_1308622880(self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872327, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872332 = nimCopy(null, {Field0: nimCopy(null, self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872327, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2919238818.onRequestSaveIndex.data[chckIndx(h_536872327, 0, (self_2919238818.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2919237548);
              __2919239712 = colontmp__536872332["Field0"];
              list_2919239713 = colontmp__536872332["Field1"][0]; list_2919239713_Idx = colontmp__536872332["Field1"][1];
              var index_2919239729 = find_2919239714(list_2919239713[list_2919239713_Idx], handle_2919238819);
              if ((0 <= index_2919239729)) {
              del_2919239730(list_2919239713, list_2919239713_Idx, chckRange(index_2919239729, 0, 2147483647));
              }
              
              if (!((len_2919239477(self_2919238818.onRequestSaveIndex) == L_536872325))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872329 = addInt(res_536872329, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2919235636(self_2919235637) {
  
}

function stop_2919235638(self_2919235637) {
    stop_2919235636(self_2919235637);

  
}

function destroy_2818578638(self_2818578639) {
    var Temporary1;
    var Temporary2;

    if (!((self_2818578639.tsParser == null))) {
    deinit_2885681592(self_2818578639.tsParser);
    self_2818578639.tsParser = null;
    }
    
    if (isSome_2818578647(self_2818578639.languageServer)) {
    removeOnRequestSaveHandler_2919238817((Temporary1 = get_2818578667(self_2818578639.languageServer), Temporary1)[0][Temporary1[1]], self_2818578639.onRequestSaveHandle);
    stop_2919235638((Temporary2 = get_2818578667(self_2818578639.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2818578639.languageServer = nimCopy(self_2818578639.languageServer, none_2936012824(), NTI2818572486);
    }
    

  
}

function shutdown_2818578714(self_2818578715) {
    destroy_2818578638(self_2818578715.document);

  
}

function shutdown_2147483764(self_2147483765) {
  
}

function shutdown_2147483766(self_2147483765) {
    chckNilDisp(self_2147483765);
    if (isObj(self_2147483765.m_type, NTI2818572510)) {
    shutdown_2818578714(self_2147483765);
    }
    else {
    if (isObj(self_2147483765.m_type, NTI2147483652)) {
    shutdown_2147483764(self_2147483765);
    }
    }

  
}

function canEdit_2952797896(self_2952797897, document_2952797898) {
  var result_2952797899 = false;

  BeforeRet: {
    if (isObj(document_2952797898.m_type, NTI2952791498)) {
    result_2952797899 = true;
    break BeforeRet;
    }
    else {
      result_2952797899 = false;
      break BeforeRet;
    }
    
  };

  return result_2952797899;

}

function canEdit_2818579661(self_2818579662, document_2818579663) {
  var result_2818579664 = false;

  BeforeRet: {
    if (isObj(document_2818579663.m_type, NTI2818572427)) {
    result_2818579664 = true;
    break BeforeRet;
    }
    else {
      result_2818579664 = false;
      break BeforeRet;
    }
    
  };

  return result_2818579664;

}

function canEdit_2147483767(self_2147483768, document_2147483769) {
  var result_2147483770 = false;

  BeforeRet: {
    result_2147483770 = false;
    break BeforeRet;
  };

  return result_2147483770;

}

function canEdit_2147483771(self_2147483768, document_2147483769) {
  var result_2147483772 = false;

  BeforeRet: {
    chckNilDisp(self_2147483768);
    if (isObj(self_2147483768.m_type, NTI2952791527)) {
    result_2147483772 = canEdit_2952797896(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483768.m_type, NTI2818572510)) {
    result_2147483772 = canEdit_2818579661(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483768.m_type, NTI2147483652)) {
    result_2147483772 = canEdit_2147483767(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    }}
  };

  return result_2147483772;

}

function addQuoted_2952797412(s_2952797414, s_2952797414_Idx, x_2952797415) {
    s_2952797414[s_2952797414_Idx].push.apply(s_2952797414[s_2952797414_Idx], HEX24_2986346455(x_2952797415));;

  
}

function HEX24_2952797401(self_2952797403) {
  var result_2952797404 = [[]];

    if (isSome_2986346330(self_2952797403)) {
    result_2952797404[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2952797412(result_2952797404, 0, self_2952797403.val);
    result_2952797404[0].push.apply(result_2952797404[0], [41]);;
    }
    else {
      result_2952797404[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2952797404[0];

}

function formatValue_2952797334(result_2952797336, result_2952797336_Idx, value_2952797337, specifier_2952797338) {
    formatValue_721420459(result_2952797336, result_2952797336_Idx, HEX24_2952797401(value_2952797337), specifier_2952797338);

  
}

function handleNodeInserted_2952797320(self_2952797321, doc_2952797322, node_2952797323) {
      var Temporary1;
      var Temporary2;

    var fmtRes_2952797328 = [mnewString(0)];
    fmtRes_2952797328[0].push.apply(fmtRes_2952797328[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3087008579(fmtRes_2952797328, 0, node_2952797323, []);
    fmtRes_2952797328[0].push.apply(fmtRes_2952797328[0], [44,32]);;
    formatValue_2952797334(fmtRes_2952797328, 0, self_2952797321.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797328[0], NTI33554449)]);
      var oHEX60gensym103_2952797424 = nimCopy(null, self_2952797321.deletedNode, NTI2986344567);
      if (!isSome_2986346330(oHEX60gensym103_2952797424)) Temporary2 = false; else {        var deletedNode_2952797447 = get_2986346350(oHEX60gensym103_2952797424);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2952797447 == node_2952797323);      }    if (Temporary1) {
    self_2952797321.deletedNode = nimCopy(self_2952797321.deletedNode, some_2986344674(cloneAndMapIds_2986346281(node_2952797323)), NTI2986344567);
    var fmtRes_2952797459 = mnewString(0);
    fmtRes_2952797459.push.apply(fmtRes_2952797459, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797459, NTI33554449)]);
    }
    

  
}

function createWithDocument_2952807388(self_2952807389, document_2952807390) {
    
function HEX3Aanonymous_2952807393(doc_2952807394, node_2952807395) {
        handleNodeInserted_2952797320(editor_2952807392, doc_2952807394, node_2952807395);

      
    }

  var result_2952807391 = null;

  BeforeRet: {
    var editor_2952807392 = {eventHandler: null, document: document_2952807390, textDocument: null, textEditor: null, m_type: NTI2952791527, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2952807392 = createWithPrototype(editor_ast_prototype, editor_2952807392);
    init_2147483681(editor_2952807392);
    editor_2952807392.document.onNodeInserted.push(HEX3Aanonymous_2952807393);;
    editor_2952807392.selectedCompletion = 0;
    editor_2952807392.completions = nimCopy(null, [], NTI3170893842);
    if ((len_2986344536(editor_2952807392.document.rootNode) == 0)) {
    var paramA_2952807405 = newId_2181038297();
    var paramB_2952807406 = newId_2181038297();
    var resultId_2952807407 = newId_2181038297();
    Label1: {
      var tmpHEX60gensym1057_2952807412 = null;
      Label2: {
        var res_2952807418 = null;
        res_2952807418 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2952807418.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2952807418.text = nimCopy(null, [97,100,100], NTI33554449);
        Label4: {
          Label5: {
            var res_2952807421 = null;
            res_2952807421 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952807421.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label7: {
              Label8: {
                var res_2952807423 = null;
                res_2952807423 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807423.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label10: {
                  Label11: {
                    var res_2952807425 = null;
                    res_2952807425 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807425.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807425.id = nimCopy(res_2952807425.id, paramA_2952807405, NTI2181038083);
                    res_2952807425.text = nimCopy(null, [97], NTI33554449);
                    Label13: {
                      Label14: {
                        var res_2952807429 = null;
                        res_2952807429 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807429.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807429.reff = nimCopy(res_2952807429.reff, IdInt_2969567244, NTI2181038083);
                      };
                      add_2986344486(res_2952807425, res_2952807429);
                      Label16: {
                        var res_2952807432 = null;
                        res_2952807432 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807432.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2986344486(res_2952807425, res_2952807432);
                    };
                  };
                  add_2986344486(res_2952807423, res_2952807425);
                  Label18: {
                    var res_2952807434 = null;
                    res_2952807434 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807434.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807434.id = nimCopy(res_2952807434.id, paramB_2952807406, NTI2181038083);
                    res_2952807434.text = nimCopy(null, [98], NTI33554449);
                    Label20: {
                      Label21: {
                        var res_2952807438 = null;
                        res_2952807438 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807438.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807438.reff = nimCopy(res_2952807438.reff, IdInt_2969567244, NTI2181038083);
                      };
                      add_2986344486(res_2952807434, res_2952807438);
                      Label23: {
                        var res_2952807441 = null;
                        res_2952807441 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807441.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2986344486(res_2952807434, res_2952807441);
                    };
                  };
                  add_2986344486(res_2952807423, res_2952807434);
                };
              };
              add_2986344486(res_2952807421, res_2952807423);
              Label25: {
                var res_2952807443 = null;
                res_2952807443 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807443.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2952807443.reff = nimCopy(res_2952807443.reff, IdInt_2969567244, NTI2181038083);
              };
              add_2986344486(res_2952807421, res_2952807443);
              Label27: {
                var res_2952807446 = null;
                res_2952807446 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807446.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label29: {
                  Label30: {
                    var res_2952807448 = null;
                    res_2952807448 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807448.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807448.id = nimCopy(res_2952807448.id, resultId_2952807407, NTI2181038083);
                    res_2952807448.text = nimCopy(null, [114,101,115,117,108,116], NTI33554449);
                    Label32: {
                      Label33: {
                        var res_2952807452 = null;
                        res_2952807452 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807452.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2986344486(res_2952807448, res_2952807452);
                      Label35: {
                        var res_2952807454 = null;
                        res_2952807454 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807454.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        Label37: {
                          Label38: {
                            var res_2952807456 = null;
                            res_2952807456 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2952807456.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2952807456.reff = nimCopy(res_2952807456.reff, IdAdd_2969567235, NTI2181038083);
                          };
                          add_2986344486(res_2952807454, res_2952807456);
                          Label40: {
                            var res_2952807459 = null;
                            res_2952807459 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2952807459.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2952807459.reff = nimCopy(res_2952807459.reff, paramA_2952807405, NTI2181038083);
                          };
                          add_2986344486(res_2952807454, res_2952807459);
                          Label42: {
                            var res_2952807462 = null;
                            res_2952807462 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2952807462.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2952807462.reff = nimCopy(res_2952807462.reff, paramB_2952807406, NTI2181038083);
                          };
                          add_2986344486(res_2952807454, res_2952807462);
                        };
                      };
                      add_2986344486(res_2952807448, res_2952807454);
                    };
                  };
                  add_2986344486(res_2952807446, res_2952807448);
                  Label44: {
                    var res_2952807465 = null;
                    res_2952807465 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807465.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2952807465.reff = nimCopy(res_2952807465.reff, resultId_2952807407, NTI2181038083);
                  };
                  add_2986344486(res_2952807446, res_2952807465);
                };
              };
              add_2986344486(res_2952807421, res_2952807446);
            };
          };
        };
        add_2986344486(res_2952807418, res_2952807421);
      };
    };
    add_2986344486(editor_2952807392.document.rootNode, res_2952807418);
    var addId_2952807629 = nimCopy(null, last_2986344706(editor_2952807392.document.rootNode).id, NTI2181038083);
    Label46: {
      var tmpHEX60gensym1112_2952807634 = null;
      Label47: {
        var res_2952807640 = null;
        res_2952807640 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2952807640.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2952807640.text = nimCopy(null, [109,97,105,110], NTI33554449);
        Label49: {
          Label50: {
            var res_2952807643 = null;
            res_2952807643 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2952807643.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label52: {
              Label53: {
                var res_2952807645 = null;
                res_2952807645 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807645.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2986344486(res_2952807643, res_2952807645);
              Label55: {
                var res_2952807647 = null;
                res_2952807647 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807647.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2952807647.reff = nimCopy(res_2952807647.reff, IdVoid_2969567246, NTI2181038083);
              };
              add_2986344486(res_2952807643, res_2952807647);
              Label57: {
                var res_2952807650 = null;
                res_2952807650 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2952807650.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label59: {
                  Label60: {
                    var res_2952807652 = null;
                    res_2952807652 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2952807652.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    Label62: {
                      Label63: {
                        var res_2952807654 = null;
                        res_2952807654 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807654.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807654.reff = nimCopy(res_2952807654.reff, addId_2952807629, NTI2181038083);
                      };
                      add_2986344486(res_2952807652, res_2952807654);
                      Label65: {
                        var res_2952807657 = null;
                        res_2952807657 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807657.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807657.text = nimCopy(null, [54,57], NTI33554449);
                      };
                      add_2986344486(res_2952807652, res_2952807657);
                      Label67: {
                        var res_2952807660 = null;
                        res_2952807660 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2952807660.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2952807660.text = nimCopy(null, [52,50,48], NTI33554449);
                      };
                      add_2986344486(res_2952807652, res_2952807660);
                    };
                  };
                };
                add_2986344486(res_2952807650, res_2952807652);
              };
              add_2986344486(res_2952807643, res_2952807650);
            };
          };
        };
        add_2986344486(res_2952807640, res_2952807643);
      };
    };
    add_2986344486(editor_2952807392.document.rootNode, res_2952807640);
    }
    
    Label69: {
      var c_2952807746 = null;
      var i_536872382 = 0;
      var L_536872383 = (editor_2952807392.document.rootNode.children).length;
      Label70: {
          Label71: while (true) {
          if (!(i_536872382 < L_536872383)) break Label71;
            c_2952807746 = editor_2952807392.document.rootNode.children[chckIndx(i_536872382, 0, (editor_2952807392.document.rootNode.children).length - 1)];
            handleNodeInserted_2952794613(editor_2952807392.document, c_2952807746);
            i_536872382 = addInt(i_536872382, 1);
            if (!(((editor_2952807392.document.rootNode.children).length == L_536872383))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_3003233870(ctx_2952790069, editor_2952807392.document.rootNode);
    nodeHEX3D_2952793818(editor_2952807392, HEX5BHEX5D_2986344532(editor_2952807392.document.rootNode, 0));
    result_2952807391 = editor_2952807392;
    break BeforeRet;
  };

  return result_2952807391;

}

function createWithDocument_2818590891(self_2818590892, document_2818590893) {
    
function HEX3Aanonymous_2818590914(__2818590915) {
        handleTextDocumentTextChanged_2818590797(editor_2818590895);

      
    }

  var result_2818590894 = null;

  BeforeRet: {
    var editor_2818590895 = createTextEditorInstance_2818590799();
    editor_2818590895.document = document_2818590893;
    init_2147483681(editor_2818590895);
    if (((editor_2818590895.document.lines).length == 0)) {
    editor_2818590895.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2818590863(editor_2818590895.document.textChanged, HEX3Aanonymous_2818590914);
    result_2818590894 = editor_2818590895;
    break BeforeRet;
  };

  return result_2818590894;

}

function createWithDocument_2147483773(self_2147483774, document_2147483775) {
  var result_2147483776 = null;

  BeforeRet: {
    result_2147483776 = null;
    break BeforeRet;
  };

  return result_2147483776;

}

function createWithDocument_2147483786(self_2147483774, document_2147483775) {
  var result_2147483787 = null;

  BeforeRet: {
    chckNilDisp(self_2147483774);
    if (isObj(self_2147483774.m_type, NTI2952791527)) {
    result_2147483787 = createWithDocument_2952807388(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483774.m_type, NTI2818572510)) {
    result_2147483787 = createWithDocument_2818590891(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483774.m_type, NTI2147483652)) {
    result_2147483787 = createWithDocument_2147483773(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    }}
  };

  return result_2147483787;

}

function getEventHandlers_2952797907(self_2952797908) {
  var result_2952797909 = [[]];

    result_2952797909[0].push(self_2952797908.eventHandler);;
    if (!((self_2952797908.modeEventHandler == null))) {
    result_2952797909[0].push(self_2952797908.modeEventHandler);;
    }
    
    if (!((self_2952797908.textEditor == null))) {
    add_2952797925(result_2952797909, 0, getEventHandlers_2147483804(self_2952797908.textEditor));
    result_2952797909[0].push(self_2952797908.textEditEventHandler);;
    }
    

  return result_2952797909[0];

}

function getEventHandlers_2818579672(self_2818579673) {
  var result_2818579674 = [];

    result_2818579674 = nimCopy(null, [self_2818579673.eventHandler], NTI2248146958);
    if (!((self_2818579673.modeEventHandler == null))) {
    result_2818579674.push(self_2818579673.modeEventHandler);;
    }
    
    if (self_2818579673.showCompletions) {
    result_2818579674.push(self_2818579673.completionEventHandler);;
    }
    

  return result_2818579674;

}

function getEventHandlers_2248146949(self_2248146950) {
  var result_2248146951 = [];

  BeforeRet: {
    result_2248146951 = nimCopy(null, [self_2248146950.eventHandler], NTI2248146958);
    break BeforeRet;
  };

  return result_2248146951;

}

function getEventHandlers_2147483788(self_2147483789) {
  var result_2147483790 = [];

  BeforeRet: {
    result_2147483790 = nimCopy(null, [], NTI2147483731);
    break BeforeRet;
  };

  return result_2147483790;

}

function getEventHandlers_2147483804(self_2147483789) {
  var result_2147483805 = [];

  BeforeRet: {
    chckNilDisp(self_2147483789);
    if (isObj(self_2147483789.m_type, NTI2952791527)) {
    result_2147483805 = getEventHandlers_2952797907(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2818572510)) {
    result_2147483805 = getEventHandlers_2818579672(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2248146948)) {
    result_2147483805 = getEventHandlers_2248146949(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2147483652)) {
    result_2147483805 = getEventHandlers_2147483788(self_2147483789);
    break BeforeRet;
    }
    }}}
  };

  return result_2147483805;

}

function reset_2952798022(obj_2952798024, obj_2952798024_Idx) {
    obj_2952798024[obj_2952798024_Idx] = null;

  
}

function clear_2952798015(deq_2952798017) {
    Label1: {
      var el_2952798021 = null;
      var el_2952798021_Idx = 0;
      var i_536872393 = deq_2952798017.head;
      Label2: {
        var c_536872395 = 0;
        var i_536872396 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872396 < deq_2952798017.count)) break Label4;
              c_536872395 = i_536872396;
              el_2952798021 = deq_2952798017.data; el_2952798021_Idx = chckIndx(i_536872393, 0, (deq_2952798017.data).length - 1);
              reset_2952798022(el_2952798021, el_2952798021_Idx);
              i_536872393 = (addInt(i_536872393, 1) & deq_2952798017.mask);
              i_536872396 = addInt(i_536872396, 1);
            }
        };
      };
    };
    deq_2952798017.count = 0;
    deq_2952798017.tail = deq_2952798017.head;

  
}

function handleDocumentChanged_2952797952(self_2952797953) {
    var fmtRes_2952797958 = mnewString(0);
    fmtRes_2952797958.push.apply(fmtRes_2952797958, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2952797958, NTI33554449)]);
    clear_2952798015(self_2952797953.selectionHistory);
    clear_2952798015(self_2952797953.selectionFuture);
    finishEdit_2952797888(self_2952797953, false);
    Label1: {
      var symbol_2952798092 = null;
      var L_536872386 = len_3003233372(ctx_2952790069.globalScope);
      Label2: {
        var h_536872388 = 0;
        var colontmp__536872389 = 0;
        colontmp__536872389 = (ctx_2952790069.globalScope.data).length - 1;
        var res_536872390 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872390 <= colontmp__536872389)) break Label4;
              h_536872388 = res_536872390;
              if (isFilled_1308622880(ctx_2952790069.globalScope.data[chckIndx(h_536872388, 0, (ctx_2952790069.globalScope.data).length - 1)].Field0)) {
              symbol_2952798092 = ctx_2952790069.globalScope.data[chckIndx(h_536872388, 0, (ctx_2952790069.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_3003191823(ctx_2952790069, symbol_2952798092);
              if (!((len_3003233372(ctx_2952790069.globalScope) == L_536872386))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872390 = addInt(res_536872390, 1);
            }
        };
      };
    };
    nodeHEX3D_2952793818(self_2952797953, HEX5BHEX5D_2986344532(self_2952797953.document.rootNode, 0));

  
}

function handleDocumentChanged_2818582689(self_2818582690) {
    selectionHEX3D_2818572798(self_2818582690, {Field0: clampCursor_2818572695(self_2818582690, selection_2818572792(self_2818582690).Field0), Field1: clampCursor_2818572695(self_2818582690, selection_2818572792(self_2818582690).Field1)});
    updateSearchResults_2818579690(self_2818582690);

  
}

function handleDocumentChanged_2147483806(self_2147483807) {
  
}

function handleDocumentChanged_2147483808(self_2147483807) {
    chckNilDisp(self_2147483807);
    if (isObj(self_2147483807.m_type, NTI2952791527)) {
    handleDocumentChanged_2952797952(self_2147483807);
    }
    else {
    if (isObj(self_2147483807.m_type, NTI2818572510)) {
    handleDocumentChanged_2818582689(self_2147483807);
    }
    else {
    if (isObj(self_2147483807.m_type, NTI2147483652)) {
    handleDocumentChanged_2147483806(self_2147483807);
    }
    }}

  
}

function del_1291847208(t_1291847211, key_1291847212) {
    var hc_1291847213 = [0];
    var i_1291847220 = rawGet_1291845892(t_1291847211, key_1291847212, hc_1291847213, 0);
    var mskHEX60gensym36_1291847224 = (t_1291847211.data).length - 1;
    if ((0 <= i_1291847220)) {
    t_1291847211.counter = subInt(t_1291847211.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847231 = i_1291847220;
            var rHEX60gensym36_1291847232 = jHEX60gensym36_1291847231;
            t_1291847211.data[chckIndx(i_1291847220, 0, (t_1291847211.data).length - 1)].Field0 = 0;
            t_1291847211.data[chckIndx(i_1291847220, 0, (t_1291847211.data).length - 1)].Field1 = 0;
            t_1291847211.data[chckIndx(i_1291847220, 0, (t_1291847211.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847220 = (addInt(i_1291847220, 1) & mskHEX60gensym36_1291847224);
                  if (isEmpty_1308622877(t_1291847211.data[chckIndx(i_1291847220, 0, (t_1291847211.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847232 = (t_1291847211.data[chckIndx(i_1291847220, 0, (t_1291847211.data).length - 1)].Field0 & mskHEX60gensym36_1291847224);
                  if (!(((((rHEX60gensym36_1291847232 <= i_1291847220) && (jHEX60gensym36_1291847231 < rHEX60gensym36_1291847232)) || ((jHEX60gensym36_1291847231 < rHEX60gensym36_1291847232) && (i_1291847220 < jHEX60gensym36_1291847231))) || ((i_1291847220 < jHEX60gensym36_1291847231) && (rHEX60gensym36_1291847232 <= i_1291847220))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847211.data[chckIndx(jHEX60gensym36_1291847231, 0, (t_1291847211.data).length - 1)] = nimCopy(t_1291847211.data[chckIndx(jHEX60gensym36_1291847231, 0, (t_1291847211.data).length - 1)], t_1291847211.data[chckIndx(i_1291847220, 0, (t_1291847211.data).length - 1)], NTI1291845712);
          }
      };
    };
    }
    

  
}

function invoke_1291847118(event_1291847120, arg_1291847121) {
    Label1: {
      var h_1291847144 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872402 = 0;
      var L_536872403 = (event_1291847120.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872402 < L_536872403)) break Label3;
            h_1291847144 = event_1291847120.handlers[chckIndx(i_536872402, 0, (event_1291847120.handlers).length - 1)];
            h_1291847144.Field1(arg_1291847121);
            i_536872402 = addInt(i_536872402, 1);
            if (!(((event_1291847120.handlers).length == L_536872403))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847165(self_1291847166, editor_1291847167) {
    del_1291847208(self_1291847166.editors, editor_1291847167.id);
    invoke_1291847118(self_1291847166.onEditorDeregistered, editor_1291847167);

  
}

function unregister_2952807830(self_2952807831) {
    finishEdit_2952797888(self_2952807831, false);
    unregisterEditor_1291847165(self_2952807831.editor, self_2952807831);

  
}

function unregister_2818591279(self_2818591280) {
    unregisterEditor_1291847165(self_2818591280.editor, self_2818591280);

  
}

function unregister_2147483809(self_2147483810) {
  
}

function unregister_2147483811(self_2147483810) {
    chckNilDisp(self_2147483810);
    if (isObj(self_2147483810.m_type, NTI2952791527)) {
    unregister_2952807830(self_2147483810);
    }
    else {
    if (isObj(self_2147483810.m_type, NTI2818572510)) {
    unregister_2818591279(self_2147483810);
    }
    else {
    if (isObj(self_2147483810.m_type, NTI2147483652)) {
    unregister_2147483809(self_2147483810);
    }
    }}

  
}

function getItemAtPixelPosition_2952807143(self_2952807144, posWindow_2952807145) {
  var result_2952807147 = ({val: 0, has: false});

  BeforeRet: {
    result_2952807147 = nimCopy(result_2952807147, none_2986344626(), NTI1191183280);
    Label1: {
      var index_2952807158 = 0;
      var rect_2952807159 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872407 = 0;
      var L_536872408 = (self_2952807144.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872407 < L_536872408)) break Label3;
            index_2952807158 = self_2952807144.lastItems[chckIndx(i_536872407, 0, (self_2952807144.lastItems).length - 1)]["Field0"];
            rect_2952807159 = self_2952807144.lastItems[chckIndx(i_536872407, 0, (self_2952807144.lastItems).length - 1)]["Field1"];
            if (((contains_2063597750(rect_2952807159, posWindow_2952807145) && (0 <= index_2952807158)) && (index_2952807158 <= (self_2952807144.completions).length - 1))) {
            result_2952807147 = nimCopy(result_2952807147, some_1191184367(index_2952807158), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872407 = addInt(i_536872407, 1);
            if (!(((self_2952807144.lastItems).length == L_536872408))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2952807147;

}

function getOption_2818583039(editor_2818583041, path_2818583042, default_2818583043) {
  var result_2818583049 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2818583041 == null)) {
      result_2818583049 = default_2818583043;
      break BeforeRet;
      }
      
      var nodeHEX60gensym159_2818583062 = HEX7BHEX7D_1627393316(editor_2818583041.options, nsuSplitString(path_2818583042, [46], -1));
      if ((nodeHEX60gensym159_2818583062 == null)) {
      result_2818583049 = default_2818583043;
      break BeforeRet;
      }
      
    };
    result_2818583049 = getFloat_1627390140(nodeHEX60gensym159_2818583062, default_2818583043);
    break BeforeRet;
  };

  return result_2818583049;

}

function handleScroll_2952807166(self_2952807167, scroll_2952807168, mousePosWindow_2952807169) {
    if (isSome_1191185117(getItemAtPixelPosition_2952807143(self_2952807167, mousePosWindow_2952807169))) {
    self_2952807167.selectedCompletion = clamp_1660945119(subInt(self_2952807167.selectedCompletion, ((scroll_2952807168.y) | 0)), 0, (self_2952807167.completions).length - 1);
    }
    else {
    HEX2BHEX3D_855640304(self_2952807167, "scrollOffset", (scroll_2952807168.y * getOption_2818583039(self_2952807167.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
    }
    

  
}

function handleScroll_2818583035(self_2818583036, scroll_2818583037, mousePosWindow_2818583038) {
    HEX2BHEX3D_855640304(self_2818583036, "scrollOffset", (scroll_2818583037.y * getOption_2818583039(self_2818583036.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0)));
    markDirty_2147483686(self_2818583036);

  
}

function handleScroll_2147483812(self_2147483813, scroll_2147483814, mousePosWindow_2147483815) {
  
}

function handleScroll_2147483816(self_2147483813, scroll_2147483814, mousePosWindow_2147483815) {
    chckNilDisp(self_2147483813);
    if (isObj(self_2147483813.m_type, NTI2952791527)) {
    handleScroll_2952807166(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    else {
    if (isObj(self_2147483813.m_type, NTI2818572510)) {
    handleScroll_2818583035(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    else {
    if (isObj(self_2147483813.m_type, NTI2147483652)) {
    handleScroll_2147483812(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    }}

  
}

function HEX2D_2080375316(aHEX60gensym73_2080375318, bHEX60gensym73_2080375319) {
  var result_2080375320 = ({x: 0.0, y: 0.0});

    result_2080375320 = nimCopy(result_2080375320, {x: (aHEX60gensym73_2080375318.x - bHEX60gensym73_2080375319.x), y: (aHEX60gensym73_2080375318.y - bHEX60gensym73_2080375319.y)}, NTI2097152288);

  return result_2080375320;

}

function getNodeAtPixelPosition_2952800756(self_2952800757, posContent_2952800758) {
                      var Temporary8;

  var result_2952800760 = ({val: null});

  BeforeRet: {
    result_2952800760 = nimCopy(result_2952800760, none_2986344655(), NTI2986344567);
    Label1: {
      var layout_2952800788 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2952800789 = ({x: 0.0, y: 0.0});
      var i_536872421 = 0;
      var L_536872422 = (self_2952800757.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872421 < L_536872422)) break Label3;
            layout_2952800788 = self_2952800757.lastLayouts[chckIndx(i_536872421, 0, (self_2952800757.lastLayouts).length - 1)]["Field0"];
            offset_2952800789 = self_2952800757.lastLayouts[chckIndx(i_536872421, 0, (self_2952800757.lastLayouts).length - 1)]["Field1"];
            var bounds_2952800799 = HEX2B_2063597723(bounds_3087009959(layout_2952800788), offset_2952800789);
            var smallestRange_2952800800 = ({parent: null, first: 0, last: 0});
            if (contains_2063597750(bounds_2952800799, posContent_2952800758)) {
            Label4: {
              var __2952800801 = 0;
              var child_2952800802 = null;
              var n_536872413 = layout_2952800788.node;
              var idx_536872414 = -1;
              var i_536872415 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872414 == -1)) {
                    var colontmp__536872418 = nimCopy(null, {Field0: i_536872415, Field1: n_536872413}, NTI2986345785);
                    __2952800801 = colontmp__536872418["Field0"];
                    child_2952800802 = colontmp__536872418["Field1"];
                    if (contains_2952792772(layout_2952800788.nodeToVisualNode, child_2952800802.id)) {
                    var visualNode_2952800948 = HEX5BHEX5D_2952793677(layout_2952800788.nodeToVisualNode, child_2952800802.id);
                    var bounds_2952800958 = HEX2B_2063597723(absoluteBounds_3087009572(visualNode_2952800948), vec2_2097152861(0.0, offset_2952800789.y));
                    if (contains_2063597750(bounds_2952800958, posContent_2952800758)) {
                    if (((((smallestRange_2952800800.parent == null) || (smallestRange_2952800800.parent.depth < visualNode_2952800948.parent.depth)) || ((visualNode_2952800948.parent.depth == smallestRange_2952800800.parent.depth) && (smallestRange_2952800800.parent.indent < visualNode_2952800948.parent.indent))) || ((visualNode_2952800948.parent.depth == smallestRange_2952800800.parent.depth) && (subInt(visualNode_2952800948.last, visualNode_2952800948.first) < subInt(smallestRange_2952800800.last, smallestRange_2952800800.first))))) {
                    smallestRange_2952800800 = nimCopy(smallestRange_2952800800, visualNode_2952800948, NTI3087007774);
                    result_2952800760 = nimCopy(result_2952800760, some_2986344674(child_2952800802), NTI2986344567);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872414, 1) < len_2986344536(n_536872413))) {
                    n_536872413 = HEX5BHEX5D_2986344532(n_536872413, addInt(idx_536872414, 1));
                    idx_536872414 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872419 = next_2986344641(n_536872413);
                      if (!isSome_2986346330(oHEX60gensym74_536872419)) Temporary8 = false; else {                        var ne_536872420 = get_2986346350(oHEX60gensym74_536872419);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872413 = ne_536872420;
                    idx_536872414 = -1;
                    }
                    else {
                    if ((!((n_536872413.parent == null)) && !((n_536872413.parent == layout_2952800788.node)))) {
                    idx_536872414 = index_2986344556(n_536872413);
                    n_536872413 = n_536872413.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872415 = addInt(i_536872415, 1);
                    }
                  }
              };
            };
            if (isNone_2986346358(result_2952800760)) {
            result_2952800760 = nimCopy(result_2952800760, some_2986344674(layout_2952800788.node), NTI2986344567);
            }
            
            break BeforeRet;
            }
            
            i_536872421 = addInt(i_536872421, 1);
            if (!(((self_2952800757.lastLayouts).length == L_536872422))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2952800760;

}

function handleMousePress_2952807198(self_2952807199, button_2952807200, mousePosWindow_2952807201) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2952807246 = HEX2D_2080375316(mousePosWindow_2952807201, xy_2080374816(self_2952807199.lastBounds));
    if ((button_2952807200 == 0)) {
      var oHEX60gensym1053_2952807253 = getItemAtPixelPosition_2952807143(self_2952807199, mousePosWindow_2952807201);
      if (!isSome_1191185117(oHEX60gensym1053_2952807253)) Temporary1 = false; else {        var index_2952807276 = get_1191185211(oHEX60gensym1053_2952807253);
        Temporary1 = true;      }    if (Temporary1) {
    self_2952807199.selectedCompletion = index_2952807276;
    applySelectedCompletion_2952803971(self_2952807199);
    }
    else {
      if (!!(isEditing_2952797462(self_2952807199))) Temporary2 = false; else {        var oHEX60gensym1054_2952807279 = getNodeAtPixelPosition_2952800756(self_2952807199, mousePosContent_2952807246);
        if (!isSome_2986346330(oHEX60gensym1054_2952807279)) Temporary3 = false; else {          var n_2952807302 = get_2986346350(oHEX60gensym1054_2952807279);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2952793818(self_2952807199, n_2952807302);
    }
    }
    }
    

  
}

function updateFontSettings_3305111634(self_3305111635) {
    var newFontSize_3305112725 = nsuParseFloat(HEX5BHEX5D_855639319(cstrToNimstr(window.getComputedStyle(self_3305111635.content, null).fontSize), HEX2EHEX2E_1040187488(0, 3)));
    if (!((newFontSize_3305112725 == self_3305111635.mFontSize))) {
    self_3305111635.mFontSize = newFontSize_3305112725;
    var d_3305112726 = document.createElement("div");
    d_3305112726.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3305112726.innerHTML = "#";
    self_3305111635.content.appendChild(d_3305112726);
    var fmtRes_3305112732 = [mnewString(0)];
    fmtRes_3305112732[0].push.apply(fmtRes_3305112732[0], [99,104,97,114,87,105,100,116,104,58,32]);;
    formatValue_2332033380(fmtRes_3305112732, 0, d_3305112726.clientWidth, []);
    fmtRes_3305112732[0].push.apply(fmtRes_3305112732[0], [44,32,108,105,110,101,72,101,105,103,104,116,58,32]);;
    formatValue_2332033380(fmtRes_3305112732, 0, d_3305112726.clientHeight, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3305112732[0], NTI33554449)]);
    self_3305111635.mLineHeight = d_3305112726.clientHeight;
    self_3305111635.mCharWidth = d_3305112726.clientWidth;
    self_3305111635.content.removeChild(d_3305112726);
    }
    

  
}

function charWidth_3305112770(self_3305112771) {
  var result_3305112772 = 0.0;

    updateFontSettings_3305111634(self_3305112771);
    result_3305112772 = self_3305112771.mCharWidth;

  return result_3305112772;

}

function charWidth_2315255964(self_2315255965) {
  var result_2315255966 = 0.0;

  return result_2315255966;

}

function charWidth_2315255967(self_2315255965) {
  var result_2315255968 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255965);
    if (isObj(self_2315255965.m_type, NTI3305111563)) {
    result_2315255968 = charWidth_3305112770(self_2315255965);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255965.m_type, NTI2315255812)) {
    result_2315255968 = charWidth_2315255964(self_2315255965);
    break BeforeRet;
    }
    }
  };

  return result_2315255968;

}

function isThickCursor_2818582798(self_2818582799) {
  var result_2818582800 = false;

  BeforeRet: {
    result_2818582800 = getOption_2818582801(self_2818582799.editor, getContextWithMode_2818582795(self_2818582799, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2818582800;

}

function HEX2DHEX3D_2818591068(x_2818591070, x_2818591070_Idx, y_2818591071) {
    x_2818591070[x_2818591070_Idx] = (x_2818591070[x_2818591070_Idx] - y_2818591071);

  
}

function some_2818591082(val_2818591084) {
  var result_2818591089 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2818591089.has = true;
    result_2818591089.val = nimCopy(result_2818591089.val, val_2818591084, NTI2818584575);

  return result_2818591089;

}

function none_2818591095() {
  var result_2818591102 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2818591102;

}

function getCursorAtPixelPos_2818590944(self_2818590945, mousePosWindow_2818590946) {
  var result_2818590952 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2818590993 = HEX2D_2080375316(mousePosWindow_2818590946, xy_2080374816(self_2818590945.lastContentBounds));
    Label1: {
      var li_2818591027 = 0;
      var line_2818591028 = null;
      var i_536872431 = 0;
      var L_536872432 = (self_2818590945.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872431 < L_536872432)) break Label3;
            li_2818591027 = i_536872431;
            line_2818591028 = self_2818590945.lastRenderedLines[chckIndx(i_536872431, 0, (self_2818590945.lastRenderedLines).length - 1)];
            var startOffset_2818591029 = 0;
            Label4: {
              var i_2818591062 = 0;
              var part_2818591063 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872427 = 0;
              var L_536872428 = (line_2818591028.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872427 < L_536872428)) break Label6;
                    i_2818591062 = i_536872427;
                    part_2818591063 = nimCopy(part_2818591063, line_2818591028.parts[chckIndx(i_536872427, 0, (line_2818591028.parts).length - 1)], NTI2818572422);
                    if ((contains_2063597750(part_2818591063.bounds, mousePosContent_2818590993) || ((((i_2818591062 == (line_2818591028.parts).length - 1) && (part_2818591063.bounds.y <= mousePosContent_2818590993.y)) && (mousePosContent_2818590993.y <= (part_2818591063.bounds.y + part_2818591063.bounds.h))) && (part_2818591063.bounds.x <= mousePosContent_2818590993.x)))) {
                    var offsetFromLeft_2818591067 = [((mousePosContent_2818590993.x - part_2818591063.bounds.x) / charWidth_2315255967(self_2818590945.editor.platform))];
                    if (isThickCursor_2818582798(self_2818590945)) {
                    HEX2DHEX3D_2818591068(offsetFromLeft_2818591067, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2818591067, 0, 0.5);
                    }
                    
                    var index_2818591081 = clamp_1660945119(((offsetFromLeft_2818591067[0]) | 0), 0, (part_2818591063.text).length);
                    result_2818590952 = nimCopy(result_2818590952, some_2818591082({Field0: line_2818591028.index, Field1: addInt(startOffset_2818591029, index_2818591081)}), NTI2818584500);
                    break BeforeRet;
                    }
                    
                    startOffset_2818591029 = addInt(startOffset_2818591029, (part_2818591063.text).length);
                    i_536872427 = addInt(i_536872427, 1);
                    if (!(((line_2818591028.parts).length == L_536872428))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872431 = addInt(i_536872431, 1);
            if (!(((self_2818590945.lastRenderedLines).length == L_536872432))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2818590952 = nimCopy(result_2818590952, none_2818591095(), NTI2818584500);
    break BeforeRet;
  };

  return result_2818590952;

}

function isSome_2818591137(self_2818591139) {
  var result_2818591140 = false;

    result_2818591140 = self_2818591139.has;

  return result_2818591140;

}

function isNone_2818591162(self_2818591164) {
  var result_2818591165 = false;

    result_2818591165 = !(self_2818591164.has);

  return result_2818591165;

}

function get_2818591154(self_2818591156) {
  var result_2818591157 = {Field0: 0, Field1: 0};

    if (isNone_2818591162(self_2818591156)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2818591157 = self_2818591156.val;

  return result_2818591157;

}

function handleMousePress_2818591121(self_2818591122, button_2818591123, mousePosWindow_2818591124) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

      if (!(button_2818591123 == 0)) Temporary1 = false; else {        var oHEX60gensym1005_2818591132 = getCursorAtPixelPos_2818590944(self_2818591122, mousePosWindow_2818591124);
        if (!isSome_2818591137(oHEX60gensym1005_2818591132)) Temporary2 = false; else {          var cursor_2818591177 = nimCopy(null, get_2818591154(oHEX60gensym1005_2818591132), NTI2231369737);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572798(self_2818591122, toSelection_2231370221(cursor_2818591177));
    }
    
      if (!(button_2818591123 == 3)) Temporary3 = false; else {        var oHEX60gensym1007_2818591184 = getCursorAtPixelPos_2818590944(self_2818591122, mousePosWindow_2818591124);
        if (!isSome_2818591137(oHEX60gensym1007_2818591184)) Temporary4 = false; else {          var cursor_2818591207 = nimCopy(null, get_2818591154(oHEX60gensym1007_2818591184), NTI2231369737);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2818584899(self_2818591122, cursor_2818591207);
    }
    
      if (!(button_2818591123 == 4)) Temporary5 = false; else {        var oHEX60gensym1008_2818591214 = getCursorAtPixelPos_2818590944(self_2818591122, mousePosWindow_2818591124);
        if (!isSome_2818591137(oHEX60gensym1008_2818591214)) Temporary6 = false; else {          var cursor_2818591237 = nimCopy(null, get_2818591154(oHEX60gensym1008_2818591214), NTI2231369737);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2818585026(self_2818591122, cursor_2818591237.Field0);
    }
    

  
}

function handleMousePress_2147483817(self_2147483818, button_2147483819, mousePosWindow_2147483820) {
  
}

function handleMousePress_2147483821(self_2147483818, button_2147483819, mousePosWindow_2147483820) {
    chckNilDisp(self_2147483818);
    if (isObj(self_2147483818.m_type, NTI2952791527)) {
    handleMousePress_2952807198(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    else {
    if (isObj(self_2147483818.m_type, NTI2818572510)) {
    handleMousePress_2818591121(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    else {
    if (isObj(self_2147483818.m_type, NTI2147483652)) {
    handleMousePress_2147483817(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    }}

  
}

function handleMouseRelease_2952807303(self_2952807304, button_2952807305, mousePosWindow_2952807306) {
  
}

function handleMouseRelease_2818591238(self_2818591239, button_2818591240, mousePosWindow_2818591241) {
  
}

function handleMouseRelease_2147483822(self_2147483823, button_2147483824, mousePosWindow_2147483825) {
  
}

function handleMouseRelease_2147483826(self_2147483823, button_2147483824, mousePosWindow_2147483825) {
    chckNilDisp(self_2147483823);
    if (isObj(self_2147483823.m_type, NTI2952791527)) {
    handleMouseRelease_2952807303(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    else {
    if (isObj(self_2147483823.m_type, NTI2818572510)) {
    handleMouseRelease_2818591238(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    else {
    if (isObj(self_2147483823.m_type, NTI2147483652)) {
    handleMouseRelease_2147483822(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    }}

  
}

function handleMouseMove_2952807307(self_2952807308, mousePosWindow_2952807309, mousePosDelta_2952807310, modifiers_2952807311, buttons_2952807312) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2952807312[0] != undefined)) {
    var mousePosContent_2952807361 = HEX2D_2080375316(mousePosWindow_2952807309, xy_2080374816(self_2952807308.lastBounds));
      if (!!(isEditing_2952797462(self_2952807308))) Temporary1 = false; else {        var oHEX60gensym1056_2952807364 = getNodeAtPixelPosition_2952800756(self_2952807308, mousePosContent_2952807361);
        if (!isSome_2986346330(oHEX60gensym1056_2952807364)) Temporary2 = false; else {          var n_2952807387 = get_2986346350(oHEX60gensym1056_2952807364);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2952793818(self_2952807308, n_2952807387);
    }
    
    }
    

  
}

function handleMouseMove_2818591242(self_2818591243, mousePosWindow_2818591244, mousePosDelta_2818591245, modifiers_2818591246, buttons_2818591247) {
      var Temporary1;
        var Temporary2;

      if (!(buttons_2818591247[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1010_2818591255 = getCursorAtPixelPos_2818590944(self_2818591243, mousePosWindow_2818591244);
        if (!isSome_2818591137(oHEX60gensym1010_2818591255)) Temporary2 = false; else {          var cursor_2818591278 = nimCopy(null, get_2818591154(oHEX60gensym1010_2818591255), NTI2231369737);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2818572798(self_2818591243, toSelection_2231370224(cursor_2818591278, selection_2818572792(self_2818591243), 3));
    }
    

  
}

function handleMouseMove_2147483827(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832) {
  
}

function handleMouseMove_2147483833(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832) {
    chckNilDisp(self_2147483828);
    if (isObj(self_2147483828.m_type, NTI2952791527)) {
    handleMouseMove_2952807307(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    else {
    if (isObj(self_2147483828.m_type, NTI2818572510)) {
    handleMouseMove_2818591242(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    else {
    if (isObj(self_2147483828.m_type, NTI2147483652)) {
    handleMouseMove_2147483827(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    }}

  
}

function HEX26_3170894198(x_3170894200, y_3170894201) {
  var result_3170894202 = [];

    result_3170894202 = new Array(chckRange(addInt((x_3170894200).length, (y_3170894201).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3170894200).length, (y_3170894201).length), 0, 2147483647) ; ++i) { result_3170894202[i] = null; }    Label1: {
      var i_3170894220 = 0;
      var colontmp__536872435 = 0;
      colontmp__536872435 = subInt((x_3170894200).length, 1);
      var res_536872436 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872436 <= colontmp__536872435)) break Label3;
            i_3170894220 = res_536872436;
            result_3170894202[chckIndx(i_3170894220, 0, (result_3170894202).length - 1)] = x_3170894200[chckIndx(i_3170894220, 0, (x_3170894200).length - 1)];
            res_536872436 = addInt(res_536872436, 1);
          }
      };
    };
    Label4: {
      var i_3170894228 = 0;
      var colontmp__536872439 = 0;
      colontmp__536872439 = subInt((y_3170894201).length, 1);
      var res_536872440 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872440 <= colontmp__536872439)) break Label6;
            i_3170894228 = res_536872440;
            result_3170894202[chckIndx(addInt(i_3170894228, (x_3170894200).length), 0, (result_3170894202).length - 1)] = y_3170894201[chckIndx(i_3170894228, 0, (y_3170894201).length - 1)];
            res_536872440 = addInt(res_536872440, 1);
          }
      };
    };

  return result_3170894202;

}

function getEventHandlers_3221225730(self_3221225731) {
  var result_3221225732 = [];

  BeforeRet: {
    result_3221225732 = nimCopy(null, HEX26_3170894198(getEventHandlers_2147483804(self_3221225731.textEditor), [self_3221225731.eventHandler]), NTI3170894057);
    break BeforeRet;
  };

  return result_3221225732;

}

function getEventHandlers_3170894191(self_3170894192) {
  var result_3170894193 = [];

  BeforeRet: {
    result_3170894193 = nimCopy(null, HEX26_3170894198(getEventHandlers_2147483804(self_3170894192.textEditor), [self_3170894192.eventHandler]), NTI3170894057);
    break BeforeRet;
  };

  return result_3170894193;

}

function getEventHandlers_2264924212(self_2264924213) {
  var result_2264924214 = [];

  BeforeRet: {
    result_2264924214 = nimCopy(null, [self_2264924213.eventHandler], NTI2248146958);
    break BeforeRet;
  };

  return result_2264924214;

}

function getEventHandlers_2264924219(self_2264924213) {
  var result_2264924220 = [];

  BeforeRet: {
    chckNilDisp(self_2264924213);
    if (isObj(self_2264924213.m_type, NTI3221225494)) {
    result_2264924220 = getEventHandlers_3221225730(self_2264924213);
    break BeforeRet;
    }
    else {
    if (isObj(self_2264924213.m_type, NTI3170893828)) {
    result_2264924220 = getEventHandlers_3170894191(self_2264924213);
    break BeforeRet;
    }
    else {
    if (isObj(self_2264924213.m_type, NTI2264924164)) {
    result_2264924220 = getEventHandlers_2264924212(self_2264924213);
    break BeforeRet;
    }
    }}
  };

  return result_2264924220;

}

function handleScroll_3221226182(self_3221226183, scroll_3221226184, mousePosWindow_3221226185) {
    self_3221226183.selected = clamp_1660945119(subInt(self_3221226183.selected, ((scroll_3221226184.y) | 0)), 0, subInt((self_3221226183.completions).length, 1));

  
}

function handleScroll_3170894268(self_3170894269, scroll_3170894270, mousePosWindow_3170894271) {
    self_3170894269.selected = clamp_1660945119(subInt(self_3170894269.selected, ((scroll_3170894270.y) | 0)), 0, subInt((self_3170894269.completions).length, 1));

  
}

function handleScroll_2264924221(self_2264924222, scroll_2264924223, mousePosWindow_2264924224) {
  
}

function handleScroll_2264924225(self_2264924222, scroll_2264924223, mousePosWindow_2264924224) {
    chckNilDisp(self_2264924222);
    if (isObj(self_2264924222.m_type, NTI3221225494)) {
    handleScroll_3221226182(self_2264924222, scroll_2264924223, mousePosWindow_2264924224);
    }
    else {
    if (isObj(self_2264924222.m_type, NTI3170893828)) {
    handleScroll_3170894268(self_2264924222, scroll_2264924223, mousePosWindow_2264924224);
    }
    else {
    if (isObj(self_2264924222.m_type, NTI2264924164)) {
    handleScroll_2264924221(self_2264924222, scroll_2264924223, mousePosWindow_2264924224);
    }
    }}

  
}

function none_3221225684() {
  var result_3221225690 = ({val: null});

  return result_3221225690;

}

function some_3221225699(val_3221225701) {
  var result_3221225702 = ({val: null});

    if (!(!((val_3221225701 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3221225702.val = val_3221225701;

  return result_3221225702;

}

function getItemAtPixelPosition_3221225676(self_3221225677, posWindow_3221225678) {
  var result_3221225683 = ({val: null});

  BeforeRet: {
    result_3221225683 = nimCopy(result_3221225683, none_3221225684(), NTI3221225617);
    Label1: {
      var index_3221225694 = 0;
      var rect_3221225695 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872443 = 0;
      var L_536872444 = (self_3221225677.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872443 < L_536872444)) break Label3;
            index_3221225694 = self_3221225677.lastItems[chckIndx(i_536872443, 0, (self_3221225677.lastItems).length - 1)]["Field0"];
            rect_3221225695 = self_3221225677.lastItems[chckIndx(i_536872443, 0, (self_3221225677.lastItems).length - 1)]["Field1"];
            if (((contains_2063597750(rect_3221225695, posWindow_3221225678) && (0 <= index_3221225694)) && (index_3221225694 <= (self_3221225677.completions).length - 1))) {
            result_3221225683 = nimCopy(result_3221225683, some_3221225699(self_3221225677.completions[chckIndx(index_3221225694, 0, (self_3221225677.completions).length - 1)]), NTI3221225617);
            break BeforeRet;
            }
            
            i_536872443 = addInt(i_536872443, 1);
            if (!(((self_3221225677.lastItems).length == L_536872444))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3221225683;

}

function isSome_3221226209(self_3221226211) {
  var result_3221226212 = false;

    result_3221226212 = !((self_3221226211.val == null));

  return result_3221226212;

}

function isNone_3221226237(self_3221226239) {
  var result_3221226240 = false;

    result_3221226240 = (self_3221226239.val == null);

  return result_3221226240;

}

function get_3221226229(self_3221226231) {
  var result_3221226232 = null;

    if (isNone_3221226237(self_3221226231)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3221226232 = self_3221226231["val"];

  return result_3221226232;

}

function handleMousePress_3221226194(self_3221226195, button_3221226196, mousePosWindow_3221226197) {
      var Temporary1;

    if ((button_3221226196 == 0)) {
      var oHEX60gensym65_3221226204 = getItemAtPixelPosition_3221225676(self_3221226195, mousePosWindow_3221226197);
      if (!isSome_3221226209(oHEX60gensym65_3221226204)) Temporary1 = false; else {        var item_3221226255 = get_3221226229(oHEX60gensym65_3221226204);
        Temporary1 = true;      }    if (Temporary1) {
    self_3221226195.handleItemConfirmed(item_3221226255);
    popPopup_1291849107(self_3221226195.editor, self_3221226195);
    }
    
    }
    

  
}

function none_3170894096() {
  var result_3170894103 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3170894103;

}

function some_3170894131(val_3170894133) {
  var result_3170894134 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3170894134.has = true;
    result_3170894134.val = nimCopy(result_3170894134.val, val_3170894133, NTI2952791524);

  return result_3170894134;

}

function getItemAtPixelPosition_3170894087(self_3170894088, posWindow_3170894089) {
  var result_3170894095 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3170894095 = nimCopy(result_3170894095, none_3170894096(), NTI3170893968);
    Label1: {
      var index_3170894126 = 0;
      var rect_3170894127 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872447 = 0;
      var L_536872448 = (self_3170894088.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872447 < L_536872448)) break Label3;
            index_3170894126 = self_3170894088.lastItems[chckIndx(i_536872447, 0, (self_3170894088.lastItems).length - 1)]["Field0"];
            rect_3170894127 = self_3170894088.lastItems[chckIndx(i_536872447, 0, (self_3170894088.lastItems).length - 1)]["Field1"];
            if (((contains_2063597750(rect_3170894127, posWindow_3170894089) && (0 <= index_3170894126)) && (index_3170894126 <= (self_3170894088.completions).length - 1))) {
            result_3170894095 = nimCopy(result_3170894095, some_3170894131(self_3170894088.completions[chckIndx(index_3170894126, 0, (self_3170894088.completions).length - 1)]), NTI3170893968);
            break BeforeRet;
            }
            
            i_536872447 = addInt(i_536872447, 1);
            if (!(((self_3170894088.lastItems).length == L_536872448))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3170894095;

}

function isSome_3170894295(self_3170894297) {
  var result_3170894298 = false;

    result_3170894298 = self_3170894297.has;

  return result_3170894298;

}

function isNone_3170894320(self_3170894322) {
  var result_3170894323 = false;

    result_3170894323 = !(self_3170894322.has);

  return result_3170894323;

}

function get_3170894312(self_3170894314) {
  var result_3170894315 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3170894320(self_3170894314)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3170894315 = self_3170894314.val;

  return result_3170894315;

}

function handleMousePress_3170894280(self_3170894281, button_3170894282, mousePosWindow_3170894283) {
      var Temporary1;
    var Temporary2;

    if ((button_3170894282 == 0)) {
      var oHEX60gensym7_3170894290 = getItemAtPixelPosition_3170894087(self_3170894281, mousePosWindow_3170894283);
      if (!isSome_3170894295(oHEX60gensym7_3170894290)) Temporary1 = false; else {        var item_3170894335 = nimCopy(null, get_3170894312(oHEX60gensym7_3170894290), NTI2952791524);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3170894335;
    if (ConstSet311[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2952791523)); }
    self_3170894281.handleSymbolSelected(Temporary2.id);
    popPopup_1291849107(self_3170894281.editor, self_3170894281);
    }
    
    }
    

  
}

function handleMousePress_2264924226(self_2264924227, button_2264924228, mousePosWindow_2264924229) {
  
}

function handleMousePress_2264924230(self_2264924227, button_2264924228, mousePosWindow_2264924229) {
    chckNilDisp(self_2264924227);
    if (isObj(self_2264924227.m_type, NTI3221225494)) {
    handleMousePress_3221226194(self_2264924227, button_2264924228, mousePosWindow_2264924229);
    }
    else {
    if (isObj(self_2264924227.m_type, NTI3170893828)) {
    handleMousePress_3170894280(self_2264924227, button_2264924228, mousePosWindow_2264924229);
    }
    else {
    if (isObj(self_2264924227.m_type, NTI2264924164)) {
    handleMousePress_2264924226(self_2264924227, button_2264924228, mousePosWindow_2264924229);
    }
    }}

  
}

function handleMouseRelease_3221226258(self_3221226259, button_3221226260, mousePosWindow_3221226261) {
  
}

function handleMouseRelease_3170894338(self_3170894339, button_3170894340, mousePosWindow_3170894341) {
  
}

function handleMouseRelease_2264924231(self_2264924232, button_2264924233, mousePosWindow_2264924234) {
  
}

function handleMouseRelease_2264924235(self_2264924232, button_2264924233, mousePosWindow_2264924234) {
    chckNilDisp(self_2264924232);
    if (isObj(self_2264924232.m_type, NTI3221225494)) {
    handleMouseRelease_3221226258(self_2264924232, button_2264924233, mousePosWindow_2264924234);
    }
    else {
    if (isObj(self_2264924232.m_type, NTI3170893828)) {
    handleMouseRelease_3170894338(self_2264924232, button_2264924233, mousePosWindow_2264924234);
    }
    else {
    if (isObj(self_2264924232.m_type, NTI2264924164)) {
    handleMouseRelease_2264924231(self_2264924232, button_2264924233, mousePosWindow_2264924234);
    }
    }}

  
}

function handleMouseMove_3221226262(self_3221226263, mousePosWindow_3221226264, mousePosDelta_3221226265, modifiers_3221226266, buttons_3221226267) {
  
}

function handleMouseMove_3170894342(self_3170894343, mousePosWindow_3170894344, mousePosDelta_3170894345, modifiers_3170894346, buttons_3170894347) {
  
}

function handleMouseMove_2264924236(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241) {
  
}

function handleMouseMove_2264924242(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241) {
    chckNilDisp(self_2264924237);
    if (isObj(self_2264924237.m_type, NTI3221225494)) {
    handleMouseMove_3221226262(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241);
    }
    else {
    if (isObj(self_2264924237.m_type, NTI3170893828)) {
    handleMouseMove_3170894342(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241);
    }
    else {
    if (isObj(self_2264924237.m_type, NTI2264924164)) {
    handleMouseMove_2264924236(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241);
    }
    }}

  
}

function calculateBounds_2332033353(self_2332033354, container_2332033355) {
  var result_2332033356 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var left_2332033357 = ((container_2332033355.x + (self_2332033354.anchor.Field0.x * container_2332033355.w)) + self_2332033354.left);
    var top_2332033358 = ((container_2332033355.y + (self_2332033354.anchor.Field0.y * container_2332033355.h)) + self_2332033354.top);
    var right_2332033359 = ((container_2332033355.x + (self_2332033354.anchor.Field1.x * container_2332033355.w)) + self_2332033354.right);
    var bottom_2332033360 = ((container_2332033355.y + (self_2332033354.anchor.Field1.y * container_2332033355.h)) + self_2332033354.bottom);
    var px_2332033361 = (self_2332033354.pivot.x * (right_2332033359 - left_2332033357));
    var py_2332033362 = (self_2332033354.pivot.y * (bottom_2332033360 - top_2332033358));
    result_2332033356.x = (left_2332033357 - px_2332033361);
    result_2332033356.y = (top_2332033358 - py_2332033362);
    result_2332033356.w = (right_2332033359 - left_2332033357);
    result_2332033356.h = (bottom_2332033360 - top_2332033358);

  return result_2332033356;

}

function formatValue_2332033375(result_2332033377, result_2332033377_Idx, value_2332033378, specifier_2332033379) {
    formatValue_721420459(result_2332033377, result_2332033377_Idx, HEX24_2080374849(value_2332033378), specifier_2332033379);

  
}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536872455 = 0;
      colontmp__536872455 = subInt((s_855638110).length, 1);
      var res_536872456 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872456 <= colontmp__536872455)) break Label3;
            iHEX60gensym7_855638117 = res_536872456;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536872456 = addInt(res_536872456, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2097152924(aHEX60gensym45_2097152925) {
  var result_2097152926 = [];

    result_2097152926 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2097152930(aHEX60gensym45_2097152925.x) || [],[44,32] || [],HEX24_2097152930(aHEX60gensym45_2097152925.y) || [],[41] || []), NTI33554449);

  return result_2097152926;

}

function addQuoted_2332033459(s_2332033461, s_2332033461_Idx, x_2332033462) {
    s_2332033461[s_2332033461_Idx].push.apply(s_2332033461[s_2332033461_Idx], HEX24_2097152924(x_2332033462));;

  
}

function HEX24_2332033427(x_2332033429) {
  var result_2332033430 = [[]];

    result_2332033430[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym14_2332033441 = 0;
    if ((0 < countHEX60gensym14_2332033441)) {
    result_2332033430[0].push.apply(result_2332033430[0], [44,32]);;
    }
    
    result_2332033430[0].push.apply(result_2332033430[0], [109,105,110]);;
    result_2332033430[0].push.apply(result_2332033430[0], [58,32]);;
    countHEX60gensym14_2332033441 += 1;
    addQuoted_2332033459(result_2332033430, 0, x_2332033429["Field0"]);
    if ((0 < countHEX60gensym14_2332033441)) {
    result_2332033430[0].push.apply(result_2332033430[0], [44,32]);;
    }
    
    result_2332033430[0].push.apply(result_2332033430[0], [109,97,120]);;
    result_2332033430[0].push.apply(result_2332033430[0], [58,32]);;
    countHEX60gensym14_2332033441 += 1;
    addQuoted_2332033459(result_2332033430, 0, x_2332033429["Field1"]);
    result_2332033430[0].push.apply(result_2332033430[0], [41]);;

  return result_2332033430[0];

}

function formatValue_2332033422(result_2332033424, result_2332033424_Idx, value_2332033425, specifier_2332033426) {
    formatValue_721420459(result_2332033424, result_2332033424_Idx, HEX24_2332033427(value_2332033425), specifier_2332033426);

  
}

function formatValue_2332033489(result_2332033491, result_2332033491_Idx, value_2332033492, specifier_2332033493) {
    formatValue_721420459(result_2332033491, result_2332033491_Idx, HEX24_2097152924(value_2332033492), specifier_2332033493);

  
}

function layoutWidget_2332033363(self_2332033364, container_2332033365, frameIndex_2332033366, options_2332033367) {
    var newBounds_2332033368 = calculateBounds_2332033353(self_2332033364, container_2332033365);
    if (self_2332033364.logLayout) {
    var fmtRes_2332033374 = [mnewString(0)];
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2332033375(fmtRes_2332033374, 0, container_2332033365, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [44,32]);;
    formatValue_2332033380(fmtRes_2332033374, 0, frameIndex_2332033366, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033422(fmtRes_2332033374, 0, self_2332033364.anchor, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033489(fmtRes_2332033374, 0, self_2332033364.pivot, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033374, 0, self_2332033364.left, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [44]);;
    formatValue_2332033500(fmtRes_2332033374, 0, self_2332033364.top, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033374, 0, self_2332033364.right, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [44]);;
    formatValue_2332033500(fmtRes_2332033374, 0, self_2332033364.bottom, []);
    fmtRes_2332033374[0].push.apply(fmtRes_2332033374[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033374, 0, newBounds_2332033368, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033374[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033368, self_2332033364.lastBounds))) {
    var fmtRes_2332033586 = [mnewString(0)];
    fmtRes_2332033586[0].push.apply(fmtRes_2332033586[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033375(fmtRes_2332033586, 0, self_2332033364.lastBounds, []);
    fmtRes_2332033586[0].push.apply(fmtRes_2332033586[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033586, 0, newBounds_2332033368, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033586[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033368, self_2332033364.lastBounds))) {
    self_2332033364.lastBounds = nimCopy(self_2332033364.lastBounds, newBounds_2332033368, NTI2080374789);
    self_2332033364.lastBoundsChange = frameIndex_2332033366;
    }
    
    if (((frameIndex_2332033366 <= self_2332033364.lastHierarchyChange) || (frameIndex_2332033366 <= self_2332033364.lastBoundsChange))) {
    Label1: {
      var c_2332033604 = null;
      var i_536872451 = 0;
      var L_536872452 = (self_2332033364.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872451 < L_536872452)) break Label3;
            c_2332033604 = self_2332033364.children[chckIndx(i_536872451, 0, (self_2332033364.children).length - 1)];
            layoutWidget_2332033348(c_2332033604, newBounds_2332033368, frameIndex_2332033366, options_2332033367);
            i_536872451 = addInt(i_536872451, 1);
            if (!(((self_2332033364.children).length == L_536872452))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2332033079(self_2332033080) {
  var result_2332033081 = 0.0;

    result_2332033081 = (self_2332033080.bottom - self_2332033080.top);

  return result_2332033081;

}

function layoutWidget_2332033837(self_2332033838, container_2332033839, frameIndex_2332033840, options_2332033841) {
    var newBounds_2332033842 = calculateBounds_2332033353(self_2332033838, container_2332033839);
    if (self_2332033838.logLayout) {
    var fmtRes_2332033848 = [mnewString(0)];
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2332033375(fmtRes_2332033848, 0, container_2332033839, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [44,32]);;
    formatValue_2332033380(fmtRes_2332033848, 0, frameIndex_2332033840, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033422(fmtRes_2332033848, 0, self_2332033838.anchor, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033489(fmtRes_2332033848, 0, self_2332033838.pivot, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033848, 0, self_2332033838.left, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [44]);;
    formatValue_2332033500(fmtRes_2332033848, 0, self_2332033838.top, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033848, 0, self_2332033838.right, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [44]);;
    formatValue_2332033500(fmtRes_2332033848, 0, self_2332033838.bottom, []);
    fmtRes_2332033848[0].push.apply(fmtRes_2332033848[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033848, 0, newBounds_2332033842, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033848[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033842, self_2332033838.lastBounds))) {
    var fmtRes_2332033903 = [mnewString(0)];
    fmtRes_2332033903[0].push.apply(fmtRes_2332033903[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033375(fmtRes_2332033903, 0, self_2332033838.lastBounds, []);
    fmtRes_2332033903[0].push.apply(fmtRes_2332033903[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033903, 0, newBounds_2332033842, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033903[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033842, self_2332033838.lastBounds))) {
    self_2332033838.lastBounds = nimCopy(self_2332033838.lastBounds, newBounds_2332033842, NTI2080374789);
    self_2332033838.lastBoundsChange = frameIndex_2332033840;
    }
    
    if (((frameIndex_2332033840 <= self_2332033838.lastHierarchyChange) || (frameIndex_2332033840 <= self_2332033838.lastBoundsChange))) {
    var lastY_2332033918 = 0.0;
    Label1: {
      var c_2332033922 = null;
      var i_536872459 = 0;
      var L_536872460 = (self_2332033838.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872459 < L_536872460)) break Label3;
            c_2332033922 = self_2332033838.children[chckIndx(i_536872459, 0, (self_2332033838.children).length - 1)];
            var height_2332033923 = height_2332033079(c_2332033922);
            c_2332033922.top = lastY_2332033918;
            c_2332033922.bottom = (lastY_2332033918 + height_2332033923);
            layoutWidget_2332033348(c_2332033922, newBounds_2332033842, frameIndex_2332033840, options_2332033841);
            lastY_2332033918 = ((c_2332033922.lastBounds.y + c_2332033922.lastBounds.h) - newBounds_2332033842.y);
            i_536872459 = addInt(i_536872459, 1);
            if (!(((self_2332033838.children).length == L_536872460))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2332033738() {
  var result_2332033745 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2332033745;

}

function isSome_2332033758(self_2332033760) {
  var result_2332033761 = false;

    result_2332033761 = self_2332033760.has;

  return result_2332033761;

}

function isNone_2332033783(self_2332033785) {
  var result_2332033786 = false;

    result_2332033786 = !(self_2332033785.has);

  return result_2332033786;

}

function get_2332033775(self_2332033777) {
  var result_2332033778 = null;

  BeforeRet: {
    if (isNone_2332033783(self_2332033777)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2332033778 = self_2332033777.val;
    break BeforeRet;
  };

  return result_2332033778;

}

function some_2332033820(val_2332033822) {
  var result_2332033823 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2332033823.has = true;
    result_2332033823.val = nimCopy(result_2332033823.val, val_2332033822, NTI2080374789);

  return result_2332033823;

}

function layoutWidget_2332033605(self_2332033606, container_2332033607, frameIndex_2332033608, options_2332033609) {
            var Temporary10;

    var newBounds_2332033610 = calculateBounds_2332033353(self_2332033606, container_2332033607);
    if (self_2332033606.logLayout) {
    var fmtRes_2332033616 = [mnewString(0)];
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2332033375(fmtRes_2332033616, 0, container_2332033607, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [44,32]);;
    formatValue_2332033380(fmtRes_2332033616, 0, frameIndex_2332033608, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033422(fmtRes_2332033616, 0, self_2332033606.anchor, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033489(fmtRes_2332033616, 0, self_2332033606.pivot, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033616, 0, self_2332033606.left, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [44]);;
    formatValue_2332033500(fmtRes_2332033616, 0, self_2332033606.top, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033616, 0, self_2332033606.right, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [44]);;
    formatValue_2332033500(fmtRes_2332033616, 0, self_2332033606.bottom, []);
    fmtRes_2332033616[0].push.apply(fmtRes_2332033616[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033616, 0, newBounds_2332033610, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033616[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033610, self_2332033606.lastBounds))) {
    var fmtRes_2332033671 = [mnewString(0)];
    fmtRes_2332033671[0].push.apply(fmtRes_2332033671[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033375(fmtRes_2332033671, 0, self_2332033606.lastBounds, []);
    fmtRes_2332033671[0].push.apply(fmtRes_2332033671[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033671, 0, newBounds_2332033610, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033671[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033610, self_2332033606.lastBounds))) {
    self_2332033606.lastBounds = nimCopy(self_2332033606.lastBounds, newBounds_2332033610, NTI2080374789);
    self_2332033606.lastBoundsChange = frameIndex_2332033608;
    }
    
    if (((frameIndex_2332033608 <= self_2332033606.lastHierarchyChange) || (frameIndex_2332033608 <= self_2332033606.lastBoundsChange))) {
    Label1: {
      var i_2332033718 = 0;
      var c_2332033719 = null;
      var i_536872468 = 0;
      var L_536872469 = (self_2332033606.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872468 < L_536872469)) break Label3;
            i_2332033718 = i_536872468;
            c_2332033719 = self_2332033606.children[chckIndx(i_536872468, 0, (self_2332033606.children).length - 1)];
            var oldBounds_2332033720 = nimCopy(null, c_2332033719.lastBounds, NTI2080374789);
            layoutWidget_2332033348(c_2332033719, newBounds_2332033610, frameIndex_2332033608, options_2332033609);
            var newBounds_2332033721 = nimCopy(null, c_2332033719.lastBounds, NTI2080374789);
            if ((!(HEX3DHEX3D_2332033571(oldBounds_2332033720, newBounds_2332033721)) && !(contains_2063597754(newBounds_2332033721, oldBounds_2332033720)))) {
            var invalidationRect_2332033726 = nimCopy(null, oldBounds_2332033720, NTI2080374789);
            Label4: {
              var k_2332033732 = 0;
              var colontmp__536872464 = 0;
              colontmp__536872464 = subInt(i_2332033718, 1);
              var res_536872465 = colontmp__536872464;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872465)) break Label6;
                    k_2332033732 = res_536872465;
                    invalidate_2332033255(self_2332033606.children[chckIndx(k_2332033732, 0, (self_2332033606.children).length - 1)], frameIndex_2332033608, invalidationRect_2332033726);
                    if (contains_2063597754(self_2332033606.children[chckIndx(k_2332033732, 0, (self_2332033606.children).length - 1)].lastBounds, invalidationRect_2332033726)) {
                    break Label4;
                    }
                    
                    res_536872465 = subInt(res_536872465, 1);
                  }
              };
            };
            }
            
            i_536872468 = addInt(i_536872468, 1);
            if (!(((self_2332033606.children).length == L_536872469))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2332033746 = [none_2332033738()];
    Label7: {
      var i_2332033752 = 0;
      var c_2332033753 = null;
      var i_536872472 = 0;
      var L_536872473 = (self_2332033606.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872472 < L_536872473)) break Label9;
            i_2332033752 = i_536872472;
            c_2332033753 = self_2332033606.children[chckIndx(i_536872472, 0, (self_2332033606.children).length - 1)];
            if (isSome_2332033758(invalidationRect_2332033746[0])) {
            invalidate_2332033255(c_2332033753, frameIndex_2332033608, get_2332033775(invalidationRect_2332033746[0]));
            }
            
            if (isSome_2332033758(invalidationRect_2332033746[0])) {
            Temporary10 = some_2332033820(or_2080374864(get_2332033775(invalidationRect_2332033746[0]), c_2332033753.lastBounds));
            }
            else {
            Temporary10 = some_2332033820(c_2332033753.lastBounds);
            }
            
            invalidationRect_2332033746[0] = nimCopy(invalidationRect_2332033746[0], Temporary10, NTI2332033454);
            i_536872472 = addInt(i_536872472, 1);
            if (!(((self_2332033606.children).length == L_536872473))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2449473546(x_2449473548, x_2449473548_Idx, y_2449473549) {
    x_2449473548[x_2449473548_Idx] = (x_2449473548[x_2449473548_Idx] - y_2449473549);

  
}

function layoutWidget_2332034011(self_2332034012, container_2332034013, frameIndex_2332034014, options_2332034015) {
    var newBounds_2332034016 = calculateBounds_2332033353(self_2332034012, container_2332034013);
    if (self_2332034012.sizeToContent) {
    var size_2332034017 = options_2332034015.getTextBounds(self_2332034012.text);
    var incX_2332034018 = max_33555642((size_2332034017.x - newBounds_2332034016.w), 0.0);
    var incY_2332034019 = max_33555642((size_2332034017.y - newBounds_2332034016.h), 0.0);
    newBounds_2332034016.w = size_2332034017.x;
    newBounds_2332034016.h = size_2332034017.y;
    HEX2DHEX3D_2449473546(newBounds_2332034016, "x", (incX_2332034018 * self_2332034012.pivot.x));
    HEX2DHEX3D_2449473546(newBounds_2332034016, "y", (incY_2332034019 * self_2332034012.pivot.y));
    }
    
    if (self_2332034012.logLayout) {
    var fmtRes_2332034033 = [mnewString(0)];
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2332034033, 0, self_2332034012.text, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [39,44,32]);;
    formatValue_2332033375(fmtRes_2332034033, 0, container_2332034013, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [44,32]);;
    formatValue_2332033380(fmtRes_2332034033, 0, frameIndex_2332034014, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033422(fmtRes_2332034033, 0, self_2332034012.anchor, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033489(fmtRes_2332034033, 0, self_2332034012.pivot, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332034033, 0, self_2332034012.left, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [44]);;
    formatValue_2332033500(fmtRes_2332034033, 0, self_2332034012.top, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332034033, 0, self_2332034012.right, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [44]);;
    formatValue_2332033500(fmtRes_2332034033, 0, self_2332034012.bottom, []);
    fmtRes_2332034033[0].push.apply(fmtRes_2332034033[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332034033, 0, newBounds_2332034016, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034033[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033571(newBounds_2332034016, self_2332034012.lastBounds))) {
    var fmtRes_2332034088 = [mnewString(0)];
    fmtRes_2332034088[0].push.apply(fmtRes_2332034088[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033375(fmtRes_2332034088, 0, self_2332034012.lastBounds, []);
    fmtRes_2332034088[0].push.apply(fmtRes_2332034088[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332034088, 0, newBounds_2332034016, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034088[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033571(newBounds_2332034016, self_2332034012.lastBounds))) {
    self_2332034012.lastBounds = nimCopy(self_2332034012.lastBounds, newBounds_2332034016, NTI2080374789);
    self_2332034012.lastBoundsChange = frameIndex_2332034014;
    }
    

  
}

function width_2332033076(self_2332033077) {
  var result_2332033078 = 0.0;

    result_2332033078 = (self_2332033077.right - self_2332033077.left);

  return result_2332033078;

}

function layoutWidget_2332033924(self_2332033925, container_2332033926, frameIndex_2332033927, options_2332033928) {
    var newBounds_2332033929 = calculateBounds_2332033353(self_2332033925, container_2332033926);
    if (self_2332033925.logLayout) {
    var fmtRes_2332033935 = [mnewString(0)];
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2332033375(fmtRes_2332033935, 0, container_2332033926, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [44,32]);;
    formatValue_2332033380(fmtRes_2332033935, 0, frameIndex_2332033927, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033422(fmtRes_2332033935, 0, self_2332033925.anchor, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033489(fmtRes_2332033935, 0, self_2332033925.pivot, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033935, 0, self_2332033925.left, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [44]);;
    formatValue_2332033500(fmtRes_2332033935, 0, self_2332033925.top, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [44,32]);;
    formatValue_2332033500(fmtRes_2332033935, 0, self_2332033925.right, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [44]);;
    formatValue_2332033500(fmtRes_2332033935, 0, self_2332033925.bottom, []);
    fmtRes_2332033935[0].push.apply(fmtRes_2332033935[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033935, 0, newBounds_2332033929, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033935[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033929, self_2332033925.lastBounds))) {
    var fmtRes_2332033990 = [mnewString(0)];
    fmtRes_2332033990[0].push.apply(fmtRes_2332033990[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033375(fmtRes_2332033990, 0, self_2332033925.lastBounds, []);
    fmtRes_2332033990[0].push.apply(fmtRes_2332033990[0], [32,45,62,32]);;
    formatValue_2332033375(fmtRes_2332033990, 0, newBounds_2332033929, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033990[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033571(newBounds_2332033929, self_2332033925.lastBounds))) {
    self_2332033925.lastBounds = nimCopy(self_2332033925.lastBounds, newBounds_2332033929, NTI2080374789);
    self_2332033925.lastBoundsChange = frameIndex_2332033927;
    }
    
    if (((frameIndex_2332033927 <= self_2332033925.lastHierarchyChange) || (frameIndex_2332033927 <= self_2332033925.lastBoundsChange))) {
    var lastX_2332034005 = 0.0;
    Label1: {
      var c_2332034009 = null;
      var i_536872476 = 0;
      var L_536872477 = (self_2332033925.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872476 < L_536872477)) break Label3;
            c_2332034009 = self_2332033925.children[chckIndx(i_536872476, 0, (self_2332033925.children).length - 1)];
            var width_2332034010 = width_2332033076(c_2332034009);
            c_2332034009.left = lastX_2332034005;
            c_2332034009.right = (lastX_2332034005 + width_2332034010);
            layoutWidget_2332033348(c_2332034009, newBounds_2332033929, frameIndex_2332033927, options_2332033928);
            lastX_2332034005 = ((c_2332034009.lastBounds.x + c_2332034009.lastBounds.w) - newBounds_2332033929.x);
            i_536872476 = addInt(i_536872476, 1);
            if (!(((self_2332033925.children).length == L_536872477))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2332033343(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347) {
  
}

function layoutWidget_2332033348(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347) {
    chckNilDisp(self_2332033344);
    if (isObj(self_2332033344.m_type, NTI2332033036)) {
    layoutWidget_2332033363(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033040)) {
    layoutWidget_2332033837(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033038)) {
    layoutWidget_2332033605(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033044)) {
    layoutWidget_2332034011(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033042)) {
    layoutWidget_2332033924(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033034)) {
    layoutWidget_2332033343(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    }}}}}

  
}

function invoke_3305111795(event_3305111797, arg_3305111798) {
    Label1: {
      var h_3305111821 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872481 = 0;
      var L_536872482 = (event_3305111797.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872481 < L_536872482)) break Label3;
            h_3305111821 = event_3305111797.handlers[chckIndx(i_536872481, 0, (event_3305111797.handlers).length - 1)];
            h_3305111821.Field1(arg_3305111798);
            i_536872481 = addInt(i_536872481, 1);
            if (!(((event_3305111797.handlers).length == L_536872482))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3305112671(self_3305112672, redrawEverything_3305112673) {
    invoke_3305111795(self_3305112672.onResized, redrawEverything_3305112673);

  
}

function requestRender_2315255911(self_2315255912, redrawEverything_2315255913) {
  
}

function requestRender_2315255914(self_2315255912, redrawEverything_2315255913) {
    chckNilDisp(self_2315255912);
    if (isObj(self_2315255912.m_type, NTI3305111563)) {
    requestRender_3305112671(self_2315255912, redrawEverything_2315255913);
    }
    else {
    if (isObj(self_2315255912.m_type, NTI2315255812)) {
    requestRender_2315255911(self_2315255912, redrawEverything_2315255913);
    }
    }

  
}

function size_3305112702(self_3305112703) {
  var result_3305112704 = ({x: 0.0, y: 0.0});

    result_3305112704 = nimCopy(result_3305112704, vec2_2097152861(self_3305112703.content.clientWidth, self_3305112703.content.clientHeight), NTI2097152288);

  return result_3305112704;

}

function size_2315255925(self_2315255926) {
  var result_2315255927 = ({x: 0.0, y: 0.0});

  return result_2315255927;

}

function size_2315255928(self_2315255926) {
  var result_2315255929 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    chckNilDisp(self_2315255926);
    if (isObj(self_2315255926.m_type, NTI3305111563)) {
    result_2315255929 = nimCopy(result_2315255929, size_3305112702(self_2315255926), NTI2097152288);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255926.m_type, NTI2315255812)) {
    result_2315255929 = nimCopy(result_2315255929, size_2315255925(self_2315255926), NTI2097152288);
    break BeforeRet;
    }
    }
  };

  return result_2315255929;

}

function createOrReplaceElement_3305112871(element_3305112872, element_3305112872_Idx, name_3305112873, nameUpper_3305112874) {
    if ((element_3305112872[element_3305112872_Idx] == null)) {
    element_3305112872[element_3305112872_Idx] = document.createElement(name_3305112873);
    element_3305112872[element_3305112872_Idx].className = "widget";
    }
    else {
    if (!((element_3305112872[element_3305112872_Idx].nodeName == nameUpper_3305112874))) {
    var dif_3305112878 = document.createElement(name_3305112873);
    element_3305112872[element_3305112872_Idx].replaceWith(dif_3305112878);
    element_3305112872[element_3305112872_Idx] = dif_3305112878;
    element_3305112872[element_3305112872_Idx].className = "widget";
    }
    }

  
}

function HEX2D_2063597727(a_2063597728, b_2063597729) {
  var result_2063597730 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2063597730.x = (a_2063597728.x - b_2063597729.x);
    result_2063597730.y = (a_2063597728.y - b_2063597729.y);
    result_2063597730.w = a_2063597728.w;
    result_2063597730.h = a_2063597728.h;

  return result_2063597730;

}

function myToHtmlHex_3305112882(c_3305112883) {
  var result_3305112884 = null;

    const hexChars = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];let result = '#';
    var r_3305112885 = (((c_3305112883.r * 255.0)) | 0);
    var g_3305112886 = (((c_3305112883.g * 255.0)) | 0);
    var b_3305112887 = (((c_3305112883.b * 255.0)) | 0);
    var cr1_3305112888 = (r_3305112885 & 15);
    var cr2_3305112893 = ((r_3305112885 >> 4) & 15);
    var cg1_3305112894 = (g_3305112886 & 15);
    var cg2_3305112899 = ((g_3305112886 >> 4) & 15);
    var cb1_3305112900 = (b_3305112887 & 15);
    var cb2_3305112905 = ((b_3305112887 >> 4) & 15);
    result += hexChars[cr2_3305112893];
    result += hexChars[cr1_3305112888];
    result += hexChars[cg2_3305112899];
    result += hexChars[cg1_3305112894];
    result += hexChars[cb2_3305112905];
    result += hexChars[cb1_3305112900];
    result_3305112884 = result;

  return result_3305112884;

}

function getTextStyle_3305113047(x_3305113048, y_3305113049, width_3305113050, height_3305113051, color_3305113052, backgroundColor_3305113053) {
  var result_3305113054 = null;

    result_3305113054 = `left: ${x_3305113048}px; top: ${y_3305113049}px; width: ${width_3305113050}px; height: ${height_3305113051}px; overflow: visible; color: ${color_3305113052}; ${backgroundColor_3305113053}`

  return result_3305113054;

}

function pop_3305112846(s_3305112848, s_3305112848_Idx) {
  var result_3305112849 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3305112853 = subInt((s_3305112848[s_3305112848_Idx]).length, 1);
    result_3305112849 = nimCopy(result_3305112849, s_3305112848[s_3305112848_Idx][chckIndx(L_3305112853, 0, (s_3305112848[s_3305112848_Idx]).length - 1)], NTI2080374789);
    if (s_3305112848[s_3305112848_Idx].length < chckRange(L_3305112853, 0, 2147483647)) { for (var i = s_3305112848[s_3305112848_Idx].length ; i < chckRange(L_3305112853, 0, 2147483647) ; ++i) s_3305112848[s_3305112848_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3305112848[s_3305112848_Idx].length = chckRange(L_3305112853, 0, 2147483647); };

  return result_3305112849;

}

function renderWidget_3305113055(self_3305113056, renderer_3305113057, element_3305113058, element_3305113058_Idx, forceRedraw_3305113059, frameIndex_3305113060, buffer_3305113061, buffer_3305113061_Idx) {
    var Temporary3;
    
function HEX3Aanonymous_3305113091() {
        element_3305113058[element_3305113058_Idx].setAttribute("style", getTextStyle_3305113047(((relBounds_3305113074.x) | 0), ((relBounds_3305113074.y) | 0), ((relBounds_3305113074.w) | 0), ((relBounds_3305113074.h) | 0), color_3305113082, backgroundColor_3305113090));
        if (updateText_3305113084) {
        element_3305113058[element_3305113058_Idx].innerText = text_3305113083;
        element_3305113058[element_3305113058_Idx].setAttribute("data-text", text_3305113083);
        }
        

      
    }

  BeforeRet: {
    if (((((self_3305113056.lastHierarchyChange < frameIndex_3305113060) && (self_3305113056.lastBoundsChange < frameIndex_3305113060)) && (self_3305113056.lastInvalidation < frameIndex_3305113060)) && !(forceRedraw_3305113059))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3305112871(element_3305113058, element_3305113058_Idx, "span", "SPAN");
    var relBounds_3305113074 = HEX2D_2063597727(self_3305113056.lastBounds, xy_2080374816(renderer_3305113057.boundsStack[chckIndx((renderer_3305113057.boundsStack).length - 1, 0, (renderer_3305113057.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3305113056.lastBounds, NTI2080374789);
    renderer_3305113057.boundsStack.push(Temporary1);;
    try {
    var color_3305113082 = myToHtmlHex_3305112882(self_3305113056.foregroundColor);
    var text_3305113083 = toJSStr(self_3305113056.text);
    var updateText_3305113084 = !((element_3305113058[element_3305113058_Idx].getAttribute("data-text") == text_3305113083));
    if (self_3305113056.fillBackground) {
    var fmtRes_3305113089 = [mnewString(0)];
    fmtRes_3305113089[0].push.apply(fmtRes_3305113089[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3305113089, 0, myToHtmlHex_3305112882(self_3305113056.backgroundColor));
    fmtRes_3305113089[0].push.apply(fmtRes_3305113089[0], [59]);;
    Temporary3 = toJSStr(fmtRes_3305113089[0]);
    }
    else {
    Temporary3 = "";
    }
    
    var backgroundColor_3305113090 = Temporary3;
    renderer_3305113057.domUpdates.push(HEX3Aanonymous_3305113091);;
    self_3305113056.lastRenderedText = nimCopy(null, self_3305113056.text, NTI33554449);
    } finally {
    var _ = pop_3305112846(renderer_3305113057, "boundsStack");
    }
  };

  
}

function updateRelativePosition_3305112879(element_3305112880, element_3305112880_Idx, bounds_3305112881) {
    element_3305112880[element_3305112880_Idx].style.left = toJSStr(HEX24_369098760(((bounds_3305112881.x) | 0)));
    element_3305112880[element_3305112880_Idx].style.top = toJSStr(HEX24_369098760(((bounds_3305112881.y) | 0)));
    element_3305112880[element_3305112880_Idx].style.width = toJSStr(HEX24_369098760(((bounds_3305112881.w) | 0)));
    element_3305112880[element_3305112880_Idx].style.height = toJSStr(HEX24_369098760(((bounds_3305112881.h) | 0)));

  
}

function renderWidget_3305112999(self_3305113000, renderer_3305113001, element_3305113002, element_3305113002_Idx, forceRedraw_3305113003, frameIndex_3305113004, buffer_3305113005, buffer_3305113005_Idx) {
            var Temporary8;

  BeforeRet: {
    if (((((self_3305113000.lastHierarchyChange < frameIndex_3305113004) && (self_3305113000.lastBoundsChange < frameIndex_3305113004)) && (self_3305113000.lastInvalidation < frameIndex_3305113004)) && !(forceRedraw_3305113003))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3305112871(element_3305113002, element_3305113002_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3305113000.children).length < (element_3305113002[element_3305113002_Idx].children).length)) break Label2;
          element_3305113002[element_3305113002_Idx].removeChild(element_3305113002[element_3305113002_Idx].lastChild);
        }
    };
    var relBounds_3305113024 = HEX2D_2063597727(self_3305113000.lastBounds, xy_2080374816(renderer_3305113001.boundsStack[chckIndx((renderer_3305113001.boundsStack).length - 1, 0, (renderer_3305113001.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3305113000.lastBounds, NTI2080374789);
    renderer_3305113001.boundsStack.push(Temporary3);;
    try {
    updateRelativePosition_3305112879(element_3305113002, element_3305113002_Idx, relBounds_3305113024);
    var existingCount_3305113035 = (element_3305113002[element_3305113002_Idx].children).length;
    Label5: {
      var i_3305113041 = 0;
      var c_3305113042 = null;
      var i_536872486 = 0;
      var L_536872487 = (self_3305113000.children).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536872486 < L_536872487)) break Label7;
            i_3305113041 = i_536872486;
            c_3305113042 = self_3305113000.children[chckIndx(i_536872486, 0, (self_3305113000.children).length - 1)];
            if ((i_3305113041 < existingCount_3305113035)) {
            Temporary8 = element_3305113002[element_3305113002_Idx].children[chckIndx(i_3305113041, 0, (element_3305113002[element_3305113002_Idx].children).length - 1)];
            }
            else {
            Temporary8 = null;
            }
            
            var childElement_3305113043 = [Temporary8];
            renderWidget_3305112788(c_3305113042, renderer_3305113001, childElement_3305113043, 0, (forceRedraw_3305113003 || self_3305113000.fillBackground), frameIndex_3305113004, buffer_3305113005, buffer_3305113005_Idx);
            if (((existingCount_3305113035 <= i_3305113041) && !((childElement_3305113043[0] == null)))) {
            element_3305113002[element_3305113002_Idx].appendChild(childElement_3305113043[0]);
            }
            
            i_536872486 = addInt(i_536872486, 1);
            if (!(((self_3305113000.children).length == L_536872487))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3305112846(renderer_3305113001, "boundsStack");
    }
  };

  
}

function renderWidget_3305112906(self_3305112907, renderer_3305112908, element_3305112909, element_3305112909_Idx, forceRedraw_3305112910, frameIndex_3305112911, buffer_3305112912, buffer_3305112912_Idx) {
    var Temporary5;
    
function HEX3Aanonymous_3305112945() {
        element_3305112909[element_3305112909_Idx].className = "widget";
        var fmtRes_3305112950 = [mnewString(0)];
        fmtRes_3305112950[0].push.apply(fmtRes_3305112950[0], [108,101,102,116,58,32]);;
        formatValue_2332033380(fmtRes_3305112950, 0, ((relBounds_3305112931.x) | 0), []);
        fmtRes_3305112950[0].push.apply(fmtRes_3305112950[0], [112,120,59,32,116,111,112,58,32]);;
        formatValue_2332033380(fmtRes_3305112950, 0, ((relBounds_3305112931.y) | 0), []);
        fmtRes_3305112950[0].push.apply(fmtRes_3305112950[0], [112,120,59,32,119,105,100,116,104,58,32]);;
        formatValue_2332033380(fmtRes_3305112950, 0, ((relBounds_3305112931.w) | 0), []);
        fmtRes_3305112950[0].push.apply(fmtRes_3305112950[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
        formatValue_2332033380(fmtRes_3305112950, 0, ((relBounds_3305112931.h) | 0), []);
        fmtRes_3305112950[0].push.apply(fmtRes_3305112950[0], [112,120,59,32]);;
        formatValue_721420459(fmtRes_3305112950, 0, backgroundColor_3305112944, []);
        element_3305112909[element_3305112909_Idx].setAttribute("style", toJSStr(fmtRes_3305112950[0]));

      
    }
            var Temporary9;

  BeforeRet: {
    if (((((self_3305112907.lastHierarchyChange < frameIndex_3305112911) && (self_3305112907.lastBoundsChange < frameIndex_3305112911)) && (self_3305112907.lastInvalidation < frameIndex_3305112911)) && !(forceRedraw_3305112910))) {
    break BeforeRet;
    }
    
    createOrReplaceElement_3305112871(element_3305112909, element_3305112909_Idx, "div", "DIV");
    Label1: {
        Label2: while (true) {
        if (!((self_3305112907.children).length < (element_3305112909[element_3305112909_Idx].children).length)) break Label2;
          element_3305112909[element_3305112909_Idx].removeChild(element_3305112909[element_3305112909_Idx].lastChild);
        }
    };
    var relBounds_3305112931 = HEX2D_2063597727(self_3305112907.lastBounds, xy_2080374816(renderer_3305112908.boundsStack[chckIndx((renderer_3305112908.boundsStack).length - 1, 0, (renderer_3305112908.boundsStack).length - 1)]));
    var Temporary3 = nimCopy(null, self_3305112907.lastBounds, NTI2080374789);
    renderer_3305112908.boundsStack.push(Temporary3);;
    try {
    if (self_3305112907.fillBackground) {
    var fmtRes_3305112943 = [mnewString(0)];
    fmtRes_3305112943[0].push.apply(fmtRes_3305112943[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    add_33556386(fmtRes_3305112943, 0, myToHtmlHex_3305112882(self_3305112907.backgroundColor));
    fmtRes_3305112943[0].push.apply(fmtRes_3305112943[0], [59]);;
    Temporary5 = fmtRes_3305112943[0];
    }
    else {
    Temporary5 = [];
    }
    
    var backgroundColor_3305112944 = nimCopy(null, Temporary5, NTI33554449);
    renderer_3305112908.domUpdates.push(HEX3Aanonymous_3305112945);;
    var existingCount_3305112978 = (element_3305112909[element_3305112909_Idx].children).length;
    Label6: {
      var i_3305112984 = 0;
      var c_3305112985 = null;
      var i_536872491 = 0;
      var L_536872492 = (self_3305112907.children).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536872491 < L_536872492)) break Label8;
            i_3305112984 = i_536872491;
            c_3305112985 = self_3305112907.children[chckIndx(i_536872491, 0, (self_3305112907.children).length - 1)];
            if ((i_3305112984 < existingCount_3305112978)) {
            Temporary9 = element_3305112909[element_3305112909_Idx].children[chckIndx(i_3305112984, 0, (element_3305112909[element_3305112909_Idx].children).length - 1)];
            }
            else {
            Temporary9 = null;
            }
            
            var childElement_3305112986 = [Temporary9];
            renderWidget_3305112788(c_3305112985, renderer_3305112908, childElement_3305112986, 0, (forceRedraw_3305112910 || self_3305112907.fillBackground), frameIndex_3305112911, buffer_3305112912, buffer_3305112912_Idx);
            if (((existingCount_3305112978 <= i_3305112984) && !((childElement_3305112986[0] == null)))) {
            element_3305112909[element_3305112909_Idx].appendChild(childElement_3305112986[0]);
            }
            
            i_536872491 = addInt(i_536872491, 1);
            if (!(((self_3305112907.children).length == L_536872492))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    } finally {
    var _ = pop_3305112846(renderer_3305112908, "boundsStack");
    }
  };

  
}

function renderWidget_3305112781(self_3305112782, renderer_3305112783, element_3305112784, element_3305112784_Idx, forceRedraw_3305112785, frameIndex_3305112786, buffer_3305112787, buffer_3305112787_Idx) {
  
}

function renderWidget_3305112788(self_3305112782, renderer_3305112783, element_3305112784, element_3305112784_Idx, forceRedraw_3305112785, frameIndex_3305112786, buffer_3305112787, buffer_3305112787_Idx) {
    chckNilDisp(self_3305112782);
    if (isObj(self_3305112782.m_type, NTI2332033044)) {
    renderWidget_3305113055(self_3305112782, renderer_3305112783, element_3305112784, element_3305112784_Idx, forceRedraw_3305112785, frameIndex_3305112786, buffer_3305112787, buffer_3305112787_Idx);
    }
    else {
    if (isObj(self_3305112782.m_type, NTI2332033038)) {
    renderWidget_3305112999(self_3305112782, renderer_3305112783, element_3305112784, element_3305112784_Idx, forceRedraw_3305112785, frameIndex_3305112786, buffer_3305112787, buffer_3305112787_Idx);
    }
    else {
    if (isObj(self_3305112782.m_type, NTI2332033036)) {
    renderWidget_3305112906(self_3305112782, renderer_3305112783, element_3305112784, element_3305112784_Idx, forceRedraw_3305112785, frameIndex_3305112786, buffer_3305112787, buffer_3305112787_Idx);
    }
    else {
    if (isObj(self_3305112782.m_type, NTI2332033034)) {
    renderWidget_3305112781(self_3305112782, renderer_3305112783, element_3305112784, element_3305112784_Idx, forceRedraw_3305112785, frameIndex_3305112786, buffer_3305112787, buffer_3305112787_Idx);
    }
    }}}

  
}

function applyDomUpdates_3305112789(self_3305112790) {
    Label1: {
      var update_3305112813 = null;
      var i_536872496 = 0;
      var L_536872497 = (self_3305112790.domUpdates).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872496 < L_536872497)) break Label3;
            update_3305112813 = self_3305112790.domUpdates[chckIndx(i_536872496, 0, (self_3305112790.domUpdates).length - 1)];
            update_3305112813();
            i_536872496 = addInt(i_536872496, 1);
            if (!(((self_3305112790.domUpdates).length == L_536872497))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (self_3305112790.domUpdates.length < 0) { for (var i = self_3305112790.domUpdates.length ; i < 0 ; ++i) self_3305112790.domUpdates.push(null); }
               else { self_3305112790.domUpdates.length = 0; };

  
}

function render_3305112838(self_3305112839, widget_3305112840, frameIndex_3305112841) {
    var Temporary2;

    self_3305112839.boundsStack.push(rect_2080374808(vec2_2097152822(), size_2315255928(self_3305112839)));;
    try {
    var buffer_3305112858 = [[]];
    if ((0 < (self_3305112839.content.children).length)) {
    Temporary2 = self_3305112839.content.children[chckIndx(0, 0, (self_3305112839.content.children).length - 1)];
    }
    else {
    Temporary2 = null;
    }
    
    var element_3305112863 = [Temporary2];
    var wasNil_3305112867 = (element_3305112863[0] == null);
    renderWidget_3305112788(widget_3305112840, self_3305112839, element_3305112863, 0, self_3305112839.redrawEverything, frameIndex_3305112841, buffer_3305112858, 0);
    applyDomUpdates_3305112789(self_3305112839);
    if ((!((element_3305112863[0] == null)) && wasNil_3305112867)) {
    self_3305112839.content.appendChild(element_3305112863[0]);
    }
    
    self_3305112839.redrawEverything = false;
    } finally {
    var _ = pop_3305112846(self_3305112839, "boundsStack");
    }

  
}

function render_2315255915(self_2315255916, widget_2315255917, frameIndex_2315255918) {
  
}

function render_2315255919(self_2315255916, widget_2315255917, frameIndex_2315255918) {
    chckNilDisp(self_2315255916);
    if (isObj(self_2315255916.m_type, NTI3305111563)) {
    render_3305112838(self_2315255916, widget_2315255917, frameIndex_2315255918);
    }
    else {
    if (isObj(self_2315255916.m_type, NTI2315255812)) {
    render_2315255915(self_2315255916, widget_2315255917, frameIndex_2315255918);
    }
    }

  
}

function sizeChanged_2315255920(self_2315255921) {
  var result_2315255922 = false;

  return result_2315255922;

}

function sizeChanged_2315255923(self_2315255921) {
  var result_2315255924 = false;

  BeforeRet: {
    result_2315255924 = sizeChanged_2315255920(self_2315255921);
    break BeforeRet;
  };

  return result_2315255924;

}

function initDoublyLinkedList_3305111706() {
  var result_3305111708 = ({head: null, tail: null});

  return result_3305111708;

}

function initTable_3305111712(initialSize_3305111715) {
  var result_3305111716 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3305111718 = slotsNeeded_1308622891(chckRange(initialSize_3305111715, 0, 2147483647));
    result_3305111716.counter = 0;
    result_3305111716.data = new Array(chckRange(correctSizeHEX60gensym3_3305111718, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3305111718, 0, 2147483647) ; ++i) { result_3305111716.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3305111716;

}

function newLruCache_3305111696(capacity_3305111699, recordRemovedKeys_3305111700) {
  var result_3305111701 = null;

    result_3305111701 = {capacity: capacity_3305111699, list: initDoublyLinkedList_3305111706(), table: initTable_3305111712(correctSize_3036676117(capacity_3305111699)), recordRemovedKeys: recordRemovedKeys_3305111700, removedKeys: ({data: [], counter: 0})};

  return result_3305111701;

}

function getModifiers_3305111636(self_3305111637) {
  var result_3305111638 = {};

    if (self_3305111637.altKey) {
    result_3305111638[2] = true;
    }
    
    if (self_3305111637.shiftKey) {
    result_3305111638[1] = true;
    }
    
    if (self_3305111637.ctrlKey) {
    result_3305111638[0] = true;
    }
    

  return result_3305111638;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3305111630(key_3305111631, code_3305111632, keyCode_3305111633) {
  var result_3305112777 = 0;

    switch (key_3305111631) {
    case "Enter":
      result_3305112777 = -1;
      break;
    case "Escape":
      result_3305112777 = -2;
      break;
    case "Backspace":
      result_3305112777 = -3;
      break;
    case " ":
      result_3305112777 = -4;
      break;
    case "Delete":
      result_3305112777 = -5;
      break;
    case "Tab":
      result_3305112777 = -6;
      break;
    case "ArrowLeft":
      result_3305112777 = -7;
      break;
    case "ArrowRight":
      result_3305112777 = -8;
      break;
    case "ArrowUp":
      result_3305112777 = -9;
      break;
    case "ArrowDown":
      result_3305112777 = -10;
      break;
    case "Home":
      result_3305112777 = -11;
      break;
    case "End":
      result_3305112777 = -12;
      break;
    case "PageUp":
      result_3305112777 = -13;
      break;
    case "PageDown":
      result_3305112777 = -14;
      break;
    default: 
      if (      keyCode_3305111633 >= 112 && keyCode_3305111633 <= 123      ){        result_3305112777 = addInt(-20, subInt(keyCode_3305111633, 112));
        }
      else{
        if ((((key_3305111631) == null ? 0 : (key_3305111631).length) == 1)) {
        result_3305112777 = runeAt_788536179(cstrToNimstr(key_3305111631), 0);
        }
        
        }
      break;
    }

  return result_3305112777;

}

function invoke_3305111869(event_3305111871, arg_3305111872) {
    Label1: {
      var h_3305111895 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872506 = 0;
      var L_536872507 = (event_3305111871.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872506 < L_536872507)) break Label3;
            h_3305111895 = event_3305111871.handlers[chckIndx(i_536872506, 0, (event_3305111871.handlers).length - 1)];
            h_3305111895.Field1(arg_3305111872);
            i_536872506 = addInt(i_536872506, 1);
            if (!(((event_3305111871.handlers).length == L_536872507))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3305111651(self_3305111652) {
  var result_3305111653 = {};

    if (self_3305111652.altKey) {
    result_3305111653[2] = true;
    }
    
    if (self_3305111652.shiftKey) {
    result_3305111653[1] = true;
    }
    
    if (self_3305111652.ctrlKey) {
    result_3305111653[0] = true;
    }
    

  return result_3305111653;

}

function invoke_3305112220(event_3305112222, arg_3305112223) {
    Label1: {
      var h_3305112246 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872511 = 0;
      var L_536872512 = (event_3305112222.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872511 < L_536872512)) break Label3;
            h_3305112246 = event_3305112222.handlers[chckIndx(i_536872511, 0, (event_3305112222.handlers).length - 1)];
            h_3305112246.Field1(arg_3305112223);
            i_536872511 = addInt(i_536872511, 1);
            if (!(((event_3305112222.handlers).length == L_536872512))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3305112057(aHEX60gensym74_3305112059, bHEX60gensym74_3305112060) {
  var result_3305112061 = ({x: 0.0, y: 0.0});

    result_3305112061 = nimCopy(result_3305112061, {x: (aHEX60gensym74_3305112059.x * bHEX60gensym74_3305112060), y: (aHEX60gensym74_3305112059.y * bHEX60gensym74_3305112060)}, NTI2097152288);

  return result_3305112061;

}

function getMouseButton_3305111682(event_3305111683) {
    var Temporary1;

  var result_3305111684 = 0;

    if (    event_3305111683.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3305111683.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3305111683.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3305111684 = Temporary1;

  return result_3305111684;

}

function invoke_3305112315(event_3305112317, arg_3305112318) {
    Label1: {
      var h_3305112341 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872516 = 0;
      var L_536872517 = (event_3305112317.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872516 < L_536872517)) break Label3;
            h_3305112341 = event_3305112317.handlers[chckIndx(i_536872516, 0, (event_3305112317.handlers).length - 1)];
            h_3305112341.Field1(arg_3305112318);
            i_536872516 = addInt(i_536872516, 1);
            if (!(((event_3305112317.handlers).length == L_536872517))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3305112388(event_3305112390, arg_3305112391) {
    Label1: {
      var h_3305112414 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872521 = 0;
      var L_536872522 = (event_3305112390.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872521 < L_536872522)) break Label3;
            h_3305112414 = event_3305112390.handlers[chckIndx(i_536872521, 0, (event_3305112390.handlers).length - 1)];
            h_3305112414.Field1(arg_3305112391);
            i_536872521 = addInt(i_536872521, 1);
            if (!(((event_3305112390.handlers).length == L_536872522))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3305111666(event_3305111667) {
  var result_3305111668 = {};

    var buttons_3305111669 = event_3305111667.buttons;
    if (!(((buttons_3305111669 & 1) == 0))) {
    result_3305111668[0] = true;
    }
    
    if (!(((buttons_3305111669 & 2) == 0))) {
    result_3305111668[2] = true;
    }
    
    if (!(((buttons_3305111669 & 4) == 0))) {
    result_3305111668[1] = true;
    }
    

  return result_3305111668;

}

function invoke_3305112543(event_3305112545, arg_3305112546) {
    Label1: {
      var h_3305112569 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872526 = 0;
      var L_536872527 = (event_3305112545.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872526 < L_536872527)) break Label3;
            h_3305112569 = event_3305112545.handlers[chckIndx(i_536872526, 0, (event_3305112545.handlers).length - 1)];
            h_3305112569.Field1(arg_3305112546);
            i_536872526 = addInt(i_536872526, 1);
            if (!(((event_3305112545.handlers).length == L_536872527))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function init_3305111694(self_3305111695) {
    
function HEX3Aanonymous_3305111759(text_3305111760) {
      var result_3305111761 = ({x: 0.0, y: 0.0});

        result_3305111761.x = ((text_3305111760).length * self_3305111695.mCharWidth);
        result_3305111761.y = totalLineHeight_2315255975(self_3305111695);

      return result_3305111761;

    }
    
function HEX3Aanonymous_3305111771(e_3305111772) {
        invoke_3305111795(self_3305111695.onResized, true);

      
    }
    
function HEX3Aanonymous_3305111842(e_3305111843) {
        var ke_3305111844 = e_3305111843;
        var modifiers_3305111845 = getModifiers_3305111636(ke_3305111844);
        var input_3305111846 = toInput_3305111630(ke_3305111844.key, ke_3305111844.code, ke_3305111844.keyCode);
        invoke_3305111869(self_3305111695.onKeyPress, {Field0: input_3305111846, Field1: nimCopy(null, modifiers_3305111845, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3305111934(e_3305111935) {
        var we_3305111936 = e_3305111935;
        var modifiers_3305111937 = getModifiers_3305111651(we_3305111936);
        invoke_3305112220(self_3305111695.onScroll, {Field0: vec2_2097152861(we_3305111936.clientX, we_3305111936.clientY), Field1: HEX2A_3305112057(vec2_2097152861(we_3305111936.deltaX, -(we_3305111936.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3305111937, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3305112285(e_3305112286) {
        var me_3305112287 = e_3305112286;
        var modifiers_3305112288 = getModifiers_3305111651(me_3305112287);
        var mouseButton_3305112289 = getMouseButton_3305111682(me_3305112287);
        var currentTargetRect_3305112290 = me_3305112287.currentTarget.getBoundingClientRect();
        var x_3305112291 = (me_3305112287.pageX - currentTargetRect_3305112290.x);
        var y_3305112292 = (me_3305112287.pageY - currentTargetRect_3305112290.y);
        invoke_3305112315(self_3305111695.onMousePress, {Field0: mouseButton_3305112289, Field1: nimCopy(null, modifiers_3305112288, NTI2013265950), Field2: vec2_2097152861(x_3305112291, y_3305112292)});

      
    }
    
function HEX3Aanonymous_3305112362(e_3305112363) {
        var me_3305112364 = e_3305112363;
        var modifiers_3305112365 = getModifiers_3305111651(me_3305112364);
        invoke_3305112388(self_3305111695.onMouseMove, {Field0: vec2_2097152861(me_3305112364.clientX, me_3305112364.clientY), Field1: vec2_2097152861(me_3305112364.movementX, me_3305112364.movementY), Field2: nimCopy(null, modifiers_3305112365, NTI2013265950), Field3: getMouseButtons_3305111666(me_3305112364)});

      
    }
    
function HEX3Aanonymous_3305112447(e_3305112448) {
        var de_3305112449 = e_3305112448;
        de_3305112449.preventDefault();

      
    }
    
function HEX3Aanonymous_3305112459(e_3305112460) {
                
function HEX3Aanonymous_3305112506(f_3305112507) {
                    
function HEX3Aanonymous_3305112519(e_3305112520) {
                        invoke_3305112543(self_3305111695.onDropFile, {Field0: cstrToNimstr(f_3305112507.name), Field1: cstrToNimstr((fileReader_3305112509.result || ''))});

                      
                    }

                    var fileReader_3305112509 = new FileReader();
                    fileReader_3305112509.readAsText(f_3305112507, "UTF-8");
                    fileReader_3305112509.onload = HEX3Aanonymous_3305112519;

                  
                }

        var de_3305112461 = e_3305112460;
        de_3305112461.preventDefault();
        console.log(de_3305112461.dataTransfer);;
        Label1: {
          var f_3305112487 = null;
          var i_536872501 = 0;
          var L_536872502 = (de_3305112461.dataTransfer.files).length;
          Label2: {
              Label3: while (true) {
              if (!(i_536872501 < L_536872502)) break Label3;
                f_3305112487 = de_3305112461.dataTransfer.files[chckIndx(i_536872501, 0, (de_3305112461.dataTransfer.files).length - 1)];
                HEX3Aanonymous_3305112506(f_3305112487);
                i_536872501 = addInt(i_536872501, 1);
                if (!(((de_3305112461.dataTransfer.files).length == L_536872502))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };

      
    }

    self_3305111695.mFontSize = 18.0;
    self_3305111695.mLineHeight = 20.0;
    self_3305111695.mLineDistance = 2.0;
    self_3305111695.mCharWidth = 18.0;
    self_3305111695.escapedText = newLruCache_3305111696(1000, false);
    self_3305111695.layoutOptions.getTextBounds = HEX3Aanonymous_3305111759;
    window.addEventListener("resize", HEX3Aanonymous_3305111771, false);
    self_3305111695.content = document.getElementById("view");
    self_3305111695.content.addEventListener("keydown", HEX3Aanonymous_3305111842, false);
    self_3305111695.content.addEventListener("wheel", HEX3Aanonymous_3305111934, {passive: true, capture: false, once: false});
    self_3305111695.content.addEventListener("mousedown", HEX3Aanonymous_3305112285, false);
    self_3305111695.content.addEventListener("mousemove", HEX3Aanonymous_3305112362, false);
    self_3305111695.content.addEventListener("dragover", HEX3Aanonymous_3305112447, false);
    self_3305111695.content.addEventListener("drop", HEX3Aanonymous_3305112459, false);
    updateFontSettings_3305111634(self_3305111695);
    self_3305111695.content.focus();

  
}

function init_2315255930(self_2315255931) {
  
}

function init_2315255932(self_2315255931) {
    chckNilDisp(self_2315255931);
    if (isObj(self_2315255931.m_type, NTI3305111563)) {
    init_3305111694(self_2315255931);
    }
    else {
    if (isObj(self_2315255931.m_type, NTI2315255812)) {
    init_2315255930(self_2315255931);
    }
    }

  
}

function deinit_3305112700(self_3305112701) {
  
}

function deinit_2315255933(self_2315255934) {
  
}

function deinit_2315255935(self_2315255934) {
    chckNilDisp(self_2315255934);
    if (isObj(self_2315255934.m_type, NTI3305111563)) {
    deinit_3305112700(self_2315255934);
    }
    else {
    if (isObj(self_2315255934.m_type, NTI2315255812)) {
    deinit_2315255933(self_2315255934);
    }
    }

  
}

function processEvents_3305112778(self_3305112779) {
  var result_3305112780 = 0;

    result_3305112780 = 0;

  return result_3305112780;

}

function processEvents_2315255936(self_2315255937) {
  var result_2315255938 = 0;

  return result_2315255938;

}

function processEvents_2315255939(self_2315255937) {
  var result_2315255940 = 0;

  BeforeRet: {
    chckNilDisp(self_2315255937);
    if (isObj(self_2315255937.m_type, NTI3305111563)) {
    result_2315255940 = processEvents_3305112778(self_2315255937);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255937.m_type, NTI2315255812)) {
    result_2315255940 = processEvents_2315255936(self_2315255937);
    break BeforeRet;
    }
    }
  };

  return result_2315255940;

}

function fontSizeHEX3D_2315255941(self_2315255942, fontSize_2315255943) {
  
}

function fontSizeHEX3D_2315255944(self_2315255942, fontSize_2315255943) {
    fontSizeHEX3D_2315255941(self_2315255942, fontSize_2315255943);

  
}

function lineDistanceHEX3D_2315255945(self_2315255946, lineDistance_2315255947) {
  
}

function lineDistanceHEX3D_2315255948(self_2315255946, lineDistance_2315255947) {
    lineDistanceHEX3D_2315255945(self_2315255946, lineDistance_2315255947);

  
}

function fontSize_3305112761(self_3305112762) {
  var result_3305112763 = 0.0;

    updateFontSettings_3305111634(self_3305112762);
    result_3305112763 = self_3305112762.mFontSize;

  return result_3305112763;

}

function fontSize_2315255949(self_2315255950) {
  var result_2315255951 = 0.0;

  return result_2315255951;

}

function fontSize_2315255952(self_2315255950) {
  var result_2315255953 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255950);
    if (isObj(self_2315255950.m_type, NTI3305111563)) {
    result_2315255953 = fontSize_3305112761(self_2315255950);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255950.m_type, NTI2315255812)) {
    result_2315255953 = fontSize_2315255949(self_2315255950);
    break BeforeRet;
    }
    }
  };

  return result_2315255953;

}

function lineDistance_3305112764(self_3305112765) {
  var result_3305112766 = 0.0;

    updateFontSettings_3305111634(self_3305112765);
    result_3305112766 = self_3305112765.mLineDistance;

  return result_3305112766;

}

function lineDistance_2315255954(self_2315255955) {
  var result_2315255956 = 0.0;

  return result_2315255956;

}

function lineDistance_2315255957(self_2315255955) {
  var result_2315255958 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255955);
    if (isObj(self_2315255955.m_type, NTI3305111563)) {
    result_2315255958 = lineDistance_3305112764(self_2315255955);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255955.m_type, NTI2315255812)) {
    result_2315255958 = lineDistance_2315255954(self_2315255955);
    break BeforeRet;
    }
    }
  };

  return result_2315255958;

}

function lineHeight_3305112767(self_3305112768) {
  var result_3305112769 = 0.0;

    updateFontSettings_3305111634(self_3305112768);
    result_3305112769 = self_3305112768.mLineHeight;

  return result_3305112769;

}

function lineHeight_2315255959(self_2315255960) {
  var result_2315255961 = 0.0;

  return result_2315255961;

}

function lineHeight_2315255962(self_2315255960) {
  var result_2315255963 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255960);
    if (isObj(self_2315255960.m_type, NTI3305111563)) {
    result_2315255963 = lineHeight_3305112767(self_2315255960);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255960.m_type, NTI2315255812)) {
    result_2315255963 = lineHeight_2315255959(self_2315255960);
    break BeforeRet;
    }
    }
  };

  return result_2315255963;

}

function measureText_2315255969(self_2315255970, text_2315255971) {
  var result_2315255972 = ({x: 0.0, y: 0.0});

  return result_2315255972;

}

function measureText_2315255973(self_2315255970, text_2315255971) {
  var result_2315255974 = ({x: 0.0, y: 0.0});

  BeforeRet: {
    result_2315255974 = nimCopy(result_2315255974, measureText_2315255969(self_2315255970, text_2315255971), NTI2097152288);
    break BeforeRet;
  };

  return result_2315255974;

}

function init_2801795102(self_2801795103, path_2801795104) {
    var config_2801795106 = loadApplicationFile_2499805202(fs_2499805237, [99,111,110,102,105,103,46,106,115]);
    var contentStrict_2801795113 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(config_2801795106 || []);
    rawEcho(contentStrict_2801795113);
    var allowEval_2801795114 = (!((window.localStorage.getItem("config.js") !== null)) || confirm("You are about to eval() some javascript (config.js). Look in the console to see what's in there."));
    if (allowEval_2801795114) {
    eval(toJSStr(contentStrict_2801795113));
    }
    else {
      var fmtRes_2801795119 = mnewString(0);
      fmtRes_2801795119.push.apply(fmtRes_2801795119, [68,105,100,32,110,111,116,32,108,111,97,100,32,99,111,110,102,105,103,32,102,105,108,101,32,98,101,99,97,117,115,101,32,117,115,101,114,32,100,101,99,108,105,110,101,100,46]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801795119, NTI33554449)]);
    }
    

  
}

function init_2650800137(self_2650800138, path_2650800139) {
  
}

function init_2650800140(self_2650800138, path_2650800139) {
    chckNilDisp(self_2650800138);
    if (isObj(self_2650800138.m_type, NTI2801795076)) {
    init_2801795102(self_2650800138, path_2650800139);
    }
    else {
    if (isObj(self_2650800138.m_type, NTI2650800132)) {
    init_2650800137(self_2650800138, path_2650800139);
    }
    }

  
}

function reload_2801795120(self_2801795121) {
  
}

function reload_2650800141(self_2650800142) {
  
}

function reload_2650800143(self_2650800142) {
    chckNilDisp(self_2650800142);
    if (isObj(self_2650800142.m_type, NTI2801795076)) {
    reload_2801795120(self_2650800142);
    }
    else {
    if (isObj(self_2650800142.m_type, NTI2650800132)) {
    reload_2650800141(self_2650800142);
    }
    }

  
}

function isReadOnly_2785017872(self_2785017873) {
  var result_2785017874 = false;

    result_2785017874 = false;

  return result_2785017874;

}

function isReadOnly_2701131831(self_2701131832) {
  var result_2701131833 = false;

    result_2701131833 = true;

  return result_2701131833;

}

function isReadOnly_2684354572(self_2684354573) {
  var result_2684354574 = false;

    result_2684354574 = false;

  return result_2684354574;

}

function isReadOnly_2667577355(self_2667577356) {
  var result_2667577357 = false;

    result_2667577357 = true;

  return result_2667577357;

}

function isReadOnly_2667577358(self_2667577356) {
  var result_2667577359 = false;

  BeforeRet: {
    chckNilDisp(self_2667577356);
    if (isObj(self_2667577356.m_type, NTI2785017860)) {
    result_2667577359 = isReadOnly_2785017872(self_2667577356);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577356.m_type, NTI2701131780)) {
    result_2667577359 = isReadOnly_2701131831(self_2667577356);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577356.m_type, NTI2684354564)) {
    result_2667577359 = isReadOnly_2684354572(self_2667577356);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577356.m_type, NTI2667577352)) {
    result_2667577359 = isReadOnly_2667577355(self_2667577356);
    break BeforeRet;
    }
    }}}
  };

  return result_2667577359;

}

function get_2768240690(self_2768240692, otherwise_2768240693) {
    var Temporary1;

  var result_2768240694 = [];

    if (isSome_2768240699(self_2768240692)) {
    Temporary1 = self_2768240692.val;
    }
    else {
    Temporary1 = otherwise_2768240693;
    }
    
    result_2768240694 = nimCopy(null, Temporary1, NTI33554449);

  return result_2768240694;

}
async function httpGet_2768240651(url_2768240652, authToken_2768240666) {
  var result_2768240668 = null;

  BeforeRet: {
    var cstr_2768240708 = (await getAsyncJs(toJSStr(url_2768240652), toJSStr(get_2768240690(authToken_2768240666, []))));
    result_2768240668 = cstrToNimstr(cstr_2768240708);
    break BeforeRet;
  };

  return result_2768240668;

}
async function loadFile_2785017878(self_2785017879, relativePath_2785017880) {
    var Temporary1;

  var result_2785017882 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2785017880, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2785017880, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2785017880;
    }
    
    var relativePath_2785017910 = nimCopy(null, Temporary1, NTI33554449);
    var url_2785017911 = (self_2785017879.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2785017910 || []);
    var fmtRes_2785017916 = [mnewString(0)];
    fmtRes_2785017916[0].push.apply(fmtRes_2785017916[0], [91,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2785017916, 0, url_2785017911, []);
    fmtRes_2785017916[0].push.apply(fmtRes_2785017916[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2785017916[0], NTI33554449)]);
    result_2785017882 = (await httpGet_2768240651(url_2785017911, none_2768240658()));
    break BeforeRet;
  };

  return result_2785017882;

}

function getAccessToken_2701131806() {
  var result_2701131808 = ({val: [], has: false});

  BeforeRet: {
    var token_2701131809 = loadApplicationFile_2499805202(fs_2499805237, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2701131809).length)) {
    result_2701131808 = nimCopy(result_2701131808, some_2701131810(token_2701131809), NTI2768240657);
    break BeforeRet;
    }
    
    result_2701131808 = nimCopy(result_2701131808, none_2768240658(), NTI2768240657);
    break BeforeRet;
  };

  return result_2701131808;

}

function decode_2734686703(s_2734686704) {
    
function decodeSize_2734686706(size_2734686707) {
      var result_2734686708 = 0;

      BeforeRet: {
        result_2734686708 = addInt(divInt(mulInt(size_2734686707, 3), 4), 6);
        break BeforeRet;
      };

      return result_2734686708;

    }
    var Temporary1;

  var result_2734686705 = [];

  BeforeRet: {
    if (((s_2734686704).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2734686705.length < (Temporary1 = chckRange(decodeSize_2734686706((s_2734686704).length), 0, 2147483647), Temporary1)) { for (var i = result_2734686705.length; i < Temporary1; ++i) result_2734686705.push(0); }
         else {result_2734686705.length = Temporary1; };
    var inputIndex_2734686713 = 0;
    var outputIndex_2734686714 = 0;
    var inputLen_2734686715 = (s_2734686704).length;
    var inputEnds_2734686716 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet312[s_2734686704[chckIndx(subInt(inputLen_2734686715, 1), 0, (s_2734686704).length - 1)]] != undefined)) break Label3;
          inputLen_2734686715 = subInt(inputLen_2734686715, 1);
        }
    };
    inputEnds_2734686716 = subInt(inputLen_2734686715, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2734686713 <= inputEnds_2734686716)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet313[s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]] != undefined)) break Label7;
                inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
              }
          };
          var a_2734686738 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((a_2734686738 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          var b_2734686751 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((b_2734686751 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          var c_2734686764 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((c_2734686764 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          var d_2734686777 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((d_2734686777 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((a_2734686738 << 2) | (b_2734686751 >> 4)) & 255), 0, 255);
          outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
          result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((b_2734686751 << 4) | (c_2734686764 >> 2)) & 255), 0, 255);
          outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
          result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((c_2734686764 << 6) | (d_2734686777 >> 0)) & 255), 0, 255);
          outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
        }
    };
    var leftLen_2734686826 = absInt(modInt(subInt(inputIndex_2734686713, inputLen_2734686715), 4));
    if ((leftLen_2734686826 == 2)) {
    var a_2734686830 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((a_2734686830 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    var b_2734686843 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((b_2734686843 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((a_2734686830 << 2) | (b_2734686843 >> 4)) & 255), 0, 255);
    outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
    }
    else {
    if ((leftLen_2734686826 == 3)) {
    var a_2734686869 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((a_2734686869 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    var b_2734686882 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((b_2734686882 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    var c_2734686895 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((c_2734686895 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((a_2734686869 << 2) | (b_2734686882 >> 4)) & 255), 0, 255);
    outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
    result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((b_2734686882 << 4) | (c_2734686895 >> 2)) & 255), 0, 255);
    outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
    }
    }
    if (result_2734686705.length < chckRange(outputIndex_2734686714, 0, 2147483647)) { for (var i = result_2734686705.length; i < chckRange(outputIndex_2734686714, 0, 2147483647); ++i) result_2734686705.push(0); }
         else {result_2734686705.length = chckRange(outputIndex_2734686714, 0, 2147483647); };
  };

  return result_2734686705;

}
async function loadFile_2701131837(self_2701131838, relativePath_2701131839) {
    var Temporary1;

  var result_2701131841 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2701131839, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2701131839, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2701131839;
    }
    
    var relativePath_2701131869 = nimCopy(null, Temporary1, NTI33554449);
    var url_2701131870 = (self_2701131838.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2701131869 || [],[63,114,101,102,61] || [],self_2701131838.branchOrHash || []);
    var fmtRes_2701131875 = [mnewString(0)];
    fmtRes_2701131875[0].push.apply(fmtRes_2701131875[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2701131875, 0, url_2701131870, []);
    fmtRes_2701131875[0].push.apply(fmtRes_2701131875[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2701131875[0], NTI33554449)]);
    var token_2701131876 = getAccessToken_2701131806();
    var response_2701131881 = (await httpGet_2768240651(url_2701131870, token_2701131876));
++excHandler;
    try {
    var jsn_2701131882 = parseJson_1627395313(response_2701131881);
    if (hasKey_1627393154(jsn_2701131882, [99,111,110,116,101,110,116])) {
    var contentBase64_2701131883 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2701131882, [99,111,110,116,101,110,116]), []);
    var content_2701131884 = decode_2734686703(contentBase64_2701131883);
    result_2701131841 = content_2701131884;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2701131892 = [mnewString(0)];
    fmtRes_2701131892[0].push.apply(fmtRes_2701131892[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2701131892, 0, response_2701131881, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2701131892[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2701131841 = [];
    break BeforeRet;
  };

  return result_2701131841;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2684354568(self_2684354569, relativePath_2684354570) {
  var result_2684354571 = [];

    result_2684354571 = nimCopy(null, HEX2F_1426063446(self_2684354569.path, relativePath_2684354570), NTI33554449);

  return result_2684354571;

}
async function loadFile_2684354596(self_2684354597, relativePath_2684354598) {
  var result_2684354600 = null;

  BeforeRet: {
    result_2684354600 = readFile_503316918(getAbsolutePath_2684354568(self_2684354597, relativePath_2684354598));
    break BeforeRet;
  };

  return result_2684354600;

}

function loadFile_2667577360(self_2667577361, relativePath_2667577362) {
  var result_2667577365 = null;

  return result_2667577365;

}

function loadFile_2667577366(self_2667577361, relativePath_2667577362) {
  var result_2667577367 = null;

  BeforeRet: {
    chckNilDisp(self_2667577361);
    if (isObj(self_2667577361.m_type, NTI2785017860)) {
    result_2667577367 = loadFile_2785017878(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577361.m_type, NTI2701131780)) {
    result_2667577367 = loadFile_2701131837(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577361.m_type, NTI2684354564)) {
    result_2667577367 = loadFile_2684354596(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577361.m_type, NTI2667577352)) {
    result_2667577367 = loadFile_2667577360(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    }}}
  };

  return result_2667577367;

}
async function saveFile_2785017925(self_2785017926, relativePath_2785017927, content_2785017928) {
  var result_2785017930 = null;

  BeforeRet: {
    result_2785017930 = undefined;
    break BeforeRet;
  };

  return result_2785017930;

}
async function saveFile_2701131897(self_2701131898, relativePath_2701131899, content_2701131900) {
  var result_2701131902 = null;

  BeforeRet: {
    result_2701131902 = undefined;
    break BeforeRet;
  };

  return result_2701131902;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2684354623(self_2684354624, relativePath_2684354625, content_2684354626) {
  var result_2684354628 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2684354568(self_2684354624, relativePath_2684354625), content_2684354626);
    result_2684354628 = undefined;
    break BeforeRet;
  };

  return result_2684354628;

}

function saveFile_2667577368(self_2667577369, relativePath_2667577370, content_2667577371) {
  var result_2667577373 = null;

  return result_2667577373;

}

function saveFile_2667577374(self_2667577369, relativePath_2667577370, content_2667577371) {
  var result_2667577375 = null;

  BeforeRet: {
    chckNilDisp(self_2667577369);
    if (isObj(self_2667577369.m_type, NTI2785017860)) {
    result_2667577375 = saveFile_2785017925(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577369.m_type, NTI2701131780)) {
    result_2667577375 = saveFile_2701131897(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577369.m_type, NTI2684354564)) {
    result_2667577375 = saveFile_2684354623(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577369.m_type, NTI2667577352)) {
    result_2667577375 = saveFile_2667577368(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    }}}
  };

  return result_2667577375;

}

function parseDirectoryListing_2785017936(self_2785017937, basePath_2785017938, jsn_2785017939) {
        var Temporary3;
        var Temporary8;

  var result_2785017940 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2785017939, [102,105,108,101,115]) && (HEX5BHEX5D_1627393037(jsn_2785017939, [102,105,108,101,115]).kind == 6))) {
    var files_2785017945 = HEX5BHEX5D_1627393037(jsn_2785017939, [102,105,108,101,115]);
    Label1: {
      var item_2785017946 = null;
      if (!((files_2785017945.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(files_2785017945.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872535 = null;
        var colontmp__536872536 = [];
        var Temporary3 = files_2785017945;
        if (ConstSet314[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872536 = Temporary3.elems;
        var i_536872537 = 0;
        var L_536872538 = (colontmp__536872536).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872537 < L_536872538)) break Label5;
              i_536872535 = colontmp__536872536[chckIndx(i_536872537, 0, (colontmp__536872536).length - 1)];
              item_2785017946 = i_536872535;
              result_2785017940.files.push(getStr_1627390106(item_2785017946, []));;
              i_536872537 = addInt(i_536872537, 1);
              if (!(((colontmp__536872536).length == L_536872538))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    if ((hasKey_1627393154(jsn_2785017939, [102,111,108,100,101,114,115]) && (HEX5BHEX5D_1627393037(jsn_2785017939, [102,111,108,100,101,114,115]).kind == 6))) {
    var folders_2785017955 = HEX5BHEX5D_1627393037(jsn_2785017939, [102,111,108,100,101,114,115]);
    Label6: {
      var item_2785017956 = null;
      if (!((folders_2785017955.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(folders_2785017955.kind, NTI1627389955) || []));
      }
      
      Label7: {
        var i_536872542 = null;
        var colontmp__536872543 = [];
        var Temporary8 = folders_2785017955;
        if (ConstSet315[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        colontmp__536872543 = Temporary8.elems;
        var i_536872544 = 0;
        var L_536872545 = (colontmp__536872543).length;
        Label9: {
            Label10: while (true) {
            if (!(i_536872544 < L_536872545)) break Label10;
              i_536872542 = colontmp__536872543[chckIndx(i_536872544, 0, (colontmp__536872543).length - 1)];
              item_2785017956 = i_536872542;
              result_2785017940.folders.push(getStr_1627390106(item_2785017956, []));;
              i_536872544 = addInt(i_536872544, 1);
              if (!(((colontmp__536872543).length == L_536872545))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2785017940;

}
async function getDirectoryListing_2785017964(self_2785017965, relativePath_2785017966) {
    var Temporary1;

  var result_2785017968 = null;

  BeforeRet: {
    if ((((relativePath_2785017966).length == 0) || eqStrings(relativePath_2785017966, [46]))) {
    Temporary1 = (self_2785017965.baseUrl || []).concat([47,108,105,115,116] || []);
    }
    else {
    Temporary1 = (self_2785017965.baseUrl || []).concat([47,108,105,115,116,47] || [],relativePath_2785017966 || []);
    }
    
    var url_2785017978 = nimCopy(null, Temporary1, NTI33554449);
    var response_2785017983 = (await httpGet_2768240651(url_2785017978, none_2768240658()));
++excHandler;
    try {
    var jsn_2785017984 = parseJson_1627395313(response_2785017983);
    var listing_2785017985 = parseDirectoryListing_2785017936(self_2785017965, relativePath_2785017966, jsn_2785017984);
    result_2785017968 = listing_2785017985;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2785017993 = [mnewString(0)];
    fmtRes_2785017993[0].push.apply(fmtRes_2785017993[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,98,115,121,116,114,101,101,45,115,101,114,118,101,114,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2785017993, 0, response_2785017983, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2785017993[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2785017968 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2785017968;

}

function rawGet_2701132053(t_2701132056, key_2701132057, hc_2701132058, hc_2701132058_Idx) {
  var result_2701132059 = 0;

  BeforeRet: {
    hc_2701132058[hc_2701132058_Idx] = hash_1325400491(key_2701132057);
    if ((hc_2701132058[hc_2701132058_Idx] == 0)) {
    hc_2701132058[hc_2701132058_Idx] = 314159265;
    }
    
    if (((t_2701132056.data).length == 0)) {
    result_2701132059 = -1;
    break BeforeRet;
    }
    
    var h_2701132111 = (hc_2701132058[hc_2701132058_Idx] & (t_2701132056.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2701132056.data[chckIndx(h_2701132111, 0, (t_2701132056.data).length - 1)].Field0)) break Label2;
          if (((t_2701132056.data[chckIndx(h_2701132111, 0, (t_2701132056.data).length - 1)].Field0 == hc_2701132058[hc_2701132058_Idx]) && eqStrings(t_2701132056.data[chckIndx(h_2701132111, 0, (t_2701132056.data).length - 1)].Field1, key_2701132057))) {
          result_2701132059 = h_2701132111;
          break BeforeRet;
          }
          
          h_2701132111 = nextTry_1308622883(h_2701132111, (t_2701132056.data).length - 1);
        }
    };
    result_2701132059 = subInt(-1, h_2701132111);
  };

  return result_2701132059;

}

function hasKey_2701132046(t_2701132049, key_2701132050) {
  var result_2701132051 = false;

    var hc_2701132052 = [0];
    result_2701132051 = (0 <= rawGet_2701132053(t_2701132049, key_2701132050, hc_2701132052, 0));

  return result_2701132051;

}

function contains_2701132040(t_2701132043, key_2701132044) {
  var result_2701132045 = false;

  BeforeRet: {
    result_2701132045 = hasKey_2701132046(t_2701132043, key_2701132044);
    break BeforeRet;
  };

  return result_2701132045;

}

function HEX5BHEX5D_2701132345(t_2701132348, key_2701132349) {
  var result_2701132350 = null;

    var hcHEX60gensym22_2701132351 = [0];
    var indexHEX60gensym22_2701132358 = rawGet_2701132053(t_2701132348, key_2701132349, hcHEX60gensym22_2701132351, 0);
    if ((0 <= indexHEX60gensym22_2701132358)) {
    result_2701132350 = t_2701132348.data[chckIndx(indexHEX60gensym22_2701132358, 0, (t_2701132348.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2701132349);
    }
    

  return result_2701132350;

}

function parseDirectoryListing_2701131908(self_2701131909, basePath_2701131910, jsn_2701131911) {
        var Temporary3;

  var result_2701131912 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2701131911, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2701131911, [116,114,101,101]).kind == 6))) {
    var tree_2701131917 = HEX5BHEX5D_1627393037(jsn_2701131911, [116,114,101,101]);
    Label1: {
      var item_2701131918 = null;
      if (!((tree_2701131917.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2701131917.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872551 = null;
        var colontmp__536872552 = [];
        var Temporary3 = tree_2701131917;
        if (ConstSet316[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872552 = Temporary3.elems;
        var i_536872553 = 0;
        var L_536872554 = (colontmp__536872552).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872553 < L_536872554)) break Label5;
              i_536872551 = colontmp__536872552[chckIndx(i_536872553, 0, (colontmp__536872552).length - 1)];
              item_2701131918 = i_536872551;
              Label6: {
                if (!((item_2701131918.kind == 5))) {
                break Label6;
                }
                
                var path_2701131923 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [112,97,116,104]), []);
                var typ_2701131924 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [116,121,112,101]), []);
                var url_2701131925 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [117,114,108]), []);
                var sha_2701131926 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2701131909.pathToSha, HEX2F_1426063446(basePath_2701131910, path_2701131923), sha_2701131926);
                switch (toJSStr(typ_2701131924)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2701131923, NTI33554449);
                  result_2701131912.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2701131923, NTI33554449);
                  result_2701131912.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872553 = addInt(i_536872553, 1);
              if (!(((colontmp__536872552).length == L_536872554))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2701131912;

}

function mustRehash_2701132767(t_2701132769) {
  var result_2701132770 = false;

    if (!((t_2701132769.counter < (t_2701132769.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2701132770 = ((mulInt((t_2701132769.data).length, 2) < mulInt(t_2701132769.counter, 3)) || (subInt((t_2701132769.data).length, t_2701132769.counter) < 4));

  return result_2701132770;

}

function rawInsert_2701133216(t_2701133220, data_2701133221, data_2701133221_Idx, key_2701133222, val_2701133223, hc_2701133224, h_2701133225) {
    data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field1 = nimCopy(null, key_2701133222, NTI33554449);
    data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field2 = nimCopy(data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field2, val_2701133223, NTI2667577349);
    data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field0 = hc_2701133224;

  
}

function enlarge_2701132922(t_2701132925) {
    var n_2701132928 = [];
    n_2701132928 = new Array(chckRange(mulInt((t_2701132925.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2701132925.data).length, 2), 0, 2147483647) ; ++i) { n_2701132928[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2701132925.data; t_2701132925.data = n_2701132928; n_2701132928 = Temporary1;    Label2: {
      var i_2701132992 = 0;
      var colontmp__536872558 = 0;
      colontmp__536872558 = (n_2701132928).length - 1;
      var res_536872559 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872559 <= colontmp__536872558)) break Label4;
            i_2701132992 = res_536872559;
            var eh_2701133046 = n_2701132928[chckIndx(i_2701132992, 0, (n_2701132928).length - 1)].Field0;
            if (isFilled_1308622880(eh_2701133046)) {
            var j_2701133050 = (eh_2701133046 & (t_2701132925.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2701132925.data[chckIndx(j_2701133050, 0, (t_2701132925.data).length - 1)].Field0)) break Label6;
                  j_2701133050 = nextTry_1308622883(j_2701133050, (t_2701132925.data).length - 1);
                }
            };
            rawInsert_2701133216(t_2701132925, t_2701132925, "data", n_2701132928[chckIndx(i_2701132992, 0, (n_2701132928).length - 1)].Field1, n_2701132928[chckIndx(i_2701132992, 0, (n_2701132928).length - 1)].Field2, eh_2701133046, j_2701133050);
            }
            
            res_536872559 = addInt(res_536872559, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2701133394(t_2701133397, key_2701133398, hc_2701133399) {
  var result_2701133400 = 0;

  BeforeRet: {
    if (((t_2701133397.data).length == 0)) {
    result_2701133400 = -1;
    break BeforeRet;
    }
    
    var h_2701133451 = (hc_2701133399 & (t_2701133397.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2701133397.data[chckIndx(h_2701133451, 0, (t_2701133397.data).length - 1)].Field0)) break Label2;
          if (((t_2701133397.data[chckIndx(h_2701133451, 0, (t_2701133397.data).length - 1)].Field0 == hc_2701133399) && eqStrings(t_2701133397.data[chckIndx(h_2701133451, 0, (t_2701133397.data).length - 1)].Field1, key_2701133398))) {
          result_2701133400 = h_2701133451;
          break BeforeRet;
          }
          
          h_2701133451 = nextTry_1308622883(h_2701133451, (t_2701133397.data).length - 1);
        }
    };
    result_2701133400 = subInt(-1, h_2701133451);
  };

  return result_2701133400;

}

function HEX5BHEX5DHEX3D_2701132594(t_2701132597, key_2701132598, val_2701132599) {
    if (((t_2701132597.data).length == 0)) {
    var correctSizeHEX60gensym21_2701132648 = slotsNeeded_1308622891(32);
    t_2701132597.counter = 0;
    t_2701132597.data = new Array(chckRange(correctSizeHEX60gensym21_2701132648, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_2701132648, 0, 2147483647) ; ++i) { t_2701132597.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2701132653 = [0];
    var index_2701132660 = rawGet_2701132053(t_2701132597, key_2701132598, hc_2701132653, 0);
    if ((0 <= index_2701132660)) {
    t_2701132597.data[chckIndx(index_2701132660, 0, (t_2701132597.data).length - 1)].Field2 = nimCopy(t_2701132597.data[chckIndx(index_2701132660, 0, (t_2701132597.data).length - 1)].Field2, val_2701132599, NTI2667577349);
    }
    else {
      if (((t_2701132597.data).length == 0)) {
      var correctSizeHEX60gensym24_2701132762 = slotsNeeded_1308622891(32);
      t_2701132597.counter = 0;
      t_2701132597.data = new Array(chckRange(correctSizeHEX60gensym24_2701132762, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2701132762, 0, 2147483647) ; ++i) { t_2701132597.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2701132767(t_2701132597)) {
      enlarge_2701132922(t_2701132597);
      index_2701132660 = rawGetKnownHC_2701133394(t_2701132597, key_2701132598, hc_2701132653[0]);
      }
      
      index_2701132660 = subInt(-1, index_2701132660);
      rawInsert_2701133216(t_2701132597, t_2701132597, "data", key_2701132598, val_2701132599, hc_2701132653[0], index_2701132660);
      t_2701132597.counter = addInt(t_2701132597.counter, 1);
    }
    

  
}
async function getDirectoryListing_2701131984(self_2701131985, relativePath_2701131986) {
    var Temporary1;
    var Temporary2;

  var result_2701131988 = null;

  BeforeRet: {
    if (contains_2701132040(self_2701131985.cachedDirectoryListings, relativePath_2701131986)) {
    result_2701131988 = HEX5BHEX5D_2701132345(self_2701131985.cachedDirectoryListings, relativePath_2701131986);
    break BeforeRet;
    }
    
    var fmtRes_2701132431 = [mnewString(0)];
    fmtRes_2701132431[0].push.apply(fmtRes_2701132431[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2701132431, 0, self_2701131985.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2701132431[0], NTI33554449)]);
    var token_2701132432 = getAccessToken_2701131806();
    if ((((relativePath_2701131986).length == 0) || eqStrings(relativePath_2701131986, [46]))) {
    Temporary1 = (self_2701131985.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2701131985.branchOrHash || []);
    }
    else {
    if (contains_2348810883(self_2701131985.pathToSha, relativePath_2701131986)) {
    Temporary1 = (self_2701131985.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2701131985.pathToSha, relativePath_2701131986), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2701132542 = [mnewString(0)];
      fmtRes_2701132542[0].push.apply(fmtRes_2701132542[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2701132542, 0, relativePath_2701131986, []);
      fmtRes_2701132542[0].push.apply(fmtRes_2701132542[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2701132542[0], NTI33554449)]);
      result_2701131988 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2701132546 = nimCopy(null, Temporary1, NTI33554449);
    var response_2701132551 = (await httpGet_2768240651(url_2701132546, token_2701132432));
++excHandler;
    try {
    var jsn_2701132552 = parseJson_1627395313(response_2701132551);
    var listing_2701132553 = parseDirectoryListing_2701131908(self_2701131985, relativePath_2701131986, jsn_2701132552);
    HEX5BHEX5DHEX3D_2701132594(self_2701131985.cachedDirectoryListings, relativePath_2701131986, listing_2701132553);
    result_2701131988 = listing_2701132553;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2701133639 = [mnewString(0)];
    fmtRes_2701133639[0].push.apply(fmtRes_2701133639[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2701133639, 0, response_2701132551, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2701133639[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2701131988 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2701131988;

}
async function getDirectoryListing_2684354646(self_2684354647, relativePath_2684354648) {
  var result_2684354650 = null;

  return result_2684354650;

}

function getDirectoryListing_2667577376(self_2667577377, relativePath_2667577378) {
  var result_2667577381 = null;

  return result_2667577381;

}

function getDirectoryListing_2667577382(self_2667577377, relativePath_2667577378) {
  var result_2667577383 = null;

  BeforeRet: {
    chckNilDisp(self_2667577377);
    if (isObj(self_2667577377.m_type, NTI2785017860)) {
    result_2667577383 = getDirectoryListing_2785017964(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577377.m_type, NTI2701131780)) {
    result_2667577383 = getDirectoryListing_2701131984(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577377.m_type, NTI2684354564)) {
    result_2667577383 = getDirectoryListing_2684354646(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577377.m_type, NTI2667577352)) {
    result_2667577383 = getDirectoryListing_2667577376(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    }}}
  };

  return result_2667577383;

}

function mustRehash_1291846240(t_1291846242) {
  var result_1291846243 = false;

    if (!((t_1291846242.counter < (t_1291846242.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846243 = ((mulInt((t_1291846242.data).length, 2) < mulInt(t_1291846242.counter, 3)) || (subInt((t_1291846242.data).length, t_1291846242.counter) < 4));

  return result_1291846243;

}

function rawInsert_1291846689(t_1291846693, data_1291846694, data_1291846694_Idx, key_1291846695, val_1291846696, hc_1291846697, h_1291846698) {
    data_1291846694[data_1291846694_Idx][chckIndx(h_1291846698, 0, (data_1291846694[data_1291846694_Idx]).length - 1)].Field1 = key_1291846695;
    data_1291846694[data_1291846694_Idx][chckIndx(h_1291846698, 0, (data_1291846694[data_1291846694_Idx]).length - 1)].Field2 = val_1291846696;
    data_1291846694[data_1291846694_Idx][chckIndx(h_1291846698, 0, (data_1291846694[data_1291846694_Idx]).length - 1)].Field0 = hc_1291846697;

  
}

function enlarge_1291846395(t_1291846398) {
    var n_1291846401 = [];
    n_1291846401 = new Array(chckRange(mulInt((t_1291846398.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846398.data).length, 2), 0, 2147483647) ; ++i) { n_1291846401[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846398.data; t_1291846398.data = n_1291846401; n_1291846401 = Temporary1;    Label2: {
      var i_1291846465 = 0;
      var colontmp__536872566 = 0;
      colontmp__536872566 = (n_1291846401).length - 1;
      var res_536872567 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872567 <= colontmp__536872566)) break Label4;
            i_1291846465 = res_536872567;
            var eh_1291846519 = n_1291846401[chckIndx(i_1291846465, 0, (n_1291846401).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846519)) {
            var j_1291846523 = (eh_1291846519 & (t_1291846398.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846398.data[chckIndx(j_1291846523, 0, (t_1291846398.data).length - 1)].Field0)) break Label6;
                  j_1291846523 = nextTry_1308622883(j_1291846523, (t_1291846398.data).length - 1);
                }
            };
            rawInsert_1291846689(t_1291846398, t_1291846398, "data", n_1291846401[chckIndx(i_1291846465, 0, (n_1291846401).length - 1)].Field1, n_1291846401[chckIndx(i_1291846465, 0, (n_1291846401).length - 1)].Field2, eh_1291846519, j_1291846523);
            }
            
            res_536872567 = addInt(res_536872567, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846858(t_1291846861, key_1291846862, hc_1291846863) {
  var result_1291846864 = 0;

  BeforeRet: {
    if (((t_1291846861.data).length == 0)) {
    result_1291846864 = -1;
    break BeforeRet;
    }
    
    var h_1291846915 = (hc_1291846863 & (t_1291846861.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846861.data[chckIndx(h_1291846915, 0, (t_1291846861.data).length - 1)].Field0)) break Label2;
          if (((t_1291846861.data[chckIndx(h_1291846915, 0, (t_1291846861.data).length - 1)].Field0 == hc_1291846863) && (t_1291846861.data[chckIndx(h_1291846915, 0, (t_1291846861.data).length - 1)].Field1 == key_1291846862))) {
          result_1291846864 = h_1291846915;
          break BeforeRet;
          }
          
          h_1291846915 = nextTry_1308622883(h_1291846915, (t_1291846861.data).length - 1);
        }
    };
    result_1291846864 = subInt(-1, h_1291846915);
  };

  return result_1291846864;

}

function HEX5BHEX5DHEX3D_1291845831(t_1291845834, key_1291845835, val_1291845836) {
    if (((t_1291845834.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845886 = slotsNeeded_1308622891(32);
    t_1291845834.counter = 0;
    t_1291845834.data = new Array(chckRange(correctSizeHEX60gensym1_1291845886, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845886, 0, 2147483647) ; ++i) { t_1291845834.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845891 = [0];
    var index_1291846133 = rawGet_1291845892(t_1291845834, key_1291845835, hc_1291845891, 0);
    if ((0 <= index_1291846133)) {
    t_1291845834.data[chckIndx(index_1291846133, 0, (t_1291845834.data).length - 1)].Field2 = val_1291845836;
    }
    else {
      if (((t_1291845834.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846235 = slotsNeeded_1308622891(32);
      t_1291845834.counter = 0;
      t_1291845834.data = new Array(chckRange(correctSizeHEX60gensym6_1291846235, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846235, 0, 2147483647) ; ++i) { t_1291845834.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846240(t_1291845834)) {
      enlarge_1291846395(t_1291845834);
      index_1291846133 = rawGetKnownHC_1291846858(t_1291845834, key_1291845835, hc_1291845891[0]);
      }
      
      index_1291846133 = subInt(-1, index_1291846133);
      rawInsert_1291846689(t_1291845834, t_1291845834, "data", key_1291845835, val_1291845836, hc_1291845891[0], index_1291846133);
      t_1291845834.counter = addInt(t_1291845834.counter, 1);
    }
    

  
}

function registerEditor_1291845788(self_1291845789, editor_1291845790) {
    HEX5BHEX5DHEX3D_1291845831(self_1291845789.editors, editor_1291845790.id, editor_1291845790);
    invoke_1291847118(self_1291845789.onEditorRegistered, editor_1291845790);

  
}

function handleInput_2952807139(self_2952807140, input_2952807141) {
  var result_2952807142 = 0;

  BeforeRet: {
    result_2952807142 = 1;
    break BeforeRet;
  };

  return result_2952807142;

}

function injectDependencies_2952807765(self_2952807766, ed_2952807767) {
      
function HEX3Aanonymous_2952807787(actionHEX60gensym1140HEX60gensym1141_2952807788, argHEX60gensym1140HEX60gensym1141_2952807789) {
        var result_2952807790 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1140_2952807775.config.handleActions) {
          var action_2952807791 = nimCopy(null, actionHEX60gensym1140HEX60gensym1141_2952807788, NTI33554449);
          var arg_2952807792 = nimCopy(null, argHEX60gensym1140HEX60gensym1141_2952807789, NTI33554449);
          var responseHEX60gensym1140HEX60gensym1141_2952807793 = handleAction_2952806037(self_2952807766, action_2952807791, arg_2952807792);
          if (handlerHEX60gensym1140_2952807775.config.consumeAllActions) {
          result_2952807790 = 3;
          break BeforeRet;
          }
          
          result_2952807790 = responseHEX60gensym1140HEX60gensym1141_2952807793;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1140_2952807775.config.consumeAllActions) {
          result_2952807790 = 3;
          break BeforeRet;
          }
          else {
            result_2952807790 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2952807790;

      }
      
function HEX3Aanonymous_2952807795(inputHEX60gensym1140HEX60gensym1142_2952807796) {
        var result_2952807797 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1140_2952807775.config.handleInputs) {
          var input_2952807798 = nimCopy(null, inputHEX60gensym1140HEX60gensym1142_2952807796, NTI33554449);
          result_2952807797 = handleInput_2952807139(self_2952807766, input_2952807798);
          break BeforeRet;
          }
          else {
            result_2952807797 = 1;
            break BeforeRet;
          }
          
        };

        return result_2952807797;

      }
      
function HEX3Aanonymous_2952807818(actionHEX60gensym1143HEX60gensym1144_2952807819, argHEX60gensym1143HEX60gensym1144_2952807820) {
        var result_2952807821 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1143_2952807806.config.handleActions) {
          var action_2952807822 = nimCopy(null, actionHEX60gensym1143HEX60gensym1144_2952807819, NTI33554449);
          var arg_2952807823 = nimCopy(null, argHEX60gensym1143HEX60gensym1144_2952807820, NTI33554449);
          var responseHEX60gensym1143HEX60gensym1144_2952807824 = handleAction_2952806037(self_2952807766, action_2952807822, arg_2952807823);
          if (handlerHEX60gensym1143_2952807806.config.consumeAllActions) {
          result_2952807821 = 3;
          break BeforeRet;
          }
          
          result_2952807821 = responseHEX60gensym1143HEX60gensym1144_2952807824;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1143_2952807806.config.consumeAllActions) {
          result_2952807821 = 3;
          break BeforeRet;
          }
          else {
            result_2952807821 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2952807821;

      }
      
function HEX3Aanonymous_2952807826(inputHEX60gensym1143HEX60gensym1145_2952807827) {
        var result_2952807828 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1143_2952807806.config.handleInputs) {
          var input_2952807829 = nimCopy(null, inputHEX60gensym1143HEX60gensym1145_2952807827, NTI33554449);
          result_2952807828 = 1;
          break BeforeRet;
          }
          else {
            result_2952807828 = 1;
            break BeforeRet;
          }
          
        };

        return result_2952807828;

      }

    self_2952807766.editor = ed_2952807767;
    registerEditor_1291845788(self_2952807766.editor, self_2952807766);
    Label1: {
      var handlerHEX60gensym1140_2952807775 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1140_2952807775.config = getEventHandlerConfig_1291849154(ed_2952807767, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1140_2952807775.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(ed_2952807767, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1140_2952807775.handleAction = HEX3Aanonymous_2952807787;
      handlerHEX60gensym1140_2952807775.handleInput = HEX3Aanonymous_2952807795;
    };
    self_2952807766.eventHandler = handlerHEX60gensym1140_2952807775;
    Label2: {
      var handlerHEX60gensym1143_2952807806 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1143_2952807806.config = getEventHandlerConfig_1291849154(ed_2952807767, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1143_2952807806.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(ed_2952807767, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1143_2952807806.handleAction = HEX3Aanonymous_2952807818;
      handlerHEX60gensym1143_2952807806.handleInput = HEX3Aanonymous_2952807826;
    };
    self_2952807766.textEditEventHandler = handlerHEX60gensym1143_2952807806;

  
}

function injectDependencies_2818590731(self_2818590732, ed_2818590733) {
      
function HEX3Aanonymous_2818590754(actionHEX60gensym992HEX60gensym993_2818590755, argHEX60gensym992HEX60gensym993_2818590756) {
        var result_2818590757 = 0;

        BeforeRet: {
          if (handlerHEX60gensym992_2818590742.config.handleActions) {
          var action_2818590758 = nimCopy(null, actionHEX60gensym992HEX60gensym993_2818590755, NTI33554449);
          var arg_2818590759 = nimCopy(null, argHEX60gensym992HEX60gensym993_2818590756, NTI33554449);
          var responseHEX60gensym992HEX60gensym993_2818590760 = handleAction_2818572642(self_2818590732, action_2818590758, arg_2818590759);
          if (handlerHEX60gensym992_2818590742.config.consumeAllActions) {
          result_2818590757 = 3;
          break BeforeRet;
          }
          
          result_2818590757 = responseHEX60gensym992HEX60gensym993_2818590760;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym992_2818590742.config.consumeAllActions) {
          result_2818590757 = 3;
          break BeforeRet;
          }
          else {
            result_2818590757 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818590757;

      }
      
function HEX3Aanonymous_2818590762(inputHEX60gensym992HEX60gensym994_2818590763) {
        var result_2818590764 = 0;

        BeforeRet: {
          if (handlerHEX60gensym992_2818590742.config.handleInputs) {
          var input_2818590765 = nimCopy(null, inputHEX60gensym992HEX60gensym994_2818590763, NTI33554449);
          result_2818590764 = handleInput_2818572650(self_2818590732, input_2818590765);
          break BeforeRet;
          }
          else {
            result_2818590764 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818590764;

      }
      
function HEX3Aanonymous_2818590785(actionHEX60gensym995HEX60gensym996_2818590786, argHEX60gensym995HEX60gensym996_2818590787) {
        var result_2818590788 = 0;

        BeforeRet: {
          if (handlerHEX60gensym995_2818590773.config.handleActions) {
          var action_2818590789 = nimCopy(null, actionHEX60gensym995HEX60gensym996_2818590786, NTI33554449);
          var arg_2818590790 = nimCopy(null, argHEX60gensym995HEX60gensym996_2818590787, NTI33554449);
          var responseHEX60gensym995HEX60gensym996_2818590791 = handleAction_2818572642(self_2818590732, action_2818590789, arg_2818590790);
          if (handlerHEX60gensym995_2818590773.config.consumeAllActions) {
          result_2818590788 = 3;
          break BeforeRet;
          }
          
          result_2818590788 = responseHEX60gensym995HEX60gensym996_2818590791;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym995_2818590773.config.consumeAllActions) {
          result_2818590788 = 3;
          break BeforeRet;
          }
          else {
            result_2818590788 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2818590788;

      }
      
function HEX3Aanonymous_2818590793(inputHEX60gensym995HEX60gensym997_2818590794) {
        var result_2818590795 = 0;

        BeforeRet: {
          if (handlerHEX60gensym995_2818590773.config.handleInputs) {
          var input_2818590796 = nimCopy(null, inputHEX60gensym995HEX60gensym997_2818590794, NTI33554449);
          result_2818590795 = handleInput_2818572650(self_2818590732, input_2818590796);
          break BeforeRet;
          }
          else {
            result_2818590795 = 1;
            break BeforeRet;
          }
          
        };

        return result_2818590795;

      }

    self_2818590732.editor = ed_2818590733;
    registerEditor_1291845788(self_2818590732.editor, self_2818590732);
    var config_2818590734 = getEventHandlerConfig_1291849154(ed_2818590733, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym992_2818590742 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym992_2818590742.config = config_2818590734;
      handlerHEX60gensym992_2818590742.dfaInternal = buildDFA_2046820415(config_2818590734);
      handlerHEX60gensym992_2818590742.handleAction = HEX3Aanonymous_2818590754;
      handlerHEX60gensym992_2818590742.handleInput = HEX3Aanonymous_2818590762;
    };
    self_2818590732.eventHandler = handlerHEX60gensym992_2818590742;
    Label2: {
      var handlerHEX60gensym995_2818590773 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym995_2818590773.config = getEventHandlerConfig_1291849154(ed_2818590733, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym995_2818590773.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849154(ed_2818590733, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym995_2818590773.handleAction = HEX3Aanonymous_2818590785;
      handlerHEX60gensym995_2818590773.handleInput = HEX3Aanonymous_2818590793;
    };
    self_2818590732.completionEventHandler = handlerHEX60gensym995_2818590773;

  
}

function injectDependencies_1291847742(self_1291847743, ed_1291847744) {
  
}

function injectDependencies_1291847745(self_1291847743, ed_1291847744) {
    chckNilDisp(self_1291847743);
    if (isObj(self_1291847743.m_type, NTI2952791527)) {
    injectDependencies_2952807765(self_1291847743, ed_1291847744);
    }
    else {
    if (isObj(self_1291847743.m_type, NTI2818572510)) {
    injectDependencies_2818590731(self_1291847743, ed_1291847744);
    }
    else {
    if (isObj(self_1291847743.m_type, NTI2147483652)) {
    injectDependencies_1291847742(self_1291847743, ed_1291847744);
    }
    }}

  
}

function getOrDefault_1291848294(t_1291848297, key_1291848298, default_1291848299) {
    var Temporary1;

  var result_1291848300 = 0.0;

    var hcHEX60gensym20_1291848303 = [0];
    var indexHEX60gensym20_1291848543 = rawGet_1291848304(t_1291848297, key_1291848298, hcHEX60gensym20_1291848303, 0);
    if ((0 <= indexHEX60gensym20_1291848543)) {
    Temporary1 = t_1291848297.data[chckIndx(indexHEX60gensym20_1291848543, 0, (t_1291848297.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848299;
    }
    
    result_1291848300 = Temporary1;

  return result_1291848300;

}

function value_2063597618(m_2063597619) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2063597620 = 0.0;

  BeforeRet: {
    switch (m_2063597619.kind) {
    case 0:
      var Temporary1 = m_2063597619;
      if (ConstSet317[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2063597571)); }
      result_2063597620 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2063597619;
      if (ConstSet318[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2063597571)); }
      result_2063597620 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2063597619;
      if (ConstSet319[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2063597571)); }
      result_2063597620 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2063597620;

}

function apply_2063597643(m_2063597644, a_2063597645, b_2063597646) {
  var result_2063597647 = 0.0;

  BeforeRet: {
    switch (m_2063597644.kind) {
    case 0:
      var v_2063597658 = value_2063597618(m_2063597644);
      result_2063597647 = (a_2063597645 + v_2063597658);
      break BeforeRet;
      break;
    case 1:
      var v_2063597659 = value_2063597618(m_2063597644);
      result_2063597647 = v_2063597659;
      break BeforeRet;
      break;
    case 2:
      var v_2063597660 = value_2063597618(m_2063597644);
      result_2063597647 = (a_2063597645 + (v_2063597660 * (b_2063597646 - a_2063597645)));
      break BeforeRet;
      break;
    }
  };

  return result_2063597647;

}

function splitV_2063597673(r_2063597674, x_2063597675) {
  var result_2063597678 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2063597678.Field0 = nimCopy(result_2063597678.Field0, r_2063597674, NTI2080374789);
    result_2063597678.Field1 = nimCopy(result_2063597678.Field1, r_2063597674, NTI2080374789);
    result_2063597678.Field0.w = (apply_2063597643(x_2063597675, r_2063597674.x, (r_2063597674.x + r_2063597674.w)) - r_2063597674.x);
    result_2063597678.Field1.x = (result_2063597678.Field0.x + result_2063597678.Field0.w);
    result_2063597678.Field1.w = (result_2063597678.Field1.w - result_2063597678.Field0.w);

  return result_2063597678;

}

function percent_2063597615(value_2063597616) {
  var result_2063597617 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2063597617 = nimCopy(result_2063597617, {kind: 2, per: value_2063597616, rel: 0.0, abs: 0.0}, NTI2063597572);
    break BeforeRet;
  };

  return result_2063597617;

}

function splitH_2063597661(r_2063597662, y_2063597663) {
  var result_2063597666 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2063597666.Field0 = nimCopy(result_2063597666.Field0, r_2063597662, NTI2080374789);
    result_2063597666.Field1 = nimCopy(result_2063597666.Field1, r_2063597662, NTI2080374789);
    result_2063597666.Field0.h = (apply_2063597643(y_2063597663, r_2063597662.y, (r_2063597662.y + r_2063597662.h)) - r_2063597662.y);
    result_2063597666.Field1.y = (result_2063597666.Field0.y + result_2063597666.Field0.h);
    result_2063597666.Field1.h = (result_2063597666.Field1.h - result_2063597666.Field0.h);

  return result_2063597666;

}

function layoutViews_1291848729(layout_1291848730, props_1291848731, bounds_1291848732, views_1291848733) {
            var Temporary4;
            var Temporary5;

  var result_1291848734 = [];

    var mainSplit_1291848807 = getOrDefault_1291848294(props_1291848731.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848734 = nimCopy(null, [], NTI1291847196);
    var rect_1291848812 = nimCopy(null, bounds_1291848732, NTI2080374789);
    Label1: {
      var i_1291848817 = 0;
      var i_536872573 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872573 < views_1291848733)) break Label3;
            i_1291848817 = i_536872573;
            if (((i_1291848817 == 0) && (1 < views_1291848733))) {
            Temporary4 = mainSplit_1291848807;
            }
            else {
            if ((i_1291848817 == subInt(views_1291848733, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848818 = Temporary4;
            if ((modInt(i_1291848817, 2) == 0)) {
            Temporary5 = splitV_2063597673(rect_1291848812, percent_2063597615(ratio_1291848818));
            }
            else {
            Temporary5 = splitH_2063597661(rect_1291848812, percent_2063597615(ratio_1291848818));
            }
            
            var colontmp__536872575 = nimCopy(null, Temporary5, NTI2063597631);
            var view_rect_1291848819 = nimCopy(null, colontmp__536872575["Field0"], NTI2080374789);
            var remaining_1291848820 = nimCopy(null, colontmp__536872575["Field1"], NTI2080374789);
            rect_1291848812 = nimCopy(rect_1291848812, remaining_1291848820, NTI2080374789);
            var Temporary6 = nimCopy(null, view_rect_1291848819, NTI2080374789);
            result_1291848734.push(Temporary6);;
            i_536872573 = addInt(i_536872573, 1);
          }
      };
    };

  return result_1291848734;

}

function layoutViews_1291848633(layout_1291848634, props_1291848635, bounds_1291848636, views_1291848637) {
            var Temporary4;

  var result_1291848638 = [];

    var mainSplit_1291848711 = getOrDefault_1291848294(props_1291848635.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848638 = nimCopy(null, [], NTI1291847196);
    var rect_1291848716 = nimCopy(null, bounds_1291848636, NTI2080374789);
    Label1: {
      var i_1291848721 = 0;
      var i_536872577 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872577 < views_1291848637)) break Label3;
            i_1291848721 = i_536872577;
            if (((i_1291848721 == 0) && (1 < views_1291848637))) {
            Temporary4 = mainSplit_1291848711;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848637, i_1291848721));
            }
            
            var ratio_1291848722 = Temporary4;
            var colontmp__536872579 = splitH_2063597661(rect_1291848716, percent_2063597615(ratio_1291848722));
            var view_rect_1291848723 = nimCopy(null, colontmp__536872579["Field0"], NTI2080374789);
            var remaining_1291848724 = nimCopy(null, colontmp__536872579["Field1"], NTI2080374789);
            rect_1291848716 = nimCopy(rect_1291848716, remaining_1291848724, NTI2080374789);
            var Temporary5 = nimCopy(null, view_rect_1291848723, NTI2080374789);
            result_1291848638.push(Temporary5);;
            i_536872577 = addInt(i_536872577, 1);
          }
      };
    };

  return result_1291848638;

}

function layoutViews_1291848222(layout_1291848223, props_1291848224, bounds_1291848225, views_1291848226) {
            var Temporary4;

  var result_1291848227 = [];

    var mainSplit_1291848597 = getOrDefault_1291848294(props_1291848224.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848227 = nimCopy(null, [], NTI1291847196);
    var rect_1291848602 = nimCopy(null, bounds_1291848225, NTI2080374789);
    Label1: {
      var i_1291848607 = 0;
      var i_536872581 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872581 < views_1291848226)) break Label3;
            i_1291848607 = i_536872581;
            if (((i_1291848607 == 0) && (1 < views_1291848226))) {
            Temporary4 = mainSplit_1291848597;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848226, i_1291848607));
            }
            
            var ratio_1291848608 = Temporary4;
            var colontmp__536872583 = splitV_2063597673(rect_1291848602, percent_2063597615(ratio_1291848608));
            var view_rect_1291848609 = nimCopy(null, colontmp__536872583["Field0"], NTI2080374789);
            var remaining_1291848610 = nimCopy(null, colontmp__536872583["Field1"], NTI2080374789);
            rect_1291848602 = nimCopy(rect_1291848602, remaining_1291848610, NTI2080374789);
            var Temporary5 = nimCopy(null, view_rect_1291848609, NTI2080374789);
            result_1291848227.push(Temporary5);;
            i_536872581 = addInt(i_536872581, 1);
          }
      };
    };

  return result_1291848227;

}

function layoutViews_1291848192(layout_1291848193, props_1291848194, bounds_1291848195, views_1291848196) {
  var result_1291848197 = [];

  BeforeRet: {
    result_1291848197 = nimCopy(null, [nimCopy(null, bounds_1291848195, NTI2080374789)], NTI1291846985);
    break BeforeRet;
  };

  return result_1291848197;

}

function layoutViews_1291848220(layout_1291848193, props_1291848194, bounds_1291848195, views_1291848196) {
  var result_1291848221 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848193);
    if (isObj(layout_1291848193.m_type, NTI1291845645)) {
    result_1291848221 = layoutViews_1291848729(layout_1291848193, props_1291848194, bounds_1291848195, views_1291848196);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848193.m_type, NTI1291845644)) {
    result_1291848221 = layoutViews_1291848633(layout_1291848193, props_1291848194, bounds_1291848195, views_1291848196);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848193.m_type, NTI1291845643)) {
    result_1291848221 = layoutViews_1291848222(layout_1291848193, props_1291848194, bounds_1291848195, views_1291848196);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848193.m_type, NTI1291845642)) {
    result_1291848221 = layoutViews_1291848192(layout_1291848193, props_1291848194, bounds_1291848195, views_1291848196);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848221;

}

function start_2919235633(self_2919235634) {
  
}

function start_2919235635(self_2919235634) {
    start_2919235633(self_2919235634);

  
}

function getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235650 = null;

  return result_2919235650;

}

function getDefinition_2919235651(self_2919235640, filename_2919235641, location_2919235642) {
  var result_2919235652 = null;

  BeforeRet: {
    result_2919235652 = getDefinition_2919235639(self_2919235640, filename_2919235641, location_2919235642);
    break BeforeRet;
  };

  return result_2919235652;

}

function getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235660 = null;

  return result_2919235660;

}

function getCompletions_2919235661(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657) {
  var result_2919235662 = null;

  BeforeRet: {
    result_2919235662 = getCompletions_2919235653(self_2919235654, languageId_2919235655, filename_2919235656, location_2919235657);
    break BeforeRet;
  };

  return result_2919235662;

}

function changed_1291850984(self_1291850985, other_1291850986) {
  var result_1291850987 = false;

  BeforeRet: {
    var other_1291850988 = other_1291850986;
    result_1291850987 = (!(eqStrings(self_1291850985.name, other_1291850988.name)) || !(eqStrings(self_1291850985.path, other_1291850988.path)));
    break BeforeRet;
  };

  return result_1291850987;

}

function changed_1291850970(self_1291850971, other_1291850972) {
  var result_1291850973 = false;

  BeforeRet: {
    var other_1291850974 = other_1291850972;
    result_1291850973 = !(eqStrings(self_1291850971.path, other_1291850974.path));
    break BeforeRet;
  };

  return result_1291850973;

}

function changed_3221225538(self_3221225539, other_3221225540) {
  var result_3221225541 = false;

  return result_3221225541;

}

function changed_3221225542(self_3221225539, other_3221225540) {
  var result_3221225543 = false;

  BeforeRet: {
    chckNilDisp(self_3221225539);
    if (isObj(self_3221225539.m_type, NTI1291848510)) {
    result_3221225543 = changed_1291850984(self_3221225539, other_3221225540);
    break BeforeRet;
    }
    else {
    if (isObj(self_3221225539.m_type, NTI1291848512)) {
    result_3221225543 = changed_1291850970(self_3221225539, other_3221225540);
    break BeforeRet;
    }
    else {
    if (isObj(self_3221225539.m_type, NTI3221225480)) {
    result_3221225543 = changed_3221225538(self_3221225539, other_3221225540);
    break BeforeRet;
    }
    }}
  };

  return result_3221225543;

}

function active_2147483761(self_2147483762) {
  var result_2147483763 = false;

    result_2147483763 = self_2147483762.active;

  return result_2147483763;

}

function updateBackgroundColor_2332033102(self_2332033103, color_2332033104, frameIndex_2332033105) {
    if (!(HEX3DHEX3D_2332033092(self_2332033103.backgroundColor, color_2332033104))) {
    self_2332033103.lastHierarchyChange = nimMax(self_2332033103.lastHierarchyChange, frameIndex_2332033105);
    }
    
    self_2332033103.backgroundColor = nimCopy(self_2332033103.backgroundColor, color_2332033104, NTI2365587459);

  
}

function HEX24_2231370052(selection_2231370053) {
  var result_2231370054 = [];

  BeforeRet: {
    result_2231370054 = nimCopy(null, (HEX24_2231370049(selection_2231370053.Field0) || []).concat([45] || [],HEX24_2231370049(selection_2231370053.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2231370054;

}

function formatValue_2818572412(result_2818572414, result_2818572414_Idx, value_2818572415, specifier_2818572416) {
    formatValue_721420459(result_2818572414, result_2818572414_Idx, HEX24_2231370052(value_2818572415), specifier_2818572416);

  
}

function HEX2A_2382364675(c_2382364676, v_2382364677) {
  var result_2382364678 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2382364678.r = (c_2382364676.r * v_2382364677);
    result_2382364678.g = (c_2382364676.g * v_2382364677);
    result_2382364678.b = (c_2382364676.b * v_2382364677);
    result_2382364678.a = (c_2382364676.a * v_2382364677);

  return result_2382364678;

}

function changed_2332033349(self_2332033350, frameIndex_2332033351) {
  var result_2332033352 = false;

    result_2332033352 = (((frameIndex_2332033351 <= self_2332033350.lastBoundsChange) || (frameIndex_2332033351 <= self_2332033350.lastHierarchyChange)) || (frameIndex_2332033351 <= self_2332033350.lastInvalidation));

  return result_2332033352;

}

function dirty_2147483683(self_2147483684) {
  var result_2147483685 = false;

    result_2147483685 = self_2147483684.mDirty;

  return result_2147483685;

}

function resetDirty_2147483756(self_2147483757) {
    self_2147483757.mDirty = false;

  
}

function clamp_3271557464(val_3271557466, bounds_3271557467) {
  var result_3271557468 = 0;

    if (!((bounds_3271557467.a <= bounds_3271557467.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2231370049({Field0: bounds_3271557467.a, Field1: bounds_3271557467.b}) || []));
    }
    
    result_3271557468 = clamp_1660945119(val_3271557466, bounds_3271557467.a, bounds_3271557467.b);

  return result_3271557468;

}

function initTable_3271557498(initialSize_3271557501) {
  var result_3271557502 = ({data: [], counter: 0});

    var correctSizeHEX60gensym10_3271557504 = slotsNeeded_1308622891(chckRange(initialSize_3271557501, 0, 2147483647));
    result_3271557502.counter = 0;
    result_3271557502.data = new Array(chckRange(correctSizeHEX60gensym10_3271557504, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_3271557504, 0, 2147483647) ; ++i) { result_3271557502.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3271557502;

}

function mgetOrPut_3271557550(t_3271557553, key_3271557554, val_3271557555) {
  var result_3271557556 = null;
  var result_3271557556_Idx = 0;

    if (((t_3271557553.data).length == 0)) {
    var correctSizeHEX60gensym13_3271557605 = slotsNeeded_1308622891(32);
    t_3271557553.counter = 0;
    t_3271557553.data = new Array(chckRange(correctSizeHEX60gensym13_3271557605, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3271557605, 0, 2147483647) ; ++i) { t_3271557553.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3271557610 = [0];
    var index_3271557617 = rawGet_2818580445(t_3271557553, key_3271557554, hc_3271557610, 0);
    if ((index_3271557617 < 0)) {
    if (((t_3271557553.data).length == 0)) {
    var correctSizeHEX60gensym16_3271557666 = slotsNeeded_1308622891(32);
    t_3271557553.counter = 0;
    t_3271557553.data = new Array(chckRange(correctSizeHEX60gensym16_3271557666, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3271557666, 0, 2147483647) ; ++i) { t_3271557553.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2818580883(t_3271557553)) {
    enlarge_2818581053(t_3271557553);
    index_3271557617 = rawGetKnownHC_2818581661(t_3271557553, key_3271557554, hc_3271557610[0]);
    }
    
    index_3271557617 = subInt(-1, index_3271557617);
    rawInsert_2818581432(t_3271557553, t_3271557553, "data", key_3271557554, val_3271557555, hc_3271557610[0], index_3271557617);
    t_3271557553.counter = addInt(t_3271557553.counter, 1);
    }
    
    result_3271557556 = t_3271557553.data[chckIndx(index_3271557617, 0, (t_3271557553.data).length - 1)]; result_3271557556_Idx = "Field2";

  return [result_3271557556, result_3271557556_Idx];

}

function isSome_3271557837(self_3271557839) {
  var result_3271557840 = false;

    result_3271557840 = self_3271557839.has;

  return result_3271557840;

}

function get_3271557828(self_3271557830, otherwise_3271557831) {
    var Temporary1;

  var result_3271557832 = 0;

    if (isSome_3271557837(self_3271557830)) {
    Temporary1 = self_3271557830.val;
    }
    else {
    Temporary1 = otherwise_3271557831;
    }
    
    result_3271557832 = Temporary1;

  return result_3271557832;

}

function parseEnum_3271557803(s_3271557805, default_3271557806) {
    var Temporary1;

  var result_3271557807 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3271557805))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3271557806;
      break;
    }
    result_3271557807 = Temporary1;

  return result_3271557807;

}

function getOption_3271557777(editor_3271557779, path_3271557780, default_3271557781) {
  var result_3271557787 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3271557779 == null)) {
      result_3271557787 = default_3271557781;
      break BeforeRet;
      }
      
      var nodeHEX60gensym18_3271557799 = HEX7BHEX7D_1627393316(editor_3271557779.options, nsuSplitString(path_3271557780, [46], -1));
      if ((nodeHEX60gensym18_3271557799 == null)) {
      result_3271557787 = default_3271557781;
      break BeforeRet;
      }
      
    };
    result_3271557787 = parseEnum_3271557803(getStr_1627390106(nodeHEX60gensym18_3271557799, []), default_3271557781);
    break BeforeRet;
  };

  return result_3271557787;

}

function color_3271557871(theme_3271557873, names_3271557874, default_3271557875) {
  var result_3271557876 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3271557880 = [];
      var i_536872613 = 0;
      var L_536872614 = (names_3271557874).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872613 < L_536872614)) break Label3;
            name_3271557880 = names_3271557874[chckIndx(i_536872613, 0, (names_3271557874).length - 1)];
            if (contains_3187671619(theme_3271557873.colors, name_3271557880)) {
            result_3271557876 = nimCopy(result_3271557876, HEX5BHEX5D_3187671709(theme_3271557873.colors, name_3271557880), NTI2365587459);
            break BeforeRet;
            }
            
            i_536872613 = addInt(i_536872613, 1);
            if (!(((names_3271557874).length == L_536872614))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271557876 = nimCopy(result_3271557876, color_2449473569(default_3271557875), NTI2365587459);
    break BeforeRet;
  };

  return result_3271557876;

}

function color_2449473587(c_2449473588) {
  var result_2449473589 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473589.r = (c_2449473588.r / 255.0);
    result_2449473589.g = (c_2449473588.g / 255.0);
    result_2449473589.b = (c_2449473588.b / 255.0);
    result_2449473589.a = (c_2449473588.a / 255.0);

  return result_2449473589;

}

function color_3271557991(theme_3271557993, names_3271557994, default_3271557995) {
  var result_3271557996 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3271558000 = [];
      var i_536872617 = 0;
      var L_536872618 = (names_3271557994).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872617 < L_536872618)) break Label3;
            name_3271558000 = names_3271557994[chckIndx(i_536872617, 0, (names_3271557994).length - 1)];
            if (contains_3187671619(theme_3271557993.colors, name_3271558000)) {
            result_3271557996 = nimCopy(result_3271557996, HEX5BHEX5D_3187671709(theme_3271557993.colors, name_3271558000), NTI2365587459);
            break BeforeRet;
            }
            
            i_536872617 = addInt(i_536872617, 1);
            if (!(((names_3271557994).length == L_536872618))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3271557996 = nimCopy(result_3271557996, color_2449473587(default_3271557995), NTI2365587459);
    break BeforeRet;
  };

  return result_3271557996;

}

function rgba_2365587557(r_2365587558, g_2365587559, b_2365587560, a_2365587561) {
  var result_2365587562 = ({r: 0, g: 0, b: 0, a: 0});

    result_2365587562 = nimCopy(result_2365587562, {r: r_2365587558, g: g_2365587559, b: b_2365587560, a: a_2365587561}, NTI2365587461);

  return result_2365587562;

}

function rawGet_2818574302(t_2818574305, key_2818574306, hc_2818574307, hc_2818574307_Idx) {
  var result_2818574308 = 0;

  BeforeRet: {
    hc_2818574307[hc_2818574307_Idx] = hash_1325400236(key_2818574306);
    if ((hc_2818574307[hc_2818574307_Idx] == 0)) {
    hc_2818574307[hc_2818574307_Idx] = 314159265;
    }
    
    if (((t_2818574305.data).length == 0)) {
    result_2818574308 = -1;
    break BeforeRet;
    }
    
    var h_2818574367 = (hc_2818574307[hc_2818574307_Idx] & (t_2818574305.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574305.data[chckIndx(h_2818574367, 0, (t_2818574305.data).length - 1)].Field0)) break Label2;
          if (((t_2818574305.data[chckIndx(h_2818574367, 0, (t_2818574305.data).length - 1)].Field0 == hc_2818574307[hc_2818574307_Idx]) && (t_2818574305.data[chckIndx(h_2818574367, 0, (t_2818574305.data).length - 1)].Field1 == key_2818574306))) {
          result_2818574308 = h_2818574367;
          break BeforeRet;
          }
          
          h_2818574367 = nextTry_1308622883(h_2818574367, (t_2818574305.data).length - 1);
        }
    };
    result_2818574308 = subInt(-1, h_2818574367);
  };

  return result_2818574308;

}

function hasKey_2818574295(t_2818574298, key_2818574299) {
  var result_2818574300 = false;

    var hc_2818574301 = [0];
    result_2818574300 = (0 <= rawGet_2818574302(t_2818574298, key_2818574299, hc_2818574301, 0));

  return result_2818574300;

}

function contains_2818574289(t_2818574292, key_2818574293) {
  var result_2818574294 = false;

  BeforeRet: {
    result_2818574294 = hasKey_2818574295(t_2818574292, key_2818574293);
    break BeforeRet;
  };

  return result_2818574294;

}

function HEX5BHEX5D_2818574681(t_2818574684, key_2818574685) {
  var result_2818574686 = null;
  var result_2818574686_Idx = 0;

    var hcHEX60gensym22_2818574687 = [0];
    var indexHEX60gensym22_2818574694 = rawGet_2818574302(t_2818574684, key_2818574685, hcHEX60gensym22_2818574687, 0);
    if ((0 <= indexHEX60gensym22_2818574694)) {
    result_2818574686 = t_2818574684.data[chckIndx(indexHEX60gensym22_2818574694, 0, (t_2818574684.data).length - 1)]; result_2818574686_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850842(key_2818574685);
    }
    

  return [result_2818574686, result_2818574686_Idx];

}

function initTable_2818574785(initialSize_2818574788) {
  var result_2818574794 = ({data: [], counter: 0});

    var correctSizeHEX60gensym42_2818574796 = slotsNeeded_1308622891(chckRange(initialSize_2818574788, 0, 2147483647));
    result_2818574794.counter = 0;
    result_2818574794.data = new Array(chckRange(correctSizeHEX60gensym42_2818574796, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym42_2818574796, 0, 2147483647) ; ++i) { result_2818574794.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2818574794;

}

function matches_2885681272(self_2885681273, node_2885681274, selection_2885681275) {
  var result_2885681276 = [];

  BeforeRet: {
    result_2885681276 = nimCopy(null, self_2885681273.matches(node_2885681274, {row: selection_2885681275.Field0.Field0, column: selection_2885681275.Field0.Field1, m_type: NTI2885681166}, {row: selection_2885681275.Field1.Field0, column: selection_2885681275.Field1.Field1, m_type: NTI2885681166}), NTI2885681249);
    break BeforeRet;
  };

  return result_2885681276;

}

function rawGet_2818574977(t_2818574980, key_2818574981, hc_2818574982, hc_2818574982_Idx) {
  var result_2818574983 = 0;

  BeforeRet: {
    hc_2818574982[hc_2818574982_Idx] = hash_1325400491(key_2818574981);
    if ((hc_2818574982[hc_2818574982_Idx] == 0)) {
    hc_2818574982[hc_2818574982_Idx] = 314159265;
    }
    
    if (((t_2818574980.data).length == 0)) {
    result_2818574983 = -1;
    break BeforeRet;
    }
    
    var h_2818575040 = (hc_2818574982[hc_2818574982_Idx] & (t_2818574980.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818574980.data[chckIndx(h_2818575040, 0, (t_2818574980.data).length - 1)].Field0)) break Label2;
          if (((t_2818574980.data[chckIndx(h_2818575040, 0, (t_2818574980.data).length - 1)].Field0 == hc_2818574982[hc_2818574982_Idx]) && eqStrings(t_2818574980.data[chckIndx(h_2818575040, 0, (t_2818574980.data).length - 1)].Field1, key_2818574981))) {
          result_2818574983 = h_2818575040;
          break BeforeRet;
          }
          
          h_2818575040 = nextTry_1308622883(h_2818575040, (t_2818574980.data).length - 1);
        }
    };
    result_2818574983 = subInt(-1, h_2818575040);
  };

  return result_2818574983;

}

function hasKey_2818574970(t_2818574973, key_2818574974) {
  var result_2818574975 = false;

    var hc_2818574976 = [0];
    result_2818574975 = (0 <= rawGet_2818574977(t_2818574973, key_2818574974, hc_2818574976, 0));

  return result_2818574975;

}

function contains_2818574964(t_2818574967, key_2818574968) {
  var result_2818574969 = false;

  BeforeRet: {
    result_2818574969 = hasKey_2818574970(t_2818574967, key_2818574968);
    break BeforeRet;
  };

  return result_2818574969;

}

function HEX5BHEX5D_2818575345(t_2818575348, key_2818575349) {
  var result_2818575350 = null;

    var hcHEX60gensym22_2818575351 = [0];
    var indexHEX60gensym22_2818575358 = rawGet_2818574977(t_2818575348, key_2818575349, hcHEX60gensym22_2818575351, 0);
    if ((0 <= indexHEX60gensym22_2818575358)) {
    result_2818575350 = t_2818575348.data[chckIndx(indexHEX60gensym22_2818575358, 0, (t_2818575348.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2818575349);
    }
    

  return result_2818575350;

}

function mustRehash_2818575698(t_2818575700) {
  var result_2818575701 = false;

    if (!((t_2818575700.counter < (t_2818575700.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818575701 = ((mulInt((t_2818575700.data).length, 2) < mulInt(t_2818575700.counter, 3)) || (subInt((t_2818575700.data).length, t_2818575700.counter) < 4));

  return result_2818575701;

}

function rawInsert_2818576247(t_2818576251, data_2818576252, data_2818576252_Idx, key_2818576253, val_2818576254, hc_2818576255, h_2818576256) {
    data_2818576252[data_2818576252_Idx][chckIndx(h_2818576256, 0, (data_2818576252[data_2818576252_Idx]).length - 1)].Field1 = nimCopy(null, key_2818576253, NTI33554449);
    data_2818576252[data_2818576252_Idx][chckIndx(h_2818576256, 0, (data_2818576252[data_2818576252_Idx]).length - 1)].Field2 = nimCopy(data_2818576252[data_2818576252_Idx][chckIndx(h_2818576256, 0, (data_2818576252[data_2818576252_Idx]).length - 1)].Field2, val_2818576254, NTI2852126723);
    data_2818576252[data_2818576252_Idx][chckIndx(h_2818576256, 0, (data_2818576252[data_2818576252_Idx]).length - 1)].Field0 = hc_2818576255;

  
}

function enlarge_2818575868(t_2818575871) {
    var n_2818575874 = [];
    n_2818575874 = new Array(chckRange(mulInt((t_2818575871.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818575871.data).length, 2), 0, 2147483647) ; ++i) { n_2818575874[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2818575871.data; t_2818575871.data = n_2818575874; n_2818575874 = Temporary1;    Label2: {
      var i_2818575943 = 0;
      var colontmp__536872648 = 0;
      colontmp__536872648 = (n_2818575874).length - 1;
      var res_536872649 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872649 <= colontmp__536872648)) break Label4;
            i_2818575943 = res_536872649;
            var eh_2818576017 = n_2818575874[chckIndx(i_2818575943, 0, (n_2818575874).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818576017)) {
            var j_2818576021 = (eh_2818576017 & (t_2818575871.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818575871.data[chckIndx(j_2818576021, 0, (t_2818575871.data).length - 1)].Field0)) break Label6;
                  j_2818576021 = nextTry_1308622883(j_2818576021, (t_2818575871.data).length - 1);
                }
            };
            rawInsert_2818576247(t_2818575871, t_2818575871, "data", n_2818575874[chckIndx(i_2818575943, 0, (n_2818575874).length - 1)].Field1, n_2818575874[chckIndx(i_2818575943, 0, (n_2818575874).length - 1)].Field2, eh_2818576017, j_2818576021);
            }
            
            res_536872649 = addInt(res_536872649, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818576476(t_2818576479, key_2818576480, hc_2818576481) {
  var result_2818576482 = 0;

  BeforeRet: {
    if (((t_2818576479.data).length == 0)) {
    result_2818576482 = -1;
    break BeforeRet;
    }
    
    var h_2818576538 = (hc_2818576481 & (t_2818576479.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818576479.data[chckIndx(h_2818576538, 0, (t_2818576479.data).length - 1)].Field0)) break Label2;
          if (((t_2818576479.data[chckIndx(h_2818576538, 0, (t_2818576479.data).length - 1)].Field0 == hc_2818576481) && eqStrings(t_2818576479.data[chckIndx(h_2818576538, 0, (t_2818576479.data).length - 1)].Field1, key_2818576480))) {
          result_2818576482 = h_2818576538;
          break BeforeRet;
          }
          
          h_2818576538 = nextTry_1308622883(h_2818576538, (t_2818576479.data).length - 1);
        }
    };
    result_2818576482 = subInt(-1, h_2818576538);
  };

  return result_2818576482;

}

function HEX5BHEX5DHEX3D_2818575495(t_2818575498, key_2818575499, val_2818575500) {
    if (((t_2818575498.data).length == 0)) {
    var correctSizeHEX60gensym56_2818575554 = slotsNeeded_1308622891(32);
    t_2818575498.counter = 0;
    t_2818575498.data = new Array(chckRange(correctSizeHEX60gensym56_2818575554, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2818575554, 0, 2147483647) ; ++i) { t_2818575498.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2818575559 = [0];
    var index_2818575566 = rawGet_2818574977(t_2818575498, key_2818575499, hc_2818575559, 0);
    if ((0 <= index_2818575566)) {
    t_2818575498.data[chckIndx(index_2818575566, 0, (t_2818575498.data).length - 1)].Field2 = nimCopy(t_2818575498.data[chckIndx(index_2818575566, 0, (t_2818575498.data).length - 1)].Field2, val_2818575500, NTI2852126723);
    }
    else {
      if (((t_2818575498.data).length == 0)) {
      var correctSizeHEX60gensym59_2818575693 = slotsNeeded_1308622891(32);
      t_2818575498.counter = 0;
      t_2818575498.data = new Array(chckRange(correctSizeHEX60gensym59_2818575693, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym59_2818575693, 0, 2147483647) ; ++i) { t_2818575498.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2818575698(t_2818575498)) {
      enlarge_2818575868(t_2818575498);
      index_2818575566 = rawGetKnownHC_2818576476(t_2818575498, key_2818575499, hc_2818575559[0]);
      }
      
      index_2818575566 = subInt(-1, index_2818575566);
      rawInsert_2818576247(t_2818575498, t_2818575498, "data", key_2818575499, val_2818575500, hc_2818575559[0], index_2818575566);
      t_2818575498.counter = addInt(t_2818575498.counter, 1);
    }
    

  
}

function HEX24_2885681319(node_2885681320) {
  var result_2885681321 = [];

  BeforeRet: {
    result_2885681321 = nimCopy(null, cstrToNimstr(node_2885681320.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2885681321;

}

function formatValue_2818576988(result_2818576990, result_2818576990_Idx, value_2818576991, specifier_2818576992) {
    formatValue_721420459(result_2818576990, result_2818576990_Idx, HEX24_2885681319(value_2818576991), specifier_2818576992);

  
}

function insert_2818574176(x_2818574178, x_2818574178_Idx, item_2818574179, i_2818574180) {
    var it_2818574200 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2818574178[x_2818574178_Idx] = x_2818574178[x_2818574178_Idx] || []; x_2818574178[x_2818574178_Idx].splice(i_2818574180, 0, it_2818574200);
    x_2818574178[x_2818574178_Idx][chckIndx(i_2818574180, 0, (x_2818574178[x_2818574178_Idx]).length - 1)] = nimCopy(x_2818574178[x_2818574178_Idx][chckIndx(i_2818574180, 0, (x_2818574178[x_2818574178_Idx]).length - 1)], item_2818574179, NTI2818572422);

  
}

function splitAt_2818574114(line_2818574115, line_2818574115_Idx, index_2818574116) {
    var index_2818574117 = index_2818574116;
    var i_2818574118 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2818574118 < (line_2818574115[line_2818574115_Idx].parts).length) && ((line_2818574115[line_2818574115_Idx].parts[chckIndx(i_2818574118, 0, (line_2818574115[line_2818574115_Idx].parts).length - 1)].text).length <= index_2818574117))) break Label2;
          index_2818574117 = subInt(index_2818574117, (line_2818574115[line_2818574115_Idx].parts[chckIndx(i_2818574118, 0, (line_2818574115[line_2818574115_Idx].parts).length - 1)].text).length);
          i_2818574118 = addInt(i_2818574118, 1);
        }
    };
    if ((((i_2818574118 < (line_2818574115[line_2818574115_Idx].parts).length) && !((index_2818574117 == 0))) && !((index_2818574117 == (line_2818574115[line_2818574115_Idx].parts[chckIndx(i_2818574118, 0, (line_2818574115[line_2818574115_Idx].parts).length - 1)].text).length)))) {
    var copy_2818574133 = nimCopy(null, line_2818574115[line_2818574115_Idx].parts[chckIndx(i_2818574118, 0, (line_2818574115[line_2818574115_Idx].parts).length - 1)], NTI2818572422);
    line_2818574115[line_2818574115_Idx].parts[chckIndx(i_2818574118, 0, (line_2818574115[line_2818574115_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2818574115[line_2818574115_Idx].parts[chckIndx(i_2818574118, 0, (line_2818574115[line_2818574115_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2818574117, 1))), NTI33554449);
    copy_2818574133.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2818574133.text, HEX2EHEX2E_1040187488(index_2818574117, 1)), NTI33554449);
    insert_2818574176(line_2818574115[line_2818574115_Idx], "parts", copy_2818574133, chckRange(addInt(i_2818574118, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2818574210(line_2818574211, line_2818574211_Idx, first_2818574212, last_2818574213, scope_2818574214, priority_2818574215) {
    var index_2818574216 = 0;
    Label1: {
      var i_2818574224 = 0;
      var colontmp__536872655 = 0;
      colontmp__536872655 = (line_2818574211[line_2818574211_Idx].parts).length - 1;
      var res_536872656 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872656 <= colontmp__536872655)) break Label3;
            i_2818574224 = res_536872656;
            if ((((first_2818574212 <= index_2818574216) && (addInt(index_2818574216, (line_2818574211[line_2818574211_Idx].parts[chckIndx(i_2818574224, 0, (line_2818574211[line_2818574211_Idx].parts).length - 1)].text).length) <= last_2818574213)) && (priority_2818574215 < line_2818574211[line_2818574211_Idx].parts[chckIndx(i_2818574224, 0, (line_2818574211[line_2818574211_Idx].parts).length - 1)].priority))) {
            line_2818574211[line_2818574211_Idx].parts[chckIndx(i_2818574224, 0, (line_2818574211[line_2818574211_Idx].parts).length - 1)].scope = nimCopy(null, scope_2818574214, NTI33554449);
            line_2818574211[line_2818574211_Idx].parts[chckIndx(i_2818574224, 0, (line_2818574211[line_2818574211_Idx].parts).length - 1)].priority = priority_2818574215;
            }
            
            index_2818574216 = addInt(index_2818574216, (line_2818574211[line_2818574211_Idx].parts[chckIndx(i_2818574224, 0, (line_2818574211[line_2818574211_Idx].parts).length - 1)].text).length);
            res_536872656 = addInt(res_536872656, 1);
          }
      };
    };

  
}

function mustRehash_2818577254(t_2818577256) {
  var result_2818577257 = false;

    if (!((t_2818577256.counter < (t_2818577256.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2818577257 = ((mulInt((t_2818577256.data).length, 2) < mulInt(t_2818577256.counter, 3)) || (subInt((t_2818577256.data).length, t_2818577256.counter) < 4));

  return result_2818577257;

}

function rawInsert_2818577803(t_2818577807, data_2818577808, data_2818577808_Idx, key_2818577809, val_2818577810, hc_2818577811, h_2818577812) {
    data_2818577808[data_2818577808_Idx][chckIndx(h_2818577812, 0, (data_2818577808[data_2818577808_Idx]).length - 1)].Field1 = key_2818577809;
    data_2818577808[data_2818577808_Idx][chckIndx(h_2818577812, 0, (data_2818577808[data_2818577808_Idx]).length - 1)].Field2 = val_2818577810;
    data_2818577808[data_2818577808_Idx][chckIndx(h_2818577812, 0, (data_2818577808[data_2818577808_Idx]).length - 1)].Field0 = hc_2818577811;

  
}

function enlarge_2818577424(t_2818577427) {
    var n_2818577430 = [];
    n_2818577430 = new Array(chckRange(mulInt((t_2818577427.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2818577427.data).length, 2), 0, 2147483647) ; ++i) { n_2818577430[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2818577427.data; t_2818577427.data = n_2818577430; n_2818577430 = Temporary1;    Label2: {
      var i_2818577499 = 0;
      var colontmp__536872660 = 0;
      colontmp__536872660 = (n_2818577430).length - 1;
      var res_536872661 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872661 <= colontmp__536872660)) break Label4;
            i_2818577499 = res_536872661;
            var eh_2818577573 = n_2818577430[chckIndx(i_2818577499, 0, (n_2818577430).length - 1)].Field0;
            if (isFilled_1308622880(eh_2818577573)) {
            var j_2818577577 = (eh_2818577573 & (t_2818577427.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2818577427.data[chckIndx(j_2818577577, 0, (t_2818577427.data).length - 1)].Field0)) break Label6;
                  j_2818577577 = nextTry_1308622883(j_2818577577, (t_2818577427.data).length - 1);
                }
            };
            rawInsert_2818577803(t_2818577427, t_2818577427, "data", n_2818577430[chckIndx(i_2818577499, 0, (n_2818577430).length - 1)].Field1, n_2818577430[chckIndx(i_2818577499, 0, (n_2818577430).length - 1)].Field2, eh_2818577573, j_2818577577);
            }
            
            res_536872661 = addInt(res_536872661, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2818578032(t_2818578035, key_2818578036, hc_2818578037) {
  var result_2818578038 = 0;

  BeforeRet: {
    if (((t_2818578035.data).length == 0)) {
    result_2818578038 = -1;
    break BeforeRet;
    }
    
    var h_2818578094 = (hc_2818578037 & (t_2818578035.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2818578035.data[chckIndx(h_2818578094, 0, (t_2818578035.data).length - 1)].Field0)) break Label2;
          if (((t_2818578035.data[chckIndx(h_2818578094, 0, (t_2818578035.data).length - 1)].Field0 == hc_2818578037) && (t_2818578035.data[chckIndx(h_2818578094, 0, (t_2818578035.data).length - 1)].Field1 == key_2818578036))) {
          result_2818578038 = h_2818578094;
          break BeforeRet;
          }
          
          h_2818578094 = nextTry_1308622883(h_2818578094, (t_2818578035.data).length - 1);
        }
    };
    result_2818578038 = subInt(-1, h_2818578094);
  };

  return result_2818578038;

}

function HEX5BHEX5DHEX3D_2818577051(t_2818577054, key_2818577055, val_2818577056) {
    if (((t_2818577054.data).length == 0)) {
    var correctSizeHEX60gensym73_2818577110 = slotsNeeded_1308622891(32);
    t_2818577054.counter = 0;
    t_2818577054.data = new Array(chckRange(correctSizeHEX60gensym73_2818577110, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym73_2818577110, 0, 2147483647) ; ++i) { t_2818577054.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2818577115 = [0];
    var index_2818577122 = rawGet_2818574302(t_2818577054, key_2818577055, hc_2818577115, 0);
    if ((0 <= index_2818577122)) {
    t_2818577054.data[chckIndx(index_2818577122, 0, (t_2818577054.data).length - 1)].Field2 = val_2818577056;
    }
    else {
      if (((t_2818577054.data).length == 0)) {
      var correctSizeHEX60gensym76_2818577249 = slotsNeeded_1308622891(32);
      t_2818577054.counter = 0;
      t_2818577054.data = new Array(chckRange(correctSizeHEX60gensym76_2818577249, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym76_2818577249, 0, 2147483647) ; ++i) { t_2818577054.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2818577254(t_2818577054)) {
      enlarge_2818577424(t_2818577054);
      index_2818577122 = rawGetKnownHC_2818578032(t_2818577054, key_2818577055, hc_2818577115[0]);
      }
      
      index_2818577122 = subInt(-1, index_2818577122);
      rawInsert_2818577803(t_2818577054, t_2818577054, "data", key_2818577055, val_2818577056, hc_2818577115[0], index_2818577122);
      t_2818577054.counter = addInt(t_2818577054.counter, 1);
    }
    

  
}

function getStyledText_2818574238(self_2818574239, i_2818574240) {
    var Temporary1;
                                          var Temporary15;
                                          var Temporary16;
                        var Temporary17;
                        var Temporary18;

  var result_2818574241 = [null];

  BeforeRet: {
    if (contains_2818574289(self_2818574239.styledTextCache, i_2818574240)) {
    result_2818574241[0] = (Temporary1 = HEX5BHEX5D_2818574681(self_2818574239.styledTextCache, i_2818574240), Temporary1)[0][Temporary1[1]];
    }
    else {
      var line_2818574780 = nimCopy(null, self_2818574239.lines[chckIndx(i_2818574240, 0, (self_2818574239.lines).length - 1)], NTI33554449);
      result_2818574241[0] = {index: i_2818574240, parts: [{text: nimCopy(null, line_2818574780, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]};
      var regexes_2818574810 = [initTable_2818574785(32)];
      if ((((self_2818574239.tsParser == null) || (self_2818574239.highlightQuery == null)) || (self_2818574239.currentTree == null))) {
      break BeforeRet;
      }
      
      Label2: {
        var match_2818574842 = null;
        var colontmp__536872639 = [];
        colontmp__536872639 = matches_2885681272(self_2818574239.highlightQuery, self_2818574239.currentTree.rootNode, {Field0: {Field0: i_2818574240, Field1: 0}, Field1: {Field0: i_2818574240, Field1: (line_2818574780).length}});
        var i_536872641 = 0;
        var L_536872642 = (colontmp__536872639).length;
        Label3: {
            Label4: while (true) {
            if (!(i_536872641 < L_536872642)) break Label4;
              match_2818574842 = colontmp__536872639[chckIndx(i_536872641, 0, (colontmp__536872639).length - 1)];
              var predicates_2818574843 = self_2818574239.highlightQuery.predicatesForPattern(match_2818574842.pattern);
              Label5: {
                var capture_2818574866 = null;
                var colontmp__536872634 = [];
                colontmp__536872634 = match_2818574842.captures;
                var i_536872636 = 0;
                var L_536872637 = (colontmp__536872634).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536872636 < L_536872637)) break Label7;
                      capture_2818574866 = colontmp__536872634[chckIndx(i_536872636, 0, (colontmp__536872634).length - 1)];
                      Label8: {
                        var scope_2818574867 = capture_2818574866.name;
                        var node_2818574868 = capture_2818574866.node;
                        var matches_2818574869 = true;
                        Label9: {
                          var predicate_2818574892 = null;
                          var i_536872631 = 0;
                          var L_536872632 = (predicates_2818574843).length;
                          Label10: {
                              Label11: while (true) {
                              if (!(i_536872631 < L_536872632)) break Label11;
                                predicate_2818574892 = predicates_2818574843[chckIndx(i_536872631, 0, (predicates_2818574843).length - 1)];
                                if (!(matches_2818574869)) {
                                break Label9;
                                }
                                
                                Label12: {
                                  var operand_2818574915 = null;
                                  var colontmp__536872625 = [];
                                  colontmp__536872625 = predicate_2818574892.operands;
                                  var i_536872627 = 0;
                                  var L_536872628 = (colontmp__536872625).length;
                                  Label13: {
                                      Label14: while (true) {
                                      if (!(i_536872627 < L_536872628)) break Label14;
                                        operand_2818574915 = colontmp__536872625[chckIndx(i_536872627, 0, (colontmp__536872625).length - 1)];
                                        var value_2818574916 = cstrToNimstr(operand_2818574915.type);
                                        if (!((operand_2818574915.name == scope_2818574867))) {
                                        matches_2818574869 = false;
                                        break Label12;
                                        }
                                        
                                        switch (toJSStr(cstrToNimstr(predicate_2818574892.operator))) {
                                        case "match?":
                                          if (contains_2818574964(regexes_2818574810[0], value_2818574916)) {
                                          Temporary15 = HEX5BHEX5D_2818575345(regexes_2818574810[0], value_2818574916);
                                          }
                                          else {
                                            var regex_2818575444 = re_2852126779(value_2818574916);
                                            HEX5BHEX5DHEX3D_2818575495(regexes_2818574810[0], value_2818574916, regex_2818575444);
                                          Temporary15 = regex_2818575444;
                                          }
                                          
                                          var regex_2818576779 = nimCopy(null, Temporary15, NTI2852126723);
                                          var nodeText_2818576780 = contentString_2818573988(self_2818574239, getRange_2885681336(node_2818574868));
                                          if (!((matchLen_2852126756(nodeText_2818576780, regex_2818576779, 0) == (nodeText_2818576780).length))) {
                                          matches_2818574869 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-match?":
                                          if (contains_2818574964(regexes_2818574810[0], value_2818574916)) {
                                          Temporary16 = HEX5BHEX5D_2818575345(regexes_2818574810[0], value_2818574916);
                                          }
                                          else {
                                            var regex_2818576911 = re_2852126779(value_2818574916);
                                            HEX5BHEX5DHEX3D_2818575495(regexes_2818574810[0], value_2818574916, regex_2818576911);
                                          Temporary16 = regex_2818576911;
                                          }
                                          
                                          var regex_2818576968 = nimCopy(null, Temporary16, NTI2852126723);
                                          var nodeText_2818576969 = contentString_2818573988(self_2818574239, getRange_2885681336(node_2818574868));
                                          if ((matchLen_2852126756(nodeText_2818576969, regex_2818576968, 0) == (nodeText_2818576969).length)) {
                                          matches_2818574869 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "eq?":
                                          var nodeText_2818576970 = contentString_2818573988(self_2818574239, getRange_2885681336(node_2818574868));
                                          if (!(eqStrings(nodeText_2818576970, value_2818574916))) {
                                          matches_2818574869 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        case "not-eq?":
                                          var nodeText_2818576971 = contentString_2818573988(self_2818574239, getRange_2885681336(node_2818574868));
                                          if (eqStrings(nodeText_2818576971, value_2818574916)) {
                                          matches_2818574869 = false;
                                          break Label12;
                                          }
                                          
                                          break;
                                        default: 
                                          var fmtRes_2818576976 = [mnewString(0)];
                                          fmtRes_2818576976[0].push.apply(fmtRes_2818576976[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                          add_33556386(fmtRes_2818576976, 0, predicate_2818574892.operator);
                                          fmtRes_2818576976[0].push.apply(fmtRes_2818576976[0], [39]);;
                                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2818576976[0], NTI33554449)]);
                                          break;
                                        }
                                        i_536872627 = addInt(i_536872627, 1);
                                        if (!(((colontmp__536872625).length == L_536872628))) {
                                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                        }
                                        
                                      }
                                  };
                                };
                                if (getFlag_1291848866(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                                var nodeText_2818576977 = contentString_2818573988(self_2818574239, getRange_2885681336(node_2818574868));
                                var fmtRes_2818576982 = [mnewString(0)];
                                formatValue_2332033380(fmtRes_2818576982, 0, match_2818574842.pattern, []);
                                fmtRes_2818576982[0].push.apply(fmtRes_2818576982[0], [58,32,39]);;
                                formatValue_721420459(fmtRes_2818576982, 0, nodeText_2818576977, []);
                                fmtRes_2818576982[0].push.apply(fmtRes_2818576982[0], [39,32]);;
                                formatValue_2818576988(fmtRes_2818576982, 0, node_2818574868, []);
                                fmtRes_2818576982[0].push.apply(fmtRes_2818576982[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                                formatValue_2818576993(fmtRes_2818576982, 0, matches_2818574869, []);
                                fmtRes_2818576982[0].push.apply(fmtRes_2818576982[0], [41]);;
                                log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2818576982[0], NTI33554449)]);
                                }
                                
                                i_536872631 = addInt(i_536872631, 1);
                                if (!(((predicates_2818574843).length == L_536872632))) {
                                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                }
                                
                              }
                          };
                        };
                        if (!(matches_2818574869)) {
                        break Label8;
                        }
                        
                        var nodeRange_2818576998 = getRange_2885681336(node_2818574868);
                        if ((nodeRange_2818576998.Field0.Field0 == i_2818574240)) {
                        splitAt_2818574114(result_2818574241, 0, nodeRange_2818576998.Field0.Field1);
                        }
                        
                        if ((nodeRange_2818576998.Field1.Field0 == i_2818574240)) {
                        splitAt_2818574114(result_2818574241, 0, nodeRange_2818576998.Field1.Field1);
                        }
                        
                        if ((nodeRange_2818576998.Field0.Field0 < i_2818574240)) {
                        Temporary17 = 0;
                        }
                        else {
                        if ((nodeRange_2818576998.Field0.Field0 == i_2818574240)) {
                        Temporary17 = nodeRange_2818576998.Field0.Field1;
                        }
                        else {
                        Temporary17 = (line_2818574780).length;
                        }
                        }
                        var first_2818576999 = Temporary17;
                        if ((nodeRange_2818576998.Field1.Field0 < i_2818574240)) {
                        Temporary18 = 0;
                        }
                        else {
                        if ((nodeRange_2818576998.Field1.Field0 == i_2818574240)) {
                        Temporary18 = nodeRange_2818576998.Field1.Field1;
                        }
                        else {
                        Temporary18 = (line_2818574780).length;
                        }
                        }
                        var last_2818577000 = Temporary18;
                        overrideStyle_2818574210(result_2818574241, 0, first_2818576999, last_2818577000, cstrToNimstr(scope_2818574867), match_2818574842.pattern);
                      };
                      i_536872636 = addInt(i_536872636, 1);
                      if (!(((colontmp__536872634).length == L_536872637))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              i_536872641 = addInt(i_536872641, 1);
              if (!(((colontmp__536872639).length == L_536872642))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      HEX5BHEX5DHEX3D_2818577051(self_2818574239.styledTextCache, i_2818574240, result_2818574241[0]);
    }
    
  };

  return result_2818574241[0];

}

function getOrDefault_3271558183(t_3271558186, key_3271558187, default_3271558188) {
    var Temporary1;

  var result_3271558189 = [];

    var hcHEX60gensym21_3271558192 = [0];
    var indexHEX60gensym21_3271558199 = rawGet_2818580445(t_3271558186, key_3271558187, hcHEX60gensym21_3271558192, 0);
    if ((0 <= indexHEX60gensym21_3271558199)) {
    Temporary1 = t_3271558186.data[chckIndx(indexHEX60gensym21_3271558199, 0, (t_3271558186.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3271558188;
    }
    
    result_3271558189 = nimCopy(null, Temporary1, NTI2818572535);

  return result_3271558189;

}

function map_3271558284(s_3271558287, op_3271558289) {
  var result_3271558290 = [];

    result_3271558290 = new Array(chckRange((s_3271558287).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3271558287).length, 0, 2147483647) ; ++i) { result_3271558290[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3271558305 = 0;
      var colontmp__536872665 = 0;
      colontmp__536872665 = (s_3271558287).length;
      var i_536872666 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872666 < colontmp__536872665)) break Label3;
            i_3271558305 = i_536872666;
            result_3271558290[chckIndx(i_3271558305, 0, (result_3271558290).length - 1)] = nimCopy(result_3271558290[chckIndx(i_3271558305, 0, (result_3271558290).length - 1)], op_3271558289(s_3271558287[chckIndx(i_3271558305, 0, (s_3271558287).length - 1)]), NTI3271557124);
            i_536872666 = addInt(i_536872666, 1);
          }
      };
    };

  return result_3271558290;

}

function clampToLine_3271557137(selection_3271557138, line_3271557139, lineLength_3271557140) {
    var Temporary1;
    var Temporary2;

  var result_3271557143 = {Field0: 0, Field1: 0};

    if ((selection_3271557138.Field0.Field0 < line_3271557139)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3271557138.Field0.Field0 == line_3271557139)) {
    Temporary1 = selection_3271557138.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3271557140;
    }
    }
    result_3271557143.Field0 = Temporary1;
    if ((selection_3271557138.Field1.Field0 < line_3271557139)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3271557138.Field1.Field0 == line_3271557139)) {
    Temporary2 = selection_3271557138.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3271557140;
    }
    }
    result_3271557143.Field1 = Temporary2;

  return result_3271557143;

}

function len_2818574066(line_2818574067) {
  var result_2818574068 = 0;

    result_2818574068 = 0;
    Label1: {
      var p_2818574091 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872670 = 0;
      var L_536872671 = (line_2818574067.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872670 < L_536872671)) break Label3;
            p_2818574091 = line_2818574067.parts[chckIndx(i_536872670, 0, (line_2818574067.parts).length - 1)];
            result_2818574068 = addInt(result_2818574068, (p_2818574091.text).length);
            i_536872670 = addInt(i_536872670, 1);
            if (!(((line_2818574067.parts).length == L_536872671))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2818574068;

}

function contains_2231370107(selection_2231370108, cursor_2231370109) {
  var result_2231370110 = false;

    result_2231370110 = (HEX3CHEX3D_2231370071(selection_2231370108.Field0, cursor_2231370109) && HEX3CHEX3D_2231370071(cursor_2231370109, selection_2231370108.Field1));

  return result_2231370110;

}

function renderTextHighlight_3271557144(panel_3271557145, app_3271557146, startOffset_3271557147, endOffset_3271557148, line_3271557149, startIndex_3271557150, selection_3271557151, selectionClamped_3271557154, part_3271557155, color_3271557156) {
  BeforeRet: {
    var left_3271557157 = 0.0;
    var right_3271557158 = 0.0;
    if ((((startIndex_3271557150 < selectionClamped_3271557154.Field1) && (selectionClamped_3271557154.Field0 < addInt(startIndex_3271557150, (part_3271557155.text).length))) && (0 < (part_3271557155.text).length))) {
    left_3271557157 = (startOffset_3271557147 + ((nimMax(0, subInt(selectionClamped_3271557154.Field0, startIndex_3271557150)) / ((part_3271557155.text).length - 0.0)) * (endOffset_3271557148 - startOffset_3271557147)));
    right_3271557158 = (startOffset_3271557147 + ((nimMin((part_3271557155.text).length, subInt(selectionClamped_3271557154.Field1, startIndex_3271557150)) / ((part_3271557155.text).length - 0.0)) * (endOffset_3271557148 - startOffset_3271557147)));
    }
    else {
    if (((((part_3271557155.text).length == 0) && contains_2231370107(selection_3271557151, {Field0: line_3271557149, Field1: startIndex_3271557150})) && !(isEmpty_2231370100(selection_3271557151)))) {
    left_3271557157 = 0.0;
    right_3271557158 = Math.ceil((charWidth_2315255967(app_3271557146.platform) * 0.5));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3271557145.children.push({anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(0.0, 1.0)}, NTI2332033035), left: left_3271557157, right: right_3271557158, fillBackground: true, backgroundColor: nimCopy(null, color_3271557156, NTI2365587459), lastHierarchyChange: panel_3271557145.lastHierarchyChange, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3271557181(panel_3271557182, app_3271557183, startOffset_3271557184, endOffset_3271557185, line_3271557186, startIndex_3271557187, selections_3271557188, selectionClamped_3271557191, part_3271557192, color_3271557193) {
    Label1: {
      var i_3271557201 = 0;
      var colontmp__536872674 = 0;
      colontmp__536872674 = (selections_3271557188).length;
      var i_536872675 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872675 < colontmp__536872674)) break Label3;
            i_3271557201 = i_536872675;
            renderTextHighlight_3271557144(panel_3271557182, app_3271557183, startOffset_3271557184, endOffset_3271557185, line_3271557186, startIndex_3271557187, selections_3271557188[chckIndx(i_3271557201, 0, (selections_3271557188).length - 1)], selectionClamped_3271557191[chckIndx(i_3271557201, 0, (selectionClamped_3271557191).length - 1)], part_3271557192, color_3271557193);
            i_536872675 = addInt(i_536872675, 1);
          }
      };
    };

  
}

function isSome_3187671898(self_3187671900) {
  var result_3187671901 = false;

    result_3187671901 = self_3187671900.has;

  return result_3187671901;

}

function get_3271558554(self_3271558556, otherwise_3271558557) {
    var Temporary1;

  var result_3271558558 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3187671898(self_3271558556)) {
    Temporary1 = self_3271558556.val;
    }
    else {
    Temporary1 = otherwise_3271558557;
    }
    
    result_3271558558 = nimCopy(result_3271558558, Temporary1, NTI2365587459);

  return result_3271558558;

}

function getCascading_2483028172(table_2483028174, key_2483028175, default_2483028176) {
  var result_2483028177 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2483028220(table_2483028174, key_2483028175)) {
    result_2483028177 = nimCopy(result_2483028177, HEX5BHEX5D_2483028525(table_2483028174, key_2483028175), NTI2483027972);
    break BeforeRet;
    }
    
    var index_2483028604 = nsuRFindStr(key_2483028175, [46], 0, -1);
    if (!((index_2483028604 == -1))) {
    result_2483028177 = nimCopy(result_2483028177, getCascading_2483028172(table_2483028174, HEX5BHEX5D_855639291(key_2483028175, HEX2EHEX2E_805306418(0, subInt(index_2483028604, 1))), default_2483028176), NTI2483027972);
    break BeforeRet;
    }
    
    result_2483028177 = nimCopy(result_2483028177, default_2483028176, NTI2483027972);
    break BeforeRet;
  };

  return result_2483028177;

}

function tokenColor_3271558526(theme_3271558528, name_3271558529, default_3271558530) {
  var result_3271558531 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3271558531 = nimCopy(result_3271558531, get_3271558554(getCascading_2483028172(theme_3271558528.tokenColors, name_3271558529, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2449473569(default_3271558530)), NTI2365587459);
    break BeforeRet;
  };

  return result_3271558531;

}

function createPartWidget_3271557202(text_3271557203, startOffset_3271557204, width_3271557205, color_3271557206, frameIndex_3271557207) {
  var result_3271557208 = null;

    result_3271557208 = ({m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), anchor: {Field0: ({x: 0.0, y: 0.0}), Field1: ({x: 0.0, y: 0.0})}, pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});
    result_3271557208.text = text_3271557203.slice(0);
    result_3271557208.anchor = {Field0: {x: 0, y: 0}, Field1: {x: 0, y: 1}};
    result_3271557208.left = startOffset_3271557204;
    result_3271557208.right = startOffset_3271557204 + width_3271557205;
    result_3271557208.frameIndex = frameIndex_3271557207;
    result_3271557208.foregroundColor = color_3271557206;

  return result_3271557208;

}

function updateWidget_3271557221(self_3271557222, app_3271557223, widget_3271557224, frameIndex_3271557225) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary17;
    var Temporary19;
    var Temporary20;
              
function renderLine_3271558107(i_3271558108, down_3271558109) {
                  
function HEX3Aanonymous_3271558253(s_3271558261) {
                    var result_3271558264 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3271558264 = nimCopy(result_3271558264, normalized_2231370094(s_3271558261), NTI2231369739);

                    return result_3271558264;

                  }
                  
function HEX3Aanonymous_3271558273(s_3271558280) {
                    var result_3271558283 = {Field0: 0, Field1: 0};

                      result_3271558283 = nimCopy(result_3271558283, clampToLine_3271557137(s_3271558280, i_3271558108, len_2818574066(styledText_3271558112)), NTI3271557124);

                    return result_3271558283;

                  }
                  
function HEX3Aanonymous_3271558392(s_3271558400) {
                    var result_3271558403 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3271558403 = nimCopy(result_3271558403, normalized_2231370094(s_3271558400), NTI2231369739);

                    return result_3271558403;

                  }
                  
function HEX3Aanonymous_3271558412(s_3271558419) {
                    var result_3271558422 = {Field0: 0, Field1: 0};

                      result_3271558422 = nimCopy(result_3271558422, clampToLine_3271557137(s_3271558419, i_3271558108, len_2818574066(styledText_3271558112)), NTI3271557124);

                    return result_3271558422;

                  }
                                  var Temporary7;
                          var Temporary8;

                var result_3271558110 = false;

                BeforeRet: {
                  var top_3271558111 = ((subInt(i_3271558108, self_3271557222.previousBaseIndex) * totalLineHeight_3271557227) + self_3271557222.scrollOffset);
                  if ((contentPanel_3271557390.lastBounds.h <= top_3271558111)) {
                  result_3271558110 = !(down_3271558109);
                  break BeforeRet;
                  }
                  
                  if (((top_3271558111 + totalLineHeight_3271557227) <= 0.0)) {
                  result_3271558110 = down_3271558109;
                  break BeforeRet;
                  }
                  
                  var styledText_3271558112 = getStyledText_2818574238(self_3271557222.document, i_3271558108);
                  var selectionsNormalizedOnLine_3271558272 = map_2818572722(getOrDefault_3271558183(selectionsPerLine_3271557509[0], i_3271558108, []), HEX3Aanonymous_3271558253);
                  var selectionsClampedOnLine_3271558315 = map_3271558284(selectionsNormalizedOnLine_3271558272, HEX3Aanonymous_3271558273);
                  var highlightsNormalizedOnLine_3271558411 = map_2818572722(getOrDefault_3271558183(highlightsPerLine_3271557764, i_3271558108, []), HEX3Aanonymous_3271558392);
                  var highlightsClampedOnLine_3271558429 = map_3271558284(highlightsNormalizedOnLine_3271558411, HEX3Aanonymous_3271558412);
                  var lineWidget_3271558430 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 0.0)}, NTI2332033035), left: 1.0, right: -1.0, top: top_3271558111, bottom: (top_3271558111 + totalLineHeight_3271557227), lastHierarchyChange: frameIndex_3271557225, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                  var startOffset_3271558431 = [0.0];
                  var startIndex_3271558432 = 0;
                  Label1: {
                    var partIndex_3271558438 = 0;
                    var part_3271558439 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
                    var i_536872602 = 0;
                    var L_536872603 = (styledText_3271558112.parts).length;
                    Label2: {
                        Label3: while (true) {
                        if (!(i_536872602 < L_536872603)) break Label3;
                          partIndex_3271558438 = i_536872602;
                          part_3271558439 = nimCopy(part_3271558439, styledText_3271558112.parts[chckIndx(i_536872602, 0, (styledText_3271558112.parts).length - 1)], NTI2818572422);
                          var width_3271558440 = ((part_3271558439.text).length * charWidth_3271557228);
                          renderTextHighlight_3271557181(lineWidget_3271558430, app_3271557223, startOffset_3271558431[0], (startOffset_3271558431[0] + width_3271558440), i_3271558108, startIndex_3271558432, selectionsNormalizedOnLine_3271558272, selectionsClampedOnLine_3271558315, part_3271558439, selectionColor_3271557866);
                          renderTextHighlight_3271557181(lineWidget_3271558430, app_3271557223, startOffset_3271558431[0], (startOffset_3271558431[0] + width_3271558440), i_3271558108, startIndex_3271558432, highlightsNormalizedOnLine_3271558411, highlightsClampedOnLine_3271558429, part_3271558439, highlightColor_3271557986);
                          Label4: {
                            var selection_3271558520 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                            var colontmp__536872598 = [];
                            colontmp__536872598 = getOrDefault_3271558183(selectionsPerLine_3271557509[0], i_3271558108, []);
                            var i_536872599 = 0;
                            var L_536872600 = (colontmp__536872598).length;
                            Label5: {
                                Label6: while (true) {
                                if (!(i_536872599 < L_536872600)) break Label6;
                                  selection_3271558520 = colontmp__536872598[chckIndx(i_536872599, 0, (colontmp__536872598).length - 1)];
                                  if ((((selection_3271558520.Field1.Field0 == i_3271558108) && (startIndex_3271558432 <= selection_3271558520.Field1.Field1)) && (selection_3271558520.Field1.Field1 <= addInt(startIndex_3271558432, (part_3271558439.text).length)))) {
                                  if (((part_3271558439.text).length == 0)) {
                                  Temporary7 = 0.0;
                                  }
                                  else {
                                  Temporary7 = ((subInt(selection_3271558520.Field1.Field1, startIndex_3271558432) / (part_3271558439.text).length) * width_3271558440);
                                  }
                                  
                                  var offsetFromPartStart_3271558521 = Temporary7;
                                  lineWidget_3271558430.children.push({anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(0.0, 1.0)}, NTI2332033035), left: (startOffset_3271558431[0] + offsetFromPartStart_3271558521), right: ((startOffset_3271558431[0] + offsetFromPartStart_3271558521) + (cursorWidth_3271557860 * charWidth_3271557228)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3271558106, NTI2365587459), lastHierarchyChange: frameIndex_3271557225, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                                  }
                                  
                                  i_536872599 = addInt(i_536872599, 1);
                                  if (!(((colontmp__536872598).length == L_536872600))) {
                                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          if (((part_3271558439.scope).length == 0)) {
                          Temporary8 = textColor_3271557386;
                          }
                          else {
                          Temporary8 = tokenColor_3271558526(app_3271557223.theme, part_3271558439.scope, rgb_2365587543(255, 200, 200));
                          }
                          
                          var color_3271558566 = nimCopy(null, Temporary8, NTI2365587459);
                          var partWidget_3271558567 = createPartWidget_3271557202(part_3271558439.text, startOffset_3271558431[0], width_3271558440, color_3271558566, frameIndex_3271557225);
                          styledText_3271558112.parts[chckIndx(partIndex_3271558438, 0, (styledText_3271558112.parts).length - 1)].bounds.x = partWidget_3271558567.left;
                          styledText_3271558112.parts[chckIndx(partIndex_3271558438, 0, (styledText_3271558112.parts).length - 1)].bounds.y = lineWidget_3271558430.top;
                          styledText_3271558112.parts[chckIndx(partIndex_3271558438, 0, (styledText_3271558112.parts).length - 1)].bounds.w = (partWidget_3271558567.right - partWidget_3271558567.left);
                          styledText_3271558112.parts[chckIndx(partIndex_3271558438, 0, (styledText_3271558112.parts).length - 1)].bounds.h = (lineWidget_3271558430.bottom - lineWidget_3271558430.top);
                          HEX2BHEX3D_855640304(startOffset_3271558431, 0, width_3271558440);
                          startIndex_3271558432 = addInt(startIndex_3271558432, (part_3271558439.text).length);
                          lineWidget_3271558430.children.push(partWidget_3271558567);;
                          i_536872602 = addInt(i_536872602, 1);
                          if (!(((styledText_3271558112.parts).length == L_536872603))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  self_3271557222.lastRenderedLines.push(styledText_3271558112);;
                  contentPanel_3271557390.children.push(lineWidget_3271558430);;
                  result_3271558110 = true;
                  break BeforeRet;
                };

                return result_3271558110;

              }

  BeforeRet: {
    var lineHeight_3271557226 = lineHeight_2315255962(app_3271557223.platform);
    var totalLineHeight_3271557227 = totalLineHeight_2315255975(app_3271557223.platform);
    var charWidth_3271557228 = charWidth_2315255967(app_3271557223.platform);
    var textColor_3271557386 = color_3271557229(app_3271557223.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    var headerPanel_3271557387 = null;
    var headerPart1Text_3271557388 = null;
    var headerPart2Text_3271557389 = null;
    var contentPanel_3271557390 = null;
    if (((widget_3271557224.children).length == 0)) {
    headerPanel_3271557387 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 0.0)}, NTI2332033035), bottom: totalLineHeight_3271557227, lastHierarchyChange: frameIndex_3271557225, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3271557224.children.push(headerPanel_3271557387);;
    headerPart1Text_3271557388 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(0.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3271557225, foregroundColor: nimCopy(null, textColor_3271557386, NTI2365587459), m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3271557387.children.push(headerPart1Text_3271557388);;
    headerPart2Text_3271557389 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2097152861(1.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), pivot: vec2_2097152861(1.0, 0.0), lastHierarchyChange: frameIndex_3271557225, foregroundColor: nimCopy(null, textColor_3271557386, NTI2365587459), m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3271557387.children.push(headerPart2Text_3271557389);;
    contentPanel_3271557390 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), top: totalLineHeight_3271557227, lastHierarchyChange: frameIndex_3271557225, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3271557390.maskContent = true;
    widget_3271557224.children.push(contentPanel_3271557390);;
    layoutWidget_2332033348(headerPanel_3271557387, widget_3271557224.lastBounds, frameIndex_3271557225, app_3271557223.platform.layoutOptions);
    layoutWidget_2332033348(contentPanel_3271557390, widget_3271557224.lastBounds, frameIndex_3271557225, app_3271557223.platform.layoutOptions);
    }
    else {
      headerPanel_3271557387 = widget_3271557224.children[chckIndx(0, 0, (widget_3271557224.children).length - 1)];
      headerPart1Text_3271557388 = headerPanel_3271557387.children[chckIndx(0, 0, (headerPanel_3271557387.children).length - 1)];
      headerPart2Text_3271557389 = headerPanel_3271557387.children[chckIndx(1, 0, (headerPanel_3271557387.children).length - 1)];
      contentPanel_3271557390 = widget_3271557224.children[chckIndx(1, 0, (widget_3271557224.children).length - 1)];
    }
    
    if (self_3271557222.renderHeader) {
    headerPanel_3271557387.bottom = totalLineHeight_3271557227;
    contentPanel_3271557390.top = totalLineHeight_3271557227;
    if (active_2147483761(self_3271557222)) {
    Temporary1 = color_3271557229(app_3271557223.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(45, 45, 60));
    }
    else {
    Temporary1 = color_3271557229(app_3271557223.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(45, 45, 45));
    }
    
    var color_3271557420 = nimCopy(null, Temporary1, NTI2365587459);
    updateBackgroundColor_2332033102(headerPanel_3271557387, color_3271557420, frameIndex_3271557225);
    if (((self_3271557222.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3271557222.currentMode;
    }
    
    var mode_3271557421 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3271557426 = [mnewString(0)];
    fmtRes_3271557426[0].push.apply(fmtRes_3271557426[0], [32]);;
    formatValue_721420459(fmtRes_3271557426, 0, mode_3271557421, []);
    fmtRes_3271557426[0].push.apply(fmtRes_3271557426[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3271557426, 0, self_3271557222.document.filename, []);
    fmtRes_3271557426[0].push.apply(fmtRes_3271557426[0], [32]);;
    headerPart1Text_3271557388.text = nimCopy(null, fmtRes_3271557426[0], NTI33554449);
    var fmtRes_3271557431 = [mnewString(0)];
    fmtRes_3271557431[0].push.apply(fmtRes_3271557431[0], [32]);;
    formatValue_2818572412(fmtRes_3271557431, 0, selection_2818572792(self_3271557222), []);
    fmtRes_3271557431[0].push.apply(fmtRes_3271557431[0], [32,45,32]);;
    formatValue_2332033380(fmtRes_3271557431, 0, self_3271557222.id, []);
    fmtRes_3271557431[0].push.apply(fmtRes_3271557431[0], [32]);;
    headerPart2Text_3271557389.text = nimCopy(null, fmtRes_3271557431[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2332033110(headerPanel_3271557387, frameIndex_3271557225);
    }
    else {
      headerPanel_3271557387.bottom = 0.0;
      contentPanel_3271557390.top = 0.0;
    }
    
    self_3271557222.lastContentBounds = nimCopy(self_3271557222.lastContentBounds, contentPanel_3271557390.lastBounds, NTI2080374789);
    widget_3271557224.lastHierarchyChange = nimMax(widget_3271557224.lastHierarchyChange, headerPanel_3271557387.lastHierarchyChange);
    if (active_2147483761(self_3271557222)) {
    Temporary3 = color_3271557229(app_3271557223.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2382364675(color_3271557229(app_3271557223.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2332033102(contentPanel_3271557390, Temporary3, frameIndex_3271557225);
      if (changed_2332033349(contentPanel_3271557390, frameIndex_3271557225)) Temporary5 = true; else {        Temporary5 = dirty_2147483683(self_3271557222);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3271557223.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2147483756(self_3271557222);
    if (contentPanel_3271557390.children.length < 0) { for (var i = contentPanel_3271557390.children.length ; i < 0 ; ++i) contentPanel_3271557390.children.push(null); }
               else { contentPanel_3271557390.children.length = 0; };
    Label6: {
      self_3271557222.previousBaseIndex = clamp_3271557464(self_3271557222.previousBaseIndex, HEX2EHEX2E_805306418(0, (self_3271557222.document.lines).length));
      Label7: {
          Label8: while (true) {
          if (!((self_3271557222.scrollOffset < 0.0) && (addInt(self_3271557222.previousBaseIndex, 1) < (self_3271557222.document.lines).length))) break Label8;
            if ((contentPanel_3271557390.lastBounds.h <= (self_3271557222.scrollOffset + totalLineHeight_3271557227))) {
            break Label7;
            }
            
            self_3271557222.previousBaseIndex = addInt(self_3271557222.previousBaseIndex, 1);
            HEX2BHEX3D_855640304(self_3271557222, "scrollOffset", totalLineHeight_3271557227);
          }
      };
      Label9: {
          Label10: while (true) {
          if (!((contentPanel_3271557390.lastBounds.h < self_3271557222.scrollOffset) && (0 < self_3271557222.previousBaseIndex))) break Label10;
            if (((self_3271557222.scrollOffset - lineHeight_3271557226) <= 0.0)) {
            break Label9;
            }
            
            self_3271557222.previousBaseIndex = subInt(self_3271557222.previousBaseIndex, 1);
            HEX2DHEX3D_2818591068(self_3271557222, "scrollOffset", totalLineHeight_3271557227);
          }
      };
    };
    var selectionsPerLine_3271557509 = [initTable_3271557498(32)];
    Label11: {
      var s_3271557513 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872591 = [];
      colontmp__536872591 = selections_2818572789(self_3271557222);
      var i_536872592 = 0;
      var L_536872593 = (colontmp__536872591).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872592 < L_536872593)) break Label13;
            s_3271557513 = colontmp__536872591[chckIndx(i_536872592, 0, (colontmp__536872591).length - 1)];
            var sn_3271557514 = normalized_2231370094(s_3271557513);
            Label14: {
              var line_3271557519 = 0;
              var res_536872589 = sn_3271557514.Field0.Field0;
              Label15: {
                  Label16: while (true) {
                  if (!(res_536872589 <= sn_3271557514.Field1.Field0)) break Label16;
                    line_3271557519 = res_536872589;
                    var Temporary18 = nimCopy(null, s_3271557513, NTI2231369739);
                    (Temporary17 = mgetOrPut_3271557550(selectionsPerLine_3271557509[0], line_3271557519, []), Temporary17)[0][Temporary17[1]].push(Temporary18);;
                    res_536872589 = addInt(res_536872589, 1);
                  }
              };
            };
            i_536872592 = addInt(i_536872592, 1);
            if (!(((colontmp__536872591).length == L_536872593))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3271557764 = nimCopy(null, self_3271557222.searchResults, NTI2818572541);
    var lineNumbers_3271557842 = get_3271557828(self_3271557222.lineNumbers, getOption_3271557777(app_3271557223, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3271557842) {
    case 1:
      Temporary19 = addInt(self_3271557222.previousBaseIndex, ((((contentPanel_3271557390.lastBounds.h - self_3271557222.scrollOffset) / totalLineHeight_3271557227)) | 0));
      break;
    case 2:
      Temporary19 = 99;
      break;
    default: 
      Temporary19 = 0;
      break;
    }
    var maxLineNumber_3271557843 = Temporary19;
    var maxLineNumberLen_3271557844 = addInt((HEX24_369098760(maxLineNumber_3271557843)).length, 1);
    var cursorLine_3271557845 = selection_2818572792(self_3271557222).Field1.Field0;
    if (self_3271557222.lastRenderedLines.length < 0) { for (var i = self_3271557222.lastRenderedLines.length ; i < 0 ; ++i) self_3271557222.lastRenderedLines.push(null); }
               else { self_3271557222.lastRenderedLines.length = 0; };
    var isWide_3271557859 = getOption_2818582801(app_3271557223, getContextWithMode_2818582795(self_3271557222, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    if (isWide_3271557859) {
    Temporary20 = 1.0;
    }
    else {
    Temporary20 = 0.2;
    }
    
    var cursorWidth_3271557860 = Temporary20;
    var selectionColor_3271557866 = color_3271557229(app_3271557223.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(200, 200, 200));
    var highlightColor_3271557986 = color_3271557871(app_3271557223.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2365587543(200, 200, 200));
    var cursorColor_3271558106 = color_3271557991(app_3271557223.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2365587557(255, 255, 255, 127));
    Label21: {
      var i_3271558604 = 0;
      var colontmp__536872605 = 0;
      colontmp__536872605 = (self_3271557222.document.lines).length - 1;
      var res_536872606 = self_3271557222.previousBaseIndex;
      Label22: {
          Label23: while (true) {
          if (!(res_536872606 <= colontmp__536872605)) break Label23;
            i_3271558604 = res_536872606;
            if (!(renderLine_3271558107(i_3271558604, true))) {
            break Label21;
            }
            
            res_536872606 = addInt(res_536872606, 1);
          }
      };
    };
    Label24: {
      var k_3271558609 = 0;
      var res_536872609 = 1;
      Label25: {
          Label26: while (true) {
          if (!(res_536872609 <= self_3271557222.previousBaseIndex)) break Label26;
            k_3271558609 = res_536872609;
            var i_3271558610 = subInt(self_3271557222.previousBaseIndex, k_3271558609);
            if (!(renderLine_3271558107(i_3271558610, false))) {
            break Label24;
            }
            
            res_536872609 = addInt(res_536872609, 1);
          }
      };
    };
    contentPanel_3271557390.lastHierarchyChange = frameIndex_3271557225;
    widget_3271557224.lastHierarchyChange = nimMax(widget_3271557224.lastHierarchyChange, contentPanel_3271557390.lastHierarchyChange);
    self_3271557222.lastContentBounds = nimCopy(self_3271557222.lastContentBounds, contentPanel_3271557390.lastBounds, NTI2080374789);
  };

  
}

function updateWidget_3254779909(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913) {
  
}

function updateWidget_3254779914(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913) {
    chckNilDisp(self_3254779910);
    if (isObj(self_3254779910.m_type, NTI2818572510)) {
    updateWidget_3271557221(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913);
    }
    else {
    if (isObj(self_3254779910.m_type, NTI2147483652)) {
    updateWidget_3254779909(self_3254779910, app_3254779911, widget_3254779912, frameIndex_3254779913);
    }
    }

  
}

function dirty_2264924178(self_2264924179) {
  var result_2264924180 = false;

    result_2264924180 = self_2264924179.mDirty;

  return result_2264924180;

}

function resetDirty_2264924208(self_2264924209) {
    self_2264924209.mDirty = false;

  
}

function pop_3288334453(s_3288334455, s_3288334455_Idx) {
  var result_3288334456 = null;

    var L_3288334460 = subInt((s_3288334455[s_3288334455_Idx]).length, 1);
    result_3288334456 = s_3288334455[s_3288334455_Idx][chckIndx(L_3288334460, 0, (s_3288334455[s_3288334455_Idx]).length - 1)];
    if (s_3288334455[s_3288334455_Idx].length < chckRange(L_3288334460, 0, 2147483647)) { for (var i = s_3288334455[s_3288334455_Idx].length ; i < chckRange(L_3288334460, 0, 2147483647) ; ++i) s_3288334455[s_3288334455_Idx].push(null); }
               else { s_3288334455[s_3288334455_Idx].length = chckRange(L_3288334460, 0, 2147483647); };

  return result_3288334456;

}

function updateWidget_3288334379(self_3288334380, app_3288334381, widget_3288334382, frameIndex_3288334383) {
    var Temporary1;

    var textColor_3288334389 = color_3271557229(app_3288334381.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((widget_3288334382.children).length == 0)) {
    var text_3288334393 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3288334383, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3288334382.children.push(text_3288334393);;
    Temporary1 = text_3288334393;
    }
    else {
    Temporary1 = widget_3288334382.children[chckIndx(0, 0, (widget_3288334382.children).length - 1)];
    }
    
    var text_3288334398 = Temporary1;
    text_3288334398.text = nimCopy(null, self_3288334380.path, NTI33554449);
    updateForegroundColor_2332033088(text_3288334398, textColor_3288334389, frameIndex_3288334383);
    updateLastHierarchyChangeFromChildren_2332033110(text_3288334398, -1);

  
}

function updateWidget_3288334359(self_3288334360, app_3288334361, widget_3288334362, frameIndex_3288334363) {
    var Temporary1;

    var textColor_3288334369 = color_3271557229(app_3288334361.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((widget_3288334362.children).length == 0)) {
    var text_3288334373 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3288334363, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3288334362.children.push(text_3288334373);;
    Temporary1 = text_3288334373;
    }
    else {
    Temporary1 = widget_3288334362.children[chckIndx(0, 0, (widget_3288334362.children).length - 1)];
    }
    
    var text_3288334378 = Temporary1;
    text_3288334378.text = nimCopy(null, self_3288334360.path, NTI33554449);
    updateForegroundColor_2332033088(text_3288334378, textColor_3288334369, frameIndex_3288334363);
    updateLastHierarchyChangeFromChildren_2332033110(text_3288334378, -1);

  
}

function updateWidget_3288334353(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357) {
  
}

function updateWidget_3288334358(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357) {
    chckNilDisp(self_3288334354);
    if (isObj(self_3288334354.m_type, NTI1291848510)) {
    updateWidget_3288334379(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357);
    }
    else {
    if (isObj(self_3288334354.m_type, NTI1291848512)) {
    updateWidget_3288334359(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357);
    }
    else {
    if (isObj(self_3288334354.m_type, NTI3221225480)) {
    updateWidget_3288334353(self_3288334354, app_3288334355, widget_3288334356, frameIndex_3288334357);
    }
    }}

  
}

function updateWidget_3288334399(self_3288334400, app_3288334401, widget_3288334402, frameIndex_3288334403) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3288334404 = lineHeight_2315255962(app_3288334401.platform);
    var totalLineHeight_3288334405 = totalLineHeight_2315255975(app_3288334401.platform);
    var charWidth_3288334406 = charWidth_2315255967(app_3288334401.platform);
    var textColor_3288334412 = color_3271557229(app_3288334401.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    var headerPanel_3288334413 = null;
    var contentPanel_3288334414 = null;
    if (((widget_3288334402.children).length == 0)) {
    headerPanel_3288334413 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 0.0)}, NTI2332033035), bottom: totalLineHeight_3288334405, lastHierarchyChange: frameIndex_3288334403, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3288334402.children.push(headerPanel_3288334413);;
    contentPanel_3288334414 = {anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 1.0)}, NTI2332033035), top: totalLineHeight_3288334405, lastHierarchyChange: frameIndex_3288334403, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3288334414.maskContent = true;
    widget_3288334402.children.push(contentPanel_3288334414);;
    layoutWidget_2332033348(headerPanel_3288334413, widget_3288334402.lastBounds, frameIndex_3288334403, app_3288334401.platform.layoutOptions);
    layoutWidget_2332033348(contentPanel_3288334414, widget_3288334402.lastBounds, frameIndex_3288334403, app_3288334401.platform.layoutOptions);
    }
    else {
      headerPanel_3288334413 = widget_3288334402.children[chckIndx(0, 0, (widget_3288334402.children).length - 1)];
      contentPanel_3288334414 = widget_3288334402.children[chckIndx(1, 0, (widget_3288334402.children).length - 1)];
    }
    
    updateWidget_3254779914(self_3288334400.textEditor, app_3288334401, headerPanel_3288334413, frameIndex_3288334403);
    updateLastHierarchyChangeFromChildren_2332033110(headerPanel_3288334413, frameIndex_3288334403);
    widget_3288334402.lastHierarchyChange = nimMax(widget_3288334402.lastHierarchyChange, headerPanel_3288334413.lastHierarchyChange);
    updateBackgroundColor_2332033102(contentPanel_3288334414, color_3271557229(app_3288334401.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 25)), frameIndex_3288334403);
      if (changed_2332033349(contentPanel_3288334414, frameIndex_3288334403)) Temporary2 = true; else {        Temporary2 = dirty_2264924178(self_3288334400);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3288334401.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2264924208(self_3288334400);
    var maxLineCount_3288334431 = ((Math.floor((widget_3288334402.lastBounds.h / totalLineHeight_3288334405))) | 0);
    var targetNumRenderedItems_3288334435 = nimMin(maxLineCount_3288334431, (self_3288334400.completions).length);
    var lastRenderedIndex_3288334439 = nimMin(subInt(addInt(self_3288334400.scrollOffset, targetNumRenderedItems_3288334435), 1), (self_3288334400.completions).length - 1);
    if ((self_3288334400.selected < self_3288334400.scrollOffset)) {
    self_3288334400.scrollOffset = self_3288334400.selected;
    lastRenderedIndex_3288334439 = nimMin(subInt(addInt(self_3288334400.scrollOffset, targetNumRenderedItems_3288334435), 1), (self_3288334400.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3288334439 < self_3288334400.selected)) {
    self_3288334400.scrollOffset = nimMax(addInt(subInt(self_3288334400.selected, targetNumRenderedItems_3288334435), 1), 0);
    lastRenderedIndex_3288334439 = nimMin(subInt(addInt(self_3288334400.scrollOffset, targetNumRenderedItems_3288334435), 1), (self_3288334400.completions).length - 1);
    }
    
    var numRenderedItems_3288334446 = nimMax(addInt(subInt(lastRenderedIndex_3288334439, self_3288334400.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3288334446 < (contentPanel_3288334414.children).length)) break Label4;
          var _ = pop_3288334453(contentPanel_3288334414, "children");
        }
    };
    Label5: {
        Label6: while (true) {
        if (!((contentPanel_3288334414.children).length < numRenderedItems_3288334446)) break Label6;
          contentPanel_3288334414.children.push({anchor: nimCopy(null, {Field0: vec2_2097152861(0.0, 0.0), Field1: vec2_2097152861(1.0, 0.0)}, NTI2332033035), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({x: 0.0, y: 0.0}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});;
        }
    };
    var selectionColor_3288334477 = color_3271557229(app_3288334401.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(200, 200, 200));
    var top_3288334478 = 0.0;
    var widgetIndex_3288334479 = 0;
    Label7: {
      var completionIndex_3288334484 = 0;
      var res_536872680 = self_3288334400.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536872680 <= lastRenderedIndex_3288334439)) break Label9;
            completionIndex_3288334484 = res_536872680;
            try {
            var lineWidget_3288334490 = contentPanel_3288334414.children[chckIndx(widgetIndex_3288334479, 0, (contentPanel_3288334414.children).length - 1)];
            lineWidget_3288334490.top = top_3288334478;
            lineWidget_3288334490.bottom = (top_3288334478 + totalLineHeight_3288334405);
            lineWidget_3288334490.lastHierarchyChange = frameIndex_3288334403;
            if ((completionIndex_3288334484 == self_3288334400.selected)) {
            lineWidget_3288334490.fillBackground = true;
            updateBackgroundColor_2332033102(lineWidget_3288334490, selectionColor_3288334477, frameIndex_3288334403);
            }
            else {
              lineWidget_3288334490.fillBackground = false;
              updateBackgroundColor_2332033102(lineWidget_3288334490, color_2365587528(0.0, 0.0, 0.0, 1.0), frameIndex_3288334403);
            }
            
            updateWidget_3288334358(self_3288334400.completions[chckIndx(completionIndex_3288334484, 0, (self_3288334400.completions).length - 1)], app_3288334401, lineWidget_3288334490, frameIndex_3288334403);
            top_3288334478 = lineWidget_3288334490.bottom;
            res_536872680 = addInt(res_536872680, 1);
            } finally {
            widgetIndex_3288334479 = addInt(widgetIndex_3288334479, 1);
            }
          }
      };
    };
    contentPanel_3288334414.lastHierarchyChange = frameIndex_3288334403;
    widget_3288334402.lastHierarchyChange = nimMax(widget_3288334402.lastHierarchyChange, contentPanel_3288334414.lastHierarchyChange);
  };

  
}

function updateWidget_3254779915(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919) {
  
}

function updateWidget_3254779920(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919) {
    chckNilDisp(self_3254779916);
    if (isObj(self_3254779916.m_type, NTI3221225494)) {
    updateWidget_3288334399(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919);
    }
    else {
    if (isObj(self_3254779916.m_type, NTI2264924164)) {
    updateWidget_3254779915(self_3254779916, app_3254779917, widget_3254779918, frameIndex_3254779919);
    }
    }

  
}
