/* Generated by the Nim Compiler v1.9.1 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI2365587461 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3254779908 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903954 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903953 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868904033 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291846985 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2063597631 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2063597572 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2063597571 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291847196 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2684354564 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI855639351 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2332033636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448371 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116841 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801806267 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801806466 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483731 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146948 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902460333 = {size: 0, kind: 23, base: null, node: null, finalizer: null};
var NTI2902460332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345257 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345050 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344977 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345191 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345116 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344906 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344831 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344729 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344528 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121880 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121813 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121734 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217736 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182375 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182353 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182532 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182380 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182360 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182411 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182410 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1191182409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191182374 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1191182397 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182364 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182354 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1191182385 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182361 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182389 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182362 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182393 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182363 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI1191182369 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217763 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936014314 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2936020129 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801799838 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033044 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033043 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033042 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033041 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033040 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033037 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033036 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033039 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2332033038 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2483029956 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028483 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1627391161 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2785017860 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845662 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845664 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845663 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627390088 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291850311 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2348810397 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2365587477 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291849393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291849399 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2248146958 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3288334429 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334426 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3288334423 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334401 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3288334409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334406 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3288334418 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334373 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334380 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334377 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3288334391 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334367 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3288334357 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3288334356 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334355 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3288334349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3288334343 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068509 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068508 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068507 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068506 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068505 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068504 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068503 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068502 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068501 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068500 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068499 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068498 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068493 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068491 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068490 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068489 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068488 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068485 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068558 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068446 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068605 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068602 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1275068601 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068604 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1275068482 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068551 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068440 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068540 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068552 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068441 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068539 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068538 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068557 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068445 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068537 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068536 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068553 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068442 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068535 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068534 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068433 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068431 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1275068533 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068532 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068432 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068530 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068543 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068554 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068443 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068542 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068556 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1275068555 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068444 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068527 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068430 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1275068541 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1275068434 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3288334342 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291854630 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291854637 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854635 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291854643 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014338 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014337 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014335 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014333 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014332 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014331 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014330 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014323 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014321 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014315 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291853337 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291848518 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291848512 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291848510 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1442840583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801805821 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291848455 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448262 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3204448440 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1694498825 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498863 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554448 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1644167173 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1660944393 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1644167172 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498822 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498830 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1694498821 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498819 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498820 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1694498823 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944409 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944407 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944406 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944399 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944398 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944397 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1660944394 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1660944862 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1811939335 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939334 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1811939336 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448289 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3204448279 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448283 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448281 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448278 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448277 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448276 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3204448263 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3204448259 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3204448275 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3204448274 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1694498824 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2046821074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845645 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845644 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845643 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667577354 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577353 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2701131794 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2701131791 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2701131788 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2701131780 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2986376120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986376073 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986376026 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375979 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375846 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375705 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375605 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375552 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375499 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986375446 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936023918 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230680 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230751 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554441 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI2365587460 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116618 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116616 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116615 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3154116614 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3154116613 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014309 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014308 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014310 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2936014307 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014302 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014299 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014286 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936014285 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795278 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3154116612 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936015605 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969567372 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795334 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795333 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795332 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795274 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795277 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795276 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795275 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795331 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369743 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2801795323 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795313 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795310 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795287 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795285 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795206 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845734 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845728 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1291845727 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845726 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845720 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2264924164 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2264924163 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845714 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845712 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845709 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845706 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027991 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI2483027980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028021 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028018 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028006 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483028003 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2483028000 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027992 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027973 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845660 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845657 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845641 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1291845637 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2046820367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2046820366 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2013265952 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI2013265986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265980 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265953 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265989 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265988 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265954 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2013265955 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820365 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820364 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2231369731 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2147483652 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2147483651 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2130706435 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845636 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845635 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845698 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2650800132 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2650800131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2667577352 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2667577348 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2667577351 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2667577350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2667577347 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1174405131 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845696 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845693 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845690 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162126 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1795162123 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1795162120 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820358 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2046820357 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1291845681 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845678 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1291845675 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033035 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2332033034 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2332033027 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2332033045 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2332033033 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483666 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2147483665 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2147483664 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2147483658 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255891 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255890 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255889 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255883 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255874 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255873 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255872 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255866 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255852 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255851 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255850 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255844 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255827 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2315255826 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255825 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2315255819 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2315255812 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2315255811 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2231369745 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1291845666 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1291845665 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795279 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI503316776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638530 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI855638541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2130706436 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903944 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903943 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903946 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903945 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903940 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2868903939 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903942 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903941 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795260 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795259 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795256 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2801795255 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795254 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795248 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795239 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2801795238 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795237 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795231 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795222 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2801795221 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795220 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795214 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795207 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2936018205 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936018200 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936017298 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711531 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711498 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1979711504 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014311 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2936014312 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3154116626 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795208 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568569 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344514 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344517 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344538 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344510 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014305 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014155 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2936014158 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936014156 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2936017906 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2936014334 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344587 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344590 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344611 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344619 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344583 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2936015265 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2365587459 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344793 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344790 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344779 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344773 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986373631 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345318 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345321 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345342 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345350 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345370 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230626 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3070230624 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230621 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230618 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230610 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230560 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345314 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103785172 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3103786593 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103786490 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3103786020 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3103786118 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3103786054 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1560281203 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3103785143 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070231781 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2097152389 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI2097152387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230558 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230608 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230605 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230602 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230582 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230587 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2483027971 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230567 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI3070230572 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230564 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230563 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230627 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554446 = {size: 0,kind: 37,base: null,node: null,finalizer: null};
var NTI2080374789 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230555 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230562 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230557 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230559 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986369034 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345243 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345246 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345267 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345275 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345295 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345239 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3120563186 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345177 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345180 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345201 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345209 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345173 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345102 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345105 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345126 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345134 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345154 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345098 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345036 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345039 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986345060 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345068 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231493 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986345032 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986409679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231514 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969567351 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231502 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231499 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070231496 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231437 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344963 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344987 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344995 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344959 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344651 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344654 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344675 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344683 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070231167 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013268507 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344892 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344895 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344916 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344924 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344888 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986389396 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986408772 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344715 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344718 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344739 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344747 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344566 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1191183280 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230551 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230550 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230549 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344711 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230977 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121997 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230983 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344817 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344820 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344841 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2986344849 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344813 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344796 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344465 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986344462 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344452 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344784 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230536 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230546 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230538 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070231688 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986387392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230537 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230838 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230541 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3070230540 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230532 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2969567239 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969567235 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2969567238 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2969567236 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3070230547 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI3070230535 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3070230534 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3070230531 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI3003121866 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121869 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121890 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121898 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121848 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121862 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121799 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121802 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121823 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121831 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121688 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121795 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121720 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121744 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI3003121752 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121772 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121716 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121694 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2281701407 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344468 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344451 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344456 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2969568321 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI3003121691 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI3003121689 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3003121692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2986344476 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2986345408 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2181038083 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801805759 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801805758 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458411 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2902458414 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458446 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458397 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458409 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458406 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458403 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458377 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI2902458392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458389 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2902458386 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2902458374 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2902458373 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801795266 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795316 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2835349511 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795293 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801804584 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795379 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389974 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389972 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389969 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389966 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554445 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI184549379 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1627389957 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1627389956 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI134217753 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2768240657 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801799761 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801799729 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801799687 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795304 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1157627924 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2801797956 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801798026 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801798031 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369858 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369867 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369787 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33555181 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI184549387 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI2852126724 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2852126723 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2835349507 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801801037 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801797410 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801800521 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801797771 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795080 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795079 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795076 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2801797439 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795075 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2868903949 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI2868903960 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2868903950 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306392 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2801795393 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795404 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795573 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2801795458 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369747 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2231369739 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2231369737 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI855638433 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1627389955 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI134217750 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2046820387 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1325400067 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI2013265971 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265968 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265965 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2013265951 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI788536198 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI788529168 = {size: 0,kind: 34,base: null,node: null,finalizer: null};
var NTI788536206 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI2013265949 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI2013265950 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI134217747 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555177 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217746 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554435 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187470 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1040187476 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI2499805188 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI2516582404 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1191182401 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1191182365 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 35,base: null,node: null,finalizer: null};
var NTI1191182368 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI134217749 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217751 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217743 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217741 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217742 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555179 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554450 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555178 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555175 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555176 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI134217745 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643097 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555171 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554449 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI1174405133 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405123 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI1174405134 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1174405132 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI704643084 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643078 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI1174405123 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1174405123, name: "lvlAll", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1174405123, name: "lvlDebug", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1174405123, name: "lvlInfo", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1174405123, name: "lvlNotice", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1174405123, name: "lvlWarn", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1174405123, name: "lvlError", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1174405123, name: "lvlFatal", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1174405123, name: "lvlNone", len: 0, sons: null}}};
NTI1174405123.node = NNI1174405123;
var NNI1174405134 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "useStderr", len: 0, typ: NTI33554466, name: "useStderr", sons: null}, 
{kind: 1, offset: "flushThreshold", len: 0, typ: NTI1174405123, name: "flushThreshold", sons: null}]};
NTI1174405134.node = NNI1174405134;
var NNI1174405133 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "levelThreshold", len: 0, typ: NTI1174405123, name: "levelThreshold", sons: null}, 
{kind: 1, offset: "fmtStr", len: 0, typ: NTI33554449, name: "fmtStr", sons: null}]};
NTI1174405133.node = NNI1174405133;
var NNI33555171 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555171.node = NNI33555171;
NTI1174405133.base = NTI33555171;
NTI1174405134.base = NTI1174405133;
NTI1174405132.base = NTI1174405134;
var NNI704643084 = {kind: 1, offset: "val", len: 0, typ: NTI1174405132, name: "val", sons: null};
NTI704643084.node = NNI704643084;
var NNI704643076 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI704643076.node = NNI704643076;
NTI704643076.base = NTI1174405133;
NTI704643075.base = NTI704643076;
var NNI704643097 = {kind: 1, offset: "val", len: 0, typ: NTI704643075, name: "val", sons: null};
NTI704643097.node = NNI704643097;
var NNI704643078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "consoleLogger", len: 0, typ: NTI704643084, name: "consoleLogger", sons: null}, 
{kind: 1, offset: "fileLogger", len: 0, typ: NTI704643097, name: "fileLogger", sons: null}]};
NTI704643078.node = NNI704643078;
NTI704643078.base = NTI1174405133;
var NNI134217745 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217745.node = NNI134217745;
var NNI33555176 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555176.node = NNI33555176;
NTI33555178.base = NTI33555175;
NTI33555179.base = NTI33555175;
var NNI33555175 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555178, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554449, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555179, name: "up", sons: null}]};
NTI33555175.node = NNI33555175;
NTI33555175.base = NTI33555171;
NTI33555176.base = NTI33555175;
NTI134217745.base = NTI33555176;
var NNI134217742 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217742.node = NNI134217742;
var NNI134217741 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217741.node = NNI134217741;
NTI134217741.base = NTI33555176;
NTI134217742.base = NTI134217741;
var NNI134217743 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217743.node = NNI134217743;
NTI134217743.base = NTI134217741;
var NNI134217751 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217751.node = NNI134217751;
NTI134217751.base = NTI33555176;
var NNI134217749 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217749.node = NNI134217749;
NTI134217749.base = NTI33555176;
NTI1191182365.base = NTI1191182401;
var NNI1191182368 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182368.node = NNI1191182368;
var NNI2516582404 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2516582404.node = NNI2516582404;
var NNI2499805188 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2499805188.node = NNI2499805188;
NTI2499805188.base = NTI33555171;
NTI2516582404.base = NTI2499805188;
var NNI1040187476 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI1040187470, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI1040187476.node = NNI1040187476;
var NNI134217746 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217746.node = NNI134217746;
var NNI33555177 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555177.node = NNI33555177;
NTI33555177.base = NTI33555175;
NTI134217746.base = NTI33555177;
var NNI134217747 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217747.node = NNI134217747;
NTI134217747.base = NTI134217746;
var NNI2013265949 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI2013265949, name: "Control", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2013265949, name: "Shift", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2013265949, name: "Alt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2013265949, name: "Super", len: 0, sons: null}}};
NTI2013265949.node = NNI2013265949;
NTI2013265950.base = NTI2013265949;
NTI788536206.base = NTI788529168;
NTI788536198.base = NTI788529168;
var NNI2013265971 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265950, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI2013265971.node = NNI2013265971;
NTI2013265968.base = NTI2013265971;
var NNI2013265965 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265968, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265965.node = NNI2013265965;
var NNI2013265951 = {kind: 1, offset: "next", len: 0, typ: NTI2013265965, name: "next", sons: null};
NTI2013265951.node = NNI2013265951;
var NNI2046820387 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2046820387.node = NNI2046820387;
var NNI134217750 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217750.node = NNI134217750;
NTI134217750.base = NTI33555176;
var NNI1627389955 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1627389955, name: "JNull", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1627389955, name: "JBool", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1627389955, name: "JInt", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1627389955, name: "JFloat", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1627389955, name: "JString", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1627389955, name: "JObject", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1627389955, name: "JArray", len: 0, sons: null}}};
NTI1627389955.node = NNI1627389955;
NTI855638433.base = NTI33554449;
var NNI2231369737 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2231369737.node = NNI2231369737;
var NNI2231369739 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2231369739.node = NNI2231369739;
NTI2231369747.base = NTI2231369739;
NTI2801795458.base = NTI2231369747;
NTI2801795573.base = NTI2231369739;
NTI2801795404.base = NTI2231369739;
NTI2801795393.base = NTI2231369739;
var NNI805306392 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI805306392.node = NNI805306392;
var NNI2868903950 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "row", len: 0, typ: NTI33554435, name: "row", sons: null}, 
{kind: 1, offset: "column", len: 0, typ: NTI33554435, name: "column", sons: null}]};
NTI2868903950.node = NNI2868903950;
NTI2868903950.base = NTI33555171;
NTI2868903949.base = NTI2868903950;
var NNI2868903960 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "startIndex", len: 0, typ: NTI33554435, name: "startIndex", sons: null}, 
{kind: 1, offset: "oldEndIndex", len: 0, typ: NTI33554435, name: "oldEndIndex", sons: null}, 
{kind: 1, offset: "newEndIndex", len: 0, typ: NTI33554435, name: "newEndIndex", sons: null}, 
{kind: 1, offset: "startPosition", len: 0, typ: NTI2868903949, name: "startPosition", sons: null}, 
{kind: 1, offset: "oldEndPosition", len: 0, typ: NTI2868903949, name: "oldEndPosition", sons: null}, 
{kind: 1, offset: "newEndPosition", len: 0, typ: NTI2868903949, name: "newEndPosition", sons: null}]};
NTI2868903960.node = NNI2868903960;
NTI2868903960.base = NTI33555171;
var NNI2801795075 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2801795075, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2801795075, name: "Insert", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2801795075, name: "Nested", len: 0, sons: null}}};
NTI2801795075.node = NNI2801795075;
NTI2801795079.base = NTI2231369739;
NTI2801795080.base = NTI2801795076;
var NNI2801795078 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "oldSelection", len: 0, typ: NTI2801795079, name: "oldSelection", sons: null}, 
{kind: 3, offset: "kind", len: 3, typ: NTI2801795075, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "selection", len: 0, typ: NTI2231369739, name: "selection", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "cursor", len: 0, typ: NTI2231369737, name: "cursor", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]}], 
[setConstr(2), {kind: 1, offset: "children", len: 0, typ: NTI2801795080, name: "children", sons: null}]]}]};
NTI2801795078.node = NNI2801795078;
NTI2801795076.base = NTI2801795078;
NTI2801797439.base = NTI2801795076;
NTI2801797771.base = NTI2231369739;
NTI2801800521.base = NTI2231369739;
NTI2801797410.base = NTI2231369739;
NTI2801801037.base = NTI2231369739;
var NNI2852126724 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "flags", len: 0, typ: NTI33554450, name: "flags", sons: null}, 
{kind: 1, offset: "dotAll", len: 0, typ: NTI33554466, name: "dotAll", sons: null}, 
{kind: 1, offset: "global", len: 0, typ: NTI33554466, name: "global", sons: null}, 
{kind: 1, offset: "ignoreCase", len: 0, typ: NTI33554466, name: "ignoreCase", sons: null}, 
{kind: 1, offset: "multiline", len: 0, typ: NTI33554466, name: "multiline", sons: null}, 
{kind: 1, offset: "source", len: 0, typ: NTI33554450, name: "source", sons: null}, 
{kind: 1, offset: "sticky", len: 0, typ: NTI33554466, name: "sticky", sons: null}, 
{kind: 1, offset: "unicode", len: 0, typ: NTI33554466, name: "unicode", sons: null}, 
{kind: 1, offset: "lastIndex", len: 0, typ: NTI184549387, name: "lastIndex", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI33554450, name: "input", sons: null}, 
{kind: 1, offset: "lastMatch", len: 0, typ: NTI33554450, name: "lastMatch", sons: null}, 
{kind: 1, offset: "lastParen", len: 0, typ: NTI33554450, name: "lastParen", sons: null}, 
{kind: 1, offset: "leftContext", len: 0, typ: NTI33554450, name: "leftContext", sons: null}, 
{kind: 1, offset: "rightContext", len: 0, typ: NTI33554450, name: "rightContext", sons: null}, 
{kind: 1, offset: "hasIndices", len: 0, typ: NTI33554466, name: "hasIndices", sons: null}]};
NTI2852126724.node = NNI2852126724;
var NNI33555181 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555181.node = NNI33555181;
NTI33555181.base = NTI33555171;
NTI2852126724.base = NTI33555181;
NTI2852126723.base = NTI2852126724;
var NNI2835349507 = {kind: 1, offset: "impl", len: 0, typ: NTI2852126723, name: "impl", sons: null};
NTI2835349507.node = NNI2835349507;
NTI2231369787.base = NTI2231369739;
NTI2231369867.base = NTI2231369739;
NTI2231369858.base = NTI2231369739;
NTI2801798026.base = NTI2231369739;
var NNI2801798031 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2801798026, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801798031.node = NNI2801798031;
NTI2801797956.base = NTI2231369739;
var NNI1157627924 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1157627924.node = NNI1157627924;
NTI1157627924.base = NTI33555176;
NTI2801795304.base = NTI2231369739;
var NNI2801799687 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2801799687.node = NNI2801799687;
var NNI2801799729 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2801799729.node = NNI2801799729;
var NNI2801799761 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2231369737, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2801799761.node = NNI2801799761;
var NNI2768240657 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2768240657.node = NNI2768240657;
var NNI134217753 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217753.node = NNI134217753;
NTI134217753.base = NTI33555176;
var NNI1627389972 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI1627389956, name: "Field3", sons: null}]};
NTI1627389972.node = NNI1627389972;
NTI1627389969.base = NTI1627389972;
var NNI1627389966 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1627389969, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI1627389966.node = NNI1627389966;
NTI1627389974.base = NTI1627389956;
var NNI1627389957 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isUnquoted", len: 0, typ: NTI33554466, name: "isUnquoted", sons: null}, 
{kind: 3, offset: "kind", len: 7, typ: NTI1627389955, name: "kind", sons: [[setConstr(4), {kind: 1, offset: "str", len: 0, typ: NTI33554449, name: "str", sons: null}], 
[setConstr(2), {kind: 1, offset: "num", len: 0, typ: NTI184549379, name: "num", sons: null}], 
[setConstr(3), {kind: 1, offset: "fnum", len: 0, typ: NTI33554445, name: "fnum", sons: null}], 
[setConstr(1), {kind: 1, offset: "bval", len: 0, typ: NTI33554466, name: "bval", sons: null}], 
[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "fields", len: 0, typ: NTI1627389966, name: "fields", sons: null}], 
[setConstr(6), {kind: 1, offset: "elems", len: 0, typ: NTI1627389974, name: "elems", sons: null}]]}]};
NTI1627389957.node = NNI1627389957;
NTI1627389956.base = NTI1627389957;
NTI2801795379.base = NTI2231369739;
NTI2801804584.base = NTI2231369739;
var NNI2801795293 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2835349507, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801795293.node = NNI2801795293;
var NNI2835349511 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2835349511.node = NNI2835349511;
var NNI2801795316 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2801795304, name: "Field2", sons: null}]};
NTI2801795316.node = NNI2801795316;
var NNI2902458392 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2902458377, name: "Field2", sons: null}]};
NTI2902458392.node = NNI2902458392;
NTI2902458389.base = NTI2902458392;
var NNI2902458386 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2902458389, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2902458386.node = NNI2902458386;
NTI2902458397.base = NTI33554435;
var NNI2902458409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2902458397, name: "Field2", sons: null}]};
NTI2902458409.node = NNI2902458409;
NTI2902458406.base = NTI2902458409;
var NNI2902458403 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2902458406, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2902458403.node = NNI2902458403;
var NNI2902458374 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onRequestSave", len: 0, typ: NTI2902458386, name: "onRequestSave", sons: null}, 
{kind: 1, offset: "onRequestSaveIndex", len: 0, typ: NTI2902458403, name: "onRequestSaveIndex", sons: null}]};
NTI2902458374.node = NNI2902458374;
NTI2902458374.base = NTI33555171;
NTI2902458373.base = NTI2902458374;
var NNI2801795266 = {kind: 1, offset: "val", len: 0, typ: NTI2902458373, name: "val", sons: null};
NTI2801795266.node = NNI2801795266;
var NNI2902458411 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2902458411, name: "Unknown", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2902458411, name: "Procedure", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2902458411, name: "Function", len: 0, sons: null}}};
NTI2902458411.node = NNI2902458411;
var NNI2902458414 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "location", len: 0, typ: NTI2231369737, name: "location", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2902458411, name: "kind", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "doc", len: 0, typ: NTI33554449, name: "doc", sons: null}]};
NTI2902458414.node = NNI2902458414;
NTI2902458446.base = NTI2902458414;
var NNI2801805759 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2801805759.node = NNI2801805759;
var NNI2801805758 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2801805759, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369737, name: "Field1", sons: null}]};
NTI2801805758.node = NNI2801805758;
var NNI2181038083 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "padding", len: 0, typ: NTI33554438, name: "padding", sons: null}, 
{kind: 1, offset: "time", len: 0, typ: NTI33554438, name: "time", sons: null}, 
{kind: 1, offset: "fuzz", len: 0, typ: NTI33554438, name: "fuzz", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554438, name: "count", sons: null}]};
NTI2181038083.node = NNI2181038083;
var NNI3003121689 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3003121689.node = NNI3003121689;
var NNI3003121692 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121691, name: "Field1", sons: null}]};
NTI3003121692.node = NNI3003121692;
NTI2986344476.base = NTI3003121692;
NTI2986345408.base = NTI2986344476;
NTI2969568321.base = NTI33554435;
var NNI2986344451 = {kind: 1, offset: "message", len: 0, typ: NTI33554449, name: "message", sons: null};
NTI2986344451.node = NNI2986344451;
NTI2986344456.base = NTI2986344451;
var NNI2986344468 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344456, name: "Field2", sons: null}]};
NTI2986344468.node = NNI2986344468;
var NNI2281701407 = {kind: 1, offset: "start", len: 0, typ: NTI33554439, name: "start", sons: null};
NTI2281701407.node = NNI2281701407;
var NNI3003121694 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI3003121694, name: "Grey", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3003121694, name: "Red", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3003121694, name: "Green", len: 0, sons: null}}};
NTI3003121694.node = NNI3003121694;
var NNI3003121716 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121692, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}]};
NTI3003121716.node = NNI3003121716;
var NNI3003121772 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}]};
NTI3003121772.node = NNI3003121772;
NTI3003121720.base = NTI3003121723;
var NNI3003121723 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121720, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121720, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121716, name: "value", sons: null}]};
NTI3003121723.node = NNI3003121723;
NTI3003121744.base = NTI3003121723;
var NNI3003121752 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121744, name: "Field2", sons: null}]};
NTI3003121752.node = NNI3003121752;
NTI3003121688.base = NTI33554439;
var NNI3003121795 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121692, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3003121688, name: "val", sons: null}]};
NTI3003121795.node = NNI3003121795;
NTI3003121799.base = NTI3003121802;
var NNI3003121802 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121799, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121799, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121795, name: "value", sons: null}]};
NTI3003121802.node = NNI3003121802;
NTI3003121823.base = NTI3003121802;
var NNI3003121831 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121823, name: "Field2", sons: null}]};
NTI3003121831.node = NNI3003121831;
NTI3003121848.base = NTI3003121692;
var NNI3003121862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121692, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3003121848, name: "val", sons: null}]};
NTI3003121862.node = NNI3003121862;
NTI3003121866.base = NTI3003121869;
var NNI3003121869 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3003121866, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3003121866, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3003121862, name: "value", sons: null}]};
NTI3003121869.node = NNI3003121869;
NTI3003121890.base = NTI3003121869;
var NNI3003121898 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3003121890, name: "Field2", sons: null}]};
NTI3003121898.node = NNI3003121898;
var NNI3070230531 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230531, name: "tError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230531, name: "tVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3070230531, name: "tString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3070230531, name: "tInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3070230531, name: "tFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3070230531, name: "tAny", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3070230531, name: "tType", len: 0, sons: null}}};
NTI3070230531.node = NNI3070230531;
var NNI3070230534 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230534, name: "vkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230534, name: "vkVoid", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3070230534, name: "vkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3070230534, name: "vkNumber", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3070230534, name: "vkBuiltinFunction", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI3070230534, name: "vkAstFunction", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI3070230534, name: "vkType", len: 0, sons: null}}};
NTI3070230534.node = NNI3070230534;
var NNI2969567235 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI2969567235, name: "Empty", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2969567235, name: "Identifier", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2969567235, name: "NumberLiteral", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2969567235, name: "StringLiteral", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2969567235, name: "ConstDecl", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI2969567235, name: "LetDecl", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI2969567235, name: "VarDecl", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI2969567235, name: "NodeList", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI2969567235, name: "Call", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI2969567235, name: "If", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI2969567235, name: "While", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI2969567235, name: "FunctionDefinition", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI2969567235, name: "Params", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI2969567235, name: "Assignment", len: 0, sons: null}}};
NTI2969567235.node = NNI2969567235;
NTI2969567239.base = NTI2969567236;
var NNI2969567238 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI2969567236, name: "parent", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "reff", len: 0, typ: NTI2181038083, name: "reff", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI2969567235, name: "kind", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2969567239, name: "children", sons: null}]};
NTI2969567238.node = NNI2969567238;
NTI2969567236.base = NTI2969567238;
NTI3070230541.base = NTI3070230532;
var NNI3070230540 = {kind: 3, offset: "kind", len: 7, typ: NTI3070230531, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(3), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(6), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(5), {kind: 1, offset: "open", len: 0, typ: NTI33554466, name: "open", sons: null}], 
[setConstr(4), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "returnType", len: 0, typ: NTI3070230532, name: "returnType", sons: null}, 
{kind: 1, offset: "paramTypes", len: 0, typ: NTI3070230541, name: "paramTypes", sons: null}]}]]};
NTI3070230540.node = NNI3070230540;
NTI3070230532.base = NTI3070230540;
var NNI3070230535 = {kind: 3, offset: "kind", len: 7, typ: NTI3070230534, name: "kind", sons: [[setConstr(0), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(1), {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []}], 
[setConstr(2), {kind: 1, offset: "stringValue", len: 0, typ: NTI33554449, name: "stringValue", sons: null}], 
[setConstr(3), {kind: 1, offset: "intValue", len: 0, typ: NTI33554435, name: "intValue", sons: null}], 
[setConstr(4), {kind: 1, offset: "impl", len: 0, typ: NTI3070230547, name: "impl", sons: null}], 
[setConstr(5), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "rev", len: 0, typ: NTI33554435, name: "rev", sons: null}]}], 
[setConstr(6), {kind: 1, offset: "typ", len: 0, typ: NTI3070230532, name: "typ", sons: null}]]};
NTI3070230535.node = NNI3070230535;
NTI3070230838.base = NTI3070230532;
var NNI3070230537 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230537, name: "skAstNode", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230537, name: "skBuiltin", len: 0, sons: null}}};
NTI3070230537.node = NNI3070230537;
var NNI2986387392 = {kind: 1, offset: "val", len: 0, typ: NTI3070230532, name: "val", sons: null};
NTI2986387392.node = NNI2986387392;
var NNI3070230536 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230536, name: "Regular", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230536, name: "Prefix", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI3070230536, name: "Postfix", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI3070230536, name: "Infix", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI3070230536, name: "Scope", len: 0, sons: null}}};
NTI3070230536.node = NNI3070230536;
var NNI3070230546 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI3070230537, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}], 
[setConstr(1), {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "typ", len: 0, typ: NTI3070230532, name: "typ", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3070230535, name: "value", sons: null}, 
{kind: 1, offset: "operatorNotation", len: 0, typ: NTI3070230536, name: "operatorNotation", sons: null}, 
{kind: 1, offset: "precedence", len: 0, typ: NTI33554435, name: "precedence", sons: null}]}]]}]};
NTI3070230546.node = NNI3070230546;
NTI3070230538.base = NTI3070230546;
var NNI3070231688 = {kind: 1, offset: "val", len: 0, typ: NTI3070230538, name: "val", sons: null};
NTI3070231688.node = NNI3070231688;
NTI2986344784.base = NTI2181038083;
NTI2986344465.base = NTI2986344468;
var NNI2986344462 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2986344465, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2986344462.node = NNI2986344462;
var NNI2986344452 = {kind: 1, offset: "queries", len: 0, typ: NTI2986344462, name: "queries", sons: null};
NTI2986344452.node = NNI2986344452;
var NNI2986344796 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121692, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344784, name: "Field2", sons: null}]};
NTI2986344796.node = NNI2986344796;
var NNI2986344813 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230532, name: "val", sons: null}]};
NTI2986344813.node = NNI2986344813;
var NNI2986344869 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2986344869.node = NNI2986344869;
NTI2986344817.base = NTI2986344820;
var NNI2986344820 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344817, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344817, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344813, name: "value", sons: null}]};
NTI2986344820.node = NNI2986344820;
NTI2986344841.base = NTI2986344820;
var NNI2986344849 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344841, name: "Field2", sons: null}]};
NTI2986344849.node = NNI2986344849;
NTI3070230983.base = NTI33554439;
NTI3003121997.base = NTI33554439;
NTI3070230977.base = NTI33554439;
NTI3070230551.base = NTI3070230535;
var NNI1191183280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI33554435, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI1191183280.node = NNI1191183280;
var NNI3070230550 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "arguments", len: 0, typ: NTI3070230551, name: "arguments", sons: null}, 
{kind: 1, offset: "maxLoopIterations", len: 0, typ: NTI1191183280, name: "maxLoopIterations", sons: null}]};
NTI3070230550.node = NNI3070230550;
NTI3070230549.base = NTI3070230550;
var NNI2986344711 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230549, name: "val", sons: null}]};
NTI2986344711.node = NNI2986344711;
var NNI2986344566 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}]};
NTI2986344566.node = NNI2986344566;
NTI2986344715.base = NTI2986344718;
var NNI2986344718 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344715, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344715, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344711, name: "value", sons: null}]};
NTI2986344718.node = NNI2986344718;
NTI2986344739.base = NTI2986344718;
var NNI2986344747 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344739, name: "Field2", sons: null}]};
NTI2986344747.node = NNI2986344747;
NTI2986408772.base = NTI3070230535;
var NNI2986389396 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2986389396.node = NNI2986389396;
var NNI2986344888 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}]};
NTI2986344888.node = NNI2986344888;
NTI2986344892.base = NTI2986344895;
var NNI2986344895 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344892, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344892, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344888, name: "value", sons: null}]};
NTI2986344895.node = NNI2986344895;
NTI2986344916.base = NTI2986344895;
var NNI2986344924 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344916, name: "Field2", sons: null}]};
NTI2986344924.node = NNI2986344924;
NTI2013268507.base = NTI33554439;
NTI3070231167.base = NTI33554439;
var NNI2986344647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230538, name: "val", sons: null}]};
NTI2986344647.node = NNI2986344647;
NTI2986344651.base = NTI2986344654;
var NNI2986344654 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344651, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344651, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344647, name: "value", sons: null}]};
NTI2986344654.node = NNI2986344654;
NTI2986344675.base = NTI2986344654;
var NNI2986344683 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344675, name: "Field2", sons: null}]};
NTI2986344683.node = NNI2986344683;
var NNI2986344959 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070231688, name: "val", sons: null}]};
NTI2986344959.node = NNI2986344959;
NTI2986344963.base = NTI2986344966;
var NNI2986344966 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344963, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344963, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344959, name: "value", sons: null}]};
NTI2986344966.node = NNI2986344966;
NTI2986344987.base = NTI2986344966;
var NNI2986344995 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344987, name: "Field2", sons: null}]};
NTI2986344995.node = NNI2986344995;
NTI3070231437.base = NTI33554439;
var NNI3070231502 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230538, name: "Field2", sons: null}]};
NTI3070231502.node = NNI3070231502;
NTI3070231499.base = NTI3070231502;
var NNI3070231496 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070231499, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070231496.node = NNI3070231496;
var NNI2969567351 = {kind: 1, offset: "val", len: 0, typ: NTI2969567236, name: "val", sons: null};
NTI2969567351.node = NNI2969567351;
var NNI3070231514 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI3070231514.node = NNI3070231514;
var NNI2986409679 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI2986409679.node = NNI2986409679;
NTI3070231493.base = NTI3070231496;
var NNI2986345032 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI2969567236, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070231493, name: "val", sons: null}]};
NTI2986345032.node = NNI2986345032;
NTI2986345036.base = NTI2986345039;
var NNI2986345039 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345036, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345036, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345032, name: "value", sons: null}]};
NTI2986345039.node = NNI2986345039;
NTI2986345060.base = NTI2986345039;
var NNI2986345068 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345060, name: "Field2", sons: null}]};
NTI2986345068.node = NNI2986345068;
var NNI2986345098 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230538, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230532, name: "val", sons: null}]};
NTI2986345098.node = NNI2986345098;
var NNI2986345154 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI2986345154.node = NNI2986345154;
NTI2986345102.base = NTI2986345105;
var NNI2986345105 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345102, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345102, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345098, name: "value", sons: null}]};
NTI2986345105.node = NNI2986345105;
NTI2986345126.base = NTI2986345105;
var NNI2986345134 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345126, name: "Field2", sons: null}]};
NTI2986345134.node = NNI2986345134;
var NNI2986345173 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230538, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}]};
NTI2986345173.node = NNI2986345173;
NTI2986345177.base = NTI2986345180;
var NNI2986345180 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345177, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345177, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345173, name: "value", sons: null}]};
NTI2986345180.node = NNI2986345180;
NTI2986345201.base = NTI2986345180;
var NNI2986345209 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345201, name: "Field2", sons: null}]};
NTI2986345209.node = NNI2986345209;
NTI3120563186.base = NTI3070230535;
var NNI2986345239 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230549, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230535, name: "val", sons: null}]};
NTI2986345239.node = NNI2986345239;
var NNI2986345295 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230549, name: "Field1", sons: null}]};
NTI2986345295.node = NNI2986345295;
NTI2986345243.base = NTI2986345246;
var NNI2986345246 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345243, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345243, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345239, name: "value", sons: null}]};
NTI2986345246.node = NNI2986345246;
NTI2986345267.base = NTI2986345246;
var NNI2986345275 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230549, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345267, name: "Field2", sons: null}]};
NTI2986345275.node = NNI2986345275;
NTI2986369034.base = NTI33554439;
var NNI3070230555 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI3070230555, name: "Horizontal", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI3070230555, name: "Vertical", len: 0, sons: null}}};
NTI3070230555.node = NNI3070230555;
var NNI2080374789 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "x", len: 0, typ: NTI33554446, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554446, name: "y", sons: null}, 
{kind: 1, offset: "w", len: 0, typ: NTI33554446, name: "w", sons: null}, 
{kind: 1, offset: "h", len: 0, typ: NTI33554446, name: "h", sons: null}]};
NTI2080374789.node = NNI2080374789;
NTI3070230563.base = NTI3070230557;
NTI3070230564.base = NTI33554449;
var NNI2483027971 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2483027971, name: "Italic", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2483027971, name: "Underline", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2483027971, name: "Bold", len: 0, sons: null}}};
NTI2483027971.node = NNI2483027971;
NTI3070230567.base = NTI2483027971;
var NNI3070230572 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3070230567, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3070230572.node = NNI3070230572;
NTI3070230582.base = NTI33554449;
var NNI3070230587 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI3070230582, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3070230587.node = NNI3070230587;
var NNI3070230562 = {kind: 2, len: 15, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI3070230557, name: "parent", sons: null}, 
{kind: 1, offset: "orientation", len: 0, typ: NTI3070230555, name: "orientation", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2080374789, name: "bounds", sons: null}, 
{kind: 1, offset: "indent", len: 0, typ: NTI33554435, name: "indent", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554449, name: "font", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554445, name: "fontSize", sons: null}, 
{kind: 1, offset: "render", len: 0, typ: NTI3070230627, name: "render", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI3070230563, name: "children", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI3070230564, name: "colors", sons: null}, 
{kind: 1, offset: "styleOverride", len: 0, typ: NTI3070230572, name: "styleOverride", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI3070230587, name: "background", sons: null}, 
{kind: 1, offset: "depth", len: 0, typ: NTI33554435, name: "depth", sons: null}]};
NTI3070230562.node = NNI3070230562;
NTI3070230557.base = NTI3070230562;
var NNI3070230558 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3070230557, name: "parent", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554435, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554435, name: "last", sons: null}]};
NTI3070230558.node = NNI3070230558;
var NNI3070230608 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230558, name: "Field2", sons: null}]};
NTI3070230608.node = NNI3070230608;
NTI3070230605.base = NTI3070230608;
var NNI3070230602 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070230605, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070230602.node = NNI3070230602;
var NNI3070230559 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "root", len: 0, typ: NTI3070230557, name: "root", sons: null}, 
{kind: 1, offset: "nodeToVisualNode", len: 0, typ: NTI3070230602, name: "nodeToVisualNode", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}]};
NTI3070230559.node = NNI3070230559;
NTI2097152389.base = NTI33554446;
var NNI2097152387 = {kind: 1, offset: "arr", len: 0, typ: NTI2097152389, name: "arr", sons: null};
NTI2097152387.node = NNI2097152387;
NTI3070231781.base = NTI3070230557;
NTI3103785143.base = NTI33554449;
NTI1560281203.base = NTI33554449;
NTI3103786054.base = NTI33554449;
NTI3103786118.base = NTI2483027971;
NTI3103786020.base = NTI33554449;
var NNI3103786490 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3103786020, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230572, name: "Field1", sons: null}]};
NTI3103786490.node = NNI3103786490;
var NNI3103786593 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3103786020, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230572, name: "Field1", sons: null}]};
NTI3103786593.node = NNI3103786593;
NTI3103785172.base = NTI33554449;
var NNI3070230624 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3070230557, name: "Field2", sons: null}]};
NTI3070230624.node = NNI3070230624;
NTI3070230621.base = NTI3070230624;
var NNI3070230618 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3070230621, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3070230618.node = NNI3070230618;
var NNI3070230610 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2181038083, name: "selectedNode", sons: null}, 
{kind: 1, offset: "replacements", len: 0, typ: NTI3070230618, name: "replacements", sons: null}, 
{kind: 1, offset: "measureText", len: 0, typ: NTI3070230626, name: "measureText", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "renderDivisionVertically", len: 0, typ: NTI33554466, name: "renderDivisionVertically", sons: null}]};
NTI3070230610.node = NNI3070230610;
NTI3070230560.base = NTI3070230610;
var NNI2986345314 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3070230560, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230559, name: "val", sons: null}]};
NTI2986345314.node = NNI2986345314;
var NNI2986345370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230560, name: "Field1", sons: null}]};
NTI2986345370.node = NNI2986345370;
NTI2986345318.base = NTI2986345321;
var NNI2986345321 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986345318, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986345318, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986345314, name: "value", sons: null}]};
NTI2986345321.node = NNI2986345321;
NTI2986345342.base = NTI2986345321;
var NNI2986345350 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230560, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986345342, name: "Field2", sons: null}]};
NTI2986345350.node = NNI2986345350;
NTI2986373631.base = NTI33554439;
var NNI2986344779 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344452, name: "Field2", sons: null}]};
NTI2986344779.node = NNI2986344779;
NTI2986344776.base = NTI2986344779;
var NNI2986344773 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2986344776, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2986344773.node = NNI2986344773;
NTI2986344793.base = NTI2986344796;
var NNI2986344790 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2986344793, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2986344790.node = NNI2986344790;
var NNI2365587459 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554446, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554446, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554446, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554446, name: "a", sons: null}]};
NTI2365587459.node = NNI2365587459;
NTI2936015265.base = NTI2969567236;
var NNI2986344583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI3070230560, name: "val", sons: null}]};
NTI2986344583.node = NNI2986344583;
NTI2986344587.base = NTI2986344590;
var NNI2986344590 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344587, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344587, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344583, name: "value", sons: null}]};
NTI2986344590.node = NNI2986344590;
NTI2986344611.base = NTI2986344590;
var NNI2986344619 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344611, name: "Field2", sons: null}]};
NTI2986344619.node = NNI2986344619;
var NNI2936014334 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230559, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2097152387, name: "Field1", sons: null}]};
NTI2936014334.node = NNI2936014334;
var NNI2936014155 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI2936014155, name: "Delete", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2936014155, name: "Replace", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2936014155, name: "Insert", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI2936014155, name: "TextChange", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI2936014155, name: "SymbolNameChange", len: 0, sons: null}}};
NTI2936014155.node = NNI2936014155;
var NNI2936014158 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "kind", len: 0, typ: NTI2936014155, name: "kind", sons: null}, 
{kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}, 
{kind: 1, offset: "parent", len: 0, typ: NTI2969567236, name: "parent", sons: null}, 
{kind: 1, offset: "idx", len: 0, typ: NTI33554435, name: "idx", sons: null}, 
{kind: 1, offset: "node", len: 0, typ: NTI2969567236, name: "node", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}]};
NTI2936014158.node = NNI2936014158;
NTI2936014156.base = NTI2936014158;
NTI2936017906.base = NTI2936014156;
var NNI2936014305 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2181038083, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2969567236, name: "Field2", sons: null}]};
NTI2936014305.node = NNI2936014305;
var NNI2986344510 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI3003121689, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI2969567236, name: "val", sons: null}]};
NTI2986344510.node = NNI2986344510;
NTI2986344514.base = NTI2986344517;
var NNI2986344517 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI2986344514, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI2986344514, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI2986344510, name: "value", sons: null}]};
NTI2986344517.node = NNI2986344517;
NTI2986344538.base = NTI2986344517;
var NNI2986344546 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3003121689, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2986344538, name: "Field2", sons: null}]};
NTI2986344546.node = NNI2986344546;
var NNI2969568569 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2969568569.node = NNI2969568569;
NTI2801795208.base = NTI33554449;
var NNI2936014311 = {kind: 2, offset: 0, typ: null, name: null, len: 2, sons: {"0": {kind: 1, offset: 0, typ: NTI2936014311, name: "SymbolCompletion", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2936014311, name: "AstCompletion", len: 0, sons: null}}};
NTI2936014311.node = NNI2936014311;
var NNI2936014312 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "score", len: 0, typ: NTI33554445, name: "score", sons: null}, 
{kind: 3, offset: "kind", len: 2, typ: NTI2936014311, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "id", len: 0, typ: NTI2181038083, name: "id", sons: null}], 
[setConstr(1), {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nodeKind", len: 0, typ: NTI2969567235, name: "nodeKind", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]}]]}]};
NTI2936014312.node = NNI2936014312;
NTI3154116626.base = NTI2936014312;
NTI1979711498.base = NTI33554435;
NTI1979711504.base = NTI1979711498;
NTI1979711531.base = NTI33554435;
NTI2936017298.base = NTI2936014312;
var NNI2936018200 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2936018200.node = NNI2936018200;
var NNI2936018205 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2936018200, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2936018205.node = NNI2936018205;
var NNI2801795221 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795222, name: "Field1", sons: null}]};
NTI2801795221.node = NNI2801795221;
NTI2801795220.base = NTI2801795221;
var NNI2801795214 = {kind: 1, offset: "handlers", len: 0, typ: NTI2801795220, name: "handlers", sons: null};
NTI2801795214.node = NNI2801795214;
var NNI2801795238 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795239, name: "Field1", sons: null}]};
NTI2801795238.node = NNI2801795238;
NTI2801795237.base = NTI2801795238;
var NNI2801795231 = {kind: 1, offset: "handlers", len: 0, typ: NTI2801795237, name: "handlers", sons: null};
NTI2801795231.node = NNI2801795231;
var NNI2801795255 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2801795256, name: "Field1", sons: null}]};
NTI2801795255.node = NNI2801795255;
NTI2801795254.base = NTI2801795255;
var NNI2801795248 = {kind: 1, offset: "handlers", len: 0, typ: NTI2801795254, name: "handlers", sons: null};
NTI2801795248.node = NNI2801795248;
NTI2801795259.base = NTI2801795076;
NTI2801795260.base = NTI2801795076;
var NNI2868903942 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903942.node = NNI2868903942;
NTI2868903942.base = NTI33555171;
NTI2868903941.base = NTI2868903942;
var NNI2868903940 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903940.node = NNI2868903940;
NTI2868903939.base = NTI2868903940;
var NNI2868903946 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903946.node = NNI2868903946;
NTI2868903946.base = NTI33555171;
NTI2868903945.base = NTI2868903946;
var NNI2868903944 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903944.node = NNI2868903944;
NTI2868903944.base = NTI33555171;
NTI2868903943.base = NTI2868903944;
var NNI2801795207 = {kind: 2, len: 16, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "lines", len: 0, typ: NTI2801795208, name: "lines", sons: null}, 
{kind: 1, offset: "languageId", len: 0, typ: NTI33554449, name: "languageId", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI33554435, name: "version", sons: null}, 
{kind: 1, offset: "textChanged", len: 0, typ: NTI2801795214, name: "textChanged", sons: null}, 
{kind: 1, offset: "textInserted", len: 0, typ: NTI2801795231, name: "textInserted", sons: null}, 
{kind: 1, offset: "textDeleted", len: 0, typ: NTI2801795248, name: "textDeleted", sons: null}, 
{kind: 1, offset: "singleLine", len: 0, typ: NTI33554466, name: "singleLine", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2801795259, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2801795260, name: "redoOps", sons: null}, 
{kind: 1, offset: "tsParser", len: 0, typ: NTI2868903941, name: "tsParser", sons: null}, 
{kind: 1, offset: "tsLanguage", len: 0, typ: NTI2868903939, name: "tsLanguage", sons: null}, 
{kind: 1, offset: "currentTree", len: 0, typ: NTI2868903945, name: "currentTree", sons: null}, 
{kind: 1, offset: "highlightQuery", len: 0, typ: NTI2868903943, name: "highlightQuery", sons: null}, 
{kind: 1, offset: "languageServer", len: 0, typ: NTI2801795266, name: "languageServer", sons: null}, 
{kind: 1, offset: "onRequestSaveHandle", len: 0, typ: NTI33554435, name: "onRequestSaveHandle", sons: null}]};
NTI2801795207.node = NNI2801795207;
var NNI2130706436 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2130706436.node = NNI2130706436;
NTI2130706436.base = NTI33555171;
NTI2801795207.base = NTI2130706436;
NTI855638541.base = NTI33554449;
NTI855638530.base = NTI33554449;
NTI503316776.base = NTI33554449;
var NNI2231369745 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2231369745, name: "gui", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2231369745, name: "terminal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2231369745, name: "browser", len: 0, sons: null}}};
NTI2231369745.node = NNI2231369745;
var NNI2315255826 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255827, name: "Field1", sons: null}]};
NTI2315255826.node = NNI2315255826;
NTI2315255825.base = NTI2315255826;
var NNI2315255819 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255825, name: "handlers", sons: null};
NTI2315255819.node = NNI2315255819;
var NNI2315255851 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255852, name: "Field1", sons: null}]};
NTI2315255851.node = NNI2315255851;
NTI2315255850.base = NTI2315255851;
var NNI2315255844 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255850, name: "handlers", sons: null};
NTI2315255844.node = NNI2315255844;
var NNI2315255873 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255874, name: "Field1", sons: null}]};
NTI2315255873.node = NNI2315255873;
NTI2315255872.base = NTI2315255873;
var NNI2315255866 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255872, name: "handlers", sons: null};
NTI2315255866.node = NNI2315255866;
var NNI2315255890 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2315255891, name: "Field1", sons: null}]};
NTI2315255890.node = NNI2315255890;
NTI2315255889.base = NTI2315255890;
var NNI2315255883 = {kind: 1, offset: "handlers", len: 0, typ: NTI2315255889, name: "handlers", sons: null};
NTI2315255883.node = NNI2315255883;
var NNI2147483665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2147483666, name: "Field1", sons: null}]};
NTI2147483665.node = NNI2147483665;
NTI2147483664.base = NTI2147483665;
var NNI2147483658 = {kind: 1, offset: "handlers", len: 0, typ: NTI2147483664, name: "handlers", sons: null};
NTI2147483658.node = NNI2147483658;
var NNI2332033033 = {kind: 1, offset: "getTextBounds", len: 0, typ: NTI2332033045, name: "getTextBounds", sons: null};
NTI2332033033.node = NNI2332033033;
var NNI2315255812 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "redrawEverything", len: 0, typ: NTI33554466, name: "redrawEverything", sons: null}, 
{kind: 1, offset: "onKeyPress", len: 0, typ: NTI2315255819, name: "onKeyPress", sons: null}, 
{kind: 1, offset: "onKeyRelease", len: 0, typ: NTI2315255819, name: "onKeyRelease", sons: null}, 
{kind: 1, offset: "onRune", len: 0, typ: NTI2315255819, name: "onRune", sons: null}, 
{kind: 1, offset: "onMousePress", len: 0, typ: NTI2315255844, name: "onMousePress", sons: null}, 
{kind: 1, offset: "onMouseRelease", len: 0, typ: NTI2315255844, name: "onMouseRelease", sons: null}, 
{kind: 1, offset: "onMouseMove", len: 0, typ: NTI2315255866, name: "onMouseMove", sons: null}, 
{kind: 1, offset: "onScroll", len: 0, typ: NTI2315255883, name: "onScroll", sons: null}, 
{kind: 1, offset: "onCloseRequested", len: 0, typ: NTI2147483658, name: "onCloseRequested", sons: null}, 
{kind: 1, offset: "layoutOptions", len: 0, typ: NTI2332033033, name: "layoutOptions", sons: null}]};
NTI2315255812.node = NNI2315255812;
NTI2315255812.base = NTI33555171;
NTI2315255811.base = NTI2315255812;
var NNI2332033035 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2097152387, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2097152387, name: "Field1", sons: null}]};
NTI2332033035.node = NNI2332033035;
var NNI2332033034 = {kind: 2, len: 18, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "anchor", len: 0, typ: NTI2332033035, name: "anchor", sons: null}, 
{kind: 1, offset: "pivot", len: 0, typ: NTI2097152387, name: "pivot", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554445, name: "left", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554445, name: "right", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554445, name: "top", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554445, name: "bottom", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI2365587459, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "foregroundColor", len: 0, typ: NTI2365587459, name: "foregroundColor", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastBoundsChange", len: 0, typ: NTI33554435, name: "lastBoundsChange", sons: null}, 
{kind: 1, offset: "lastHierarchyChange", len: 0, typ: NTI33554435, name: "lastHierarchyChange", sons: null}, 
{kind: 1, offset: "lastInvalidationRect", len: 0, typ: NTI2080374789, name: "lastInvalidationRect", sons: null}, 
{kind: 1, offset: "lastInvalidation", len: 0, typ: NTI33554435, name: "lastInvalidation", sons: null}, 
{kind: 1, offset: "sizeToContent", len: 0, typ: NTI33554466, name: "sizeToContent", sons: null}, 
{kind: 1, offset: "drawBorder", len: 0, typ: NTI33554466, name: "drawBorder", sons: null}, 
{kind: 1, offset: "fillBackground", len: 0, typ: NTI33554466, name: "fillBackground", sons: null}, 
{kind: 1, offset: "logLayout", len: 0, typ: NTI33554466, name: "logLayout", sons: null}, 
{kind: 1, offset: "allowAlpha", len: 0, typ: NTI33554466, name: "allowAlpha", sons: null}]};
NTI2332033034.node = NNI2332033034;
NTI2332033034.base = NTI33555171;
NTI2332033027.base = NTI2332033034;
var NNI1795162126 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554449, name: "Field2", sons: null}]};
NTI1795162126.node = NNI1795162126;
NTI1795162123.base = NTI1795162126;
var NNI1795162120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1795162123, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1795162120.node = NNI1795162120;
var NNI2046820358 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "context", len: 0, typ: NTI33554449, name: "context", sons: null}, 
{kind: 1, offset: "commands", len: 0, typ: NTI1795162120, name: "commands", sons: null}, 
{kind: 1, offset: "handleActions", len: 0, typ: NTI33554466, name: "handleActions", sons: null}, 
{kind: 1, offset: "handleInputs", len: 0, typ: NTI33554466, name: "handleInputs", sons: null}, 
{kind: 1, offset: "consumeAllActions", len: 0, typ: NTI33554466, name: "consumeAllActions", sons: null}, 
{kind: 1, offset: "consumeAllInput", len: 0, typ: NTI33554466, name: "consumeAllInput", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}]};
NTI2046820358.node = NNI2046820358;
NTI2046820357.base = NTI2046820358;
var NNI1291845681 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2046820357, name: "Field2", sons: null}]};
NTI1291845681.node = NNI1291845681;
NTI1291845678.base = NTI1291845681;
var NNI1291845675 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845678, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845675.node = NNI1291845675;
var NNI1291845696 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1291845696.node = NNI1291845696;
NTI1291845693.base = NTI1291845696;
var NNI1291845690 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845693, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845690.node = NNI1291845690;
NTI1174405131.base = NTI1174405133;
var NNI2667577352 = {kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null};
NTI2667577352.node = NNI2667577352;
NTI2667577352.base = NTI33555171;
NTI2667577348.base = NTI2667577352;
NTI2667577351.base = NTI2667577348;
var NNI2667577350 = {kind: 1, offset: "folders", len: 0, typ: NTI2667577351, name: "folders", sons: null};
NTI2667577350.node = NNI2667577350;
NTI2667577347.base = NTI2667577350;
var NNI2650800132 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2650800132.node = NNI2650800132;
NTI2650800132.base = NTI33555171;
NTI2650800131.base = NTI2650800132;
NTI2130706435.base = NTI2130706436;
var NNI2013265955 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "current", len: 0, typ: NTI33554435, name: "current", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554435, name: "persistent", sons: null}]};
NTI2013265955.node = NNI2013265955;
var NNI2013265986 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2013265952, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2013265951, name: "Field2", sons: null}]};
NTI2013265986.node = NNI2013265986;
NTI2013265983.base = NTI2013265986;
var NNI2013265980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2013265983, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2013265980.node = NNI2013265980;
var NNI2013265953 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "isTerminal", len: 0, typ: NTI33554466, name: "isTerminal", sons: null}, 
{kind: 1, offset: "nextState", len: 0, typ: NTI33554435, name: "nextState", sons: null}, 
{kind: 1, offset: "persistent", len: 0, typ: NTI33554466, name: "persistent", sons: null}, 
{kind: 1, offset: "function", len: 0, typ: NTI33554449, name: "function", sons: null}, 
{kind: 1, offset: "inputs", len: 0, typ: NTI2013265980, name: "inputs", sons: null}]};
NTI2013265953.node = NNI2013265953;
NTI2013265989.base = NTI2013265953;
var NNI2013265988 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "persistentState", len: 0, typ: NTI33554435, name: "persistentState", sons: null}, 
{kind: 1, offset: "states", len: 0, typ: NTI2013265989, name: "states", sons: null}]};
NTI2013265988.node = NNI2013265988;
NTI2013265954.base = NTI2013265988;
var NNI2046820365 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "state", len: 0, typ: NTI2013265955, name: "state", sons: null}, 
{kind: 1, offset: "config", len: 0, typ: NTI2046820357, name: "config", sons: null}, 
{kind: 1, offset: "revision", len: 0, typ: NTI33554435, name: "revision", sons: null}, 
{kind: 1, offset: "dfaInternal", len: 0, typ: NTI2013265954, name: "dfaInternal", sons: null}, 
{kind: 1, offset: "handleAction", len: 0, typ: NTI2046820366, name: "handleAction", sons: null}, 
{kind: 1, offset: "handleInput", len: 0, typ: NTI2046820367, name: "handleInput", sons: null}]};
NTI2046820365.node = NNI2046820365;
NTI2046820364.base = NTI2046820365;
var NNI2147483652 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2231369731, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "renderHeader", len: 0, typ: NTI33554466, name: "renderHeader", sons: null}, 
{kind: 1, offset: "fillAvailableSpace", len: 0, typ: NTI33554466, name: "fillAvailableSpace", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2147483658, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}, 
{kind: 1, offset: "active", len: 0, typ: NTI33554466, name: "active", sons: null}]};
NTI2147483652.node = NNI2147483652;
NTI2147483652.base = NTI33555171;
NTI2147483651.base = NTI2147483652;
var NNI1291845636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "document", len: 0, typ: NTI2130706435, name: "document", sons: null}, 
{kind: 1, offset: "editor", len: 0, typ: NTI2147483651, name: "editor", sons: null}]};
NTI1291845636.node = NNI1291845636;
NTI1291845635.base = NTI1291845636;
NTI1291845698.base = NTI1291845635;
var NNI1291845642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845642.node = NNI1291845642;
NTI1291845642.base = NTI33555171;
NTI1291845637.base = NTI1291845642;
var NNI1291845660 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554446, name: "Field2", sons: null}]};
NTI1291845660.node = NNI1291845660;
NTI1291845657.base = NTI1291845660;
var NNI1291845654 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845657, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845654.node = NNI1291845654;
var NNI1291845646 = {kind: 1, offset: "props", len: 0, typ: NTI1291845654, name: "props", sons: null};
NTI1291845646.node = NNI1291845646;
NTI1291845641.base = NTI1291845646;
var NNI2483028006 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2365587459, name: "Field2", sons: null}]};
NTI2483028006.node = NNI2483028006;
NTI2483028003.base = NTI2483028006;
var NNI2483028000 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2483028003, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2483028000.node = NNI2483028000;
var NNI2483027980 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2365587459, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2483027980.node = NNI2483027980;
NTI2483027991.base = NTI2483027971;
var NNI2483027972 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "foreground", len: 0, typ: NTI2483027980, name: "foreground", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI2483027980, name: "background", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI2483027991, name: "fontStyle", sons: null}]};
NTI2483027972.node = NNI2483027972;
var NNI2483028021 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2483027972, name: "Field2", sons: null}]};
NTI2483028021.node = NNI2483028021;
NTI2483028018.base = NTI2483028021;
var NNI2483028015 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2483028018, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2483028015.node = NNI2483028015;
var NNI2483027992 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "typ", len: 0, typ: NTI33554449, name: "typ", sons: null}, 
{kind: 1, offset: "colorSpace", len: 0, typ: NTI33554449, name: "colorSpace", sons: null}, 
{kind: 1, offset: "colors", len: 0, typ: NTI2483028000, name: "colors", sons: null}, 
{kind: 1, offset: "tokenColors", len: 0, typ: NTI2483028015, name: "tokenColors", sons: null}]};
NTI2483027992.node = NNI2483027992;
NTI2483027973.base = NTI2483027992;
var NNI1291845712 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2231369731, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2147483651, name: "Field2", sons: null}]};
NTI1291845712.node = NNI1291845712;
NTI1291845709.base = NTI1291845712;
var NNI1291845706 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1291845709, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI1291845706.node = NNI1291845706;
var NNI2264924164 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "id", len: 0, typ: NTI2231369731, name: "id", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "onMarkedDirty", len: 0, typ: NTI2147483658, name: "onMarkedDirty", sons: null}, 
{kind: 1, offset: "mDirty", len: 0, typ: NTI33554466, name: "mDirty", sons: null}]};
NTI2264924164.node = NNI2264924164;
NTI2264924164.base = NTI33555171;
NTI2264924163.base = NTI2264924164;
NTI1291845714.base = NTI2264924163;
var NNI1291845727 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291845728, name: "Field1", sons: null}]};
NTI1291845727.node = NNI1291845727;
NTI1291845726.base = NTI1291845727;
var NNI1291845720 = {kind: 1, offset: "handlers", len: 0, typ: NTI1291845726, name: "handlers", sons: null};
NTI1291845720.node = NNI1291845720;
NTI1291845734.base = NTI2147483651;
var NNI1291845666 = {kind: 2, len: 37, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "backend", len: 0, typ: NTI2231369745, name: "backend", sons: null}, 
{kind: 1, offset: "platform", len: 0, typ: NTI2315255811, name: "platform", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "clearAtlasTimer", len: 0, typ: NTI2281701407, name: "clearAtlasTimer", sons: null}, 
{kind: 1, offset: "timer", len: 0, typ: NTI2281701407, name: "timer", sons: null}, 
{kind: 1, offset: "frameTimer", len: 0, typ: NTI2281701407, name: "frameTimer", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "closeRequested", len: 0, typ: NTI33554466, name: "closeRequested", sons: null}, 
{kind: 1, offset: "widget", len: 0, typ: NTI2332033027, name: "widget", sons: null}, 
{kind: 1, offset: "eventHandlerConfigs", len: 0, typ: NTI1291845675, name: "eventHandlerConfigs", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1627389956, name: "options", sons: null}, 
{kind: 1, offset: "callbacks", len: 0, typ: NTI1291845690, name: "callbacks", sons: null}, 
{kind: 1, offset: "logger", len: 0, typ: NTI1174405131, name: "logger", sons: null}, 
{kind: 1, offset: "workspace", len: 0, typ: NTI2667577347, name: "workspace", sons: null}, 
{kind: 1, offset: "scriptContext", len: 0, typ: NTI2650800131, name: "scriptContext", sons: null}, 
{kind: 1, offset: "initializeCalled", len: 0, typ: NTI33554466, name: "initializeCalled", sons: null}, 
{kind: 1, offset: "statusBarOnTop", len: 0, typ: NTI33554466, name: "statusBarOnTop", sons: null}, 
{kind: 1, offset: "currentView", len: 0, typ: NTI33554435, name: "currentView", sons: null}, 
{kind: 1, offset: "views", len: 0, typ: NTI1291845698, name: "views", sons: null}, 
{kind: 1, offset: "layout", len: 0, typ: NTI1291845637, name: "layout", sons: null}, 
{kind: 1, offset: "layout_props", len: 0, typ: NTI1291845641, name: "layout_props", sons: null}, 
{kind: 1, offset: "theme", len: 0, typ: NTI2483027973, name: "theme", sons: null}, 
{kind: 1, offset: "loadedFontSize", len: 0, typ: NTI33554445, name: "loadedFontSize", sons: null}, 
{kind: 1, offset: "editors", len: 0, typ: NTI1291845706, name: "editors", sons: null}, 
{kind: 1, offset: "popups", len: 0, typ: NTI1291845714, name: "popups", sons: null}, 
{kind: 1, offset: "onEditorRegistered", len: 0, typ: NTI1291845720, name: "onEditorRegistered", sons: null}, 
{kind: 1, offset: "onEditorDeregistered", len: 0, typ: NTI1291845720, name: "onEditorDeregistered", sons: null}, 
{kind: 1, offset: "commandLineTextEditor", len: 0, typ: NTI2147483651, name: "commandLineTextEditor", sons: null}, 
{kind: 1, offset: "eventHandler", len: 0, typ: NTI2046820364, name: "eventHandler", sons: null}, 
{kind: 1, offset: "commandLineEventHandler", len: 0, typ: NTI2046820364, name: "commandLineEventHandler", sons: null}, 
{kind: 1, offset: "commandLineMode", len: 0, typ: NTI33554466, name: "commandLineMode", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "editor_defaults", len: 0, typ: NTI1291845734, name: "editor_defaults", sons: null}]};
NTI1291845666.node = NNI1291845666;
NTI1291845665.base = NTI1291845666;
NTI2801795206.base = NTI2801795207;
NTI2801795287.base = NTI2231369747;
var NNI2801795285 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2801795287, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2801795285.node = NNI2801795285;
NTI2801795313.base = NTI2801795316;
var NNI2801795310 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2801795313, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2801795310.node = NNI2801795310;
var NNI2231369743 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2231369743, name: "none", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2231369743, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2231369743, name: "relative", len: 0, sons: null}}};
NTI2231369743.node = NNI2231369743;
var NNI2801795323 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2231369743, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801795323.node = NNI2801795323;
var NNI2801795274 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "scope", len: 0, typ: NTI33554449, name: "scope", sons: null}, 
{kind: 1, offset: "priority", len: 0, typ: NTI33554435, name: "priority", sons: null}, 
{kind: 1, offset: "bounds", len: 0, typ: NTI2080374789, name: "bounds", sons: null}]};
NTI2801795274.node = NNI2801795274;
NTI2801795277.base = NTI2801795274;
var NNI2801795276 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "index", len: 0, typ: NTI33554435, name: "index", sons: null}, 
{kind: 1, offset: "parts", len: 0, typ: NTI2801795277, name: "parts", sons: null}]};
NTI2801795276.node = NNI2801795276;
NTI2801795275.base = NTI2801795276;
NTI2801795331.base = NTI2801795275;
NTI2801795332.base = NTI2902458414;
var NNI2801795334 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2801795334.node = NNI2801795334;
NTI2801795333.base = NTI2801795334;
var NNI2801795279 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2801795206, name: "document", sons: null}, 
{kind: 1, offset: "selectionsInternal", len: 0, typ: NTI2231369747, name: "selectionsInternal", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2801795285, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "searchQuery", len: 0, typ: NTI33554449, name: "searchQuery", sons: null}, 
{kind: 1, offset: "searchRegex", len: 0, typ: NTI2801795293, name: "searchRegex", sons: null}, 
{kind: 1, offset: "searchResults", len: 0, typ: NTI2801795310, name: "searchResults", sons: null}, 
{kind: 1, offset: "targetColumn", len: 0, typ: NTI33554435, name: "targetColumn", sons: null}, 
{kind: 1, offset: "hideCursorWhenInactive", len: 0, typ: NTI33554466, name: "hideCursorWhenInactive", sons: null}, 
{kind: 1, offset: "completionEventHandler", len: 0, typ: NTI2046820364, name: "completionEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "commandCount", len: 0, typ: NTI33554435, name: "commandCount", sons: null}, 
{kind: 1, offset: "commandCountRestore", len: 0, typ: NTI33554435, name: "commandCountRestore", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lineNumbers", len: 0, typ: NTI2801795323, name: "lineNumbers", sons: null}, 
{kind: 1, offset: "lastRenderedLines", len: 0, typ: NTI2801795331, name: "lastRenderedLines", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2801795332, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2801795333, name: "lastItems", sons: null}, 
{kind: 1, offset: "showCompletions", len: 0, typ: NTI33554466, name: "showCompletions", sons: null}]};
NTI2801795279.node = NNI2801795279;
NTI2801795279.base = NTI2147483652;
var NNI2969567372 = {kind: 1, offset: "val", len: 0, typ: NTI2969567236, name: "val", sons: null};
NTI2969567372.node = NNI2969567372;
var NNI2936015605 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2936015605.node = NNI2936015605;
NTI2801795278.base = NTI2801795279;
NTI2936014302.base = NTI2936014305;
var NNI2936014299 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2936014302, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2936014299.node = NNI2936014299;
NTI2936014307.base = NTI2936014310;
NTI2936014308.base = NTI2936014156;
NTI2936014309.base = NTI2936014156;
var NNI2936014286 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "symbols", len: 0, typ: NTI3070231496, name: "symbols", sons: null}, 
{kind: 1, offset: "rootNode", len: 0, typ: NTI2969567236, name: "rootNode", sons: null}, 
{kind: 1, offset: "nodes", len: 0, typ: NTI2936014299, name: "nodes", sons: null}, 
{kind: 1, offset: "onNodeInserted", len: 0, typ: NTI2936014307, name: "onNodeInserted", sons: null}, 
{kind: 1, offset: "undoOps", len: 0, typ: NTI2936014308, name: "undoOps", sons: null}, 
{kind: 1, offset: "redoOps", len: 0, typ: NTI2936014309, name: "redoOps", sons: null}]};
NTI2936014286.node = NNI2936014286;
NTI2936014286.base = NTI2130706436;
NTI2936014285.base = NTI2936014286;
NTI3154116613.base = NTI2936014312;
var NNI3154116616 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI3154116616.node = NNI3154116616;
NTI3154116615.base = NTI3154116616;
var NNI3154116612 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2801795278, name: "textEditor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2936014285, name: "document", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3154116613, name: "completions", sons: null}, 
{kind: 1, offset: "handleSymbolSelected", len: 0, typ: NTI3154116614, name: "handleSymbolSelected", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3154116615, name: "lastItems", sons: null}]};
NTI3154116612.node = NNI3154116612;
NTI3154116612.base = NTI2264924164;
NTI1979711564.base = NTI33554449;
NTI3154116618.base = NTI2936014312;
var NNI2365587460 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}]};
NTI2365587460.node = NNI2365587460;
var NNI3070230751 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230557, name: "Field1", sons: null}]};
NTI3070230751.node = NNI3070230751;
var NNI3070230680 = {kind: 1, offset: "val", len: 0, typ: NTI3070230557, name: "val", sons: null};
NTI3070230680.node = NNI3070230680;
var NNI2936023918 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554446, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230557, name: "Field1", sons: null}]};
NTI2936023918.node = NNI2936023918;
var NNI2986375446 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2969567236, name: "Field1", sons: null}]};
NTI2986375446.node = NNI2986375446;
var NNI2986375499 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230560, name: "Field1", sons: null}]};
NTI2986375499.node = NNI2986375499;
var NNI2986375552 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230538, name: "Field1", sons: null}]};
NTI2986375552.node = NNI2986375552;
var NNI2986375605 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3003121689, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230549, name: "Field1", sons: null}]};
NTI2986375605.node = NNI2986375605;
var NNI2986375658 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230532, name: "Field1", sons: null}]};
NTI2986375658.node = NNI2986375658;
var NNI2986375705 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230535, name: "Field1", sons: null}]};
NTI2986375705.node = NNI2986375705;
var NNI2986375752 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070231688, name: "Field1", sons: null}]};
NTI2986375752.node = NNI2986375752;
var NNI2986375846 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2969567236, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070231493, name: "Field1", sons: null}]};
NTI2986375846.node = NNI2986375846;
var NNI2986375979 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230538, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230532, name: "Field1", sons: null}]};
NTI2986375979.node = NNI2986375979;
var NNI2986376026 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230538, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230535, name: "Field1", sons: null}]};
NTI2986376026.node = NNI2986376026;
var NNI2986376073 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230549, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230535, name: "Field1", sons: null}]};
NTI2986376073.node = NNI2986376073;
var NNI2986376120 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI3070230560, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3070230559, name: "Field1", sons: null}]};
NTI2986376120.node = NNI2986376120;
NTI2667577353.base = NTI33554449;
NTI2667577354.base = NTI33554449;
var NNI2667577349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "files", len: 0, typ: NTI2667577353, name: "files", sons: null}, 
{kind: 1, offset: "folders", len: 0, typ: NTI2667577354, name: "folders", sons: null}]};
NTI2667577349.node = NNI2667577349;
var NNI2701131794 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI2667577349, name: "Field2", sons: null}]};
NTI2701131794.node = NNI2701131794;
NTI2701131791.base = NTI2701131794;
var NNI2701131788 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2701131791, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI2701131788.node = NNI2701131788;
var NNI2701131780 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "baseUrl", len: 0, typ: NTI33554449, name: "baseUrl", sons: null}, 
{kind: 1, offset: "user", len: 0, typ: NTI33554449, name: "user", sons: null}, 
{kind: 1, offset: "repository", len: 0, typ: NTI33554449, name: "repository", sons: null}, 
{kind: 1, offset: "branchOrHash", len: 0, typ: NTI33554449, name: "branchOrHash", sons: null}, 
{kind: 1, offset: "cachedDirectoryListings", len: 0, typ: NTI2701131788, name: "cachedDirectoryListings", sons: null}, 
{kind: 1, offset: "pathToSha", len: 0, typ: NTI1795162120, name: "pathToSha", sons: null}]};
NTI2701131780.node = NNI2701131780;
NTI2701131780.base = NTI2667577352;
var NNI1291845643 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845643.node = NNI1291845643;
NTI1291845643.base = NTI1291845642;
var NNI1291845644 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845644.node = NNI1291845644;
NTI1291845644.base = NTI1291845642;
var NNI1291845645 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1291845645.node = NNI1291845645;
NTI1291845645.base = NTI1291845642;
var NNI2046821074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2046821074.node = NNI2046821074;
var NNI1694498824 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498824.node = NNI1694498824;
NTI1694498824.base = NTI134217746;
var NNI3204448263 = {kind: 1, offset: "score", len: 0, typ: NTI33554446, name: "score", sons: null};
NTI3204448263.node = NNI3204448263;
NTI3204448263.base = NTI33555171;
NTI3204448259.base = NTI3204448263;
NTI3204448275.base = NTI3204448259;
var NNI3204448280 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI3204448280.node = NNI3204448280;
NTI3204448279.base = NTI3204448280;
var NNI3204448274 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2801795278, name: "textEditor", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554435, name: "selected", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554435, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI3204448275, name: "completions", sons: null}, 
{kind: 1, offset: "handleItemConfirmed", len: 0, typ: NTI3204448276, name: "handleItemConfirmed", sons: null}, 
{kind: 1, offset: "handleItemSelected", len: 0, typ: NTI3204448277, name: "handleItemSelected", sons: null}, 
{kind: 1, offset: "handleCanceled", len: 0, typ: NTI3204448278, name: "handleCanceled", sons: null}, 
{kind: 1, offset: "getCompletions", len: 0, typ: NTI3204448281, name: "getCompletions", sons: null}, 
{kind: 1, offset: "getCompletionsAsync", len: 0, typ: NTI3204448283, name: "getCompletionsAsync", sons: null}, 
{kind: 1, offset: "lastContentBounds", len: 0, typ: NTI2080374789, name: "lastContentBounds", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI3204448279, name: "lastItems", sons: null}]};
NTI3204448274.node = NNI3204448274;
NTI3204448274.base = NTI2264924164;
NTI3204448289.base = NTI3204448259;
var NNI1811939334 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939334, name: "joptEnumOrd", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939334, name: "joptEnumSymbol", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939334, name: "joptEnumString", len: 0, sons: null}}};
NTI1811939334.node = NNI1811939334;
var NNI1811939335 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1811939335, name: "joptJsonNodeAsRef", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1811939335, name: "joptJsonNodeAsCopy", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1811939335, name: "joptJsonNodeAsObject", len: 0, sons: null}}};
NTI1811939335.node = NNI1811939335;
var NNI1811939336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "enumMode", len: 0, typ: NTI1811939334, name: "enumMode", sons: null}, 
{kind: 1, offset: "jsonNodeMode", len: 0, typ: NTI1811939335, name: "jsonNodeMode", sons: null}]};
NTI1811939336.node = NNI1811939336;
var NNI1660944862 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554449, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554435, name: "pos", sons: null}]};
NTI1660944862.node = NNI1660944862;
var NNI1660944394 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1660944395, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1660944396, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1660944397, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1660944398, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1660944399, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1660944404, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1660944406, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1660944407, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1660944408, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1660944409, name: "flushImpl", sons: null}]};
NTI1660944394.node = NNI1660944394;
NTI1660944394.base = NTI33555171;
NTI1660944862.base = NTI1660944394;
var NNI1694498820 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498820, name: "tkError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498820, name: "tkEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498820, name: "tkString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498820, name: "tkInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498820, name: "tkFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498820, name: "tkTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498820, name: "tkFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498820, name: "tkNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498820, name: "tkCurlyLe", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498820, name: "tkCurlyRi", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498820, name: "tkBracketLe", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498820, name: "tkBracketRi", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1694498820, name: "tkColon", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1694498820, name: "tkComma", len: 0, sons: null}}};
NTI1694498820.node = NNI1694498820;
var NNI1694498819 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498819, name: "jsonError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498819, name: "jsonEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498819, name: "jsonString", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498819, name: "jsonInt", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498819, name: "jsonFloat", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498819, name: "jsonTrue", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498819, name: "jsonFalse", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498819, name: "jsonNull", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498819, name: "jsonObjectStart", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498819, name: "jsonObjectEnd", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498819, name: "jsonArrayStart", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1694498819, name: "jsonArrayEnd", len: 0, sons: null}}};
NTI1694498819.node = NNI1694498819;
var NNI1694498821 = {kind: 2, offset: 0, typ: null, name: null, len: 11, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498821, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498821, name: "errInvalidToken", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498821, name: "errStringExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498821, name: "errColonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498821, name: "errCommaExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498821, name: "errBracketRiExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498821, name: "errCurlyRiExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498821, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1694498821, name: "errEOC_Expected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1694498821, name: "errEofExpected", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1694498821, name: "errExprExpected", len: 0, sons: null}}};
NTI1694498821.node = NNI1694498821;
var NNI1694498822 = {kind: 2, offset: 0, typ: null, name: null, len: 8, sons: {"0": {kind: 1, offset: 0, typ: NTI1694498822, name: "stateEof", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1694498822, name: "stateStart", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1694498822, name: "stateObject", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1694498822, name: "stateArray", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1694498822, name: "stateExpectArrayComma", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1694498822, name: "stateExpectObjectComma", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1694498822, name: "stateExpectColon", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1694498822, name: "stateExpectValue", len: 0, sons: null}}};
NTI1694498822.node = NNI1694498822;
NTI1694498830.base = NTI1694498822;
var NNI1694498823 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554449, name: "a", sons: null}, 
{kind: 1, offset: "tok", len: 0, typ: NTI1694498820, name: "tok", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1694498819, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1694498821, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1694498830, name: "state", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "rawStringLiterals", len: 0, typ: NTI33554466, name: "rawStringLiterals", sons: null}]};
NTI1694498823.node = NNI1694498823;
NTI1660944393.base = NTI1660944394;
NTI1644167173.base = NTI33554448;
var NNI1644167172 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554435, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554449, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1660944393, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554435, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554435, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554435, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554435, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1644167173, name: "refillChars", sons: null}]};
NTI1644167172.node = NNI1644167172;
NTI1644167172.base = NTI33555171;
NTI1694498823.base = NTI1644167172;
NTI1694498863.base = NTI1694498822;
var NNI1694498825 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1694498825.node = NNI1694498825;
NTI1694498825.base = NTI134217746;
NTI3204448262.base = NTI3204448274;
var NNI3204448440 = {kind: 1, offset: "val", len: 0, typ: NTI3204448262, name: "val", sons: null};
NTI3204448440.node = NNI3204448440;
var NNI1291848455 = {kind: 1, offset: "val", len: 0, typ: NTI2264924163, name: "val", sons: null};
NTI1291848455.node = NNI1291848455;
var NNI2801805821 = {kind: 1, offset: "val", len: 0, typ: NTI1627389956, name: "val", sons: null};
NTI2801805821.node = NNI2801805821;
var NNI1442840583 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1442840583.node = NNI1442840583;
var NNI1291848510 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}, 
{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}]};
NTI1291848510.node = NNI1291848510;
NTI1291848510.base = NTI3204448263;
var NNI1291848518 = {kind: 1, offset: "val", len: 0, typ: NTI2667577348, name: "val", sons: null};
NTI1291848518.node = NNI1291848518;
var NNI1291848512 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null}, 
{kind: 1, offset: "workspaceFolder", len: 0, typ: NTI1291848518, name: "workspaceFolder", sons: null}]};
NTI1291848512.node = NNI1291848512;
NTI1291848512.base = NTI3204448263;
NTI1291853337.base = NTI2231369731;
var NNI1291848323 = {kind: 1, offset: "val", len: 0, typ: NTI2147483651, name: "val", sons: null};
NTI1291848323.node = NNI1291848323;
NTI2936014323.base = NTI2969567236;
var NNI2936014321 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI2936014323, name: "data", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI33554435, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI33554435, name: "tail", sons: null}, 
{kind: 1, offset: "count", len: 0, typ: NTI33554435, name: "count", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554435, name: "mask", sons: null}]};
NTI2936014321.node = NNI2936014321;
NTI2936014330.base = NTI2936014312;
var NNI2936014332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2936014332.node = NNI2936014332;
NTI2936014331.base = NTI2936014332;
NTI2936014333.base = NTI2936014334;
var NNI2936014335 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014335.node = NNI2936014335;
var NNI2936014336 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014336.node = NNI2936014336;
var NNI2936014337 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014337.node = NNI2936014337;
var NNI2936014338 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI2936014338.node = NNI2936014338;
var NNI2936014315 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "editor", len: 0, typ: NTI1291845665, name: "editor", sons: null}, 
{kind: 1, offset: "document", len: 0, typ: NTI2936014285, name: "document", sons: null}, 
{kind: 1, offset: "selectedNode", len: 0, typ: NTI2969567236, name: "selectedNode", sons: null}, 
{kind: 1, offset: "selectionHistory", len: 0, typ: NTI2936014321, name: "selectionHistory", sons: null}, 
{kind: 1, offset: "selectionFuture", len: 0, typ: NTI2936014321, name: "selectionFuture", sons: null}, 
{kind: 1, offset: "deletedNode", len: 0, typ: NTI2969567351, name: "deletedNode", sons: null}, 
{kind: 1, offset: "currentlyEditedSymbol", len: 0, typ: NTI2181038083, name: "currentlyEditedSymbol", sons: null}, 
{kind: 1, offset: "currentlyEditedNode", len: 0, typ: NTI2969567236, name: "currentlyEditedNode", sons: null}, 
{kind: 1, offset: "textEditor", len: 0, typ: NTI2801795278, name: "textEditor", sons: null}, 
{kind: 1, offset: "textDocument", len: 0, typ: NTI2801795206, name: "textDocument", sons: null}, 
{kind: 1, offset: "textEditEventHandler", len: 0, typ: NTI2046820364, name: "textEditEventHandler", sons: null}, 
{kind: 1, offset: "modeEventHandler", len: 0, typ: NTI2046820364, name: "modeEventHandler", sons: null}, 
{kind: 1, offset: "currentMode", len: 0, typ: NTI33554449, name: "currentMode", sons: null}, 
{kind: 1, offset: "completionText", len: 0, typ: NTI33554449, name: "completionText", sons: null}, 
{kind: 1, offset: "completions", len: 0, typ: NTI2936014330, name: "completions", sons: null}, 
{kind: 1, offset: "selectedCompletion", len: 0, typ: NTI33554435, name: "selectedCompletion", sons: null}, 
{kind: 1, offset: "lastItems", len: 0, typ: NTI2936014331, name: "lastItems", sons: null}, 
{kind: 1, offset: "scrollOffset", len: 0, typ: NTI33554445, name: "scrollOffset", sons: null}, 
{kind: 1, offset: "previousBaseIndex", len: 0, typ: NTI33554435, name: "previousBaseIndex", sons: null}, 
{kind: 1, offset: "lastBounds", len: 0, typ: NTI2080374789, name: "lastBounds", sons: null}, 
{kind: 1, offset: "lastLayouts", len: 0, typ: NTI2936014333, name: "lastLayouts", sons: null}, 
{kind: 1, offset: "lastEditCommand", len: 0, typ: NTI2936014335, name: "lastEditCommand", sons: null}, 
{kind: 1, offset: "lastMoveCommand", len: 0, typ: NTI2936014336, name: "lastMoveCommand", sons: null}, 
{kind: 1, offset: "lastOtherCommand", len: 0, typ: NTI2936014337, name: "lastOtherCommand", sons: null}, 
{kind: 1, offset: "lastCommand", len: 0, typ: NTI2936014338, name: "lastCommand", sons: null}]};
NTI2936014315.node = NNI2936014315;
NTI2936014315.base = NTI2147483652;
var NNI1291854636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291854636.node = NNI1291854636;
var NNI1291854637 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI1291854637.node = NNI1291854637;
var NNI1291854635 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1291854636, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1291854637, name: "Field1", sons: null}]};
NTI1291854635.node = NNI1291854635;
NTI1291854643.base = NTI1291854635;
NTI1291854630.base = NTI2231369739;
var NNI1275068527 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI1275068527.node = NNI1275068527;
NTI1275068527.base = NTI33555171;
NTI1275068430.base = NTI1275068527;
NTI1275068556.base = NTI1275068434;
var NNI1275068555 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "acceptCharset", len: 0, typ: NTI33554450, name: "acceptCharset", sons: null}, 
{kind: 1, offset: "action", len: 0, typ: NTI33554450, name: "action", sons: null}, 
{kind: 1, offset: "autocomplete", len: 0, typ: NTI33554450, name: "autocomplete", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI1275068556, name: "elements", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI33554450, name: "encoding", sons: null}, 
{kind: 1, offset: "enctype", len: 0, typ: NTI33554450, name: "enctype", sons: null}, 
{kind: 1, offset: "length", len: 0, typ: NTI33554435, name: "length", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI33554450, name: "method", sons: null}, 
{kind: 1, offset: "noValidate", len: 0, typ: NTI33554466, name: "noValidate", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}]};
NTI1275068555.node = NNI1275068555;
NTI1275068555.base = NTI1275068541;
NTI1275068444.base = NTI1275068555;
var NNI1275068554 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI33554466, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI33554466, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI33554435, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI33554450, name: "value", sons: null}]};
NTI1275068554.node = NNI1275068554;
NTI1275068554.base = NTI1275068541;
NTI1275068443.base = NTI1275068554;
NTI1275068542.base = NTI1275068443;
NTI1275068543.base = NTI1275068443;
var NNI1275068541 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "className", len: 0, typ: NTI33554450, name: "className", sons: null}, 
{kind: 1, offset: "classList", len: 0, typ: NTI1275068430, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI33554466, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI33554466, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI33554450, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI33554466, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI1275068444, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554450, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI33554466, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1275068542, name: "options", sons: null}, 
{kind: 1, offset: "selectedOptions", len: 0, typ: NTI1275068543, name: "selectedOptions", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI33554435, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI33554435, name: "clientHeight", sons: null}, 
{kind: 1, offset: "contentEditable", len: 0, typ: NTI33554450, name: "contentEditable", sons: null}, 
{kind: 1, offset: "isContentEditable", len: 0, typ: NTI33554466, name: "isContentEditable", sons: null}, 
{kind: 1, offset: "dir", len: 0, typ: NTI33554450, name: "dir", sons: null}, 
{kind: 1, offset: "offsetHeight", len: 0, typ: NTI33554435, name: "offsetHeight", sons: null}, 
{kind: 1, offset: "offsetWidth", len: 0, typ: NTI33554435, name: "offsetWidth", sons: null}, 
{kind: 1, offset: "offsetLeft", len: 0, typ: NTI33554435, name: "offsetLeft", sons: null}, 
{kind: 1, offset: "offsetTop", len: 0, typ: NTI33554435, name: "offsetTop", sons: null}]};
NTI1275068541.node = NNI1275068541;
NTI1275068432.base = NTI1275068530;
NTI1275068531.base = NTI1275068432;
NTI1275068532.base = NTI1275068432;
NTI1275068533.base = NTI1275068432;
var NNI1275068431 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1275068431, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1275068431, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1275068431, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1275068431, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1275068431, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1275068431, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1275068431, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1275068431, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1275068431, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1275068431, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1275068431, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1275068431, name: "NotationNode", len: 0, sons: null}}};
NTI1275068431.node = NNI1275068431;
var NNI1275068553 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068553.node = NNI1275068553;
NTI1275068553.base = NTI1275068541;
NTI1275068442.base = NTI1275068553;
NTI1275068535.base = NTI1275068442;
NTI1275068536.base = NTI1275068444;
var NNI1275068557 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "border", len: 0, typ: NTI33554435, name: "border", sons: null}, 
{kind: 1, offset: "complete", len: 0, typ: NTI33554466, name: "complete", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "lowsrc", len: 0, typ: NTI33554450, name: "lowsrc", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}]};
NTI1275068557.node = NNI1275068557;
NTI1275068557.base = NTI1275068541;
NTI1275068445.base = NTI1275068557;
NTI1275068537.base = NTI1275068445;
NTI1275068538.base = NTI1275068434;
var NNI1275068552 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "height", len: 0, typ: NTI33554435, name: "height", sons: null}, 
{kind: 1, offset: "hspace", len: 0, typ: NTI33554435, name: "hspace", sons: null}, 
{kind: 1, offset: "src", len: 0, typ: NTI33554450, name: "src", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554435, name: "width", sons: null}, 
{kind: 1, offset: "type", len: 0, typ: NTI33554450, name: "type", sons: null}, 
{kind: 1, offset: "vspace", len: 0, typ: NTI33554435, name: "vspace", sons: null}]};
NTI1275068552.node = NNI1275068552;
NTI1275068552.base = NTI1275068541;
NTI1275068441.base = NTI1275068552;
NTI1275068539.base = NTI1275068441;
var NNI1275068551 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "target", len: 0, typ: NTI33554450, name: "target", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI33554450, name: "text", sons: null}, 
{kind: 1, offset: "x", len: 0, typ: NTI33554435, name: "x", sons: null}, 
{kind: 1, offset: "y", len: 0, typ: NTI33554435, name: "y", sons: null}]};
NTI1275068551.node = NNI1275068551;
NTI1275068551.base = NTI1275068541;
NTI1275068440.base = NTI1275068551;
NTI1275068540.base = NTI1275068440;
var NNI1275068601 = {kind: 1, offset: "then", len: 0, typ: NTI1275068602, name: "then", sons: null};
NTI1275068601.node = NNI1275068601;
NTI1275068481.base = NTI1275068601;
var NNI1275068604 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "ready", len: 0, typ: NTI1275068481, name: "ready", sons: null}, 
{kind: 1, offset: "onloadingdone", len: 0, typ: NTI1275068605, name: "onloadingdone", sons: null}]};
NTI1275068604.node = NNI1275068604;
NTI1275068482.base = NTI1275068604;
var NNI1275068534 = {kind: 2, len: 25, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "activeElement", len: 0, typ: NTI1275068434, name: "activeElement", sons: null}, 
{kind: 1, offset: "documentElement", len: 0, typ: NTI1275068434, name: "documentElement", sons: null}, 
{kind: 1, offset: "alinkColor", len: 0, typ: NTI33554450, name: "alinkColor", sons: null}, 
{kind: 1, offset: "bgColor", len: 0, typ: NTI33554450, name: "bgColor", sons: null}, 
{kind: 1, offset: "body", len: 0, typ: NTI1275068434, name: "body", sons: null}, 
{kind: 1, offset: "charset", len: 0, typ: NTI33554450, name: "charset", sons: null}, 
{kind: 1, offset: "cookie", len: 0, typ: NTI33554450, name: "cookie", sons: null}, 
{kind: 1, offset: "defaultCharset", len: 0, typ: NTI33554450, name: "defaultCharset", sons: null}, 
{kind: 1, offset: "fgColor", len: 0, typ: NTI33554450, name: "fgColor", sons: null}, 
{kind: 1, offset: "head", len: 0, typ: NTI1275068434, name: "head", sons: null}, 
{kind: 1, offset: "hidden", len: 0, typ: NTI33554466, name: "hidden", sons: null}, 
{kind: 1, offset: "lastModified", len: 0, typ: NTI33554450, name: "lastModified", sons: null}, 
{kind: 1, offset: "linkColor", len: 0, typ: NTI33554450, name: "linkColor", sons: null}, 
{kind: 1, offset: "referrer", len: 0, typ: NTI33554450, name: "referrer", sons: null}, 
{kind: 1, offset: "title", len: 0, typ: NTI33554450, name: "title", sons: null}, 
{kind: 1, offset: "URL", len: 0, typ: NTI33554450, name: "URL", sons: null}, 
{kind: 1, offset: "visibilityState", len: 0, typ: NTI33554450, name: "visibilityState", sons: null}, 
{kind: 1, offset: "vlinkColor", len: 0, typ: NTI33554450, name: "vlinkColor", sons: null}, 
{kind: 1, offset: "anchors", len: 0, typ: NTI1275068535, name: "anchors", sons: null}, 
{kind: 1, offset: "forms", len: 0, typ: NTI1275068536, name: "forms", sons: null}, 
{kind: 1, offset: "images", len: 0, typ: NTI1275068537, name: "images", sons: null}, 
{kind: 1, offset: "applets", len: 0, typ: NTI1275068538, name: "applets", sons: null}, 
{kind: 1, offset: "embeds", len: 0, typ: NTI1275068539, name: "embeds", sons: null}, 
{kind: 1, offset: "links", len: 0, typ: NTI1275068540, name: "links", sons: null}, 
{kind: 1, offset: "fonts", len: 0, typ: NTI1275068482, name: "fonts", sons: null}]};
NTI1275068534.node = NNI1275068534;
NTI1275068534.base = NTI1275068530;
NTI1275068433.base = NTI1275068534;
var NNI1275068558 = {kind: 2, len: 368, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "alignContent", len: 0, typ: NTI33554450, name: "alignContent", sons: null}, 
{kind: 1, offset: "alignItems", len: 0, typ: NTI33554450, name: "alignItems", sons: null}, 
{kind: 1, offset: "alignSelf", len: 0, typ: NTI33554450, name: "alignSelf", sons: null}, 
{kind: 1, offset: "all", len: 0, typ: NTI33554450, name: "all", sons: null}, 
{kind: 1, offset: "animation", len: 0, typ: NTI33554450, name: "animation", sons: null}, 
{kind: 1, offset: "animationDelay", len: 0, typ: NTI33554450, name: "animationDelay", sons: null}, 
{kind: 1, offset: "animationDirection", len: 0, typ: NTI33554450, name: "animationDirection", sons: null}, 
{kind: 1, offset: "animationDuration", len: 0, typ: NTI33554450, name: "animationDuration", sons: null}, 
{kind: 1, offset: "animationFillMode", len: 0, typ: NTI33554450, name: "animationFillMode", sons: null}, 
{kind: 1, offset: "animationIterationCount", len: 0, typ: NTI33554450, name: "animationIterationCount", sons: null}, 
{kind: 1, offset: "animationName", len: 0, typ: NTI33554450, name: "animationName", sons: null}, 
{kind: 1, offset: "animationPlayState", len: 0, typ: NTI33554450, name: "animationPlayState", sons: null}, 
{kind: 1, offset: "animationTimingFunction", len: 0, typ: NTI33554450, name: "animationTimingFunction", sons: null}, 
{kind: 1, offset: "backdropFilter", len: 0, typ: NTI33554450, name: "backdropFilter", sons: null}, 
{kind: 1, offset: "backfaceVisibility", len: 0, typ: NTI33554450, name: "backfaceVisibility", sons: null}, 
{kind: 1, offset: "background", len: 0, typ: NTI33554450, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI33554450, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundBlendMode", len: 0, typ: NTI33554450, name: "backgroundBlendMode", sons: null}, 
{kind: 1, offset: "backgroundClip", len: 0, typ: NTI33554450, name: "backgroundClip", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI33554450, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI33554450, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundOrigin", len: 0, typ: NTI33554450, name: "backgroundOrigin", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI33554450, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI33554450, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "backgroundSize", len: 0, typ: NTI33554450, name: "backgroundSize", sons: null}, 
{kind: 1, offset: "blockSize", len: 0, typ: NTI33554450, name: "blockSize", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI33554450, name: "border", sons: null}, 
{kind: 1, offset: "borderBlock", len: 0, typ: NTI33554450, name: "borderBlock", sons: null}, 
{kind: 1, offset: "borderBlockColor", len: 0, typ: NTI33554450, name: "borderBlockColor", sons: null}, 
{kind: 1, offset: "borderBlockEnd", len: 0, typ: NTI33554450, name: "borderBlockEnd", sons: null}, 
{kind: 1, offset: "borderBlockEndColor", len: 0, typ: NTI33554450, name: "borderBlockEndColor", sons: null}, 
{kind: 1, offset: "borderBlockEndStyle", len: 0, typ: NTI33554450, name: "borderBlockEndStyle", sons: null}, 
{kind: 1, offset: "borderBlockEndWidth", len: 0, typ: NTI33554450, name: "borderBlockEndWidth", sons: null}, 
{kind: 1, offset: "borderBlockStart", len: 0, typ: NTI33554450, name: "borderBlockStart", sons: null}, 
{kind: 1, offset: "borderBlockStartColor", len: 0, typ: NTI33554450, name: "borderBlockStartColor", sons: null}, 
{kind: 1, offset: "borderBlockStartStyle", len: 0, typ: NTI33554450, name: "borderBlockStartStyle", sons: null}, 
{kind: 1, offset: "borderBlockStartWidth", len: 0, typ: NTI33554450, name: "borderBlockStartWidth", sons: null}, 
{kind: 1, offset: "borderBlockStyle", len: 0, typ: NTI33554450, name: "borderBlockStyle", sons: null}, 
{kind: 1, offset: "borderBlockWidth", len: 0, typ: NTI33554450, name: "borderBlockWidth", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI33554450, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI33554450, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomLeftRadius", len: 0, typ: NTI33554450, name: "borderBottomLeftRadius", sons: null}, 
{kind: 1, offset: "borderBottomRightRadius", len: 0, typ: NTI33554450, name: "borderBottomRightRadius", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI33554450, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI33554450, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderCollapse", len: 0, typ: NTI33554450, name: "borderCollapse", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI33554450, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderEndEndRadius", len: 0, typ: NTI33554450, name: "borderEndEndRadius", sons: null}, 
{kind: 1, offset: "borderEndStartRadius", len: 0, typ: NTI33554450, name: "borderEndStartRadius", sons: null}, 
{kind: 1, offset: "borderImage", len: 0, typ: NTI33554450, name: "borderImage", sons: null}, 
{kind: 1, offset: "borderImageOutset", len: 0, typ: NTI33554450, name: "borderImageOutset", sons: null}, 
{kind: 1, offset: "borderImageRepeat", len: 0, typ: NTI33554450, name: "borderImageRepeat", sons: null}, 
{kind: 1, offset: "borderImageSlice", len: 0, typ: NTI33554450, name: "borderImageSlice", sons: null}, 
{kind: 1, offset: "borderImageSource", len: 0, typ: NTI33554450, name: "borderImageSource", sons: null}, 
{kind: 1, offset: "borderImageWidth", len: 0, typ: NTI33554450, name: "borderImageWidth", sons: null}, 
{kind: 1, offset: "borderInline", len: 0, typ: NTI33554450, name: "borderInline", sons: null}, 
{kind: 1, offset: "borderInlineColor", len: 0, typ: NTI33554450, name: "borderInlineColor", sons: null}, 
{kind: 1, offset: "borderInlineEnd", len: 0, typ: NTI33554450, name: "borderInlineEnd", sons: null}, 
{kind: 1, offset: "borderInlineEndColor", len: 0, typ: NTI33554450, name: "borderInlineEndColor", sons: null}, 
{kind: 1, offset: "borderInlineEndStyle", len: 0, typ: NTI33554450, name: "borderInlineEndStyle", sons: null}, 
{kind: 1, offset: "borderInlineEndWidth", len: 0, typ: NTI33554450, name: "borderInlineEndWidth", sons: null}, 
{kind: 1, offset: "borderInlineStart", len: 0, typ: NTI33554450, name: "borderInlineStart", sons: null}, 
{kind: 1, offset: "borderInlineStartColor", len: 0, typ: NTI33554450, name: "borderInlineStartColor", sons: null}, 
{kind: 1, offset: "borderInlineStartStyle", len: 0, typ: NTI33554450, name: "borderInlineStartStyle", sons: null}, 
{kind: 1, offset: "borderInlineStartWidth", len: 0, typ: NTI33554450, name: "borderInlineStartWidth", sons: null}, 
{kind: 1, offset: "borderInlineStyle", len: 0, typ: NTI33554450, name: "borderInlineStyle", sons: null}, 
{kind: 1, offset: "borderInlineWidth", len: 0, typ: NTI33554450, name: "borderInlineWidth", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI33554450, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI33554450, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI33554450, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI33554450, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRadius", len: 0, typ: NTI33554450, name: "borderRadius", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI33554450, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI33554450, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI33554450, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI33554450, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderSpacing", len: 0, typ: NTI33554450, name: "borderSpacing", sons: null}, 
{kind: 1, offset: "borderStartEndRadius", len: 0, typ: NTI33554450, name: "borderStartEndRadius", sons: null}, 
{kind: 1, offset: "borderStartStartRadius", len: 0, typ: NTI33554450, name: "borderStartStartRadius", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI33554450, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI33554450, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI33554450, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopLeftRadius", len: 0, typ: NTI33554450, name: "borderTopLeftRadius", sons: null}, 
{kind: 1, offset: "borderTopRightRadius", len: 0, typ: NTI33554450, name: "borderTopRightRadius", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI33554450, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI33554450, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI33554450, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI33554450, name: "bottom", sons: null}, 
{kind: 1, offset: "boxDecorationBreak", len: 0, typ: NTI33554450, name: "boxDecorationBreak", sons: null}, 
{kind: 1, offset: "boxShadow", len: 0, typ: NTI33554450, name: "boxShadow", sons: null}, 
{kind: 1, offset: "boxSizing", len: 0, typ: NTI33554450, name: "boxSizing", sons: null}, 
{kind: 1, offset: "breakAfter", len: 0, typ: NTI33554450, name: "breakAfter", sons: null}, 
{kind: 1, offset: "breakBefore", len: 0, typ: NTI33554450, name: "breakBefore", sons: null}, 
{kind: 1, offset: "breakInside", len: 0, typ: NTI33554450, name: "breakInside", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI33554450, name: "captionSide", sons: null}, 
{kind: 1, offset: "caretColor", len: 0, typ: NTI33554450, name: "caretColor", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI33554450, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI33554450, name: "clip", sons: null}, 
{kind: 1, offset: "clipPath", len: 0, typ: NTI33554450, name: "clipPath", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI33554450, name: "color", sons: null}, 
{kind: 1, offset: "colorAdjust", len: 0, typ: NTI33554450, name: "colorAdjust", sons: null}, 
{kind: 1, offset: "columnCount", len: 0, typ: NTI33554450, name: "columnCount", sons: null}, 
{kind: 1, offset: "columnFill", len: 0, typ: NTI33554450, name: "columnFill", sons: null}, 
{kind: 1, offset: "columnGap", len: 0, typ: NTI33554450, name: "columnGap", sons: null}, 
{kind: 1, offset: "columnRule", len: 0, typ: NTI33554450, name: "columnRule", sons: null}, 
{kind: 1, offset: "columnRuleColor", len: 0, typ: NTI33554450, name: "columnRuleColor", sons: null}, 
{kind: 1, offset: "columnRuleStyle", len: 0, typ: NTI33554450, name: "columnRuleStyle", sons: null}, 
{kind: 1, offset: "columnRuleWidth", len: 0, typ: NTI33554450, name: "columnRuleWidth", sons: null}, 
{kind: 1, offset: "columnSpan", len: 0, typ: NTI33554450, name: "columnSpan", sons: null}, 
{kind: 1, offset: "columnWidth", len: 0, typ: NTI33554450, name: "columnWidth", sons: null}, 
{kind: 1, offset: "columns", len: 0, typ: NTI33554450, name: "columns", sons: null}, 
{kind: 1, offset: "contain", len: 0, typ: NTI33554450, name: "contain", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI33554450, name: "content", sons: null}, 
{kind: 1, offset: "counterIncrement", len: 0, typ: NTI33554450, name: "counterIncrement", sons: null}, 
{kind: 1, offset: "counterReset", len: 0, typ: NTI33554450, name: "counterReset", sons: null}, 
{kind: 1, offset: "counterSet", len: 0, typ: NTI33554450, name: "counterSet", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI33554450, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI33554450, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI33554450, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI33554450, name: "emptyCells", sons: null}, 
{kind: 1, offset: "filter", len: 0, typ: NTI33554450, name: "filter", sons: null}, 
{kind: 1, offset: "flex", len: 0, typ: NTI33554450, name: "flex", sons: null}, 
{kind: 1, offset: "flexBasis", len: 0, typ: NTI33554450, name: "flexBasis", sons: null}, 
{kind: 1, offset: "flexDirection", len: 0, typ: NTI33554450, name: "flexDirection", sons: null}, 
{kind: 1, offset: "flexFlow", len: 0, typ: NTI33554450, name: "flexFlow", sons: null}, 
{kind: 1, offset: "flexGrow", len: 0, typ: NTI33554450, name: "flexGrow", sons: null}, 
{kind: 1, offset: "flexShrink", len: 0, typ: NTI33554450, name: "flexShrink", sons: null}, 
{kind: 1, offset: "flexWrap", len: 0, typ: NTI33554450, name: "flexWrap", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI33554450, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI33554450, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI33554450, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontFeatureSettings", len: 0, typ: NTI33554450, name: "fontFeatureSettings", sons: null}, 
{kind: 1, offset: "fontKerning", len: 0, typ: NTI33554450, name: "fontKerning", sons: null}, 
{kind: 1, offset: "fontLanguageOverride", len: 0, typ: NTI33554450, name: "fontLanguageOverride", sons: null}, 
{kind: 1, offset: "fontOpticalSizing", len: 0, typ: NTI33554450, name: "fontOpticalSizing", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554450, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontSizeAdjust", len: 0, typ: NTI33554450, name: "fontSizeAdjust", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI33554450, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI33554450, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontSynthesis", len: 0, typ: NTI33554450, name: "fontSynthesis", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI33554450, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontVariantAlternates", len: 0, typ: NTI33554450, name: "fontVariantAlternates", sons: null}, 
{kind: 1, offset: "fontVariantCaps", len: 0, typ: NTI33554450, name: "fontVariantCaps", sons: null}, 
{kind: 1, offset: "fontVariantEastAsian", len: 0, typ: NTI33554450, name: "fontVariantEastAsian", sons: null}, 
{kind: 1, offset: "fontVariantLigatures", len: 0, typ: NTI33554450, name: "fontVariantLigatures", sons: null}, 
{kind: 1, offset: "fontVariantNumeric", len: 0, typ: NTI33554450, name: "fontVariantNumeric", sons: null}, 
{kind: 1, offset: "fontVariantPosition", len: 0, typ: NTI33554450, name: "fontVariantPosition", sons: null}, 
{kind: 1, offset: "fontVariationSettings", len: 0, typ: NTI33554450, name: "fontVariationSettings", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI33554450, name: "fontWeight", sons: null}, 
{kind: 1, offset: "gap", len: 0, typ: NTI33554450, name: "gap", sons: null}, 
{kind: 1, offset: "grid", len: 0, typ: NTI33554450, name: "grid", sons: null}, 
{kind: 1, offset: "gridArea", len: 0, typ: NTI33554450, name: "gridArea", sons: null}, 
{kind: 1, offset: "gridAutoColumns", len: 0, typ: NTI33554450, name: "gridAutoColumns", sons: null}, 
{kind: 1, offset: "gridAutoFlow", len: 0, typ: NTI33554450, name: "gridAutoFlow", sons: null}, 
{kind: 1, offset: "gridAutoRows", len: 0, typ: NTI33554450, name: "gridAutoRows", sons: null}, 
{kind: 1, offset: "gridColumn", len: 0, typ: NTI33554450, name: "gridColumn", sons: null}, 
{kind: 1, offset: "gridColumnEnd", len: 0, typ: NTI33554450, name: "gridColumnEnd", sons: null}, 
{kind: 1, offset: "gridColumnStart", len: 0, typ: NTI33554450, name: "gridColumnStart", sons: null}, 
{kind: 1, offset: "gridRow", len: 0, typ: NTI33554450, name: "gridRow", sons: null}, 
{kind: 1, offset: "gridRowEnd", len: 0, typ: NTI33554450, name: "gridRowEnd", sons: null}, 
{kind: 1, offset: "gridRowStart", len: 0, typ: NTI33554450, name: "gridRowStart", sons: null}, 
{kind: 1, offset: "gridTemplate", len: 0, typ: NTI33554450, name: "gridTemplate", sons: null}, 
{kind: 1, offset: "gridTemplateAreas", len: 0, typ: NTI33554450, name: "gridTemplateAreas", sons: null}, 
{kind: 1, offset: "gridTemplateColumns", len: 0, typ: NTI33554450, name: "gridTemplateColumns", sons: null}, 
{kind: 1, offset: "gridTemplateRows", len: 0, typ: NTI33554450, name: "gridTemplateRows", sons: null}, 
{kind: 1, offset: "hangingPunctuation", len: 0, typ: NTI33554450, name: "hangingPunctuation", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI33554450, name: "height", sons: null}, 
{kind: 1, offset: "hyphens", len: 0, typ: NTI33554450, name: "hyphens", sons: null}, 
{kind: 1, offset: "imageOrientation", len: 0, typ: NTI33554450, name: "imageOrientation", sons: null}, 
{kind: 1, offset: "imageRendering", len: 0, typ: NTI33554450, name: "imageRendering", sons: null}, 
{kind: 1, offset: "inlineSize", len: 0, typ: NTI33554450, name: "inlineSize", sons: null}, 
{kind: 1, offset: "inset", len: 0, typ: NTI33554450, name: "inset", sons: null}, 
{kind: 1, offset: "insetBlock", len: 0, typ: NTI33554450, name: "insetBlock", sons: null}, 
{kind: 1, offset: "insetBlockEnd", len: 0, typ: NTI33554450, name: "insetBlockEnd", sons: null}, 
{kind: 1, offset: "insetBlockStart", len: 0, typ: NTI33554450, name: "insetBlockStart", sons: null}, 
{kind: 1, offset: "insetInline", len: 0, typ: NTI33554450, name: "insetInline", sons: null}, 
{kind: 1, offset: "insetInlineEnd", len: 0, typ: NTI33554450, name: "insetInlineEnd", sons: null}, 
{kind: 1, offset: "insetInlineStart", len: 0, typ: NTI33554450, name: "insetInlineStart", sons: null}, 
{kind: 1, offset: "isolation", len: 0, typ: NTI33554450, name: "isolation", sons: null}, 
{kind: 1, offset: "justifyContent", len: 0, typ: NTI33554450, name: "justifyContent", sons: null}, 
{kind: 1, offset: "justifyItems", len: 0, typ: NTI33554450, name: "justifyItems", sons: null}, 
{kind: 1, offset: "justifySelf", len: 0, typ: NTI33554450, name: "justifySelf", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI33554450, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI33554450, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineBreak", len: 0, typ: NTI33554450, name: "lineBreak", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI33554450, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI33554450, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI33554450, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI33554450, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI33554450, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI33554450, name: "margin", sons: null}, 
{kind: 1, offset: "marginBlock", len: 0, typ: NTI33554450, name: "marginBlock", sons: null}, 
{kind: 1, offset: "marginBlockEnd", len: 0, typ: NTI33554450, name: "marginBlockEnd", sons: null}, 
{kind: 1, offset: "marginBlockStart", len: 0, typ: NTI33554450, name: "marginBlockStart", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI33554450, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginInline", len: 0, typ: NTI33554450, name: "marginInline", sons: null}, 
{kind: 1, offset: "marginInlineEnd", len: 0, typ: NTI33554450, name: "marginInlineEnd", sons: null}, 
{kind: 1, offset: "marginInlineStart", len: 0, typ: NTI33554450, name: "marginInlineStart", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI33554450, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI33554450, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI33554450, name: "marginTop", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI33554450, name: "mask", sons: null}, 
{kind: 1, offset: "maskBorder", len: 0, typ: NTI33554450, name: "maskBorder", sons: null}, 
{kind: 1, offset: "maskBorderMode", len: 0, typ: NTI33554450, name: "maskBorderMode", sons: null}, 
{kind: 1, offset: "maskBorderOutset", len: 0, typ: NTI33554450, name: "maskBorderOutset", sons: null}, 
{kind: 1, offset: "maskBorderRepeat", len: 0, typ: NTI33554450, name: "maskBorderRepeat", sons: null}, 
{kind: 1, offset: "maskBorderSlice", len: 0, typ: NTI33554450, name: "maskBorderSlice", sons: null}, 
{kind: 1, offset: "maskBorderSource", len: 0, typ: NTI33554450, name: "maskBorderSource", sons: null}, 
{kind: 1, offset: "maskBorderWidth", len: 0, typ: NTI33554450, name: "maskBorderWidth", sons: null}, 
{kind: 1, offset: "maskClip", len: 0, typ: NTI33554450, name: "maskClip", sons: null}, 
{kind: 1, offset: "maskComposite", len: 0, typ: NTI33554450, name: "maskComposite", sons: null}, 
{kind: 1, offset: "maskImage", len: 0, typ: NTI33554450, name: "maskImage", sons: null}, 
{kind: 1, offset: "maskMode", len: 0, typ: NTI33554450, name: "maskMode", sons: null}, 
{kind: 1, offset: "maskOrigin", len: 0, typ: NTI33554450, name: "maskOrigin", sons: null}, 
{kind: 1, offset: "maskPosition", len: 0, typ: NTI33554450, name: "maskPosition", sons: null}, 
{kind: 1, offset: "maskRepeat", len: 0, typ: NTI33554450, name: "maskRepeat", sons: null}, 
{kind: 1, offset: "maskSize", len: 0, typ: NTI33554450, name: "maskSize", sons: null}, 
{kind: 1, offset: "maskType", len: 0, typ: NTI33554450, name: "maskType", sons: null}, 
{kind: 1, offset: "maxBlockSize", len: 0, typ: NTI33554450, name: "maxBlockSize", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI33554450, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxInlineSize", len: 0, typ: NTI33554450, name: "maxInlineSize", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI33554450, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minBlockSize", len: 0, typ: NTI33554450, name: "minBlockSize", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI33554450, name: "minHeight", sons: null}, 
{kind: 1, offset: "minInlineSize", len: 0, typ: NTI33554450, name: "minInlineSize", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI33554450, name: "minWidth", sons: null}, 
{kind: 1, offset: "mixBlendMode", len: 0, typ: NTI33554450, name: "mixBlendMode", sons: null}, 
{kind: 1, offset: "objectFit", len: 0, typ: NTI33554450, name: "objectFit", sons: null}, 
{kind: 1, offset: "objectPosition", len: 0, typ: NTI33554450, name: "objectPosition", sons: null}, 
{kind: 1, offset: "offset", len: 0, typ: NTI33554450, name: "offset", sons: null}, 
{kind: 1, offset: "offsetAnchor", len: 0, typ: NTI33554450, name: "offsetAnchor", sons: null}, 
{kind: 1, offset: "offsetDistance", len: 0, typ: NTI33554450, name: "offsetDistance", sons: null}, 
{kind: 1, offset: "offsetPath", len: 0, typ: NTI33554450, name: "offsetPath", sons: null}, 
{kind: 1, offset: "offsetRotate", len: 0, typ: NTI33554450, name: "offsetRotate", sons: null}, 
{kind: 1, offset: "opacity", len: 0, typ: NTI33554450, name: "opacity", sons: null}, 
{kind: 1, offset: "order", len: 0, typ: NTI33554450, name: "order", sons: null}, 
{kind: 1, offset: "orphans", len: 0, typ: NTI33554450, name: "orphans", sons: null}, 
{kind: 1, offset: "outline", len: 0, typ: NTI33554450, name: "outline", sons: null}, 
{kind: 1, offset: "outlineColor", len: 0, typ: NTI33554450, name: "outlineColor", sons: null}, 
{kind: 1, offset: "outlineOffset", len: 0, typ: NTI33554450, name: "outlineOffset", sons: null}, 
{kind: 1, offset: "outlineStyle", len: 0, typ: NTI33554450, name: "outlineStyle", sons: null}, 
{kind: 1, offset: "outlineWidth", len: 0, typ: NTI33554450, name: "outlineWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI33554450, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowAnchor", len: 0, typ: NTI33554450, name: "overflowAnchor", sons: null}, 
{kind: 1, offset: "overflowBlock", len: 0, typ: NTI33554450, name: "overflowBlock", sons: null}, 
{kind: 1, offset: "overflowInline", len: 0, typ: NTI33554450, name: "overflowInline", sons: null}, 
{kind: 1, offset: "overflowWrap", len: 0, typ: NTI33554450, name: "overflowWrap", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI33554450, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI33554450, name: "overflowY", sons: null}, 
{kind: 1, offset: "overscrollBehavior", len: 0, typ: NTI33554450, name: "overscrollBehavior", sons: null}, 
{kind: 1, offset: "overscrollBehaviorBlock", len: 0, typ: NTI33554450, name: "overscrollBehaviorBlock", sons: null}, 
{kind: 1, offset: "overscrollBehaviorInline", len: 0, typ: NTI33554450, name: "overscrollBehaviorInline", sons: null}, 
{kind: 1, offset: "overscrollBehaviorX", len: 0, typ: NTI33554450, name: "overscrollBehaviorX", sons: null}, 
{kind: 1, offset: "overscrollBehaviorY", len: 0, typ: NTI33554450, name: "overscrollBehaviorY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI33554450, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBlock", len: 0, typ: NTI33554450, name: "paddingBlock", sons: null}, 
{kind: 1, offset: "paddingBlockEnd", len: 0, typ: NTI33554450, name: "paddingBlockEnd", sons: null}, 
{kind: 1, offset: "paddingBlockStart", len: 0, typ: NTI33554450, name: "paddingBlockStart", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI33554450, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingInline", len: 0, typ: NTI33554450, name: "paddingInline", sons: null}, 
{kind: 1, offset: "paddingInlineEnd", len: 0, typ: NTI33554450, name: "paddingInlineEnd", sons: null}, 
{kind: 1, offset: "paddingInlineStart", len: 0, typ: NTI33554450, name: "paddingInlineStart", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI33554450, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI33554450, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI33554450, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI33554450, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI33554450, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pageBreakInside", len: 0, typ: NTI33554450, name: "pageBreakInside", sons: null}, 
{kind: 1, offset: "paintOrder", len: 0, typ: NTI33554450, name: "paintOrder", sons: null}, 
{kind: 1, offset: "perspective", len: 0, typ: NTI33554450, name: "perspective", sons: null}, 
{kind: 1, offset: "perspectiveOrigin", len: 0, typ: NTI33554450, name: "perspectiveOrigin", sons: null}, 
{kind: 1, offset: "placeContent", len: 0, typ: NTI33554450, name: "placeContent", sons: null}, 
{kind: 1, offset: "placeItems", len: 0, typ: NTI33554450, name: "placeItems", sons: null}, 
{kind: 1, offset: "placeSelf", len: 0, typ: NTI33554450, name: "placeSelf", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI33554450, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI33554450, name: "position", sons: null}, 
{kind: 1, offset: "quotes", len: 0, typ: NTI33554450, name: "quotes", sons: null}, 
{kind: 1, offset: "resize", len: 0, typ: NTI33554450, name: "resize", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI33554450, name: "right", sons: null}, 
{kind: 1, offset: "rotate", len: 0, typ: NTI33554450, name: "rotate", sons: null}, 
{kind: 1, offset: "rowGap", len: 0, typ: NTI33554450, name: "rowGap", sons: null}, 
{kind: 1, offset: "scale", len: 0, typ: NTI33554450, name: "scale", sons: null}, 
{kind: 1, offset: "scrollBehavior", len: 0, typ: NTI33554450, name: "scrollBehavior", sons: null}, 
{kind: 1, offset: "scrollMargin", len: 0, typ: NTI33554450, name: "scrollMargin", sons: null}, 
{kind: 1, offset: "scrollMarginBlock", len: 0, typ: NTI33554450, name: "scrollMarginBlock", sons: null}, 
{kind: 1, offset: "scrollMarginBlockEnd", len: 0, typ: NTI33554450, name: "scrollMarginBlockEnd", sons: null}, 
{kind: 1, offset: "scrollMarginBlockStart", len: 0, typ: NTI33554450, name: "scrollMarginBlockStart", sons: null}, 
{kind: 1, offset: "scrollMarginBottom", len: 0, typ: NTI33554450, name: "scrollMarginBottom", sons: null}, 
{kind: 1, offset: "scrollMarginInline", len: 0, typ: NTI33554450, name: "scrollMarginInline", sons: null}, 
{kind: 1, offset: "scrollMarginInlineEnd", len: 0, typ: NTI33554450, name: "scrollMarginInlineEnd", sons: null}, 
{kind: 1, offset: "scrollMarginInlineStart", len: 0, typ: NTI33554450, name: "scrollMarginInlineStart", sons: null}, 
{kind: 1, offset: "scrollMarginLeft", len: 0, typ: NTI33554450, name: "scrollMarginLeft", sons: null}, 
{kind: 1, offset: "scrollMarginRight", len: 0, typ: NTI33554450, name: "scrollMarginRight", sons: null}, 
{kind: 1, offset: "scrollMarginTop", len: 0, typ: NTI33554450, name: "scrollMarginTop", sons: null}, 
{kind: 1, offset: "scrollPadding", len: 0, typ: NTI33554450, name: "scrollPadding", sons: null}, 
{kind: 1, offset: "scrollPaddingBlock", len: 0, typ: NTI33554450, name: "scrollPaddingBlock", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockEnd", len: 0, typ: NTI33554450, name: "scrollPaddingBlockEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingBlockStart", len: 0, typ: NTI33554450, name: "scrollPaddingBlockStart", sons: null}, 
{kind: 1, offset: "scrollPaddingBottom", len: 0, typ: NTI33554450, name: "scrollPaddingBottom", sons: null}, 
{kind: 1, offset: "scrollPaddingInline", len: 0, typ: NTI33554450, name: "scrollPaddingInline", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineEnd", len: 0, typ: NTI33554450, name: "scrollPaddingInlineEnd", sons: null}, 
{kind: 1, offset: "scrollPaddingInlineStart", len: 0, typ: NTI33554450, name: "scrollPaddingInlineStart", sons: null}, 
{kind: 1, offset: "scrollPaddingLeft", len: 0, typ: NTI33554450, name: "scrollPaddingLeft", sons: null}, 
{kind: 1, offset: "scrollPaddingRight", len: 0, typ: NTI33554450, name: "scrollPaddingRight", sons: null}, 
{kind: 1, offset: "scrollPaddingTop", len: 0, typ: NTI33554450, name: "scrollPaddingTop", sons: null}, 
{kind: 1, offset: "scrollSnapAlign", len: 0, typ: NTI33554450, name: "scrollSnapAlign", sons: null}, 
{kind: 1, offset: "scrollSnapStop", len: 0, typ: NTI33554450, name: "scrollSnapStop", sons: null}, 
{kind: 1, offset: "scrollSnapType", len: 0, typ: NTI33554450, name: "scrollSnapType", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI33554450, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI33554450, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI33554450, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarColor", len: 0, typ: NTI33554450, name: "scrollbarColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI33554450, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI33554450, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI33554450, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI33554450, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI33554450, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "scrollbarWidth", len: 0, typ: NTI33554450, name: "scrollbarWidth", sons: null}, 
{kind: 1, offset: "shapeImageThreshold", len: 0, typ: NTI33554450, name: "shapeImageThreshold", sons: null}, 
{kind: 1, offset: "shapeMargin", len: 0, typ: NTI33554450, name: "shapeMargin", sons: null}, 
{kind: 1, offset: "shapeOutside", len: 0, typ: NTI33554450, name: "shapeOutside", sons: null}, 
{kind: 1, offset: "tabSize", len: 0, typ: NTI33554450, name: "tabSize", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI33554450, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI33554450, name: "textAlign", sons: null}, 
{kind: 1, offset: "textAlignLast", len: 0, typ: NTI33554450, name: "textAlignLast", sons: null}, 
{kind: 1, offset: "textCombineUpright", len: 0, typ: NTI33554450, name: "textCombineUpright", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI33554450, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textDecorationColor", len: 0, typ: NTI33554450, name: "textDecorationColor", sons: null}, 
{kind: 1, offset: "textDecorationLine", len: 0, typ: NTI33554450, name: "textDecorationLine", sons: null}, 
{kind: 1, offset: "textDecorationSkipInk", len: 0, typ: NTI33554450, name: "textDecorationSkipInk", sons: null}, 
{kind: 1, offset: "textDecorationStyle", len: 0, typ: NTI33554450, name: "textDecorationStyle", sons: null}, 
{kind: 1, offset: "textDecorationThickness", len: 0, typ: NTI33554450, name: "textDecorationThickness", sons: null}, 
{kind: 1, offset: "textEmphasis", len: 0, typ: NTI33554450, name: "textEmphasis", sons: null}, 
{kind: 1, offset: "textEmphasisColor", len: 0, typ: NTI33554450, name: "textEmphasisColor", sons: null}, 
{kind: 1, offset: "textEmphasisPosition", len: 0, typ: NTI33554450, name: "textEmphasisPosition", sons: null}, 
{kind: 1, offset: "textEmphasisStyle", len: 0, typ: NTI33554450, name: "textEmphasisStyle", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI33554450, name: "textIndent", sons: null}, 
{kind: 1, offset: "textJustify", len: 0, typ: NTI33554450, name: "textJustify", sons: null}, 
{kind: 1, offset: "textOrientation", len: 0, typ: NTI33554450, name: "textOrientation", sons: null}, 
{kind: 1, offset: "textOverflow", len: 0, typ: NTI33554450, name: "textOverflow", sons: null}, 
{kind: 1, offset: "textRendering", len: 0, typ: NTI33554450, name: "textRendering", sons: null}, 
{kind: 1, offset: "textShadow", len: 0, typ: NTI33554450, name: "textShadow", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI33554450, name: "textTransform", sons: null}, 
{kind: 1, offset: "textUnderlineOffset", len: 0, typ: NTI33554450, name: "textUnderlineOffset", sons: null}, 
{kind: 1, offset: "textUnderlinePosition", len: 0, typ: NTI33554450, name: "textUnderlinePosition", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI33554450, name: "top", sons: null}, 
{kind: 1, offset: "touchAction", len: 0, typ: NTI33554450, name: "touchAction", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI33554450, name: "transform", sons: null}, 
{kind: 1, offset: "transformBox", len: 0, typ: NTI33554450, name: "transformBox", sons: null}, 
{kind: 1, offset: "transformOrigin", len: 0, typ: NTI33554450, name: "transformOrigin", sons: null}, 
{kind: 1, offset: "transformStyle", len: 0, typ: NTI33554450, name: "transformStyle", sons: null}, 
{kind: 1, offset: "transition", len: 0, typ: NTI33554450, name: "transition", sons: null}, 
{kind: 1, offset: "transitionDelay", len: 0, typ: NTI33554450, name: "transitionDelay", sons: null}, 
{kind: 1, offset: "transitionDuration", len: 0, typ: NTI33554450, name: "transitionDuration", sons: null}, 
{kind: 1, offset: "transitionProperty", len: 0, typ: NTI33554450, name: "transitionProperty", sons: null}, 
{kind: 1, offset: "transitionTimingFunction", len: 0, typ: NTI33554450, name: "transitionTimingFunction", sons: null}, 
{kind: 1, offset: "translate", len: 0, typ: NTI33554450, name: "translate", sons: null}, 
{kind: 1, offset: "unicodeBidi", len: 0, typ: NTI33554450, name: "unicodeBidi", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI33554450, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI33554450, name: "visibility", sons: null}, 
{kind: 1, offset: "whiteSpace", len: 0, typ: NTI33554450, name: "whiteSpace", sons: null}, 
{kind: 1, offset: "widows", len: 0, typ: NTI33554450, name: "widows", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI33554450, name: "width", sons: null}, 
{kind: 1, offset: "willChange", len: 0, typ: NTI33554450, name: "willChange", sons: null}, 
{kind: 1, offset: "wordBreak", len: 0, typ: NTI33554450, name: "wordBreak", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI33554450, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "writingMode", len: 0, typ: NTI33554450, name: "writingMode", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI33554450, name: "zIndex", sons: null}]};
NTI1275068558.node = NNI1275068558;
NTI1275068558.base = NTI33555171;
NTI1275068446.base = NTI1275068558;
var NNI1275068530 = {kind: 2, len: 22, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI1275068531, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI1275068532, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI1275068533, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554450, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI1275068432, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI1275068432, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI1275068432, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI33554450, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI1275068431, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI33554450, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI1275068432, name: "parentNode", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1275068432, name: "content", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI1275068432, name: "previousSibling", sons: null}, 
{kind: 1, offset: "ownerDocument", len: 0, typ: NTI1275068433, name: "ownerDocument", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI33554450, name: "innerHTML", sons: null}, 
{kind: 1, offset: "outerHTML", len: 0, typ: NTI33554450, name: "outerHTML", sons: null}, 
{kind: 1, offset: "innerText", len: 0, typ: NTI33554450, name: "innerText", sons: null}, 
{kind: 1, offset: "textContent", len: 0, typ: NTI33554450, name: "textContent", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI1275068446, name: "style", sons: null}, 
{kind: 1, offset: "baseURI", len: 0, typ: NTI33554450, name: "baseURI", sons: null}, 
{kind: 1, offset: "parentElement", len: 0, typ: NTI1275068434, name: "parentElement", sons: null}, 
{kind: 1, offset: "isConnected", len: 0, typ: NTI33554466, name: "isConnected", sons: null}]};
NTI1275068530.node = NNI1275068530;
var NNI1275068485 = {kind: 2, len: 24, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI1275068486, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI1275068487, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI1275068488, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI1275068489, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI1275068490, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI1275068491, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI1275068492, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI1275068493, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI1275068494, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI1275068495, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI1275068496, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI1275068497, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI1275068498, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI1275068499, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI1275068500, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI1275068501, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI1275068502, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI1275068503, name: "onselect", sons: null}, 
{kind: 1, offset: "onstorage", len: 0, typ: NTI1275068504, name: "onstorage", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI1275068505, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI1275068506, name: "onunload", sons: null}, 
{kind: 1, offset: "onloadstart", len: 0, typ: NTI1275068507, name: "onloadstart", sons: null}, 
{kind: 1, offset: "onprogress", len: 0, typ: NTI1275068508, name: "onprogress", sons: null}, 
{kind: 1, offset: "onloadend", len: 0, typ: NTI1275068509, name: "onloadend", sons: null}]};
NTI1275068485.node = NNI1275068485;
NTI1275068485.base = NTI33555171;
NTI1275068530.base = NTI1275068485;
NTI1275068541.base = NTI1275068530;
NTI1275068434.base = NTI1275068541;
NTI3288334343.base = NTI2080374789;
var NNI3288334356 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2181038083, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI3288334357, name: "Field1", sons: null}]};
NTI3288334356.node = NNI3288334356;
NTI3288334355.base = NTI3288334356;
var NNI3288334349 = {kind: 1, offset: "handlers", len: 0, typ: NTI3288334355, name: "handlers", sons: null};
NTI3288334349.node = NNI3288334349;
var NNI3288334373 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "key", len: 0, typ: NTI33554449, name: "key", sons: null}, 
{kind: 1, offset: "val", len: 0, typ: NTI33554449, name: "val", sons: null}]};
NTI3288334373.node = NNI3288334373;
var NNI3288334380 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "next", len: 0, typ: NTI3288334377, name: "next", sons: null}, 
{kind: 1, offset: "prev", len: 0, typ: NTI3288334377, name: "prev", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI3288334373, name: "value", sons: null}]};
NTI3288334380.node = NNI3288334380;
NTI3288334377.base = NTI3288334380;
var NNI3288334391 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3288334377, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3288334377, name: "tail", sons: null}]};
NTI3288334391.node = NNI3288334391;
NTI3288334401.base = NTI3288334380;
var NNI3288334409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI3288334401, name: "Field2", sons: null}]};
NTI3288334409.node = NNI3288334409;
NTI3288334406.base = NTI3288334409;
var NNI3288334418 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3288334406, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3288334418.node = NNI3288334418;
var NNI3288334429 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1325400067, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554449, name: "Field1", sons: null}]};
NTI3288334429.node = NNI3288334429;
NTI3288334426.base = NTI3288334429;
var NNI3288334423 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI3288334426, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554435, name: "counter", sons: null}]};
NTI3288334423.node = NNI3288334423;
var NNI3288334368 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "capacity", len: 0, typ: NTI33554435, name: "capacity", sons: null}, 
{kind: 1, offset: "list", len: 0, typ: NTI3288334391, name: "list", sons: null}, 
{kind: 1, offset: "table", len: 0, typ: NTI3288334418, name: "table", sons: null}, 
{kind: 1, offset: "recordRemovedKeys", len: 0, typ: NTI33554466, name: "recordRemovedKeys", sons: null}, 
{kind: 1, offset: "removedKeys", len: 0, typ: NTI3288334423, name: "removedKeys", sons: null}]};
NTI3288334368.node = NNI3288334368;
NTI3288334367.base = NTI3288334368;
var NNI3288334342 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "content", len: 0, typ: NTI1275068434, name: "content", sons: null}, 
{kind: 1, offset: "boundsStack", len: 0, typ: NTI3288334343, name: "boundsStack", sons: null}, 
{kind: 1, offset: "onResized", len: 0, typ: NTI3288334349, name: "onResized", sons: null}, 
{kind: 1, offset: "mFontSize", len: 0, typ: NTI33554445, name: "mFontSize", sons: null}, 
{kind: 1, offset: "mLineHeight", len: 0, typ: NTI33554445, name: "mLineHeight", sons: null}, 
{kind: 1, offset: "mLineDistance", len: 0, typ: NTI33554445, name: "mLineDistance", sons: null}, 
{kind: 1, offset: "mCharWidth", len: 0, typ: NTI33554445, name: "mCharWidth", sons: null}, 
{kind: 1, offset: "escapedText", len: 0, typ: NTI3288334367, name: "escapedText", sons: null}]};
NTI3288334342.node = NNI3288334342;
NTI3288334342.base = NTI2315255812;
NTI2248146958.base = NTI2046820364;
NTI1291849393.base = NTI2147483652;
NTI1291849399.base = NTI1291849393;
var NNI2365587477 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2365587477.node = NNI2365587477;
NTI2365587477.base = NTI134217746;
var NNI2348810397 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554435, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554435, name: "b", sons: null}]};
NTI2348810397.node = NNI2348810397;
var NNI1291850311 = {kind: 1, offset: "val", len: 0, typ: NTI1291845665, name: "val", sons: null};
NTI1291850311.node = NNI1291850311;
NTI1627390088.base = NTI1627389956;
var NNI1291845662 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "filename", len: 0, typ: NTI33554449, name: "filename", sons: null}, 
{kind: 1, offset: "ast", len: 0, typ: NTI33554466, name: "ast", sons: null}, 
{kind: 1, offset: "languageID", len: 0, typ: NTI33554449, name: "languageID", sons: null}]};
NTI1291845662.node = NNI1291845662;
NTI1291845664.base = NTI1291845662;
var NNI1291845663 = {kind: 2, len: 7, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "theme", len: 0, typ: NTI33554449, name: "theme", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI33554446, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontRegular", len: 0, typ: NTI33554449, name: "fontRegular", sons: null}, 
{kind: 1, offset: "fontBold", len: 0, typ: NTI33554449, name: "fontBold", sons: null}, 
{kind: 1, offset: "fontItalic", len: 0, typ: NTI33554449, name: "fontItalic", sons: null}, 
{kind: 1, offset: "fontBoldItalic", len: 0, typ: NTI33554449, name: "fontBoldItalic", sons: null}, 
{kind: 1, offset: "openEditors", len: 0, typ: NTI1291845664, name: "openEditors", sons: null}]};
NTI1291845663.node = NNI1291845663;
var NNI2785017860 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2785017860.node = NNI2785017860;
NTI2785017860.base = NTI2650800132;
var NNI1627391161 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1627389956, name: "Field1", sons: null}]};
NTI1627391161.node = NNI1627391161;
NTI2483028483.base = NTI2483027971;
var NNI2483029956 = {kind: 1, offset: "val", len: 0, typ: NTI2483027973, name: "val", sons: null};
NTI2483029956.node = NNI2483029956;
NTI2332033039.base = NTI2332033027;
var NNI2332033038 = {kind: 1, offset: "children", len: 0, typ: NTI2332033039, name: "children", sons: null};
NTI2332033038.node = NNI2332033038;
NTI2332033038.base = NTI2332033034;
NTI2332033037.base = NTI2332033027;
var NNI2332033036 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "maskContent", len: 0, typ: NTI33554466, name: "maskContent", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI2332033037, name: "children", sons: null}]};
NTI2332033036.node = NNI2332033036;
NTI2332033036.base = NTI2332033034;
NTI2332033041.base = NTI2332033027;
var NNI2332033040 = {kind: 1, offset: "children", len: 0, typ: NTI2332033041, name: "children", sons: null};
NTI2332033040.node = NNI2332033040;
NTI2332033040.base = NTI2332033034;
NTI2332033043.base = NTI2332033027;
var NNI2332033042 = {kind: 1, offset: "children", len: 0, typ: NTI2332033043, name: "children", sons: null};
NTI2332033042.node = NNI2332033042;
NTI2332033042.base = NTI2332033034;
var NNI2332033044 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "text", len: 0, typ: NTI33554449, name: "text", sons: null}, 
{kind: 1, offset: "lastRenderedText", len: 0, typ: NTI33554449, name: "lastRenderedText", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI2483027972, name: "style", sons: null}]};
NTI2332033044.node = NNI2332033044;
NTI2332033044.base = NTI2332033034;
var NNI2801799838 = {kind: 1, offset: "val", len: 0, typ: NTI2801795278, name: "val", sons: null};
NTI2801799838.node = NNI2801799838;
NTI2936014314.base = NTI2936014315;
var NNI2936020129 = {kind: 1, offset: "val", len: 0, typ: NTI2936014314, name: "val", sons: null};
NTI2936020129.node = NNI2936020129;
var NNI134217763 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217763.node = NNI134217763;
NTI134217763.base = NTI33555176;
NTI1191182363.base = NTI1191182393;
NTI1191182362.base = NTI1191182389;
NTI1191182361.base = NTI1191182385;
var NNI1191182354 = {kind: 2, offset: 0, typ: null, name: null, len: 7, sons: {"0": {kind: 1, offset: 0, typ: NTI1191182354, name: "Monday", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1191182354, name: "Tuesday", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182354, name: "Wednesday", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182354, name: "Thursday", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182354, name: "Friday", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182354, name: "Saturday", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182354, name: "Sunday", len: 0, sons: null}}};
NTI1191182354.node = NNI1191182354;
NTI1191182364.base = NTI1191182397;
var NNI1191182409 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "zonedTimeFromTimeImpl", len: 0, typ: NTI1191182410, name: "zonedTimeFromTimeImpl", sons: null}, 
{kind: 1, offset: "zonedTimeFromAdjTimeImpl", len: 0, typ: NTI1191182411, name: "zonedTimeFromAdjTimeImpl", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554449, name: "name", sons: null}]};
NTI1191182409.node = NNI1191182409;
NTI1191182374.base = NTI1191182409;
var NNI1191182369 = {kind: 2, len: 12, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}, 
{kind: 1, offset: "second", len: 0, typ: NTI1191182363, name: "second", sons: null}, 
{kind: 1, offset: "minute", len: 0, typ: NTI1191182362, name: "minute", sons: null}, 
{kind: 1, offset: "hour", len: 0, typ: NTI1191182361, name: "hour", sons: null}, 
{kind: 1, offset: "monthdayZero", len: 0, typ: NTI33554435, name: "monthdayZero", sons: null}, 
{kind: 1, offset: "monthZero", len: 0, typ: NTI33554435, name: "monthZero", sons: null}, 
{kind: 1, offset: "year", len: 0, typ: NTI33554435, name: "year", sons: null}, 
{kind: 1, offset: "weekday", len: 0, typ: NTI1191182354, name: "weekday", sons: null}, 
{kind: 1, offset: "yearday", len: 0, typ: NTI1191182364, name: "yearday", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}, 
{kind: 1, offset: "timezone", len: 0, typ: NTI1191182374, name: "timezone", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}]};
NTI1191182369.node = NNI1191182369;
NTI1191182369.base = NTI33555171;
var NNI1191182370 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "seconds", len: 0, typ: NTI33554439, name: "seconds", sons: null}, 
{kind: 1, offset: "nanosecond", len: 0, typ: NTI1191182365, name: "nanosecond", sons: null}]};
NTI1191182370.node = NNI1191182370;
NTI1191182360.base = NTI1191182380;
var NNI1191182353 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI1191182353, name: "January", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1191182353, name: "February", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1191182353, name: "March", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1191182353, name: "April", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1191182353, name: "May", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1191182353, name: "June", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1191182353, name: "July", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1191182353, name: "August", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1191182353, name: "September", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1191182353, name: "October", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1191182353, name: "November", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1191182353, name: "December", len: 0, sons: null}}};
NTI1191182353.node = NNI1191182353;
var NNI1191182532 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI1191182360, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI1191182353, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554435, name: "Field2", sons: null}]};
NTI1191182532.node = NNI1191182532;
var NNI1191182375 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "time", len: 0, typ: NTI1191182368, name: "time", sons: null}, 
{kind: 1, offset: "utcOffset", len: 0, typ: NTI33554435, name: "utcOffset", sons: null}, 
{kind: 1, offset: "isDst", len: 0, typ: NTI33554466, name: "isDst", sons: null}]};
NTI1191182375.node = NNI1191182375;
var NNI134217736 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI134217736.node = NNI134217736;
NTI134217736.base = NTI33555177;
var NNI3003121734 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121720, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121720, name: "tail", sons: null}]};
NTI3003121734.node = NNI3003121734;
var NNI3003121813 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121799, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121799, name: "tail", sons: null}]};
NTI3003121813.node = NNI3003121813;
var NNI3003121880 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI3003121866, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI3003121866, name: "tail", sons: null}]};
NTI3003121880.node = NNI3003121880;
var NNI2986344528 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344514, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344514, name: "tail", sons: null}]};
NTI2986344528.node = NNI2986344528;
var NNI2986344665 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344651, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344651, name: "tail", sons: null}]};
NTI2986344665.node = NNI2986344665;
var NNI2986344601 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344587, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344587, name: "tail", sons: null}]};
NTI2986344601.node = NNI2986344601;
var NNI2986344729 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344715, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344715, name: "tail", sons: null}]};
NTI2986344729.node = NNI2986344729;
var NNI2986344831 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344817, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344817, name: "tail", sons: null}]};
NTI2986344831.node = NNI2986344831;
var NNI2986344906 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344892, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344892, name: "tail", sons: null}]};
NTI2986344906.node = NNI2986344906;
var NNI2986345116 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345102, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345102, name: "tail", sons: null}]};
NTI2986345116.node = NNI2986345116;
var NNI2986345191 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345177, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345177, name: "tail", sons: null}]};
NTI2986345191.node = NNI2986345191;
var NNI2986344977 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986344963, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986344963, name: "tail", sons: null}]};
NTI2986344977.node = NNI2986344977;
var NNI2986345050 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345036, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345036, name: "tail", sons: null}]};
NTI2986345050.node = NNI2986345050;
var NNI2986345257 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345243, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345243, name: "tail", sons: null}]};
NTI2986345257.node = NNI2986345257;
var NNI2986345332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "head", len: 0, typ: NTI2986345318, name: "head", sons: null}, 
{kind: 1, offset: "tail", len: 0, typ: NTI2986345318, name: "tail", sons: null}]};
NTI2986345332.node = NNI2986345332;
NTI2902460333.base = NTI2902458397;
var NNI2902460332 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554449, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2902460333, name: "Field1", sons: null}]};
NTI2902460332.node = NNI2902460332;
var NNI2248146948 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2248146948.node = NNI2248146948;
NTI2248146948.base = NTI2147483652;
NTI2147483731.base = NTI2046820364;
var NNI2801806466 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI2801806466.node = NNI2801806466;
var NNI2801806267 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2231369737, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2801806267.node = NNI2801806267;
NTI3154116841.base = NTI2046820364;
var NNI3204448371 = {kind: 1, offset: "val", len: 0, typ: NTI3204448259, name: "val", sons: null};
NTI3204448371.node = NNI3204448371;
var NNI3154116752 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2936014312, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI3154116752.node = NNI3154116752;
var NNI2332033636 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "val", len: 0, typ: NTI2080374789, name: "val", sons: null}, 
{kind: 1, offset: "has", len: 0, typ: NTI33554466, name: "has", sons: null}]};
NTI2332033636.node = NNI2332033636;
NTI855639351.base = NTI33554448;
var NNI2684354564 = {kind: 1, offset: "path", len: 0, typ: NTI33554449, name: "path", sons: null};
NTI2684354564.node = NNI2684354564;
NTI2684354564.base = NTI2667577352;
NTI1291847196.base = NTI2080374789;
var NNI2063597571 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI2063597571, name: "Relative", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI2063597571, name: "Absolute", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI2063597571, name: "Percent", len: 0, sons: null}}};
NTI2063597571.node = NNI2063597571;
var NNI2063597572 = {kind: 3, offset: "kind", len: 3, typ: NTI2063597571, name: "kind", sons: [[setConstr(0), {kind: 1, offset: "rel", len: 0, typ: NTI33554446, name: "rel", sons: null}], 
[setConstr(1), {kind: 1, offset: "abs", len: 0, typ: NTI33554446, name: "abs", sons: null}], 
[setConstr(2), {kind: 1, offset: "per", len: 0, typ: NTI33554446, name: "per", sons: null}]]};
NTI2063597572.node = NNI2063597572;
var NNI2063597631 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI2080374789, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI2080374789, name: "Field1", sons: null}]};
NTI2063597631.node = NNI2063597631;
NTI1291846985.base = NTI2080374789;
var NNI2868903954 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI2868903954.node = NNI2868903954;
NTI2868903954.base = NTI33555171;
NTI2868903953.base = NTI2868903954;
NTI2868904033.base = NTI2868903953;
var NNI3254779908 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554435, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554435, name: "Field1", sons: null}]};
NTI3254779908.node = NNI3254779908;
var NNI2365587461 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "r", len: 0, typ: NTI33554441, name: "r", sons: null}, 
{kind: 1, offset: "g", len: 0, typ: NTI33554441, name: "g", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554441, name: "b", sons: null}, 
{kind: 1, offset: "a", len: 0, typ: NTI33554441, name: "a", sons: null}]};
NTI2365587461.node = NNI2365587461;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557083, src_33557084, ti_33557085) {
  var result_33557094 = null;

    switch (ti_33557085.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557074(ti_33557085))) {
      result_33557094 = src_33557084;
      }
      else {
        result_33557094 = [src_33557084[0], src_33557084[1]];
      }
      
      break;
    case 19:
            if (dest_33557083 === null || dest_33557083 === undefined) {
        dest_33557083 = {};
      }
      else {
        for (var key in dest_33557083) { delete dest_33557083[key]; }
      }
      for (var key in src_33557084) { dest_33557083[key] = src_33557084[key]; }
      result_33557094 = dest_33557083;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557085.base == null))) {
      result_33557094 = nimCopy(dest_33557083, src_33557084, ti_33557085.base);
      }
      else {
      if ((ti_33557085.kind == 17)) {
      result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {m_type: ti_33557085} : dest_33557083;
      }
      else {
        result_33557094 = (dest_33557083 === null || dest_33557083 === undefined) ? {} : dest_33557083;
      }
      }
      nimCopyAux(result_33557094, src_33557084, ti_33557085.node);
      break;
    case 4:
    case 16:
            if(ArrayBuffer.isView(src_33557084)) { 
        if(dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new src_33557084.constructor(src_33557084);
        } else {
          dest_33557083.set(src_33557084, 0);
        }
        result_33557094 = dest_33557083;
      } else {
        if (src_33557084 === null) {
          result_33557094 = null;
        }
        else {
          if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
            dest_33557083 = new Array(src_33557084.length);
          }
          result_33557094 = dest_33557083;
          for (var i = 0; i < src_33557084.length; ++i) {
            result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
          }
        }
      }
    
      break;
    case 24:
    case 27:
            if (src_33557084 === null) {
        result_33557094 = null;
      }
      else {
        if (dest_33557083 === null || dest_33557083 === undefined || dest_33557083.length != src_33557084.length) {
          dest_33557083 = new Array(src_33557084.length);
        }
        result_33557094 = dest_33557083;
        for (var i = 0; i < src_33557084.length; ++i) {
          result_33557094[i] = nimCopy(result_33557094[i], src_33557084[i], ti_33557085.base);
        }
      }
    
      break;
    case 28:
            if (src_33557084 !== null) {
        result_33557094 = src_33557084.slice(0);
      }
    
      break;
    default: 
      result_33557094 = src_33557084;
      break;
    }

  return result_33557094;

}

function toJSStr(s_33556747) {
  var result_33556748 = null;

    var res_33556782 = newSeq_33556765((s_33556747).length);
    var i_33556783 = 0;
    var j_33556784 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_33556783 < (s_33556747).length)) break Label2;
          var c_33556785 = s_33556747[i_33556783];
          if ((c_33556785 < 128)) {
          res_33556782[j_33556784] = String.fromCharCode(c_33556785);
          i_33556783 += 1;
          }
          else {
            var helper_33556798 = newSeq_33556765(0);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556799 = c_33556785.toString(16);
                  if ((((code_33556799) == null ? 0 : (code_33556799).length) == 1)) {
                  helper_33556798.push("%0");;
                  }
                  else {
                  helper_33556798.push("%");;
                  }
                  
                  helper_33556798.push(code_33556799);;
                  i_33556783 += 1;
                  if ((((s_33556747).length <= i_33556783) || (s_33556747[i_33556783] < 128))) {
                  break Label3;
                  }
                  
                  c_33556785 = s_33556747[i_33556783];
                }
            };
++excHandler;
            try {
            res_33556782[j_33556784] = decodeURIComponent(helper_33556798.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            res_33556782[j_33556784] = helper_33556798.join("");
            lastJSError = prevJSError;
            } finally {
            }
          }
          
          j_33556784 += 1;
        }
    };
    if (res_33556782.length < j_33556784) { for (var i = res_33556782.length ; i < j_33556784 ; ++i) res_33556782.push(null); }
               else { res_33556782.length = j_33556784; };
    result_33556748 = res_33556782.join("");

  return result_33556748;

}

function raiseException(e_33556607, ename_33556608) {
    e_33556607.name = ename_33556608;
    if ((excHandler == 0)) {
    unhandledException(e_33556607);
    }
    
    throw e_33556607;

  
}

function divInt(a_33556895, b_33556896) {
        if (b_33556896 == 0) raiseDivByZero();
    if (b_33556896 == -1 && a_33556895 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556895 / b_33556896);
  

  
}
    var unitWeights_1191182486 = [1, 1000, 1000000, 1000000000, 60000000000, 3600000000000, 86400000000000, 604800000000000];

function mnewString(len_33556836) {
        return new Array(len_33556836);
  

  
}

function addInt(a_33556883, b_33556884) {
        var result = a_33556883 + b_33556884;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557132, a_33557133, b_33557134) {
  var result_33557135 = 0;

  BeforeRet: {
    if (((a_33557133 <= i_33557132) && (i_33557132 <= b_33557134))) {
    result_33557135 = i_33557132;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  };

  return result_33557135;

}

function chckIndx(i_33557127, a_33557128, b_33557129) {
  var result_33557130 = 0;

  BeforeRet: {
    if (((a_33557128 <= i_33557127) && (i_33557127 <= b_33557129))) {
    result_33557130 = i_33557127;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557127, a_33557128, b_33557129);
    }
    
  };

  return result_33557130;

}

function modInt(a_33556899, b_33556900) {
        if (b_33556900 == 0) raiseDivByZero();
    if (b_33556900 == -1 && a_33556899 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556899 % b_33556900);
  

  
}
                      var helper_2197815350 = new Uint32Array([3198944359, 3630892171]);

function eqStrings(a_33556874, b_33556875) {
        if (a_33556874 == b_33556875) return true;
    if (a_33556874 === null && b_33556875.length == 0) return true;
    if (b_33556875 === null && a_33556874.length == 0) return true;
    if ((!a_33556874) || (!b_33556875)) return false;
    var alen = a_33556874.length;
    if (alen != b_33556875.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556874[i] != b_33556875[i]) return false;
    return true;
  

  
}
var ConstSet2 = setConstr(60, 62, 94);
var ConstSet3 = setConstr(60, 62, 94);
var ConstSet4 = setConstr(45, 43, 32);
var ConstSet5 = setConstr([48, 57]);
var ConstSet6 = setConstr([48, 57]);
var ConstSet7 = setConstr([48, 57]);

function subInt(a_33556887, b_33556888) {
        var result = a_33556887 - b_33556888;
    checkOverflowInt(result);
    return result;
  

  
}

function mulInt(a_33556891, b_33556892) {
        var result = a_33556891 * b_33556892;
    checkOverflowInt(result);
    return result;
  

  
}
var ConstSet8 = setConstr([65, 90], [97, 122]);
var ConstSet9 = setConstr();
var ConstSet10 = setConstr();

function SetPlus(a_33556858, b_33556859) {
        var result = {};
    for (var elem in a_33556858) { result[elem] = true; }
    for (var elem in b_33556859) { result[elem] = true; }
    return result;
  

  
}
var ConstSet11 = setConstr(0);
var ConstSet12 = setConstr(1);
var ConstSet13 = setConstr(2);

function addChar(x_33557198, c_33557199) {
    x_33557198.push(c_33557199);

  
}

function makeNimstrLit(c_33556741) {
      var result = [];
  for (var i = 0; i < c_33556741.length; ++i) {
    result[i] = c_33556741.charCodeAt(i);
  }
  return result;
  

  
}
var ConstSet14 = setConstr();

function SetEq(a_33556842, b_33556843) {
        for (var elem in a_33556842) { if (!b_33556843[elem]) return false; }
    for (var elem in b_33556843) { if (!a_33556842[elem]) return false; }
    return true;
  

  
}

function reprEnum(e_33557353, typ_33557354) {
  var result_33557355 = [];

    var tmp_33557356 = false;
    var item_33557357 = typ_33557354.node.sons[e_33557353];
    tmp_33557356 = item_33557357 !== undefined
    if (tmp_33557356) {
    result_33557355 = nimCopy(null, makeNimstrLit(item_33557357.name), NTI33554449);
    }
    else {
      result_33557355 = nimCopy(null, (HEX24_369098760(e_33557353) || []).concat([32,40,105,110,118,97,108,105,100,32,100,97,116,97,33,41] || []), NTI33554449);
    }
    

  return result_33557355;

}
var ConstSet15 = setConstr();
var ConstSet16 = setConstr(1);
    var toUpperRanges_788530129 = new Int32Array([97, 122, 468, 224, 246, 468, 248, 254, 468, 575, 576, 11315, 598, 599, 295, 650, 651, 283, 891, 893, 630, 941, 943, 463, 945, 961, 468, 963, 971, 468, 973, 974, 437, 1072, 1103, 468, 1104, 1119, 420, 1377, 1414, 452, 4304, 4346, 3508, 4349, 4351, 3508, 5112, 5117, 492, 7299, 7300, -5742, 7936, 7943, 508, 7952, 7957, 508, 7968, 7975, 508, 7984, 7991, 508, 8000, 8005, 508, 8032, 8039, 508, 8048, 8049, 574, 8050, 8053, 586, 8054, 8055, 600, 8056, 8057, 628, 8058, 8059, 612, 8060, 8061, 626, 8064, 8071, 508, 8080, 8087, 508, 8096, 8103, 508, 8112, 8113, 508, 8144, 8145, 508, 8160, 8161, 508, 11312, 11358, 452, 11520, 11557, -6764, 43888, 43967, -38364, 65345, 65370, 468, 66600, 66639, 460, 66776, 66811, 460, 68800, 68850, 436, 71872, 71903, 468, 93792, 93823, 468, 125218, 125251, 466]);
    var toUpperSinglets_788530130 = new Int32Array([181, 1243, 255, 621, 257, 499, 259, 499, 261, 499, 263, 499, 265, 499, 267, 499, 269, 499, 271, 499, 273, 499, 275, 499, 277, 499, 279, 499, 281, 499, 283, 499, 285, 499, 287, 499, 289, 499, 291, 499, 293, 499, 295, 499, 297, 499, 299, 499, 301, 499, 303, 499, 305, 268, 307, 499, 309, 499, 311, 499, 314, 499, 316, 499, 318, 499, 320, 499, 322, 499, 324, 499, 326, 499, 328, 499, 331, 499, 333, 499, 335, 499, 337, 499, 339, 499, 341, 499, 343, 499, 345, 499, 347, 499, 349, 499, 351, 499, 353, 499, 355, 499, 357, 499, 359, 499, 361, 499, 363, 499, 365, 499, 367, 499, 369, 499, 371, 499, 373, 499, 375, 499, 378, 499, 380, 499, 382, 499, 383, 200, 384, 695, 387, 499, 389, 499, 392, 499, 396, 499, 402, 499, 405, 597, 409, 499, 410, 663, 414, 630, 417, 499, 419, 499, 421, 499, 424, 499, 429, 499, 432, 499, 436, 499, 438, 499, 441, 499, 445, 499, 447, 556, 453, 499, 454, 498, 456, 499, 457, 498, 459, 499, 460, 498, 462, 499, 464, 499, 466, 499, 468, 499, 470, 499, 472, 499, 474, 499, 476, 499, 477, 421, 479, 499, 481, 499, 483, 499, 485, 499, 487, 499, 489, 499, 491, 499, 493, 499, 495, 499, 498, 499, 499, 498, 501, 499, 505, 499, 507, 499, 509, 499, 511, 499, 513, 499, 515, 499, 517, 499, 519, 499, 521, 499, 523, 499, 525, 499, 527, 499, 529, 499, 531, 499, 533, 499, 535, 499, 537, 499, 539, 499, 541, 499, 543, 499, 547, 499, 549, 499, 551, 499, 553, 499, 555, 499, 557, 499, 559, 499, 561, 499, 563, 499, 572, 499, 578, 499, 583, 499, 585, 499, 587, 499, 589, 499, 591, 499, 592, 11283, 593, 11280, 594, 11282, 595, 290, 596, 294, 601, 298, 603, 297, 604, 42819, 608, 295, 609, 42815, 611, 293, 613, 42780, 614, 42808, 616, 291, 617, 289, 618, 42808, 619, 11243, 620, 42805, 623, 289, 625, 11249, 626, 287, 629, 286, 637, 11227, 640, 282, 642, 42807, 643, 282, 647, 42782, 648, 282, 649, 431, 652, 429, 658, 281, 669, 42761, 670, 42758, 881, 499, 883, 499, 887, 499, 940, 462, 962, 469, 972, 436, 976, 438, 977, 443, 981, 453, 982, 446, 983, 492, 985, 499, 987, 499, 989, 499, 991, 499, 993, 499, 995, 499, 997, 499, 999, 499, 1001, 499, 1003, 499, 1005, 499, 1007, 499, 1008, 414, 1009, 420, 1010, 507, 1011, 384, 1013, 404, 1016, 499, 1019, 499, 1121, 499, 1123, 499, 1125, 499, 1127, 499, 1129, 499, 1131, 499, 1133, 499, 1135, 499, 1137, 499, 1139, 499, 1141, 499, 1143, 499, 1145, 499, 1147, 499, 1149, 499, 1151, 499, 1153, 499, 1163, 499, 1165, 499, 1167, 499, 1169, 499, 1171, 499, 1173, 499, 1175, 499, 1177, 499, 1179, 499, 1181, 499, 1183, 499, 1185, 499, 1187, 499, 1189, 499, 1191, 499, 1193, 499, 1195, 499, 1197, 499, 1199, 499, 1201, 499, 1203, 499, 1205, 499, 1207, 499, 1209, 499, 1211, 499, 1213, 499, 1215, 499, 1218, 499, 1220, 499, 1222, 499, 1224, 499, 1226, 499, 1228, 499, 1230, 499, 1231, 485, 1233, 499, 1235, 499, 1237, 499, 1239, 499, 1241, 499, 1243, 499, 1245, 499, 1247, 499, 1249, 499, 1251, 499, 1253, 499, 1255, 499, 1257, 499, 1259, 499, 1261, 499, 1263, 499, 1265, 499, 1267, 499, 1269, 499, 1271, 499, 1273, 499, 1275, 499, 1277, 499, 1279, 499, 1281, 499, 1283, 499, 1285, 499, 1287, 499, 1289, 499, 1291, 499, 1293, 499, 1295, 499, 1297, 499, 1299, 499, 1301, 499, 1303, 499, 1305, 499, 1307, 499, 1309, 499, 1311, 499, 1313, 499, 1315, 499, 1317, 499, 1319, 499, 1321, 499, 1323, 499, 1325, 499, 1327, 499, 7296, -5754, 7297, -5753, 7298, -5744, 7301, -5743, 7302, -5736, 7303, -5681, 7304, 35766, 7545, 35832, 7549, 4314, 7566, 35884, 7681, 499, 7683, 499, 7685, 499, 7687, 499, 7689, 499, 7691, 499, 7693, 499, 7695, 499, 7697, 499, 7699, 499, 7701, 499, 7703, 499, 7705, 499, 7707, 499, 7709, 499, 7711, 499, 7713, 499, 7715, 499, 7717, 499, 7719, 499, 7721, 499, 7723, 499, 7725, 499, 7727, 499, 7729, 499, 7731, 499, 7733, 499, 7735, 499, 7737, 499, 7739, 499, 7741, 499, 7743, 499, 7745, 499, 7747, 499, 7749, 499, 7751, 499, 7753, 499, 7755, 499, 7757, 499, 7759, 499, 7761, 499, 7763, 499, 7765, 499, 7767, 499, 7769, 499, 7771, 499, 7773, 499, 7775, 499, 7777, 499, 7779, 499, 7781, 499, 7783, 499, 7785, 499, 7787, 499, 7789, 499, 7791, 499, 7793, 499, 7795, 499, 7797, 499, 7799, 499, 7801, 499, 7803, 499, 7805, 499, 7807, 499, 7809, 499, 7811, 499, 7813, 499, 7815, 499, 7817, 499, 7819, 499, 7821, 499, 7823, 499, 7825, 499, 7827, 499, 7829, 499, 7835, 441, 7841, 499, 7843, 499, 7845, 499, 7847, 499, 7849, 499, 7851, 499, 7853, 499, 7855, 499, 7857, 499, 7859, 499, 7861, 499, 7863, 499, 7865, 499, 7867, 499, 7869, 499, 7871, 499, 7873, 499, 7875, 499, 7877, 499, 7879, 499, 7881, 499, 7883, 499, 7885, 499, 7887, 499, 7889, 499, 7891, 499, 7893, 499, 7895, 499, 7897, 499, 7899, 499, 7901, 499, 7903, 499, 7905, 499, 7907, 499, 7909, 499, 7911, 499, 7913, 499, 7915, 499, 7917, 499, 7919, 499, 7921, 499, 7923, 499, 7925, 499, 7927, 499, 7929, 499, 7931, 499, 7933, 499, 7935, 499, 8017, 508, 8019, 508, 8021, 508, 8023, 508, 8115, 509, 8126, -6705, 8131, 509, 8165, 507, 8179, 509, 8526, 472, 8580, 499, 11361, 499, 11365, -10295, 11366, -10292, 11368, 499, 11370, 499, 11372, 499, 11379, 499, 11382, 499, 11393, 499, 11395, 499, 11397, 499, 11399, 499, 11401, 499, 11403, 499, 11405, 499, 11407, 499, 11409, 499, 11411, 499, 11413, 499, 11415, 499, 11417, 499, 11419, 499, 11421, 499, 11423, 499, 11425, 499, 11427, 499, 11429, 499, 11431, 499, 11433, 499, 11435, 499, 11437, 499, 11439, 499, 11441, 499, 11443, 499, 11445, 499, 11447, 499, 11449, 499, 11451, 499, 11453, 499, 11455, 499, 11457, 499, 11459, 499, 11461, 499, 11463, 499, 11465, 499, 11467, 499, 11469, 499, 11471, 499, 11473, 499, 11475, 499, 11477, 499, 11479, 499, 11481, 499, 11483, 499, 11485, 499, 11487, 499, 11489, 499, 11491, 499, 11500, 499, 11502, 499, 11507, 499, 11559, -6764, 11565, -6764, 42561, 499, 42563, 499, 42565, 499, 42567, 499, 42569, 499, 42571, 499, 42573, 499, 42575, 499, 42577, 499, 42579, 499, 42581, 499, 42583, 499, 42585, 499, 42587, 499, 42589, 499, 42591, 499, 42593, 499, 42595, 499, 42597, 499, 42599, 499, 42601, 499, 42603, 499, 42605, 499, 42625, 499, 42627, 499, 42629, 499, 42631, 499, 42633, 499, 42635, 499, 42637, 499, 42639, 499, 42641, 499, 42643, 499, 42645, 499, 42647, 499, 42649, 499, 42651, 499, 42787, 499, 42789, 499, 42791, 499, 42793, 499, 42795, 499, 42797, 499, 42799, 499, 42803, 499, 42805, 499, 42807, 499, 42809, 499, 42811, 499, 42813, 499, 42815, 499, 42817, 499, 42819, 499, 42821, 499, 42823, 499, 42825, 499, 42827, 499, 42829, 499, 42831, 499, 42833, 499, 42835, 499, 42837, 499, 42839, 499, 42841, 499, 42843, 499, 42845, 499, 42847, 499, 42849, 499, 42851, 499, 42853, 499, 42855, 499, 42857, 499, 42859, 499, 42861, 499, 42863, 499, 42874, 499, 42876, 499, 42879, 499, 42881, 499, 42883, 499, 42885, 499, 42887, 499, 42892, 499, 42897, 499, 42899, 499, 42900, 548, 42903, 499, 42905, 499, 42907, 499, 42909, 499, 42911, 499, 42913, 499, 42915, 499, 42917, 499, 42919, 499, 42921, 499, 42933, 499, 42935, 499, 42937, 499, 42939, 499, 42941, 499, 42943, 499, 42947, 499, 43859, -428]);
    var toLowerRanges_788530127 = new Int32Array([65, 90, 532, 192, 214, 532, 216, 222, 532, 393, 394, 705, 433, 434, 717, 904, 906, 537, 910, 911, 563, 913, 929, 532, 931, 939, 532, 1021, 1023, 370, 1024, 1039, 580, 1040, 1071, 532, 1329, 1366, 548, 4256, 4293, 7764, 5024, 5103, 39364, 5104, 5109, 508, 7312, 7354, -2508, 7357, 7359, -2508, 7944, 7951, 492, 7960, 7965, 492, 7976, 7983, 492, 7992, 7999, 492, 8008, 8013, 492, 8040, 8047, 492, 8072, 8079, 492, 8088, 8095, 492, 8104, 8111, 492, 8120, 8121, 492, 8122, 8123, 426, 8136, 8139, 414, 8152, 8153, 492, 8154, 8155, 400, 8168, 8169, 492, 8170, 8171, 388, 8184, 8185, 372, 8186, 8187, 374, 11264, 11310, 548, 11390, 11391, -10315, 65313, 65338, 532, 66560, 66599, 540, 66736, 66771, 540, 68736, 68786, 564, 71840, 71871, 532, 93760, 93791, 532, 125184, 125217, 534]);
    var toLowerSinglets_788530128 = new Int32Array([256, 501, 258, 501, 260, 501, 262, 501, 264, 501, 266, 501, 268, 501, 270, 501, 272, 501, 274, 501, 276, 501, 278, 501, 280, 501, 282, 501, 284, 501, 286, 501, 288, 501, 290, 501, 292, 501, 294, 501, 296, 501, 298, 501, 300, 501, 302, 501, 304, 301, 306, 501, 308, 501, 310, 501, 313, 501, 315, 501, 317, 501, 319, 501, 321, 501, 323, 501, 325, 501, 327, 501, 330, 501, 332, 501, 334, 501, 336, 501, 338, 501, 340, 501, 342, 501, 344, 501, 346, 501, 348, 501, 350, 501, 352, 501, 354, 501, 356, 501, 358, 501, 360, 501, 362, 501, 364, 501, 366, 501, 368, 501, 370, 501, 372, 501, 374, 501, 376, 379, 377, 501, 379, 501, 381, 501, 385, 710, 386, 501, 388, 501, 390, 706, 391, 501, 395, 501, 398, 579, 399, 702, 400, 703, 401, 501, 403, 705, 404, 707, 406, 711, 407, 709, 408, 501, 412, 711, 413, 713, 415, 714, 416, 501, 418, 501, 420, 501, 422, 718, 423, 501, 425, 718, 428, 501, 430, 718, 431, 501, 435, 501, 437, 501, 439, 719, 440, 501, 444, 501, 452, 502, 453, 501, 455, 502, 456, 501, 458, 502, 459, 501, 461, 501, 463, 501, 465, 501, 467, 501, 469, 501, 471, 501, 473, 501, 475, 501, 478, 501, 480, 501, 482, 501, 484, 501, 486, 501, 488, 501, 490, 501, 492, 501, 494, 501, 497, 502, 498, 501, 500, 501, 502, 403, 503, 444, 504, 501, 506, 501, 508, 501, 510, 501, 512, 501, 514, 501, 516, 501, 518, 501, 520, 501, 522, 501, 524, 501, 526, 501, 528, 501, 530, 501, 532, 501, 534, 501, 536, 501, 538, 501, 540, 501, 542, 501, 544, 370, 546, 501, 548, 501, 550, 501, 552, 501, 554, 501, 556, 501, 558, 501, 560, 501, 562, 501, 570, 11295, 571, 501, 573, 337, 574, 11292, 577, 501, 579, 305, 580, 569, 581, 571, 582, 501, 584, 501, 586, 501, 588, 501, 590, 501, 880, 501, 882, 501, 886, 501, 895, 616, 902, 538, 908, 564, 975, 508, 984, 501, 986, 501, 988, 501, 990, 501, 992, 501, 994, 501, 996, 501, 998, 501, 1000, 501, 1002, 501, 1004, 501, 1006, 501, 1012, 440, 1015, 501, 1017, 493, 1018, 501, 1120, 501, 1122, 501, 1124, 501, 1126, 501, 1128, 501, 1130, 501, 1132, 501, 1134, 501, 1136, 501, 1138, 501, 1140, 501, 1142, 501, 1144, 501, 1146, 501, 1148, 501, 1150, 501, 1152, 501, 1162, 501, 1164, 501, 1166, 501, 1168, 501, 1170, 501, 1172, 501, 1174, 501, 1176, 501, 1178, 501, 1180, 501, 1182, 501, 1184, 501, 1186, 501, 1188, 501, 1190, 501, 1192, 501, 1194, 501, 1196, 501, 1198, 501, 1200, 501, 1202, 501, 1204, 501, 1206, 501, 1208, 501, 1210, 501, 1212, 501, 1214, 501, 1216, 515, 1217, 501, 1219, 501, 1221, 501, 1223, 501, 1225, 501, 1227, 501, 1229, 501, 1232, 501, 1234, 501, 1236, 501, 1238, 501, 1240, 501, 1242, 501, 1244, 501, 1246, 501, 1248, 501, 1250, 501, 1252, 501, 1254, 501, 1256, 501, 1258, 501, 1260, 501, 1262, 501, 1264, 501, 1266, 501, 1268, 501, 1270, 501, 1272, 501, 1274, 501, 1276, 501, 1278, 501, 1280, 501, 1282, 501, 1284, 501, 1286, 501, 1288, 501, 1290, 501, 1292, 501, 1294, 501, 1296, 501, 1298, 501, 1300, 501, 1302, 501, 1304, 501, 1306, 501, 1308, 501, 1310, 501, 1312, 501, 1314, 501, 1316, 501, 1318, 501, 1320, 501, 1322, 501, 1324, 501, 1326, 501, 4295, 7764, 4301, 7764, 7680, 501, 7682, 501, 7684, 501, 7686, 501, 7688, 501, 7690, 501, 7692, 501, 7694, 501, 7696, 501, 7698, 501, 7700, 501, 7702, 501, 7704, 501, 7706, 501, 7708, 501, 7710, 501, 7712, 501, 7714, 501, 7716, 501, 7718, 501, 7720, 501, 7722, 501, 7724, 501, 7726, 501, 7728, 501, 7730, 501, 7732, 501, 7734, 501, 7736, 501, 7738, 501, 7740, 501, 7742, 501, 7744, 501, 7746, 501, 7748, 501, 7750, 501, 7752, 501, 7754, 501, 7756, 501, 7758, 501, 7760, 501, 7762, 501, 7764, 501, 7766, 501, 7768, 501, 7770, 501, 7772, 501, 7774, 501, 7776, 501, 7778, 501, 7780, 501, 7782, 501, 7784, 501, 7786, 501, 7788, 501, 7790, 501, 7792, 501, 7794, 501, 7796, 501, 7798, 501, 7800, 501, 7802, 501, 7804, 501, 7806, 501, 7808, 501, 7810, 501, 7812, 501, 7814, 501, 7816, 501, 7818, 501, 7820, 501, 7822, 501, 7824, 501, 7826, 501, 7828, 501, 7838, -7115, 7840, 501, 7842, 501, 7844, 501, 7846, 501, 7848, 501, 7850, 501, 7852, 501, 7854, 501, 7856, 501, 7858, 501, 7860, 501, 7862, 501, 7864, 501, 7866, 501, 7868, 501, 7870, 501, 7872, 501, 7874, 501, 7876, 501, 7878, 501, 7880, 501, 7882, 501, 7884, 501, 7886, 501, 7888, 501, 7890, 501, 7892, 501, 7894, 501, 7896, 501, 7898, 501, 7900, 501, 7902, 501, 7904, 501, 7906, 501, 7908, 501, 7910, 501, 7912, 501, 7914, 501, 7916, 501, 7918, 501, 7920, 501, 7922, 501, 7924, 501, 7926, 501, 7928, 501, 7930, 501, 7932, 501, 7934, 501, 8025, 492, 8027, 492, 8029, 492, 8031, 492, 8124, 491, 8140, 491, 8172, 493, 8188, 491, 8486, -7017, 8490, -7883, 8491, -7762, 8498, 528, 8579, 501, 11360, 501, 11362, -10243, 11363, -3314, 11364, -10227, 11367, 501, 11369, 501, 11371, 501, 11373, -10280, 11374, -10249, 11375, -10283, 11376, -10282, 11378, 501, 11381, 501, 11392, 501, 11394, 501, 11396, 501, 11398, 501, 11400, 501, 11402, 501, 11404, 501, 11406, 501, 11408, 501, 11410, 501, 11412, 501, 11414, 501, 11416, 501, 11418, 501, 11420, 501, 11422, 501, 11424, 501, 11426, 501, 11428, 501, 11430, 501, 11432, 501, 11434, 501, 11436, 501, 11438, 501, 11440, 501, 11442, 501, 11444, 501, 11446, 501, 11448, 501, 11450, 501, 11452, 501, 11454, 501, 11456, 501, 11458, 501, 11460, 501, 11462, 501, 11464, 501, 11466, 501, 11468, 501, 11470, 501, 11472, 501, 11474, 501, 11476, 501, 11478, 501, 11480, 501, 11482, 501, 11484, 501, 11486, 501, 11488, 501, 11490, 501, 11499, 501, 11501, 501, 11506, 501, 42560, 501, 42562, 501, 42564, 501, 42566, 501, 42568, 501, 42570, 501, 42572, 501, 42574, 501, 42576, 501, 42578, 501, 42580, 501, 42582, 501, 42584, 501, 42586, 501, 42588, 501, 42590, 501, 42592, 501, 42594, 501, 42596, 501, 42598, 501, 42600, 501, 42602, 501, 42604, 501, 42624, 501, 42626, 501, 42628, 501, 42630, 501, 42632, 501, 42634, 501, 42636, 501, 42638, 501, 42640, 501, 42642, 501, 42644, 501, 42646, 501, 42648, 501, 42650, 501, 42786, 501, 42788, 501, 42790, 501, 42792, 501, 42794, 501, 42796, 501, 42798, 501, 42802, 501, 42804, 501, 42806, 501, 42808, 501, 42810, 501, 42812, 501, 42814, 501, 42816, 501, 42818, 501, 42820, 501, 42822, 501, 42824, 501, 42826, 501, 42828, 501, 42830, 501, 42832, 501, 42834, 501, 42836, 501, 42838, 501, 42840, 501, 42842, 501, 42844, 501, 42846, 501, 42848, 501, 42850, 501, 42852, 501, 42854, 501, 42856, 501, 42858, 501, 42860, 501, 42862, 501, 42873, 501, 42875, 501, 42877, -34832, 42878, 501, 42880, 501, 42882, 501, 42884, 501, 42886, 501, 42891, 501, 42893, -41780, 42896, 501, 42898, 501, 42902, 501, 42904, 501, 42906, 501, 42908, 501, 42910, 501, 42912, 501, 42914, 501, 42916, 501, 42918, 501, 42920, 501, 42922, -41808, 42923, -41819, 42924, -41815, 42925, -41805, 42926, -41808, 42928, -41758, 42929, -41782, 42930, -41761, 42931, 1428, 42932, 501, 42934, 501, 42936, 501, 42938, 501, 42940, 501, 42942, 501, 42946, 501, 42948, 452, 42949, -41807, 42950, -34884]);
var ConstSet17 = setConstr(1);
var ConstSet18 = setConstr(1);

function SetMinus(a_33556862, b_33556863) {
        var result = {};
    for (var elem in a_33556862) {
      if (!b_33556863[elem]) { result[elem] = true; }
    }
    return result;
  

  
}
var ConstSet19 = setConstr(1);
var ConstSet20 = setConstr([65, 90]);
var ConstSet21 = setConstr(5);

function raiseFieldError2(f_33556718, discVal_33556719) {
    raiseException({message: (f_33556718 || []).concat(discVal_33556719 || [],[39] || []), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");

  
}

function nimBoolToStr(x_33556451) {
  var result_33556452 = [];

    if (x_33556451) {
    result_33556452 = nimCopy(null, [116,114,117,101], NTI33554449);
    }
    else {
      result_33556452 = nimCopy(null, [102,97,108,115,101], NTI33554449);
    }
    

  return result_33556452;

}

function reprDiscriminant(e_33557377, typ_33557378) {
    var Temporary1;

  var result_33557379 = [];

    switch (typ_33557378.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557377, typ_33557378);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557377 == 0)));
      break;
    default: 
      Temporary1 = HEX24_369098760(e_33557377);
      break;
    }
    result_33557379 = nimCopy(null, Temporary1, NTI33554449);

  return result_33557379;

}

function nimMax(a_33556941, b_33556942) {
    var Temporary1;

  var result_33556943 = 0;

  BeforeRet: {
    if ((b_33556942 <= a_33556941)) {
    Temporary1 = a_33556941;
    }
    else {
    Temporary1 = b_33556942;
    }
    
    result_33556943 = Temporary1;
    break BeforeRet;
  };

  return result_33556943;

}

function nimMin(a_33556937, b_33556938) {
    var Temporary1;

  var result_33556939 = 0;

  BeforeRet: {
    if ((a_33556937 <= b_33556938)) {
    Temporary1 = a_33556937;
    }
    else {
    Temporary1 = b_33556938;
    }
    
    result_33556939 = Temporary1;
    break BeforeRet;
  };

  return result_33556939;

}
var ConstSet22 = setConstr(4);

function genericReset(x_33557114, ti_33557115) {
  var result_33557116 = null;

    result_33557116 = null;
    switch (ti_33557115.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557074(ti_33557115)) {
              result_33557116 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557116 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557115.kind == 17)) {
      result_33557116 = {m_type: ti_33557115};
      }
      else {
        result_33557116 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557116 = [];
    
      break;
    case 4:
    case 16:
            result_33557116 = new Array(x_33557114.length);
      for (var i = 0; i < x_33557114.length; ++i) {
        result_33557116[i] = genericReset(x_33557114[i], ti_33557115.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557116;

}
var ConstSet23 = setConstr(13, 10);
var ConstSet24 = setConstr(2);
var ConstSet25 = setConstr(2);
var ConstSet26 = setConstr(2);
var ConstSet27 = setConstr(2);
var ConstSet28 = setConstr(3);
var ConstSet29 = setConstr(2);
var ConstSet30 = setConstr(0);
var ConstSet31 = setConstr(0);
var ConstSet32 = setConstr(0);
var ConstSet33 = setConstr(1);
var ConstSet34 = setConstr(1);
var ConstSet35 = setConstr(1);
var ConstSet36 = setConstr(2);
var ConstSet37 = setConstr(2);
var ConstSet38 = setConstr(2);
var ConstSet39 = setConstr(0);
var ConstSet40 = setConstr(0);
var ConstSet41 = setConstr(0);
var ConstSet42 = setConstr(1);
var ConstSet43 = setConstr(1);
var ConstSet44 = setConstr(1);
var ConstSet45 = setConstr(1);
var ConstSet46 = setConstr(2);
var ConstSet47 = setConstr(2);
var ConstSet48 = setConstr(2);
var ConstSet49 = setConstr(47, 47);
var ConstSet50 = setConstr(47, 47);
var ConstSet51 = setConstr(47, 47);
var ConstSet52 = setConstr(5);
var ConstSet53 = setConstr(5);

function isObj(obj_33557181, subclass_33557182) {
  var result_33557183 = false;

  BeforeRet: {
    var x_33557184 = obj_33557181;
    if ((x_33557184 == subclass_33557182)) {
    result_33557183 = true;
    break BeforeRet;
    }
    
    Label1: {
        Label2: while (true) {
        if (!!((x_33557184 == subclass_33557182))) break Label2;
          if ((x_33557184 == null)) {
          result_33557183 = false;
          break BeforeRet;
          }
          
          x_33557184 = x_33557184.base;
        }
    };
    result_33557183 = true;
    break BeforeRet;
  };

  return result_33557183;

}

function cstrToNimstr(c_33556744) {
      var ln = c_33556744.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556744.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556744.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}

function reraiseException() {
    if ((lastJSError == null)) {
    raiseException({message: [110,111,32,101,120,99,101,112,116,105,111,110,32,116,111,32,114,101,114,97,105,115,101], parent: null, m_type: NTI134217753, name: null, trace: [], up: null}, "ReraiseDefect");
    }
    else {
      if ((excHandler == 0)) {
      if (isNimException_33556456()) {
      unhandledException(lastJSError);
      }
      
      }
      
      throw lastJSError;
    }
    

  
}
var ConstSet54 = setConstr([48, 57], [65, 90], [97, 122]);
var ConstSet55 = setConstr(5);
var ConstSet56 = setConstr(5);
var ConstSet57 = setConstr(2);

function nimCharToStr(x_33556454) {
  var result_33556455 = [];

    result_33556455 = nimCopy(null, mnewString(1), NTI33554449);
    result_33556455[0] = x_33556454;

  return result_33556455;

}

function rawEcho() {
          var buf = "";
      for (var i = 0; i < arguments.length; ++i) {
        buf += toJSStr(arguments[i]);
      }
      console.log(buf);
    

  
}
    var names_2969569252 = [[69,109,112,116,121], [73,100,101,110,116,105,102,105,101,114], [78,117,109,98,101,114,76,105,116,101,114,97,108], [83,116,114,105,110,103,76,105,116,101,114,97,108], [67,111,110,115,116,68,101,99,108], [76,101,116,68,101,99,108], [86,97,114,68,101,99,108], [78,111,100,101,76,105,115,116], [67,97,108,108], [73,102], [87,104,105,108,101], [70,117,110,99,116,105,111,110,68,101,102,105,110,105,116,105,111,110], [80,97,114,97,109,115], [65,115,115,105,103,110,109,101,110,116]];
var ConstSet58 = setConstr([48, 57]);
var ConstSet59 = setConstr([48, 57]);
var ConstSet60 = setConstr(4);
var ConstSet61 = setConstr(4);
var ConstSet62 = setConstr(5);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(3);
var ConstSet65 = setConstr(5);
var ConstSet66 = setConstr(6);
var ConstSet67 = setConstr(6);
var ConstSet68 = setConstr(4);
var ConstSet69 = setConstr(4);
var ConstSet70 = setConstr(4);
var ConstSet71 = setConstr(4);
var ConstSet72 = setConstr(4);
var ConstSet73 = setConstr(5);
var ConstSet74 = setConstr(5);
var ConstSet75 = setConstr(4);
var ConstSet76 = setConstr(4);
var ConstSet77 = setConstr(4);
var ConstSet78 = setConstr(4);
var ConstSet79 = setConstr(4);
var ConstSet80 = setConstr(4);
var ConstSet81 = setConstr(4);
var ConstSet82 = setConstr(4);
var ConstSet83 = setConstr(4);
var ConstSet84 = setConstr(6);
var ConstSet85 = setConstr(6);
var ConstSet86 = setConstr(0);
var ConstSet87 = setConstr(1);
var ConstSet88 = setConstr(1);
var ConstSet89 = setConstr(1);
var ConstSet90 = setConstr(1);
var ConstSet91 = setConstr(3);
var ConstSet92 = setConstr(3);
var ConstSet93 = setConstr(2);
var ConstSet94 = setConstr(2);
var ConstSet95 = setConstr(4);
var ConstSet96 = setConstr(4);
var ConstSet97 = setConstr(5);
var ConstSet98 = setConstr(5);
var ConstSet99 = setConstr(6);
var ConstSet100 = setConstr(6);
var ConstSet101 = setConstr(1);
var ConstSet102 = setConstr(1);
var ConstSet103 = setConstr(1);
var ConstSet104 = setConstr(1);
var ConstSet105 = setConstr(1);
var ConstSet106 = setConstr(1);
var ConstSet107 = setConstr(0);
var ConstSet108 = setConstr(0);
var ConstSet109 = setConstr(0);
var ConstSet110 = setConstr(4);
var ConstSet111 = setConstr(4);
var ConstSet112 = setConstr(5);
var ConstSet113 = setConstr(4);
var ConstSet114 = setConstr(4);
var ConstSet115 = setConstr(3);
var ConstSet116 = setConstr(2);
var ConstSet117 = setConstr(5);
var ConstSet118 = setConstr(4);
var ConstSet119 = setConstr(4);
var ConstSet120 = setConstr(5);
var ConstSet121 = setConstr(6);
var ConstSet122 = setConstr(5);
var ConstSet123 = setConstr(5);
var ConstSet124 = setConstr(3);
var ConstSet125 = setConstr(2);
var ConstSet126 = setConstr(5);
var ConstSet127 = setConstr(5);
var ConstSet128 = setConstr(6);
var ConstSet129 = setConstr(0);
var ConstSet130 = setConstr(1);
var ConstSet131 = setConstr(1);
var ConstSet132 = setConstr(1);
var ConstSet133 = setConstr(1);
var ConstSet134 = setConstr(0);
var ConstSet135 = setConstr(1);
var ConstSet136 = setConstr(0);
var ConstSet137 = setConstr(1);
var ConstSet138 = setConstr(3);
var ConstSet139 = setConstr(3);
var ConstSet140 = setConstr(4);
var ConstSet141 = setConstr(5);
var ConstSet142 = setConstr(4);
var ConstSet143 = setConstr(10, 9, 7);
var ConstSet144 = setConstr(8);
var ConstSet145 = setConstr(1);
var ConstSet146 = setConstr(0);
var ConstSet147 = setConstr(0);
var ConstSet148 = setConstr(0);
var ConstSet149 = setConstr(0);
var ConstSet150 = setConstr();
var ConstSet151 = setConstr(0);
var ConstSet152 = setConstr(0);
var ConstSet153 = setConstr(0);
var ConstSet154 = setConstr(2);
var ConstSet155 = setConstr(1);
var ConstSet156 = setConstr();
var ConstSet157 = setConstr(1);
var ConstSet158 = setConstr(1);
var ConstSet159 = setConstr(1);
var ConstSet160 = setConstr(3);
var ConstSet161 = setConstr(3);
var ConstSet162 = setConstr(3);

function negInt(a_33556925) {
  var result_33556926 = 0;

    result_33556926 = (a_33556925 * -1);

  return result_33556926;

}
var ConstSet163 = setConstr(2);
var ConstSet164 = setConstr(1);
var ConstSet165 = setConstr(1);
var ConstSet166 = setConstr(0);
var ConstSet167 = setConstr(0);
var ConstSet168 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet169 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet170 = setConstr([48, 57]);
var ConstSet171 = setConstr([48, 57]);
var ConstSet172 = setConstr(101, 69);
var ConstSet173 = setConstr([48, 57]);
var ConstSet174 = setConstr([48, 57]);

function nimParseBiggestFloat(s_33557231, number_33557232, number_33557232_Idx) {
    var Temporary1;

  var result_33557233 = 0;

  BeforeRet: {
    var sign_33557234 = false;
    var i_33557235 = 0;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    sign_33557234 = true;
    i_33557235 += 1;
    }
    }
    if (((s_33557231[i_33557235] == 78) || (s_33557231[i_33557235] == 110))) {
    if (((s_33557231[(i_33557235 + 1)] == 65) || (s_33557231[(i_33557235 + 1)] == 97))) {
    if (((s_33557231[(i_33557235 + 2)] == 78) || (s_33557231[(i_33557235 + 2)] == 110))) {
    if (!((ConstSet168[s_33557231[(i_33557235 + 3)]] != undefined))) {
    number_33557232[number_33557232_Idx] = NaN;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if (((s_33557231[i_33557235] == 73) || (s_33557231[i_33557235] == 105))) {
    if (((s_33557231[(i_33557235 + 1)] == 78) || (s_33557231[(i_33557235 + 1)] == 110))) {
    if (((s_33557231[(i_33557235 + 2)] == 70) || (s_33557231[(i_33557235 + 2)] == 102))) {
    if (!((ConstSet169[s_33557231[(i_33557235 + 3)]] != undefined))) {
    if (sign_33557234) {
    Temporary1 = -Infinity;
    }
    else {
    Temporary1 = Infinity;
    }
    
    number_33557232[number_33557232_Idx] = Temporary1;
    result_33557233 = (i_33557235 + 3);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_33557233 = 0;
    break BeforeRet;
    }
    
    var buf_33557254 = [];
    if (sign_33557234) {
    addChar(buf_33557254, 45);;
    }
    
    Label2: {
        Label3: while (true) {
        if (!(ConstSet170[s_33557231[i_33557235]] != undefined)) break Label3;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label4: {
              Label5: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label5;
                i_33557235 += 1;
              }
          };
        }
    };
    if ((s_33557231[i_33557235] == 46)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    Label6: {
        Label7: while (true) {
        if (!(ConstSet171[s_33557231[i_33557235]] != undefined)) break Label7;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label8: {
              Label9: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label9;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    if (((buf_33557254).length == (sign_33557234 ? 1 : 0))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    if ((ConstSet172[s_33557231[i_33557235]] != undefined)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    if ((s_33557231[i_33557235] == 43)) {
    i_33557235 += 1;
    }
    else {
    if ((s_33557231[i_33557235] == 45)) {
    addChar(buf_33557254, s_33557231[i_33557235]);;
    i_33557235 += 1;
    }
    }
    if (!((ConstSet173[s_33557231[i_33557235]] != undefined))) {
    result_33557233 = 0;
    break BeforeRet;
    }
    
    Label10: {
        Label11: while (true) {
        if (!(ConstSet174[s_33557231[i_33557235]] != undefined)) break Label11;
          addChar(buf_33557254, s_33557231[i_33557235]);;
          i_33557235 += 1;
          Label12: {
              Label13: while (true) {
              if (!(s_33557231[i_33557235] == 95)) break Label13;
                i_33557235 += 1;
              }
          };
        }
    };
    }
    
    number_33557232[number_33557232_Idx] = parseFloatNative_33557211(buf_33557254);
    result_33557233 = i_33557235;
  };

  return result_33557233;

}
var ConstSet175 = setConstr(0);
var ConstSet176 = setConstr(0);
var ConstSet177 = setConstr(0);
var ConstSet178 = setConstr(0);
var ConstSet179 = setConstr(1);
var ConstSet180 = setConstr(4);
var ConstSet181 = setConstr(4);
var ConstSet182 = setConstr(4);
var ConstSet183 = setConstr(4);
var ConstSet184 = setConstr(1);
var ConstSet185 = setConstr(4);
var ConstSet186 = setConstr(0);
var ConstSet187 = setConstr(13, 10);
var ConstSet188 = setConstr(0);
var ConstSet189 = setConstr(1);
var ConstSet190 = setConstr(0);

function cmpStrings(a_33556866, b_33556867) {
        if (a_33556866 == b_33556867) return 0;
    if (!a_33556866) return -1;
    if (!b_33556867) return 1;
    for (var i = 0; i < a_33556866.length && i < b_33556867.length; i++) {
      var result = a_33556866[i] - b_33556867[i];
      if (result != 0) return result;
    }
    return a_33556866.length - b_33556867.length;
  

  
}
var ConstSet191 = setConstr(0);
var ConstSet192 = setConstr(46, 44);
var ConstSet193 = setConstr([65, 90]);
var ConstSet194 = setConstr([97, 122]);
var ConstSet195 = setConstr(4);
var ConstSet196 = setConstr(13, 10);
var ConstSet197 = setConstr(1);
var ConstSet198 = setConstr(6);
var ConstSet199 = setConstr(4);
var ConstSet200 = setConstr(4);
var ConstSet201 = setConstr(2);
var ConstSet202 = setConstr(2);
var ConstSet203 = setConstr(3);
var ConstSet204 = setConstr(3);
var ConstSet205 = setConstr(1);
var ConstSet206 = setConstr(1);
var ConstSet207 = setConstr(6);
var ConstSet208 = setConstr(6);
var ConstSet209 = setConstr(5);
var ConstSet210 = setConstr(5);
var ConstSet211 = setConstr(5);
var ConstSet212 = setConstr(5);
var ConstSet213 = setConstr(5);
var ConstSet214 = setConstr(6);
var ConstSet215 = setConstr(5);
var ConstSet216 = setConstr(6);
var ConstSet217 = setConstr(5);
var ConstSet218 = setConstr(4);
var ConstSet219 = setConstr(4);
var ConstSet220 = setConstr(2);
var ConstSet221 = setConstr(3);
var ConstSet222 = setConstr(1);
var ConstSet223 = setConstr(4);
var ConstSet224 = setConstr(4);
var ConstSet225 = setConstr(4, 0);
var ConstSet226 = setConstr([48, 57]);
var ConstSet227 = setConstr(0, 125);
var ConstSet228 = setConstr([48, 57]);
var ConstSet229 = setConstr([65, 90]);
var ConstSet230 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet231 = setConstr(4, 0);
var ConstSet232 = setConstr(4);
var ConstSet233 = setConstr(6);
var ConstSet234 = setConstr(13, 10);
var ConstSet235 = setConstr([48, 57]);
var ConstSet236 = setConstr([48, 57]);
var ConstSet237 = setConstr(69, 101);
var ConstSet238 = setConstr(43, 45);
var ConstSet239 = setConstr([48, 57]);
var ConstSet240 = setConstr(46, 101, 69);
var ConstSet241 = setConstr([48, 57], [65, 70], [97, 102]);
var ConstSet242 = setConstr([97, 122], [65, 90], 95);
var ConstSet243 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet244 = setConstr(4);

function absInt(a_33556931) {
    var Temporary1;

  var result_33556932 = 0;

    if ((a_33556931 < 0)) {
    Temporary1 = (a_33556931 * -1);
    }
    else {
    Temporary1 = a_33556931;
    }
    
    result_33556932 = Temporary1;

  return result_33556932;

}
      var tokToStr_1694498894 = [[105,110,118,97,108,105,100,32,116,111,107,101,110], [69,79,70], [115,116,114,105,110,103,32,108,105,116,101,114,97,108], [105,110,116,32,108,105,116,101,114,97,108], [102,108,111,97,116,32,108,105,116,101,114,97,108], [116,114,117,101], [102,97,108,115,101], [110,117,108,108], [123], [125], [91], [93], [58], [44]];
var ConstSet245 = setConstr(2);
var ConstSet246 = setConstr(2);
var ConstSet247 = setConstr(2);
var ConstSet248 = setConstr(6);
var ConstSet249 = setConstr(47, 47);
var ConstSet250 = setConstr(47, 47);
var ConstSet251 = setConstr(47, 47);
var ConstSet252 = setConstr(47, 47);
var ConstSet253 = setConstr(47, 47);
var ConstSet254 = setConstr(47, 47);
var ConstSet255 = setConstr(47, 47);
var ConstSet256 = setConstr(47, 47);
var ConstSet257 = setConstr(47, 47);
var ConstSet258 = setConstr(47, 47);
var ConstSet259 = setConstr(47, 47);
var ConstSet260 = setConstr(47, 47);
var ConstSet261 = setConstr(47, 47);
var ConstSet262 = setConstr(2, 3);
var ConstSet263 = setConstr(2);
var ConstSet264 = setConstr(0);
var ConstSet265 = setConstr(5);
var ConstSet266 = setConstr(5);
var ConstSet267 = setConstr(2);
var ConstSet268 = setConstr(3);
var ConstSet269 = setConstr(1);
var ConstSet270 = setConstr(6);
var ConstSet271 = setConstr(6);
var ConstSet272 = setConstr(6);
var ConstSet273 = setConstr(1);
var ConstSet274 = setConstr(1);
var ConstSet275 = setConstr();
var ConstSet276 = setConstr();
var ConstSet277 = setConstr();
var ConstSet278 = setConstr();
var ConstSet279 = setConstr();
var ConstSet280 = setConstr(120, 88);
var ConstSet281 = setConstr(0);
    var names_1291853937 = [[71,117,105], [84,101,114,109,105,110,97,108], [66,114,111,119,115,101,114]];
var ConstSet282 = setConstr(1);
var ConstSet283 = setConstr(1);
var ConstSet284 = setConstr(1);
var ConstSet285 = setConstr(4);
var ConstSet286 = setConstr(4);
var ConstSet287 = setConstr(2, 3);
var ConstSet288 = setConstr(2, 3);
var ConstSet289 = setConstr(3);
var ConstSet290 = setConstr(2);
var ConstSet291 = setConstr(6);
var ConstSet292 = setConstr(4);
var ConstSet293 = setConstr(4);
var ConstSet294 = setConstr(2, 3);
var ConstSet295 = setConstr(2, 3);
var ConstSet296 = setConstr(3);
var ConstSet297 = setConstr(2);
var ConstSet298 = setConstr(6);
var ConstSet299 = setConstr(5);
var ConstSet300 = setConstr(4);
var ConstSet301 = setConstr(6);
var ConstSet302 = setConstr(4);
var ConstSet303 = setConstr(6);
var ConstSet304 = setConstr(4);
var ConstSet305 = setConstr();
var ConstSet306 = setConstr(4);
var ConstSet307 = setConstr(6);
var ConstSet308 = setConstr(2);
var ConstSet309 = setConstr([97, 122], [65, 90], [48, 57], 95);
var ConstSet310 = setConstr([65, 90]);
    var daysUntilMonthLeap_1191182609 = new Int32Array([0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335]);
      var daysUntilMonth_1191182608 = new Int32Array([0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]);
              var LevelNames_1174405135 = [[68,69,66,85,71], [68,69,66,85,71], [73,78,70,79], [78,79,84,73,67,69], [87,65,82,78], [69,82,82,79,82], [70,65,84,65,76], [78,79,78,69]];
var ConstSet311 = setConstr(0);
var ConstSet312 = setConstr();
var ConstSet313 = setConstr(10, 13, 32, 61);
var ConstSet314 = setConstr(10, 13, 32);
          var decodeTable_2734686693 = new Uint8Array([255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 62, 255, 62, 255, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 255, 255, 255, 255, 255, 255, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 255, 255, 255, 255, 63, 255, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]);
    var FormatOpen_503316842 = ["rb", "wb", "w+b", "r+b", "ab"];
var ConstSet315 = setConstr(6);
var ConstSet316 = setConstr(0);
var ConstSet317 = setConstr(1);
var ConstSet318 = setConstr(2);
if (globalThis.utcInstance_1191183819 === undefined) {
  globalThis.utcInstance_1191183819 = [null];
}
if (globalThis.localInstance_1191183820 === undefined) {
  globalThis.localInstance_1191183820 = [null];
}
if (globalThis.level_1174405147 === undefined) {
  globalThis.level_1174405147 = [0];
}
if (globalThis.handlers_1174405148 === undefined) {
  globalThis.handlers_1174405148 = [[]];
}

function isFatPointer_33557074(ti_33557075) {
  var result_33557076 = false;

  BeforeRet: {
    result_33557076 = !((ConstSet1[ti_33557075.base.kind] != undefined));
    break BeforeRet;
  };

  return result_33557076;

}

function nimCopyAux(dest_33557087, src_33557088, n_33557089) {
    switch (n_33557089.kind) {
    case 0:
      break;
    case 1:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557089.sons.length; i++) {
      nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i]);
    }
    
      break;
    case 3:
            dest_33557087[n_33557089.offset] = nimCopy(dest_33557087[n_33557089.offset], src_33557088[n_33557089.offset], n_33557089.typ);
      for (var i = 0; i < n_33557089.sons.length; ++i) {
        nimCopyAux(dest_33557087, src_33557088, n_33557089.sons[i][1]);
      }
    
      break;
    }

  
}

function newCustomLogger_704643091(levelThreshold_704643092, fmtStr_704643093) {
  var result_704643094 = null;

    result_704643094 = ({m_type: NTI704643078, consoleLogger: ({val: null}), fileLogger: ({val: null}), levelThreshold: 0, fmtStr: []});
    result_704643094.fmtStr = nimCopy(null, fmtStr_704643093, NTI33554449);
    result_704643094.levelThreshold = levelThreshold_704643092;

  return result_704643094;

}
var logger_704643272 = [newCustomLogger_704643091(0, [36,108,101,118,101,108,110,97,109,101,32])];

function add_33556386(x_33556387, x_33556387_Idx, y_33556388) {
          if (x_33556387[x_33556387_Idx] === null) { x_33556387[x_33556387_Idx] = []; }
      var off = x_33556387[x_33556387_Idx].length;
      x_33556387[x_33556387_Idx].length += y_33556388.length;
      for (var i = 0; i < y_33556388.length; ++i) {
        x_33556387[x_33556387_Idx][off+i] = y_33556388.charCodeAt(i);
      }
    

  
}

function newSeq_33556765(len_33556767) {
  var result_33556768 = [];

    result_33556768 = new Array(len_33556767); for (var i = 0 ; i < len_33556767 ; ++i) { result_33556768[i] = null; }
  return result_33556768;

}

function unhandledException(e_33556603) {
    var buf_33556604 = [[]];
    if (!(((e_33556603.message).length == 0))) {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110,58,32]);;
    buf_33556604[0].push.apply(buf_33556604[0], e_33556603.message);;
    }
    else {
    buf_33556604[0].push.apply(buf_33556604[0], [69,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,101,120,99,101,112,116,105,111,110]);;
    }
    
    buf_33556604[0].push.apply(buf_33556604[0], [32,91]);;
    add_33556386(buf_33556604, 0, e_33556603.name);
    buf_33556604[0].push.apply(buf_33556604[0], [93,10]);;
    var cbuf_33556605 = toJSStr(buf_33556604[0]);
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556605);
  }
  else {
    throw cbuf_33556605;
  }
  

  
}

function sysFatal_268435493(message_268435496) {
    raiseException({message: nimCopy(null, message_268435496, NTI33554449), m_type: NTI134217745, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_268435491(msg_268435492) {
    sysFatal_268435493(msg_268435492);

  
}

function failedAssertImpl_268435515(msg_268435516) {
    raiseAssert_268435491(msg_268435516);

  
}

function some_704643120(val_704643122) {
  var result_704643123 = ({val: null});

    if (!(!((val_704643122 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_704643123.val = val_704643122;

  return result_704643123;

}

function newConsoleLogger_1174405235(levelThreshold_1174405236, fmtStr_1174405237, useStderr_1174405238, flushThreshold_1174405239) {
  var result_1174405240 = null;

    result_1174405240 = ({m_type: NTI1174405134, useStderr: false, flushThreshold: 0, levelThreshold: 0, fmtStr: []});
    result_1174405240.fmtStr = nimCopy(null, fmtStr_1174405237, NTI33554449);
    result_1174405240.levelThreshold = levelThreshold_1174405236;
    result_1174405240.flushThreshold = flushThreshold_1174405239;
    result_1174405240.useStderr = useStderr_1174405238;

  return result_1174405240;

}

function enableConsoleLogger_704643118(self_704643119) {
    self_704643119.consoleLogger = nimCopy(self_704643119.consoleLogger, some_704643120(newConsoleLogger_1174405235(self_704643119.levelThreshold, self_704643119.fmtStr, false, 0)), NTI704643084);

  
}
enableConsoleLogger_704643118(logger_704643272[0]);
var objectID_1325400228 = [0];
var state_2197815309 = [{a0: 1773455756, a1: 4275166512}];

function toUnix_1191183338(t_1191183339) {
  var result_1191183340 = 0;

    result_1191183340 = t_1191183339.seconds;

  return result_1191183340;

}

function raiseDivByZero() {
    raiseException({message: [100,105,118,105,115,105,111,110,32,98,121,32,122,101,114,111], parent: null, m_type: NTI134217742, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function raiseOverflow() {
    raiseException({message: [111,118,101,114,45,32,111,114,32,117,110,100,101,114,102,108,111,119], parent: null, m_type: NTI134217743, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556881) {
        if (a_33556881 > 2147483647 || a_33556881 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: [118,97,108,117,101,32,111,117,116,32,111,102,32,114,97,110,103,101], parent: null, m_type: NTI134217751, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_301990066(result_301990068, result_301990068_Idx, x_301990069, start_301990070, n_301990071) {
    var Temporary1;

    var old_301990072 = (result_301990068[result_301990068_Idx]).length;
    if (result_301990068[result_301990068_Idx].length < (Temporary1 = chckRange(addInt(old_301990072, n_301990071), 0, 2147483647), Temporary1)) { for (var i = result_301990068[result_301990068_Idx].length; i < Temporary1; ++i) result_301990068[result_301990068_Idx].push(0); }
         else {result_301990068[result_301990068_Idx].length = Temporary1; };
    Label2: {
      var iHEX60gensym4_301990086 = 0;
      var i_2181038241 = 0;
      Label3: {
          Label4: while (true) {
          if (!(i_2181038241 < n_301990071)) break Label4;
            iHEX60gensym4_301990086 = i_2181038241;
            result_301990068[result_301990068_Idx][chckIndx(addInt(old_301990072, iHEX60gensym4_301990086), 0, (result_301990068[result_301990068_Idx]).length - 1)] = x_301990069.charCodeAt(chckIndx(addInt(start_301990070, iHEX60gensym4_301990086), 0, (x_301990069).length - 1));
            i_2181038241 = addInt(i_2181038241, 1);
          }
      };
    };

  
}

function addChars_301990062(result_301990064, result_301990064_Idx, x_301990065) {
    addChars_301990066(result_301990064, result_301990064_Idx, x_301990065, 0, ((x_301990065) == null ? 0 : (x_301990065).length));

  
}

function addInt_301990087(result_301990088, result_301990088_Idx, x_301990089) {
    addChars_301990062(result_301990088, result_301990088_Idx, ((x_301990089) + ""));

  
}

function addInt_301990108(result_301990109, result_301990109_Idx, x_301990110) {
    addInt_301990087(result_301990109, result_301990109_Idx, x_301990110);

  
}

function HEX24_369098760(x_369098761) {
  var result_369098762 = [[]];

    addInt_301990108(result_369098762, 0, x_369098761);

  return result_369098762[0];

}

function raiseIndexError(i_33556694, a_33556695, b_33556696) {
    var Temporary1;

    if ((b_33556696 < a_33556695)) {
    Temporary1 = [105,110,100,101,120,32,111,117,116,32,111,102,32,98,111,117,110,100,115,44,32,116,104,101,32,99,111,110,116,97,105,110,101,114,32,105,115,32,101,109,112,116,121];
    }
    else {
    Temporary1 = ([105,110,100,101,120,32] || []).concat(HEX24_369098760(i_33556694) || [],[32,110,111,116,32,105,110,32] || [],HEX24_369098760(a_33556695) || [],[32,46,46,32] || [],HEX24_369098760(b_33556696) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554449), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX2A_1191182346(a_1191182347, b_1191182348) {
  var result_1191182349 = 0;

    result_1191182349 = (a_1191182347 * b_1191182348);

  return result_1191182349;

}

function convert_1191182870(unitFrom_1191182872, unitTo_1191182873, quantity_1191182874) {
    var Temporary1;

  var result_1191182875 = 0;

    if ((unitFrom_1191182872 < unitTo_1191182873)) {
    Temporary1 = chckRange(divInt(quantity_1191182874, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)])), -2147483648, 2147483647);
    }
    else {
    Temporary1 = chckRange(HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182872, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182873, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182874), -2147483648, 2147483647);
    }
    
    result_1191182875 = Temporary1;

  return result_1191182875;

}

function initTime_1191183319(unix_1191183320, nanosecond_1191183321) {
  var result_1191183322 = ({seconds: 0, nanosecond: 0});

    result_1191183322.seconds = unix_1191183320;
    result_1191183322.nanosecond = nanosecond_1191183321;

  return result_1191183322;

}

function getTime_1191183389() {
  var result_1191183390 = ({seconds: 0, nanosecond: 0});

    var millis_1191183395 = new Date().getTime();
    var seconds_1191183401 = convert_1191182870(2, 3, millis_1191183395);
    var nanos_1191183412 = convert_1191182870(2, 0, modInt(millis_1191183395, convert_1191182870(3, 2, 1)));
    result_1191183390 = nimCopy(result_1191183390, initTime_1191183319(seconds_1191183401, chckRange(nanos_1191183412, 0, 999999999)), NTI1191182368);

  return result_1191183390;

}

function rotl_2197815327(x_2197815328, k_2197815329) {
  var result_2197815330 = 0;

    result_2197815330 = ((x_2197815328 << k_2197815329) | (x_2197815328 >>> ((64 - k_2197815329) >>> 0)));

  return result_2197815330;

}

function next_2197815339(r_2197815340) {
  var result_2197815341 = 0;

    var s0_2197815342 = r_2197815340.a0;
    var s1_2197815343 = r_2197815340.a1;
    result_2197815341 = ((s0_2197815342 + s1_2197815343) >>> 0);
    s1_2197815343 = (s1_2197815343 ^ s0_2197815342);
    r_2197815340.a0 = ((rotl_2197815327(s0_2197815342, 55) ^ s1_2197815343) ^ (s1_2197815343 << 14));
    r_2197815340.a1 = rotl_2197815327(s1_2197815343, 36);

  return result_2197815341;

}

function skipRandomNumbers_2197815348(s_2197815349) {
    var s0_2197815351 = 0;
    var s1_2197815352 = 0;
    Label1: {
      var i_2197815361 = 0;
      var res_2181038247 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2181038247 <= 1)) break Label3;
            i_2197815361 = res_2181038247;
            Label4: {
              var b_2197815366 = 0;
              var i_2181038245 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!(i_2181038245 < 64)) break Label6;
                    b_2197815366 = i_2181038245;
                    if (!(((helper_2197815350[chckIndx(i_2197815361, 0, (helper_2197815350).length - 1)] & (1 << b_2197815366)) == 0))) {
                    s0_2197815351 = (s0_2197815351 ^ s_2197815349.a0);
                    s1_2197815352 = (s1_2197815352 ^ s_2197815349.a1);
                    }
                    
                    var _ = next_2197815339(s_2197815349);
                    i_2181038245 = addInt(i_2181038245, 1);
                  }
              };
            };
            res_2181038247 = addInt(res_2181038247, 1);
          }
      };
    };
    s_2197815349.a0 = s0_2197815351;
    s_2197815349.a1 = s1_2197815352;

  
}

function initRand_2197815507(seed_2197815508) {
    var Temporary1;

  var result_2197815509 = [({a0: 0, a1: 0})];

    if (!((seed_2197815508 == 0))) {
    Temporary1 = seed_2197815508;
    }
    else {
    Temporary1 = 2147483647;
    }
    
    var seed_2197815515 = Temporary1;
    result_2197815509[0].a0 = Math.floor(seed_2197815515 / Math.pow(2, 16));
    result_2197815509[0].a1 = (seed_2197815515 & 65535);
    skipRandomNumbers_2197815348(result_2197815509[0]);
    var _ = next_2197815339(result_2197815509[0]);

  return result_2197815509[0];

}

function rand_2197815382(r_2197815384, max_2197815385) {
  var result_2197815386 = 0;

  BeforeRet: {
    if ((max_2197815385 == 0)) {
    break BeforeRet;
    }
    else {
      var max_2197815387 = max_2197815385;
      if ((max_2197815387 == -1)) {
      result_2197815386 = next_2197815339(r_2197815384);
      break BeforeRet;
      }
      
      Label1: {
          Label2: while (true) {
          if (!true) break Label2;
            var x_2197815400 = next_2197815339(r_2197815384);
            if ((x_2197815400 <= ((4294967295 - (4294967295 % max_2197815387)) ))) {
            result_2197815386 = (x_2197815400 % ((max_2197815387 + 1) ));
            break BeforeRet;
            }
            
          }
      };
    }
    
  };

  return result_2197815386;

}

function rand_2197815378(r_2197815379, max_2197815380) {
  var result_2197815381 = 0;

    result_2197815381 = rand_2197815382(r_2197815379, max_2197815380);

  return result_2197815381;

}
var t_2181038225 = toUnix_1191183338(getTime_1191183389());
var seed_2181038226 = [initRand_2197815507(t_2181038225)];
var incr_2181038231 = [rand_2197815378(seed_2181038226[0], 2147483647)];
var fuzz_2181038236 = rand_2197815378(seed_2181038226[0], 2147483647);

function idNone_2181038338() {
  var result_2181038339 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  return result_2181038339;

}
var null_2181038340 = idNone_2181038338();
var nextEditorId_2231370042 = [0];

function new_2499805210() {
  var result_2499805213 = null;

  BeforeRet: {
    var r_2499805215 = null;
    r_2499805215 = ({m_type: NTI2516582404});
    result_2499805213 = r_2499805215;
    break BeforeRet;
  };

  return result_2499805213;

}
var fs_2499805237 = new_2499805210();
var cb64_2734686212 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47]);
var cb64safe_2734686213 = new Uint8Array([65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95]);
var gEditor = null;
var handleIdCounter_2902458447 = [1];

function parseSaturatedNatural_771752342(s_771752343, b_771752344, b_771752344_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752345 = 0;

    var i_771752346 = 0;
    if (((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 43))) {
    i_771752346 = addInt(i_771752346, 1);
    }
    
      if (!(i_771752346 < (s_771752343).length)) Temporary1 = false; else {        Temporary1 = (ConstSet6[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752344[b_771752344_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752346 < (s_771752343).length)) Temporary4 = false; else {            Temporary4 = (ConstSet7[s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752375 = subInt(s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)], 48);
          if ((b_771752344[b_771752344_Idx] <= divInt(subInt(2147483647, c_771752375), 10))) {
          b_771752344[b_771752344_Idx] = addInt(mulInt(b_771752344[b_771752344_Idx], 10), c_771752375);
          }
          else {
            b_771752344[b_771752344_Idx] = 2147483647;
          }
          
          i_771752346 = addInt(i_771752346, 1);
          Label5: {
              Label6: while (true) {
              if (!((i_771752346 < (s_771752343).length) && (s_771752343[chckIndx(i_771752346, 0, (s_771752343).length - 1)] == 95))) break Label6;
                i_771752346 = addInt(i_771752346, 1);
              }
          };
        }
    };
    result_771752345 = i_771752346;
    }
    

  return result_771752345;

}

function parseSaturatedNatural_771752729(s_771752730, b_771752731, b_771752731_Idx, start_771752732) {
  var result_771752733 = 0;

    result_771752733 = parseSaturatedNatural_771752342((s_771752730.slice(start_771752732, (s_771752730).length - 1 + 1)), b_771752731, b_771752731_Idx);

  return result_771752733;

}

function HEX5BHEX5D_855639319(s_855639322, x_855639323) {
  var result_855639324 = [];

    var a_855639326 = x_855639323.a;
    var L_855639328 = addInt(subInt(subInt((s_855639322).length, x_855639323.b), a_855639326), 1);
    result_855639324 = nimCopy(null, mnewString(chckRange(L_855639328, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639333 = 0;
      var i_2583691920 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2583691920 < L_855639328)) break Label3;
            i_855639333 = i_2583691920;
            result_855639324[chckIndx(i_855639333, 0, (result_855639324).length - 1)] = s_855639322[chckIndx(addInt(i_855639333, a_855639326), 0, (s_855639322).length - 1)];
            i_2583691920 = addInt(i_2583691920, 1);
          }
      };
    };

  return result_855639324;

}

function HEX2EHEX2E_1040187488(a_1040187491, b_1040187492) {
  var result_1040187495 = ({a: 0, b: 0});

    result_1040187495 = nimCopy(result_1040187495, {a: a_1040187491, b: b_1040187492}, NTI1040187476);

  return result_1040187495;

}

function parseStandardFormatSpecifier_721420346(s_721420347, start_721420348, ignoreUnknownSuffix_721420349) {
      var Temporary1;
      var Temporary2;

  var result_721420350 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_721420350.fill = 32;
    result_721420350.align = 0;
    result_721420350.sign = 45;
    var i_721420352 = start_721420348;
    if (((addInt(i_721420352, 1) < (s_721420347).length) && (ConstSet2[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.fill = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    result_721420350.align = s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 2);
    }
    else {
    if (((i_721420352 < (s_721420347).length) && (ConstSet3[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.align = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    }
    if (((i_721420352 < (s_721420347).length) && (ConstSet4[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined))) {
    result_721420350.sign = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 35))) {
    result_721420350.alternateForm = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
      if (!((addInt(i_721420352, 1) < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet5[s_721420347[chckIndx(addInt(i_721420352, 1), 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary1) {
    result_721420350.padWithZero = true;
    i_721420352 = addInt(i_721420352, 1);
    }
    
    var parsedLength_721420394 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "minimumWidth", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLength_721420394);
    if (((i_721420352 < (s_721420347).length) && (s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)] == 46))) {
    i_721420352 = addInt(i_721420352, 1);
    var parsedLengthB_721420405 = parseSaturatedNatural_771752729(s_721420347, result_721420350, "precision", i_721420352);
    i_721420352 = addInt(i_721420352, parsedLengthB_721420405);
    }
    else {
      result_721420350.precision = -1;
    }
    
      if (!(i_721420352 < (s_721420347).length)) Temporary2 = false; else {        Temporary2 = (ConstSet8[s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)]] != undefined);      }    if (Temporary2) {
    result_721420350.typ = s_721420347[chckIndx(i_721420352, 0, (s_721420347).length - 1)];
    i_721420352 = addInt(i_721420352, 1);
    }
    
    result_721420350.endPosition = i_721420352;
    if ((!((i_721420352 == (s_721420347).length)) && !(ignoreUnknownSuffix_721420349))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,44,32,99,97,110,110,111,116,32,112,97,114,115,101,58,32] || []).concat(HEX5BHEX5D_855639319(s_721420347, HEX2EHEX2E_1040187488(i_721420352, 1)) || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_721420350;

}

function nucruneLen(s_788529180) {
  var result_788529181 = 0;

    result_788529181 = 0;
    var i_788529182 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_788529182 < (s_788529180).length)) break Label2;
          if ((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] <= 127)) {
          i_788529182 = addInt(i_788529182, 1);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 5) == 6)) {
          i_788529182 = addInt(i_788529182, 2);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 4) == 14)) {
          i_788529182 = addInt(i_788529182, 3);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 3) == 30)) {
          i_788529182 = addInt(i_788529182, 4);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 2) == 62)) {
          i_788529182 = addInt(i_788529182, 5);
          }
          else {
          if (((s_788529180[chckIndx(i_788529182, 0, (s_788529180).length - 1)] >>> 1) == 126)) {
          i_788529182 = addInt(i_788529182, 6);
          }
          else {
          i_788529182 = addInt(i_788529182, 1);
          }
          }}}}}
          result_788529181 = addInt(result_788529181, 1);
        }
    };

  return result_788529181;

}

function runeLen_788536172(s_788536173) {
  var result_788536174 = 0;

    result_788536174 = nucruneLen((s_788536173.slice(0, (s_788536173).length - 1 + 1)));

  return result_788536174;

}

function runeLenAt_788529246(s_788529247, i_788529248) {
  var result_788529249 = 0;

    if ((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] <= 127)) {
    result_788529249 = 1;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 5) == 6)) {
    result_788529249 = 2;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 4) == 14)) {
    result_788529249 = 3;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 3) == 30)) {
    result_788529249 = 4;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 2) == 62)) {
    result_788529249 = 5;
    }
    else {
    if (((s_788529247[chckIndx(i_788529248, 0, (s_788529247).length - 1)] >>> 1) == 126)) {
    result_788529249 = 6;
    }
    else {
      result_788529249 = 1;
    }
    }}}}}

  return result_788529249;

}

function runeOffset_788529843(s_788529844, pos_788529845, start_788529846) {
  var result_788529847 = 0;

  BeforeRet: {
    var i_788529848 = 0;
    var o_788529849 = start_788529846;
    Label1: {
        Label2: while (true) {
        if (!(i_788529848 < pos_788529845)) break Label2;
          o_788529849 = addInt(o_788529849, chckRange(runeLenAt_788529246(s_788529844, o_788529849), 0, 2147483647));
          if (((s_788529844).length <= o_788529849)) {
          result_788529847 = -1;
          break BeforeRet;
          }
          
          i_788529848 = addInt(i_788529848, 1);
        }
    };
    result_788529847 = o_788529849;
    break BeforeRet;
  };

  return result_788529847;

}

function runeOffset_788536347(s_788536348, pos_788536349, start_788536350) {
  var result_788536351 = 0;

    result_788536351 = runeOffset_788529843((s_788536348.slice(0, (s_788536348).length - 1 + 1)), pos_788536349, start_788536350);

  return result_788536351;

}

function validateUtf8_788529475(s_788529476) {
  var result_788529477 = 0;

  BeforeRet: {
    var i_788529478 = 0;
    var L_788529482 = (s_788529476).length;
    Label1: {
        Label2: while (true) {
        if (!(i_788529478 < L_788529482)) break Label2;
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] <= 127)) {
          i_788529478 = addInt(i_788529478, 1);
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 5) == 6)) {
          if ((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] < 194)) {
          result_788529477 = i_788529478;
          break BeforeRet;
          }
          
          if (((addInt(i_788529478, 1) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 2);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 4) == 14)) {
          if ((((addInt(i_788529478, 2) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 3);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_788529476[chckIndx(i_788529478, 0, (s_788529476).length - 1)] >>> 3) == 30)) {
          if (((((addInt(i_788529478, 3) < L_788529482) && ((s_788529476[chckIndx(addInt(i_788529478, 1), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 2), 0, (s_788529476).length - 1)] >>> 6) == 2)) && ((s_788529476[chckIndx(addInt(i_788529478, 3), 0, (s_788529476).length - 1)] >>> 6) == 2))) {
          i_788529478 = addInt(i_788529478, 4);
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          
          }
          else {
            result_788529477 = i_788529478;
            break BeforeRet;
          }
          }}}
        }
    };
    result_788529477 = -1;
    break BeforeRet;
  };

  return result_788529477;

}

function validateUtf8_788536344(s_788536345) {
  var result_788536346 = 0;

    result_788536346 = validateUtf8_788529475((s_788536345.slice(0, (s_788536345).length - 1 + 1)));

  return result_788536346;

}

function nsuRepeatChar(c_855639133, count_855639134) {
  var result_855639135 = [];

    result_855639135 = nimCopy(null, mnewString(count_855639134), NTI33554449);
    Label1: {
      var i_855639140 = 0;
      var colontmp__2801804036 = 0;
      colontmp__2801804036 = subInt(count_855639134, 1);
      var res_2801804037 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801804037 <= colontmp__2801804036)) break Label3;
            i_855639140 = res_2801804037;
            result_855639135[chckIndx(i_855639140, 0, (result_855639135).length - 1)] = c_855639133;
            res_2801804037 = addInt(res_2801804037, 1);
          }
      };
    };

  return result_855639135;

}

function alignString_721420308(s_721420309, minimumWidth_721420310, align_721420311, fill_721420312) {
      var Temporary1;

  var result_721420313 = [];

    if ((minimumWidth_721420310 == 0)) {
    result_721420313 = nimCopy(null, s_721420309, NTI33554449);
    }
    else {
      if ((validateUtf8_788536344(s_721420309) == -1)) {
      Temporary1 = runeLen_788536172(s_721420309);
      }
      else {
      Temporary1 = (s_721420309).length;
      }
      
      var sRuneLen_721420314 = Temporary1;
      var toFill_721420315 = subInt(minimumWidth_721420310, sRuneLen_721420314);
      if ((toFill_721420315 <= 0)) {
      result_721420313 = nimCopy(null, s_721420309, NTI33554449);
      }
      else {
      if (((align_721420311 == 60) || (align_721420311 == 0))) {
      result_721420313 = nimCopy(null, (s_721420309 || []).concat(nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []), NTI33554449);
      }
      else {
      if ((align_721420311 == 94)) {
      var half_721420316 = divInt(toFill_721420315, 2);
      result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(half_721420316, 0, 2147483647)) || []).concat(s_721420309 || [],nsuRepeatChar(fill_721420312, chckRange(subInt(toFill_721420315, half_721420316), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        result_721420313 = nimCopy(null, (nsuRepeatChar(fill_721420312, chckRange(toFill_721420315, 0, 2147483647)) || []).concat(s_721420309 || []), NTI33554449);
      }
      }}
    }
    

  return result_721420313;

}

function formatValue_721420459(result_721420460, result_721420460_Idx, value_721420461, specifier_721420462) {
    var Temporary1;

    var spec_721420463 = parseStandardFormatSpecifier_721420346(specifier_721420462, 0, false);
    var value_721420464 = nimCopy(null, value_721420461, NTI33554449);
    switch (spec_721420463.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: ([105,110,118,97,108,105,100,32,116,121,112,101,32,105,110,32,102,111,114,109,97,116,32,115,116,114,105,110,103,32,102,111,114,32,115,116,114,105,110,103,44,32,101,120,112,101,99,116,101,100,32,39,115,39,44,32,98,117,116,32,103,111,116,32] || []).concat([spec_721420463.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_721420463.precision == -1))) {
    if ((spec_721420463.precision < runeLen_788536172(value_721420464))) {
    if (value_721420464.length < (Temporary1 = chckRange(runeOffset_788536347(value_721420464, chckRange(spec_721420463.precision, 0, 2147483647), 0), 0, 2147483647), Temporary1)) { for (var i = value_721420464.length; i < Temporary1; ++i) value_721420464.push(0); }
         else {value_721420464.length = Temporary1; };
    }
    
    }
    
    result_721420460[result_721420460_Idx].push.apply(result_721420460[result_721420460_Idx], alignString_721420308(value_721420464, spec_721420463.minimumWidth, spec_721420463.align, spec_721420463.fill));;

  
}

function imul_1325400356(a_1325400357, b_1325400358) {
  var result_1325400359 = 0;

    var mask_1325400360 = 65535;
    var aHi_1325400365 = ((a_1325400357 >>> 16) & mask_1325400360);
    var aLo_1325400366 = (a_1325400357 & mask_1325400360);
    var bHi_1325400371 = ((b_1325400358 >>> 16) & mask_1325400360);
    var bLo_1325400372 = (b_1325400358 & mask_1325400360);
    result_1325400359 = ((((aLo_1325400366 * bLo_1325400372) >>> 0) + (((((aHi_1325400365 * bLo_1325400372) >>> 0) + ((aLo_1325400366 * bHi_1325400371) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_1325400359;

}

function rotl32_1325400377(x_1325400378, r_1325400379) {
  var result_1325400380 = 0;

    result_1325400380 = ((x_1325400378 << r_1325400379) | (x_1325400378 >>> subInt(32, r_1325400379)));

  return result_1325400380;

}

function murmurHash_1325400389(x_1325400390) {
  var result_1325400391 = 0;

  BeforeRet: {
    var size_1325400400 = (x_1325400390).length;
    var stepSize_1325400401 = 4;
    var n_1325400402 = divInt(size_1325400400, stepSize_1325400401);
    var h1_1325400403 = 0;
    var i_1325400404 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_1325400404 < mulInt(n_1325400402, stepSize_1325400401))) break Label2;
          var k1_1325400405 = 0;
          var j_1325400406 = stepSize_1325400401;
          Label3: {
              Label4: while (true) {
              if (!(0 < j_1325400406)) break Label4;
                j_1325400406 = subInt(j_1325400406, 1);
                k1_1325400405 = ((k1_1325400405 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, j_1325400406), 0, (x_1325400390).length - 1)]);
              }
          };
          i_1325400404 = addInt(i_1325400404, stepSize_1325400401);
          k1_1325400405 = imul_1325400356(k1_1325400405, 3432918353);
          k1_1325400405 = rotl32_1325400377(k1_1325400405, 15);
          k1_1325400405 = imul_1325400356(k1_1325400405, 461845907);
          h1_1325400403 = (h1_1325400403 ^ k1_1325400405);
          h1_1325400403 = rotl32_1325400377(h1_1325400403, 13);
          h1_1325400403 = ((((h1_1325400403 * 5) >>> 0) + 3864292196) >>> 0);
        }
    };
    var k1_1325400425 = 0;
    var rem_1325400426 = modInt(size_1325400400, stepSize_1325400401);
    Label5: {
        Label6: while (true) {
        if (!(0 < rem_1325400426)) break Label6;
          rem_1325400426 = subInt(rem_1325400426, 1);
          k1_1325400425 = ((k1_1325400425 << 8) | x_1325400390[chckIndx(addInt(i_1325400404, rem_1325400426), 0, (x_1325400390).length - 1)]);
        }
    };
    k1_1325400425 = imul_1325400356(k1_1325400425, 3432918353);
    k1_1325400425 = rotl32_1325400377(k1_1325400425, 15);
    k1_1325400425 = imul_1325400356(k1_1325400425, 461845907);
    h1_1325400403 = (h1_1325400403 ^ k1_1325400425);
    h1_1325400403 = (h1_1325400403 ^ size_1325400400);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    h1_1325400403 = imul_1325400356(h1_1325400403, 2246822507);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 13));
    h1_1325400403 = imul_1325400356(h1_1325400403, 3266489909);
    h1_1325400403 = (h1_1325400403 ^ (h1_1325400403 >>> 16));
    result_1325400391 = (h1_1325400403 | 0);
    break BeforeRet;
  };

  return result_1325400391;

}

function hash_1325400491(x_1325400492) {
  var result_1325400493 = 0;

    result_1325400493 = murmurHash_1325400389((x_1325400492.slice(0, (x_1325400492).length - 1 + 1)));

  return result_1325400493;

}

function isFilled_1308622880(hcode_1308622881) {
  var result_1308622882 = false;

    result_1308622882 = !((hcode_1308622881 == 0));

  return result_1308622882;

}

function nextTry_1308622883(h_1308622884, maxHash_1308622885) {
  var result_1308622886 = 0;

    result_1308622886 = (addInt(h_1308622884, 1) & maxHash_1308622885);

  return result_1308622886;

}

function rawGet_1291849212(t_1291849215, key_1291849216, hc_1291849217, hc_1291849217_Idx) {
  var result_1291849218 = 0;

  BeforeRet: {
    hc_1291849217[hc_1291849217_Idx] = hash_1325400491(key_1291849216);
    if ((hc_1291849217[hc_1291849217_Idx] == 0)) {
    hc_1291849217[hc_1291849217_Idx] = 314159265;
    }
    
    if (((t_1291849215.data).length == 0)) {
    result_1291849218 = -1;
    break BeforeRet;
    }
    
    var h_1291849270 = (hc_1291849217[hc_1291849217_Idx] & (t_1291849215.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291849215.data[chckIndx(h_1291849270, 0, (t_1291849215.data).length - 1)].Field0)) break Label2;
          if (((t_1291849215.data[chckIndx(h_1291849270, 0, (t_1291849215.data).length - 1)].Field0 == hc_1291849217[hc_1291849217_Idx]) && eqStrings(t_1291849215.data[chckIndx(h_1291849270, 0, (t_1291849215.data).length - 1)].Field1, key_1291849216))) {
          result_1291849218 = h_1291849270;
          break BeforeRet;
          }
          
          h_1291849270 = nextTry_1308622883(h_1291849270, (t_1291849215.data).length - 1);
        }
    };
    result_1291849218 = subInt(-1, h_1291849270);
  };

  return result_1291849218;

}

function hasKey_1291849205(t_1291849208, key_1291849209) {
  var result_1291849210 = false;

    var hc_1291849211 = [0];
    result_1291849210 = (0 <= rawGet_1291849212(t_1291849208, key_1291849209, hc_1291849211, 0));

  return result_1291849210;

}

function contains_1291849199(t_1291849202, key_1291849203) {
  var result_1291849204 = false;

  BeforeRet: {
    result_1291849204 = hasKey_1291849205(t_1291849202, key_1291849203);
    break BeforeRet;
  };

  return result_1291849204;

}

function nextPowerOfTwo_872415437(x_872415438) {
  var result_872415439 = 0;

    result_872415439 = (x_872415438 - 1);
    result_872415439 = (result_872415439 | (result_872415439 >> 16));
    result_872415439 = (result_872415439 | (result_872415439 >> 8));
    result_872415439 = (result_872415439 | (result_872415439 >> 4));
    result_872415439 = (result_872415439 | (result_872415439 >> 2));
    result_872415439 = (result_872415439 | (result_872415439 >> 1));
    result_872415439 += (1 + ((x_872415438 <= 0) ? 1 : 0));

  return result_872415439;

}

function slotsNeeded_1308622891(count_1308622892) {
  var result_1308622893 = 0;

    result_1308622893 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1308622892, 3), 2), 4));

  return result_1308622893;

}

function mustRehash_1291849664(t_1291849666) {
  var result_1291849667 = false;

    if (!((t_1291849666.counter < (t_1291849666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291849667 = ((mulInt((t_1291849666.data).length, 2) < mulInt(t_1291849666.counter, 3)) || (subInt((t_1291849666.data).length, t_1291849666.counter) < 4));

  return result_1291849667;

}

function rawInsert_1291850113(t_1291850117, data_1291850118, data_1291850118_Idx, key_1291850119, val_1291850120, hc_1291850121, h_1291850122) {
    data_1291850118[data_1291850118_Idx][chckIndx(h_1291850122, 0, (data_1291850118[data_1291850118_Idx]).length - 1)].Field1 = nimCopy(null, key_1291850119, NTI33554449);
    data_1291850118[data_1291850118_Idx][chckIndx(h_1291850122, 0, (data_1291850118[data_1291850118_Idx]).length - 1)].Field2 = val_1291850120;
    data_1291850118[data_1291850118_Idx][chckIndx(h_1291850122, 0, (data_1291850118[data_1291850118_Idx]).length - 1)].Field0 = hc_1291850121;

  
}

function enlarge_1291849819(t_1291849822) {
    var n_1291849825 = [];
    n_1291849825 = new Array(chckRange(mulInt((t_1291849822.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291849822.data).length, 2), 0, 2147483647) ; ++i) { n_1291849825[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_1291849822.data; t_1291849822.data = n_1291849825; n_1291849825 = Temporary1;    Label2: {
      var i_1291849889 = 0;
      var colontmp__2801804045 = 0;
      colontmp__2801804045 = (n_1291849825).length - 1;
      var res_2801804047 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801804047 <= colontmp__2801804045)) break Label4;
            i_1291849889 = res_2801804047;
            var eh_1291849943 = n_1291849825[chckIndx(i_1291849889, 0, (n_1291849825).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291849943)) {
            var j_1291849947 = (eh_1291849943 & (t_1291849822.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291849822.data[chckIndx(j_1291849947, 0, (t_1291849822.data).length - 1)].Field0)) break Label6;
                  j_1291849947 = nextTry_1308622883(j_1291849947, (t_1291849822.data).length - 1);
                }
            };
            rawInsert_1291850113(t_1291849822, t_1291849822, "data", n_1291849825[chckIndx(i_1291849889, 0, (n_1291849825).length - 1)].Field1, n_1291849825[chckIndx(i_1291849889, 0, (n_1291849825).length - 1)].Field2, eh_1291849943, j_1291849947);
            }
            
            res_2801804047 = addInt(res_2801804047, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291850282(t_1291850285, key_1291850286, hc_1291850287) {
  var result_1291850288 = 0;

  BeforeRet: {
    if (((t_1291850285.data).length == 0)) {
    result_1291850288 = -1;
    break BeforeRet;
    }
    
    var h_1291850339 = (hc_1291850287 & (t_1291850285.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291850285.data[chckIndx(h_1291850339, 0, (t_1291850285.data).length - 1)].Field0)) break Label2;
          if (((t_1291850285.data[chckIndx(h_1291850339, 0, (t_1291850285.data).length - 1)].Field0 == hc_1291850287) && eqStrings(t_1291850285.data[chckIndx(h_1291850339, 0, (t_1291850285.data).length - 1)].Field1, key_1291850286))) {
          result_1291850288 = h_1291850339;
          break BeforeRet;
          }
          
          h_1291850339 = nextTry_1308622883(h_1291850339, (t_1291850285.data).length - 1);
        }
    };
    result_1291850288 = subInt(-1, h_1291850339);
  };

  return result_1291850288;

}

function HEX5BHEX5DHEX3D_1291849491(t_1291849494, key_1291849495, val_1291849496) {
    if (((t_1291849494.data).length == 0)) {
    var correctSizeHEX60gensym38_1291849545 = slotsNeeded_1308622891(32);
    t_1291849494.counter = 0;
    t_1291849494.data = new Array(chckRange(correctSizeHEX60gensym38_1291849545, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym38_1291849545, 0, 2147483647) ; ++i) { t_1291849494.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_1291849550 = [0];
    var index_1291849557 = rawGet_1291849212(t_1291849494, key_1291849495, hc_1291849550, 0);
    if ((0 <= index_1291849557)) {
    t_1291849494.data[chckIndx(index_1291849557, 0, (t_1291849494.data).length - 1)].Field2 = val_1291849496;
    }
    else {
      if (((t_1291849494.data).length == 0)) {
      var correctSizeHEX60gensym41_1291849659 = slotsNeeded_1308622891(32);
      t_1291849494.counter = 0;
      t_1291849494.data = new Array(chckRange(correctSizeHEX60gensym41_1291849659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_1291849659, 0, 2147483647) ; ++i) { t_1291849494.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_1291849664(t_1291849494)) {
      enlarge_1291849819(t_1291849494);
      index_1291849557 = rawGetKnownHC_1291850282(t_1291849494, key_1291849495, hc_1291849550[0]);
      }
      
      index_1291849557 = subInt(-1, index_1291849557);
      rawInsert_1291850113(t_1291849494, t_1291849494, "data", key_1291849495, val_1291849496, hc_1291849550[0], index_1291849557);
      t_1291849494.counter = addInt(t_1291849494.counter, 1);
    }
    

  
}

function newEventHandlerConfig_2046820391(context_2046820392) {
  var result_2046820393 = null;

    result_2046820393 = ({context: [], commands: ({data: [], counter: 0}), handleActions: false, handleInputs: false, consumeAllActions: false, consumeAllInput: false, revision: 0});
    result_2046820393.handleActions = true;
    result_2046820393.handleInputs = false;
    result_2046820393.context = nimCopy(null, context_2046820392, NTI33554449);

  return result_2046820393;

}

function raiseKeyError_1627392893(key_1627392895) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(key_1627392895 || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_1291850573(t_1291850576, key_1291850577) {
  var result_1291850578 = null;
  var result_1291850578_Idx = 0;

    var hcHEX60gensym22_1291850579 = [0];
    var indexHEX60gensym22_1291850586 = rawGet_1291849212(t_1291850576, key_1291850577, hcHEX60gensym22_1291850579, 0);
    if ((0 <= indexHEX60gensym22_1291850586)) {
    result_1291850578 = t_1291850576.data[chckIndx(indexHEX60gensym22_1291850586, 0, (t_1291850576.data).length - 1)]; result_1291850578_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291850577);
    }
    

  return [result_1291850578, result_1291850578_Idx];

}

function getEventHandlerConfig_1291849153(self_1291849154, context_1291849155) {
    var Temporary1;

  var result_1291849156 = null;

  BeforeRet: {
    if (!(contains_1291849199(self_1291849154.eventHandlerConfigs, context_1291849155))) {
    HEX5BHEX5DHEX3D_1291849491(self_1291849154.eventHandlerConfigs, context_1291849155, newEventHandlerConfig_2046820391(context_1291849155));
    }
    
    result_1291849156 = (Temporary1 = HEX5BHEX5D_1291850573(self_1291849154.eventHandlerConfigs, context_1291849155), Temporary1)[0][Temporary1[1]];
    break BeforeRet;
  };

  return result_1291849156;

}

function getModeConfig_2801803668(self_2801803669, mode_2801803670) {
  var result_2801803671 = null;

  BeforeRet: {
    result_2801803671 = getEventHandlerConfig_1291849153(self_2801803669.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(mode_2801803670 || []));
    break BeforeRet;
  };

  return result_2801803671;

}

function isAscii_2013266003(input_2013266004) {
  var result_2013266005 = false;

  BeforeRet: {
    if (((0 <= input_2013266004) && (input_2013266004 <= 255))) {
    result_2013266005 = true;
    break BeforeRet;
    }
    
    result_2013266005 = false;
    break BeforeRet;
  };

  return result_2013266005;

}

function newSeq_788533339(len_788533341) {
  var result_788533342 = [];

    result_788533342 = new Array(len_788533341); for (var i = 0 ; i < len_788533341 ; ++i) { result_788533342[i] = 0; }
  return result_788533342;

}

function toRunes_788533332(s_788533333) {
  var result_788533334 = [];

    result_788533334 = nimCopy(null, newSeq_788533339(0), NTI788536206);
    Label1: {
      var r_788533347 = 0;
      var i_2801804077 = 0;
      var result_2801804078 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804077 < (s_788533333).length)) break Label3;
            if ((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] <= 127)) {
            result_2801804078 = chckRange(s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
            i_2801804077 = addInt(i_2801804077, 1);
            }
            else {
            if (((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] >>> 5) == 6)) {
            if ((i_2801804077 <= subInt((s_788533333).length, 2))) {
            result_2801804078 = chckRange((((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] & 31) << 6) | (s_788533333[chckIndx(addInt(i_2801804077, 1), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801804077 = addInt(i_2801804077, 2);
            }
            else {
              result_2801804078 = 65533;
              i_2801804077 = addInt(i_2801804077, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] >>> 4) == 14)) {
            if ((i_2801804077 <= subInt((s_788533333).length, 3))) {
            result_2801804078 = chckRange(((((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] & 15) << 12) | ((s_788533333[chckIndx(addInt(i_2801804077, 1), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801804077, 2), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801804077 = addInt(i_2801804077, 3);
            }
            else {
              result_2801804078 = 65533;
              i_2801804077 = addInt(i_2801804077, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] >>> 3) == 30)) {
            if ((i_2801804077 <= subInt((s_788533333).length, 4))) {
            result_2801804078 = chckRange((((((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] & 7) << 18) | ((s_788533333[chckIndx(addInt(i_2801804077, 1), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2801804077, 2), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801804077, 3), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801804077 = addInt(i_2801804077, 4);
            }
            else {
              result_2801804078 = 65533;
              i_2801804077 = addInt(i_2801804077, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] >>> 2) == 62)) {
            if ((i_2801804077 <= subInt((s_788533333).length, 5))) {
            result_2801804078 = chckRange(((((((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] & 3) << 24) | ((s_788533333[chckIndx(addInt(i_2801804077, 1), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2801804077, 2), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2801804077, 3), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801804077, 4), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801804077 = addInt(i_2801804077, 5);
            }
            else {
              result_2801804078 = 65533;
              i_2801804077 = addInt(i_2801804077, 1);
            }
            
            }
            else {
            if (((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] >>> 1) == 126)) {
            if ((i_2801804077 <= subInt((s_788533333).length, 6))) {
            result_2801804078 = chckRange((((((((s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)] & 1) << 30) | ((s_788533333[chckIndx(addInt(i_2801804077, 1), 0, (s_788533333).length - 1)] & 63) << 24)) | ((s_788533333[chckIndx(addInt(i_2801804077, 2), 0, (s_788533333).length - 1)] & 63) << 18)) | ((s_788533333[chckIndx(addInt(i_2801804077, 3), 0, (s_788533333).length - 1)] & 63) << 12)) | ((s_788533333[chckIndx(addInt(i_2801804077, 4), 0, (s_788533333).length - 1)] & 63) << 6)) | (s_788533333[chckIndx(addInt(i_2801804077, 5), 0, (s_788533333).length - 1)] & 63)), -2147483648, 2147483647);
            i_2801804077 = addInt(i_2801804077, 6);
            }
            else {
              result_2801804078 = 65533;
              i_2801804077 = addInt(i_2801804077, 1);
            }
            
            }
            else {
              result_2801804078 = chckRange(s_788533333[chckIndx(i_2801804077, 0, (s_788533333).length - 1)], -2147483648, 2147483647);
              i_2801804077 = addInt(i_2801804077, 1);
            }
            }}}}}
            r_788533347 = result_2801804078;
            result_788533334.push(r_788533347);;
          }
      };
    };

  return result_788533334;

}

function toRunes_788536583(s_788536584) {
  var result_788536585 = [];

    result_788536585 = nimCopy(null, toRunes_788533332((s_788536584.slice(0, (s_788536584).length - 1 + 1))), NTI788536198);

  return result_788536585;

}

function getInputCodeFromSpecialKey_2013267119(specialKey_2013267120) {
      var Temporary1;

  var result_2013267121 = 0;

    var runes_2013267122 = toRunes_788536583(specialKey_2013267120);
    if (((runes_2013267122).length == 1)) {
    result_2013267121 = runes_2013267122[chckIndx(0, 0, (runes_2013267122).length - 1)];
    }
    else {
      switch (toJSStr(specialKey_2013267120)) {
      case "ENTER":
        Temporary1 = -1;
        break;
      case "ESCAPE":
        Temporary1 = -2;
        break;
      case "BACKSPACE":
        Temporary1 = -3;
        break;
      case "SPACE":
        Temporary1 = -4;
        break;
      case "DELETE":
        Temporary1 = -5;
        break;
      case "TAB":
        Temporary1 = -6;
        break;
      case "LEFT":
        Temporary1 = -7;
        break;
      case "RIGHT":
        Temporary1 = -8;
        break;
      case "UP":
        Temporary1 = -9;
        break;
      case "DOWN":
        Temporary1 = -10;
        break;
      case "HOME":
        Temporary1 = -11;
        break;
      case "END":
        Temporary1 = -12;
        break;
      case "PAGE_UP":
        Temporary1 = -13;
        break;
      case "PAGE_DOWN":
        Temporary1 = -14;
        break;
      case "F1":
        Temporary1 = -20;
        break;
      case "F2":
        Temporary1 = -21;
        break;
      case "F3":
        Temporary1 = -22;
        break;
      case "F4":
        Temporary1 = -23;
        break;
      case "F5":
        Temporary1 = -24;
        break;
      case "F6":
        Temporary1 = -25;
        break;
      case "F7":
        Temporary1 = -26;
        break;
      case "F8":
        Temporary1 = -27;
        break;
      case "F9":
        Temporary1 = -28;
        break;
      case "F10":
        Temporary1 = -29;
        break;
      case "F11":
        Temporary1 = -30;
        break;
      case "F12":
        Temporary1 = -31;
        break;
      default: 
        var fmtRes_2013267130 = [mnewString(0)];
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [73,110,118,97,108,105,100,32,107,101,121,32,39]);;
        formatValue_721420459(fmtRes_2013267130, 0, specialKey_2013267120, []);
        fmtRes_2013267130[0].push.apply(fmtRes_2013267130[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013267130[0], NTI33554449)]);
        Temporary1 = 0;
        break;
      }
      result_2013267121 = Temporary1;
    }
    

  return result_2013267121;

}

function HEX3CHEX3DHEX25_33555522(x_33555523, y_33555524) {
  var result_33555525 = false;

    result_33555525 = ((x_33555523 >>> 0) <= (y_33555524 >>> 0));

  return result_33555525;

}

function add_788529670(s_788529671, s_788529671_Idx, c_788529672) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

    var pos_788529673 = (s_788529671[s_788529671_Idx]).length;
    var iHEX60gensym58_788529675 = c_788529672;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 127)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary1 = chckRange(addInt(pos_788529673, 1), 0, 2147483647), Temporary1)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary1; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary1; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(iHEX60gensym58_788529675, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2047)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary2 = chckRange(addInt(pos_788529673, 2), 0, 2147483647), Temporary2)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary2; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary2; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 6) | 192), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 65535)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary3 = chckRange(addInt(pos_788529673, 3), 0, 2147483647), Temporary3)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary3; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary3; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 12) | 224), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2097151)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary4 = chckRange(addInt(pos_788529673, 4), 0, 2147483647), Temporary4)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary4; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary4; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 18) | 240), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 67108863)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary5 = chckRange(addInt(pos_788529673, 5), 0, 2147483647), Temporary5)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary5; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary5; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 24) | 248), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym58_788529675, 2147483647)) {
    if (s_788529671[s_788529671_Idx].length < (Temporary6 = chckRange(addInt(pos_788529673, 6), 0, 2147483647), Temporary6)) { for (var i = s_788529671[s_788529671_Idx].length; i < Temporary6; ++i) s_788529671[s_788529671_Idx].push(0); }
         else {s_788529671[s_788529671_Idx].length = Temporary6; };
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 0), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 >> 30) | 252), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 1), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 24) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 2), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 18) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 3), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 12) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 4), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange((((iHEX60gensym58_788529675 >> 6) & 63) | 128), 0, 255);
    s_788529671[s_788529671_Idx][chckIndx(addInt(pos_788529673, 5), 0, (s_788529671[s_788529671_Idx]).length - 1)] = chckRange(((iHEX60gensym58_788529675 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  
}

function hasJsBigInt_973078571() {
  var result_973078572 = false;

    result_973078572 = typeof BigInt != 'undefined'

  return result_973078572;

}

function hiXorLoJs_1325400149(a_1325400150, b_1325400151) {
  var result_1325400152 = 0n;

    var prod_1325400153 = (a_1325400150 * b_1325400151);
    var mask_1325400154 = BigInt("0xffffffffffffffff");
    result_1325400152 = ((prod_1325400153 >> BigInt("64")) ^ (prod_1325400153 & mask_1325400154));

  return result_1325400152;

}

function hashWangYi1_1325400244(x_1325400246) {
  var result_1325400247 = 0;

    if (hasJsBigInt_973078571()) {
    var P0HEX60gensym6_1325400266 = BigInt("0xa0761d6478bd642f");
    var P1HEX60gensym6_1325400267 = BigInt("0xe7037ed1a0b428db");
    var P58HEX60gensym6_1325400268 = BigInt("0xeb44accab455d16d");
    var resHEX60gensym6_1325400269 = hiXorLoJs_1325400149(hiXorLoJs_1325400149(P0HEX60gensym6_1325400266, (BigInt(x_1325400246) ^ P1HEX60gensym6_1325400267)), P58HEX60gensym6_1325400268);
    result_1325400247 = Number((() => { const i = resHEX60gensym6_1325400269, b = 32; return BigInt.asIntN(b, i) })());
    }
    else {
      result_1325400247 = (x_1325400246 & 4294967295);
    }
    

  return result_1325400247;

}

function hash_1627392949(x_1627392951) {
  var result_1627392952 = 0;

    result_1627392952 = hashWangYi1_1325400244(x_1627392951);

  return result_1627392952;

}

function rawGet_2013266081(t_2013266084, key_2013266085, hc_2013266086, hc_2013266086_Idx) {
  var result_2013266087 = 0;

  BeforeRet: {
    hc_2013266086[hc_2013266086_Idx] = hash_1627392949(key_2013266085);
    if ((hc_2013266086[hc_2013266086_Idx] == 0)) {
    hc_2013266086[hc_2013266086_Idx] = 314159265;
    }
    
    if (((t_2013266084.data).length == 0)) {
    result_2013266087 = -1;
    break BeforeRet;
    }
    
    var h_2013266142 = (hc_2013266086[hc_2013266086_Idx] & (t_2013266084.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0)) break Label2;
          if (((t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field0 == hc_2013266086[hc_2013266086_Idx]) && (t_2013266084.data[chckIndx(h_2013266142, 0, (t_2013266084.data).length - 1)].Field1 == key_2013266085))) {
          result_2013266087 = h_2013266142;
          break BeforeRet;
          }
          
          h_2013266142 = nextTry_1308622883(h_2013266142, (t_2013266084.data).length - 1);
        }
    };
    result_2013266087 = subInt(-1, h_2013266142);
  };

  return result_2013266087;

}

function hasKey_2013266074(t_2013266077, key_2013266078) {
  var result_2013266079 = false;

    var hc_2013266080 = [0];
    result_2013266079 = (0 <= rawGet_2013266081(t_2013266077, key_2013266078, hc_2013266080, 0));

  return result_2013266079;

}

function contains_2013266068(t_2013266071, key_2013266072) {
  var result_2013266073 = false;

  BeforeRet: {
    result_2013266073 = hasKey_2013266074(t_2013266071, key_2013266072);
    break BeforeRet;
  };

  return result_2013266073;

}

function HEX21HEX26_1325400067(h_1325400068, val_1325400069) {
  var result_1325400070 = 0;

    var h_1325400071 = (h_1325400068 >>> 0);
    var val_1325400072 = (val_1325400069 >>> 0);
    var res_1325400073 = ((h_1325400071 + val_1325400072) >>> 0);
    res_1325400073 = ((res_1325400073 + (res_1325400073 << 10)) >>> 0);
    res_1325400073 = (res_1325400073 ^ (res_1325400073 >>> 6));
    result_1325400070 = (res_1325400073 | 0);

  return result_1325400070;

}

function hash_2013266554(x_2013266556) {
  var result_2013266557 = 0;

    result_2013266557 = hashWangYi1_1325400244(x_2013266556);

  return result_2013266557;

}

function HEX21HEX24_1325400082(h_1325400083) {
  var result_1325400084 = 0;

    var h_1325400085 = (h_1325400083 >>> 0);
    var res_1325400090 = ((h_1325400085 + (h_1325400085 << 3)) >>> 0);
    res_1325400090 = (res_1325400090 ^ (res_1325400090 >>> 11));
    res_1325400090 = ((res_1325400090 + (res_1325400090 << 15)) >>> 0);
    result_1325400084 = (res_1325400090 | 0);

  return result_1325400084;

}

function hash_2013266518(x_2013266520) {
  var result_2013266521 = 0;

    Label1: {
      var it_2013266553 = 0;
      var i_2801804084 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804084 <= 3)) break Label3;
            if ((x_2013266520[chckRange(i_2801804084, 0, 3)] != undefined)) {
            it_2013266553 = chckRange(i_2801804084, 0, 3);
            result_2013266521 = HEX21HEX26_1325400067(result_2013266521, hash_2013266554(it_2013266553));
            }
            
            i_2801804084 = addInt(i_2801804084, 1);
          }
      };
    };
    result_2013266521 = HEX21HEX24_1325400082(result_2013266521);

  return result_2013266521;

}

function rawGet_2013266511(t_2013266514, key_2013266515, hc_2013266516, hc_2013266516_Idx) {
  var result_2013266517 = 0;

  BeforeRet: {
    hc_2013266516[hc_2013266516_Idx] = hash_2013266518(key_2013266515);
    if ((hc_2013266516[hc_2013266516_Idx] == 0)) {
    hc_2013266516[hc_2013266516_Idx] = 314159265;
    }
    
    if (((t_2013266514.data).length == 0)) {
    result_2013266517 = -1;
    break BeforeRet;
    }
    
    var h_2013266625 = (hc_2013266516[hc_2013266516_Idx] & (t_2013266514.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0)) break Label2;
          if (((t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field0 == hc_2013266516[hc_2013266516_Idx]) && SetEq(t_2013266514.data[chckIndx(h_2013266625, 0, (t_2013266514.data).length - 1)].Field1, key_2013266515))) {
          result_2013266517 = h_2013266625;
          break BeforeRet;
          }
          
          h_2013266625 = nextTry_1308622883(h_2013266625, (t_2013266514.data).length - 1);
        }
    };
    result_2013266517 = subInt(-1, h_2013266625);
  };

  return result_2013266517;

}

function hasKey_2013266504(t_2013266507, key_2013266508) {
  var result_2013266509 = false;

    var hc_2013266510 = [0];
    result_2013266509 = (0 <= rawGet_2013266511(t_2013266507, key_2013266508, hc_2013266510, 0));

  return result_2013266509;

}

function contains_2013266498(t_2013266501, key_2013266502) {
  var result_2013266503 = false;

  BeforeRet: {
    result_2013266503 = hasKey_2013266504(t_2013266501, key_2013266502);
    break BeforeRet;
  };

  return result_2013266503;

}

function HEX24_369098763(x_369098764) {
  var result_369098765 = [[]];

    addInt_301990087(result_369098765, 0, x_369098764);

  return result_369098765[0];

}

function raiseKeyError_2013266443(key_2013266445) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098763(key_2013266445) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266376(t_2013266379, key_2013266380) {
  var result_2013266381 = null;

    var hcHEX60gensym22_2013266382 = [0];
    var indexHEX60gensym22_2013266389 = rawGet_2013266081(t_2013266379, key_2013266380, hcHEX60gensym22_2013266382, 0);
    if ((0 <= indexHEX60gensym22_2013266389)) {
    result_2013266381 = t_2013266379.data[chckIndx(indexHEX60gensym22_2013266389, 0, (t_2013266379.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2013266443(key_2013266380);
    }
    

  return result_2013266381;

}

function addQuoted_2013267039(s_2013267041, s_2013267041_Idx, x_2013267042) {
    s_2013267041[s_2013267041_Idx].push.apply(s_2013267041[s_2013267041_Idx], reprEnum(x_2013267042, NTI2013265949));;

  
}

function collectionToString_2013267024(x_2013267026, prefix_2013267027, separator_2013267028, suffix_2013267029) {
  var result_2013267030 = [[]];

    result_2013267030[0] = nimCopy(null, prefix_2013267027, NTI33554449);
    var firstElement_2013267031 = true;
    Label1: {
      var value_2013267035 = 0;
      var i_2801804087 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804087 <= 3)) break Label3;
            if ((x_2013267026[i_2801804087] != undefined)) {
            value_2013267035 = i_2801804087;
            if (firstElement_2013267031) {
            firstElement_2013267031 = false;
            }
            else {
            result_2013267030[0].push.apply(result_2013267030[0], separator_2013267028);;
            }
            
            addQuoted_2013267039(result_2013267030, 0, value_2013267035);
            }
            
            i_2801804087 += 1;
          }
      };
    };
    result_2013267030[0].push.apply(result_2013267030[0], suffix_2013267029);;

  return result_2013267030[0];

}

function HEX24_2013267020(x_2013267022) {
  var result_2013267023 = [];

    result_2013267023 = nimCopy(null, collectionToString_2013267024(x_2013267022, [123], [44,32], [125]), NTI33554449);

  return result_2013267023;

}

function raiseKeyError_2013266989(key_2013266991) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2013267020(key_2013266991) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2013266922(t_2013266925, key_2013266926) {
  var result_2013266927 = null;
  var result_2013266927_Idx = 0;

    var hcHEX60gensym22_2013266928 = [0];
    var indexHEX60gensym22_2013266935 = rawGet_2013266511(t_2013266925, key_2013266926, hcHEX60gensym22_2013266928, 0);
    if ((0 <= indexHEX60gensym22_2013266935)) {
    result_2013266927 = t_2013266925.data[chckIndx(indexHEX60gensym22_2013266935, 0, (t_2013266925.data).length - 1)]; result_2013266927_Idx = "Field2";
    }
    else {
    raiseKeyError_2013266989(key_2013266926);
    }
    

  return [result_2013266927, result_2013266927_Idx];

}

function mustRehash_2013268533(t_2013268535) {
  var result_2013268536 = false;

    if (!((t_2013268535.counter < (t_2013268535.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013268536 = ((mulInt((t_2013268535.data).length, 2) < mulInt(t_2013268535.counter, 3)) || (subInt((t_2013268535.data).length, t_2013268535.counter) < 4));

  return result_2013268536;

}

function rawInsert_2013268982(t_2013268986, data_2013268987, data_2013268987_Idx, key_2013268988, val_2013268989, hc_2013268990, h_2013268991) {
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1 = nimCopy(data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field1, key_2013268988, NTI2013265950);
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field2 = val_2013268989;
    data_2013268987[data_2013268987_Idx][chckIndx(h_2013268991, 0, (data_2013268987[data_2013268987_Idx]).length - 1)].Field0 = hc_2013268990;

  
}

function enlarge_2013268688(t_2013268691) {
    var n_2013268694 = [];
    n_2013268694 = new Array(chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013268691.data).length, 2), 0, 2147483647) ; ++i) { n_2013268694[i] = {Field0: 0, Field1: {}, Field2: 0}; }    var Temporary1 = t_2013268691.data; t_2013268691.data = n_2013268694; n_2013268694 = Temporary1;    Label2: {
      var i_2013268758 = 0;
      var colontmp__2801804091 = 0;
      colontmp__2801804091 = (n_2013268694).length - 1;
      var res_2801804092 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801804092 <= colontmp__2801804091)) break Label4;
            i_2013268758 = res_2801804092;
            var eh_2013268812 = n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013268812)) {
            var j_2013268816 = (eh_2013268812 & (t_2013268691.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013268691.data[chckIndx(j_2013268816, 0, (t_2013268691.data).length - 1)].Field0)) break Label6;
                  j_2013268816 = nextTry_1308622883(j_2013268816, (t_2013268691.data).length - 1);
                }
            };
            rawInsert_2013268982(t_2013268691, t_2013268691, "data", n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field1, n_2013268694[chckIndx(i_2013268758, 0, (n_2013268694).length - 1)].Field2, eh_2013268812, j_2013268816);
            }
            
            res_2801804092 = addInt(res_2801804092, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013269151(t_2013269154, key_2013269155, hc_2013269156) {
  var result_2013269157 = 0;

  BeforeRet: {
    if (((t_2013269154.data).length == 0)) {
    result_2013269157 = -1;
    break BeforeRet;
    }
    
    var h_2013269208 = (hc_2013269156 & (t_2013269154.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0)) break Label2;
          if (((t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field0 == hc_2013269156) && SetEq(t_2013269154.data[chckIndx(h_2013269208, 0, (t_2013269154.data).length - 1)].Field1, key_2013269155))) {
          result_2013269157 = h_2013269208;
          break BeforeRet;
          }
          
          h_2013269208 = nextTry_1308622883(h_2013269208, (t_2013269154.data).length - 1);
        }
    };
    result_2013269157 = subInt(-1, h_2013269208);
  };

  return result_2013269157;

}

function HEX5BHEX5DHEX3D_2013268360(t_2013268363, key_2013268364, val_2013268365) {
    if (((t_2013268363.data).length == 0)) {
    var correctSizeHEX60gensym32_2013268414 = slotsNeeded_1308622891(32);
    t_2013268363.counter = 0;
    t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym32_2013268414, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }    }
    
    var hc_2013268419 = [0];
    var index_2013268426 = rawGet_2013266511(t_2013268363, key_2013268364, hc_2013268419, 0);
    if ((0 <= index_2013268426)) {
    t_2013268363.data[chckIndx(index_2013268426, 0, (t_2013268363.data).length - 1)].Field2 = val_2013268365;
    }
    else {
      if (((t_2013268363.data).length == 0)) {
      var correctSizeHEX60gensym35_2013268528 = slotsNeeded_1308622891(32);
      t_2013268363.counter = 0;
      t_2013268363.data = new Array(chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym35_2013268528, 0, 2147483647) ; ++i) { t_2013268363.data[i] = {Field0: 0, Field1: {}, Field2: 0}; }      }
      
      if (mustRehash_2013268533(t_2013268363)) {
      enlarge_2013268688(t_2013268363);
      index_2013268426 = rawGetKnownHC_2013269151(t_2013268363, key_2013268364, hc_2013268419[0]);
      }
      
      index_2013268426 = subInt(-1, index_2013268426);
      rawInsert_2013268982(t_2013268363, t_2013268363, "data", key_2013268364, val_2013268365, hc_2013268419[0], index_2013268426);
      t_2013268363.counter = addInt(t_2013268363.counter, 1);
    }
    

  
}

function mustRehash_2013267397(t_2013267399) {
  var result_2013267400 = false;

    if (!((t_2013267399.counter < (t_2013267399.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2013267400 = ((mulInt((t_2013267399.data).length, 2) < mulInt(t_2013267399.counter, 3)) || (subInt((t_2013267399.data).length, t_2013267399.counter) < 4));

  return result_2013267400;

}

function rawInsert_2013267846(t_2013267850, data_2013267851, data_2013267851_Idx, key_2013267852, val_2013267853, hc_2013267854, h_2013267855) {
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field1 = key_2013267852;
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2 = nimCopy(data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field2, val_2013267853, NTI2013265951);
    data_2013267851[data_2013267851_Idx][chckIndx(h_2013267855, 0, (data_2013267851[data_2013267851_Idx]).length - 1)].Field0 = hc_2013267854;

  
}

function enlarge_2013267552(t_2013267555) {
    var n_2013267558 = [];
    n_2013267558 = new Array(chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2013267555.data).length, 2), 0, 2147483647) ; ++i) { n_2013267558[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    var Temporary1 = t_2013267555.data; t_2013267555.data = n_2013267558; n_2013267558 = Temporary1;    Label2: {
      var i_2013267622 = 0;
      var colontmp__2801804097 = 0;
      colontmp__2801804097 = (n_2013267558).length - 1;
      var res_2801804098 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801804098 <= colontmp__2801804097)) break Label4;
            i_2013267622 = res_2801804098;
            var eh_2013267676 = n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field0;
            if (isFilled_1308622880(eh_2013267676)) {
            var j_2013267680 = (eh_2013267676 & (t_2013267555.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2013267555.data[chckIndx(j_2013267680, 0, (t_2013267555.data).length - 1)].Field0)) break Label6;
                  j_2013267680 = nextTry_1308622883(j_2013267680, (t_2013267555.data).length - 1);
                }
            };
            rawInsert_2013267846(t_2013267555, t_2013267555, "data", n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field1, n_2013267558[chckIndx(i_2013267622, 0, (n_2013267558).length - 1)].Field2, eh_2013267676, j_2013267680);
            }
            
            res_2801804098 = addInt(res_2801804098, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2013268024(t_2013268027, key_2013268028, hc_2013268029) {
  var result_2013268030 = 0;

  BeforeRet: {
    if (((t_2013268027.data).length == 0)) {
    result_2013268030 = -1;
    break BeforeRet;
    }
    
    var h_2013268081 = (hc_2013268029 & (t_2013268027.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0)) break Label2;
          if (((t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field0 == hc_2013268029) && (t_2013268027.data[chckIndx(h_2013268081, 0, (t_2013268027.data).length - 1)].Field1 == key_2013268028))) {
          result_2013268030 = h_2013268081;
          break BeforeRet;
          }
          
          h_2013268081 = nextTry_1308622883(h_2013268081, (t_2013268027.data).length - 1);
        }
    };
    result_2013268030 = subInt(-1, h_2013268081);
  };

  return result_2013268030;

}

function HEX5BHEX5DHEX3D_2013267224(t_2013267227, key_2013267228, val_2013267229) {
    if (((t_2013267227.data).length == 0)) {
    var correctSizeHEX60gensym20_2013267278 = slotsNeeded_1308622891(32);
    t_2013267227.counter = 0;
    t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2013267278, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }    }
    
    var hc_2013267283 = [0];
    var index_2013267290 = rawGet_2013266081(t_2013267227, key_2013267228, hc_2013267283, 0);
    if ((0 <= index_2013267290)) {
    t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2 = nimCopy(t_2013267227.data[chckIndx(index_2013267290, 0, (t_2013267227.data).length - 1)].Field2, val_2013267229, NTI2013265951);
    }
    else {
      if (((t_2013267227.data).length == 0)) {
      var correctSizeHEX60gensym23_2013267392 = slotsNeeded_1308622891(32);
      t_2013267227.counter = 0;
      t_2013267227.data = new Array(chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2013267392, 0, 2147483647) ; ++i) { t_2013267227.data[i] = {Field0: 0, Field1: 0, Field2: ({next: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2013267397(t_2013267227)) {
      enlarge_2013267552(t_2013267227);
      index_2013267290 = rawGetKnownHC_2013268024(t_2013267227, key_2013267228, hc_2013267283[0]);
      }
      
      index_2013267290 = subInt(-1, index_2013267290);
      rawInsert_2013267846(t_2013267227, t_2013267227, "data", key_2013267228, val_2013267229, hc_2013267283[0], index_2013267290);
      t_2013267227.counter = addInt(t_2013267227.counter, 1);
    }
    

  
}

function linkState_2013267131(dfa_2013267132, dfa_2013267132_Idx, currentState_2013267133, nextState_2013267134, inputCode_2013267135, mods_2013267136) {
    if (!(contains_2013266068(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135))) {
    HEX5BHEX5DHEX3D_2013267224(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135, {next: ({data: [], counter: 0})});
    }
    
    HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013267132[dfa_2013267132_Idx].states[chckIndx(currentState_2013267133, 0, (dfa_2013267132[dfa_2013267132_Idx].states).length - 1)].inputs, inputCode_2013267135).next, mods_2013267136, nextState_2013267134);

  
}

function createOrUpdateState_2013269393(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, inputCode_2013269396, mods_2013269397, persistent_2013269398) {
    var Temporary1;
    var Temporary2;
    var Temporary3;

  var result_2013269399 = 0;

  BeforeRet: {
    if (contains_2013266068(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396)) {
    if (contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397)) {
    Temporary2 = (Temporary3 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397), Temporary3)[0][Temporary3[1]];
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
      HEX5BHEX5DHEX3D_2013268360(HEX5BHEX5D_2013266376(dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(currentState_2013269395, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].inputs, inputCode_2013269396).next, mods_2013269397, subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1));
    Temporary2 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    Temporary1 = Temporary2;
    }
    else {
      dfa_2013269394[dfa_2013269394_Idx].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    Temporary1 = subInt((dfa_2013269394[dfa_2013269394_Idx].states).length, 1);
    }
    
    var nextState_2013269790 = Temporary1;
    dfa_2013269394[dfa_2013269394_Idx].states[chckIndx(nextState_2013269790, 0, (dfa_2013269394[dfa_2013269394_Idx].states).length - 1)].persistent = persistent_2013269398;
    linkState_2013267131(dfa_2013269394, dfa_2013269394_Idx, currentState_2013269395, nextState_2013269790, inputCode_2013269396, mods_2013269397);
    result_2013269399 = nextState_2013269790;
    break BeforeRet;
  };

  return result_2013269399;

}

function binarySearch_788530217(c_788530218, tab_788530219, len_788530220, stride_788530221) {
  var result_788530222 = 0;

  BeforeRet: {
    var n_788530223 = len_788530220;
    var t_788530224 = 0;
    Label1: {
        Label2: while (true) {
        if (!(1 < n_788530223)) break Label2;
          var m_788530225 = divInt(n_788530223, 2);
          var p_788530226 = addInt(t_788530224, mulInt(m_788530225, stride_788530221));
          if ((((tab_788530219[chckIndx(p_788530226, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218)) {
          t_788530224 = p_788530226;
          n_788530223 = subInt(n_788530223, m_788530225);
          }
          else {
            n_788530223 = m_788530225;
          }
          
        }
    };
    if ((!((n_788530223 == 0)) && (((tab_788530219[chckIndx(t_788530224, 0, (tab_788530219).length - 1)]) | 0) <= c_788530218))) {
    result_788530222 = t_788530224;
    break BeforeRet;
    }
    
    result_788530222 = -1;
    break BeforeRet;
  };

  return result_788530222;

}

function nucisLower(c_788530328) {
  var result_788530329 = false;

  BeforeRet: {
    var c_788530330 = c_788530328;
    var p_788530338 = binarySearch_788530217(c_788530330, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530338) && (((toUpperRanges_788530129[chckIndx(p_788530338, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530330)) && (c_788530330 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530338, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
    p_788530338 = binarySearch_788530217(c_788530330, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530338) && (c_788530330 == ((toUpperSinglets_788530130[chckIndx(p_788530338, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530329 = true;
    break BeforeRet;
    }
    
  };

  return result_788530329;

}

function nuctoLower(c_788530228) {
  var result_788530229 = 0;

  BeforeRet: {
    var c_788530230 = c_788530228;
    var p_788530239 = binarySearch_788530217(c_788530230, toLowerRanges_788530127, 45, 3);
    if ((((0 <= p_788530239) && (((toLowerRanges_788530127[chckIndx(p_788530239, 0, (toLowerRanges_788530127).length - 1)]) | 0) <= c_788530230)) && (c_788530230 <= ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 1), 0, (toLowerRanges_788530127).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerRanges_788530127[chckIndx(addInt(p_788530239, 2), 0, (toLowerRanges_788530127).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530239 = binarySearch_788530217(c_788530230, toLowerSinglets_788530128, 610, 2);
    if (((0 <= p_788530239) && (c_788530230 == ((toLowerSinglets_788530128[chckIndx(p_788530239, 0, (toLowerSinglets_788530128).length - 1)]) | 0)))) {
    result_788530229 = subInt(addInt(c_788530230, ((toLowerSinglets_788530128[chckIndx(addInt(p_788530239, 1), 0, (toLowerSinglets_788530128).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530229 = c_788530230;
    break BeforeRet;
  };

  return result_788530229;

}

function nuctoUpper(c_788530276) {
  var result_788530277 = 0;

  BeforeRet: {
    var c_788530278 = c_788530276;
    var p_788530287 = binarySearch_788530217(c_788530278, toUpperRanges_788530129, 46, 3);
    if ((((0 <= p_788530287) && (((toUpperRanges_788530129[chckIndx(p_788530287, 0, (toUpperRanges_788530129).length - 1)]) | 0) <= c_788530278)) && (c_788530278 <= ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 1), 0, (toUpperRanges_788530129).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperRanges_788530129[chckIndx(addInt(p_788530287, 2), 0, (toUpperRanges_788530129).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    p_788530287 = binarySearch_788530217(c_788530278, toUpperSinglets_788530130, 624, 2);
    if (((0 <= p_788530287) && (c_788530278 == ((toUpperSinglets_788530130[chckIndx(p_788530287, 0, (toUpperSinglets_788530130).length - 1)]) | 0)))) {
    result_788530277 = subInt(addInt(c_788530278, ((toUpperSinglets_788530130[chckIndx(addInt(p_788530287, 1), 0, (toUpperSinglets_788530130).length - 1)]) | 0)), 500);
    break BeforeRet;
    }
    
    result_788530277 = c_788530278;
    break BeforeRet;
  };

  return result_788530277;

}

function handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, index_2013269804, currentState_2013269805, defaultState_2013269806) {
              var Temporary5;
              var Temporary6;
              var Temporary7;
                var Temporary8;
    var Temporary12;

  BeforeRet: {
    var state_2013269813 = 0;
    var mods_2013269814 = nimCopy(null, ConstSet9, NTI2013265950);
    var specialKey_2013269815 = [[]];
    if (((input_2013269802).length <= index_2013269804)) {
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].isTerminal = true;
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].function = nimCopy(null, function_2013269803, NTI33554449);
    dfa_2013269801[dfa_2013269801_Idx].states[chckIndx(currentState_2013269805, 0, (dfa_2013269801[dfa_2013269801_Idx].states).length - 1)].nextState = defaultState_2013269806;
    break BeforeRet;
    }
    
    var inputCode_2013269819 = 0;
    var persistent_2013269820 = false;
    var nextIndex_2013269821 = index_2013269804;
    Label1: {
      var i_2013269829 = 0;
      var colontmp__2801804072 = 0;
      colontmp__2801804072 = (input_2013269802).length;
      var i_2801804073 = index_2013269804;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804073 < colontmp__2801804072)) break Label3;
            i_2013269829 = i_2801804073;
            Label4: {
              var rune_2013269830 = input_2013269802[chckIndx(i_2013269829, 0, (input_2013269802).length - 1)];
              if (isAscii_2013266003(rune_2013269830)) {
              Temporary5 = chckRange(rune_2013269830, 0, 255);
              }
              else {
              Temporary5 = 0;
              }
              
              var ascii_2013269831 = Temporary5;
              if (!((0 < i_2013269829) && isAscii_2013266003(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)]))) Temporary6 = false; else {                Temporary6 = (chckRange(input_2013269802[chckIndx(subInt(i_2013269829, 1), 0, (input_2013269802).length - 1)], 0, 255) == 92);              }              var isEscaped_2013269832 = Temporary6;
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 92))) {
              break Label4;
              }
              
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 60))) {
              state_2013269813 = 1;
              Temporary7 = 0;
              }
              else {
              if ((!(isEscaped_2013269832) && (ascii_2013269831 == 62))) {
              if (!((state_2013269813 == 1))) {
              log_1174405220(logger_704643272[0], 5, [[69,114,114,111,114,58,32,62,32,119,105,116,104,111,117,116,32,60]]);
              break BeforeRet;
              }
              
              var inputCode_2013269838 = getInputCodeFromSpecialKey_2013267119(specialKey_2013269815[0]);
              state_2013269813 = 0;
              specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
              Temporary7 = inputCode_2013269838;
              }
              else {
                if ((state_2013269813 == 1)) {
                if ((!(isEscaped_2013269832) && (ascii_2013269831 == 45))) {
                mods_2013269814 = nimCopy(mods_2013269814, ConstSet10, NTI2013265950);
                Label9: {
                  var m_2013269843 = 0;
                  var i_2801804069 = 0;
                  var L_2801804070 = (specialKey_2013269815[0]).length;
                  Label10: {
                      Label11: while (true) {
                      if (!(i_2801804069 < L_2801804070)) break Label11;
                        m_2013269843 = specialKey_2013269815[0][chckIndx(i_2801804069, 0, (specialKey_2013269815[0]).length - 1)];
                        switch (m_2013269843) {
                        case 67:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet11), NTI2013265950);
                          break;
                        case 83:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet12), NTI2013265950);
                          break;
                        case 65:
                          mods_2013269814 = nimCopy(mods_2013269814, SetPlus(mods_2013269814, ConstSet13), NTI2013265950);
                          break;
                        case 42:
                          persistent_2013269820 = true;
                          break;
                        default: 
                          var fmtRes_2013269861 = mnewString(0);
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [73,110,118,97,108,105,100,32,109,111,100,105,102,105,101,114,32,39]);;
                          addChar(fmtRes_2013269861, m_2013269843);;
                          fmtRes_2013269861.push.apply(fmtRes_2013269861, [39]);;
                          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269861, NTI33554449)]);
                          break;
                        }
                        i_2801804069 = addInt(i_2801804069, 1);
                        if (!(((specialKey_2013269815[0]).length == L_2801804070))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                specialKey_2013269815[0] = nimCopy(null, [], NTI33554449);
                }
                else {
                add_788529670(specialKey_2013269815, 0, rune_2013269830);
                }
                
                Temporary8 = 0;
                }
                else {
                  mods_2013269814 = nimCopy(mods_2013269814, ConstSet14, NTI2013265950);
                Temporary8 = rune_2013269830;
                }
                
              Temporary7 = Temporary8;
              }
              }
              inputCode_2013269819 = Temporary7;
              if (!((inputCode_2013269819 == 0))) {
              nextIndex_2013269821 = addInt(i_2013269829, 1);
              break Label1;
              }
              
            };
            i_2801804073 = addInt(i_2801804073, 1);
          }
      };
    };
    if ((inputCode_2013269819 == 0)) {
    var fmtRes_2013269866 = mnewString(0);
    fmtRes_2013269866.push.apply(fmtRes_2013269866, [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,105,110,112,117,116]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2013269866, NTI33554449)]);
    break BeforeRet;
    }
    
    var nextState_2013269867 = createOrUpdateState_2013269393(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, inputCode_2013269819, mods_2013269814, persistent_2013269820);
    if (((0 < inputCode_2013269819) && (SetEq(mods_2013269814, ConstSet15) || SetEq(mods_2013269814, ConstSet16)))) {
    var rune_2013269876 = chckRange(inputCode_2013269819, -2147483648, 2147483647);
    var bIsLower_2013269877 = nucisLower(rune_2013269876);
    if (!(bIsLower_2013269877)) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoLower(rune_2013269876), SetPlus(mods_2013269814, ConstSet17));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, inputCode_2013269819, SetPlus(mods_2013269814, ConstSet18));
    }
    
    if ((bIsLower_2013269877 && (mods_2013269814[1] != undefined))) {
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), SetMinus(mods_2013269814, ConstSet19));
    linkState_2013267131(dfa_2013269801, dfa_2013269801_Idx, currentState_2013269805, nextState_2013269867, nuctoUpper(rune_2013269876), mods_2013269814);
    }
    
    }
    
    if (persistent_2013269820) {
    Temporary12 = nextState_2013269867;
    }
    else {
    Temporary12 = defaultState_2013269806;
    }
    
    var nextDefaultState_2013269895 = Temporary12;
    handleNextInput_2013269800(dfa_2013269801, dfa_2013269801_Idx, input_2013269802, function_2013269803, nextIndex_2013269821, nextState_2013269867, nextDefaultState_2013269895);
  };

  
}

function buildDFA_2013269905(commands_2013269906) {
  var result_2013269907 = [null];

    result_2013269907[0] = ({persistentState: 0, states: []});
    result_2013269907[0].states.push({isTerminal: false, nextState: 0, persistent: false, function: [], inputs: ({data: [], counter: 0})});;
    var currentState_2013269915 = 0;
    Label1: {
      var command_2013269938 = {Field0: [], Field1: []};
      var i_2801804063 = 0;
      var L_2801804064 = (commands_2013269906).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804063 < L_2801804064)) break Label3;
            command_2013269938 = commands_2013269906[chckIndx(i_2801804063, 0, (commands_2013269906).length - 1)];
            currentState_2013269915 = 0;
            var input_2013269939 = nimCopy(null, command_2013269938["Field0"], NTI33554449);
            var function_2013269940 = nimCopy(null, command_2013269938["Field1"], NTI33554449);
            if ((0 < (input_2013269939).length)) {
            handleNextInput_2013269800(result_2013269907, 0, toRunes_788536583(input_2013269939), function_2013269940, 0, 0, 0);
            }
            
            i_2801804063 = addInt(i_2801804063, 1);
            if (!(((commands_2013269906).length == L_2801804064))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2013269907[0];

}

function len_2046820466(t_2046820469) {
  var result_2046820470 = 0;

    result_2046820470 = t_2046820469.counter;

  return result_2046820470;

}

function buildDFA_2046820415(config_2046820416) {
  var result_2046820417 = null;

  BeforeRet: {
    var resultHEX60gensym2_2046820697 = [];
    Label1: {
      var xHEX60gensym2_2046820698 = {Field0: [], Field1: []};
      var L_2801804055 = len_2046820466(config_2046820416.commands);
      Label2: {
        var h_2801804057 = 0;
        var colontmp__2801804058 = 0;
        colontmp__2801804058 = (config_2046820416.commands.data).length - 1;
        var res_2801804059 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2801804059 <= colontmp__2801804058)) break Label4;
              h_2801804057 = res_2801804059;
              if (isFilled_1308622880(config_2046820416.commands.data[chckIndx(h_2801804057, 0, (config_2046820416.commands.data).length - 1)].Field0)) {
              xHEX60gensym2_2046820698 = nimCopy(xHEX60gensym2_2046820698, {Field0: nimCopy(null, config_2046820416.commands.data[chckIndx(h_2801804057, 0, (config_2046820416.commands.data).length - 1)].Field1, NTI33554449), Field1: nimCopy(null, config_2046820416.commands.data[chckIndx(h_2801804057, 0, (config_2046820416.commands.data).length - 1)].Field2, NTI33554449)}, NTI2046820387);
              var Temporary5 = nimCopy(null, xHEX60gensym2_2046820698, NTI2046820387);
              resultHEX60gensym2_2046820697.push(Temporary5);;
              if (!((len_2046820466(config_2046820416.commands) == L_2801804055))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2801804059 = addInt(res_2801804059, 1);
            }
        };
      };
    };
    result_2046820417 = buildDFA_2013269905(resultHEX60gensym2_2046820697);
    break BeforeRet;
  };

  return result_2046820417;

}

function invoke_2147483710(event_2147483712) {
    Label1: {
      var h_2147483735 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801804104 = 0;
      var L_2801804105 = (event_2147483712.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804104 < L_2801804105)) break Label3;
            h_2147483735 = event_2147483712.handlers[chckIndx(i_2801804104, 0, (event_2147483712.handlers).length - 1)];
            h_2147483735.Field1();
            i_2801804104 = addInt(i_2801804104, 1);
            if (!(((event_2147483712.handlers).length == L_2801804105))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function markDirty_2147483686(self_2147483687) {
    if (!(self_2147483687.mDirty)) {
    invoke_2147483710(self_2147483687.onMarkedDirty);
    }
    
    self_2147483687.mDirty = true;

  
}

function setMode_2801803857(self_2801803858, mode_2801803859) {
        
function HEX3Aanonymous_2801803885(actionHEX60gensym164HEX60gensym165_2801803886, argHEX60gensym164HEX60gensym165_2801803887) {
          var result_2801803888 = 0;

          BeforeRet: {
            if (handlerHEX60gensym164_2801803873.config.handleActions) {
            var action_2801803889 = nimCopy(null, actionHEX60gensym164HEX60gensym165_2801803886, NTI33554449);
            var arg_2801803890 = nimCopy(null, argHEX60gensym164HEX60gensym165_2801803887, NTI33554449);
            var responseHEX60gensym164HEX60gensym165_2801803891 = handleAction_2801795418(self_2801803858, action_2801803889, arg_2801803890);
            if (handlerHEX60gensym164_2801803873.config.consumeAllActions) {
            result_2801803888 = 3;
            break BeforeRet;
            }
            
            result_2801803888 = responseHEX60gensym164HEX60gensym165_2801803891;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym164_2801803873.config.consumeAllActions) {
            result_2801803888 = 3;
            break BeforeRet;
            }
            else {
              result_2801803888 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2801803888;

        }
        
function HEX3Aanonymous_2801803893(inputHEX60gensym164HEX60gensym166_2801803894) {
          var result_2801803895 = 0;

          BeforeRet: {
            if (handlerHEX60gensym164_2801803873.config.handleInputs) {
            var input_2801803896 = nimCopy(null, inputHEX60gensym164HEX60gensym166_2801803894, NTI33554449);
            result_2801803895 = handleInput_2801795426(self_2801803858, input_2801803896);
            break BeforeRet;
            }
            else {
              result_2801803895 = 1;
              break BeforeRet;
            }
            
          };

          return result_2801803895;

        }

  BeforeRet: {
    if (eqStrings(mode_2801803859, [99,111,109,112,108,101,116,105,111,110])) {
    var fmtRes_2801803864 = [mnewString(0)];
    fmtRes_2801803864[0].push.apply(fmtRes_2801803864[0], [67,97,110,39,116,32,115,101,116,32,109,111,100,101,32,116,111,32,39]);;
    formatValue_721420459(fmtRes_2801803864, 0, mode_2801803859, []);
    fmtRes_2801803864[0].push.apply(fmtRes_2801803864[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801803864[0], NTI33554449)]);
    break BeforeRet;
    }
    
    if (((mode_2801803859).length == 0)) {
    self_2801803858.modeEventHandler = null;
    }
    else {
      var config_2801803865 = getModeConfig_2801803668(self_2801803858, mode_2801803859);
      Label1: {
        var handlerHEX60gensym164_2801803873 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym164_2801803873.config = config_2801803865;
        handlerHEX60gensym164_2801803873.dfaInternal = buildDFA_2046820415(config_2801803865);
        handlerHEX60gensym164_2801803873.handleAction = HEX3Aanonymous_2801803885;
        handlerHEX60gensym164_2801803873.handleInput = HEX3Aanonymous_2801803893;
      };
      self_2801803858.modeEventHandler = handlerHEX60gensym164_2801803873;
    }
    
    self_2801803858.currentMode = nimCopy(null, mode_2801803859, NTI33554449);
    markDirty_2147483686(self_2801803858);
  };

  
}

function setModeJsWrapper_2801803818(self_2801803982, mode_2801803983) {
    setMode_2801803857(self_2801803982, mode_2801803983);

  
}
editor_text_prototype.setMode = function(mode_ /* : string */) { return (setModeJsWrapper_2801803818(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2801804113(self_2801804114) {
  var result_2801804115 = [];

  BeforeRet: {
    result_2801804115 = nimCopy(null, self_2801804114.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2801804115;

}

function modeJsWrapper_2801804109(self_2801804144) {
  var result_2801804145 = [];

    result_2801804145 = nimCopy(null, mode_2801804113(self_2801804144), NTI33554449);

  return result_2801804145;

}
editor_text_prototype.mode = function() { return toJSStr(modeJsWrapper_2801804109(this));};

function getContextWithMode_2801803222(self_2801803223, context_2801803224) {
  var result_2801804173 = [];

  BeforeRet: {
    result_2801804173 = nimCopy(null, (context_2801803224 || []).concat([46] || [],self_2801803223.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2801804173;

}

function getContextWithModeJsWrapper_2801804166(self_2801804203, context_2801804204) {
  var result_2801804205 = [];

    result_2801804205 = nimCopy(null, getContextWithMode_2801803222(self_2801804203, context_2801804204), NTI33554449);

  return result_2801804205;

}
editor_text_prototype.getContextWithMode = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper_2801804166(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function nimIdentNormalize_855638137(s_855638138) {
  var result_855638139 = [];

  BeforeRet: {
    result_855638139 = nimCopy(null, mnewString(chckRange((s_855638138).length, 0, 2147483647)), NTI33554449);
    if (((s_855638138).length == 0)) {
    break BeforeRet;
    }
    
    result_855638139[chckIndx(0, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(0, 0, (s_855638138).length - 1)];
    var j_855638140 = 1;
    Label1: {
      var i_855638145 = 0;
      var colontmp__1811939856 = 0;
      colontmp__1811939856 = subInt((s_855638138).length, 1);
      var res_1811939857 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_1811939857 <= colontmp__1811939856)) break Label3;
            i_855638145 = res_1811939857;
            if ((ConstSet20[s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)]] != undefined)) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = chckRange(addInt(s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)], 32), 0, 255);
            j_855638140 = addInt(j_855638140, 1);
            }
            else {
            if (!((s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)] == 95))) {
            result_855638139[chckIndx(j_855638140, 0, (result_855638139).length - 1)] = s_855638138[chckIndx(i_855638145, 0, (s_855638138).length - 1)];
            j_855638140 = addInt(j_855638140, 1);
            }
            }
            res_1811939857 = addInt(res_1811939857, 1);
          }
      };
    };
    if (!((j_855638140 == (s_855638138).length))) {
    if (result_855638139.length < chckRange(j_855638140, 0, 2147483647)) { for (var i = result_855638139.length; i < chckRange(j_855638140, 0, 2147483647); ++i) result_855638139.push(0); }
         else {result_855638139.length = chckRange(j_855638140, 0, 2147483647); };
    }
    
  };

  return result_855638139;

}

function parseEnum_2801803282(s_2801803284, default_2801803285) {
    var Temporary1;

  var result_2801803286 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2801803284))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      Temporary1 = default_2801803285;
      break;
    }
    result_2801803286 = Temporary1;

  return result_2801803286;

}

function rawGet_1627392619(t_1627392622, key_1627392623, hc_1627392624, hc_1627392624_Idx) {
  var result_1627392625 = 0;

  BeforeRet: {
    hc_1627392624[hc_1627392624_Idx] = hash_1325400491(key_1627392623);
    if ((hc_1627392624[hc_1627392624_Idx] == 0)) {
    hc_1627392624[hc_1627392624_Idx] = 314159265;
    }
    
    if (((t_1627392622.data).length == 0)) {
    result_1627392625 = -1;
    break BeforeRet;
    }
    
    var h_1627392676 = (hc_1627392624[hc_1627392624_Idx] & (t_1627392622.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0)) break Label2;
          if (((t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field0 == hc_1627392624[hc_1627392624_Idx]) && eqStrings(t_1627392622.data[chckIndx(h_1627392676, 0, (t_1627392622.data).length - 1)].Field2, key_1627392623))) {
          result_1627392625 = h_1627392676;
          break BeforeRet;
          }
          
          h_1627392676 = nextTry_1308622883(h_1627392676, (t_1627392622.data).length - 1);
        }
    };
    result_1627392625 = subInt(-1, h_1627392676);
  };

  return result_1627392625;

}

function getOrDefault_1627393397(t_1627393400, key_1627393401) {
  var result_1627393402 = null;

    var hcHEX60gensym59_1627393405 = [0];
    var indexHEX60gensym59_1627393412 = rawGet_1627392619(t_1627393400, key_1627393401, hcHEX60gensym59_1627393405, 0);
    if ((0 <= indexHEX60gensym59_1627393412)) {
    result_1627393402 = t_1627393400.data[chckIndx(indexHEX60gensym59_1627393412, 0, (t_1627393400.data).length - 1)].Field3;
    }
    

  return result_1627393402;

}

function HEX7BHEX7D_1627393316(node_1627393317, keys_1627393318) {
            var Temporary4;

  var result_1627393319 = null;

  BeforeRet: {
    result_1627393319 = node_1627393317;
    Label1: {
      var key_1627393323 = [];
      var i_2801804334 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804334 < (keys_1627393318).length)) break Label3;
            key_1627393323 = keys_1627393318[chckIndx(i_2801804334, 0, (keys_1627393318).length - 1)];
            if (((result_1627393319 == null) || !((result_1627393319.kind == 5)))) {
            result_1627393319 = null;
            break BeforeRet;
            }
            
            var Temporary4 = result_1627393319;
            if (ConstSet21[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
            result_1627393319 = getOrDefault_1627393397(Temporary4.fields, key_1627393323);
            i_2801804334 = addInt(i_2801804334, 1);
          }
      };
    };
  };

  return result_1627393319;

}

function substrEq_855638270(s_855638271, pos_855638272, substr_855638273) {
  var result_855638274 = false;

  BeforeRet: {
    var i_855638275 = 0;
    var length_855638276 = (substr_855638273).length;
    Label1: {
        Label2: while (true) {
        if (!(((i_855638275 < length_855638276) && (addInt(pos_855638272, i_855638275) < (s_855638271).length)) && (s_855638271[chckIndx(addInt(pos_855638272, i_855638275), 0, (s_855638271).length - 1)] == substr_855638273[chckIndx(i_855638275, 0, (substr_855638273).length - 1)]))) break Label2;
          i_855638275 = addInt(i_855638275, 1);
        }
    };
    result_855638274 = (i_855638275 == length_855638276);
    break BeforeRet;
  };

  return result_855638274;

}

function substr_33557821(s_33557822, first_33557823, last_33557824) {
  var result_33557825 = [];

    var first_33557826 = nimMax(first_33557823, 0);
    var L_33557827 = nimMax(addInt(subInt(nimMin(last_33557824, (s_33557822).length - 1), first_33557826), 1), 0);
    result_33557825 = nimCopy(null, mnewString(chckRange(L_33557827, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_33557832 = 0;
      var colontmp__2583691801 = 0;
      colontmp__2583691801 = subInt(L_33557827, 1);
      var res_2583691802 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2583691802 <= colontmp__2583691801)) break Label3;
            i_33557832 = res_2583691802;
            result_33557825[chckIndx(i_33557832, 0, (result_33557825).length - 1)] = s_33557822[chckIndx(addInt(i_33557832, first_33557826), 0, (s_33557822).length - 1)];
            res_2583691802 = addInt(res_2583691802, 1);
          }
      };
    };

  return result_33557825;

}

function nsuSplitString(s_855638588, sep_855638589, maxsplit_855638590) {
  var result_855638591 = [];

    if (!((0 < (sep_855638589).length))) {
    failedAssertImpl_268435515([115,116,114,117,116,105,108,115,46,110,105,109,40,55,54,48,44,32,49,49,41,32,96,115,101,112,46,108,101,110,32,62,32,48,96,32]);
    }
    
    result_855638591 = nimCopy(null, [], NTI855638433);
    Label1: {
      var xHEX60gensym71_855638602 = [];
      var lastHEX60gensym40_2801804340 = 0;
      var splitsHEX60gensym40_2801804341 = maxsplit_855638590;
      Label2: {
          Label3: while (true) {
          if (!(lastHEX60gensym40_2801804340 <= (s_855638588).length)) break Label3;
            var firstHEX60gensym40_2801804343 = lastHEX60gensym40_2801804340;
            Label4: {
                Label5: while (true) {
                if (!((lastHEX60gensym40_2801804340 < (s_855638588).length) && !(substrEq_855638270(s_855638588, lastHEX60gensym40_2801804340, sep_855638589)))) break Label5;
                  lastHEX60gensym40_2801804340 = addInt(lastHEX60gensym40_2801804340, 1);
                }
            };
            if ((splitsHEX60gensym40_2801804341 == 0)) {
            lastHEX60gensym40_2801804340 = (s_855638588).length;
            }
            
            xHEX60gensym71_855638602 = substr_33557821(s_855638588, firstHEX60gensym40_2801804343, subInt(lastHEX60gensym40_2801804340, 1));
            var Temporary6 = nimCopy(null, xHEX60gensym71_855638602, NTI33554449);
            result_855638591.push(Temporary6);;
            if ((splitsHEX60gensym40_2801804341 == 0)) {
            break Label2;
            }
            
            splitsHEX60gensym40_2801804341 = subInt(splitsHEX60gensym40_2801804341, 1);
            lastHEX60gensym40_2801804340 = addInt(lastHEX60gensym40_2801804340, (sep_855638589).length);
          }
      };
    };

  return result_855638591;

}

function getStr_1627390106(n_1627390107, default_1627390108) {
      var Temporary1;

  var result_1627390109 = [];

  BeforeRet: {
    if (((n_1627390107 == null) || !((n_1627390107.kind == 4)))) {
    result_1627390109 = nimCopy(null, default_1627390108, NTI33554449);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390107;
      if (ConstSet22[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390109 = nimCopy(null, Temporary1.str, NTI33554449);
      break BeforeRet;
    }
    
  };

  return result_1627390109;

}

function getOption_2801803256(editor_2801803258, path_2801803259, default_2801803260) {
  var result_2801803266 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2801803258 == null)) {
      result_2801803266 = default_2801803260;
      break BeforeRet;
      }
      
      var nodeHEX60gensym142_2801803278 = HEX7BHEX7D_1627393316(editor_2801803258.options, nsuSplitString(path_2801803259, [46], -1));
      if ((nodeHEX60gensym142_2801803278 == null)) {
      result_2801803266 = default_2801803260;
      break BeforeRet;
      }
      
    };
    result_2801803266 = parseEnum_2801803282(getStr_1627390106(nodeHEX60gensym142_2801803278, []), default_2801803260);
    break BeforeRet;
  };

  return result_2801803266;

}

function selection_2801795568(self_2801795569) {
  var result_2801795570 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801795570 = nimCopy(result_2801795570, self_2801795569.selectionsInternal[chckIndx((self_2801795569.selectionsInternal).length - 1, 0, (self_2801795569.selectionsInternal).length - 1)], NTI2231369739);

  return result_2801795570;

}

function getCursor_2801803252(self_2801803253, cursor_2801803254) {
  var result_2801803255 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (cursor_2801803254) {
    case 0:
      var configCursor_2801803316 = getOption_2801803256(self_2801803253.editor, getContextWithMode_2801803222(self_2801803253, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      result_2801803255 = nimCopy(result_2801803255, getCursor_2801803252(self_2801803253, configCursor_2801803316), NTI2231369737);
      break BeforeRet;
      break;
    case 1:
    case 3:
    case 4:
      result_2801803255 = nimCopy(result_2801803255, selection_2801795568(self_2801803253).Field1, NTI2231369737);
      break BeforeRet;
      break;
    case 2:
      result_2801803255 = nimCopy(result_2801803255, selection_2801795568(self_2801803253).Field0, NTI2231369737);
      break BeforeRet;
      break;
    }
  };

  return result_2801803255;

}

function updateTargetColumn_2801804235(self_2801804236, cursor_2801804237) {
    self_2801804236.targetColumn = getCursor_2801803252(self_2801804236, cursor_2801804237).Field1;

  
}

function updateTargetColumnJsWrapper_2801804231(self_2801804266, cursor_2801804267) {
    updateTargetColumn_2801804235(self_2801804266, cursor_2801804267);

  
}
editor_text_prototype.updateTargetColumn = function(cursor_ /* : SelectionCursor */) { return (updateTargetColumnJsWrapper_2801804231(this, cursor_));};

function HEX3DHEX3D_2231369801(x_2231369803, y_2231369804) {
  var result_2231369805 = false;

  BeforeRet: {
    if (!((x_2231369803["Field0"] == y_2231369804["Field0"]))) {
    result_2231369805 = false;
    break BeforeRet;
    }
    
    if (!((x_2231369803["Field1"] == y_2231369804["Field1"]))) {
    result_2231369805 = false;
    break BeforeRet;
    }
    
    result_2231369805 = true;
    break BeforeRet;
  };

  return result_2231369805;

}

function HEX3DHEX3D_2231369791(x_2231369793, y_2231369794) {
  var result_2231369795 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2231369801(x_2231369793["Field0"], y_2231369794["Field0"]))) {
    result_2231369795 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2231369801(x_2231369793["Field1"], y_2231369794["Field1"]))) {
    result_2231369795 = false;
    break BeforeRet;
    }
    
    result_2231369795 = true;
    break BeforeRet;
  };

  return result_2231369795;

}

function newSeq_2801795608(len_2801795610) {
  var result_2801795611 = [];

    result_2801795611 = new Array(len_2801795610); for (var i = 0 ; i < len_2801795610 ; ++i) { result_2801795611[i] = []; }
  return result_2801795611;

}

function expandIfNeeded_2801795598(deq_2801795600) {
              var Temporary5;
    var Temporary6;

    if ((deq_2801795600.mask == 0)) {
    var correctSizeHEX60gensym9_2801795602 = nextPowerOfTwo_872415437(4);
    deq_2801795600.mask = subInt(correctSizeHEX60gensym9_2801795602, 1);
    deq_2801795600.data = new Array(chckRange(correctSizeHEX60gensym9_2801795602, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym9_2801795602, 0, 2147483647) ; ++i) { deq_2801795600.data[i] = []; }    }
    
    var cap_2801795607 = addInt(deq_2801795600.mask, 1);
    if ((cap_2801795607 <= deq_2801795600.count)) {
    var n_2801795625 = newSeq_2801795608(chckRange(mulInt(cap_2801795607, 2), 0, 2147483647));
    var i_2801795626 = 0;
    Label1: {
      var x_2801795636 = null;
      var x_2801795636_Idx = 0;
      var i_2801804400 = deq_2801795600.head;
      Label2: {
        var c_2801804402 = 0;
        var i_2801804403 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2801804403 < deq_2801795600.count)) break Label4;
              c_2801804402 = i_2801804403;
              x_2801795636 = deq_2801795600.data; x_2801795636_Idx = chckIndx(i_2801804400, 0, (deq_2801795600.data).length - 1);
              Temporary5 = x_2801795636[x_2801795636_Idx];
              x_2801795636[x_2801795636_Idx] = genericReset(x_2801795636[x_2801795636_Idx], NTI2231369747);
              n_2801795625[chckIndx(i_2801795626, 0, (n_2801795625).length - 1)] = nimCopy(null, Temporary5, NTI2231369747);
              i_2801795626 = addInt(i_2801795626, 1);
              i_2801804400 = (addInt(i_2801804400, 1) & deq_2801795600.mask);
              i_2801804403 = addInt(i_2801804403, 1);
            }
        };
      };
    };
    Temporary6 = n_2801795625;
    n_2801795625 = genericReset(n_2801795625, NTI2801795458);
    deq_2801795600.data = nimCopy(null, Temporary6, NTI2801795458);
    deq_2801795600.mask = subInt(mulInt(cap_2801795607, 2), 1);
    deq_2801795600.tail = deq_2801795600.count;
    deq_2801795600.head = 0;
    }
    

  
}

function addLast_2801795589(deq_2801795591, item_2801795592) {
    expandIfNeeded_2801795598(deq_2801795591);
    deq_2801795591.count = addInt(deq_2801795591.count, 1);
    deq_2801795591.data[chckIndx(deq_2801795591.tail, 0, (deq_2801795591.data).length - 1)] = nimCopy(null, item_2801795592, NTI2231369747);
    deq_2801795591.tail = (addInt(deq_2801795591.tail, 1) & deq_2801795591.mask);

  
}

function len_2801795728(deq_2801795730) {
  var result_2801795731 = 0;

    result_2801795731 = deq_2801795730.count;

  return result_2801795731;

}

function popFirst_2801795789(deq_2801795791) {
    var Temporary1;

  var result_2801795792 = [];

    if ((deq_2801795791.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2801795791.count = subInt(deq_2801795791.count, 1);
    Temporary1 = deq_2801795791.data[chckIndx(deq_2801795791.head, 0, (deq_2801795791.data).length - 1)];
    deq_2801795791.data[chckIndx(deq_2801795791.head, 0, (deq_2801795791.data).length - 1)] = genericReset(deq_2801795791.data[chckIndx(deq_2801795791.head, 0, (deq_2801795791.data).length - 1)], NTI2231369747);
    result_2801795792 = nimCopy(null, Temporary1, NTI2231369747);
    deq_2801795791.head = (addInt(deq_2801795791.head, 1) & deq_2801795791.mask);

  return result_2801795792;

}

function clamp_1660945119(x_1660945121, a_1660945122, b_1660945123) {
  var result_1660945124 = 0;

  BeforeRet: {
    if ((x_1660945121 < a_1660945122)) {
    result_1660945124 = a_1660945122;
    break BeforeRet;
    }
    
    if ((b_1660945123 < x_1660945121)) {
    result_1660945124 = b_1660945123;
    break BeforeRet;
    }
    
    result_1660945124 = x_1660945121;
    break BeforeRet;
  };

  return result_1660945124;

}

function lineLength_2801795436(self_2801795437, line_2801795438) {
  var result_2801795439 = 0;

  BeforeRet: {
    if ((line_2801795438 < (self_2801795437.lines).length)) {
    result_2801795439 = (self_2801795437.lines[chckIndx(line_2801795438, 0, (self_2801795437.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2801795439 = 0;
    break BeforeRet;
  };

  return result_2801795439;

}

function clampCursor_2801795450(self_2801795451, cursor_2801795452) {
  var result_2801795453 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2801795454 = nimCopy(null, cursor_2801795452, NTI2231369737);
    if (((self_2801795451.lines).length == 0)) {
    var colontmp__2801804407 = 0;
    var colontmp__2801804408 = 0;
    result_2801795453 = nimCopy(result_2801795453, {Field0: colontmp__2801804407, Field1: colontmp__2801804408}, NTI2231369737);
    break BeforeRet;
    }
    
    cursor_2801795454.Field0 = clamp_1660945119(cursor_2801795454.Field0, 0, subInt((self_2801795451.lines).length, 1));
    cursor_2801795454.Field1 = clamp_1660945119(cursor_2801795454.Field1, 0, lineLength_2801795436(self_2801795451, cursor_2801795454.Field0));
    result_2801795453 = nimCopy(result_2801795453, cursor_2801795454, NTI2231369737);
    break BeforeRet;
  };

  return result_2801795453;

}

function clampSelection_2801795475(self_2801795476, selection_2801795477) {
  var result_2801795478 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801804405 = clampCursor_2801795450(self_2801795476, selection_2801795477.Field0);
    var colontmp__2801804406 = clampCursor_2801795450(self_2801795476, selection_2801795477.Field1);
    result_2801795478 = nimCopy(result_2801795478, {Field0: nimCopy(null, colontmp__2801804405, NTI2231369737), Field1: nimCopy(null, colontmp__2801804406, NTI2231369737)}, NTI2231369739);

  return result_2801795478;

}

function clampSelection_2801795479(self_2801795480, selection_2801795481) {
  var result_2801795482 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801795482 = nimCopy(result_2801795482, clampSelection_2801795475(self_2801795480.document, selection_2801795481), NTI2231369739);

  return result_2801795482;

}

function selectionHEX3D_2801795574(self_2801795575, selection_2801795576) {
  BeforeRet: {
    if ((((self_2801795575.selectionsInternal).length == 1) && HEX3DHEX3D_2231369791(self_2801795575.selectionsInternal[chckIndx(0, 0, (self_2801795575.selectionsInternal).length - 1)], selection_2801795576))) {
    break BeforeRet;
    }
    
    addLast_2801795589(self_2801795575.selectionHistory, self_2801795575.selectionsInternal);
    if ((100 < len_2801795728(self_2801795575.selectionHistory))) {
    var _ = popFirst_2801795789(self_2801795575.selectionHistory);
    }
    
    self_2801795575.selectionsInternal = nimCopy(null, [nimCopy(null, clampSelection_2801795479(self_2801795575, selection_2801795576), NTI2231369739)], NTI2801795573);
    markDirty_2147483686(self_2801795575);
  };

  
}

function invertSelection_2801804352(self_2801804353) {
    selectionHEX3D_2801795574(self_2801804353, {Field0: nimCopy(null, selection_2801795568(self_2801804353).Field1, NTI2231369737), Field1: nimCopy(null, selection_2801795568(self_2801804353).Field0, NTI2231369737)});

  
}

function invertSelectionJsWrapper_2801804348(self_2801804381) {
    invertSelection_2801804352(self_2801804381);

  
}
editor_text_prototype.invertSelection = function() { return (invertSelectionJsWrapper_2801804348(this));};

function any_2231370161(s_2231370163, pred_2231370165) {
  var result_2231370166 = false;

  BeforeRet: {
    Label1: {
      var i_2231370179 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801804854 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804854 < (s_2231370163).length)) break Label3;
            i_2231370179 = s_2231370163[chckIndx(i_2801804854, 0, (s_2231370163).length - 1)];
            if (pred_2231370165(i_2231370179)) {
            result_2231370166 = true;
            break BeforeRet;
            }
            
            i_2801804854 = addInt(i_2801804854, 1);
          }
      };
    };
    result_2231370166 = false;
  };

  return result_2231370166;

}

function cmp_33557727(x_33557729, y_33557730) {
  var result_33557731 = 0;

  BeforeRet: {
    if ((x_33557729 == y_33557730)) {
    result_33557731 = 0;
    break BeforeRet;
    }
    
    if ((x_33557729 < y_33557730)) {
    result_33557731 = -1;
    break BeforeRet;
    }
    
    result_33557731 = 1;
    break BeforeRet;
  };

  return result_33557731;

}

function HEX3CHEX3D_2231370071(x_2231370073, y_2231370074) {
  var result_2231370075 = false;

  BeforeRet: {
    var c_2231370085 = cmp_33557727(x_2231370073["Field0"], y_2231370074["Field0"]);
    if ((c_2231370085 < 0)) {
    result_2231370075 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231370085)) {
    result_2231370075 = false;
    break BeforeRet;
    }
    
    var c_2231370090 = cmp_33557727(x_2231370073["Field1"], y_2231370074["Field1"]);
    if ((c_2231370090 < 0)) {
    result_2231370075 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231370090)) {
    result_2231370075 = false;
    break BeforeRet;
    }
    
    result_2231370075 = true;
    break BeforeRet;
  };

  return result_2231370075;

}

function contains_2231370119(selection_2231370120, other_2231370121) {
  var result_2231370122 = false;

    result_2231370122 = (HEX3CHEX3D_2231370071(selection_2231370120.Field0, other_2231370121.Field0) && HEX3CHEX3D_2231370071(other_2231370121.Field1, selection_2231370120.Field1));

  return result_2231370122;

}

function contains_2231370198(self_2231370199, other_2231370200) {
    other_2231370200 = nimCopy(null, other_2231370200, NTI2231369739);
    
function HEX3Aanonymous_2231370202(s_2231370205) {
      var result_2231370208 = false;

        result_2231370208 = contains_2231370119(s_2231370205, other_2231370200);

      return result_2231370208;

    }

  var result_2231370201 = false;

    result_2231370201 = any_2231370161(self_2231370199, HEX3Aanonymous_2231370202);

  return result_2231370201;

}

function deduplicate_2801795520(s_2801795522, isSorted_2801795523) {
  var result_2801795524 = [];

    result_2801795524 = nimCopy(null, [], NTI2801795404);
    if ((0 < (s_2801795522).length)) {
    if (isSorted_2801795523) {
    var prev_2801795532 = nimCopy(null, s_2801795522[chckIndx(0, 0, (s_2801795522).length - 1)], NTI2231369739);
    var Temporary1 = nimCopy(null, prev_2801795532, NTI2231369739);
    result_2801795524.push(Temporary1);;
    Label2: {
      var i_2801795544 = 0;
      var colontmp__2801804846 = 0;
      colontmp__2801804846 = (s_2801795522).length - 1;
      var res_2801804847 = 1;
      Label3: {
          Label4: while (true) {
          if (!(res_2801804847 <= colontmp__2801804846)) break Label4;
            i_2801795544 = res_2801804847;
            if (!(HEX3DHEX3D_2231369791(s_2801795522[chckIndx(i_2801795544, 0, (s_2801795522).length - 1)], prev_2801795532))) {
            prev_2801795532 = nimCopy(prev_2801795532, s_2801795522[chckIndx(i_2801795544, 0, (s_2801795522).length - 1)], NTI2231369739);
            var Temporary5 = nimCopy(null, prev_2801795532, NTI2231369739);
            result_2801795524.push(Temporary5);;
            }
            
            res_2801804847 = addInt(res_2801804847, 1);
          }
      };
    };
    }
    else {
      Label6: {
        var itm_2801795556 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
        var i_2801804851 = 0;
        Label7: {
            Label8: while (true) {
            if (!(i_2801804851 < (s_2801795522).length)) break Label8;
              itm_2801795556 = s_2801795522[chckIndx(i_2801804851, 0, (s_2801795522).length - 1)];
              if (!(contains_2231370198(result_2801795524, itm_2801795556))) {
              var Temporary9 = nimCopy(null, itm_2801795556, NTI2231369739);
              result_2801795524.push(Temporary9);;
              }
              
              i_2801804851 = addInt(i_2801804851, 1);
            }
        };
      };
    }
    
    }
    

  return result_2801795524;

}

function map_2801795498(s_2801795501, op_2801795503) {
  var result_2801795504 = [];

    result_2801795504 = new Array(chckRange((s_2801795501).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2801795501).length, 0, 2147483647) ; ++i) { result_2801795504[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801795519 = 0;
      var colontmp__2801804857 = 0;
      colontmp__2801804857 = (s_2801795501).length;
      var i_2801804858 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804858 < colontmp__2801804857)) break Label3;
            i_2801795519 = i_2801804858;
            result_2801795504[chckIndx(i_2801795519, 0, (result_2801795504).length - 1)] = nimCopy(result_2801795504[chckIndx(i_2801795519, 0, (result_2801795504).length - 1)], op_2801795503(s_2801795501[chckIndx(i_2801795519, 0, (s_2801795501).length - 1)]), NTI2231369739);
            i_2801804858 = addInt(i_2801804858, 1);
          }
      };
    };

  return result_2801795504;

}

function clampAndMergeSelections_2801795483(self_2801795484, selections_2801795485) {
    
function HEX3Aanonymous_2801795487(s_2801795494) {
      var result_2801795497 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801795497 = nimCopy(result_2801795497, clampSelection_2801795475(self_2801795484, s_2801795494), NTI2231369739);

      return result_2801795497;

    }

  var result_2801795486 = [];

    result_2801795486 = nimCopy(null, deduplicate_2801795520(map_2801795498(selections_2801795485, HEX3Aanonymous_2801795487), false), NTI2801795393);

  return result_2801795486;

}

function HEX40_2801799177(a_2801799179) {
  var result_2801799180 = [];

    result_2801799180 = new Array(chckRange((a_2801799179).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((a_2801799179).length, 0, 2147483647) ; ++i) { result_2801799180[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801799195 = 0;
      var colontmp__2801804861 = 0;
      colontmp__2801804861 = subInt((a_2801799179).length, 1);
      var res_2801804862 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801804862 <= colontmp__2801804861)) break Label3;
            i_2801799195 = res_2801804862;
            result_2801799180[chckIndx(i_2801799195, 0, (result_2801799180).length - 1)] = nimCopy(result_2801799180[chckIndx(i_2801799195, 0, (result_2801799180).length - 1)], a_2801799179[chckIndx(i_2801799195, 0, (a_2801799179).length - 1)], NTI2231369739);
            res_2801804862 = addInt(res_2801804862, 1);
          }
      };
    };

  return result_2801799180;

}

function byteOffset_2801799157(self_2801799158, cursor_2801799159) {
  var result_2801799160 = 0;

    result_2801799160 = cursor_2801799159.Field1;
    Label1: {
      var i_2801799165 = 0;
      var i_2801804865 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804865 < cursor_2801799159.Field0)) break Label3;
            i_2801799165 = i_2801804865;
            result_2801799160 = addInt(result_2801799160, addInt((self_2801799158.lines[chckIndx(i_2801799165, 0, (self_2801799158.lines).length - 1)]).length, 1));
            i_2801804865 = addInt(i_2801804865, 1);
          }
      };
    };

  return result_2801799160;

}

function nsuFindChar(s_855639698, sub_855639699, start_855639700, last_855639701) {
    var Temporary1;

  var result_855639702 = 0;

  BeforeRet: {
    result_855639702 = -1;
    if ((last_855639701 < 0)) {
    Temporary1 = (s_855639698).length - 1;
    }
    else {
    Temporary1 = last_855639701;
    }
    
    var last_855639703 = Temporary1;
    Label2: {
      var iHEX60gensym176_855639717 = 0;
      var colontmp__2801803846 = 0;
      colontmp__2801803846 = start_855639700;
      var res_2801803847 = colontmp__2801803846;
      Label3: {
          Label4: while (true) {
          if (!(res_2801803847 <= last_855639703)) break Label4;
            iHEX60gensym176_855639717 = res_2801803847;
            if ((s_855639698[chckIndx(iHEX60gensym176_855639717, 0, (s_855639698).length - 1)] == sub_855639699)) {
            result_855639702 = iHEX60gensym176_855639717;
            break BeforeRet;
            }
            
            res_2801803847 = addInt(res_2801803847, 1);
          }
      };
    };
  };

  return result_855639702;

}

function substr_33557833(s_33557834, first_33557835) {
  var result_33557836 = [];

    result_33557836 = nimCopy(null, substr_33557821(s_33557834, first_33557835, (s_33557834).length - 1), NTI33554449);

  return result_33557836;

}

function fill_855639634(a_855639636, value_855639637) {
    var xHEX60gensym172_855639643 = 0;
    Label1: {
        Label2: while (true) {
        if (!(xHEX60gensym172_855639643 <= (a_855639636).length - 1)) break Label2;
          a_855639636[chckIndx(xHEX60gensym172_855639643, 0, (a_855639636).length - 1)] = value_855639637;
          xHEX60gensym172_855639643 = addInt(xHEX60gensym172_855639643, 1);
        }
    };

  
}

function nsuInitSkipTable(a_855639631, sub_855639632) {
    var m_855639633 = (sub_855639632).length;
    fill_855639634(a_855639631, m_855639633);
    Label1: {
      var i_855639653 = 0;
      var colontmp__2801804868 = 0;
      colontmp__2801804868 = subInt(m_855639633, 1);
      var i_2801804869 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804869 < colontmp__2801804868)) break Label3;
            i_855639653 = i_2801804869;
            a_855639631[chckIndx(sub_855639632[chckIndx(i_855639653, 0, (sub_855639632).length - 1)], 0, (a_855639631).length - 1)] = subInt(subInt(m_855639633, 1), i_855639653);
            i_2801804869 = addInt(i_2801804869, 1);
          }
      };
    };

  
}

function nsuInitNewSkipTable(sub_855639673) {
  var result_855639674 = [new Int32Array(256)];

    nsuInitSkipTable(result_855639674[0], sub_855639673);

  return result_855639674[0];

}

function nsuFindStrA(a_855639676, s_855639677, sub_855639678, start_855639679, last_855639680) {
    var Temporary1;

  var result_855639681 = 0;

  BeforeRet: {
    if ((last_855639680 < 0)) {
    Temporary1 = (s_855639677).length - 1;
    }
    else {
    Temporary1 = last_855639680;
    }
    
    var last_855639682 = Temporary1;
    var subLast_855639683 = subInt((sub_855639678).length, 1);
    if ((subLast_855639683 == -1)) {
    result_855639681 = start_855639679;
    break BeforeRet;
    }
    
    result_855639681 = -1;
    var skip_855639684 = start_855639679;
    Label2: {
        Label3: while (true) {
        if (!(subLast_855639683 <= subInt(last_855639682, skip_855639684))) break Label3;
          var i_855639685 = subLast_855639683;
          Label4: {
              Label5: while (true) {
              if (!(s_855639677[chckIndx(addInt(skip_855639684, i_855639685), 0, (s_855639677).length - 1)] == sub_855639678[chckIndx(i_855639685, 0, (sub_855639678).length - 1)])) break Label5;
                if ((i_855639685 == 0)) {
                result_855639681 = skip_855639684;
                break BeforeRet;
                }
                
                i_855639685 = subInt(i_855639685, 1);
              }
          };
          skip_855639684 = addInt(skip_855639684, a_855639676[chckIndx(s_855639677[chckIndx(addInt(skip_855639684, subLast_855639683), 0, (s_855639677).length - 1)], 0, (a_855639676).length - 1)]);
        }
    };
  };

  return result_855639681;

}

function nsuReplaceStr(s_855639886, sub_855639887, by_855639888) {
  var result_855639889 = [];

    result_855639889 = nimCopy(null, [], NTI33554449);
    var subLen_855639890 = (sub_855639887).length;
    if ((subLen_855639890 == 0)) {
    result_855639889 = nimCopy(null, s_855639886, NTI33554449);
    }
    else {
    if ((subLen_855639890 == 1)) {
    var c_855639891 = sub_855639887[chckIndx(0, 0, (sub_855639887).length - 1)];
    var last_855639892 = (s_855639886).length - 1;
    var i_855639893 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_855639894 = nsuFindChar(s_855639886, c_855639891, chckRange(i_855639893, 0, 2147483647), last_855639892);
          if ((j_855639894 < 0)) {
          break Label1;
          }
          
          result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639893, subInt(j_855639894, 1)));;
          result_855639889.push.apply(result_855639889, by_855639888);;
          i_855639893 = addInt(j_855639894, subLen_855639890);
        }
    };
    result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639893));;
    }
    else {
      var a_855639895 = nsuInitNewSkipTable(sub_855639887);
      var last_855639896 = (s_855639886).length - 1;
      var i_855639897 = 0;
      Label3: {
          Label4: while (true) {
          if (!true) break Label4;
            var j_855639898 = nsuFindStrA(a_855639895, s_855639886, sub_855639887, chckRange(i_855639897, 0, 2147483647), last_855639896);
            if ((j_855639898 < 0)) {
            break Label3;
            }
            
            result_855639889.push.apply(result_855639889, substr_33557821(s_855639886, i_855639897, subInt(j_855639898, 1)));;
            result_855639889.push.apply(result_855639889, by_855639888);;
            i_855639897 = addInt(j_855639898, subLen_855639890);
          }
      };
      result_855639889.push.apply(result_855639889, substr_33557833(s_855639886, i_855639897));;
    }
    }

  return result_855639889;

}

function insert_33557745(x_33557746, x_33557746_Idx, item_33557747, i_33557748) {
    var Temporary1;

    var xl_33557749 = (x_33557746[x_33557746_Idx]).length;
    if (x_33557746[x_33557746_Idx].length < (Temporary1 = chckRange(addInt(xl_33557749, (item_33557747).length), 0, 2147483647), Temporary1)) { for (var i = x_33557746[x_33557746_Idx].length; i < Temporary1; ++i) x_33557746[x_33557746_Idx].push(0); }
         else {x_33557746[x_33557746_Idx].length = Temporary1; };
    var j_33557750 = subInt(xl_33557749, 1);
    Label2: {
        Label3: while (true) {
        if (!(i_33557748 <= j_33557750)) break Label3;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, (item_33557747).length), 0, (x_33557746[x_33557746_Idx]).length - 1)] = x_33557746[x_33557746_Idx][chckIndx(j_33557750, 0, (x_33557746[x_33557746_Idx]).length - 1)];
          j_33557750 = subInt(j_33557750, 1);
        }
    };
    j_33557750 = 0;
    Label4: {
        Label5: while (true) {
        if (!(j_33557750 < (item_33557747).length)) break Label5;
          x_33557746[x_33557746_Idx][chckIndx(addInt(j_33557750, i_33557748), 0, (x_33557746[x_33557746_Idx]).length - 1)] = item_33557747[chckIndx(j_33557750, 0, (item_33557747).length - 1)];
          j_33557750 = addInt(j_33557750, 1);
        }
    };

  
}

function insert_2801799741(x_2801799743, x_2801799743_Idx, item_2801799744, i_2801799745) {
    var it_2801799765 = [];
    x_2801799743[x_2801799743_Idx] = x_2801799743[x_2801799743_Idx] || []; x_2801799743[x_2801799743_Idx].splice(i_2801799745, 0, it_2801799765);
    x_2801799743[x_2801799743_Idx][chckIndx(i_2801799745, 0, (x_2801799743[x_2801799743_Idx]).length - 1)] = nimCopy(null, item_2801799744, NTI33554449);

  
}

function HEX24_855639412(x_855639415) {
  var result_855639416 = [];

    result_855639416 = nimCopy(null, HEX24_369098760(x_855639415.a), NTI33554449);
    result_855639416.push.apply(result_855639416, [32,46,46,32]);;
    result_855639416.push.apply(result_855639416, HEX24_369098760(x_855639415.b));;

  return result_855639416;

}

function addQuoted_855639404(s_855639406, s_855639406_Idx, x_855639407) {
    s_855639406[s_855639406_Idx].push.apply(s_855639406[s_855639406_Idx], HEX24_855639412(x_855639407));;

  
}

function addQuoted_855639425(s_855639427, s_855639427_Idx, x_855639428) {
    addInt_301990108(s_855639427, s_855639427_Idx, x_855639428);

  
}

function HEX24_855639371(x_855639373) {
  var result_855639374 = [[]];

    result_855639374[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym136_855639385 = 0;
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [115,108,105,99,101]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639404(result_855639374, 0, x_855639373["Field0"]);
    if ((0 < countHEX60gensym136_855639385)) {
    result_855639374[0].push.apply(result_855639374[0], [44,32]);;
    }
    
    result_855639374[0].push.apply(result_855639374[0], [108,101,110]);;
    result_855639374[0].push.apply(result_855639374[0], [58,32]);;
    countHEX60gensym136_855639385 += 1;
    addQuoted_855639425(result_855639374, 0, x_855639373["Field1"]);
    result_855639374[0].push.apply(result_855639374[0], [41]);;

  return result_855639374[0];

}

function delete_855639365(s_855639366, s_855639366_Idx, slice_855639368) {
    if (!((((slice_855639368.a < (s_855639366[s_855639366_Idx]).length) && (0 <= slice_855639368.a)) && (slice_855639368.b < (s_855639366[s_855639366_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_855639368, NTI805306392), Field1: (s_855639366[s_855639366_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_855639368.a <= slice_855639368.b)) {
    var i_855639431 = slice_855639368.a;
    var j_855639432 = addInt(slice_855639368.b, 1);
    var newLen_855639433 = addInt(subInt((s_855639366[s_855639366_Idx]).length, j_855639432), i_855639431);
    Label1: {
        Label2: while (true) {
        if (!(i_855639431 < newLen_855639433)) break Label2;
          s_855639366[s_855639366_Idx][chckIndx(i_855639431, 0, (s_855639366[s_855639366_Idx]).length - 1)] = s_855639366[s_855639366_Idx][chckIndx(j_855639432, 0, (s_855639366[s_855639366_Idx]).length - 1)];
          i_855639431 = addInt(i_855639431, 1);
          j_855639432 = addInt(j_855639432, 1);
        }
    };
    if (s_855639366[s_855639366_Idx].length < chckRange(newLen_855639433, 0, 2147483647)) { for (var i = s_855639366[s_855639366_Idx].length; i < chckRange(newLen_855639433, 0, 2147483647); ++i) s_855639366[s_855639366_Idx].push(0); }
         else {s_855639366[s_855639366_Idx].length = chckRange(newLen_855639433, 0, 2147483647); };
    }
    

  
}

function HEX2EHEX2E_805306418(a_805306421, b_805306422) {
  var result_805306423 = ({a: 0, b: 0});

    result_805306423 = nimCopy(result_805306423, {a: a_805306421, b: b_805306422}, NTI805306392);

  return result_805306423;

}

function toSelection_2231370221(cursor_2231370222) {
  var result_2231370223 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801804878 = nimCopy(null, cursor_2231370222, NTI2231369737);
    var colontmp__2801804879 = nimCopy(null, cursor_2231370222, NTI2231369737);
    result_2231370223 = nimCopy(result_2231370223, {Field0: nimCopy(null, colontmp__2801804878, NTI2231369737), Field1: nimCopy(null, colontmp__2801804879, NTI2231369737)}, NTI2231369739);

  return result_2231370223;

}

function add_2231370245(cursor_2231370246, selection_2231370247) {
  var result_2231370248 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(cursor_2231370246, selection_2231370247.Field0)) {
    result_2231370248 = nimCopy(result_2231370248, cursor_2231370246, NTI2231369737);
    break BeforeRet;
    }
    
    if ((selection_2231370247.Field0.Field0 == selection_2231370247.Field1.Field0)) {
    if ((cursor_2231370246.Field0 == selection_2231370247.Field0.Field0)) {
    var colontmp__2801804882 = cursor_2231370246.Field0;
    var colontmp__2801804883 = addInt(cursor_2231370246.Field1, subInt(selection_2231370247.Field1.Field1, selection_2231370247.Field0.Field1));
    result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2801804882, Field1: colontmp__2801804883}, NTI2231369737);
    break BeforeRet;
    }
    else {
      result_2231370248 = nimCopy(result_2231370248, cursor_2231370246, NTI2231369737);
      break BeforeRet;
    }
    
    }
    else {
    if ((cursor_2231370246.Field0 == selection_2231370247.Field0.Field0)) {
    var colontmp__2801804884 = selection_2231370247.Field1.Field0;
    var colontmp__2801804885 = addInt(selection_2231370247.Field1.Field1, subInt(cursor_2231370246.Field1, selection_2231370247.Field0.Field1));
    result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2801804884, Field1: colontmp__2801804885}, NTI2231369737);
    break BeforeRet;
    }
    else {
      var colontmp__2801804886 = addInt(cursor_2231370246.Field0, subInt(selection_2231370247.Field1.Field0, selection_2231370247.Field0.Field0));
      var colontmp__2801804887 = cursor_2231370246.Field1;
      result_2231370248 = nimCopy(result_2231370248, {Field0: colontmp__2801804886, Field1: colontmp__2801804887}, NTI2231369737);
      break BeforeRet;
    }
    }
  };

  return result_2231370248;

}

function add_2231370253(self_2231370254, other_2231370255) {
  var result_2231370256 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2801804880 = add_2231370245(self_2231370254.Field0, other_2231370255);
    var colontmp__2801804881 = add_2231370245(self_2231370254.Field1, other_2231370255);
    result_2231370256 = nimCopy(result_2231370256, {Field0: nimCopy(null, colontmp__2801804880, NTI2231369737), Field1: nimCopy(null, colontmp__2801804881, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370256;

}

function nsuJoinSep(a_855639591, sep_855639592) {
  var result_855639593 = [];

    if ((0 < (a_855639591).length)) {
    var L_855639600 = mulInt((sep_855639592).length, subInt((a_855639591).length, 1));
    Label1: {
      var i_855639608 = 0;
      var colontmp__2801804889 = 0;
      colontmp__2801804889 = (a_855639591).length - 1;
      var res_2801804890 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801804890 <= colontmp__2801804889)) break Label3;
            i_855639608 = res_2801804890;
            L_855639600 = addInt(L_855639600, (a_855639591[chckIndx(i_855639608, 0, (a_855639591).length - 1)]).length);
            res_2801804890 = addInt(res_2801804890, 1);
          }
      };
    };
    result_855639593 = nimCopy(null, mnewString(0), NTI33554449);
    result_855639593.push.apply(result_855639593, a_855639591[chckIndx(0, 0, (a_855639591).length - 1)]);;
    Label4: {
      var i_855639621 = 0;
      var colontmp__2801804893 = 0;
      colontmp__2801804893 = (a_855639591).length - 1;
      var res_2801804894 = 1;
      Label5: {
          Label6: while (true) {
          if (!(res_2801804894 <= colontmp__2801804893)) break Label6;
            i_855639621 = res_2801804894;
            result_855639593.push.apply(result_855639593, sep_855639592);;
            result_855639593.push.apply(result_855639593, a_855639591[chckIndx(i_855639621, 0, (a_855639591).length - 1)]);;
            res_2801804894 = addInt(res_2801804894, 1);
          }
      };
    };
    }
    else {
      result_855639593 = nimCopy(null, [], NTI33554449);
    }
    

  return result_855639593;

}

function isSome_2868904032(self_2868904034) {
  var result_2868904035 = false;

    result_2868904035 = !((self_2868904034.val == null));

  return result_2868904035;

}

function get_2868904023(self_2868904025, otherwise_2868904026) {
    var Temporary1;

  var result_2868904027 = null;

    if (isSome_2868904032(self_2868904025)) {
    Temporary1 = self_2868904025.val;
    }
    else {
    Temporary1 = otherwise_2868904026;
    }
    
    result_2868904027 = Temporary1;

  return result_2868904027;

}

function parseString_2868903995(self_2868903996, text_2868903997, oldTree_2868904009) {
  var result_2868904010 = null;

  BeforeRet: {
    result_2868904010 = self_2868903996.parse(toJSStr(text_2868903997), get_2868904023(oldTree_2868904009, null));
    break BeforeRet;
  };

  return result_2868904010;

}

function some_2801799351(val_2801799353) {
  var result_2801799354 = ({val: null});

    if (!(!((val_2801799353 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2801799354.val = val_2801799353;

  return result_2801799354;

}

function invoke_2801799832(event_2801799834, arg_2801799835) {
    Label1: {
      var h_2801799858 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801804898 = 0;
      var L_2801804899 = (event_2801799834.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804898 < L_2801804899)) break Label3;
            h_2801799858 = event_2801799834.handlers[chckIndx(i_2801804898, 0, (event_2801799834.handlers).length - 1)];
            h_2801799858.Field1(arg_2801799835);
            i_2801804898 = addInt(i_2801804898, 1);
            if (!(((event_2801799834.handlers).length == L_2801804899))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_2801796041(event_2801796043, arg_2801796044) {
    Label1: {
      var h_2801796067 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801804903 = 0;
      var L_2801804904 = (event_2801796043.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804903 < L_2801804904)) break Label3;
            h_2801796067 = event_2801796043.handlers[chckIndx(i_2801804903, 0, (event_2801796043.handlers).length - 1)];
            h_2801796067.Field1(arg_2801796044);
            i_2801804903 = addInt(i_2801804903, 1);
            if (!(((event_2801796043.handlers).length == L_2801804904))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function notifyTextChanged_2801799129(self_2801799130) {
    invoke_2801796041(self_2801799130.textChanged, self_2801799130);

  
}

function insert_2801799676(self_2801799677, selections_2801799678, oldSelection_2801799679, text_2801799680, notify_2801799681, record_2801799682, autoIndent_2801799683) {
                      var Temporary10;
            var Temporary15;
      var Temporary16;
        var Temporary17;

  var result_2801799684 = [];

    var newEmptyLines_2801799685 = [];
    result_2801799684 = nimCopy(null, clampAndMergeSelections_2801795483(self_2801799677, selections_2801799678), NTI2231369747);
    var undoOp_2801799693 = {kind: 2, children: [], oldSelection: HEX40_2801799177(oldSelection_2801799679), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2801799699 = 0;
      var selection_2801799700 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801804842 = 0;
      var L_2801804843 = (result_2801799684).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804842 < L_2801804843)) break Label3;
            i_2801799699 = i_2801804842;
            selection_2801799700 = nimCopy(selection_2801799700, result_2801799684[chckIndx(i_2801804842, 0, (result_2801799684).length - 1)], NTI2231369739);
            var oldCursor_2801799701 = nimCopy(null, selection_2801799700.Field1, NTI2231369737);
            var cursor_2801799702 = nimCopy(null, selection_2801799700.Field1, NTI2231369737);
            var startByte_2801799703 = byteOffset_2801799157(self_2801799677, cursor_2801799702);
            var lineCounter_2801799704 = 0;
            if (self_2801799677.singleLine) {
            var text_2801799705 = nsuReplaceStr(text_2801799680, [10], [32]);
            if (((self_2801799677.lines).length == 0)) {
            var Temporary4 = nimCopy(null, text_2801799705, NTI33554449);
            self_2801799677.lines.push(Temporary4);;
            }
            else {
            insert_33557745(self_2801799677.lines, chckIndx(0, 0, (self_2801799677.lines).length - 1), text_2801799705, chckRange(cursor_2801799702.Field1, 0, 2147483647));
            }
            
            cursor_2801799702.Field1 = addInt(cursor_2801799702.Field1, (text_2801799705).length);
            }
            else {
              Label5: {
                var line_2801799717 = [];
                var first_2801804831 = 0;
                var last_2801804832 = 0;
                var eolpos_2801804833 = 0;
                Label6: {
                    Label7: while (true) {
                    if (!true) break Label7;
                      Label8: {
                          Label9: while (true) {
                          if (!((last_2801804832 < (text_2801799680).length) && !((ConstSet23[text_2801799680[chckIndx(last_2801804832, 0, (text_2801799680).length - 1)]] != undefined)))) break Label9;
                            last_2801804832 = addInt(last_2801804832, 1);
                          }
                      };
                      eolpos_2801804833 = last_2801804832;
                      if ((last_2801804832 < (text_2801799680).length)) {
                      if ((text_2801799680[chckIndx(last_2801804832, 0, (text_2801799680).length - 1)] == 10)) {
                      last_2801804832 = addInt(last_2801804832, 1);
                      }
                      else {
                      if ((text_2801799680[chckIndx(last_2801804832, 0, (text_2801799680).length - 1)] == 13)) {
                      last_2801804832 = addInt(last_2801804832, 1);
                      if (((last_2801804832 < (text_2801799680).length) && (text_2801799680[chckIndx(last_2801804832, 0, (text_2801799680).length - 1)] == 10))) {
                      last_2801804832 = addInt(last_2801804832, 1);
                      }
                      
                      }
                      }
                      }
                      
                      if (false) {
                      Temporary10 = subInt(last_2801804832, 1);
                      }
                      else {
                      Temporary10 = subInt(eolpos_2801804833, 1);
                      }
                      
                      line_2801799717 = substr_33557821(text_2801799680, first_2801804831, Temporary10);
                      try {
                      if ((0 < lineCounter_2801799704)) {
                      insert_2801799741(self_2801799677, "lines", HEX5BHEX5D_855639319(self_2801799677.lines[chckIndx(cursor_2801799702.Field0, 0, (self_2801799677.lines).length - 1)], HEX2EHEX2E_1040187488(cursor_2801799702.Field1, 1)), chckRange(addInt(cursor_2801799702.Field0, 1), 0, 2147483647));
                      newEmptyLines_2801799685.push(addInt(cursor_2801799702.Field0, 1));;
                      if ((cursor_2801799702.Field1 < lineLength_2801795436(self_2801799677, cursor_2801799702.Field0))) {
                      delete_855639365(self_2801799677.lines, chckIndx(cursor_2801799702.Field0, 0, (self_2801799677.lines).length - 1), HEX2EHEX2E_805306418(cursor_2801799702.Field1, subInt(lineLength_2801795436(self_2801799677, cursor_2801799702.Field0), 1)));
                      }
                      
                      var colontmp__2801804827 = addInt(cursor_2801799702.Field0, 1);
                      var colontmp__2801804828 = 0;
                      cursor_2801799702 = nimCopy(cursor_2801799702, {Field0: colontmp__2801804827, Field1: colontmp__2801804828}, NTI2231369737);
                      }
                      
                      if ((0 < (line_2801799717).length)) {
                      insert_33557745(self_2801799677.lines, chckIndx(cursor_2801799702.Field0, 0, (self_2801799677.lines).length - 1), line_2801799717, chckRange(cursor_2801799702.Field1, 0, 2147483647));
                      cursor_2801799702.Field1 = addInt(cursor_2801799702.Field1, (line_2801799717).length);
                      }
                      
                      if ((eolpos_2801804833 == last_2801804832)) {
                      break Label6;
                      }
                      
                      first_2801804831 = last_2801804832;
                      } finally {
                      lineCounter_2801799704 = addInt(lineCounter_2801799704, 1);
                      }
                    }
                };
              };
            }
            
            result_2801799684[chckIndx(i_2801799699, 0, (result_2801799684).length - 1)] = nimCopy(result_2801799684[chckIndx(i_2801799699, 0, (result_2801799684).length - 1)], toSelection_2231370221(cursor_2801799702), NTI2231369739);
            Label12: {
              var k_2801799792 = 0;
              var colontmp__2801804837 = 0;
              var colontmp__2801804838 = 0;
              colontmp__2801804837 = addInt(i_2801799699, 1);
              colontmp__2801804838 = (result_2801799684).length - 1;
              var res_2801804839 = colontmp__2801804837;
              Label13: {
                  Label14: while (true) {
                  if (!(res_2801804839 <= colontmp__2801804838)) break Label14;
                    k_2801799792 = res_2801804839;
                    result_2801799684[chckIndx(k_2801799792, 0, (result_2801799684).length - 1)] = nimCopy(result_2801799684[chckIndx(k_2801799792, 0, (result_2801799684).length - 1)], add_2231370253(result_2801799684[chckIndx(k_2801799792, 0, (result_2801799684).length - 1)], {Field0: nimCopy(null, oldCursor_2801799701, NTI2231369737), Field1: nimCopy(null, cursor_2801799702, NTI2231369737)}), NTI2231369739);
                    res_2801804839 = addInt(res_2801804839, 1);
                  }
              };
            };
            if (!((self_2801799677.tsParser == null))) {
            var edit_2801799796 = {startIndex: startByte_2801799703, oldEndIndex: startByte_2801799703, newEndIndex: addInt(startByte_2801799703, (text_2801799680).length), startPosition: {row: oldCursor_2801799701.Field0, column: oldCursor_2801799701.Field1, m_type: NTI2868903950}, oldEndPosition: {row: oldCursor_2801799701.Field0, column: oldCursor_2801799701.Field1, m_type: NTI2868903950}, newEndPosition: {row: cursor_2801799702.Field0, column: cursor_2801799702.Field1, m_type: NTI2868903950}, m_type: NTI2868903960};
            var _ = self_2801799677.currentTree.edit(edit_2801799796);
            var strValue_2801799797 = nsuJoinSep(self_2801799677.lines, [10]);
            self_2801799677.currentTree = parseString_2868903995(self_2801799677.tsParser, strValue_2801799797, some_2801799351(self_2801799677.currentTree));
            }
            
            self_2801799677.version = addInt(self_2801799677.version, 1);
            if (record_2801799682) {
            var Temporary15 = undoOp_2801799693;
            if (ConstSet24[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI2801795075)); }
            Temporary15.children.push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, oldCursor_2801799701, NTI2231369737), Field1: nimCopy(null, cursor_2801799702, NTI2231369737)}, NTI2231369739), oldSelection: [], cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
            }
            
            if (notify_2801799681) {
            invoke_2801799832(self_2801799677.textInserted, {Field0: self_2801799677, Field1: nimCopy(null, oldCursor_2801799701, NTI2231369737), Field2: nimCopy(null, text_2801799680, NTI33554449)});
            }
            
            i_2801804842 = addInt(i_2801804842, 1);
            if (!(((result_2801799684).length == L_2801804843))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2801799681) {
    notifyTextChanged_2801799129(self_2801799677);
    }
    
      if (!record_2801799682) Temporary16 = false; else {        var Temporary17 = undoOp_2801799693;
        if (ConstSet25[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI2801795075)); }
        Temporary16 = (0 < (Temporary17.children).length);      }    if (Temporary16) {
    self_2801799677.undoOps.push(undoOp_2801799693);;
    self_2801799677.redoOps = nimCopy(null, [], NTI2801797439);
    }
    

  return result_2801799684;

}

function selections_2801795565(self_2801795566) {
  var result_2801795567 = [];

    result_2801795567 = nimCopy(null, self_2801795566.selectionsInternal, NTI2231369747);

  return result_2801795567;

}

function insert_2801804415(self_2801804416, selections_2801804417, text_2801804418, notify_2801804419, record_2801804420, autoIndent_2801804421) {
  var result_2801804422 = [];

  BeforeRet: {
    result_2801804422 = nimCopy(null, insert_2801799676(self_2801804416.document, selections_2801804417, selections_2801795565(self_2801804416), text_2801804418, notify_2801804419, record_2801804420, autoIndent_2801804421), NTI2801797771);
    break BeforeRet;
  };

  return result_2801804422;

}

function insertJsWrapper_2801804411(self_2801804456, selections_2801804457, text_2801804458, notify_2801804459, record_2801804460, autoIndent_2801804461) {
  var result_2801804462 = [];

    result_2801804462 = nimCopy(null, insert_2801804415(self_2801804456, selections_2801804457, text_2801804458, notify_2801804459, record_2801804460, autoIndent_2801804461), NTI2801800521);

  return result_2801804462;

}
editor_text_prototype.insert = function(selections_ /* : seq[Selection] */, text_ /* : string */, notify_ /* : bool */, record_ /* : bool */, autoIndent_ /* : bool */) { return (insertJsWrapper_2801804411(this, selections_, text_ == undefined ? undefined : cstrToNimstr(text_), notify_, record_, autoIndent_));};

function isEmpty_2231370100(selection_2231370101) {
  var result_2231370102 = false;

    result_2231370102 = HEX3DHEX3D_2231369801(selection_2231370101.Field0, selection_2231370101.Field1);

  return result_2231370102;

}

function HEX3E_2231370059(a_2231370060, b_2231370061) {
  var result_2231370062 = false;

  BeforeRet: {
    if ((b_2231370061.Field0 < a_2231370060.Field0)) {
    result_2231370062 = true;
    break BeforeRet;
    }
    else {
    if (((a_2231370060.Field0 == b_2231370061.Field0) && (b_2231370061.Field1 < a_2231370060.Field1))) {
    result_2231370062 = true;
    break BeforeRet;
    }
    else {
      result_2231370062 = false;
      break BeforeRet;
    }
    }
  };

  return result_2231370062;

}

function isBackwards_2231370091(selection_2231370092) {
  var result_2231370093 = false;

  BeforeRet: {
    result_2231370093 = HEX3E_2231370059(selection_2231370092.Field0, selection_2231370092.Field1);
    break BeforeRet;
  };

  return result_2231370093;

}

function normalized_2231370094(selection_2231370095) {
  var result_2231370096 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if (isBackwards_2231370091(selection_2231370095)) {
    var colontmp__2801804997 = nimCopy(null, selection_2231370095.Field1, NTI2231369737);
    var colontmp__2801804998 = nimCopy(null, selection_2231370095.Field0, NTI2231369737);
    result_2231370096 = nimCopy(result_2231370096, {Field0: nimCopy(null, colontmp__2801804997, NTI2231369737), Field1: nimCopy(null, colontmp__2801804998, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    }
    else {
      result_2231370096 = nimCopy(result_2231370096, selection_2231370095, NTI2231369739);
      break BeforeRet;
    }
    
  };

  return result_2231370096;

}

function HEX5BHEX5D_855639291(s_855639294, x_855639295) {
  var result_855639296 = [];

    var a_855639298 = x_855639295.a;
    var L_855639300 = addInt(subInt(x_855639295.b, a_855639298), 1);
    result_855639296 = nimCopy(null, mnewString(chckRange(L_855639300, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_855639305 = 0;
      var i_2801805005 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801805005 < L_855639300)) break Label3;
            i_855639305 = i_2801805005;
            result_855639296[chckIndx(i_855639305, 0, (result_855639296).length - 1)] = s_855639294[chckIndx(addInt(i_855639305, a_855639298), 0, (s_855639294).length - 1)];
            i_2801805005 = addInt(i_2801805005, 1);
          }
      };
    };

  return result_855639296;

}

function contentString_2801796225(self_2801796226, selection_2801796227) {
  var result_2801796228 = [];

  BeforeRet: {
    var colontmp__2801805003 = normalized_2231370094(selection_2801796227);
    var first_2801796229 = nimCopy(null, colontmp__2801805003["Field0"], NTI2231369737);
    var last_2801796230 = nimCopy(null, colontmp__2801805003["Field1"], NTI2231369737);
    if ((first_2801796229.Field0 == last_2801796230.Field0)) {
    result_2801796228 = nimCopy(null, HEX5BHEX5D_855639291(self_2801796226.lines[chckIndx(first_2801796229.Field0, 0, (self_2801796226.lines).length - 1)], HEX2EHEX2E_805306418(first_2801796229.Field1, subInt(last_2801796230.Field1, 1))), NTI33554449);
    break BeforeRet;
    }
    
    result_2801796228 = nimCopy(null, HEX5BHEX5D_855639319(self_2801796226.lines[chckIndx(first_2801796229.Field0, 0, (self_2801796226.lines).length - 1)], HEX2EHEX2E_1040187488(first_2801796229.Field1, 1)), NTI33554449);
    Label1: {
      var i_2801796277 = 0;
      var colontmp__2801805000 = 0;
      colontmp__2801805000 = addInt(first_2801796229.Field0, 1);
      var i_2801805001 = colontmp__2801805000;
      Label2: {
          Label3: while (true) {
          if (!(i_2801805001 < last_2801796230.Field0)) break Label3;
            i_2801796277 = i_2801805001;
            result_2801796228.push.apply(result_2801796228, [10]);;
            result_2801796228.push.apply(result_2801796228, self_2801796226.lines[chckIndx(i_2801796277, 0, (self_2801796226.lines).length - 1)]);;
            i_2801805001 = addInt(i_2801805001, 1);
          }
      };
    };
    result_2801796228.push.apply(result_2801796228, [10]);;
    result_2801796228.push.apply(result_2801796228, HEX5BHEX5D_855639291(self_2801796226.lines[chckIndx(last_2801796230.Field0, 0, (self_2801796226.lines).length - 1)], HEX2EHEX2E_805306418(0, subInt(last_2801796230.Field1, 1))));;
  };

  return result_2801796228;

}

function delete_2801799286(s_2801799288, s_2801799288_Idx, slice_2801799289) {
    if (!((((slice_2801799289.a < (s_2801799288[s_2801799288_Idx]).length) && (0 <= slice_2801799289.a)) && (slice_2801799289.b < (s_2801799288[s_2801799288_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2801799289, NTI805306392), Field1: (s_2801799288[s_2801799288_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2801799289.a <= slice_2801799289.b)) {
    var n_2801799336 = addInt(subInt(slice_2801799289.b, slice_2801799289.a), 1);
    var first_2801799337 = slice_2801799289.a;
    s_2801799288[s_2801799288_Idx].splice(first_2801799337, n_2801799336);
    }
    

  
}

function subtract_2231370229(cursor_2231370230, selection_2231370231) {
  var result_2231370232 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(cursor_2231370230, selection_2231370231.Field0)) {
    result_2231370232 = nimCopy(result_2231370232, cursor_2231370230, NTI2231369737);
    break BeforeRet;
    }
    
    if (HEX3CHEX3D_2231370071(cursor_2231370230, selection_2231370231.Field1)) {
    result_2231370232 = nimCopy(result_2231370232, selection_2231370231.Field0, NTI2231369737);
    break BeforeRet;
    }
    
    if ((cursor_2231370230.Field0 == selection_2231370231.Field1.Field0)) {
    if ((selection_2231370231.Field0.Field0 == selection_2231370231.Field1.Field0)) {
    var colontmp__2801805011 = cursor_2231370230.Field0;
    var colontmp__2801805012 = subInt(cursor_2231370230.Field1, subInt(selection_2231370231.Field1.Field1, selection_2231370231.Field0.Field1));
    result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2801805011, Field1: colontmp__2801805012}, NTI2231369737);
    break BeforeRet;
    }
    else {
      var colontmp__2801805013 = selection_2231370231.Field0.Field0;
      var colontmp__2801805014 = addInt(selection_2231370231.Field0.Field1, subInt(cursor_2231370230.Field1, selection_2231370231.Field1.Field1));
      result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2801805013, Field1: colontmp__2801805014}, NTI2231369737);
      break BeforeRet;
    }
    
    }
    
    var colontmp__2801805015 = subInt(cursor_2231370230.Field0, subInt(selection_2231370231.Field1.Field0, selection_2231370231.Field0.Field0));
    var colontmp__2801805016 = cursor_2231370230.Field1;
    result_2231370232 = nimCopy(result_2231370232, {Field0: colontmp__2801805015, Field1: colontmp__2801805016}, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370232;

}

function subtract_2231370241(self_2231370242, other_2231370243) {
  var result_2231370244 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var colontmp__2801805009 = subtract_2231370229(self_2231370242.Field0, other_2231370243);
    var colontmp__2801805010 = subtract_2231370229(self_2231370242.Field1, other_2231370243);
    result_2231370244 = nimCopy(result_2231370244, {Field0: nimCopy(null, colontmp__2801805009, NTI2231369737), Field1: nimCopy(null, colontmp__2801805010, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370244;

}

function invoke_2801799395(event_2801799397, arg_2801799398) {
    Label1: {
      var h_2801799421 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_2801805019 = 0;
      var L_2801805020 = (event_2801799397.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801805019 < L_2801805020)) break Label3;
            h_2801799421 = event_2801799397.handlers[chckIndx(i_2801805019, 0, (event_2801799397.handlers).length - 1)];
            h_2801799421.Field1(arg_2801799398);
            i_2801805019 = addInt(i_2801805019, 1);
            if (!(((event_2801799397.handlers).length == L_2801805020))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function delete_2801799170(self_2801799171, selections_2801799172, oldSelection_2801799173, notify_2801799174, record_2801799175) {
              var Temporary8;
      var Temporary9;
        var Temporary10;

  var result_2801799176 = [];

    result_2801799176 = nimCopy(null, clampAndMergeSelections_2801795483(self_2801799171, selections_2801799172), NTI2231369747);
    var undoOp_2801799200 = {kind: 2, children: [], oldSelection: HEX40_2801799177(oldSelection_2801799173), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: []};
    Label1: {
      var i_2801799233 = 0;
      var selection_2801799234 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801804994 = 0;
      var L_2801804995 = (result_2801799176).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801804994 < L_2801804995)) break Label3;
            i_2801799233 = i_2801804994;
            selection_2801799234 = nimCopy(selection_2801799234, result_2801799176[chckIndx(i_2801804994, 0, (result_2801799176).length - 1)], NTI2231369739);
            Label4: {
              if (isEmpty_2231370100(selection_2801799234)) {
              break Label4;
              }
              
              var selection_2801799235 = normalized_2231370094(selection_2801799234);
              var startByte_2801799236 = byteOffset_2801799157(self_2801799171, selection_2801799235.Field0);
              var endByte_2801799237 = byteOffset_2801799157(self_2801799171, selection_2801799235.Field1);
              var deletedText_2801799238 = contentString_2801796225(self_2801799171, selection_2801799235);
              var colontmp__2801805007 = normalized_2231370094(selection_2801799235);
              var first_2801799239 = nimCopy(null, colontmp__2801805007["Field0"], NTI2231369737);
              var last_2801799240 = nimCopy(null, colontmp__2801805007["Field1"], NTI2231369737);
              if ((first_2801799239.Field0 == last_2801799240.Field0)) {
              delete_855639365(self_2801799171.lines, chckIndx(last_2801799240.Field0, 0, (self_2801799171.lines).length - 1), HEX2EHEX2E_805306418(first_2801799239.Field1, subInt(last_2801799240.Field1, 1)));
              }
              else {
                if ((first_2801799239.Field1 < lineLength_2801795436(self_2801799171, first_2801799239.Field0))) {
                delete_855639365(self_2801799171.lines, chckIndx(first_2801799239.Field0, 0, (self_2801799171.lines).length - 1), HEX2EHEX2E_805306418(first_2801799239.Field1, subInt(lineLength_2801795436(self_2801799171, first_2801799239.Field0), 1)));
                }
                
                self_2801799171.lines[chckIndx(first_2801799239.Field0, 0, (self_2801799171.lines).length - 1)].push.apply(self_2801799171.lines[chckIndx(first_2801799239.Field0, 0, (self_2801799171.lines).length - 1)], HEX5BHEX5D_855639319(self_2801799171.lines[chckIndx(last_2801799240.Field0, 0, (self_2801799171.lines).length - 1)], HEX2EHEX2E_1040187488(last_2801799240.Field1, 1)));;
                delete_2801799286(self_2801799171, "lines", HEX2EHEX2E_805306418(addInt(first_2801799239.Field0, 1), last_2801799240.Field0));
              }
              
              result_2801799176[chckIndx(i_2801799233, 0, (result_2801799176).length - 1)] = nimCopy(result_2801799176[chckIndx(i_2801799233, 0, (result_2801799176).length - 1)], toSelection_2231370221(selection_2801799235.Field0), NTI2231369739);
              Label5: {
                var k_2801799345 = 0;
                var colontmp__2801804990 = 0;
                var colontmp__2801804991 = 0;
                colontmp__2801804990 = addInt(i_2801799233, 1);
                colontmp__2801804991 = (result_2801799176).length - 1;
                var res_2801804992 = colontmp__2801804990;
                Label6: {
                    Label7: while (true) {
                    if (!(res_2801804992 <= colontmp__2801804991)) break Label7;
                      k_2801799345 = res_2801804992;
                      result_2801799176[chckIndx(k_2801799345, 0, (result_2801799176).length - 1)] = nimCopy(result_2801799176[chckIndx(k_2801799345, 0, (result_2801799176).length - 1)], subtract_2231370241(result_2801799176[chckIndx(k_2801799345, 0, (result_2801799176).length - 1)], selection_2801799235), NTI2231369739);
                      res_2801804992 = addInt(res_2801804992, 1);
                    }
                };
              };
              if (!((self_2801799171.tsParser == null))) {
              var edit_2801799349 = {startIndex: startByte_2801799236, oldEndIndex: endByte_2801799237, newEndIndex: startByte_2801799236, startPosition: {row: selection_2801799235.Field0.Field0, column: selection_2801799235.Field0.Field1, m_type: NTI2868903950}, oldEndPosition: {row: selection_2801799235.Field1.Field0, column: selection_2801799235.Field1.Field1, m_type: NTI2868903950}, newEndPosition: {row: selection_2801799235.Field0.Field0, column: selection_2801799235.Field0.Field1, m_type: NTI2868903950}, m_type: NTI2868903960};
              var _ = self_2801799171.currentTree.edit(edit_2801799349);
              var strValue_2801799350 = nsuJoinSep(self_2801799171.lines, [10]);
              self_2801799171.currentTree = parseString_2868903995(self_2801799171.tsParser, strValue_2801799350, some_2801799351(self_2801799171.currentTree));
              }
              
              self_2801799171.version = addInt(self_2801799171.version, 1);
              if (record_2801799175) {
              var Temporary8 = undoOp_2801799200;
              if (ConstSet26[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2801795075)); }
              Temporary8.children.push({kind: 1, cursor: nimCopy(null, selection_2801799235.Field0, NTI2231369737), text: nimCopy(null, deletedText_2801799238, NTI33554449), oldSelection: [], selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
              }
              
              if (notify_2801799174) {
              invoke_2801799395(self_2801799171.textDeleted, {Field0: self_2801799171, Field1: nimCopy(null, selection_2801799235, NTI2231369739)});
              }
              
            };
            i_2801804994 = addInt(i_2801804994, 1);
            if (!(((result_2801799176).length == L_2801804995))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (notify_2801799174) {
    notifyTextChanged_2801799129(self_2801799171);
    }
    
      if (!record_2801799175) Temporary9 = false; else {        var Temporary10 = undoOp_2801799200;
        if (ConstSet27[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI2801795075)); }
        Temporary9 = (0 < (Temporary10.children).length);      }    if (Temporary9) {
    self_2801799171.undoOps.push(undoOp_2801799200);;
    self_2801799171.redoOps = nimCopy(null, [], NTI2801797439);
    }
    

  return result_2801799176;

}

function delete_2801804912(self_2801804913, selections_2801804914, notify_2801804915, record_2801804916) {
  var result_2801804917 = [];

  BeforeRet: {
    result_2801804917 = nimCopy(null, delete_2801799170(self_2801804913.document, selections_2801804914, selections_2801795565(self_2801804913), notify_2801804915, record_2801804916), NTI2801797410);
    break BeforeRet;
  };

  return result_2801804917;

}

function deleteJsWrapper_2801804908(self_2801804949, selections_2801804950, notify_2801804951, record_2801804952) {
  var result_2801804953 = [];

    result_2801804953 = nimCopy(null, delete_2801804912(self_2801804949, selections_2801804950, notify_2801804951, record_2801804952), NTI2801801037);

  return result_2801804953;

}
editor_text_prototype.delete = function(selections_ /* : seq[Selection] */, notify_ /* : bool */, record_ /* : bool */) { return (deleteJsWrapper_2801804908(this, selections_, notify_, record_));};

function popLast_2801805139(deq_2801805141) {
    var Temporary1;

  var result_2801805142 = [];

    if ((deq_2801805141.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2801805141.count = subInt(deq_2801805141.count, 1);
    deq_2801805141.tail = (subInt(deq_2801805141.tail, 1) & deq_2801805141.mask);
    Temporary1 = deq_2801805141.data[chckIndx(deq_2801805141.tail, 0, (deq_2801805141.data).length - 1)];
    deq_2801805141.data[chckIndx(deq_2801805141.tail, 0, (deq_2801805141.data).length - 1)] = genericReset(deq_2801805141.data[chckIndx(deq_2801805141.tail, 0, (deq_2801805141.data).length - 1)], NTI2231369747);
    result_2801805142 = nimCopy(null, Temporary1, NTI2231369747);

  return result_2801805142;

}

function addFirst_2801805158(deq_2801805160, item_2801805161) {
    expandIfNeeded_2801795598(deq_2801805160);
    deq_2801805160.count = addInt(deq_2801805160.count, 1);
    deq_2801805160.head = (subInt(deq_2801805160.head, 1) & deq_2801805160.mask);
    deq_2801805160.data[chckIndx(deq_2801805160.head, 0, (deq_2801805160.data).length - 1)] = nimCopy(null, item_2801805161, NTI2231369747);

  
}

function totalLineHeight_2315255960(self_2315255961) {
  var result_2315255962 = 0.0;

    result_2315255962 = (lineHeight_2315255947(self_2315255961) + lineDistance_2315255942(self_2315255961));

  return result_2315255962;

}

function getFloat_1627390140(n_1627390141, default_1627390142) {
      var Temporary1;
      var Temporary2;

  var result_1627390143 = 0.0;

  BeforeRet: {
    if ((n_1627390141 == null)) {
    result_1627390143 = default_1627390142;
    break BeforeRet;
    }
    
    switch (n_1627390141.kind) {
    case 3:
      var Temporary1 = n_1627390141;
      if (ConstSet28[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390143 = Temporary1.fnum;
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = n_1627390141;
      if (ConstSet29[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627390143 = Temporary2.num;
      break BeforeRet;
      break;
    default: 
      result_1627390143 = default_1627390142;
      break BeforeRet;
      break;
    }
  };

  return result_1627390143;

}

function getOption_2801803177(editor_2801803179, path_2801803180, default_2801803181) {
  var result_2801803187 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2801803179 == null)) {
      result_2801803187 = default_2801803181;
      break BeforeRet;
      }
      
      var nodeHEX60gensym139_2801803200 = HEX7BHEX7D_1627393316(editor_2801803179.options, nsuSplitString(path_2801803180, [46], -1));
      if ((nodeHEX60gensym139_2801803200 == null)) {
      result_2801803187 = default_2801803181;
      break BeforeRet;
      }
      
    };
    result_2801803187 = getFloat_1627390140(nodeHEX60gensym139_2801803200, default_2801803181);
    break BeforeRet;
  };

  return result_2801803187;

}

function clamp_2449473689(x_2449473691, a_2449473692, b_2449473693) {
  var result_2449473694 = 0.0;

  BeforeRet: {
    if ((x_2449473691 < a_2449473692)) {
    result_2449473694 = a_2449473692;
    break BeforeRet;
    }
    
    if ((b_2449473693 < x_2449473691)) {
    result_2449473694 = b_2449473693;
    break BeforeRet;
    }
    
    result_2449473694 = x_2449473691;
    break BeforeRet;
  };

  return result_2449473694;

}

function scrollToCursor_2801803169(self_2801803170, cursor_2801803171, keepVerticalOffset_2801803172) {
    var Temporary1;

    var targetLine_2801803173 = cursor_2801803171.Field0;
    if (!((self_2801803170.editor.platform == null))) {
    Temporary1 = totalLineHeight_2315255960(self_2801803170.editor.platform);
    }
    else {
    Temporary1 = (lineHeight_2315255947(self_2801803170.editor.platform) + getOption_2801803177(self_2801803170.editor, [116,101,120,116,46,108,105,110,101,45,100,105,115,116,97,110,99,101], 0.0));
    }
    
    var totalLineHeight_2801803204 = Temporary1;
    if (keepVerticalOffset_2801803172) {
    var currentLineY_2801803205 = ((subInt(selection_2801795568(self_2801803170).Field1.Field0, self_2801803170.previousBaseIndex) * totalLineHeight_2801803204) + self_2801803170.scrollOffset);
    self_2801803170.previousBaseIndex = targetLine_2801803173;
    self_2801803170.scrollOffset = currentLineY_2801803205;
    }
    else {
      var targetLineY_2801803206 = ((subInt(targetLine_2801803173, self_2801803170.previousBaseIndex) * totalLineHeight_2801803204) + self_2801803170.scrollOffset);
      var margin_2801803221 = clamp_2449473689(getOption_2801803177(self_2801803170.editor, [116,101,120,116,46,99,117,114,115,111,114,45,109,97,114,103,105,110], 25.0), 0.0, ((self_2801803170.lastContentBounds.h * 0.5) - (totalLineHeight_2801803204 * 0.5)));
      if ((targetLineY_2801803206 < margin_2801803221)) {
      self_2801803170.scrollOffset = margin_2801803221;
      self_2801803170.previousBaseIndex = targetLine_2801803173;
      }
      else {
      if (((self_2801803170.lastContentBounds.h - margin_2801803221) < (targetLineY_2801803206 + totalLineHeight_2801803204))) {
      self_2801803170.scrollOffset = ((self_2801803170.lastContentBounds.h - margin_2801803221) - totalLineHeight_2801803204);
      self_2801803170.previousBaseIndex = targetLine_2801803173;
      }
      }
    }
    
    markDirty_2147483686(self_2801803170);

  
}

function selectPrev_2801805028(self_2801805029) {
    if ((0 < len_2801795728(self_2801805029.selectionHistory))) {
    var selection_2801805152 = popLast_2801805139(self_2801805029.selectionHistory);
    addFirst_2801805158(self_2801805029.selectionHistory, selections_2801795565(self_2801805029));
    self_2801805029.selectionsInternal = nimCopy(null, selection_2801805152, NTI2231369747);
    }
    
    scrollToCursor_2801803169(self_2801805029, selection_2801795568(self_2801805029).Field1, false);

  
}

function selectPrevJsWrapper_2801805024(self_2801805202) {
    selectPrev_2801805028(self_2801805202);

  
}
editor_text_prototype.selectPrev = function() { return (selectPrevJsWrapper_2801805024(this));};

function selectNext_2801805224(self_2801805225) {
    if ((0 < len_2801795728(self_2801805225.selectionHistory))) {
    var selection_2801805338 = popFirst_2801795789(self_2801805225.selectionHistory);
    addLast_2801795589(self_2801805225.selectionHistory, selections_2801795565(self_2801805225));
    self_2801805225.selectionsInternal = nimCopy(null, selection_2801805338, NTI2231369747);
    }
    
    scrollToCursor_2801803169(self_2801805225, selection_2801795568(self_2801805225).Field1, false);

  
}

function selectNextJsWrapper_2801805220(self_2801805375) {
    selectNext_2801805224(self_2801805375);

  
}
editor_text_prototype.selectNext = function() { return (selectNextJsWrapper_2801805220(this));};

function re_2835349563(text_2835349564) {
  var result_2835349565 = ({impl: null});

  BeforeRet: {
    result_2835349565 = nimCopy(result_2835349565, {impl: new RegExp(toJSStr(text_2835349564), "dg")}, NTI2835349507);
    break BeforeRet;
  };

  return result_2835349565;

}

function matchLen_2835349540(text_2835349541, regex_2835349542, start_2835349543) {
  var result_2835349544 = 0;

    regex_2835349542.impl.lastIndex = 0;
    result_2835349544 = ((regex_2835349542.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2835349541, HEX2EHEX2E_1040187488(start_2835349543, 1))))) || {index:-1}).index;

  return result_2835349544;

}

function selectInside_2801805396(self_2801805397, cursor_2801805398) {
    var regex_2801805399 = re_2835349563([91,97,45,122,65,45,90,48,45,57,95,93]);
    var first_2801805400 = cursor_2801805398.Field1;
    Label1: {
        Label2: while (true) {
        if (!((0 < first_2801805400) && (matchLen_2835349540(self_2801805397.document.lines[chckIndx(cursor_2801805398.Field0, 0, (self_2801805397.document.lines).length - 1)], regex_2801805399, subInt(first_2801805400, 1)) == 1))) break Label2;
          first_2801805400 = subInt(first_2801805400, 1);
        }
    };
    var last_2801805405 = cursor_2801805398.Field1;
    Label3: {
        Label4: while (true) {
        if (!((last_2801805405 < (self_2801805397.document.lines[chckIndx(cursor_2801805398.Field0, 0, (self_2801805397.document.lines).length - 1)]).length) && (matchLen_2835349540(self_2801805397.document.lines[chckIndx(cursor_2801805398.Field0, 0, (self_2801805397.document.lines).length - 1)], regex_2801805399, last_2801805405) == 1))) break Label4;
          last_2801805405 = addInt(last_2801805405, 1);
        }
    };
    selectionHEX3D_2801795574(self_2801805397, {Field0: {Field0: cursor_2801805398.Field0, Field1: first_2801805400}, Field1: {Field0: cursor_2801805398.Field0, Field1: last_2801805405}});

  
}

function selectInsideJsWrapper_2801805392(self_2801805438, cursor_2801805439) {
    selectInside_2801805396(self_2801805438, cursor_2801805439);

  
}
editor_text_prototype.selectInside = function(cursor_ /* : Cursor */) { return (selectInsideJsWrapper_2801805392(this, cursor_));};

function selectInsideCurrent_2801805473(self_2801805474) {
    selectInside_2801805396(self_2801805474, selection_2801795568(self_2801805474).Field1);

  
}

function selectInsideCurrentJsWrapper_2801805469(self_2801805502) {
    selectInsideCurrent_2801805473(self_2801805502);

  
}
editor_text_prototype.selectInsideCurrent = function() { return (selectInsideCurrentJsWrapper_2801805469(this));};

function lineLength_2801795443(self_2801795444, line_2801795445) {
  var result_2801795446 = 0;

  BeforeRet: {
    if ((line_2801795445 < (self_2801795444.document.lines).length)) {
    result_2801795446 = (self_2801795444.document.lines[chckIndx(line_2801795445, 0, (self_2801795444.document.lines).length - 1)]).length;
    break BeforeRet;
    }
    
    result_2801795446 = 0;
    break BeforeRet;
  };

  return result_2801795446;

}

function selectLine_2801805523(self_2801805524, line_2801805525) {
    selectionHEX3D_2801795574(self_2801805524, {Field0: {Field0: line_2801805525, Field1: 0}, Field1: {Field0: line_2801805525, Field1: lineLength_2801795443(self_2801805524, line_2801805525)}});

  
}

function selectLineJsWrapper_2801805519(self_2801805554, line_2801805555) {
    selectLine_2801805523(self_2801805554, line_2801805555);

  
}
editor_text_prototype.selectLine = function(line_ /* : int */) { return (selectLineJsWrapper_2801805519(this, line_));};

function selectLineCurrent_2801805581(self_2801805582) {
    selectLine_2801805523(self_2801805582, selection_2801795568(self_2801805582).Field1.Field0);

  
}

function selectLineCurrentJsWrapper_2801805577(self_2801805610) {
    selectLineCurrent_2801805581(self_2801805610);

  
}
editor_text_prototype.selectLineCurrent = function() { return (selectLineCurrentJsWrapper_2801805577(this));};

function toTsPoint_2868904123(cursor_2868904124) {
  var result_2868904125 = null;

    result_2868904125 = {row: cursor_2868904124.Field0, column: cursor_2868904124.Field1, m_type: NTI2868903950};

  return result_2868904125;

}

function descendantForRange_2868904189(node_2868904190, selection_2868904191) {
  var result_2868904192 = null;

    result_2868904192 = node_2868904190.descendantForPosition(toTsPoint_2868904123(selection_2868904191.Field0), toTsPoint_2868904123(selection_2868904191.Field1));

  return result_2868904192;

}

function startPoint_2868904112(node_2868904113) {
  var result_2868904114 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2868904115 = node_2868904113.startPosition;
    var colontmp__2801805704 = point_2868904115.row;
    var colontmp__2801805705 = point_2868904115.column;
    result_2868904114 = nimCopy(result_2868904114, {Field0: colontmp__2801805704, Field1: colontmp__2801805705}, NTI2231369737);
    break BeforeRet;
  };

  return result_2868904114;

}

function endPoint_2868904116(node_2868904117) {
  var result_2868904118 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var point_2868904119 = node_2868904117.endPosition;
    var colontmp__2801805706 = point_2868904119.row;
    var colontmp__2801805707 = point_2868904119.column;
    result_2868904118 = nimCopy(result_2868904118, {Field0: colontmp__2801805706, Field1: colontmp__2801805707}, NTI2231369737);
    break BeforeRet;
  };

  return result_2868904118;

}

function getRange_2868904120(node_2868904121) {
  var result_2868904122 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801805702 = startPoint_2868904112(node_2868904121);
    var colontmp__2801805703 = endPoint_2868904116(node_2868904121);
    result_2868904122 = nimCopy(result_2868904122, {Field0: nimCopy(null, colontmp__2801805702, NTI2231369737), Field1: nimCopy(null, colontmp__2801805703, NTI2231369737)}, NTI2231369739);

  return result_2868904122;

}

function selectParentTs_2801805631(self_2801805632, selection_2801805633) {
  BeforeRet: {
    if ((self_2801805632.document.currentTree == null)) {
    break BeforeRet;
    }
    
    var node_2801805637 = descendantForRange_2868904189(self_2801805632.document.currentTree.rootNode, selection_2801805633);
    Label1: {
        Label2: while (true) {
        if (!(HEX3DHEX3D_2231369791(getRange_2868904120(node_2801805637), selection_2801805633) && !((node_2801805637 == self_2801805632.document.currentTree.rootNode)))) break Label2;
          node_2801805637 = node_2801805637.parent;
        }
    };
    selectionHEX3D_2801795574(self_2801805632, getRange_2868904120(node_2801805637));
  };

  
}

function selectParentTsJsWrapper_2801805627(self_2801805674, selection_2801805675) {
    selectParentTs_2801805631(self_2801805674, selection_2801805675);

  
}
editor_text_prototype.selectParentTs = function(selection_ /* : Selection */) { return (selectParentTsJsWrapper_2801805627(this, selection_));};

function selectParentCurrentTs_2801805714(self_2801805715) {
    selectParentTs_2801805631(self_2801805715, selection_2801795568(self_2801805715));

  
}

function selectParentCurrentTsJsWrapper_2801805710(self_2801805743) {
    selectParentCurrentTs_2801805714(self_2801805743);

  
}
editor_text_prototype.selectParentCurrentTs = function() { return (selectParentCurrentTsJsWrapper_2801805710(this));};

function newSeq_2231369874(len_2231369876) {
  var result_2231369877 = [];

    result_2231369877 = new Array(len_2231369876); for (var i = 0 ; i < len_2231369876 ; ++i) { result_2231369877[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }
  return result_2231369877;

}

function HEX2A_1023410184(x_1023410185, order_1023410186) {
  var result_1023410187 = 0;

    var y_1023410192 = subInt(order_1023410186, 1);
    result_1023410187 = subInt((x_1023410185 ^ y_1023410192), y_1023410192);

  return result_1023410187;

}

function mergeAlt_2231369903(a_2231369905, b_2231369906, lo_2231369907, m_2231369908, hi_2231369909, cmp_2231369912, order_2231369913) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2231369912(a_2231369905[chckIndx(m_2231369908, 0, (a_2231369905).length - 1)], a_2231369905[chckIndx(addInt(m_2231369908, 1), 0, (a_2231369905).length - 1)]), order_2231369913) <= 0)) {
    break BeforeRet;
    }
    
    var j_2231369914 = lo_2231369907;
    if (!((j_2231369914 <= m_2231369908))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2231369920 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2231369914 <= m_2231369908)) break Label2;
          b_2231369906[chckIndx(bb_2231369920, 0, (b_2231369906).length - 1)] = nimCopy(b_2231369906[chckIndx(bb_2231369920, 0, (b_2231369906).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)], NTI2231369739);
          bb_2231369920 = addInt(bb_2231369920, 1);
          j_2231369914 = addInt(j_2231369914, 1);
        }
    };
    var i_2231369931 = 0;
    var k_2231369932 = lo_2231369907;
    Label3: {
        Label4: while (true) {
        if (!((k_2231369932 < j_2231369914) && (j_2231369914 <= hi_2231369909))) break Label4;
          if ((HEX2A_1023410184(cmp_2231369912(b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)]), order_2231369913) <= 0)) {
          a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], NTI2231369739);
          i_2231369931 = addInt(i_2231369931, 1);
          }
          else {
            a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], a_2231369905[chckIndx(j_2231369914, 0, (a_2231369905).length - 1)], NTI2231369739);
            j_2231369914 = addInt(j_2231369914, 1);
          }
          
          k_2231369932 = addInt(k_2231369932, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2231369932 < j_2231369914)) break Label6;
          a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)] = nimCopy(a_2231369905[chckIndx(k_2231369932, 0, (a_2231369905).length - 1)], b_2231369906[chckIndx(i_2231369931, 0, (b_2231369906).length - 1)], NTI2231369739);
          k_2231369932 = addInt(k_2231369932, 1);
          i_2231369931 = addInt(i_2231369931, 1);
        }
    };
  };

  
}

function sort_2231369862(a_2231369864, cmp_2231369867, order_2231369868) {
    var n_2231369873 = (a_2231369864).length;
    var b_2231369900 = newSeq_2231369874(chckRange(divInt(n_2231369873, 2), 0, 2147483647));
    var s_2231369901 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2231369901 < n_2231369873)) break Label2;
          var m_2231369902 = subInt(subInt(n_2231369873, 1), s_2231369901);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2231369902)) break Label4;
                mergeAlt_2231369903(a_2231369864, b_2231369900, nimMax(addInt(subInt(m_2231369902, s_2231369901), 1), 0), m_2231369902, addInt(m_2231369902, s_2231369901), cmp_2231369867, order_2231369868);
                m_2231369902 = subInt(m_2231369902, mulInt(s_2231369901, 2));
              }
          };
          s_2231369901 = mulInt(s_2231369901, 2);
        }
    };

  
}

function sorted_2231370004(a_2231370006, cmp_2231370009, order_2231370010) {
  var result_2231370011 = [];

    result_2231370011 = nimCopy(null, newSeq_2231369874(chckRange((a_2231370006).length, 0, 2147483647)), NTI2231369787);
    Label1: {
      var i_2231370025 = 0;
      var colontmp__2801805821 = 0;
      colontmp__2801805821 = (a_2231370006).length - 1;
      var res_2801805822 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801805822 <= colontmp__2801805821)) break Label3;
            i_2231370025 = res_2801805822;
            result_2231370011[chckIndx(i_2231370025, 0, (result_2231370011).length - 1)] = nimCopy(result_2231370011[chckIndx(i_2231370025, 0, (result_2231370011).length - 1)], a_2231370006[chckIndx(i_2231370025, 0, (a_2231370006).length - 1)], NTI2231369739);
            res_2801805822 = addInt(res_2801805822, 1);
          }
      };
    };
    sort_2231369862(result_2231370011, cmp_2231370009, order_2231370010);

  return result_2231370011;

}

function HEX3C_2231369834(x_2231369836, y_2231369837) {
  var result_2231369838 = false;

  BeforeRet: {
    var c_2231369848 = cmp_33557727(x_2231369836["Field0"], y_2231369837["Field0"]);
    if ((c_2231369848 < 0)) {
    result_2231369838 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369848)) {
    result_2231369838 = false;
    break BeforeRet;
    }
    
    var c_2231369853 = cmp_33557727(x_2231369836["Field1"], y_2231369837["Field1"]);
    if ((c_2231369853 < 0)) {
    result_2231369838 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369853)) {
    result_2231369838 = false;
    break BeforeRet;
    }
    
    result_2231369838 = false;
    break BeforeRet;
  };

  return result_2231369838;

}

function cmp_2231369825(x_2231369827, y_2231369828) {
  var result_2231369829 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2231369801(x_2231369827, y_2231369828)) {
    result_2231369829 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2231369834(x_2231369827, y_2231369828)) {
    result_2231369829 = -1;
    break BeforeRet;
    }
    
    result_2231369829 = 1;
    break BeforeRet;
  };

  return result_2231369829;

}

function HEX3C_2231369815(x_2231369817, y_2231369818) {
  var result_2231369819 = false;

  BeforeRet: {
    var c_2231369854 = cmp_2231369825(x_2231369817["Field0"], y_2231369818["Field0"]);
    if ((c_2231369854 < 0)) {
    result_2231369819 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369854)) {
    result_2231369819 = false;
    break BeforeRet;
    }
    
    var c_2231369859 = cmp_2231369825(x_2231369817["Field1"], y_2231369818["Field1"]);
    if ((c_2231369859 < 0)) {
    result_2231369819 = true;
    break BeforeRet;
    }
    
    if ((0 < c_2231369859)) {
    result_2231369819 = false;
    break BeforeRet;
    }
    
    result_2231369819 = false;
    break BeforeRet;
  };

  return result_2231369819;

}

function cmp_2231369786(x_2231369788, y_2231369789) {
  var result_2231369790 = 0;

  BeforeRet: {
    if (HEX3DHEX3D_2231369791(x_2231369788, y_2231369789)) {
    result_2231369790 = 0;
    break BeforeRet;
    }
    
    if (HEX3C_2231369815(x_2231369788, y_2231369789)) {
    result_2231369790 = -1;
    break BeforeRet;
    }
    
    result_2231369790 = 1;
    break BeforeRet;
  };

  return result_2231369790;

}

function sorted_2231369993(a_2231369995, order_2231369996) {
  var result_2231369997 = [];

    result_2231369997 = nimCopy(null, sorted_2231370004(a_2231369995, cmp_2231369786, order_2231369996), NTI2231369867);

  return result_2231369997;

}

function normalized_2231369990(self_2231369991) {
  var result_2231369992 = [];

  BeforeRet: {
    result_2231369992 = nimCopy(null, sorted_2231369993(self_2231369991, 1), NTI2231369858);
    break BeforeRet;
  };

  return result_2231369992;

}

function HEX3DHEX3D_2801795827(x_2801795829, y_2801795830) {
  var result_2801795831 = false;

  BeforeRet: {
    var sameObject_2801795838 = false;
    sameObject_2801795838 = x_2801795829 === y_2801795830
    if (sameObject_2801795838) {
    result_2801795831 = true;
    break BeforeRet;
    }
    
    if (!(((x_2801795829).length == (y_2801795830).length))) {
    result_2801795831 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2801795852 = 0;
      var colontmp__2801805830 = 0;
      colontmp__2801805830 = subInt((x_2801795829).length, 1);
      var res_2801805831 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801805831 <= colontmp__2801805830)) break Label3;
            i_2801795852 = res_2801805831;
            if (!(HEX3DHEX3D_2231369791(x_2801795829[chckIndx(i_2801795852, 0, (x_2801795829).length - 1)], y_2801795830[chckIndx(i_2801795852, 0, (y_2801795830).length - 1)]))) {
            result_2801795831 = false;
            break BeforeRet;
            }
            
            res_2801805831 = addInt(res_2801805831, 1);
          }
      };
    };
    result_2801795831 = true;
    break BeforeRet;
  };

  return result_2801795831;

}

function clampAndMergeSelections_2801795561(self_2801795562, selections_2801795563) {
  var result_2801795564 = [];

    result_2801795564 = nimCopy(null, clampAndMergeSelections_2801795483(self_2801795562.document, selections_2801795563), NTI2231369747);

  return result_2801795564;

}

function selectionsHEX3D_2801795824(self_2801795825, selections_2801795826) {
  BeforeRet: {
    if (HEX3DHEX3D_2801795827(self_2801795825.selectionsInternal, selections_2801795826)) {
    break BeforeRet;
    }
    
    addLast_2801795589(self_2801795825.selectionHistory, self_2801795825.selectionsInternal);
    if ((100 < len_2801795728(self_2801795825.selectionHistory))) {
    var _ = popFirst_2801795789(self_2801795825.selectionHistory);
    }
    
    self_2801795825.selectionsInternal = nimCopy(null, clampAndMergeSelections_2801795561(self_2801795825, selections_2801795826), NTI2231369747);
    if (((self_2801795825.selectionsInternal).length == 0)) {
    self_2801795825.selectionsInternal = nimCopy(null, [nimCopy(null, toSelection_2231370221({Field0: 0, Field1: 0}), NTI2231369739)], NTI2801795573);
    }
    
    markDirty_2147483686(self_2801795825);
  };

  
}

function edit_2801799893(self_2801799894, selections_2801799895, oldSelection_2801799896, text_2801799897, notify_2801799898) {
    
function HEX3Aanonymous_2801799900(s_2801799908) {
      var result_2801799911 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801799911 = nimCopy(result_2801799911, normalized_2231370094(s_2801799908), NTI2231369739);

      return result_2801799911;

    }

  var result_2801799899 = [];

    var selections_2801799919 = map_2801795498(selections_2801799895, HEX3Aanonymous_2801799900);
    result_2801799899 = nimCopy(null, delete_2801799170(self_2801799894, selections_2801799919, oldSelection_2801799896, false, true), NTI2801797410);
    result_2801799899 = nimCopy(null, insert_2801799676(self_2801799894, result_2801799899, oldSelection_2801799896, text_2801799897, true, true, true), NTI2801797771);

  return result_2801799899;

}

function insertText_2801805767(self_2801805768, text_2801805769) {
  BeforeRet: {
    if ((self_2801805768.document.singleLine && eqStrings(text_2801805769, [10]))) {
    break BeforeRet;
    }
    
    var selections_2801805770 = normalized_2231369990(selections_2801795565(self_2801805768));
    selectionsHEX3D_2801795824(self_2801805768, edit_2801799893(self_2801805768.document, selections_2801795565(self_2801805768), selections_2801795565(self_2801805768), text_2801805769, true));
    updateTargetColumn_2801804235(self_2801805768, 3);
    if ((eqStrings(text_2801805769, [46]) || eqStrings(text_2801805769, [44]))) {
    self_2801805768.showCompletions = true;
    var _ = getCompletionsAsync_2801805758(self_2801805768);
    }
    else {
    if (self_2801805768.showCompletions) {
    var _ = getCompletionsAsync_2801805758(self_2801805768);
    }
    }
  };

  
}

function insertTextJsWrapper_2801805763(self_2801805799, text_2801805800) {
    insertText_2801805767(self_2801805799, text_2801805800);

  
}
editor_text_prototype.insertText = function(text_ /* : string */) { return (insertTextJsWrapper_2801805763(this, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function none_2801799988() {
  var result_2801799995 = ({val: [], has: false});

  return result_2801799995;

}

function pop_2801799999(s_2801800001, s_2801800001_Idx) {
  var result_2801800002 = null;

    var L_2801800006 = subInt((s_2801800001[s_2801800001_Idx]).length, 1);
    result_2801800002 = s_2801800001[s_2801800001_Idx][chckIndx(L_2801800006, 0, (s_2801800001[s_2801800001_Idx]).length - 1)];
    if (s_2801800001[s_2801800001_Idx].length < chckRange(L_2801800006, 0, 2147483647)) { for (var i = s_2801800001[s_2801800001_Idx].length ; i < chckRange(L_2801800006, 0, 2147483647) ; ++i) s_2801800001[s_2801800001_Idx].push(null); }
               else { s_2801800001[s_2801800001_Idx].length = chckRange(L_2801800006, 0, 2147483647); };

  return result_2801800002;

}

function some_2801800012(val_2801800014) {
  var result_2801800015 = ({val: [], has: false});

    result_2801800015.has = true;
    result_2801800015.val = nimCopy(null, val_2801800014, NTI2801797956);

  return result_2801800015;

}

function doUndo_2801799929(document_2801799930, op_2801799931, oldSelection_2801799932, useOldSelection_2801799933, redoOps_2801799934, redoOps_2801799934_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
        var Temporary8;
              var Temporary11;
              var Temporary12;
              var Temporary13;

  var result_2801799935 = [];

    switch (op_2801799931.kind) {
    case 0:
      var Temporary1 = op_2801799931;
      if (ConstSet30[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2801795075)); }
      var text_2801799936 = contentString_2801796225(document_2801799930, Temporary1.selection);
      var Temporary2 = op_2801799931;
      if (ConstSet31[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2801795075)); }
      result_2801799935 = nimCopy(null, delete_2801799170(document_2801799930, [nimCopy(null, Temporary2.selection, NTI2231369739)], op_2801799931.oldSelection, true, false), NTI2801797410);
      var Temporary3 = op_2801799931;
      if (ConstSet32[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2801795075)); }
      redoOps_2801799934[redoOps_2801799934_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2231369737), text: nimCopy(null, text_2801799936, NTI33554449), oldSelection: HEX40_2801799177(oldSelection_2801799932), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2801799931;
      if (ConstSet33[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2801795075)); }
      var Temporary5 = op_2801799931;
      if (ConstSet34[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2801795075)); }
      var selections_2801799944 = insert_2801799676(document_2801799930, [nimCopy(null, toSelection_2231370221(Temporary4.cursor), NTI2231369739)], op_2801799931.oldSelection, Temporary5.text, true, false, false);
      result_2801799935 = nimCopy(null, selections_2801799944, NTI2801797771);
      var Temporary6 = op_2801799931;
      if (ConstSet35[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2801795075)); }
      redoOps_2801799934[redoOps_2801799934_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary6.cursor, NTI2231369737), Field1: nimCopy(null, selections_2801799944[chckIndx(0, 0, (selections_2801799944).length - 1)].Field1, NTI2231369737)}, NTI2231369739), oldSelection: HEX40_2801799177(oldSelection_2801799932), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2801799935 = nimCopy(null, op_2801799931.oldSelection, NTI2801795079);
      var redoOp_2801799955 = {kind: 2, oldSelection: HEX40_2801799177(oldSelection_2801799932), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label7: {
        var i_2801799964 = 0;
        var colontmp__2801805932 = 0;
        var Temporary8 = op_2801799931;
        if (ConstSet36[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI2801795075)); }
        colontmp__2801805932 = (Temporary8.children).length - 1;
        var res_2801805933 = colontmp__2801805932;
        Label9: {
            Label10: while (true) {
            if (!(0 <= res_2801805933)) break Label10;
              i_2801799964 = res_2801805933;
              var Temporary11 = op_2801799931;
              if (ConstSet37[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI2801795075)); }
              var Temporary13 = redoOp_2801799955;
              if (ConstSet38[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI2801795075)); }
              var _ = doUndo_2801799929(document_2801799930, (Temporary12 = Temporary11.children, Temporary12)[chckIndx(i_2801799964, 0, (Temporary12).length - 1)], oldSelection_2801799932, useOldSelection_2801799933, Temporary13, "children");
              res_2801805933 = subInt(res_2801805933, 1);
            }
        };
      };
      redoOps_2801799934[redoOps_2801799934_Idx].push(redoOp_2801799955);;
      break;
    }
    if (useOldSelection_2801799933) {
    result_2801799935 = nimCopy(null, op_2801799931.oldSelection, NTI2801795079);
    }
    

  return result_2801799935;

}

function undo_2801799978(document_2801799979, oldSelection_2801799980, useOldSelection_2801799981) {
  var result_2801799987 = ({val: [], has: false});

  BeforeRet: {
    result_2801799987 = nimCopy(result_2801799987, none_2801799988(), NTI2801798031);
    if (((document_2801799979.undoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2801800011 = pop_2801799999(document_2801799979, "undoOps");
    result_2801799987 = nimCopy(result_2801799987, some_2801800012(doUndo_2801799929(document_2801799979, op_2801800011, oldSelection_2801799980, useOldSelection_2801799981, document_2801799979, "redoOps")), NTI2801798031);
    break BeforeRet;
  };

  return result_2801799987;

}

function isSome_2801805848(self_2801805850) {
  var result_2801805851 = false;

    result_2801805851 = self_2801805850.has;

  return result_2801805851;

}

function isNone_2801805873(self_2801805875) {
  var result_2801805876 = false;

    result_2801805876 = !(self_2801805875.has);

  return result_2801805876;

}

function get_2801805865(self_2801805867) {
  var result_2801805868 = [];

    if (isNone_2801805873(self_2801805867)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801805868 = self_2801805867["val"];

  return result_2801805868;

}

function undo_2801805839(self_2801805840) {
      var Temporary1;

      var oHEX60gensym353_2801805843 = undo_2801799978(self_2801805840.document, selections_2801795565(self_2801805840), true);
      if (!isSome_2801805848(oHEX60gensym353_2801805843)) Temporary1 = false; else {        var selections_2801805888 = nimCopy(null, get_2801805865(oHEX60gensym353_2801805843), NTI2801798026);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2801795824(self_2801805840, selections_2801805888);
    }
    

  
}

function undoJsWrapper_2801805835(self_2801805916) {
    undo_2801805839(self_2801805916);

  
}
editor_text_prototype.undo = function() { return (undoJsWrapper_2801805835(this));};

function doRedo_2801800026(document_2801800027, op_2801800028, oldSelection_2801800029, useOldSelection_2801800030, undoOps_2801800031, undoOps_2801800031_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
        var Temporary9;
              var Temporary12;
              var Temporary13;
              var Temporary14;

  var result_2801800032 = [];

    switch (op_2801800028.kind) {
    case 0:
      var Temporary1 = op_2801800028;
      if (ConstSet39[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2801795075)); }
      var text_2801800033 = contentString_2801796225(document_2801800027, Temporary1.selection);
      var Temporary2 = op_2801800028;
      if (ConstSet40[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2801795075)); }
      result_2801800032 = nimCopy(null, delete_2801799170(document_2801800027, [nimCopy(null, Temporary2.selection, NTI2231369739)], op_2801800028.oldSelection, true, false), NTI2801797410);
      var Temporary3 = op_2801800028;
      if (ConstSet41[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'selection\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2801795075)); }
      undoOps_2801800031[undoOps_2801800031_Idx].push({kind: 1, cursor: nimCopy(null, Temporary3.selection.Field0, NTI2231369737), text: nimCopy(null, text_2801800033, NTI33554449), oldSelection: HEX40_2801799177(oldSelection_2801800029), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, children: []});;
      break;
    case 1:
      var Temporary4 = op_2801800028;
      if (ConstSet42[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2801795075)); }
      var Temporary5 = op_2801800028;
      if (ConstSet43[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI2801795075)); }
      var Temporary6 = op_2801800028;
      if (ConstSet44[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'text\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI2801795075)); }
      result_2801800032 = nimCopy(null, insert_2801799676(document_2801800027, [nimCopy(null, toSelection_2231370221(Temporary4.cursor), NTI2231369739)], [nimCopy(null, toSelection_2231370221(Temporary5.cursor), NTI2231369739)], Temporary6.text, true, false, false), NTI2801797771);
      var Temporary7 = op_2801800028;
      if (ConstSet45[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'cursor\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI2801795075)); }
      undoOps_2801800031[undoOps_2801800031_Idx].push({kind: 0, selection: nimCopy(null, {Field0: nimCopy(null, Temporary7.cursor, NTI2231369737), Field1: nimCopy(null, result_2801800032[chckIndx(0, 0, (result_2801800032).length - 1)].Field1, NTI2231369737)}, NTI2231369739), oldSelection: HEX40_2801799177(oldSelection_2801800029), cursor: {Field0: 0, Field1: 0}, text: [], children: []});;
      break;
    case 2:
      result_2801800032 = nimCopy(null, op_2801800028.oldSelection, NTI2801795079);
      var undoOp_2801800051 = {kind: 2, oldSelection: HEX40_2801799177(oldSelection_2801800029), selection: {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}, cursor: {Field0: 0, Field1: 0}, text: [], children: []};
      Label8: {
        var i_2801800060 = 0;
        var colontmp__2801806012 = 0;
        var Temporary9 = op_2801800028;
        if (ConstSet46[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI2801795075)); }
        colontmp__2801806012 = (Temporary9.children).length - 1;
        var res_2801806013 = colontmp__2801806012;
        Label10: {
            Label11: while (true) {
            if (!(0 <= res_2801806013)) break Label11;
              i_2801800060 = res_2801806013;
              var Temporary12 = op_2801800028;
              if (ConstSet47[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI2801795075)); }
              var Temporary14 = undoOp_2801800051;
              if (ConstSet48[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'children\' is not accessible for type \'UndoOp\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI2801795075)); }
              var _ = doRedo_2801800026(document_2801800027, (Temporary13 = Temporary12.children, Temporary13)[chckIndx(i_2801800060, 0, (Temporary13).length - 1)], oldSelection_2801800029, useOldSelection_2801800030, Temporary14, "children");
              res_2801806013 = subInt(res_2801806013, 1);
            }
        };
      };
      undoOps_2801800031[undoOps_2801800031_Idx].push(undoOp_2801800051);;
      break;
    }
    if (useOldSelection_2801800030) {
    result_2801800032 = nimCopy(null, op_2801800028.oldSelection, NTI2801795079);
    }
    

  return result_2801800032;

}

function redo_2801800065(document_2801800066, oldSelection_2801800067, useOldSelection_2801800068) {
  var result_2801800070 = ({val: [], has: false});

  BeforeRet: {
    result_2801800070 = nimCopy(result_2801800070, none_2801799988(), NTI2801798031);
    if (((document_2801800066.redoOps).length == 0)) {
    break BeforeRet;
    }
    
    var op_2801800084 = pop_2801799999(document_2801800066, "redoOps");
    result_2801800070 = nimCopy(result_2801800070, some_2801800012(doRedo_2801800026(document_2801800066, op_2801800084, oldSelection_2801800067, useOldSelection_2801800068, document_2801800066, "undoOps")), NTI2801798031);
    break BeforeRet;
  };

  return result_2801800070;

}

function redo_2801805941(self_2801805942) {
      var Temporary1;

      var oHEX60gensym363_2801805945 = redo_2801800065(self_2801805942.document, selections_2801795565(self_2801805942), true);
      if (!isSome_2801805848(oHEX60gensym363_2801805945)) Temporary1 = false; else {        var selections_2801805968 = nimCopy(null, get_2801805865(oHEX60gensym363_2801805945), NTI2801798026);
        Temporary1 = true;      }    if (Temporary1) {
    selectionsHEX3D_2801795824(self_2801805942, selections_2801805968);
    }
    

  
}

function redoJsWrapper_2801805937(self_2801805996) {
    redo_2801805941(self_2801805996);

  
}
editor_text_prototype.redo = function() { return (redoJsWrapper_2801805937(this));};

function HEX2BHEX3D_855640304(x_855640306, x_855640306_Idx, y_855640307) {
    x_855640306[x_855640306_Idx] = (x_855640306[x_855640306_Idx] + y_855640307);

  
}

function scrollText_2801806021(self_2801806022, amount_2801806023) {
    HEX2BHEX3D_855640304(self_2801806022, "scrollOffset", amount_2801806023);
    markDirty_2147483686(self_2801806022);

  
}

function scrollTextJsWrapper_2801806017(self_2801806056, amount_2801806057) {
    scrollText_2801806021(self_2801806056, amount_2801806057);

  
}
editor_text_prototype.scrollText = function(amount_ /* : float32 */) { return (scrollTextJsWrapper_2801806017(this, amount_));};

function clampCursor_2801795471(self_2801795472, cursor_2801795473) {
  var result_2801795474 = {Field0: 0, Field1: 0};

    result_2801795474 = nimCopy(result_2801795474, clampCursor_2801795450(self_2801795472.document, cursor_2801795473), NTI2231369737);

  return result_2801795474;

}

function doMoveCursorColumn_2801803118(self_2801803119, cursor_2801803120, offset_2801803121) {
  var result_2801803122 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2801803123 = nimCopy(null, cursor_2801803120, NTI2231369737);
    var column_2801803124 = addInt(cursor_2801803123.Field1, offset_2801803121);
    if ((column_2801803124 < 0)) {
    if ((0 < cursor_2801803123.Field0)) {
    cursor_2801803123.Field0 = subInt(cursor_2801803123.Field0, 1);
    cursor_2801803123.Field1 = lineLength_2801795443(self_2801803119, cursor_2801803123.Field0);
    }
    else {
      cursor_2801803123.Field1 = 0;
    }
    
    }
    else {
    if ((lineLength_2801795443(self_2801803119, cursor_2801803123.Field0) < column_2801803124)) {
    if ((cursor_2801803123.Field0 < subInt((self_2801803119.document.lines).length, 1))) {
    cursor_2801803123.Field0 = addInt(cursor_2801803123.Field0, 1);
    cursor_2801803123.Field1 = 0;
    }
    else {
      cursor_2801803123.Field1 = lineLength_2801795443(self_2801803119, cursor_2801803123.Field0);
    }
    
    }
    else {
      cursor_2801803123.Field1 = column_2801803124;
    }
    }
    result_2801803122 = nimCopy(result_2801803122, clampCursor_2801795471(self_2801803119, cursor_2801803123), NTI2231369737);
    break BeforeRet;
  };

  return result_2801803122;

}

function HEX26_2801806151(x_2801806153, y_2801806154) {
  var result_2801806155 = [];

    result_2801806155 = new Array(chckRange(addInt((x_2801806153).length, (y_2801806154).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_2801806153).length, (y_2801806154).length), 0, 2147483647) ; ++i) { result_2801806155[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801806173 = 0;
      var colontmp__2801806228 = 0;
      colontmp__2801806228 = subInt((x_2801806153).length, 1);
      var res_2801806229 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801806229 <= colontmp__2801806228)) break Label3;
            i_2801806173 = res_2801806229;
            result_2801806155[chckIndx(i_2801806173, 0, (result_2801806155).length - 1)] = nimCopy(result_2801806155[chckIndx(i_2801806173, 0, (result_2801806155).length - 1)], x_2801806153[chckIndx(i_2801806173, 0, (x_2801806153).length - 1)], NTI2231369739);
            res_2801806229 = addInt(res_2801806229, 1);
          }
      };
    };
    Label4: {
      var i_2801806181 = 0;
      var colontmp__2801806232 = 0;
      colontmp__2801806232 = subInt((y_2801806154).length, 1);
      var res_2801806233 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2801806233 <= colontmp__2801806232)) break Label6;
            i_2801806181 = res_2801806233;
            result_2801806155[chckIndx(addInt(i_2801806181, (x_2801806153).length), 0, (result_2801806155).length - 1)] = nimCopy(result_2801806155[chckIndx(addInt(i_2801806181, (x_2801806153).length), 0, (result_2801806155).length - 1)], y_2801806154[chckIndx(i_2801806181, 0, (y_2801806154).length - 1)], NTI2231369739);
            res_2801806233 = addInt(res_2801806233, 1);
          }
      };
    };

  return result_2801806155;

}

function duplicateLastSelection_2801806141(self_2801806142) {
    var Temporary1;

    var newSelection_2801806146 = toSelection_2231370221(doMoveCursorColumn_2801803118(self_2801806142, (Temporary1 = selections_2801795565(self_2801806142), Temporary1)[chckIndx((selections_2801795565(self_2801806142)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    selectionsHEX3D_2801795824(self_2801806142, HEX26_2801806151(selections_2801795565(self_2801806142), [nimCopy(null, newSelection_2801806146, NTI2231369739)]));

  
}

function duplicateLastSelectionJsWrapper_2801806137(self_2801806212) {
    duplicateLastSelection_2801806141(self_2801806212);

  
}
editor_text_prototype.duplicateLastSelection = function() { return (duplicateLastSelectionJsWrapper_2801806137(this));};

function doMoveCursorLine_2801803128(self_2801803129, cursor_2801803130, offset_2801803131) {
  var result_2801803132 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var cursor_2801803133 = nimCopy(null, cursor_2801803130, NTI2231369737);
    var line_2801803134 = addInt(cursor_2801803133.Field0, offset_2801803131);
    if ((line_2801803134 < 0)) {
    var colontmp__2801806297 = 0;
    var colontmp__2801806298 = cursor_2801803133.Field1;
    cursor_2801803133 = nimCopy(cursor_2801803133, {Field0: colontmp__2801806297, Field1: colontmp__2801806298}, NTI2231369737);
    }
    else {
    if (((self_2801803129.document.lines).length <= line_2801803134)) {
    var colontmp__2801806299 = subInt((self_2801803129.document.lines).length, 1);
    var colontmp__2801806300 = cursor_2801803133.Field1;
    cursor_2801803133 = nimCopy(cursor_2801803133, {Field0: colontmp__2801806299, Field1: colontmp__2801806300}, NTI2231369737);
    }
    else {
      cursor_2801803133.Field0 = line_2801803134;
      cursor_2801803133.Field1 = self_2801803129.targetColumn;
    }
    }
    result_2801803132 = nimCopy(result_2801803132, clampCursor_2801795471(self_2801803129, cursor_2801803133), NTI2231369737);
    break BeforeRet;
  };

  return result_2801803132;

}

function addCursorBelow_2801806241(self_2801806242) {
    var Temporary1;

    var newCursor_2801806246 = toSelection_2231370221(doMoveCursorLine_2801803128(self_2801806242, (Temporary1 = selections_2801795565(self_2801806242), Temporary1)[chckIndx((selections_2801795565(self_2801806242)).length - 1, 0, (Temporary1).length - 1)].Field1, 1));
    if (!(contains_2231370198(selections_2801795565(self_2801806242), newCursor_2801806246))) {
    selectionsHEX3D_2801795824(self_2801806242, HEX26_2801806151(selections_2801795565(self_2801806242), [nimCopy(null, newCursor_2801806246, NTI2231369739)]));
    }
    

  
}

function addCursorBelowJsWrapper_2801806237(self_2801806282) {
    addCursorBelow_2801806241(self_2801806282);

  
}
editor_text_prototype.addCursorBelow = function() { return (addCursorBelowJsWrapper_2801806237(this));};

function addCursorAbove_2801806307(self_2801806308) {
    var Temporary1;

    var newCursor_2801806312 = toSelection_2231370221(doMoveCursorLine_2801803128(self_2801806308, (Temporary1 = selections_2801795565(self_2801806308), Temporary1)[chckIndx((selections_2801795565(self_2801806308)).length - 1, 0, (Temporary1).length - 1)].Field1, -1));
    if (!(contains_2231370198(selections_2801795565(self_2801806308), newCursor_2801806312))) {
    selectionsHEX3D_2801795824(self_2801806308, HEX26_2801806151(selections_2801795565(self_2801806308), [nimCopy(null, newCursor_2801806312, NTI2231369739)]));
    }
    

  
}

function addCursorAboveJsWrapper_2801806303(self_2801806348) {
    addCursorAbove_2801806307(self_2801806348);

  
}
editor_text_prototype.addCursorAbove = function() { return (addCursorAboveJsWrapper_2801806303(this));};

function hash_1325400236(x_1325400238) {
  var result_1325400239 = 0;

    result_1325400239 = hashWangYi1_1325400244(x_1325400238);

  return result_1325400239;

}

function rawGet_2801800872(t_2801800875, key_2801800876, hc_2801800877, hc_2801800877_Idx) {
  var result_2801800878 = 0;

  BeforeRet: {
    hc_2801800877[hc_2801800877_Idx] = hash_1325400236(key_2801800876);
    if ((hc_2801800877[hc_2801800877_Idx] == 0)) {
    hc_2801800877[hc_2801800877_Idx] = 314159265;
    }
    
    if (((t_2801800875.data).length == 0)) {
    result_2801800878 = -1;
    break BeforeRet;
    }
    
    var h_2801800937 = (hc_2801800877[hc_2801800877_Idx] & (t_2801800875.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801800875.data[chckIndx(h_2801800937, 0, (t_2801800875.data).length - 1)].Field0)) break Label2;
          if (((t_2801800875.data[chckIndx(h_2801800937, 0, (t_2801800875.data).length - 1)].Field0 == hc_2801800877[hc_2801800877_Idx]) && (t_2801800875.data[chckIndx(h_2801800937, 0, (t_2801800875.data).length - 1)].Field1 == key_2801800876))) {
          result_2801800878 = h_2801800937;
          break BeforeRet;
          }
          
          h_2801800937 = nextTry_1308622883(h_2801800937, (t_2801800875.data).length - 1);
        }
    };
    result_2801800878 = subInt(-1, h_2801800937);
  };

  return result_2801800878;

}

function hasKey_2801806434(t_2801806437, key_2801806438) {
  var result_2801806439 = false;

    var hc_2801806440 = [0];
    result_2801806439 = (0 <= rawGet_2801800872(t_2801806437, key_2801806438, hc_2801806440, 0));

  return result_2801806439;

}

function contains_2801806428(t_2801806431, key_2801806432) {
  var result_2801806433 = false;

  BeforeRet: {
    result_2801806433 = hasKey_2801806434(t_2801806431, key_2801806432);
    break BeforeRet;
  };

  return result_2801806433;

}

function raiseKeyError_1291850841(key_1291850843) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_369098760(key_1291850843) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2801806520(t_2801806523, key_2801806524) {
  var result_2801806525 = null;
  var result_2801806525_Idx = 0;

    var hcHEX60gensym22_2801806526 = [0];
    var indexHEX60gensym22_2801806533 = rawGet_2801800872(t_2801806523, key_2801806524, hcHEX60gensym22_2801806526, 0);
    if ((0 <= indexHEX60gensym22_2801806533)) {
    result_2801806525 = t_2801806523.data[chckIndx(indexHEX60gensym22_2801806533, 0, (t_2801806523.data).length - 1)]; result_2801806525_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850841(key_2801806524);
    }
    

  return [result_2801806525, result_2801806525_Idx];

}

function HEX3C_2231370055(a_2231370056, b_2231370057) {
  var result_2231370058 = false;

  BeforeRet: {
    if ((a_2231370056.Field0 < b_2231370057.Field0)) {
    result_2231370058 = true;
    break BeforeRet;
    }
    else {
    if (((a_2231370056.Field0 == b_2231370057.Field0) && (a_2231370056.Field1 < b_2231370057.Field1))) {
    result_2231370058 = true;
    break BeforeRet;
    }
    else {
      result_2231370058 = false;
      break BeforeRet;
    }
    }
  };

  return result_2231370058;

}

function getPrevFindResult_2801803151(self_2801803152, cursor_2801803153, offset_2801803154) {
            var Temporary4;

  var result_2801806373 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2801806374 = 0;
    Label1: {
      var line_2801806380 = 0;
      var res_2801806692 = cursor_2801803153.Field0;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2801806692)) break Label3;
            line_2801806380 = res_2801806692;
            if (contains_2801806428(self_2801803152.searchResults, line_2801806380)) {
            var selections_2801806610 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2801806520(self_2801803152.searchResults, line_2801806380), Temporary4)[0][Temporary4[1]], NTI2801795304);
            Label5: {
              var k_2801806619 = 0;
              var colontmp__2801806689 = 0;
              colontmp__2801806689 = (selections_2801806610).length - 1;
              var res_2801806690 = colontmp__2801806689;
              Label6: {
                  Label7: while (true) {
                  if (!(0 <= res_2801806690)) break Label7;
                    k_2801806619 = res_2801806690;
                    if (HEX3C_2231370055(selections_2801806610[chckIndx(k_2801806619, 0, (selections_2801806610).length - 1)].Field1, cursor_2801803153)) {
                    if ((i_2801806374 == offset_2801803154)) {
                    result_2801806373 = nimCopy(result_2801806373, selections_2801806610[chckIndx(k_2801806619, 0, (selections_2801806610).length - 1)], NTI2231369739);
                    break BeforeRet;
                    }
                    
                    i_2801806374 = addInt(i_2801806374, 1);
                    }
                    
                    res_2801806690 = subInt(res_2801806690, 1);
                  }
              };
            };
            }
            
            res_2801806692 = subInt(res_2801806692, 1);
          }
      };
    };
    result_2801806373 = nimCopy(result_2801806373, toSelection_2231370221(cursor_2801803153), NTI2231369739);
    break BeforeRet;
  };

  return result_2801806373;

}

function getPrevFindResultJsWrapper_2801806365(self_2801806655, cursor_2801806656, offset_2801806657) {
  var result_2801806658 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801806658 = nimCopy(result_2801806658, getPrevFindResult_2801803151(self_2801806655, cursor_2801806656, offset_2801806657), NTI2231369739);

  return result_2801806658;

}
editor_text_prototype.getPrevFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getPrevFindResultJsWrapper_2801806365(this, cursor_, offset_));};

function getNextFindResult_2801803155(self_2801803156, cursor_2801803157, offset_2801803158) {
              var Temporary5;

  var result_2801806705 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var i_2801806706 = 0;
    Label1: {
      var line_2801806714 = 0;
      var colontmp__2801806923 = 0;
      colontmp__2801806923 = (self_2801803156.document.lines).length - 1;
      var res_2801806924 = cursor_2801803157.Field0;
      Label2: {
          Label3: while (true) {
          if (!(res_2801806924 <= colontmp__2801806923)) break Label3;
            line_2801806714 = res_2801806924;
            if (contains_2801806428(self_2801803156.searchResults, line_2801806714)) {
            Label4: {
              var selection_2801806848 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
              var colontmp__2801806918 = [];
              colontmp__2801806918 = (Temporary5 = HEX5BHEX5D_2801806520(self_2801803156.searchResults, line_2801806714), Temporary5)[0][Temporary5[1]];
              var i_2801806920 = 0;
              var L_2801806921 = (colontmp__2801806918).length;
              Label6: {
                  Label7: while (true) {
                  if (!(i_2801806920 < L_2801806921)) break Label7;
                    selection_2801806848 = colontmp__2801806918[chckIndx(i_2801806920, 0, (colontmp__2801806918).length - 1)];
                    if (HEX3C_2231370055(cursor_2801803157, selection_2801806848.Field0)) {
                    if ((i_2801806706 == offset_2801803158)) {
                    result_2801806705 = nimCopy(result_2801806705, selection_2801806848, NTI2231369739);
                    break BeforeRet;
                    }
                    
                    i_2801806706 = addInt(i_2801806706, 1);
                    }
                    
                    i_2801806920 = addInt(i_2801806920, 1);
                    if (!(((colontmp__2801806918).length == L_2801806921))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            }
            
            res_2801806924 = addInt(res_2801806924, 1);
          }
      };
    };
    result_2801806705 = nimCopy(result_2801806705, toSelection_2231370221(cursor_2801803157), NTI2231369739);
    break BeforeRet;
  };

  return result_2801806705;

}

function getNextFindResultJsWrapper_2801806697(self_2801806884, cursor_2801806885, offset_2801806886) {
  var result_2801806887 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801806887 = nimCopy(result_2801806887, getNextFindResult_2801803155(self_2801806884, cursor_2801806885, offset_2801806886), NTI2231369739);

  return result_2801806887;

}
editor_text_prototype.getNextFindResult = function(cursor_ /* : Cursor */, offset_ /* : int */) { return (getNextFindResultJsWrapper_2801806697(this, cursor_, offset_));};

function addNextFindResultToSelection_2801806932(self_2801806933) {
    selectionsHEX3D_2801795824(self_2801806933, HEX26_2801806151(selections_2801795565(self_2801806933), [nimCopy(null, getNextFindResult_2801803155(self_2801806933, selection_2801795568(self_2801806933).Field1, 0), NTI2231369739)]));

  
}

function addNextFindResultToSelectionJsWrapper_2801806928(self_2801806969) {
    addNextFindResultToSelection_2801806932(self_2801806969);

  
}
editor_text_prototype.addNextFindResultToSelection = function() { return (addNextFindResultToSelectionJsWrapper_2801806928(this));};

function addPrevFindResultToSelection_2801806990(self_2801806991) {
    selectionsHEX3D_2801795824(self_2801806991, HEX26_2801806151(selections_2801795565(self_2801806991), [nimCopy(null, getPrevFindResult_2801803151(self_2801806991, selection_2801795568(self_2801806991).Field0, 0), NTI2231369739)]));

  
}

function addPrevFindResultToSelectionJsWrapper_2801806986(self_2801807027) {
    addPrevFindResultToSelection_2801806990(self_2801807027);

  
}
editor_text_prototype.addPrevFindResultToSelection = function() { return (addPrevFindResultToSelectionJsWrapper_2801806986(this));};

function len_2801807108(t_2801807111) {
  var result_2801807112 = 0;

    result_2801807112 = t_2801807111.counter;

  return result_2801807112;

}

function setAllFindResultToSelection_2801807048(self_2801807049) {
    var selections_2801807054 = [];
    Label1: {
      var searchResults_2801807326 = [];
      var L_2801807395 = len_2801807108(self_2801807049.searchResults);
      Label2: {
        var h_2801807397 = 0;
        var colontmp__2801807398 = 0;
        colontmp__2801807398 = (self_2801807049.searchResults.data).length - 1;
        var res_2801807399 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2801807399 <= colontmp__2801807398)) break Label4;
              h_2801807397 = res_2801807399;
              if (isFilled_1308622880(self_2801807049.searchResults.data[chckIndx(h_2801807397, 0, (self_2801807049.searchResults.data).length - 1)].Field0)) {
              searchResults_2801807326 = self_2801807049.searchResults.data[chckIndx(h_2801807397, 0, (self_2801807049.searchResults.data).length - 1)]["Field2"];
              Label5: {
                var s_2801807330 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                var i_2801807388 = 0;
                var L_2801807389 = (searchResults_2801807326).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_2801807388 < L_2801807389)) break Label7;
                      s_2801807330 = searchResults_2801807326[chckIndx(i_2801807388, 0, (searchResults_2801807326).length - 1)];
                      var Temporary8 = nimCopy(null, s_2801807330, NTI2231369739);
                      selections_2801807054.push(Temporary8);;
                      i_2801807388 = addInt(i_2801807388, 1);
                      if (!(((searchResults_2801807326).length == L_2801807389))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              if (!((len_2801807108(self_2801807049.searchResults) == L_2801807395))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2801807399 = addInt(res_2801807399, 1);
            }
        };
      };
    };
    selectionsHEX3D_2801795824(self_2801807049, selections_2801807054);

  
}

function setAllFindResultToSelectionJsWrapper_2801807044(self_2801807371) {
    setAllFindResultToSelection_2801807048(self_2801807371);

  
}
editor_text_prototype.setAllFindResultToSelection = function() { return (setAllFindResultToSelectionJsWrapper_2801807044(this));};

function map_2801803372(s_2801803375, op_2801803377) {
  var result_2801803378 = [];

    result_2801803378 = new Array(chckRange((s_2801803375).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_2801803375).length, 0, 2147483647) ; ++i) { result_2801803378[i] = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}; }    Label1: {
      var i_2801803393 = 0;
      var colontmp__2801807506 = 0;
      colontmp__2801807506 = (s_2801803375).length;
      var i_2801807507 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801807507 < colontmp__2801807506)) break Label3;
            i_2801803393 = i_2801807507;
            result_2801803378[chckIndx(i_2801803393, 0, (result_2801803378).length - 1)] = nimCopy(result_2801803378[chckIndx(i_2801803393, 0, (result_2801803378).length - 1)], op_2801803377(s_2801803375[chckIndx(i_2801803393, 0, (s_2801803375).length - 1)]), NTI2801799687);
            i_2801807507 = addInt(i_2801807507, 1);
          }
      };
    };

  return result_2801803378;

}

function moveCursor_2801803317(self_2801803318, cursor_2801803319, movement_2801803324, offset_2801803325, all_2801803326) {
      
function HEX3Aanonymous_2801803337(s_2801803344) {
        var result_2801803347 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801803347 = nimCopy(result_2801803347, toSelection_2231370221(movement_2801803324(self_2801803318, s_2801803344.Field1, offset_2801803325)), NTI2231369739);

        return result_2801803347;

      }
      
function HEX3Aanonymous_2801803361(s_2801803368) {
        var result_2801803371 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2801807493 = movement_2801803324(self_2801803318, s_2801803368.Field0, offset_2801803325);
          var colontmp__2801807494 = nimCopy(null, s_2801803368.Field1, NTI2231369737);
          result_2801803371 = nimCopy(result_2801803371, {Field0: nimCopy(null, colontmp__2801807493, NTI2231369737), Field1: nimCopy(null, colontmp__2801807494, NTI2231369737)}, NTI2801799687);

        return result_2801803371;

      }
      
function HEX3Aanonymous_2801803404(s_2801803411) {
        var result_2801803414 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2801807497 = nimCopy(null, s_2801803411.Field0, NTI2231369737);
          var colontmp__2801807498 = movement_2801803324(self_2801803318, s_2801803411.Field1, offset_2801803325);
          result_2801803414 = nimCopy(result_2801803414, {Field0: nimCopy(null, colontmp__2801807497, NTI2231369737), Field1: nimCopy(null, colontmp__2801807498, NTI2231369737)}, NTI2801799729);

        return result_2801803414;

      }
      
function HEX3Aanonymous_2801803431(s_2801803438) {
        var result_2801803441 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          var colontmp__2801807501 = nimCopy(null, s_2801803438.Field1, NTI2231369737);
          var colontmp__2801807502 = movement_2801803324(self_2801803318, s_2801803438.Field1, offset_2801803325);
          result_2801803441 = nimCopy(result_2801803441, {Field0: nimCopy(null, colontmp__2801807501, NTI2231369737), Field1: nimCopy(null, colontmp__2801807502, NTI2231369737)}, NTI2801799761);

        return result_2801803441;

      }

    switch (cursor_2801803319) {
    case 0:
      var configCursor_2801803336 = getOption_2801803256(self_2801803318.editor, getContextWithMode_2801803222(self_2801803318, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1);
      moveCursor_2801803317(self_2801803318, configCursor_2801803336, movement_2801803324, offset_2801803325, all_2801803326);
      break;
    case 1:
      if (all_2801803326) {
      selectionsHEX3D_2801795824(self_2801803318, map_2801795498(selections_2801795565(self_2801803318), HEX3Aanonymous_2801803337));
      }
      else {
        var selections_2801803354 = selections_2801795565(self_2801803318);
        selections_2801803354[chckIndx((selections_2801803354).length - 1, 0, (selections_2801803354).length - 1)] = nimCopy(selections_2801803354[chckIndx((selections_2801803354).length - 1, 0, (selections_2801803354).length - 1)], toSelection_2231370221(movement_2801803324(self_2801803318, selections_2801803354[chckIndx((selections_2801803354).length - 1, 0, (selections_2801803354).length - 1)].Field1, offset_2801803325)), NTI2231369739);
        selectionsHEX3D_2801795824(self_2801803318, selections_2801803354);
      }
      
      scrollToCursor_2801803169(self_2801803318, selection_2801795568(self_2801803318).Field1, false);
      break;
    case 2:
      if (all_2801803326) {
      selectionsHEX3D_2801795824(self_2801803318, map_2801803372(selections_2801795565(self_2801803318), HEX3Aanonymous_2801803361));
      }
      else {
        var selections_2801803394 = selections_2801795565(self_2801803318);
        var colontmp__2801807495 = movement_2801803324(self_2801803318, selections_2801803394[chckIndx((selections_2801803394).length - 1, 0, (selections_2801803394).length - 1)].Field0, offset_2801803325);
        var colontmp__2801807496 = nimCopy(null, selections_2801803394[chckIndx((selections_2801803394).length - 1, 0, (selections_2801803394).length - 1)].Field1, NTI2231369737);
        selections_2801803394[chckIndx((selections_2801803394).length - 1, 0, (selections_2801803394).length - 1)] = nimCopy(selections_2801803394[chckIndx((selections_2801803394).length - 1, 0, (selections_2801803394).length - 1)], {Field0: nimCopy(null, colontmp__2801807495, NTI2231369737), Field1: nimCopy(null, colontmp__2801807496, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2801795824(self_2801803318, selections_2801803394);
      }
      
      scrollToCursor_2801803169(self_2801803318, selection_2801795568(self_2801803318).Field0, false);
      break;
    case 3:
      if (all_2801803326) {
      selectionsHEX3D_2801795824(self_2801803318, map_2801803372(selections_2801795565(self_2801803318), HEX3Aanonymous_2801803404));
      }
      else {
        var selections_2801803421 = selections_2801795565(self_2801803318);
        var colontmp__2801807499 = nimCopy(null, selections_2801803421[chckIndx((selections_2801803421).length - 1, 0, (selections_2801803421).length - 1)].Field0, NTI2231369737);
        var colontmp__2801807500 = movement_2801803324(self_2801803318, selections_2801803421[chckIndx((selections_2801803421).length - 1, 0, (selections_2801803421).length - 1)].Field1, offset_2801803325);
        selections_2801803421[chckIndx((selections_2801803421).length - 1, 0, (selections_2801803421).length - 1)] = nimCopy(selections_2801803421[chckIndx((selections_2801803421).length - 1, 0, (selections_2801803421).length - 1)], {Field0: nimCopy(null, colontmp__2801807499, NTI2231369737), Field1: nimCopy(null, colontmp__2801807500, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2801795824(self_2801803318, selections_2801803421);
      }
      
      scrollToCursor_2801803169(self_2801803318, selection_2801795568(self_2801803318).Field1, false);
      break;
    case 4:
      if (all_2801803326) {
      selectionsHEX3D_2801795824(self_2801803318, map_2801803372(selections_2801795565(self_2801803318), HEX3Aanonymous_2801803431));
      }
      else {
        var selections_2801803448 = selections_2801795565(self_2801803318);
        var colontmp__2801807503 = nimCopy(null, selections_2801803448[chckIndx((selections_2801803448).length - 1, 0, (selections_2801803448).length - 1)].Field1, NTI2231369737);
        var colontmp__2801807504 = movement_2801803324(self_2801803318, selections_2801803448[chckIndx((selections_2801803448).length - 1, 0, (selections_2801803448).length - 1)].Field1, offset_2801803325);
        selections_2801803448[chckIndx((selections_2801803448).length - 1, 0, (selections_2801803448).length - 1)] = nimCopy(selections_2801803448[chckIndx((selections_2801803448).length - 1, 0, (selections_2801803448).length - 1)], {Field0: nimCopy(null, colontmp__2801807503, NTI2231369737), Field1: nimCopy(null, colontmp__2801807504, NTI2231369737)}, NTI2231369739);
        selectionsHEX3D_2801795824(self_2801803318, selections_2801803448);
      }
      
      scrollToCursor_2801803169(self_2801803318, selection_2801795568(self_2801803318).Field1, false);
      break;
    }

  
}

function moveCursorColumn_2801807407(self_2801807408, distance_2801807409, cursor_2801807410, all_2801807411) {
    moveCursor_2801803317(self_2801807408, cursor_2801807410, doMoveCursorColumn_2801803118, distance_2801807409, all_2801807411);
    updateTargetColumn_2801804235(self_2801807408, cursor_2801807410);

  
}

function moveCursorColumnJsWrapper_2801807403(self_2801807460, distance_2801807461, cursor_2801807462, all_2801807463) {
    moveCursorColumn_2801807407(self_2801807460, distance_2801807461, cursor_2801807462, all_2801807463);

  
}
editor_text_prototype.moveCursorColumn = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorColumnJsWrapper_2801807403(this, distance_, cursor_, all_));};

function moveCursorLine_2801807515(self_2801807516, distance_2801807517, cursor_2801807518, all_2801807519) {
    moveCursor_2801803317(self_2801807516, cursor_2801807518, doMoveCursorLine_2801803128, distance_2801807517, all_2801807519);

  
}

function moveCursorLineJsWrapper_2801807511(self_2801807550, distance_2801807551, cursor_2801807552, all_2801807553) {
    moveCursorLine_2801807515(self_2801807550, distance_2801807551, cursor_2801807552, all_2801807553);

  
}
editor_text_prototype.moveCursorLine = function(distance_ /* : int */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorLineJsWrapper_2801807511(this, distance_, cursor_, all_));};

function doMoveCursorHome_2801803141(self_2801803142, cursor_2801803143, offset_2801803144) {
  var result_2801803145 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2801807649 = cursor_2801803143.Field0;
    var colontmp__2801807650 = 0;
    result_2801803145 = nimCopy(result_2801803145, {Field0: colontmp__2801807649, Field1: colontmp__2801807650}, NTI2231369737);
    break BeforeRet;
  };

  return result_2801803145;

}

function moveCursorHome_2801807589(self_2801807590, cursor_2801807591, all_2801807592) {
    moveCursor_2801803317(self_2801807590, cursor_2801807591, doMoveCursorHome_2801803141, 0, all_2801807592);
    updateTargetColumn_2801804235(self_2801807590, cursor_2801807591);

  
}

function moveCursorHomeJsWrapper_2801807585(self_2801807622, cursor_2801807623, all_2801807624) {
    moveCursorHome_2801807589(self_2801807622, cursor_2801807623, all_2801807624);

  
}
editor_text_prototype.moveCursorHome = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorHomeJsWrapper_2801807585(this, cursor_, all_));};

function doMoveCursorEnd_2801803146(self_2801803147, cursor_2801803148, offset_2801803149) {
  var result_2801803150 = {Field0: 0, Field1: 0};

  BeforeRet: {
    var colontmp__2801807717 = cursor_2801803148.Field0;
    var colontmp__2801807718 = lineLength_2801795436(self_2801803147.document, cursor_2801803148.Field0);
    result_2801803150 = nimCopy(result_2801803150, {Field0: colontmp__2801807717, Field1: colontmp__2801807718}, NTI2231369737);
    break BeforeRet;
  };

  return result_2801803150;

}

function moveCursorEnd_2801807657(self_2801807658, cursor_2801807659, all_2801807660) {
    moveCursor_2801803317(self_2801807658, cursor_2801807659, doMoveCursorEnd_2801803146, 0, all_2801807660);
    updateTargetColumn_2801804235(self_2801807658, cursor_2801807659);

  
}

function moveCursorEndJsWrapper_2801807653(self_2801807690, cursor_2801807691, all_2801807692) {
    moveCursorEnd_2801807657(self_2801807690, cursor_2801807691, all_2801807692);

  
}
editor_text_prototype.moveCursorEnd = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorEndJsWrapper_2801807653(this, cursor_, all_));};

function getLine_2801795429(self_2801795430, line_2801795431) {
  var result_2801795432 = [];

  BeforeRet: {
    if ((line_2801795431 < (self_2801795430.lines).length)) {
    result_2801795432 = nimCopy(null, self_2801795430.lines[chckIndx(line_2801795431, 0, (self_2801795430.lines).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    result_2801795432 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2801795432;

}

function nsuFindStr(s_855639735, sub_855639736, start_855639737, last_855639738) {
  var result_855639739 = 0;

  BeforeRet: {
    if ((subInt((s_855639735).length, start_855639737) < (sub_855639736).length)) {
    result_855639739 = -1;
    break BeforeRet;
    }
    
    if (((sub_855639736).length == 1)) {
    result_855639739 = nsuFindChar(s_855639735, sub_855639736[chckIndx(0, 0, (sub_855639736).length - 1)], start_855639737, last_855639738);
    break BeforeRet;
    }
    
    result_855639739 = nsuFindStrA(nsuInitNewSkipTable(sub_855639736), s_855639735, sub_855639736, start_855639737, last_855639738);
  };

  return result_855639739;

}

function moveCursorTo_2801807725(self_2801807726, str_2801807727, cursor_2801807728, all_2801807729) {
    str_2801807727 = nimCopy(null, str_2801807727, NTI33554449);
    
function doMoveCursorTo_2801807730(self_2801807731, cursor_2801807732, offset_2801807733) {
      var result_2801807734 = {Field0: 0, Field1: 0};

        var line_2801807735 = getLine_2801795429(self_2801807731.document, cursor_2801807732.Field0);
        result_2801807734 = nimCopy(result_2801807734, cursor_2801807732, NTI2231369737);
        var index_2801807736 = nsuFindStr(line_2801807735, str_2801807727, chckRange(addInt(cursor_2801807732.Field1, 1), 0, 2147483647), -1);
        if ((0 <= index_2801807736)) {
        var colontmp__2801807800 = cursor_2801807732.Field0;
        var colontmp__2801807801 = index_2801807736;
        result_2801807734 = nimCopy(result_2801807734, {Field0: colontmp__2801807800, Field1: colontmp__2801807801}, NTI2231369737);
        }
        

      return result_2801807734;

    }

    moveCursor_2801803317(self_2801807726, cursor_2801807728, doMoveCursorTo_2801807730, 0, all_2801807729);
    updateTargetColumn_2801804235(self_2801807726, cursor_2801807728);

  
}

function moveCursorToJsWrapper_2801807721(self_2801807767, str_2801807768, cursor_2801807769, all_2801807770) {
    moveCursorTo_2801807725(self_2801807767, str_2801807768, cursor_2801807769, all_2801807770);

  
}
editor_text_prototype.moveCursorTo = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorToJsWrapper_2801807721(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function moveCursorBefore_2801807808(self_2801807809, str_2801807810, cursor_2801807811, all_2801807812) {
    str_2801807810 = nimCopy(null, str_2801807810, NTI33554449);
    
function doMoveCursorBefore_2801807813(self_2801807814, cursor_2801807815, offset_2801807816) {
      var result_2801807817 = {Field0: 0, Field1: 0};

        var line_2801807818 = getLine_2801795429(self_2801807814.document, cursor_2801807815.Field0);
        result_2801807817 = nimCopy(result_2801807817, cursor_2801807815, NTI2231369737);
        var index_2801807819 = nsuFindStr(line_2801807818, str_2801807810, chckRange(cursor_2801807815.Field1, 0, 2147483647), -1);
        if ((0 < index_2801807819)) {
        var colontmp__2801807883 = cursor_2801807815.Field0;
        var colontmp__2801807884 = subInt(index_2801807819, 1);
        result_2801807817 = nimCopy(result_2801807817, {Field0: colontmp__2801807883, Field1: colontmp__2801807884}, NTI2231369737);
        }
        

      return result_2801807817;

    }

    moveCursor_2801803317(self_2801807809, cursor_2801807811, doMoveCursorBefore_2801807813, 0, all_2801807812);
    updateTargetColumn_2801804235(self_2801807809, cursor_2801807811);

  
}

function moveCursorBeforeJsWrapper_2801807804(self_2801807850, str_2801807851, cursor_2801807852, all_2801807853) {
    moveCursorBefore_2801807808(self_2801807850, str_2801807851, cursor_2801807852, all_2801807853);

  
}
editor_text_prototype.moveCursorBefore = function(str_ /* : string */, cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorBeforeJsWrapper_2801807804(this, str_ == undefined ? undefined : cstrToNimstr(str_), cursor_, all_));};

function doMoveCursorNextFindResult_2801803164(self_2801803165, cursor_2801803166, offset_2801803167) {
  var result_2801803168 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2801803168 = nimCopy(result_2801803168, getNextFindResult_2801803155(self_2801803165, cursor_2801803166, offset_2801803167).Field0, NTI2231369737);
    break BeforeRet;
  };

  return result_2801803168;

}

function moveCursorNextFindResult_2801807891(self_2801807892, cursor_2801807893, all_2801807894) {
    moveCursor_2801803317(self_2801807892, cursor_2801807893, doMoveCursorNextFindResult_2801803164, 0, all_2801807894);
    updateTargetColumn_2801804235(self_2801807892, cursor_2801807893);

  
}

function moveCursorNextFindResultJsWrapper_2801807887(self_2801807924, cursor_2801807925, all_2801807926) {
    moveCursorNextFindResult_2801807891(self_2801807924, cursor_2801807925, all_2801807926);

  
}
editor_text_prototype.moveCursorNextFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorNextFindResultJsWrapper_2801807887(this, cursor_, all_));};

function doMoveCursorPrevFindResult_2801803159(self_2801803160, cursor_2801803161, offset_2801803162) {
  var result_2801803163 = {Field0: 0, Field1: 0};

  BeforeRet: {
    result_2801803163 = nimCopy(result_2801803163, getPrevFindResult_2801803151(self_2801803160, cursor_2801803161, offset_2801803162).Field0, NTI2231369737);
    break BeforeRet;
  };

  return result_2801803163;

}

function moveCursorPrevFindResult_2801807957(self_2801807958, cursor_2801807959, all_2801807960) {
    moveCursor_2801803317(self_2801807958, cursor_2801807959, doMoveCursorPrevFindResult_2801803159, 0, all_2801807960);
    updateTargetColumn_2801804235(self_2801807958, cursor_2801807959);

  
}

function moveCursorPrevFindResultJsWrapper_2801807953(self_2801807990, cursor_2801807991, all_2801807992) {
    moveCursorPrevFindResult_2801807957(self_2801807990, cursor_2801807991, all_2801807992);

  
}
editor_text_prototype.moveCursorPrevFindResult = function(cursor_ /* : SelectionCursor */, all_ /* : bool */) { return (moveCursorPrevFindResultJsWrapper_2801807953(this, cursor_, all_));};

function scrollToCursor_2801803672(self_2801803673, cursor_2801803674) {
    scrollToCursor_2801803169(self_2801803673, getCursor_2801803252(self_2801803673, cursor_2801803674), false);

  
}

function scrollToCursorJsWrapper_2801808019(self_2801808054, cursor_2801808055) {
    scrollToCursor_2801803672(self_2801808054, cursor_2801808055);

  
}
editor_text_prototype.scrollToCursor = function(cursor_ /* : SelectionCursor */) { return (scrollToCursorJsWrapper_2801808019(this, cursor_));};

function deinit_2868904376(self_2868904377) {
  
}

function deinit_2868904378(self_2868904379) {
  
}

function nossplitFile(path_1426063614) {
            var Temporary4;

  var result_1426063618 = {Field0: [], Field1: [], Field2: []};

    var namePos_1426063619 = 0;
    var dotPos_1426063620 = 0;
    Label1: {
      var i_1426063627 = 0;
      var colontmp__2801808126 = 0;
      colontmp__2801808126 = subInt((path_1426063614).length, 1);
      var res_2801808127 = colontmp__2801808126;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_2801808127)) break Label3;
            i_1426063627 = res_2801808127;
            if (((ConstSet49[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined) || (i_1426063627 == 0))) {
            if ((ConstSet50[path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)]] != undefined)) {
            if ((1 <= i_1426063627)) {
            Temporary4 = subInt(i_1426063627, 1);
            }
            else {
            Temporary4 = 0;
            }
            
            result_1426063618.Field0 = nimCopy(null, substr_33557821(path_1426063614, 0, Temporary4), NTI33554449);
            namePos_1426063619 = addInt(i_1426063627, 1);
            }
            
            if ((i_1426063627 < dotPos_1426063620)) {
            result_1426063618.Field1 = nimCopy(null, substr_33557821(path_1426063614, namePos_1426063619, subInt(dotPos_1426063620, 1)), NTI33554449);
            result_1426063618.Field2 = nimCopy(null, substr_33557833(path_1426063614, dotPos_1426063620), NTI33554449);
            }
            else {
              result_1426063618.Field1 = nimCopy(null, substr_33557833(path_1426063614, namePos_1426063619), NTI33554449);
            }
            
            break Label1;
            }
            else {
            if (((((((path_1426063614[chckIndx(i_1426063627, 0, (path_1426063614).length - 1)] == 46) && (0 < i_1426063627)) && (i_1426063627 < subInt((path_1426063614).length, 1))) && !((ConstSet51[path_1426063614[chckIndx(subInt(i_1426063627, 1), 0, (path_1426063614).length - 1)]] != undefined))) && !((path_1426063614[chckIndx(addInt(i_1426063627, 1), 0, (path_1426063614).length - 1)] == 46))) && (dotPos_1426063620 == 0))) {
            dotPos_1426063620 = i_1426063627;
            }
            }
            res_2801808127 = subInt(res_2801808127, 1);
          }
      };
    };

  return result_1426063618;

}

function none_2768240658() {
  var result_2768240665 = ({val: [], has: false});

  return result_2768240665;

}

function some_2701131810(val_2701131812) {
  var result_2701131813 = ({val: [], has: false});

    result_2701131813.has = true;
    result_2701131813.val = nimCopy(null, val_2701131812, NTI33554449);

  return result_2701131813;

}

function getLanguageForFile_2885681156(filename_2885681157) {
    var Temporary1;

  var result_2885681159 = ({val: [], has: false});

  BeforeRet: {
    var extension_2885681160 = nimCopy(null, nossplitFile(filename_2885681157).Field2, NTI33554449);
    if ((0 < (extension_2885681160).length)) {
    extension_2885681160 = nimCopy(null, HEX5BHEX5D_855639319(extension_2885681160, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    switch (toJSStr(extension_2885681160)) {
    case "c":
    case "cc":
    case "inc":
      Temporary1 = [99];
      break;
    case "sh":
      Temporary1 = [98,97,115,104];
      break;
    case "cs":
      Temporary1 = [99,115,104,97,114,112];
      break;
    case "cpp":
    case "hpp":
    case "h":
      Temporary1 = [99,112,112];
      break;
    case "css":
      Temporary1 = [99,115,115];
      break;
    case "go":
      Temporary1 = [103,111];
      break;
    case "hs":
      Temporary1 = [104,97,115,107,101,108,108];
      break;
    case "html":
      Temporary1 = [104,116,109,108];
      break;
    case "java":
      Temporary1 = [106,97,118,97];
      break;
    case "js":
    case "jsx":
    case "json":
      Temporary1 = [106,97,118,97,115,99,114,105,112,116];
      break;
    case "ocaml":
      Temporary1 = [111,99,97,109,108];
      break;
    case "php":
      Temporary1 = [112,104,112];
      break;
    case "py":
      Temporary1 = [112,121,116,104,111,110];
      break;
    case "ruby":
      Temporary1 = [114,117,98,121];
      break;
    case "rs":
      Temporary1 = [114,117,115,116];
      break;
    case "scala":
      Temporary1 = [115,99,97,108,97];
      break;
    case "ts":
      Temporary1 = [116,121,112,101,115,99,114,105,112,116];
      break;
    case "nim":
    case "nims":
      Temporary1 = [110,105,109];
      break;
    case "zig":
      Temporary1 = [122,105,103];
      break;
    default: 
      var fmtRes_2885681183 = [mnewString(0)];
      fmtRes_2885681183[0].push.apply(fmtRes_2885681183[0], [85,110,107,110,111,119,110,32,102,105,108,101,32,101,120,116,101,110,115,105,111,110,32,39]);;
      formatValue_721420459(fmtRes_2885681183, 0, extension_2885681160, []);
      fmtRes_2885681183[0].push.apply(fmtRes_2885681183[0], [39]);;
      log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2885681183[0], NTI33554449)]);
      result_2885681159 = nimCopy(result_2885681159, none_2768240658(), NTI2768240657);
      break BeforeRet;
      break;
    }
    var languageId_2885681191 = nimCopy(null, Temporary1, NTI33554449);
    result_2885681159 = nimCopy(result_2885681159, some_2701131810(languageId_2885681191), NTI2768240657);
    break BeforeRet;
  };

  return result_2885681159;

}

function isSome_2768240699(self_2768240701) {
  var result_2768240702 = false;

    result_2768240702 = self_2768240701.has;

  return result_2768240702;

}

function isNone_2801798846(self_2801798848) {
  var result_2801798849 = false;

    result_2801798849 = !(self_2801798848.has);

  return result_2801798849;

}

function get_2801798838(self_2801798840) {
  var result_2801798841 = [];

    if (isNone_2801798846(self_2801798840)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801798841 = self_2801798840["val"];

  return result_2801798841;

}

function getOption_2801798854(editor_2801798856, path_2801798857, default_2801798858) {
  var result_2801798864 = null;

  BeforeRet: {
    if ((editor_2801798856 == null)) {
    result_2801798864 = default_2801798858;
    break BeforeRet;
    }
    
    var node_2801798876 = HEX7BHEX7D_1627393316(editor_2801798856.options, nsuSplitString(path_2801798857, [46], -1));
    if ((node_2801798876 == null)) {
    result_2801798864 = default_2801798858;
    break BeforeRet;
    }
    
    result_2801798864 = node_2801798876;
    break BeforeRet;
  };

  return result_2801798864;

}

function initOrderedTable_1627390053(initialSize_1627390056) {
  var result_1627390057 = ({data: [], counter: 0, first: 0, last: 0});

    var correctSizeHEX60gensym0_1627390059 = slotsNeeded_1308622891(chckRange(initialSize_1627390056, 0, 2147483647));
    result_1627390057.counter = 0;
    result_1627390057.data = new Array(chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1627390059, 0, 2147483647) ; ++i) { result_1627390057.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    result_1627390057.first = -1;
    result_1627390057.last = -1;

  return result_1627390057;

}

function newJObject_1627390051() {
  var result_1627390052 = null;

    result_1627390052 = {kind: 5, fields: initOrderedTable_1627390053(2), isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, elems: []};

  return result_1627390052;

}

function rawGet_1627390328(t_1627390331, key_1627390332, hc_1627390333, hc_1627390333_Idx) {
  var result_1627390334 = 0;

  BeforeRet: {
    hc_1627390333[hc_1627390333_Idx] = hash_1325400491(key_1627390332);
    if ((hc_1627390333[hc_1627390333_Idx] == 0)) {
    hc_1627390333[hc_1627390333_Idx] = 314159265;
    }
    
    if (((t_1627390331.data).length == 0)) {
    result_1627390334 = -1;
    break BeforeRet;
    }
    
    var h_1627390385 = (hc_1627390333[hc_1627390333_Idx] & (t_1627390331.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0)) break Label2;
          if (((t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field0 == hc_1627390333[hc_1627390333_Idx]) && eqStrings(t_1627390331.data[chckIndx(h_1627390385, 0, (t_1627390331.data).length - 1)].Field2, key_1627390332))) {
          result_1627390334 = h_1627390385;
          break BeforeRet;
          }
          
          h_1627390385 = nextTry_1308622883(h_1627390385, (t_1627390331.data).length - 1);
        }
    };
    result_1627390334 = subInt(-1, h_1627390385);
  };

  return result_1627390334;

}

function hasKey_1627392538(t_1627392541, key_1627392542) {
  var result_1627392543 = false;

    var hc_1627392544 = [0];
    result_1627392543 = (0 <= rawGet_1627390328(t_1627392541, key_1627392542, hc_1627392544, 0));

  return result_1627392543;

}

function hasKey_1627393154(node_1627393155, key_1627393156) {
    var Temporary1;

  var result_1627393157 = false;

    if (!((node_1627393155.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,57,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393155;
    if (ConstSet52[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393157 = hasKey_1627392538(Temporary1.fields, key_1627393156);

  return result_1627393157;

}

function HEX5BHEX5D_1627392612(t_1627392615, key_1627392616) {
  var result_1627392617 = null;
  var result_1627392617_Idx = 0;

    var hcHEX60gensym89_1627392618 = [0];
    var indexHEX60gensym89_1627392839 = rawGet_1627392619(t_1627392615, key_1627392616, hcHEX60gensym89_1627392618, 0);
    if ((0 <= indexHEX60gensym89_1627392839)) {
    result_1627392617 = t_1627392615.data[chckIndx(indexHEX60gensym89_1627392839, 0, (t_1627392615.data).length - 1)]; result_1627392617_Idx = "Field3";
    }
    else {
    raiseKeyError_1627392893(key_1627392616);
    }
    

  return [result_1627392617, result_1627392617_Idx];

}

function HEX5BHEX5D_1627393037(node_1627393038, name_1627393039) {
    var Temporary1;
    var Temporary2;

  var result_1627393040 = null;

    if (!(!((node_1627393038 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393038.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,49,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393038;
    if (ConstSet53[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393040 = (Temporary2 = HEX5BHEX5D_1627392612(Temporary1.fields, name_1627393039), Temporary2)[0][Temporary2[1]];

  return result_1627393040;

}

function none_2868904237() {
  var result_2868904243 = ({val: null});

  return result_2868904243;

}

function some_2868904248(val_2868904250) {
  var result_2868904251 = ({val: null});

    if (!(!((val_2868904250 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2868904251.val = val_2868904250;

  return result_2868904251;

}

function isNimException_33556456() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentExceptionMsg_33556469() {
  var result_33556470 = [];

  BeforeRet: {
    if (!((lastJSError == null))) {
    if (isNimException_33556456()) {
    result_33556470 = nimCopy(null, lastJSError.message, NTI33554449);
    break BeforeRet;
    }
    else {
      var msg_33556475 = null;
            if (lastJSError.message !== undefined) {
        msg_33556475 = lastJSError.message;
      }
      
      if (!((msg_33556475 == null))) {
      result_33556470 = nimCopy(null, cstrToNimstr(msg_33556475), NTI33554449);
      break BeforeRet;
      }
      
    }
    
    }
    
    result_33556470 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_33556470;

}
async function loadLanguageDynamically_2868904199(languageId_2868904200, config_2868904201) {
    var Temporary2;

  var result_2868904208 = null;

  BeforeRet: {
++excHandler;
    try {
    if (hasKey_1627393154(config_2868904201, [119,97,115,109])) {
    Temporary2 = getStr_1627390106(HEX5BHEX5D_1627393037(config_2868904201, [119,97,115,109]), []);
    }
    else {
      var fmtRes_2868904222 = [mnewString(0)];
      fmtRes_2868904222[0].push.apply(fmtRes_2868904222[0], [108,97,110,103,117,97,103,101,115,47,116,114,101,101,45,115,105,116,116,101,114,45]);;
      formatValue_721420459(fmtRes_2868904222, 0, languageId_2868904200, []);
      fmtRes_2868904222[0].push.apply(fmtRes_2868904222[0], [46,119,97,115,109]);;
    Temporary2 = fmtRes_2868904222[0];
    }
    
    var wasmPath_2868904223 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_2868904228 = [mnewString(0)];
    fmtRes_2868904228[0].push.apply(fmtRes_2868904228[0], [84,114,121,105,110,103,32,116,111,32,108,111,97,100,32,116,114,101,101,115,105,116,116,101,114,32,102,114,111,109,32,39]);;
    formatValue_721420459(fmtRes_2868904228, 0, wasmPath_2868904223, []);
    fmtRes_2868904228[0].push.apply(fmtRes_2868904228[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2868904228[0], NTI33554449)]);
    var language_2868904233 = (await loadTreesitterLanguage(toJSStr(wasmPath_2868904223)));
    if ((language_2868904233 == null)) {
    result_2868904208 = none_2868904237();
    break BeforeRet;
    }
    
    result_2868904208 = some_2868904248(language_2868904233);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2868904278 = [mnewString(0)];
    fmtRes_2868904278[0].push.apply(fmtRes_2868904278[0], [91,116,101,120,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,108,97,110,103,117,97,103,101,32,102,114,111,109,32,119,97,115,109,58,32,39]);;
    formatValue_721420459(fmtRes_2868904278, 0, languageId_2868904200, []);
    fmtRes_2868904278[0].push.apply(fmtRes_2868904278[0], [39,58,32]);;
    formatValue_721420459(fmtRes_2868904278, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2868904278[0], NTI33554449)]);
    result_2868904208 = none_2868904237();
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2868904208;

}

function isSome_2868904343(self_2868904345) {
  var result_2868904346 = false;

    result_2868904346 = !((self_2868904345.val == null));

  return result_2868904346;

}
async function loadLanguage_2868904319(languageId_2868904320, config_2868904321) {
  var result_2868904324 = null;

  BeforeRet: {
    var language_2868904338 = (await loadLanguageDynamically_2868904199(languageId_2868904320, config_2868904321));
    if (isSome_2868904343(language_2868904338)) {
    result_2868904324 = language_2868904338;
    break BeforeRet;
    }
    
    result_2868904324 = none_2868904237();
    break BeforeRet;
  };

  return result_2868904324;

}

function isNone_2801798890(self_2801798892) {
  var result_2801798893 = false;

    result_2801798893 = (self_2801798892.val == null);

  return result_2801798893;

}

function createTsParser_2868904365() {
  var result_2868904366 = null;

  BeforeRet: {
    result_2868904366 = new Parser();
    break BeforeRet;
  };

  return result_2868904366;

}

function get_2801798923(self_2801798925) {
  var result_2801798926 = null;
  var result_2801798926_Idx = 0;

  BeforeRet: {
    if (isNone_2801798890(self_2801798925)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801798926 = self_2801798925; result_2801798926_Idx = "val";
    break BeforeRet;
  };

  return [result_2801798926, result_2801798926_Idx];

}

function contentString_2801796222(document_2801796223) {
  var result_2801796224 = [];

  BeforeRet: {
    result_2801796224 = nimCopy(null, nsuJoinSep(document_2801796223.lines, [10]), NTI33554449);
    break BeforeRet;
  };

  return result_2801796224;

}

function none_2868904002() {
  var result_2868904008 = ({val: null});

  return result_2868904008;

}
async function initTreesitter_2801798801(self_2801798802) {
    var Temporary1;
      var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary6;

  var result_2801798804 = null;

  BeforeRet: {
    if (!((self_2801798802.tsParser == null))) {
    deinit_2868904376(self_2801798802.tsParser);
    self_2801798802.tsParser = null;
    }
    
    if (!((self_2801798802.highlightQuery == null))) {
    deinit_2868904378(self_2801798802.highlightQuery);
    self_2801798802.highlightQuery = null;
    }
    
      var oHEX60gensym73_2801798818 = getLanguageForFile_2885681156(self_2801798802.filename);
      if (!isSome_2768240699(oHEX60gensym73_2801798818)) Temporary2 = false; else {        var languageId_2801798852 = nimCopy(null, get_2801798838(oHEX60gensym73_2801798818), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2801798852;
    }
    else {
      result_2801798804 = undefined;
      break BeforeRet;
    }
    
    var languageId_2801798853 = nimCopy(null, Temporary1, NTI33554449);
    var config_2801798880 = getOption_2801798854(gEditor, ([101,100,105,116,111,114,46,116,101,120,116,46,116,114,101,101,115,105,116,116,101,114,46] || []).concat(languageId_2801798853 || []), newJObject_1627390051());
    var language_2801798885 = [(await loadLanguage_2868904319(languageId_2801798853, config_2801798880))];
    if (isNone_2801798890(language_2801798885[0])) {
    var fmtRes_2801798902 = [mnewString(0)];
    fmtRes_2801798902[0].push.apply(fmtRes_2801798902[0], [76,97,110,103,117,97,103,101,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,58,32,39]);;
    formatValue_721420459(fmtRes_2801798902, 0, languageId_2801798853, []);
    fmtRes_2801798902[0].push.apply(fmtRes_2801798902[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801798902[0], NTI33554449)]);
    result_2801798804 = undefined;
    break BeforeRet;
    }
    
    self_2801798802.tsParser = createTsParser_2868904365();
    if ((self_2801798802.tsParser == null)) {
    var fmtRes_2801798910 = [mnewString(0)];
    fmtRes_2801798910[0].push.apply(fmtRes_2801798910[0], [70,97,105,108,101,100,32,116,111,32,99,114,101,97,116,101,32,116,115,32,112,97,114,115,101,114,32,102,111,114,58,32,39]);;
    formatValue_721420459(fmtRes_2801798910, 0, languageId_2801798853, []);
    fmtRes_2801798910[0].push.apply(fmtRes_2801798910[0], [39]);;
    log_1174405220(logger_704643272[0], 4, [nimCopy(null, fmtRes_2801798910[0], NTI33554449)]);
    result_2801798804 = undefined;
    break BeforeRet;
    }
    
    self_2801798802.tsParser.setLanguage((Temporary3 = get_2801798923(language_2801798885[0]), Temporary3)[0][Temporary3[1]]);
    self_2801798802.tsLanguage = (Temporary4 = get_2801798923(language_2801798885[0]), Temporary4)[0][Temporary4[1]];
    self_2801798802.currentTree = parseString_2868903995(self_2801798802.tsParser, contentString_2801796222(self_2801798802), none_2868904002());
++excHandler;
    try {
    var fmtRes_2801798963 = [mnewString(0)];
    fmtRes_2801798963[0].push.apply(fmtRes_2801798963[0], [46,47,108,97,110,103,117,97,103,101,115,47]);;
    formatValue_721420459(fmtRes_2801798963, 0, languageId_2801798853, []);
    fmtRes_2801798963[0].push.apply(fmtRes_2801798963[0], [47,113,117,101,114,105,101,115,47,104,105,103,104,108,105,103,104,116,115,46,115,99,109]);;
    var queryString_2801798964 = loadFile_2499805191(fs_2499805237, fmtRes_2801798963[0]);
    self_2801798802.highlightQuery = (Temporary6 = get_2801798923(language_2801798885[0]), Temporary6)[0][Temporary6[1]].query(toJSStr(queryString_2801798964));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2801798984 = [mnewString(0)];
    fmtRes_2801798984[0].push.apply(fmtRes_2801798984[0], [91,116,101,120,116,101,100,105,116,93,32,78,111,32,104,105,103,104,108,105,103,104,116,32,113,117,101,114,105,101,115,32,102,111,117,110,100,32,102,111,114,32,39]);;
    formatValue_721420459(fmtRes_2801798984, 0, languageId_2801798853, []);
    fmtRes_2801798984[0].push.apply(fmtRes_2801798984[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801798984[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    invoke_2801796041(self_2801798802.textChanged, self_2801798802);
    requestRender_2315255899(gEditor.platform, false);
    result_2801798804 = undefined;
    break BeforeRet;
  };

  return result_2801798804;

}

function reloadTreesitter_2801808081(self_2801808082) {
    log_1174405220(logger_704643272[0], 2, [[114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114]]);
    var _ = initTreesitter_2801798801(self_2801808082.document);

  
}

function reloadTreesitterJsWrapper_2801808077(self_2801808110) {
    reloadTreesitter_2801808081(self_2801808110);

  
}
editor_text_prototype.reloadTreesitter = function() { return (reloadTreesitterJsWrapper_2801808077(this));};

function deleteLeft_2801808137(self_2801808138) {
    var selections_2801808139 = selections_2801795565(self_2801808138);
    Label1: {
      var i_2801808145 = 0;
      var selection_2801808146 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801808192 = 0;
      var L_2801808193 = (selections_2801808139).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801808192 < L_2801808193)) break Label3;
            i_2801808145 = i_2801808192;
            selection_2801808146 = nimCopy(selection_2801808146, selections_2801808139[chckIndx(i_2801808192, 0, (selections_2801808139).length - 1)], NTI2231369739);
            if (isEmpty_2231370100(selection_2801808146)) {
            var colontmp__2801808190 = doMoveCursorColumn_2801803118(self_2801808138, selection_2801808146.Field0, -1);
            var colontmp__2801808191 = nimCopy(null, selection_2801808146.Field0, NTI2231369737);
            selections_2801808139[chckIndx(i_2801808145, 0, (selections_2801808139).length - 1)] = nimCopy(selections_2801808139[chckIndx(i_2801808145, 0, (selections_2801808139).length - 1)], {Field0: nimCopy(null, colontmp__2801808190, NTI2231369737), Field1: nimCopy(null, colontmp__2801808191, NTI2231369737)}, NTI2231369739);
            }
            
            i_2801808192 = addInt(i_2801808192, 1);
            if (!(((selections_2801808139).length == L_2801808193))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2801795824(self_2801808138, delete_2801799170(self_2801808138.document, selections_2801808139, selections_2801795565(self_2801808138), true, true));
    updateTargetColumn_2801804235(self_2801808138, 3);

  
}

function deleteLeftJsWrapper_2801808133(self_2801808174) {
    deleteLeft_2801808137(self_2801808174);

  
}
editor_text_prototype.deleteLeft = function() { return (deleteLeftJsWrapper_2801808133(this));};

function deleteRight_2801808201(self_2801808202) {
    var selections_2801808203 = selections_2801795565(self_2801808202);
    Label1: {
      var i_2801808209 = 0;
      var selection_2801808210 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_2801808256 = 0;
      var L_2801808257 = (selections_2801808203).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801808256 < L_2801808257)) break Label3;
            i_2801808209 = i_2801808256;
            selection_2801808210 = nimCopy(selection_2801808210, selections_2801808203[chckIndx(i_2801808256, 0, (selections_2801808203).length - 1)], NTI2231369739);
            if (isEmpty_2231370100(selection_2801808210)) {
            var colontmp__2801808254 = nimCopy(null, selection_2801808210.Field0, NTI2231369737);
            var colontmp__2801808255 = doMoveCursorColumn_2801803118(self_2801808202, selection_2801808210.Field0, 1);
            selections_2801808203[chckIndx(i_2801808209, 0, (selections_2801808203).length - 1)] = nimCopy(selections_2801808203[chckIndx(i_2801808209, 0, (selections_2801808203).length - 1)], {Field0: nimCopy(null, colontmp__2801808254, NTI2231369737), Field1: nimCopy(null, colontmp__2801808255, NTI2231369737)}, NTI2231369739);
            }
            
            i_2801808256 = addInt(i_2801808256, 1);
            if (!(((selections_2801808203).length == L_2801808257))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    selectionsHEX3D_2801795824(self_2801808202, delete_2801799170(self_2801808202.document, selections_2801808203, selections_2801795565(self_2801808202), true, true));
    updateTargetColumn_2801804235(self_2801808202, 3);

  
}

function deleteRightJsWrapper_2801808197(self_2801808238) {
    deleteRight_2801808201(self_2801808238);

  
}
editor_text_prototype.deleteRight = function() { return (deleteRightJsWrapper_2801808197(this));};

function getCommandCount_2801808265(self_2801808266) {
  var result_2801808267 = 0;

  BeforeRet: {
    result_2801808267 = self_2801808266.commandCount;
    break BeforeRet;
  };

  return result_2801808267;

}

function getCommandCountJsWrapper_2801808261(self_2801808296) {
  var result_2801808297 = 0;

    result_2801808297 = getCommandCount_2801808265(self_2801808296);

  return result_2801808297;

}
editor_text_prototype.getCommandCount = function() { return (getCommandCountJsWrapper_2801808261(this));};

function setCommandCount_2801808322(self_2801808323, count_2801808324) {
    self_2801808323.commandCount = count_2801808324;

  
}

function setCommandCountJsWrapper_2801808318(self_2801808353, count_2801808354) {
    setCommandCount_2801808322(self_2801808353, count_2801808354);

  
}
editor_text_prototype.setCommandCount = function(count_ /* : int */) { return (setCommandCountJsWrapper_2801808318(this, count_));};

function setCommandCountRestore_2801808380(self_2801808381, count_2801808382) {
    self_2801808381.commandCountRestore = count_2801808382;

  
}

function setCommandCountRestoreJsWrapper_2801808376(self_2801808411, count_2801808412) {
    setCommandCountRestore_2801808380(self_2801808411, count_2801808412);

  
}
editor_text_prototype.setCommandCountRestore = function(count_ /* : int */) { return (setCommandCountRestoreJsWrapper_2801808376(this, count_));};

function updateCommandCount_2801808438(self_2801808439, digit_2801808440) {
    self_2801808439.commandCount = addInt(mulInt(self_2801808439.commandCount, 10), digit_2801808440);

  
}

function updateCommandCountJsWrapper_2801808434(self_2801808469, digit_2801808470) {
    updateCommandCount_2801808438(self_2801808469, digit_2801808470);

  
}
editor_text_prototype.updateCommandCount = function(digit_ /* : int */) { return (updateCommandCountJsWrapper_2801808434(this, digit_));};

function setFlag_2801808496(self_2801808497, name_2801808498, value_2801808499) {
    setFlag_1291848942(self_2801808497.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2801808498 || []), value_2801808499);
    markDirty_2147483686(self_2801808497);

  
}

function setFlagJsWrapper_2801808492(self_2801808529, name_2801808530, value_2801808531) {
    setFlag_2801808496(self_2801808529, name_2801808530, value_2801808531);

  
}
editor_text_prototype.setFlag = function(name_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper_2801808492(this, name_ == undefined ? undefined : cstrToNimstr(name_), value_));};

function getFlag_2801808562(self_2801808563, name_2801808564) {
  var result_2801808565 = false;

  BeforeRet: {
    result_2801808565 = getFlag_1291848865(self_2801808563.editor, ([101,100,105,116,111,114,46,116,101,120,116,46] || []).concat(name_2801808564 || []), false);
    break BeforeRet;
  };

  return result_2801808565;

}

function getFlagJsWrapper_2801808558(self_2801808595, name_2801808596) {
  var result_2801808597 = false;

    result_2801808597 = getFlag_2801808562(self_2801808595, name_2801808596);

  return result_2801808597;

}
editor_text_prototype.getFlag = function(name_ /* : string */) { return (getFlagJsWrapper_2801808558(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runAction_2801808632(self_2801808633, action_2801808634, args_2801808635) {
  var result_2801808636 = false;

  BeforeRet: {
    result_2801808636 = (handleActionInternal_2801795422(self_2801808633, action_2801808634, args_2801808635) == 3);
    break BeforeRet;
  };

  return result_2801808636;

}

function runActionJsWrapper_2801808628(self_2801808672, action_2801808673, args_2801808674) {
  var result_2801808675 = false;

    result_2801808675 = runAction_2801808632(self_2801808672, action_2801808673, args_2801808674);

  return result_2801808675;

}
editor_text_prototype.runAction = function(action_ /* : string */, args_ /* : JsonNode */) { return (runActionJsWrapper_2801808628(this, action_ == undefined ? undefined : cstrToNimstr(action_), args_));};

function nsuIsAlphaNumericChar(c_855638061) {
  var result_855638062 = false;

  BeforeRet: {
    result_855638062 = (ConstSet54[c_855638061] != undefined);
    break BeforeRet;
  };

  return result_855638062;

}

function charCategory_2801808699(c_2801808700) {
  var result_2801808701 = 0;

  BeforeRet: {
    if ((nsuIsAlphaNumericChar(c_2801808700) || (c_2801808700 == 95))) {
    result_2801808701 = 0;
    break BeforeRet;
    }
    
    if (((c_2801808700 == 32) || (c_2801808700 == 9))) {
    result_2801808701 = 1;
    break BeforeRet;
    }
    
    result_2801808701 = 2;
    break BeforeRet;
  };

  return result_2801808701;

}

function findWordBoundary_2801808708(self_2801808709, cursor_2801808710) {
  var result_2801808711 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var line_2801808712 = getLine_2801795429(self_2801808709.document, cursor_2801808710.Field0);
    result_2801808711 = nimCopy(result_2801808711, toSelection_2231370221(cursor_2801808710), NTI2231369739);
    if ((result_2801808711.Field0.Field1 == (line_2801808712).length)) {
    result_2801808711.Field0.Field1 = subInt(result_2801808711.Field0.Field1, 1);
    result_2801808711.Field1.Field1 = subInt(result_2801808711.Field1.Field1, 1);
    }
    
    Label1: {
        Label2: while (true) {
        if (!((0 < result_2801808711.Field0.Field1) && (result_2801808711.Field0.Field1 < (line_2801808712).length))) break Label2;
          var leftCategory_2801808723 = charCategory_2801808699(line_2801808712[chckIndx(subInt(result_2801808711.Field0.Field1, 1), 0, (line_2801808712).length - 1)]);
          var rightCategory_2801808724 = charCategory_2801808699(line_2801808712[chckIndx(result_2801808711.Field0.Field1, 0, (line_2801808712).length - 1)]);
          if (!((leftCategory_2801808723 == rightCategory_2801808724))) {
          break Label1;
          }
          
          result_2801808711.Field0.Field1 = subInt(result_2801808711.Field0.Field1, 1);
        }
    };
    if ((result_2801808711.Field1.Field1 < (line_2801808712).length)) {
    result_2801808711.Field1.Field1 = addInt(result_2801808711.Field1.Field1, 1);
    }
    
    Label3: {
        Label4: while (true) {
        if (!((0 <= result_2801808711.Field1.Field1) && (result_2801808711.Field1.Field1 < (line_2801808712).length))) break Label4;
          var leftCategory_2801808733 = charCategory_2801808699(line_2801808712[chckIndx(subInt(result_2801808711.Field1.Field1, 1), 0, (line_2801808712).length - 1)]);
          var rightCategory_2801808734 = charCategory_2801808699(line_2801808712[chckIndx(result_2801808711.Field1.Field1, 0, (line_2801808712).length - 1)]);
          if (!((leftCategory_2801808733 == rightCategory_2801808734))) {
          break Label3;
          }
          
          result_2801808711.Field1.Field1 = addInt(result_2801808711.Field1.Field1, 1);
        }
    };

  return result_2801808711;

}

function findWordBoundaryJsWrapper_2801808704(self_2801808768, cursor_2801808769) {
  var result_2801808770 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801808770 = nimCopy(result_2801808770, findWordBoundary_2801808708(self_2801808768, cursor_2801808769), NTI2231369739);

  return result_2801808770;

}
editor_text_prototype.findWordBoundary = function(cursor_ /* : Cursor */) { return (findWordBoundaryJsWrapper_2801808704(this, cursor_));};

function min_2231370063(a_2231370064, b_2231370065) {
  var result_2231370066 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3C_2231370055(a_2231370064, b_2231370065)) {
    result_2231370066 = nimCopy(result_2231370066, a_2231370064, NTI2231369737);
    break BeforeRet;
    }
    
    result_2231370066 = nimCopy(result_2231370066, b_2231370065, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370066;

}

function max_2231370067(a_2231370068, b_2231370069) {
  var result_2231370070 = {Field0: 0, Field1: 0};

  BeforeRet: {
    if (HEX3CHEX3D_2231370071(b_2231370069, a_2231370068)) {
    result_2231370070 = nimCopy(result_2231370070, a_2231370068, NTI2231369737);
    break BeforeRet;
    }
    
    result_2231370070 = nimCopy(result_2231370070, b_2231370069, NTI2231369737);
    break BeforeRet;
  };

  return result_2231370070;

}

function or_2231370215(a_2231370216, b_2231370217) {
  var result_2231370218 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    var an_2231370219 = normalized_2231370094(a_2231370216);
    var bn_2231370220 = normalized_2231370094(b_2231370217);
    var colontmp__2801809012 = min_2231370063(an_2231370219.Field0, bn_2231370220.Field0);
    var colontmp__2801809013 = max_2231370067(an_2231370219.Field1, bn_2231370220.Field1);
    result_2231370218 = nimCopy(result_2231370218, {Field0: nimCopy(null, colontmp__2801809012, NTI2231369737), Field1: nimCopy(null, colontmp__2801809013, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
  };

  return result_2231370218;

}

function reverse_2231370097(selection_2231370098) {
  var result_2231370099 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    var colontmp__2801809014 = nimCopy(null, selection_2231370098.Field1, NTI2231369737);
    var colontmp__2801809015 = nimCopy(null, selection_2231370098.Field0, NTI2231369737);
    result_2231370099 = nimCopy(result_2231370099, {Field0: nimCopy(null, colontmp__2801809014, NTI2231369737), Field1: nimCopy(null, colontmp__2801809015, NTI2231369737)}, NTI2231369739);

  return result_2231370099;

}

function nsuStartsWith(s_855639466, prefix_855639467) {
  var result_855639468 = false;

  BeforeRet: {
    var prefixLenHEX60gensym146_855639473 = (prefix_855639467).length;
    var sLenHEX60gensym146_855639474 = (s_855639466).length;
    var iHEX60gensym146_855639475 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if ((prefixLenHEX60gensym146_855639473 <= iHEX60gensym146_855639475)) {
          result_855639468 = true;
          break BeforeRet;
          }
          
          if (((sLenHEX60gensym146_855639474 <= iHEX60gensym146_855639475) || !((s_855639466[chckIndx(iHEX60gensym146_855639475, 0, (s_855639466).length - 1)] == prefix_855639467[chckIndx(iHEX60gensym146_855639475, 0, (prefix_855639467).length - 1)])))) {
          result_855639468 = false;
          break BeforeRet;
          }
          
          iHEX60gensym146_855639475 = addInt(iHEX60gensym146_855639475, 1);
        }
    };
  };

  return result_855639468;

}

function getSelectionForMove_2801808802(self_2801808803, cursor_2801808804, move_2801808805, count_2801808806) {
  var result_2801808807 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (toJSStr(move_2801808805)) {
    case "word":
      result_2801808807 = nimCopy(result_2801808807, findWordBoundary_2801808708(self_2801808803, cursor_2801808804), NTI2231369739);
      Label1: {
        var __2801808812 = 0;
        var i_2801808970 = 1;
        Label2: {
            Label3: while (true) {
            if (!(i_2801808970 < count_2801808806)) break Label3;
              __2801808812 = i_2801808970;
              result_2801808807 = nimCopy(result_2801808807, or_2231370215(or_2231370215(result_2801808807, findWordBoundary_2801808708(self_2801808803, result_2801808807.Field1)), findWordBoundary_2801808708(self_2801808803, result_2801808807.Field0)), NTI2231369739);
              i_2801808970 = addInt(i_2801808970, 1);
            }
        };
      };
      break;
    case "word-line":
      var line_2801808813 = getLine_2801795429(self_2801808803.document, cursor_2801808804.Field0);
      result_2801808807 = nimCopy(result_2801808807, findWordBoundary_2801808708(self_2801808803, cursor_2801808804), NTI2231369739);
      if (((cursor_2801808804.Field1 == 0) && (0 < cursor_2801808804.Field0))) {
      var colontmp__2801808972 = subInt(cursor_2801808804.Field0, 1);
      var colontmp__2801808973 = (getLine_2801795429(self_2801808803.document, subInt(cursor_2801808804.Field0, 1))).length;
      result_2801808807.Field0 = nimCopy(result_2801808807.Field0, {Field0: colontmp__2801808972, Field1: colontmp__2801808973}, NTI2231369737);
      }
      
      if (((cursor_2801808804.Field1 == (line_2801808813).length) && (cursor_2801808804.Field0 < subInt((self_2801808803.document.lines).length, 1)))) {
      var colontmp__2801808974 = addInt(cursor_2801808804.Field0, 1);
      var colontmp__2801808975 = 0;
      result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801808974, Field1: colontmp__2801808975}, NTI2231369737);
      }
      
      Label4: {
        var __2801808821 = 0;
        var i_2801808981 = 1;
        Label5: {
            Label6: while (true) {
            if (!(i_2801808981 < count_2801808806)) break Label6;
              __2801808821 = i_2801808981;
              result_2801808807 = nimCopy(result_2801808807, or_2231370215(or_2231370215(result_2801808807, findWordBoundary_2801808708(self_2801808803, result_2801808807.Field1)), findWordBoundary_2801808708(self_2801808803, result_2801808807.Field0)), NTI2231369739);
              var line_2801808822 = getLine_2801795429(self_2801808803.document, result_2801808807.Field1.Field0);
              if (((result_2801808807.Field0.Field1 == 0) && (0 < result_2801808807.Field0.Field0))) {
              var colontmp__2801808977 = subInt(result_2801808807.Field0.Field0, 1);
              var colontmp__2801808978 = (getLine_2801795429(self_2801808803.document, subInt(result_2801808807.Field0.Field0, 1))).length;
              result_2801808807.Field0 = nimCopy(result_2801808807.Field0, {Field0: colontmp__2801808977, Field1: colontmp__2801808978}, NTI2231369737);
              }
              
              if (((result_2801808807.Field1.Field1 == (line_2801808822).length) && (result_2801808807.Field1.Field0 < subInt((self_2801808803.document.lines).length, 1)))) {
              var colontmp__2801808979 = addInt(result_2801808807.Field1.Field0, 1);
              var colontmp__2801808980 = 0;
              result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801808979, Field1: colontmp__2801808980}, NTI2231369737);
              }
              
              i_2801808981 = addInt(i_2801808981, 1);
            }
        };
      };
      break;
    case "word-back":
      result_2801808807 = nimCopy(result_2801808807, reverse_2231370097(getSelectionForMove_2801808802(self_2801808803, {Field0: cursor_2801808804.Field0, Field1: nimMax(0, subInt(cursor_2801808804.Field1, 1))}, [119,111,114,100], count_2801808806)), NTI2231369739);
      break BeforeRet;
      break;
    case "word-line-back":
      result_2801808807 = nimCopy(result_2801808807, reverse_2231370097(getSelectionForMove_2801808802(self_2801808803, {Field0: cursor_2801808804.Field0, Field1: nimMax(0, subInt(cursor_2801808804.Field1, 1))}, [119,111,114,100,45,108,105,110,101], count_2801808806)), NTI2231369739);
      break BeforeRet;
      break;
    case "line":
      var colontmp__2801808983 = {Field0: cursor_2801808804.Field0, Field1: 0};
      var colontmp__2801808984 = {Field0: cursor_2801808804.Field0, Field1: (getLine_2801795429(self_2801808803.document, cursor_2801808804.Field0)).length};
      result_2801808807 = nimCopy(result_2801808807, {Field0: nimCopy(null, colontmp__2801808983, NTI2231369737), Field1: nimCopy(null, colontmp__2801808984, NTI2231369737)}, NTI2231369739);
      break;
    case "line-next":
      var colontmp__2801808985 = {Field0: cursor_2801808804.Field0, Field1: 0};
      var colontmp__2801808986 = {Field0: cursor_2801808804.Field0, Field1: (getLine_2801795429(self_2801808803.document, cursor_2801808804.Field0)).length};
      result_2801808807 = nimCopy(result_2801808807, {Field0: nimCopy(null, colontmp__2801808985, NTI2231369737), Field1: nimCopy(null, colontmp__2801808986, NTI2231369737)}, NTI2231369739);
      if ((addInt(result_2801808807.Field1.Field0, 1) < (self_2801808803.document.lines).length)) {
      var colontmp__2801808987 = addInt(result_2801808807.Field1.Field0, 1);
      var colontmp__2801808988 = 0;
      result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801808987, Field1: colontmp__2801808988}, NTI2231369737);
      }
      
      Label7: {
        var __2801808833 = 0;
        var i_2801808992 = 1;
        Label8: {
            Label9: while (true) {
            if (!(i_2801808992 < count_2801808806)) break Label9;
              __2801808833 = i_2801808992;
              result_2801808807 = nimCopy(result_2801808807, or_2231370215(result_2801808807, {Field0: {Field0: result_2801808807.Field1.Field0, Field1: 0}, Field1: {Field0: result_2801808807.Field1.Field0, Field1: (getLine_2801795429(self_2801808803.document, result_2801808807.Field1.Field0)).length}}), NTI2231369739);
              if ((addInt(result_2801808807.Field1.Field0, 1) < (self_2801808803.document.lines).length)) {
              var colontmp__2801808990 = addInt(result_2801808807.Field1.Field0, 1);
              var colontmp__2801808991 = 0;
              result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801808990, Field1: colontmp__2801808991}, NTI2231369737);
              }
              
              i_2801808992 = addInt(i_2801808992, 1);
            }
        };
      };
      break;
    case "file":
      var colontmp__2801808994 = 0;
      var colontmp__2801808995 = 0;
      result_2801808807.Field0 = nimCopy(result_2801808807.Field0, {Field0: colontmp__2801808994, Field1: colontmp__2801808995}, NTI2231369737);
      var line_2801808840 = subInt((self_2801808803.document.lines).length, 1);
      var colontmp__2801808996 = line_2801808840;
      var colontmp__2801808997 = (getLine_2801795429(self_2801808803.document, line_2801808840)).length;
      result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801808996, Field1: colontmp__2801808997}, NTI2231369737);
      break;
    case "prev-find-result":
      result_2801808807 = nimCopy(result_2801808807, getPrevFindResult_2801803151(self_2801808803, cursor_2801808804, count_2801808806), NTI2231369739);
      break;
    case "next-find-result":
      result_2801808807 = nimCopy(result_2801808807, getNextFindResult_2801803155(self_2801808803, cursor_2801808804, count_2801808806), NTI2231369739);
      break;
    default: 
      if (nsuStartsWith(move_2801808805, [109,111,118,101,45,116,111,32])) {
      var str_2801808859 = HEX5BHEX5D_855639319(move_2801808805, HEX2EHEX2E_1040187488(8, 1));
      var line_2801808860 = getLine_2801795429(self_2801808803.document, cursor_2801808804.Field0);
      result_2801808807 = nimCopy(result_2801808807, toSelection_2231370221(cursor_2801808804), NTI2231369739);
      var index_2801808861 = nsuFindStr(line_2801808860, str_2801808859, chckRange(cursor_2801808804.Field1, 0, 2147483647), -1);
      if ((0 <= index_2801808861)) {
      var colontmp__2801808998 = cursor_2801808804.Field0;
      var colontmp__2801808999 = addInt(index_2801808861, 1);
      result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801808998, Field1: colontmp__2801808999}, NTI2231369737);
      }
      
      Label10: {
        var __2801808866 = 0;
        var i_2801809003 = 1;
        Label11: {
            Label12: while (true) {
            if (!(i_2801809003 < count_2801808806)) break Label12;
              __2801808866 = i_2801809003;
              var index_2801808867 = nsuFindStr(line_2801808860, str_2801808859, chckRange(result_2801808807.Field1.Field1, 0, 2147483647), -1);
              if ((0 <= index_2801808867)) {
              var colontmp__2801809001 = result_2801808807.Field1.Field0;
              var colontmp__2801809002 = addInt(index_2801808867, 1);
              result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801809001, Field1: colontmp__2801809002}, NTI2231369737);
              }
              
              i_2801809003 = addInt(i_2801809003, 1);
            }
        };
      };
      }
      else {
      if (nsuStartsWith(move_2801808805, [109,111,118,101,45,98,101,102,111,114,101,32])) {
      var str_2801808886 = HEX5BHEX5D_855639319(move_2801808805, HEX2EHEX2E_1040187488(12, 1));
      var line_2801808887 = getLine_2801795429(self_2801808803.document, cursor_2801808804.Field0);
      result_2801808807 = nimCopy(result_2801808807, toSelection_2231370221(cursor_2801808804), NTI2231369739);
      var index_2801808888 = nsuFindStr(line_2801808887, str_2801808886, chckRange(addInt(cursor_2801808804.Field1, 1), 0, 2147483647), -1);
      if ((0 <= index_2801808888)) {
      var colontmp__2801809005 = cursor_2801808804.Field0;
      var colontmp__2801809006 = index_2801808888;
      result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801809005, Field1: colontmp__2801809006}, NTI2231369737);
      }
      
      Label13: {
        var __2801808893 = 0;
        var i_2801809010 = 1;
        Label14: {
            Label15: while (true) {
            if (!(i_2801809010 < count_2801808806)) break Label15;
              __2801808893 = i_2801809010;
              var index_2801808894 = nsuFindStr(line_2801808887, str_2801808886, chckRange(addInt(result_2801808807.Field1.Field1, 1), 0, 2147483647), -1);
              if ((0 <= index_2801808894)) {
              var colontmp__2801809008 = result_2801808807.Field1.Field0;
              var colontmp__2801809009 = index_2801808894;
              result_2801808807.Field1 = nimCopy(result_2801808807.Field1, {Field0: colontmp__2801809008, Field1: colontmp__2801809009}, NTI2231369737);
              }
              
              i_2801809010 = addInt(i_2801809010, 1);
            }
        };
      };
      }
      else {
        result_2801808807 = nimCopy(result_2801808807, toSelection_2231370221(cursor_2801808804), NTI2231369739);
        var fmtRes_2801808899 = [mnewString(0)];
        fmtRes_2801808899[0].push.apply(fmtRes_2801808899[0], [91,101,114,114,111,114,93,32,85,110,107,110,111,119,110,32,109,111,118,101,32,39]);;
        formatValue_721420459(fmtRes_2801808899, 0, move_2801808805, []);
        fmtRes_2801808899[0].push.apply(fmtRes_2801808899[0], [39]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801808899[0], NTI33554449)]);
      }
      }
      break;
    }
  };

  return result_2801808807;

}

function getSelectionForMoveJsWrapper_2801808798(self_2801808931, cursor_2801808932, move_2801808933, count_2801808934) {
  var result_2801808935 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_2801808935 = nimCopy(result_2801808935, getSelectionForMove_2801808802(self_2801808931, cursor_2801808932, move_2801808933, count_2801808934), NTI2231369739);

  return result_2801808935;

}
editor_text_prototype.getSelectionForMove = function(cursor_ /* : Cursor */, move_ /* : string */, count_ /* : int */) { return (getSelectionForMoveJsWrapper_2801808798(this, cursor_, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function HEX5BHEX5D_2801809080(s_2801809084, x_2801809085) {
  var result_2801809086 = [];

    var a_2801809088 = x_2801809085.a;
    var L_2801809093 = addInt(subInt(subInt((s_2801809084).length, x_2801809085.b), a_2801809088), 1);
    result_2801809086 = new Array(chckRange(L_2801809093, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_2801809093, 0, 2147483647) ; ++i) { result_2801809086[i] = []; }    Label1: {
      var i_2801809102 = 0;
      var i_2801809320 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801809320 < L_2801809093)) break Label3;
            i_2801809102 = i_2801809320;
            result_2801809086[chckIndx(i_2801809102, 0, (result_2801809086).length - 1)] = nimCopy(null, s_2801809084[chckIndx(addInt(i_2801809102, a_2801809088), 0, (s_2801809084).length - 1)], NTI33554449);
            i_2801809320 = addInt(i_2801809320, 1);
          }
      };
    };

  return result_2801809086;

}

function contains_1627393212(node_1627393213, key_1627393214) {
    var Temporary1;

  var result_1627393215 = false;

    if (!((node_1627393213.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,54,52,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = node_1627393213;
    if (ConstSet55[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393215 = hasKey_1627392538(Temporary1.fields, key_1627393214);

  return result_1627393215;

}

function mustRehash_1627390664(t_1627390666) {
  var result_1627390667 = false;

    if (!((t_1627390666.counter < (t_1627390666.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1627390667 = ((mulInt((t_1627390666.data).length, 2) < mulInt(t_1627390666.counter, 3)) || (subInt((t_1627390666.data).length, t_1627390666.counter) < 4));

  return result_1627390667;

}

function rawInsert_1627391242(t_1627391245, data_1627391246, data_1627391246_Idx, key_1627391247, val_1627391248, hc_1627391249, h_1627391250) {
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field2 = nimCopy(null, key_1627391247, NTI33554449);
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field3 = val_1627391248;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field0 = hc_1627391249;
    data_1627391246[data_1627391246_Idx][chckIndx(h_1627391250, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = -1;
    if ((t_1627391245.first < 0)) {
    t_1627391245.first = h_1627391250;
    }
    
    if ((0 <= t_1627391245.last)) {
    data_1627391246[data_1627391246_Idx][chckIndx(t_1627391245.last, 0, (data_1627391246[data_1627391246_Idx]).length - 1)].Field1 = h_1627391250;
    }
    
    t_1627391245.last = h_1627391250;

  
}

function enlarge_1627390827(t_1627390830) {
          var Temporary6;
          var Temporary7;

    var n_1627390833 = [];
    n_1627390833 = new Array(chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1627390830.data).length, 2), 0, 2147483647) ; ++i) { n_1627390833[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    var h_1627390885 = t_1627390830.first;
    t_1627390830.first = -1;
    t_1627390830.last = -1;
    var Temporary1 = t_1627390830.data; t_1627390830.data = n_1627390833; n_1627390833 = Temporary1;    Label2: {
        Label3: while (true) {
        if (!(0 <= h_1627390885)) break Label3;
          var nxt_1627390943 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field1;
          var eh_1627390997 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0;
          if (isFilled_1308622880(eh_1627390997)) {
          var j_1627391001 = (eh_1627390997 & (t_1627390830.data).length - 1);
          Label4: {
              Label5: while (true) {
              if (!isFilled_1308622880(t_1627390830.data[chckIndx(j_1627391001, 0, (t_1627390830.data).length - 1)].Field0)) break Label5;
                j_1627391001 = nextTry_1308622883(j_1627391001, (t_1627390830.data).length - 1);
              }
          };
          Temporary6 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field2, NTI33554449);
          Temporary7 = n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3;
          n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3 = genericReset(n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field3, NTI1627389956);
          rawInsert_1627391242(t_1627390830, t_1627390830, "data", Temporary6, Temporary7, n_1627390833[chckIndx(h_1627390885, 0, (n_1627390833).length - 1)].Field0, j_1627391001);
          }
          
          h_1627390885 = nxt_1627390943;
        }
    };

  
}

function rawGetKnownHC_1627391524(t_1627391527, key_1627391528, hc_1627391529) {
  var result_1627391530 = 0;

  BeforeRet: {
    if (((t_1627391527.data).length == 0)) {
    result_1627391530 = -1;
    break BeforeRet;
    }
    
    var h_1627391581 = (hc_1627391529 & (t_1627391527.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0)) break Label2;
          if (((t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field0 == hc_1627391529) && eqStrings(t_1627391527.data[chckIndx(h_1627391581, 0, (t_1627391527.data).length - 1)].Field2, key_1627391528))) {
          result_1627391530 = h_1627391581;
          break BeforeRet;
          }
          
          h_1627391581 = nextTry_1308622883(h_1627391581, (t_1627391527.data).length - 1);
        }
    };
    result_1627391530 = subInt(-1, h_1627391581);
  };

  return result_1627391530;

}

function HEX5BHEX5DHEX3D_1627390259(t_1627390262, key_1627390263, val_1627390264) {
    if (((t_1627390262.data).length == 0)) {
    var correctSizeHEX60gensym13_1627390314 = slotsNeeded_1308622891(32);
    t_1627390262.counter = 0;
    t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_1627390314, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }    t_1627390262.first = -1;
    t_1627390262.last = -1;
    }
    
    var hc_1627390319 = [0];
    var index_1627390557 = rawGet_1627390328(t_1627390262, key_1627390263, hc_1627390319, 0);
    if ((0 <= index_1627390557)) {
    t_1627390262.data[chckIndx(index_1627390557, 0, (t_1627390262.data).length - 1)].Field3 = val_1627390264;
    }
    else {
      if (((t_1627390262.data).length == 0)) {
      var correctSizeHEX60gensym18_1627390659 = slotsNeeded_1308622891(32);
      t_1627390262.counter = 0;
      t_1627390262.data = new Array(chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_1627390659, 0, 2147483647) ; ++i) { t_1627390262.data[i] = {Field0: 0, Field1: 0, Field2: [], Field3: null}; }      t_1627390262.first = -1;
      t_1627390262.last = -1;
      }
      
      if (mustRehash_1627390664(t_1627390262)) {
      enlarge_1627390827(t_1627390262);
      index_1627390557 = rawGetKnownHC_1627391524(t_1627390262, key_1627390263, hc_1627390319[0]);
      }
      
      index_1627390557 = subInt(-1, index_1627390557);
      rawInsert_1627391242(t_1627390262, t_1627390262, "data", key_1627390263, val_1627390264, hc_1627390319[0], index_1627390557);
      t_1627390262.counter = addInt(t_1627390262.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_1627391903(obj_1627391904, key_1627391905, val_1627391906) {
    var Temporary1;

    if (!((obj_1627391904.kind == 5))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,57,48,44,32,57,41,32,96,111,98,106,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116,96,32]);
    }
    
    var Temporary1 = obj_1627391904;
    if (ConstSet56[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    HEX5BHEX5DHEX3D_1627390259(Temporary1.fields, key_1627391905, val_1627391906);

  
}

function HEX5BHEX5D_2600469248(s_2600469250, i_2600469251) {
  var result_2600469252 = [];

    result_2600469252 = nimCopy(null, s_2600469250[chckIndx(subInt((s_2600469250).length, i_2600469251), 0, (s_2600469250).length - 1)], NTI33554449);

  return result_2600469252;

}

function newJInt_1627390040(n_1627390041) {
  var result_1627390042 = null;

    result_1627390042 = {kind: 2, num: n_1627390041, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390042;

}

function setOption_2801809050(editor_2801809052, path_2801809053, value_2801809054) {
  BeforeRet: {
    Label1: {
      if ((editor_2801809052 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym704_2801809069 = nsuSplitString(path_2801809053, [46], -1);
      var nodeHEX60gensym704_2801809070 = editor_2801809052.options;
      Label2: {
        var keyHEX60gensym704_2801809106 = [];
        var colontmp__2801809315 = [];
        colontmp__2801809315 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym704_2801809069, HEX2EHEX2E_1040187488(0, 2));
        var i_2801809316 = 0;
        var L_2801809317 = (colontmp__2801809315).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2801809316 < L_2801809317)) break Label4;
              keyHEX60gensym704_2801809106 = colontmp__2801809315[chckIndx(i_2801809316, 0, (colontmp__2801809315).length - 1)];
              if (!((nodeHEX60gensym704_2801809070.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym704_2801809070, keyHEX60gensym704_2801809106))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym704_2801809070, keyHEX60gensym704_2801809106, newJObject_1627390051());
              }
              
              nodeHEX60gensym704_2801809070 = HEX5BHEX5D_1627393037(nodeHEX60gensym704_2801809070, keyHEX60gensym704_2801809106);
              i_2801809316 = addInt(i_2801809316, 1);
              if (!(((colontmp__2801809315).length == L_2801809317))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym704_2801809070 == null) || !((nodeHEX60gensym704_2801809070.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym704_2801809070, HEX5BHEX5D_2600469248(pathItemsHEX60gensym704_2801809069, 1), newJInt_1627390040(value_2801809054));
    };
  };

  
}

function getOption_2801809122(editor_2801809124, path_2801809125, default_2801809126) {
  var result_2801809131 = [];

  BeforeRet: {
    Label1: {
      if ((editor_2801809124 == null)) {
      result_2801809131 = nimCopy(null, default_2801809126, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym709_2801809144 = HEX7BHEX7D_1627393316(editor_2801809124.options, nsuSplitString(path_2801809125, [46], -1));
      if ((nodeHEX60gensym709_2801809144 == null)) {
      result_2801809131 = nimCopy(null, default_2801809126, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_2801809131 = nimCopy(null, getStr_1627390106(nodeHEX60gensym709_2801809144, default_2801809126), NTI33554449);
    break BeforeRet;
  };

  return result_2801809131;

}

function getInt_1627390118(n_1627390119, default_1627390120) {
      var Temporary1;

  var result_1627390121 = 0;

  BeforeRet: {
    if (((n_1627390119 == null) || !((n_1627390119.kind == 2)))) {
    result_1627390121 = default_1627390120;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390119;
      if (ConstSet57[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390121 = chckRange(Temporary1.num, -2147483648, 2147483647);
      break BeforeRet;
    }
    
  };

  return result_1627390121;

}

function getOption_2801809148(editor_2801809150, path_2801809151, default_2801809152) {
  var result_2801809157 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_2801809150 == null)) {
      result_2801809157 = default_2801809152;
      break BeforeRet;
      }
      
      var nodeHEX60gensym710_2801809169 = HEX7BHEX7D_1627393316(editor_2801809150.options, nsuSplitString(path_2801809151, [46], -1));
      if ((nodeHEX60gensym710_2801809169 == null)) {
      result_2801809157 = default_2801809152;
      break BeforeRet;
      }
      
    };
    result_2801809157 = getInt_1627390118(nodeHEX60gensym710_2801809169, default_2801809152);
    break BeforeRet;
  };

  return result_2801809157;

}

function newJString_1627389994(s_1627389995) {
  var result_1627389996 = null;

    result_1627389996 = {kind: 4, str: nimCopy(null, s_1627389995, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627389996;

}

function setOption_2801809182(editor_2801809184, path_2801809185, value_2801809186) {
  BeforeRet: {
    Label1: {
      if ((editor_2801809184 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym711_2801809202 = nsuSplitString(path_2801809185, [46], -1);
      var nodeHEX60gensym711_2801809203 = editor_2801809184.options;
      Label2: {
        var keyHEX60gensym711_2801809222 = [];
        var colontmp__2801809329 = [];
        colontmp__2801809329 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym711_2801809202, HEX2EHEX2E_1040187488(0, 2));
        var i_2801809330 = 0;
        var L_2801809331 = (colontmp__2801809329).length;
        Label3: {
            Label4: while (true) {
            if (!(i_2801809330 < L_2801809331)) break Label4;
              keyHEX60gensym711_2801809222 = colontmp__2801809329[chckIndx(i_2801809330, 0, (colontmp__2801809329).length - 1)];
              if (!((nodeHEX60gensym711_2801809203.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym711_2801809203, keyHEX60gensym711_2801809222))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym711_2801809203, keyHEX60gensym711_2801809222, newJObject_1627390051());
              }
              
              nodeHEX60gensym711_2801809203 = HEX5BHEX5D_1627393037(nodeHEX60gensym711_2801809203, keyHEX60gensym711_2801809222);
              i_2801809330 = addInt(i_2801809330, 1);
              if (!(((colontmp__2801809329).length == L_2801809331))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym711_2801809203 == null) || !((nodeHEX60gensym711_2801809203.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym711_2801809203, HEX5BHEX5D_2600469248(pathItemsHEX60gensym711_2801809202, 1), newJString_1627389994(value_2801809186));
    };
  };

  
}

function setMove_2801809047(self_2801809048, args_2801809049) {
    setOption_2801809050(self_2801809048.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], getCommandCount_2801808265(self_2801809048));
    setMode_2801803857(self_2801809048, getOption_2801809122(self_2801809048.editor, [116,101,120,116,46,109,111,118,101,45,110,101,120,116,45,109,111,100,101], []));
    setCommandCount_2801808322(self_2801809048, getOption_2801809148(self_2801809048.editor, [116,101,120,116,46,109,111,118,101,45,99,111,109,109,97,110,100,45,99,111,117,110,116], 0));
    var _ = runAction_2801808632(self_2801809048, getOption_2801809122(self_2801809048.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []), args_2801809049);
    setOption_2801809182(self_2801809048.editor, [116,101,120,116,46,109,111,118,101,45,97,99,116,105,111,110], []);

  
}

function setMoveJsWrapper_2801809043(self_2801809266, args_2801809267) {
    setMove_2801809047(self_2801809266, args_2801809267);

  
}
editor_text_prototype.setMove = function(args_ /* : JsonNode */) { return (setMoveJsWrapper_2801809043(this, args_));};

function deleteMove_2801809339(self_2801809340, move_2801809341, which_2801809342, all_2801809343) {
    move_2801809341 = nimCopy(null, move_2801809341, NTI33554449);
    
function HEX3Aanonymous_2801809355(s_2801809362) {
        var Temporary1;

      var result_2801809365 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2801809354) {
        Temporary1 = getSelectionForMove_2801808802(self_2801809340, s_2801809362.Field1, move_2801809341, count_2801809353);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2801809362.Field1, NTI2231369737), Field1: nimCopy(null, getSelectionForMove_2801808802(self_2801809340, s_2801809362.Field1, move_2801809341, count_2801809353).Field1, NTI2231369737)};
        }
        
        result_2801809365 = nimCopy(result_2801809365, Temporary1, NTI2231369739);

      return result_2801809365;

    }

    var count_2801809353 = getOption_2801809148(self_2801809340.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2801809354 = getFlag_2801808562(self_2801809340, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2801809372 = map_2801795498(selections_2801795565(self_2801809340), HEX3Aanonymous_2801809355);
    selectionsHEX3D_2801795824(self_2801809340, delete_2801799170(self_2801809340.document, selections_2801809372, selections_2801795565(self_2801809340), true, true));
    scrollToCursor_2801803672(self_2801809340, 3);
    updateTargetColumn_2801804235(self_2801809340, 3);

  
}

function deleteMoveJsWrapper_2801809335(self_2801809404, move_2801809405, which_2801809406, all_2801809407) {
    deleteMove_2801809339(self_2801809404, move_2801809405, which_2801809406, all_2801809407);

  
}
editor_text_prototype.deleteMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (deleteMoveJsWrapper_2801809335(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function mapAllOrLast_2801809466(self_2801809468, all_2801809469, p_2801809471) {
    
function HEX3Aanonymous_2801809473(s_2801809480) {
      var result_2801809483 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801809483 = nimCopy(result_2801809483, p_2801809471(s_2801809480), NTI2231369739);

      return result_2801809483;

    }

  var result_2801809472 = [];

    if (all_2801809469) {
    result_2801809472 = nimCopy(null, map_2801795498(self_2801809468, HEX3Aanonymous_2801809473), NTI2801795379);
    }
    else {
      result_2801809472 = nimCopy(null, self_2801809468, NTI2801804584);
      if ((0 < (result_2801809472).length)) {
      result_2801809472[chckIndx((result_2801809472).length - 1, 0, (result_2801809472).length - 1)] = nimCopy(result_2801809472[chckIndx((result_2801809472).length - 1, 0, (result_2801809472).length - 1)], p_2801809471(result_2801809472[chckIndx((result_2801809472).length - 1, 0, (result_2801809472).length - 1)]), NTI2231369739);
      }
      
    }
    

  return result_2801809472;

}

function selectMove_2801809443(self_2801809444, move_2801809445, which_2801809446, all_2801809447) {
    move_2801809445 = nimCopy(null, move_2801809445, NTI33554449);
    
function HEX3Aanonymous_2801809458(s_2801809461) {
      var result_2801809464 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        result_2801809464 = nimCopy(result_2801809464, getSelectionForMove_2801808802(self_2801809444, s_2801809461.Field1, move_2801809445, count_2801809457), NTI2231369739);

      return result_2801809464;

    }

    var count_2801809457 = getOption_2801809148(self_2801809444.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    selectionsHEX3D_2801795824(self_2801809444, mapAllOrLast_2801809466(selections_2801795565(self_2801809444), all_2801809447, HEX3Aanonymous_2801809458));
    scrollToCursor_2801803672(self_2801809444, 3);
    updateTargetColumn_2801804235(self_2801809444, 3);

  
}

function selectMoveJsWrapper_2801809439(self_2801809533, move_2801809534, which_2801809535, all_2801809536) {
    selectMove_2801809443(self_2801809533, move_2801809534, which_2801809535, all_2801809536);

  
}
editor_text_prototype.selectMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (selectMoveJsWrapper_2801809439(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function changeMove_2801809572(self_2801809573, move_2801809574, which_2801809575, all_2801809576) {
    move_2801809574 = nimCopy(null, move_2801809574, NTI33554449);
    
function HEX3Aanonymous_2801809588(s_2801809595) {
        var Temporary1;

      var result_2801809598 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

        if (inside_2801809587) {
        Temporary1 = getSelectionForMove_2801808802(self_2801809573, s_2801809595.Field1, move_2801809574, count_2801809586);
        }
        else {
        Temporary1 = {Field0: nimCopy(null, s_2801809595.Field1, NTI2231369737), Field1: nimCopy(null, getSelectionForMove_2801808802(self_2801809573, s_2801809595.Field1, move_2801809574, count_2801809586).Field1, NTI2231369737)};
        }
        
        result_2801809598 = nimCopy(result_2801809598, Temporary1, NTI2231369739);

      return result_2801809598;

    }

    var count_2801809586 = getOption_2801809148(self_2801809573.editor, [116,101,120,116,46,109,111,118,101,45,99,111,117,110,116], 0);
    var inside_2801809587 = getFlag_2801808562(self_2801809573, [109,111,118,101,45,105,110,115,105,100,101]);
    var selections_2801809605 = map_2801795498(selections_2801795565(self_2801809573), HEX3Aanonymous_2801809588);
    selectionsHEX3D_2801795824(self_2801809573, delete_2801799170(self_2801809573.document, selections_2801809605, selections_2801795565(self_2801809573), true, true));
    scrollToCursor_2801803672(self_2801809573, 3);
    updateTargetColumn_2801804235(self_2801809573, 3);

  
}

function changeMoveJsWrapper_2801809568(self_2801809637, move_2801809638, which_2801809639, all_2801809640) {
    changeMove_2801809572(self_2801809637, move_2801809638, which_2801809639, all_2801809640);

  
}
editor_text_prototype.changeMove = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */) { return (changeMoveJsWrapper_2801809568(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_));};

function toSelection_2231370224(cursor_2231370225, default_2231370226, which_2231370227) {
  var result_2231370228 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    switch (which_2231370227) {
    case 0:
      result_2231370228 = nimCopy(result_2231370228, default_2231370226, NTI2231369739);
      break BeforeRet;
      break;
    case 1:
      var colontmp__2801809789 = nimCopy(null, cursor_2231370225, NTI2231369737);
      var colontmp__2801809790 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2801809789, NTI2231369737), Field1: nimCopy(null, colontmp__2801809790, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 2:
      var colontmp__2801809791 = nimCopy(null, cursor_2231370225, NTI2231369737);
      var colontmp__2801809792 = nimCopy(null, default_2231370226.Field1, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2801809791, NTI2231369737), Field1: nimCopy(null, colontmp__2801809792, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 3:
      var colontmp__2801809793 = nimCopy(null, default_2231370226.Field0, NTI2231369737);
      var colontmp__2801809794 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2801809793, NTI2231369737), Field1: nimCopy(null, colontmp__2801809794, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    case 4:
      var colontmp__2801809795 = nimCopy(null, default_2231370226.Field1, NTI2231369737);
      var colontmp__2801809796 = nimCopy(null, cursor_2231370225, NTI2231369737);
      result_2231370228 = nimCopy(result_2231370228, {Field0: nimCopy(null, colontmp__2801809795, NTI2231369737), Field1: nimCopy(null, colontmp__2801809796, NTI2231369737)}, NTI2231369739);
      break BeforeRet;
      break;
    }
  };

  return result_2231370228;

}

function cursor_2801809027(self_2801809028, selection_2801809029, which_2801809030) {
  var result_2801809031 = {Field0: 0, Field1: 0};

  BeforeRet: {
    switch (which_2801809030) {
    case 0:
      result_2801809031 = nimCopy(result_2801809031, cursor_2801809027(self_2801809028, selection_2801809029, getOption_2801803256(self_2801809028.editor, getContextWithMode_2801803222(self_2801809028, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369737);
      break BeforeRet;
      break;
    case 1:
      result_2801809031 = nimCopy(result_2801809031, selection_2801809029.Field1, NTI2231369737);
      break BeforeRet;
      break;
    case 2:
      result_2801809031 = nimCopy(result_2801809031, selection_2801809029.Field0, NTI2231369737);
      break BeforeRet;
      break;
    case 3:
    case 4:
      result_2801809031 = nimCopy(result_2801809031, selection_2801809029.Field1, NTI2231369737);
      break BeforeRet;
      break;
    }
  };

  return result_2801809031;

}

function moveLast_2801809676(self_2801809677, move_2801809678, which_2801809679, all_2801809680, count_2801809681) {
      move_2801809678 = nimCopy(null, move_2801809678, NTI33554449);
      
function HEX3Aanonymous_2801809682(s_2801809685) {
        var result_2801809688 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801809688 = nimCopy(result_2801809688, toSelection_2231370224(getSelectionForMove_2801808802(self_2801809677, cursor_2801809027(self_2801809677, s_2801809685, which_2801809679), move_2801809678, count_2801809681).Field1, s_2801809685, getOption_2801803256(self_2801809677.editor, getContextWithMode_2801803222(self_2801809677, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369739);

        return result_2801809688;

      }
      
function HEX3Aanonymous_2801809705(s_2801809708) {
        var result_2801809711 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801809711 = nimCopy(result_2801809711, toSelection_2231370224(getSelectionForMove_2801808802(self_2801809677, cursor_2801809027(self_2801809677, s_2801809708, which_2801809679), move_2801809678, count_2801809681).Field1, s_2801809708, which_2801809679), NTI2231369739);

        return result_2801809711;

      }

    switch (which_2801809679) {
    case 0:
      selectionsHEX3D_2801795824(self_2801809677, mapAllOrLast_2801809466(selections_2801795565(self_2801809677), all_2801809680, HEX3Aanonymous_2801809682));
      break;
    default: 
      selectionsHEX3D_2801795824(self_2801809677, mapAllOrLast_2801809466(selections_2801795565(self_2801809677), all_2801809680, HEX3Aanonymous_2801809705));
      break;
    }
    scrollToCursor_2801803672(self_2801809677, which_2801809679);
    updateTargetColumn_2801804235(self_2801809677, which_2801809679);

  
}

function moveLastJsWrapper_2801809672(self_2801809750, move_2801809751, which_2801809752, all_2801809753, count_2801809754) {
    moveLast_2801809676(self_2801809750, move_2801809751, which_2801809752, all_2801809753, count_2801809754);

  
}
editor_text_prototype.moveLast = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveLastJsWrapper_2801809672(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function moveFirst_2801809803(self_2801809804, move_2801809805, which_2801809806, all_2801809807, count_2801809808) {
      move_2801809805 = nimCopy(null, move_2801809805, NTI33554449);
      
function HEX3Aanonymous_2801809809(s_2801809812) {
        var result_2801809815 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801809815 = nimCopy(result_2801809815, toSelection_2231370224(getSelectionForMove_2801808802(self_2801809804, cursor_2801809027(self_2801809804, s_2801809812, which_2801809806), move_2801809805, count_2801809808).Field0, s_2801809812, getOption_2801803256(self_2801809804.editor, getContextWithMode_2801803222(self_2801809804, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116]), 1)), NTI2231369739);

        return result_2801809815;

      }
      
function HEX3Aanonymous_2801809832(s_2801809835) {
        var result_2801809838 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

          result_2801809838 = nimCopy(result_2801809838, toSelection_2231370224(getSelectionForMove_2801808802(self_2801809804, cursor_2801809027(self_2801809804, s_2801809835, which_2801809806), move_2801809805, count_2801809808).Field0, s_2801809835, which_2801809806), NTI2231369739);

        return result_2801809838;

      }

    switch (which_2801809806) {
    case 0:
      selectionsHEX3D_2801795824(self_2801809804, mapAllOrLast_2801809466(selections_2801795565(self_2801809804), all_2801809807, HEX3Aanonymous_2801809809));
      break;
    default: 
      selectionsHEX3D_2801795824(self_2801809804, mapAllOrLast_2801809466(selections_2801795565(self_2801809804), all_2801809807, HEX3Aanonymous_2801809832));
      break;
    }
    scrollToCursor_2801803672(self_2801809804, which_2801809806);
    updateTargetColumn_2801804235(self_2801809804, which_2801809806);

  
}

function moveFirstJsWrapper_2801809799(self_2801809877, move_2801809878, which_2801809879, all_2801809880, count_2801809881) {
    moveFirst_2801809803(self_2801809877, move_2801809878, which_2801809879, all_2801809880, count_2801809881);

  
}
editor_text_prototype.moveFirst = function(move_ /* : string */, which_ /* : SelectionCursor */, all_ /* : bool */, count_ /* : int */) { return (moveFirstJsWrapper_2801809799(this, move_ == undefined ? undefined : cstrToNimstr(move_), which_, all_, count_));};

function some_2801809925(val_2801809927) {
  var result_2801809928 = ({val: ({impl: null}), has: false});

    result_2801809928.has = true;
    result_2801809928.val = nimCopy(result_2801809928.val, val_2801809927, NTI2835349507);

  return result_2801809928;

}

function isNone_2801800123(self_2801800125) {
  var result_2801800126 = false;

    result_2801800126 = !(self_2801800125.has);

  return result_2801800126;

}

function clear_2801800173(t_2801800176) {
    Label1: {
      var i_2801800234 = 0;
      var colontmp__2801809995 = 0;
      colontmp__2801809995 = (t_2801800176.data).length;
      var i_2801809996 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2801809996 < colontmp__2801809995)) break Label3;
            i_2801800234 = i_2801809996;
            t_2801800176.data[chckIndx(i_2801800234, 0, (t_2801800176.data).length - 1)].Field0 = 0;
            t_2801800176.data[chckIndx(i_2801800234, 0, (t_2801800176.data).length - 1)].Field1 = 0;
            t_2801800176.data[chckIndx(i_2801800234, 0, (t_2801800176.data).length - 1)].Field2 = nimCopy(null, [], NTI2801795304);
            i_2801809996 = addInt(i_2801809996, 1);
          }
      };
    };
    t_2801800176.counter = 0;

  
}

function findBounds_2835349511(text_2835349512, regex_2835349513, start_2835349514) {
  var result_2835349517 = {Field0: 0, Field1: 0};

  BeforeRet: {
    regex_2835349513.impl.lastIndex = 0;
    var bounds_2835349536 = ((regex_2835349513.impl.exec(toJSStr(HEX5BHEX5D_855639319(text_2835349512, HEX2EHEX2E_1040187488(start_2835349514, 1))))) || {indices: [[-1, 0]]}).indices[0];
    var colontmp__2801809998 = bounds_2835349536[chckIndx(0, 0, (bounds_2835349536).length - 1)];
    var colontmp__2801809999 = subInt(bounds_2835349536[chckIndx(1, 0, (bounds_2835349536).length - 1)], 1);
    result_2835349517 = nimCopy(result_2835349517, {Field0: colontmp__2801809998, Field1: colontmp__2801809999}, NTI2835349511);
    break BeforeRet;
  };

  return result_2835349517;

}

function get_2801800734(self_2801800736) {
  var result_2801800737 = null;

  BeforeRet: {
    if (isNone_2801800123(self_2801800736)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801800737 = self_2801800736.val;
    break BeforeRet;
  };

  return result_2801800737;

}

function mustRehash_2801801310(t_2801801312) {
  var result_2801801313 = false;

    if (!((t_2801801312.counter < (t_2801801312.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801801313 = ((mulInt((t_2801801312.data).length, 2) < mulInt(t_2801801312.counter, 3)) || (subInt((t_2801801312.data).length, t_2801801312.counter) < 4));

  return result_2801801313;

}

function rawInsert_2801801859(t_2801801863, data_2801801864, data_2801801864_Idx, key_2801801865, val_2801801866, hc_2801801867, h_2801801868) {
    data_2801801864[data_2801801864_Idx][chckIndx(h_2801801868, 0, (data_2801801864[data_2801801864_Idx]).length - 1)].Field1 = key_2801801865;
    data_2801801864[data_2801801864_Idx][chckIndx(h_2801801868, 0, (data_2801801864[data_2801801864_Idx]).length - 1)].Field2 = nimCopy(null, val_2801801866, NTI2801795304);
    data_2801801864[data_2801801864_Idx][chckIndx(h_2801801868, 0, (data_2801801864[data_2801801864_Idx]).length - 1)].Field0 = hc_2801801867;

  
}

function enlarge_2801801480(t_2801801483) {
    var n_2801801486 = [];
    n_2801801486 = new Array(chckRange(mulInt((t_2801801483.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801801483.data).length, 2), 0, 2147483647) ; ++i) { n_2801801486[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_2801801483.data; t_2801801483.data = n_2801801486; n_2801801486 = Temporary1;    Label2: {
      var i_2801801555 = 0;
      var colontmp__2801810002 = 0;
      colontmp__2801810002 = (n_2801801486).length - 1;
      var res_2801810003 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801810003 <= colontmp__2801810002)) break Label4;
            i_2801801555 = res_2801810003;
            var eh_2801801629 = n_2801801486[chckIndx(i_2801801555, 0, (n_2801801486).length - 1)].Field0;
            if (isFilled_1308622880(eh_2801801629)) {
            var j_2801801633 = (eh_2801801629 & (t_2801801483.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2801801483.data[chckIndx(j_2801801633, 0, (t_2801801483.data).length - 1)].Field0)) break Label6;
                  j_2801801633 = nextTry_1308622883(j_2801801633, (t_2801801483.data).length - 1);
                }
            };
            rawInsert_2801801859(t_2801801483, t_2801801483, "data", n_2801801486[chckIndx(i_2801801555, 0, (n_2801801486).length - 1)].Field1, n_2801801486[chckIndx(i_2801801555, 0, (n_2801801486).length - 1)].Field2, eh_2801801629, j_2801801633);
            }
            
            res_2801810003 = addInt(res_2801810003, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801802088(t_2801802091, key_2801802092, hc_2801802093) {
  var result_2801802094 = 0;

  BeforeRet: {
    if (((t_2801802091.data).length == 0)) {
    result_2801802094 = -1;
    break BeforeRet;
    }
    
    var h_2801802150 = (hc_2801802093 & (t_2801802091.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801802091.data[chckIndx(h_2801802150, 0, (t_2801802091.data).length - 1)].Field0)) break Label2;
          if (((t_2801802091.data[chckIndx(h_2801802150, 0, (t_2801802091.data).length - 1)].Field0 == hc_2801802093) && (t_2801802091.data[chckIndx(h_2801802150, 0, (t_2801802091.data).length - 1)].Field1 == key_2801802092))) {
          result_2801802094 = h_2801802150;
          break BeforeRet;
          }
          
          h_2801802150 = nextTry_1308622883(h_2801802150, (t_2801802091.data).length - 1);
        }
    };
    result_2801802094 = subInt(-1, h_2801802150);
  };

  return result_2801802094;

}

function HEX5BHEX5DHEX3D_2801800807(t_2801800810, key_2801800811, val_2801800812) {
    if (((t_2801800810.data).length == 0)) {
    var correctSizeHEX60gensym123_2801800866 = slotsNeeded_1308622891(32);
    t_2801800810.counter = 0;
    t_2801800810.data = new Array(chckRange(correctSizeHEX60gensym123_2801800866, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym123_2801800866, 0, 2147483647) ; ++i) { t_2801800810.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_2801800871 = [0];
    var index_2801801178 = rawGet_2801800872(t_2801800810, key_2801800811, hc_2801800871, 0);
    if ((0 <= index_2801801178)) {
    t_2801800810.data[chckIndx(index_2801801178, 0, (t_2801800810.data).length - 1)].Field2 = nimCopy(null, val_2801800812, NTI2801795304);
    }
    else {
      if (((t_2801800810.data).length == 0)) {
      var correctSizeHEX60gensym128_2801801305 = slotsNeeded_1308622891(32);
      t_2801800810.counter = 0;
      t_2801800810.data = new Array(chckRange(correctSizeHEX60gensym128_2801801305, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym128_2801801305, 0, 2147483647) ; ++i) { t_2801800810.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_2801801310(t_2801800810)) {
      enlarge_2801801480(t_2801800810);
      index_2801801178 = rawGetKnownHC_2801802088(t_2801800810, key_2801800811, hc_2801800871[0]);
      }
      
      index_2801801178 = subInt(-1, index_2801801178);
      rawInsert_2801801859(t_2801800810, t_2801800810, "data", key_2801800811, val_2801800812, hc_2801800871[0], index_2801801178);
      t_2801800810.counter = addInt(t_2801800810.counter, 1);
    }
    

  
}

function isEmpty_1308622877(hcode_1308622878) {
  var result_1308622879 = false;

    result_1308622879 = (hcode_1308622878 == 0);

  return result_1308622879;

}

function del_2801802431(t_2801802434, key_2801802435) {
    var hc_2801802436 = [0];
    var i_2801802443 = rawGet_2801800872(t_2801802434, key_2801802435, hc_2801802436, 0);
    var mskHEX60gensym36_2801802447 = (t_2801802434.data).length - 1;
    if ((0 <= i_2801802443)) {
    t_2801802434.counter = subInt(t_2801802434.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2801802454 = i_2801802443;
            var rHEX60gensym36_2801802455 = jHEX60gensym36_2801802454;
            t_2801802434.data[chckIndx(i_2801802443, 0, (t_2801802434.data).length - 1)].Field0 = 0;
            t_2801802434.data[chckIndx(i_2801802443, 0, (t_2801802434.data).length - 1)].Field1 = 0;
            t_2801802434.data[chckIndx(i_2801802443, 0, (t_2801802434.data).length - 1)].Field2 = nimCopy(null, [], NTI2801795304);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2801802443 = (addInt(i_2801802443, 1) & mskHEX60gensym36_2801802447);
                  if (isEmpty_1308622877(t_2801802434.data[chckIndx(i_2801802443, 0, (t_2801802434.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2801802455 = (t_2801802434.data[chckIndx(i_2801802443, 0, (t_2801802434.data).length - 1)].Field0 & mskHEX60gensym36_2801802447);
                  if (!(((((rHEX60gensym36_2801802455 <= i_2801802443) && (jHEX60gensym36_2801802454 < rHEX60gensym36_2801802455)) || ((jHEX60gensym36_2801802454 < rHEX60gensym36_2801802455) && (i_2801802443 < jHEX60gensym36_2801802454))) || ((i_2801802443 < jHEX60gensym36_2801802454) && (rHEX60gensym36_2801802455 <= i_2801802443))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2801802434.data[chckIndx(jHEX60gensym36_2801802454, 0, (t_2801802434.data).length - 1)] = nimCopy(t_2801802434.data[chckIndx(jHEX60gensym36_2801802454, 0, (t_2801802434.data).length - 1)], t_2801802434.data[chckIndx(i_2801802443, 0, (t_2801802434.data).length - 1)], NTI2801795316);
          }
      };
    };
    }
    

  
}

function updateSearchResults_2801800117(self_2801800118) {
  BeforeRet: {
    if (isNone_2801800123(self_2801800118.searchRegex)) {
    clear_2801800173(self_2801800118.searchResults);
    markDirty_2147483686(self_2801800118);
    break BeforeRet;
    }
    
    Label1: {
      var i_2801800714 = 0;
      var line_2801800715 = [];
      var i_2801809991 = 0;
      var L_2801809992 = (self_2801800118.document.lines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801809991 < L_2801809992)) break Label3;
            i_2801800714 = i_2801809991;
            line_2801800715 = self_2801800118.document.lines[chckIndx(i_2801809991, 0, (self_2801800118.document.lines).length - 1)];
            var selections_2801800720 = [];
            var start_2801800721 = 0;
            Label4: {
                Label5: while (true) {
                if (!(start_2801800721 < (line_2801800715).length)) break Label5;
                  var bounds_2801800746 = findBounds_2835349511(line_2801800715, get_2801800734(self_2801800118.searchRegex), start_2801800721);
                  if ((bounds_2801800746.Field0 == -1)) {
                  break Label4;
                  }
                  
                  selections_2801800720.push({Field0: {Field0: i_2801800714, Field1: bounds_2801800746.Field0}, Field1: {Field0: i_2801800714, Field1: addInt(bounds_2801800746.Field1, 1)}});;
                  start_2801800721 = nimMax(addInt(bounds_2801800746.Field1, 1), addInt(start_2801800721, 1));
                }
            };
            if ((0 < (selections_2801800720).length)) {
            HEX5BHEX5DHEX3D_2801800807(self_2801800118.searchResults, i_2801800714, selections_2801800720);
            }
            else {
            del_2801802431(self_2801800118.searchResults, i_2801800714);
            }
            
            i_2801809991 = addInt(i_2801809991, 1);
            if (!(((self_2801800118.document.lines).length == L_2801809992))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    markDirty_2147483686(self_2801800118);
  };

  
}

function setSearchQuery_2801809922(self_2801809923, query_2801809924) {
    self_2801809923.searchQuery = nimCopy(null, query_2801809924, NTI33554449);
    self_2801809923.searchRegex = nimCopy(self_2801809923.searchRegex, some_2801809925(re_2835349563(query_2801809924)), NTI2801795293);
    updateSearchResults_2801800117(self_2801809923);

  
}

function setSearchQueryJsWrapper_2801809918(self_2801809967, query_2801809968) {
    setSearchQuery_2801809922(self_2801809967, query_2801809968);

  
}
editor_text_prototype.setSearchQuery = function(query_ /* : string */) { return (setSearchQueryJsWrapper_2801809918(this, query_ == undefined ? undefined : cstrToNimstr(query_)));};

function setSearchQueryFromMove_2801810014(self_2801810015, move_2801810016, count_2801810017) {
    var selection_2801810018 = getSelectionForMove_2801808802(self_2801810015, selection_2801795568(self_2801810015).Field1, move_2801810016, count_2801810017);
    selectionHEX3D_2801795574(self_2801810015, selection_2801810018);
    setSearchQuery_2801809922(self_2801810015, contentString_2801796225(self_2801810015.document, selection_2801810018));

  
}

function setSearchQueryFromMoveJsWrapper_2801810010(self_2801810048, move_2801810049, count_2801810050) {
    setSearchQueryFromMove_2801810014(self_2801810048, move_2801810049, count_2801810050);

  
}
editor_text_prototype.setSearchQueryFromMove = function(move_ /* : string */, count_ /* : int */) { return (setSearchQueryFromMoveJsWrapper_2801810010(this, move_ == undefined ? undefined : cstrToNimstr(move_), count_));};

function none_2919235608() {
  var result_2919235614 = ({val: null});

  return result_2919235614;

}

function isSome_2801799047(self_2801799049) {
  var result_2801799050 = false;

    result_2801799050 = !((self_2801799049.val == null));

  return result_2801799050;

}
async function getOrCreateLanguageServer_2919235592(languageId_2919235593, filename_2919235594) {
  var result_2919235598 = null;

  BeforeRet: {
    result_2919235598 = none_2919235608();
    break BeforeRet;
  };

  return result_2919235598;

}
async function saveTempFile_2801799021(self_2801799022, filename_2801799023) {
  var result_2801799025 = null;

  BeforeRet: {
    result_2801799025 = undefined;
    break BeforeRet;
  };

  return result_2801799025;

}

function hash_2902458976(x_2902458978) {
  var result_2902458979 = 0;

    result_2902458979 = hashWangYi1_1325400244(x_2902458978);

  return result_2902458979;

}

function rawGet_2902458969(t_2902458972, key_2902458973, hc_2902458974, hc_2902458974_Idx) {
  var result_2902458975 = 0;

  BeforeRet: {
    hc_2902458974[hc_2902458974_Idx] = hash_2902458976(key_2902458973);
    if ((hc_2902458974[hc_2902458974_Idx] == 0)) {
    hc_2902458974[hc_2902458974_Idx] = 314159265;
    }
    
    if (((t_2902458972.data).length == 0)) {
    result_2902458975 = -1;
    break BeforeRet;
    }
    
    var h_2902459038 = (hc_2902458974[hc_2902458974_Idx] & (t_2902458972.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902458972.data[chckIndx(h_2902459038, 0, (t_2902458972.data).length - 1)].Field0)) break Label2;
          if (((t_2902458972.data[chckIndx(h_2902459038, 0, (t_2902458972.data).length - 1)].Field0 == hc_2902458974[hc_2902458974_Idx]) && (t_2902458972.data[chckIndx(h_2902459038, 0, (t_2902458972.data).length - 1)].Field1 == key_2902458973))) {
          result_2902458975 = h_2902459038;
          break BeforeRet;
          }
          
          h_2902459038 = nextTry_1308622883(h_2902459038, (t_2902458972.data).length - 1);
        }
    };
    result_2902458975 = subInt(-1, h_2902459038);
  };

  return result_2902458975;

}

function mustRehash_2902459536(t_2902459538) {
  var result_2902459539 = false;

    if (!((t_2902459538.counter < (t_2902459538.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2902459539 = ((mulInt((t_2902459538.data).length, 2) < mulInt(t_2902459538.counter, 3)) || (subInt((t_2902459538.data).length, t_2902459538.counter) < 4));

  return result_2902459539;

}

function rawInsert_2902459985(t_2902459989, data_2902459990, data_2902459990_Idx, key_2902459991, val_2902459992, hc_2902459993, h_2902459994) {
    data_2902459990[data_2902459990_Idx][chckIndx(h_2902459994, 0, (data_2902459990[data_2902459990_Idx]).length - 1)].Field1 = key_2902459991;
    data_2902459990[data_2902459990_Idx][chckIndx(h_2902459994, 0, (data_2902459990[data_2902459990_Idx]).length - 1)].Field2 = val_2902459992;
    data_2902459990[data_2902459990_Idx][chckIndx(h_2902459994, 0, (data_2902459990[data_2902459990_Idx]).length - 1)].Field0 = hc_2902459993;

  
}

function enlarge_2902459691(t_2902459694) {
    var n_2902459697 = [];
    n_2902459697 = new Array(chckRange(mulInt((t_2902459694.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2902459694.data).length, 2), 0, 2147483647) ; ++i) { n_2902459697[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2902459694.data; t_2902459694.data = n_2902459697; n_2902459697 = Temporary1;    Label2: {
      var i_2902459761 = 0;
      var colontmp__2801810456 = 0;
      colontmp__2801810456 = (n_2902459697).length - 1;
      var res_2801810457 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801810457 <= colontmp__2801810456)) break Label4;
            i_2902459761 = res_2801810457;
            var eh_2902459815 = n_2902459697[chckIndx(i_2902459761, 0, (n_2902459697).length - 1)].Field0;
            if (isFilled_1308622880(eh_2902459815)) {
            var j_2902459819 = (eh_2902459815 & (t_2902459694.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2902459694.data[chckIndx(j_2902459819, 0, (t_2902459694.data).length - 1)].Field0)) break Label6;
                  j_2902459819 = nextTry_1308622883(j_2902459819, (t_2902459694.data).length - 1);
                }
            };
            rawInsert_2902459985(t_2902459694, t_2902459694, "data", n_2902459697[chckIndx(i_2902459761, 0, (n_2902459697).length - 1)].Field1, n_2902459697[chckIndx(i_2902459761, 0, (n_2902459697).length - 1)].Field2, eh_2902459815, j_2902459819);
            }
            
            res_2801810457 = addInt(res_2801810457, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2902460172(t_2902460175, key_2902460176, hc_2902460177) {
  var result_2902460178 = 0;

  BeforeRet: {
    if (((t_2902460175.data).length == 0)) {
    result_2902460178 = -1;
    break BeforeRet;
    }
    
    var h_2902460229 = (hc_2902460177 & (t_2902460175.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902460175.data[chckIndx(h_2902460229, 0, (t_2902460175.data).length - 1)].Field0)) break Label2;
          if (((t_2902460175.data[chckIndx(h_2902460229, 0, (t_2902460175.data).length - 1)].Field0 == hc_2902460177) && (t_2902460175.data[chckIndx(h_2902460229, 0, (t_2902460175.data).length - 1)].Field1 == key_2902460176))) {
          result_2902460178 = h_2902460229;
          break BeforeRet;
          }
          
          h_2902460229 = nextTry_1308622883(h_2902460229, (t_2902460175.data).length - 1);
        }
    };
    result_2902460178 = subInt(-1, h_2902460229);
  };

  return result_2902460178;

}

function HEX5BHEX5DHEX3D_2902459363(t_2902459366, key_2902459367, val_2902459368) {
    if (((t_2902459366.data).length == 0)) {
    var correctSizeHEX60gensym12_2902459417 = slotsNeeded_1308622891(32);
    t_2902459366.counter = 0;
    t_2902459366.data = new Array(chckRange(correctSizeHEX60gensym12_2902459417, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym12_2902459417, 0, 2147483647) ; ++i) { t_2902459366.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2902459422 = [0];
    var index_2902459429 = rawGet_2902458969(t_2902459366, key_2902459367, hc_2902459422, 0);
    if ((0 <= index_2902459429)) {
    t_2902459366.data[chckIndx(index_2902459429, 0, (t_2902459366.data).length - 1)].Field2 = val_2902459368;
    }
    else {
      if (((t_2902459366.data).length == 0)) {
      var correctSizeHEX60gensym15_2902459531 = slotsNeeded_1308622891(32);
      t_2902459366.counter = 0;
      t_2902459366.data = new Array(chckRange(correctSizeHEX60gensym15_2902459531, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2902459531, 0, 2147483647) ; ++i) { t_2902459366.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2902459536(t_2902459366)) {
      enlarge_2902459691(t_2902459366);
      index_2902459429 = rawGetKnownHC_2902460172(t_2902459366, key_2902459367, hc_2902459422[0]);
      }
      
      index_2902459429 = subInt(-1, index_2902459429);
      rawInsert_2902459985(t_2902459366, t_2902459366, "data", key_2902459367, val_2902459368, hc_2902459422[0], index_2902459429);
      t_2902459366.counter = addInt(t_2902459366.counter, 1);
    }
    

  
}

function rawGet_2902458515(t_2902458518, key_2902458519, hc_2902458520, hc_2902458520_Idx) {
  var result_2902458521 = 0;

  BeforeRet: {
    hc_2902458520[hc_2902458520_Idx] = hash_1325400491(key_2902458519);
    if ((hc_2902458520[hc_2902458520_Idx] == 0)) {
    hc_2902458520[hc_2902458520_Idx] = 314159265;
    }
    
    if (((t_2902458518.data).length == 0)) {
    result_2902458521 = -1;
    break BeforeRet;
    }
    
    var h_2902458573 = (hc_2902458520[hc_2902458520_Idx] & (t_2902458518.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902458518.data[chckIndx(h_2902458573, 0, (t_2902458518.data).length - 1)].Field0)) break Label2;
          if (((t_2902458518.data[chckIndx(h_2902458573, 0, (t_2902458518.data).length - 1)].Field0 == hc_2902458520[hc_2902458520_Idx]) && eqStrings(t_2902458518.data[chckIndx(h_2902458573, 0, (t_2902458518.data).length - 1)].Field1, key_2902458519))) {
          result_2902458521 = h_2902458573;
          break BeforeRet;
          }
          
          h_2902458573 = nextTry_1308622883(h_2902458573, (t_2902458518.data).length - 1);
        }
    };
    result_2902458521 = subInt(-1, h_2902458573);
  };

  return result_2902458521;

}

function hasKey_2902458508(t_2902458511, key_2902458512) {
  var result_2902458513 = false;

    var hc_2902458514 = [0];
    result_2902458513 = (0 <= rawGet_2902458515(t_2902458511, key_2902458512, hc_2902458514, 0));

  return result_2902458513;

}

function contains_2902458502(t_2902458505, key_2902458506) {
  var result_2902458507 = false;

  BeforeRet: {
    result_2902458507 = hasKey_2902458508(t_2902458505, key_2902458506);
    break BeforeRet;
  };

  return result_2902458507;

}

function HEX5BHEX5D_2902458807(t_2902458810, key_2902458811) {
  var result_2902458812 = null;
  var result_2902458812_Idx = 0;

    var hcHEX60gensym22_2902458813 = [0];
    var indexHEX60gensym22_2902458820 = rawGet_2902458515(t_2902458810, key_2902458811, hcHEX60gensym22_2902458813, 0);
    if ((0 <= indexHEX60gensym22_2902458820)) {
    result_2902458812 = t_2902458810.data[chckIndx(indexHEX60gensym22_2902458820, 0, (t_2902458810.data).length - 1)]; result_2902458812_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_2902458811);
    }
    

  return [result_2902458812, result_2902458812_Idx];

}

function mustRehash_2902460736(t_2902460738) {
  var result_2902460739 = false;

    if (!((t_2902460738.counter < (t_2902460738.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2902460739 = ((mulInt((t_2902460738.data).length, 2) < mulInt(t_2902460738.counter, 3)) || (subInt((t_2902460738.data).length, t_2902460738.counter) < 4));

  return result_2902460739;

}

function rawInsert_2902461185(t_2902461189, data_2902461190, data_2902461190_Idx, key_2902461191, val_2902461192, hc_2902461193, h_2902461194) {
    data_2902461190[data_2902461190_Idx][chckIndx(h_2902461194, 0, (data_2902461190[data_2902461190_Idx]).length - 1)].Field1 = nimCopy(null, key_2902461191, NTI33554449);
    data_2902461190[data_2902461190_Idx][chckIndx(h_2902461194, 0, (data_2902461190[data_2902461190_Idx]).length - 1)].Field2 = nimCopy(null, val_2902461192, NTI2902458397);
    data_2902461190[data_2902461190_Idx][chckIndx(h_2902461194, 0, (data_2902461190[data_2902461190_Idx]).length - 1)].Field0 = hc_2902461193;

  
}

function enlarge_2902460891(t_2902460894) {
    var n_2902460897 = [];
    n_2902460897 = new Array(chckRange(mulInt((t_2902460894.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2902460894.data).length, 2), 0, 2147483647) ; ++i) { n_2902460897[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_2902460894.data; t_2902460894.data = n_2902460897; n_2902460897 = Temporary1;    Label2: {
      var i_2902460961 = 0;
      var colontmp__2801810463 = 0;
      colontmp__2801810463 = (n_2902460897).length - 1;
      var res_2801810464 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2801810464 <= colontmp__2801810463)) break Label4;
            i_2902460961 = res_2801810464;
            var eh_2902461015 = n_2902460897[chckIndx(i_2902460961, 0, (n_2902460897).length - 1)].Field0;
            if (isFilled_1308622880(eh_2902461015)) {
            var j_2902461019 = (eh_2902461015 & (t_2902460894.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2902460894.data[chckIndx(j_2902461019, 0, (t_2902460894.data).length - 1)].Field0)) break Label6;
                  j_2902461019 = nextTry_1308622883(j_2902461019, (t_2902460894.data).length - 1);
                }
            };
            rawInsert_2902461185(t_2902460894, t_2902460894, "data", n_2902460897[chckIndx(i_2902460961, 0, (n_2902460897).length - 1)].Field1, n_2902460897[chckIndx(i_2902460961, 0, (n_2902460897).length - 1)].Field2, eh_2902461015, j_2902461019);
            }
            
            res_2801810464 = addInt(res_2801810464, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2902461354(t_2902461357, key_2902461358, hc_2902461359) {
  var result_2902461360 = 0;

  BeforeRet: {
    if (((t_2902461357.data).length == 0)) {
    result_2902461360 = -1;
    break BeforeRet;
    }
    
    var h_2902461411 = (hc_2902461359 & (t_2902461357.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2902461357.data[chckIndx(h_2902461411, 0, (t_2902461357.data).length - 1)].Field0)) break Label2;
          if (((t_2902461357.data[chckIndx(h_2902461411, 0, (t_2902461357.data).length - 1)].Field0 == hc_2902461359) && eqStrings(t_2902461357.data[chckIndx(h_2902461411, 0, (t_2902461357.data).length - 1)].Field1, key_2902461358))) {
          result_2902461360 = h_2902461411;
          break BeforeRet;
          }
          
          h_2902461411 = nextTry_1308622883(h_2902461411, (t_2902461357.data).length - 1);
        }
    };
    result_2902461360 = subInt(-1, h_2902461411);
  };

  return result_2902461360;

}

function HEX5BHEX5DHEX3D_2902460563(t_2902460566, key_2902460567, val_2902460568) {
    if (((t_2902460566.data).length == 0)) {
    var correctSizeHEX60gensym24_2902460617 = slotsNeeded_1308622891(32);
    t_2902460566.counter = 0;
    t_2902460566.data = new Array(chckRange(correctSizeHEX60gensym24_2902460617, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2902460617, 0, 2147483647) ; ++i) { t_2902460566.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_2902460622 = [0];
    var index_2902460629 = rawGet_2902458515(t_2902460566, key_2902460567, hc_2902460622, 0);
    if ((0 <= index_2902460629)) {
    t_2902460566.data[chckIndx(index_2902460629, 0, (t_2902460566.data).length - 1)].Field2 = nimCopy(null, val_2902460568, NTI2902458397);
    }
    else {
      if (((t_2902460566.data).length == 0)) {
      var correctSizeHEX60gensym27_2902460731 = slotsNeeded_1308622891(32);
      t_2902460566.counter = 0;
      t_2902460566.data = new Array(chckRange(correctSizeHEX60gensym27_2902460731, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym27_2902460731, 0, 2147483647) ; ++i) { t_2902460566.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_2902460736(t_2902460566)) {
      enlarge_2902460891(t_2902460566);
      index_2902460629 = rawGetKnownHC_2902461354(t_2902460566, key_2902460567, hc_2902460622[0]);
      }
      
      index_2902460629 = subInt(-1, index_2902460629);
      rawInsert_2902461185(t_2902460566, t_2902460566, "data", key_2902460567, val_2902460568, hc_2902460622[0], index_2902460629);
      t_2902460566.counter = addInt(t_2902460566.counter, 1);
    }
    

  
}

function addOnRequestSaveHandler_2902459310(self_2902459311, filename_2902459312, handler_2902459316) {
    var Temporary1;

  var result_2902459317 = 0;

    result_2902459317 = handleIdCounter_2902458447[0];
    handleIdCounter_2902458447[0] = addInt(handleIdCounter_2902458447[0], 1);
    HEX5BHEX5DHEX3D_2902459363(self_2902459311.onRequestSave, result_2902459317, handler_2902459316);
    if (contains_2902458502(self_2902459311.onRequestSaveIndex, filename_2902459312)) {
    (Temporary1 = HEX5BHEX5D_2902458807(self_2902459311.onRequestSaveIndex, filename_2902459312), Temporary1)[0][Temporary1[1]].push(result_2902459317);;
    }
    else {
    HEX5BHEX5DHEX3D_2902460563(self_2902459311.onRequestSaveIndex, filename_2902459312, [result_2902459317]);
    }
    

  return result_2902459317;

}

function isNone_2801799075(self_2801799077) {
  var result_2801799078 = false;

    result_2801799078 = (self_2801799077.val == null);

  return result_2801799078;

}

function get_2801799067(self_2801799069) {
  var result_2801799070 = null;
  var result_2801799070_Idx = 0;

  BeforeRet: {
    if (isNone_2801799075(self_2801799069)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801799070 = self_2801799069; result_2801799070_Idx = "val";
    break BeforeRet;
  };

  return [result_2801799070, result_2801799070_Idx];

}
async function getLanguageServer_2801810078(self_2801810079) {
    var Temporary1;
      var Temporary2;
      async function HEX3Aanonymous_2801810152(targetFilename_2801810153) {
        var result_2801810155 = null;

        BeforeRet: {
          (await saveTempFile_2801799021(self_2801810079.document, targetFilename_2801810153));
          result_2801810155 = undefined;
          break BeforeRet;
        };

        return result_2801810155;

      }
      var Temporary3;

  var result_2801810082 = null;

  BeforeRet: {
      var oHEX60gensym814_2801810094 = getLanguageForFile_2885681156(self_2801810079.document.filename);
      if (!isSome_2768240699(oHEX60gensym814_2801810094)) Temporary2 = false; else {        var languageId_2801810117 = nimCopy(null, get_2801798838(oHEX60gensym814_2801810094), NTI33554449);
        Temporary2 = true;      }    if (Temporary2) {
    Temporary1 = languageId_2801810117;
    }
    else {
      result_2801810082 = none_2919235608();
      break BeforeRet;
    }
    
    var languageId_2801810128 = nimCopy(null, Temporary1, NTI33554449);
    if (isSome_2801799047(self_2801810079.document.languageServer)) {
    result_2801810082 = self_2801810079.document.languageServer;
    break BeforeRet;
    }
    else {
      self_2801810079.document.languageServer = nimCopy(self_2801810079.document.languageServer, (await getOrCreateLanguageServer_2919235592(languageId_2801810128, self_2801810079.document.filename)), NTI2801795266);
      if (isSome_2801799047(self_2801810079.document.languageServer)) {
      var callback_2801810166 = HEX3Aanonymous_2801810152;
      self_2801810079.document.onRequestSaveHandle = addOnRequestSaveHandler_2902459310((Temporary3 = get_2801799067(self_2801810079.document.languageServer), Temporary3)[0][Temporary3[1]], self_2801810079.document.filename, callback_2801810166);
      }
      
      result_2801810082 = self_2801810079.document.languageServer;
      break BeforeRet;
    }
    
  };

  return result_2801810082;

}

function get_2801810227(self_2801810229) {
  var result_2801810230 = null;

    if (isNone_2801799075(self_2801810229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801810230 = self_2801810229["val"];

  return result_2801810230;

}

function isSome_2801810257(self_2801810259) {
  var result_2801810260 = false;

    result_2801810260 = self_2801810259.has;

  return result_2801810260;

}

function isNone_2801810282(self_2801810284) {
  var result_2801810285 = false;

    result_2801810285 = !(self_2801810284.has);

  return result_2801810285;

}

function get_2801810274(self_2801810276) {
  var result_2801810277 = ({location: {Field0: 0, Field1: 0}, filename: []});

    if (isNone_2801810282(self_2801810276)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801810277 = self_2801810276.val;

  return result_2801810277;

}
async function gotoDefinitionAsync_2801810187(self_2801810188) {
  var result_2801810190 = null;

  BeforeRet: {
    var languageServer_2801810200 = (await getLanguageServer_2801810078(self_2801810188));
    if (isNone_2801799075(languageServer_2801810200)) {
    result_2801810190 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2801799047(languageServer_2801810200)) {
    var definition_2801810252 = (await getDefinition_2902458435(get_2801810227(languageServer_2801810200), self_2801810188.document.filename, selection_2801795568(self_2801810188).Field1));
    if (isSome_2801810257(definition_2801810252)) {
    selectionHEX3D_2801795574(self_2801810188, toSelection_2231370221(get_2801810274(definition_2801810252).location));
    scrollToCursor_2801803672(self_2801810188, 0);
    }
    
    }
    
    result_2801810190 = undefined;
    break BeforeRet;
  };

  return result_2801810190;

}

function gotoDefinition_2801810409(self_2801810410) {
    var _ = gotoDefinitionAsync_2801810187(self_2801810410);

  
}

function gotoDefinitionJsWrapper_2801810405(self_2801810438) {
    gotoDefinition_2801810409(self_2801810438);

  
}
editor_text_prototype.gotoDefinition = function() { return (gotoDefinitionJsWrapper_2801810405(this));};
async function getCompletionsAsync_2801805758(self_2801805759) {
  var result_2801810319 = null;

  BeforeRet: {
    var languageServer_2801810329 = (await getLanguageServer_2801810078(self_2801805759));
    if (isNone_2801799075(languageServer_2801810329)) {
    result_2801810319 = undefined;
    break BeforeRet;
    }
    
    if (isSome_2801799047(languageServer_2801810329)) {
    var completions_2801810363 = (await getCompletions_2902458445(get_2801810227(languageServer_2801810329), self_2801805759.document.languageId, self_2801805759.document.filename, selection_2801795568(self_2801805759).Field1));
    self_2801805759.completions = nimCopy(null, completions_2801810363, NTI2902458446);
    self_2801805759.selectedCompletion = clamp_1660945119(self_2801805759.selectedCompletion, 0, (self_2801805759.completions).length - 1);
    if (((self_2801805759.completions).length == 0)) {
    self_2801805759.showCompletions = false;
    }
    else {
      self_2801805759.showCompletions = true;
    }
    
    markDirty_2147483686(self_2801805759);
    }
    
    result_2801810319 = undefined;
    break BeforeRet;
  };

  return result_2801810319;

}

function getCompletions_2801810473(self_2801810474) {
    var _ = getCompletionsAsync_2801805758(self_2801810474);

  
}

function getCompletionsJsWrapper_2801810469(self_2801810502) {
    getCompletions_2801810473(self_2801810502);

  
}
editor_text_prototype.getCompletions = function() { return (getCompletionsJsWrapper_2801810469(this));};

function hideCompletions_2801810523(self_2801810524) {
    self_2801810524.showCompletions = false;
    markDirty_2147483686(self_2801810524);

  
}

function hideCompletionsJsWrapper_2801810519(self_2801810552) {
    hideCompletions_2801810523(self_2801810552);

  
}
editor_text_prototype.hideCompletions = function() { return (hideCompletionsJsWrapper_2801810519(this));};

function selectPrevCompletion_2801810573(self_2801810574) {
    if ((0 < (self_2801810574.completions).length)) {
    self_2801810574.selectedCompletion = clamp_1660945119(subInt(self_2801810574.selectedCompletion, 1), 0, subInt((self_2801810574.completions).length, 1));
    }
    else {
      self_2801810574.selectedCompletion = 0;
    }
    
    markDirty_2147483686(self_2801810574);

  
}

function selectPrevCompletionJsWrapper_2801810569(self_2801810616) {
    selectPrevCompletion_2801810573(self_2801810616);

  
}
editor_text_prototype.selectPrevCompletion = function() { return (selectPrevCompletionJsWrapper_2801810569(this));};

function selectNextCompletion_2801810637(self_2801810638) {
    if ((0 < (self_2801810638.completions).length)) {
    self_2801810638.selectedCompletion = clamp_1660945119(addInt(self_2801810638.selectedCompletion, 1), 0, subInt((self_2801810638.completions).length, 1));
    }
    else {
      self_2801810638.selectedCompletion = 0;
    }
    
    markDirty_2147483686(self_2801810638);

  
}

function selectNextCompletionJsWrapper_2801810633(self_2801810680) {
    selectNextCompletion_2801810637(self_2801810680);

  
}
editor_text_prototype.selectNextCompletion = function() { return (selectNextCompletionJsWrapper_2801810633(this));};

function addEscapedChar_33557761(s_33557762, s_33557762_Idx, c_33557763) {
    switch (c_33557763) {
    case 7:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,97]);;
      break;
    case 8:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,98]);;
      break;
    case 9:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,116]);;
      break;
    case 10:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,110]);;
      break;
    case 11:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,118]);;
      break;
    case 12:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,102]);;
      break;
    case 13:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,114]);;
      break;
    case 27:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,101]);;
      break;
    case 92:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,92]);;
      break;
    case 39:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,39]);;
      break;
    case 34:
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,34]);;
      break;
    case 32:
    case 33:
    case 35:
    case 36:
    case 37:
    case 38:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 91:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
      addChar(s_33557762[s_33557762_Idx], c_33557763);;
      break;
    default: 
      s_33557762[s_33557762_Idx].push.apply(s_33557762[s_33557762_Idx], [92,120]);;
      var n_33557773 = c_33557763;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx(((n_33557773 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      addChar(s_33557762[s_33557762_Idx], [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_33557773 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)]);;
      break;
    }

  
}

function addQuoted_1593835572(s_1593835574, s_1593835574_Idx, x_1593835575) {
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;
    Label1: {
      var c_1593835576 = 0;
      var i_2801810889 = 0;
      var L_2801810890 = (x_1593835575).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2801810889 < L_2801810890)) break Label3;
            c_1593835576 = x_1593835575[chckIndx(i_2801810889, 0, (x_1593835575).length - 1)];
            if ((c_1593835576 <= 127)) {
            addEscapedChar_33557761(s_1593835574, s_1593835574_Idx, c_1593835576);
            }
            else {
            addChar(s_1593835574[s_1593835574_Idx], c_1593835576);;
            }
            
            i_2801810889 = addInt(i_2801810889, 1);
            if (!(((x_1593835575).length == L_2801810890))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    s_1593835574[s_1593835574_Idx].push.apply(s_1593835574[s_1593835574_Idx], [34]);;

  
}

function HEX24_2231370049(cursor_2231370050) {
  var result_2231370051 = [];

  BeforeRet: {
    result_2231370051 = nimCopy(null, (HEX24_369098760(cursor_2231370050.Field0) || []).concat([58] || [],HEX24_369098760(cursor_2231370050.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2231370051;

}

function addQuoted_2801810767(s_2801810769, s_2801810769_Idx, x_2801810770) {
    s_2801810769[s_2801810769_Idx].push.apply(s_2801810769[s_2801810769_Idx], HEX24_2231370049(x_2801810770));;

  
}

function addQuoted_2801810796(s_2801810798, s_2801810798_Idx, x_2801810799) {
    s_2801810798[s_2801810798_Idx].push.apply(s_2801810798[s_2801810798_Idx], reprEnum(x_2801810799, NTI2902458411));;

  
}

function HEX24_2801810717(x_2801810719) {
  var result_2801810720 = [[]];

    result_2801810720[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym882_2801810731 = 0;
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [110,97,109,101]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_1593835572(result_2801810720, 0, x_2801810719.name);
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [115,99,111,112,101]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_1593835572(result_2801810720, 0, x_2801810719.scope);
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [108,111,99,97,116,105,111,110]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_2801810767(result_2801810720, 0, x_2801810719.location);
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [102,105,108,101,110,97,109,101]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_1593835572(result_2801810720, 0, x_2801810719.filename);
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [107,105,110,100]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_2801810796(result_2801810720, 0, x_2801810719.kind);
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [116,121,112]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_1593835572(result_2801810720, 0, x_2801810719.typ);
    if ((0 < countHEX60gensym882_2801810731)) {
    result_2801810720[0].push.apply(result_2801810720[0], [44,32]);;
    }
    
    result_2801810720[0].push.apply(result_2801810720[0], [100,111,99]);;
    result_2801810720[0].push.apply(result_2801810720[0], [58,32]);;
    countHEX60gensym882_2801810731 += 1;
    addQuoted_1593835572(result_2801810720, 0, x_2801810719.doc);
    result_2801810720[0].push.apply(result_2801810720[0], [41]);;

  return result_2801810720[0];

}

function formatValue_2801810712(result_2801810714, result_2801810714_Idx, value_2801810715, specifier_2801810716) {
    formatValue_721420459(result_2801810714, result_2801810714_Idx, HEX24_2801810717(value_2801810715), specifier_2801810716);

  
}

function applySelectedCompletion_2801810701(self_2801810702) {
  BeforeRet: {
    if (!(self_2801810702.showCompletions)) {
    break BeforeRet;
    }
    
    if (((self_2801810702.completions).length - 1 < self_2801810702.selectedCompletion)) {
    break BeforeRet;
    }
    
    var com_2801810706 = nimCopy(null, self_2801810702.completions[chckIndx(self_2801810702.selectedCompletion, 0, (self_2801810702.completions).length - 1)], NTI2902458414);
    var fmtRes_2801810711 = [mnewString(0)];
    fmtRes_2801810711[0].push.apply(fmtRes_2801810711[0], [65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2801810712(fmtRes_2801810711, 0, com_2801810706, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2801810711[0], NTI33554449)]);
    var cursor_2801810829 = nimCopy(null, selection_2801795568(self_2801810702).Field1, NTI2231369737);
    if ((cursor_2801810829.Field1 == 0)) {
    selectionsHEX3D_2801795824(self_2801810702, insert_2801799676(self_2801810702.document, [nimCopy(null, toSelection_2231370221(cursor_2801810829), NTI2231369739)], selections_2801795565(self_2801810702), com_2801810706.name, true, true, false));
    }
    else {
      var line_2801810830 = getLine_2801795429(self_2801810702.document, cursor_2801810829.Field0);
      var column_2801810831 = cursor_2801810829.Field1;
      Label1: {
          Label2: while (true) {
          if (!(0 < column_2801810831)) break Label2;
            switch (line_2801810830[chckIndx(subInt(column_2801810831, 1), 0, (line_2801810830).length - 1)]) {
            case 32:
            case 9:
            case 46:
            case 44:
            case 40:
            case 41:
            case 91:
            case 93:
            case 123:
            case 125:
            case 58:
            case 59:
              break Label1;
              break;
            default: 
              column_2801810831 = subInt(column_2801810831, 1);
              break;
            }
          }
      };
      selectionsHEX3D_2801795824(self_2801810702, edit_2801799893(self_2801810702.document, [nimCopy(null, {Field0: {Field0: cursor_2801810829.Field0, Field1: column_2801810831}, Field1: nimCopy(null, cursor_2801810829, NTI2231369737)}, NTI2801805758)], selections_2801795565(self_2801810702), com_2801810706.name, true));
    }
    
  };

  
}

function applySelectedCompletionJsWrapper_2801810697(self_2801810872) {
    applySelectedCompletion_2801810701(self_2801810872);

  
}
editor_text_prototype.applySelectedCompletion = function() { return (applySelectedCompletionJsWrapper_2801810697(this));};

function handleHexChar_2181038091(c_2181038092) {
  var result_2181038093 = 0;

    switch (c_2181038092) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      result_2181038093 = subInt(c_2181038092, 48);
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      result_2181038093 = addInt(subInt(c_2181038092, 97), 10);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      result_2181038093 = addInt(subInt(c_2181038092, 65), 10);
      break;
    default: 
      break;
    }

  return result_2181038093;

}

function hexbyte_2181038137(hex_2181038138) {
  var result_2181038139 = 0;

    result_2181038139 = handleHexChar_2181038091(hex_2181038138);

  return result_2181038139;

}

function parseOid_2181038160(str_2181038161) {
  var result_2181038162 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (!(((str_2181038161).length == 24))) {
    break BeforeRet;
    }
    
    result_2181038162.padding = 0;
    result_2181038162.time = 0;
    Label1: {
      var i_2181038167 = 0;
      var i_2952790119 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2952790119 < 4)) break Label3;
            i_2181038167 = i_2952790119;
            var hexValue_2181038172 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, i_2181038167), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, i_2181038167), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.time = (result_2181038162.time | (hexValue_2181038172 << mulInt(i_2181038167, 8)));
            i_2952790119 = addInt(i_2952790119, 1);
          }
      };
    };
    result_2181038162.fuzz = 0;
    Label4: {
      var i_2181038181 = 0;
      var i_2952790122 = 0;
      Label5: {
          Label6: while (true) {
          if (!(i_2952790122 < 4)) break Label6;
            i_2181038181 = i_2952790122;
            var hexValue_2181038186 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, addInt(i_2181038181, 4)), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, addInt(i_2181038181, 4)), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.fuzz = (result_2181038162.fuzz | (hexValue_2181038186 << mulInt(i_2181038181, 8)));
            i_2952790122 = addInt(i_2952790122, 1);
          }
      };
    };
    result_2181038162.count = 0;
    Label7: {
      var i_2181038195 = 0;
      var i_2952790125 = 0;
      Label8: {
          Label9: while (true) {
          if (!(i_2952790125 < 4)) break Label9;
            i_2181038195 = i_2952790125;
            var hexValue_2181038200 = ((hexbyte_2181038137(str_2181038161[chckIndx(mulInt(2, addInt(i_2181038195, 8)), 0, (str_2181038161).length - 1)]) << 4) | hexbyte_2181038137(str_2181038161[chckIndx(addInt(mulInt(2, addInt(i_2181038195, 8)), 1), 0, (str_2181038161).length - 1)]));
            result_2181038162.count = (result_2181038162.count | (hexValue_2181038200 << mulInt(i_2181038195, 8)));
            i_2952790125 = addInt(i_2952790125, 1);
          }
      };
    };
  };

  return result_2181038162;

}

function parseId_2181038327(s_2181038328) {
  var result_2181038329 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    if (((s_2181038328).length < 23)) {
    if (true) {
    failedAssertImpl_268435515([105,100,46,110,105,109,40,49,55,56,44,32,53,41,32,96,102,97,108,115,101,96,32]);
    }
    
    }
    
    result_2181038329 = nimCopy(result_2181038329, parseOid_2181038160(s_2181038328), NTI2181038083);
    break BeforeRet;
  };

  return result_2181038329;

}
var IdPrint_2952790018 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,55]);
var IdAdd_2952790019 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,56]);
var IdSub_2952790020 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,57]);
var IdMul_2952790021 = parseId_2181038327([54,50,101,53,51,51,57,54,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,97]);
var IdDiv_2952790022 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,98]);
var IdMod_2952790023 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,99]);
var IdNegate_2952790024 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,100]);
var IdNot_2952790025 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,101]);
var IdDeref_2952790026 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,52,102,102]);
var IdAppendString_2952790027 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,48]);
var IdInt_2952790028 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,49]);
var IdString_2952790029 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,50]);
var IdVoid_2952790030 = parseId_2181038327([54,50,101,53,51,51,57,55,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,51]);
var IdLess_2952790031 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,52]);
var IdLessEqual_2952790032 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,53]);
var IdGreater_2952790033 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,54]);
var IdGreaterEqual_2952790034 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,55]);
var IdEqual_2952790035 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,56]);
var IdNotEqual_2952790036 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,57]);
var IdAnd_2952790037 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,97]);
var IdOr_2952790038 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,98]);
var IdOrder_2952790039 = parseId_2181038327([54,50,101,53,51,51,57,56,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,99]);
var IdBuildString_2952790040 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,100]);
var Id62e53399564d29f77293450e_2952790041 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,101]);
var Id62e53399564d29f77293450f_2952790042 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,48,102]);
var Id62e53399564d29f772934510_2952790043 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,48]);
var Id62e53399564d29f772934511_2952790044 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,49]);
var Id62e53399564d29f772934512_2952790045 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,50]);
var Id62e53399564d29f772934513_2952790046 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,51]);
var Id62e53399564d29f772934514_2952790047 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,52]);
var Id62e53399564d29f772934515_2952790048 = parseId_2181038327([54,50,101,53,51,51,57,57,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,53]);
var Id62e5339a564d29f772934516_2952790049 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,54]);
var Id62e5339a564d29f772934517_2952790050 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,55]);
var Id62e5339a564d29f772934518_2952790051 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,56]);
var Id62e5339a564d29f772934519_2952790052 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,57]);
var Id62e5339a564d29f77293451a_2952790053 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,97]);
var Id62e5339a564d29f77293451b_2952790054 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,98]);
var Id62e5339a564d29f77293451c_2952790055 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,99]);
var Id62e5339a564d29f77293451d_2952790056 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,100]);
var Id62e5339a564d29f77293451e_2952790057 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,101]);
var Id62e5339a564d29f77293451f_2952790058 = parseId_2181038327([54,50,101,53,51,51,57,97,53,54,52,100,50,57,102,55,55,50,57,51,52,53,49,102]);
var Id62e5339b564d29f772934520_2952790059 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,48]);
var Id62e5339b564d29f772934521_2952790060 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,49]);
var Id62e5339b564d29f772934522_2952790061 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,50]);
var Id62e5339b564d29f772934523_2952790062 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,51]);
var Id62e5339b564d29f772934524_2952790063 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,52]);
var Id62e5339b564d29f772934525_2952790064 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,53]);
var Id62e5339b564d29f772934526_2952790065 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,54]);
var Id62e5339b564d29f772934527_2952790066 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,55]);
var Id62e5339b564d29f772934528_2952790067 = parseId_2181038327([54,50,101,53,51,51,57,98,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,56]);
var Id62e5339c564d29f772934529_2952790068 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,57]);
var Id62e5339c564d29f77293452a_2952790069 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,97]);
var Id62e5339c564d29f77293452b_2952790070 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,98]);
var Id62e5339c564d29f77293452c_2952790071 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,99]);
var Id62e5339c564d29f77293452d_2952790072 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,100]);
var Id62e5339c564d29f77293452e_2952790073 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,101]);
var Id62e5339c564d29f77293452f_2952790074 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,50,102]);
var Id62e5339c564d29f772934530_2952790075 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,48]);
var Id62e5339c564d29f772934531_2952790076 = parseId_2181038327([54,50,101,53,51,51,57,99,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,49]);
var Id62e5339d564d29f772934532_2952790077 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,50]);
var Id62e5339d564d29f772934533_2952790078 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,51]);
var Id62e5339d564d29f772934534_2952790079 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,52]);
var Id62e5339d564d29f772934535_2952790080 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,53]);
var Id62e5339d564d29f772934536_2952790081 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,54]);
var Id62e5339d564d29f772934537_2952790082 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,55]);
var Id62e5339d564d29f772934538_2952790083 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,56]);
var Id62e5339d564d29f772934539_2952790084 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,57]);
var Id62e5339d564d29f77293453a_2952790085 = parseId_2181038327([54,50,101,53,51,51,57,100,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,97]);
var Id62e5339e564d29f77293453b_2952790086 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,98]);
var Id62e5339e564d29f77293453c_2952790087 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,99]);
var Id62e5339e564d29f77293453d_2952790088 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,100]);
var Id62e5339e564d29f77293453e_2952790089 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,101]);
var Id62e5339e564d29f77293453f_2952790090 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,51,102]);
var Id62e5339e564d29f772934540_2952790091 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,48]);
var Id62e5339e564d29f772934541_2952790092 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,49]);
var Id62e5339e564d29f772934542_2952790093 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,50]);
var Id62e5339e564d29f772934543_2952790094 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,51]);
var Id62e5339e564d29f772934544_2952790095 = parseId_2181038327([54,50,101,53,51,51,57,101,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,52]);
var Id62e5339f564d29f772934545_2952790096 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,53]);
var Id62e5339f564d29f772934546_2952790097 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,54]);
var Id62e5339f564d29f772934547_2952790098 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,55]);
var Id62e5339f564d29f772934548_2952790099 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,56]);
var Id62e5339f564d29f772934549_2952790100 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,57]);
var Id62e5339f564d29f77293454a_2952790101 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,97]);
var Id62e5339f564d29f77293454b_2952790102 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,98]);
var Id62e5339f564d29f77293454c_2952790103 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,99]);
var Id62e5339f564d29f77293454d_2952790104 = parseId_2181038327([54,50,101,53,51,51,57,102,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,100]);
var Id62e533a0564d29f77293454e_2952790105 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,101]);
var Id62e533a0564d29f77293454f_2952790106 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,52,102]);
var Id62e533a0564d29f772934550_2952790107 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,48]);
var Id62e533a0564d29f772934551_2952790108 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,49]);
var Id62e533a0564d29f772934552_2952790109 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,50]);
var Id62e533a0564d29f772934553_2952790110 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,51]);
var Id62e533a0564d29f772934554_2952790111 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,52]);
var Id62e533a0564d29f772934555_2952790112 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,53]);
var Id62e533a0564d29f772934556_2952790113 = parseId_2181038327([54,50,101,53,51,51,97,48,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,54]);
var Id62e533a1564d29f772934557_2952790114 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,55]);
var Id62e533a1564d29f772934558_2952790115 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,56]);
var Id62e533a1564d29f772934559_2952790116 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,57]);
var Id62e533a1564d29f77293455a_2952790117 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,97]);
var currentIndent_3003121678 = [0];
var dependencyGlobalRevision_3003121696 = parseId_2181038327([54,50,101,53,51,51,97,49,53,54,52,100,50,57,102,55,55,50,57,51,52,53,53,98]);
var config_3103785173 = [{fontSize: 20.0, fontRegular: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], fontBold: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], fontItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], fontBoldItalic: [102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], indent: 20.0, colors: {separator: [112,117,110,99,116,117,97,116,105,111,110], separatorParen: [[109,101,116,97,46,98,114,97,99,101,46,114,111,117,110,100], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBrace: [[109,101,116,97,46,98,114,97,99,101,46,99,117,114,108,121], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], separatorBracket: [[109,101,116,97,46,98,114,97,99,101,46,115,113,117,97,114,101], [112,117,110,99,116,117,97,116,105,111,110], [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], empty: [115,116,114,105,110,103], keyword: [107,101,121,119,111,114,100], typ: [115,116,111,114,97,103,101,46,116,121,112,101]}, revision: 0}];

function rawGet_3003122103(t_3003122106, key_3003122107, hc_3003122108, hc_3003122108_Idx) {
  var result_3003122109 = 0;

  BeforeRet: {
    hc_3003122108[hc_3003122108_Idx] = hash_1325400236(key_3003122107);
    if ((hc_3003122108[hc_3003122108_Idx] == 0)) {
    hc_3003122108[hc_3003122108_Idx] = 314159265;
    }
    
    if (((t_3003122106.data).length == 0)) {
    result_3003122109 = -1;
    break BeforeRet;
    }
    
    var h_3003122197 = (hc_3003122108[hc_3003122108_Idx] & (t_3003122106.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003122106.data[chckIndx(h_3003122197, 0, (t_3003122106.data).length - 1)].Field0)) break Label2;
          if (((t_3003122106.data[chckIndx(h_3003122197, 0, (t_3003122106.data).length - 1)].Field0 == hc_3003122108[hc_3003122108_Idx]) && (t_3003122106.data[chckIndx(h_3003122197, 0, (t_3003122106.data).length - 1)].Field1 == key_3003122107))) {
          result_3003122109 = h_3003122197;
          break BeforeRet;
          }
          
          h_3003122197 = nextTry_1308622883(h_3003122197, (t_3003122106.data).length - 1);
        }
    };
    result_3003122109 = subInt(-1, h_3003122197);
  };

  return result_3003122109;

}

function mustRehash_3003122627(t_3003122629) {
  var result_3003122630 = false;

    if (!((t_3003122629.counter < (t_3003122629.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003122630 = ((mulInt((t_3003122629.data).length, 2) < mulInt(t_3003122629.counter, 3)) || (subInt((t_3003122629.data).length, t_3003122629.counter) < 4));

  return result_3003122630;

}

function rawInsert_3003123320(t_3003123324, data_3003123325, data_3003123325_Idx, key_3003123326, val_3003123327, hc_3003123328, h_3003123329) {
    data_3003123325[data_3003123325_Idx][chckIndx(h_3003123329, 0, (data_3003123325[data_3003123325_Idx]).length - 1)].Field1 = key_3003123326;
    data_3003123325[data_3003123325_Idx][chckIndx(h_3003123329, 0, (data_3003123325[data_3003123325_Idx]).length - 1)].Field2 = nimCopy(null, val_3003123327, NTI33554449);
    data_3003123325[data_3003123325_Idx][chckIndx(h_3003123329, 0, (data_3003123325[data_3003123325_Idx]).length - 1)].Field0 = hc_3003123328;

  
}

function enlarge_3003122884(t_3003122887) {
    var n_3003122890 = [];
    n_3003122890 = new Array(chckRange(mulInt((t_3003122887.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003122887.data).length, 2), 0, 2147483647) ; ++i) { n_3003122890[i] = {Field0: 0, Field1: 0, Field2: []}; }    var Temporary1 = t_3003122887.data; t_3003122887.data = n_3003122890; n_3003122890 = Temporary1;    Label2: {
      var i_3003122988 = 0;
      var colontmp__2936012875 = 0;
      colontmp__2936012875 = (n_3003122890).length - 1;
      var res_2936012876 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012876 <= colontmp__2936012875)) break Label4;
            i_3003122988 = res_2936012876;
            var eh_3003123069 = n_3003122890[chckIndx(i_3003122988, 0, (n_3003122890).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003123069)) {
            var j_3003123073 = (eh_3003123069 & (t_3003122887.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003122887.data[chckIndx(j_3003123073, 0, (t_3003122887.data).length - 1)].Field0)) break Label6;
                  j_3003123073 = nextTry_1308622883(j_3003123073, (t_3003122887.data).length - 1);
                }
            };
            rawInsert_3003123320(t_3003122887, t_3003122887, "data", n_3003122890[chckIndx(i_3003122988, 0, (n_3003122890).length - 1)].Field1, n_3003122890[chckIndx(i_3003122988, 0, (n_3003122890).length - 1)].Field2, eh_3003123069, j_3003123073);
            }
            
            res_2936012876 = addInt(res_2936012876, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003123570(t_3003123573, key_3003123574, hc_3003123575) {
  var result_3003123576 = 0;

  BeforeRet: {
    if (((t_3003123573.data).length == 0)) {
    result_3003123576 = -1;
    break BeforeRet;
    }
    
    var h_3003123661 = (hc_3003123575 & (t_3003123573.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003123573.data[chckIndx(h_3003123661, 0, (t_3003123573.data).length - 1)].Field0)) break Label2;
          if (((t_3003123573.data[chckIndx(h_3003123661, 0, (t_3003123573.data).length - 1)].Field0 == hc_3003123575) && (t_3003123573.data[chckIndx(h_3003123661, 0, (t_3003123573.data).length - 1)].Field1 == key_3003123574))) {
          result_3003123576 = h_3003123661;
          break BeforeRet;
          }
          
          h_3003123661 = nextTry_1308622883(h_3003123661, (t_3003123573.data).length - 1);
        }
    };
    result_3003123576 = subInt(-1, h_3003123661);
  };

  return result_3003123576;

}

function HEX5BHEX5DHEX3D_3003122008(t_3003122011, key_3003122012, val_3003122013) {
    if (((t_3003122011.data).length == 0)) {
    var correctSizeHEX60gensym3_3003122097 = slotsNeeded_1308622891(32);
    t_3003122011.counter = 0;
    t_3003122011.data = new Array(chckRange(correctSizeHEX60gensym3_3003122097, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3003122097, 0, 2147483647) ; ++i) { t_3003122011.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3003122102 = [0];
    var index_3003122459 = rawGet_3003122103(t_3003122011, key_3003122012, hc_3003122102, 0);
    if ((0 <= index_3003122459)) {
    t_3003122011.data[chckIndx(index_3003122459, 0, (t_3003122011.data).length - 1)].Field2 = nimCopy(null, val_3003122013, NTI33554449);
    }
    else {
      if (((t_3003122011.data).length == 0)) {
      var correctSizeHEX60gensym8_3003122622 = slotsNeeded_1308622891(32);
      t_3003122011.counter = 0;
      t_3003122011.data = new Array(chckRange(correctSizeHEX60gensym8_3003122622, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3003122622, 0, 2147483647) ; ++i) { t_3003122011.data[i] = {Field0: 0, Field1: 0, Field2: []}; }      }
      
      if (mustRehash_3003122627(t_3003122011)) {
      enlarge_3003122884(t_3003122011);
      index_3003122459 = rawGetKnownHC_3003123570(t_3003122011, key_3003122012, hc_3003122102[0]);
      }
      
      index_3003122459 = subInt(-1, index_3003122459);
      rawInsert_3003123320(t_3003122011, t_3003122011, "data", key_3003122012, val_3003122013, hc_3003122102[0], index_3003122459);
      t_3003122011.counter = addInt(t_3003122011.counter, 1);
    }
    

  
}

function initDoublyLinkedList_3003123938() {
  var result_3003123940 = ({head: null, tail: null});

  return result_3003123940;

}

function initTable_3003123944(initialSize_3003123947) {
  var result_3003123948 = ({data: [], counter: 0});

    var correctSizeHEX60gensym16_3003123950 = slotsNeeded_1308622891(chckRange(initialSize_3003123947, 0, 2147483647));
    result_3003123948.counter = 0;
    result_3003123948.data = new Array(chckRange(correctSizeHEX60gensym16_3003123950, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3003123950, 0, 2147483647) ; ++i) { result_3003123948.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3003123948;

}

function correctSize_3019898901(cap_3019898902) {
  var result_3019898903 = 0;

    result_3019898903 = cap_3019898902;

  return result_3019898903;

}

function newLruCache_3003123928(capacity_3003123931, recordRemovedKeys_3003123932) {
  var result_3003123933 = null;

    result_3003123933 = {capacity: capacity_3003123931, list: initDoublyLinkedList_3003123938(), table: initTable_3003123944(correctSize_3019898901(capacity_3003123931)), recordRemovedKeys: recordRemovedKeys_3003123932, removedKeys: ({data: [], counter: 0})};

  return result_3003123933;

}

function newCache_3003123923(capacity_3003123926) {
  var result_3003123927 = null;

    result_3003123927 = newLruCache_3003123928(capacity_3003123926, false);

  return result_3003123927;

}

function initDoublyLinkedList_3003124010() {
  var result_3003124012 = ({head: null, tail: null});

  return result_3003124012;

}

function initTable_3003124016(initialSize_3003124019) {
  var result_3003124020 = ({data: [], counter: 0});

    var correctSizeHEX60gensym18_3003124022 = slotsNeeded_1308622891(chckRange(initialSize_3003124019, 0, 2147483647));
    result_3003124020.counter = 0;
    result_3003124020.data = new Array(chckRange(correctSizeHEX60gensym18_3003124022, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym18_3003124022, 0, 2147483647) ; ++i) { result_3003124020.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3003124020;

}

function newLruCache_3003124000(capacity_3003124003, recordRemovedKeys_3003124004) {
  var result_3003124005 = null;

    result_3003124005 = {capacity: capacity_3003124003, list: initDoublyLinkedList_3003124010(), table: initTable_3003124016(correctSize_3019898901(capacity_3003124003)), recordRemovedKeys: recordRemovedKeys_3003124004, removedKeys: ({data: [], counter: 0})};

  return result_3003124005;

}

function newCache_3003123995(capacity_3003123998) {
  var result_3003123999 = null;

    result_3003123999 = newLruCache_3003124000(capacity_3003123998, false);

  return result_3003123999;

}

function initDoublyLinkedList_3003124078() {
  var result_3003124080 = ({head: null, tail: null});

  return result_3003124080;

}

function initTable_3003124084(initialSize_3003124087) {
  var result_3003124088 = ({data: [], counter: 0});

    var correctSizeHEX60gensym20_3003124090 = slotsNeeded_1308622891(chckRange(initialSize_3003124087, 0, 2147483647));
    result_3003124088.counter = 0;
    result_3003124088.data = new Array(chckRange(correctSizeHEX60gensym20_3003124090, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_3003124090, 0, 2147483647) ; ++i) { result_3003124088.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }
  return result_3003124088;

}

function newLruCache_3003124068(capacity_3003124071, recordRemovedKeys_3003124072) {
  var result_3003124073 = null;

    result_3003124073 = {capacity: capacity_3003124071, list: initDoublyLinkedList_3003124078(), table: initTable_3003124084(correctSize_3019898901(capacity_3003124071)), recordRemovedKeys: recordRemovedKeys_3003124072, removedKeys: ({data: [], counter: 0})};

  return result_3003124073;

}

function newCache_3003124063(capacity_3003124066) {
  var result_3003124067 = null;

    result_3003124067 = newLruCache_3003124068(capacity_3003124066, false);

  return result_3003124067;

}

function newDependencyGraph_3003121940() {
  var result_3003121941 = null;

    result_3003121941 = ({verified: null, changed: null, fingerprints: null, dependencies: null, queryNames: ({data: [], counter: 0}), revision: 0});
    result_3003121941.revision = 0;
    HEX5BHEX5DHEX3D_3003122008(result_3003121941.queryNames, -1, []);
    result_3003121941.verified = newCache_3003123923(2000);
    result_3003121941.changed = newCache_3003123923(2000);
    result_3003121941.fingerprints = newCache_3003123995(2000);
    result_3003121941.dependencies = newCache_3003124063(2000);

  return result_3003121941;

}

function hash_2181038120(x_2181038122) {
  var result_2181038123 = 0;

    result_2181038123 = hashWangYi1_1325400244(x_2181038122);

  return result_2181038123;

}

function hash_2181038116(oid_2181038117) {
  var result_2181038118 = 0;

    var h_2181038119 = 0;
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.time));
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.fuzz));
    h_2181038119 = HEX21HEX26_1325400067(h_2181038119, hash_2181038120(oid_2181038117.count));
    result_2181038118 = HEX21HEX24_1325400082(h_2181038119);

  return result_2181038118;

}

function hash_2181038324(id_2181038325) {
  var result_2181038326 = 0;

  BeforeRet: {
    result_2181038326 = hash_2181038116(id_2181038325);
    break BeforeRet;
  };

  return result_2181038326;

}

function hash_2986345496(x_2986345498) {
  var result_2986345499 = 0;

    result_2986345499 = HEX21HEX26_1325400067(result_2986345499, hash_2181038324(x_2986345498["Field0"]));
    result_2986345499 = HEX21HEX26_1325400067(result_2986345499, hash_1325400236(x_2986345498["Field1"]));
    result_2986345499 = HEX21HEX24_1325400082(result_2986345499);

  return result_2986345499;

}

function HEX3DHEX3D_2181038112(oid1_2181038113, oid2_2181038114) {
  var result_2181038115 = false;

    result_2181038115 = (((oid1_2181038113.time == oid2_2181038114.time) && (oid1_2181038113.fuzz == oid2_2181038114.fuzz)) && (oid1_2181038113.count == oid2_2181038114.count));

  return result_2181038115;

}

function HEX3DHEX3D_2181038320(idA_2181038321, idB_2181038322) {
  var result_2181038323 = false;

  BeforeRet: {
    result_2181038323 = HEX3DHEX3D_2181038112(idA_2181038321, idB_2181038322);
    break BeforeRet;
  };

  return result_2181038323;

}

function HEX3DHEX3D_2986345833(x_2986345835, y_2986345836) {
  var result_2986345837 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_2181038320(x_2986345835["Field0"], y_2986345836["Field0"]))) {
    result_2986345837 = false;
    break BeforeRet;
    }
    
    if (!((x_2986345835["Field1"] == y_2986345836["Field1"]))) {
    result_2986345837 = false;
    break BeforeRet;
    }
    
    result_2986345837 = true;
    break BeforeRet;
  };

  return result_2986345837;

}

function rawGet_2986345489(t_2986345492, key_2986345493, hc_2986345494, hc_2986345494_Idx) {
  var result_2986345495 = 0;

  BeforeRet: {
    hc_2986345494[hc_2986345494_Idx] = hash_2986345496(key_2986345493);
    if ((hc_2986345494[hc_2986345494_Idx] == 0)) {
    hc_2986345494[hc_2986345494_Idx] = 314159265;
    }
    
    if (((t_2986345492.data).length == 0)) {
    result_2986345495 = -1;
    break BeforeRet;
    }
    
    var h_2986345592 = (hc_2986345494[hc_2986345494_Idx] & (t_2986345492.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986345492.data[chckIndx(h_2986345592, 0, (t_2986345492.data).length - 1)].Field0)) break Label2;
          if (((t_2986345492.data[chckIndx(h_2986345592, 0, (t_2986345492.data).length - 1)].Field0 == hc_2986345494[hc_2986345494_Idx]) && HEX3DHEX3D_2986345833(t_2986345492.data[chckIndx(h_2986345592, 0, (t_2986345492.data).length - 1)].Field1, key_2986345493))) {
          result_2986345495 = h_2986345592;
          break BeforeRet;
          }
          
          h_2986345592 = nextTry_1308622883(h_2986345592, (t_2986345492.data).length - 1);
        }
    };
    result_2986345495 = subInt(-1, h_2986345592);
  };

  return result_2986345495;

}

function hasKey_2986345482(t_2986345485, key_2986345486) {
  var result_2986345487 = false;

    var hc_2986345488 = [0];
    result_2986345487 = (0 <= rawGet_2986345489(t_2986345485, key_2986345486, hc_2986345488, 0));

  return result_2986345487;

}

function contains_2986345476(t_2986345479, key_2986345480) {
  var result_2986345481 = false;

  BeforeRet: {
    result_2986345481 = hasKey_2986345482(t_2986345479, key_2986345480);
    break BeforeRet;
  };

  return result_2986345481;

}

function contains_2986345382(cache_2986345385, key_2986345386) {
  var result_2986345387 = false;

    result_2986345387 = contains_2986345476(cache_2986345385.table, key_2986345386);

  return result_2986345387;

}

function HEX24_2181038205(oid_2181038206) {
            var Temporary4;

  var result_2181038207 = [];

    if (result_2181038207.length < 24) { for (var i = result_2181038207.length; i < 24; ++i) result_2181038207.push(0); }
         else {result_2181038207.length = 24; };
    Label1: {
      var i_2181038213 = 0;
      var i_2936012881 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012881 < 12)) break Label3;
            i_2181038213 = i_2936012881;
            if ((i_2181038213 < 4)) {
            Temporary4 = oid_2181038206.time;
            }
            else {
            if ((i_2181038213 < 8)) {
            Temporary4 = oid_2181038206.fuzz;
            }
            else {
            Temporary4 = oid_2181038206.count;
            }
            }
            var value_2181038214 = Temporary4;
            var byteOffset_2181038215 = modInt(i_2181038213, 4);
            var b_2181038220 = (value_2181038214 >> mulInt(byteOffset_2181038215, 8));
            result_2181038207[chckIndx(mulInt(2, i_2181038213), 0, (result_2181038207).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx(((b_2181038220 & 240) >> 4), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            result_2181038207[chckIndx(addInt(mulInt(2, i_2181038213), 1), 0, (result_2181038207).length - 1)] = [48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102][chckIndx((b_2181038220 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102]).length - 1)];
            i_2936012881 = addInt(i_2936012881, 1);
          }
      };
    };

  return result_2181038207;

}

function HEX24_2181038317(id_2181038318) {
  var result_2181038319 = [];

  BeforeRet: {
    result_2181038319 = nimCopy(null, HEX24_2181038205(id_2181038318), NTI33554449);
    break BeforeRet;
  };

  return result_2181038319;

}

function formatValue_3003121884(result_3003121886, result_3003121886_Idx, value_3003121887, specifier_3003121888) {
    formatValue_721420459(result_3003121886, result_3003121886_Idx, HEX24_2181038317(value_3003121887), specifier_3003121888);

  
}

function mkDigit_721420293(v_721420294, typ_721420295) {
      var Temporary1;

  var result_721420296 = [];

    if (!((v_721420294 < 26))) {
    failedAssertImpl_268435515([115,116,114,102,111,114,109,97,116,46,110,105,109,40,51,50,52,44,32,57,41,32,96,118,32,60,32,50,54,96,32]);
    }
    
    if ((v_721420294 < 10)) {
    result_721420296 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_721420294), 0, 255)), NTI33554449);
    }
    else {
      if ((typ_721420295 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_721420296 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_721420294), 10), 0, 255)), NTI33554449);
    }
    

  return result_721420296;

}

function formatInt_2332033552(n_2332033554, radix_2332033555, spec_2332033556) {
    var Temporary1;

  var result_2332033557 = [];

    var n_2332033560 = n_2332033554;
    var negative_2332033561 = (n_2332033560 < 0);
    if (negative_2332033561) {
    Temporary1 = ((~(n_2332033560) + 1) );
    }
    else {
    Temporary1 = n_2332033560;
    }
    
    var v_2332033562 = Temporary1;
    var xx_2332033563 = [];
    if (spec_2332033556.alternateForm) {
    switch (spec_2332033556.typ) {
    case 88:
      xx_2332033563 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 120:
      xx_2332033563 = nimCopy(null, [48,120], NTI33554449);
      break;
    case 98:
      xx_2332033563 = nimCopy(null, [48,98], NTI33554449);
      break;
    case 111:
      xx_2332033563 = nimCopy(null, [48,111], NTI33554449);
      break;
    default: 
      break;
    }
    }
    
    if ((v_2332033562 == 0)) {
    result_2332033557 = nimCopy(null, [48], NTI33554449);
    }
    else {
      result_2332033557 = nimCopy(null, [], NTI33554449);
      Label2: {
          Label3: while (true) {
          if (!(0 < v_2332033562)) break Label3;
            var d_2332033564 = (v_2332033562 % radix_2332033555);
            v_2332033562 = Math.trunc(((v_2332033562 / radix_2332033555) ));
            result_2332033557.push.apply(result_2332033557, mkDigit_721420293(chckRange(d_2332033564, -2147483648, 2147483647), spec_2332033556.typ));;
          }
      };
      Label4: {
        var idx_2332033569 = 0;
        var colontmp__2936012885 = 0;
        colontmp__2936012885 = divInt((result_2332033557).length, 2);
        var i_2936012886 = 0;
        Label5: {
            Label6: while (true) {
            if (!(i_2936012886 < colontmp__2936012885)) break Label6;
              idx_2332033569 = i_2936012886;
              var Temporary7 = result_2332033557[chckIndx(idx_2332033569, 0, (result_2332033557).length - 1)]; result_2332033557[chckIndx(idx_2332033569, 0, (result_2332033557).length - 1)] = result_2332033557[chckIndx(subInt(subInt((result_2332033557).length, idx_2332033569), 1), 0, (result_2332033557).length - 1)]; result_2332033557[chckIndx(subInt(subInt((result_2332033557).length, idx_2332033569), 1), 0, (result_2332033557).length - 1)] = Temporary7;              i_2936012886 = addInt(i_2936012886, 1);
            }
        };
      };
    }
    
    if (spec_2332033556.padWithZero) {
    var sign_2332033574 = (negative_2332033561 || !((spec_2332033556.sign == 45)));
    var toFill_2332033578 = subInt(subInt(subInt(spec_2332033556.minimumWidth, (result_2332033557).length), (xx_2332033563).length), (sign_2332033574 ? 1 : 0));
    if ((0 < toFill_2332033578)) {
    result_2332033557 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2332033578, 0, 2147483647)) || []).concat(result_2332033557 || []), NTI33554449);
    }
    
    }
    
    if (negative_2332033561) {
    result_2332033557 = nimCopy(null, ([45] || []).concat(xx_2332033563 || [],result_2332033557 || []), NTI33554449);
    }
    else {
    if (!((spec_2332033556.sign == 45))) {
    result_2332033557 = nimCopy(null, [spec_2332033556.sign].concat(xx_2332033563 || [],result_2332033557 || []), NTI33554449);
    }
    else {
      result_2332033557 = nimCopy(null, (xx_2332033563 || []).concat(result_2332033557 || []), NTI33554449);
    }
    }
    if ((spec_2332033556.align == 60)) {
    Label8: {
      var i_2332033583 = 0;
      var colontmp__2936012889 = 0;
      colontmp__2936012889 = (result_2332033557).length;
      var i_2936012890 = colontmp__2936012889;
      Label9: {
          Label10: while (true) {
          if (!(i_2936012890 < spec_2332033556.minimumWidth)) break Label10;
            i_2332033583 = i_2936012890;
            addChar(result_2332033557, spec_2332033556.fill);;
            i_2936012890 = addInt(i_2936012890, 1);
          }
      };
    };
    }
    else {
      var toFill_2332033584 = subInt(spec_2332033556.minimumWidth, (result_2332033557).length);
      if ((spec_2332033556.align == 94)) {
      var half_2332033585 = divInt(toFill_2332033584, 2);
      result_2332033557 = nimCopy(null, (nsuRepeatChar(spec_2332033556.fill, chckRange(half_2332033585, 0, 2147483647)) || []).concat(result_2332033557 || [],nsuRepeatChar(spec_2332033556.fill, chckRange(subInt(toFill_2332033584, half_2332033585), 0, 2147483647)) || []), NTI33554449);
      }
      else {
        if ((0 < toFill_2332033584)) {
        result_2332033557 = nimCopy(null, (nsuRepeatChar(spec_2332033556.fill, chckRange(toFill_2332033584, 0, 2147483647)) || []).concat(result_2332033557 || []), NTI33554449);
        }
        
      }
      
    }
    

  return result_2332033557;

}

function formatValue_2332033544(result_2332033546, result_2332033546_Idx, value_2332033547, specifier_2332033548) {
  BeforeRet: {
    if (((specifier_2332033548).length == 0)) {
    result_2332033546[result_2332033546_Idx].push.apply(result_2332033546[result_2332033546_Idx], HEX24_369098760(value_2332033547));;
    break BeforeRet;
    }
    
    var spec_2332033549 = parseStandardFormatSpecifier_721420346(specifier_2332033548, 0, false);
    var radix_2332033550 = 10;
    switch (spec_2332033549.typ) {
    case 120:
    case 88:
      radix_2332033550 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_2332033550 = 2;
      break;
    case 111:
      radix_2332033550 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_2332033549.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2332033546[result_2332033546_Idx].push.apply(result_2332033546[result_2332033546_Idx], formatInt_2332033552(value_2332033547, radix_2332033550, spec_2332033549));;
  };

  
}

function HEX24_3003121876(item_3003121877) {
  var result_3003121878 = [];

  BeforeRet: {
    var fmtRes_3003121883 = [mnewString(0)];
    fmtRes_3003121883[0].push.apply(fmtRes_3003121883[0], [40]);;
    formatValue_3003121884(fmtRes_3003121883, 0, item_3003121877.Field0, []);
    fmtRes_3003121883[0].push.apply(fmtRes_3003121883[0], [44,32]);;
    formatValue_2332033544(fmtRes_3003121883, 0, item_3003121877.Field1, []);
    fmtRes_3003121883[0].push.apply(fmtRes_3003121883[0], [41]);;
    result_3003121878 = nimCopy(null, fmtRes_3003121883[0], NTI33554449);
    break BeforeRet;
  };

  return result_3003121878;

}

function raiseKeyError_2986346129(key_2986346131) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3003121876(key_2986346131) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986346035(t_2986346038, key_2986346039) {
  var result_2986346040 = null;
  var result_2986346040_Idx = 0;

    var hcHEX60gensym22_2986346041 = [0];
    var indexHEX60gensym22_2986346048 = rawGet_2986345489(t_2986346038, key_2986346039, hcHEX60gensym22_2986346041, 0);
    if ((0 <= indexHEX60gensym22_2986346048)) {
    result_2986346040 = t_2986346038.data[chckIndx(indexHEX60gensym22_2986346048, 0, (t_2986346038.data).length - 1)]; result_2986346040_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986346039);
    }
    

  return [result_2986346040, result_2986346040_Idx];

}

function remove_2986346156(L_2986346158, n_2986346159) {
    if ((n_2986346159 == L_2986346158.tail)) {
    L_2986346158.tail = n_2986346159.prev;
    }
    
    if ((n_2986346159 == L_2986346158.head)) {
    L_2986346158.head = n_2986346159.next;
    }
    
    if (!((n_2986346159.next == null))) {
    n_2986346159.next.prev = n_2986346159.prev;
    }
    
    if (!((n_2986346159.prev == null))) {
    n_2986346159.prev.next = n_2986346159.next;
    }
    

  
}

function prepend_2986346460(L_2986346462, n_2986346463) {
    n_2986346463.prev = null;
    n_2986346463.next = L_2986346462.head;
    if (!((L_2986346462.head == null))) {
    if (!((L_2986346462.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986346462.head.prev = n_2986346463;
    }
    
    L_2986346462.head = n_2986346463;
    if ((L_2986346462.tail == null)) {
    L_2986346462.tail = n_2986346463;
    }
    

  
}

function HEX5BHEX5D_2986345949(cache_2986345952, key_2986345953) {
    var Temporary1;

  var result_2986345954 = null;

    var node_2986346142 = (Temporary1 = HEX5BHEX5D_2986346035(cache_2986345952.table, key_2986345953), Temporary1)[0][Temporary1[1]];
    result_2986345954 = node_2986346142.value.val;
    remove_2986346156(cache_2986345952.list, node_2986346142);
    prepend_2986346460(cache_2986345952.list, node_2986346142);

  return result_2986345954;

}

function nsuRepeatStr(s_855639142, n_855639143) {
  var result_855639144 = [];

    result_855639144 = nimCopy(null, mnewString(0), NTI33554449);
    Label1: {
      var i_855639149 = 0;
      var colontmp__2936012920 = 0;
      colontmp__2936012920 = n_855639143;
      var res_2936012921 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_2936012921 <= colontmp__2936012920)) break Label3;
            i_855639149 = res_2936012921;
            result_855639144.push.apply(result_855639144, s_855639142);;
            res_2936012921 = addInt(res_2936012921, 1);
          }
      };
    };

  return result_855639144;

}

function repeat2_3003121679(s_3003121680, n_3003121681) {
  var result_3003121682 = [];

    result_3003121682 = nimCopy(null, nsuRepeatStr(s_3003121680, n_3003121681), NTI33554449);

  return result_3003121682;

}

function symbolName_2969569242(a_2969569244) {
  var result_2969569245 = [];

    result_2969569245 = nimCopy(null, names_2969569252[chckIndx(subInt(a_2969569244, 0), 0, (names_2969569252).length - 1)], NTI33554449);

  return result_2969569245;

}

function len_2969567320(node_2969567321) {
  var result_2969567322 = 0;

  BeforeRet: {
    result_2969567322 = (node_2969567321.children).length;
    break BeforeRet;
  };

  return result_2969567322;

}

function collectionToString_2969569340(x_2969569342, prefix_2969569343, separator_2969569344, suffix_2969569345) {
  var result_2969569346 = [[]];

    result_2969569346[0] = nimCopy(null, prefix_2969569343, NTI33554449);
    var firstElement_2969569347 = true;
    Label1: {
      var value_2969569351 = 0;
      var i_2936012925 = 0;
      var L_2936012926 = (x_2969569342).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012925 < L_2936012926)) break Label3;
            value_2969569351 = x_2969569342[i_2936012925];
            if (firstElement_2969569347) {
            firstElement_2969569347 = false;
            }
            else {
            result_2969569346[0].push.apply(result_2969569346[0], separator_2969569344);;
            }
            
            addQuoted_855639425(result_2969569346, 0, value_2969569351);
            i_2936012925 += 1;
            if (!(((x_2969569342).length == L_2936012926))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2969569346[0].push.apply(result_2969569346[0], suffix_2969569345);;

  return result_2969569346[0];

}

function HEX24_2969569336(x_2969569338) {
  var result_2969569339 = [];

    result_2969569339 = nimCopy(null, collectionToString_2969569340(x_2969569338, [64,91], [44,32], [93]), NTI33554449);

  return result_2969569339;

}

function find_2969567347(a_2969567350, item_2969567351) {
  var result_2969567352 = 0;

  BeforeRet: {
    result_2969567352 = 0;
    Label1: {
      var i_2969567374 = null;
      var i_2936012930 = 0;
      var L_2936012931 = (a_2969567350).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012930 < L_2936012931)) break Label3;
            i_2969567374 = a_2969567350[chckIndx(i_2936012930, 0, (a_2969567350).length - 1)];
            if ((i_2969567374 == item_2969567351)) {
            break BeforeRet;
            }
            
            result_2969567352 = addInt(result_2969567352, 1);
            i_2936012930 = addInt(i_2936012930, 1);
            if (!(((a_2969567350).length == L_2936012931))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2969567352 = -1;
  };

  return result_2969567352;

}

function index_2969567340(node_2969567341) {
  var result_2969567342 = 0;

  BeforeRet: {
    if ((node_2969567341.parent == null)) {
    result_2969567342 = -1;
    break BeforeRet;
    }
    
    result_2969567342 = find_2969567347(node_2969567341.parent.children, node_2969567341);
    break BeforeRet;
  };

  return result_2969567342;

}

function reverse_2969569209(a_2969569211, first_2969569212, last_2969569213) {
    var x_2969569214 = first_2969569212;
    var y_2969569215 = last_2969569213;
    Label1: {
        Label2: while (true) {
        if (!(x_2969569214 < y_2969569215)) break Label2;
          var Temporary3 = a_2969569211[chckIndx(x_2969569214, 0, (a_2969569211).length - 1)]; a_2969569211[chckIndx(x_2969569214, 0, (a_2969569211).length - 1)] = a_2969569211[chckIndx(y_2969569215, 0, (a_2969569211).length - 1)]; a_2969569211[chckIndx(y_2969569215, 0, (a_2969569211).length - 1)] = Temporary3;          y_2969569215 = subInt(y_2969569215, 1);
          x_2969569214 = addInt(x_2969569214, 1);
        }
    };

  
}

function reverse_2969569203(a_2969569205) {
    reverse_2969569209(a_2969569205, 0, chckRange(nimMax(0, (a_2969569205).length - 1), 0, 2147483647));

  
}

function path_2969569187(node_2969569188) {
  var result_2969569189 = [];

    result_2969569189 = nimCopy(null, [], NTI2969568321);
    var node_2969569194 = node_2969569188;
    Label1: {
        Label2: while (true) {
        if (!!((node_2969569194.parent == null))) break Label2;
          result_2969569189.push(index_2969567340(node_2969569194));;
          node_2969569194 = node_2969569194.parent;
        }
    };
    reverse_2969569203(result_2969569189);

  return result_2969569189;

}

function HEX24_2969569239(node_2969569240) {
  var result_2969569241 = [];

    result_2969569241 = nimCopy(null, (symbolName_2969569242(node_2969569240.kind) || []).concat([40] || []), NTI33554449);
    if (!(HEX3DHEX3D_2181038320(node_2969569240.id, idNone_2181038338()))) {
    result_2969569241.push.apply(result_2969569241, (HEX24_2181038317(node_2969569240.id) || []).concat([44,32] || []));;
    }
    
    if (!(HEX3DHEX3D_2181038320(node_2969569240.reff, idNone_2181038338()))) {
    result_2969569241.push.apply(result_2969569241, ([114,101,102,102,58,32] || []).concat(HEX24_2181038317(node_2969569240.reff) || [],[44,32] || []));;
    }
    
    if ((0 < (node_2969569240.text).length)) {
    result_2969569241.push.apply(result_2969569241, ([39] || []).concat(node_2969569240.text || [],[39,44,32] || []));;
    }
    
    if ((0 < len_2969567320(node_2969569240))) {
    result_2969569241.push.apply(result_2969569241, (HEX24_369098760(len_2969567320(node_2969569240)) || []).concat([44,32] || []));;
    }
    
    result_2969569241.push.apply(result_2969569241, HEX24_2969569336(path_2969569187(node_2969569240)));;
    result_2969569241.push.apply(result_2969569241, [41]);;

  return result_2969569241;

}

function getTypeKey_2986416887(ctxHEX60gensym90_2986416888, itemIdHEX60gensym90_2986416889) {
  var result_2986416890 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

  BeforeRet: {
    var colontmp__2936012934 = nimCopy(null, itemIdHEX60gensym90_2986416889, NTI3003121689);
    var colontmp__2936012935 = 0;
    result_2986416890 = nimCopy(result_2986416890, {Field0: nimCopy(null, colontmp__2936012934, NTI3003121689), Field1: colontmp__2936012935}, NTI3003121692);
    break BeforeRet;
  };

  return result_2986416890;

}

function bigEndian32_2181038250(b_2181038251) {
  var result_2181038252 = 0;

    result_2181038252 = (((((b_2181038251 & 255) << 24) | ((b_2181038251 & 65280) << 8)) | ((b_2181038251 & 16711680) >> 8)) | (b_2181038251 >> 24));

  return result_2181038252;

}

function genOid_2181038280() {
  var result_2181038281 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    var timeHEX60gensym1_2181038284 = toUnix_1191183338(getTime_1191183389());
    var iHEX60gensym1_2181038285 = 0;
    incr_2181038231[0] = addInt(incr_2181038231[0], 1);
    iHEX60gensym1_2181038285 = ((incr_2181038231[0]) | 0);
    result_2181038281.time = bigEndian32_2181038250(timeHEX60gensym1_2181038284);
    result_2181038281.fuzz = fuzz_2181038236;
    result_2181038281.count = bigEndian32_2181038250(iHEX60gensym1_2181038285);

  return result_2181038281;

}

function newId_2181038297() {
  var result_2181038298 = ({padding: 0, time: 0, fuzz: 0, count: 0});

  BeforeRet: {
    result_2181038298 = nimCopy(result_2181038298, genOid_2181038280(), NTI2181038083);
    break BeforeRet;
  };

  return result_2181038298;

}

function getItem_2986398161(selfHEX60gensym75_2986398162) {
  var result_2986398163 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym75_2986398162.id, null_2181038340)) {
    selfHEX60gensym75_2986398162.id = nimCopy(selfHEX60gensym75_2986398162.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym75_2986398162.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,53,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936012936 = nimCopy(null, selfHEX60gensym75_2986398162.id, NTI2181038083);
    var colontmp__2936012937 = 0;
    result_2986398163 = nimCopy(result_2986398163, {Field0: nimCopy(null, colontmp__2936012936, NTI2181038083), Field1: colontmp__2936012937}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986398163;

}

function hash_3003121894(value_3003121895) {
  var result_3003121896 = 0;

    result_3003121896 = (hash_2181038324(value_3003121895.Field0) ^ hash_1325400236(value_3003121895.Field1));

  return result_3003121896;

}

function hash_3003124356(x_3003124358) {
  var result_3003124359 = 0;

    result_3003124359 = HEX21HEX26_1325400067(result_3003124359, hash_3003121894(x_3003124358["Field0"]));
    result_3003124359 = HEX21HEX26_1325400067(result_3003124359, hash_1325400236(x_3003124358["Field1"]));
    result_3003124359 = HEX21HEX24_1325400082(result_3003124359);

  return result_3003124359;

}

function HEX3DHEX3D_3003121900(a_3003121901, b_3003121902) {
  var result_3003121903 = false;

    result_3003121903 = (HEX3DHEX3D_2181038320(a_3003121901.Field0, b_3003121902.Field0) && (a_3003121901.Field1 == b_3003121902.Field1));

  return result_3003121903;

}

function HEX3DHEX3D_3003124693(x_3003124695, y_3003124696) {
  var result_3003124697 = false;

  BeforeRet: {
    if (!(HEX3DHEX3D_3003121900(x_3003124695["Field0"], y_3003124696["Field0"]))) {
    result_3003124697 = false;
    break BeforeRet;
    }
    
    if (!((x_3003124695["Field1"] == y_3003124696["Field1"]))) {
    result_3003124697 = false;
    break BeforeRet;
    }
    
    result_3003124697 = true;
    break BeforeRet;
  };

  return result_3003124697;

}

function rawGet_2986443828(t_2986443831, key_2986443832, hc_2986443833, hc_2986443833_Idx) {
  var result_2986443834 = 0;

  BeforeRet: {
    hc_2986443833[hc_2986443833_Idx] = hash_3003124356(key_2986443832);
    if ((hc_2986443833[hc_2986443833_Idx] == 0)) {
    hc_2986443833[hc_2986443833_Idx] = 314159265;
    }
    
    if (((t_2986443831.data).length == 0)) {
    result_2986443834 = -1;
    break BeforeRet;
    }
    
    var h_2986443923 = (hc_2986443833[hc_2986443833_Idx] & (t_2986443831.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986443831.data[chckIndx(h_2986443923, 0, (t_2986443831.data).length - 1)].Field0)) break Label2;
          if (((t_2986443831.data[chckIndx(h_2986443923, 0, (t_2986443831.data).length - 1)].Field0 == hc_2986443833[hc_2986443833_Idx]) && HEX3DHEX3D_3003124693(t_2986443831.data[chckIndx(h_2986443923, 0, (t_2986443831.data).length - 1)].Field1, key_2986443832))) {
          result_2986443834 = h_2986443923;
          break BeforeRet;
          }
          
          h_2986443923 = nextTry_1308622883(h_2986443923, (t_2986443831.data).length - 1);
        }
    };
    result_2986443834 = subInt(-1, h_2986443923);
  };

  return result_2986443834;

}

function hasKey_2986443821(t_2986443824, key_2986443825) {
  var result_2986443826 = false;

    var hc_2986443827 = [0];
    result_2986443826 = (0 <= rawGet_2986443828(t_2986443824, key_2986443825, hc_2986443827, 0));

  return result_2986443826;

}

function contains_2986443815(t_2986443818, key_2986443819) {
  var result_2986443820 = false;

  BeforeRet: {
    result_2986443820 = hasKey_2986443821(t_2986443818, key_2986443819);
    break BeforeRet;
  };

  return result_2986443820;

}

function addQuoted_3003132538(s_3003132540, s_3003132540_Idx, x_3003132541) {
    s_3003132540[s_3003132540_Idx].push.apply(s_3003132540[s_3003132540_Idx], HEX24_3003121876(x_3003132541));;

  
}

function HEX24_3003132512(x_3003132514) {
  var result_3003132515 = [[]];

    result_3003132515[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym66_3003132526 = 0;
    if ((0 < countHEX60gensym66_3003132526)) {
    result_3003132515[0].push.apply(result_3003132515[0], [44,32]);;
    }
    
    result_3003132515[0].push.apply(result_3003132515[0], [105,116,101,109]);;
    result_3003132515[0].push.apply(result_3003132515[0], [58,32]);;
    countHEX60gensym66_3003132526 += 1;
    addQuoted_3003132538(result_3003132515, 0, x_3003132514["Field0"]);
    if ((0 < countHEX60gensym66_3003132526)) {
    result_3003132515[0].push.apply(result_3003132515[0], [44,32]);;
    }
    
    result_3003132515[0].push.apply(result_3003132515[0], [117,112,100,97,116,101]);;
    result_3003132515[0].push.apply(result_3003132515[0], [58,32]);;
    countHEX60gensym66_3003132526 += 1;
    addQuoted_855639425(result_3003132515, 0, x_3003132514["Field1"]);
    result_3003132515[0].push.apply(result_3003132515[0], [41]);;

  return result_3003132515[0];

}

function raiseKeyError_3003132465(key_3003132467) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3003132512(key_3003132467) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986444260(t_2986444263, key_2986444264) {
  var result_2986444265 = null;
  var result_2986444265_Idx = 0;

    var hcHEX60gensym22_2986444266 = [0];
    var indexHEX60gensym22_2986444273 = rawGet_2986443828(t_2986444263, key_2986444264, hcHEX60gensym22_2986444266, 0);
    if ((0 <= indexHEX60gensym22_2986444273)) {
    result_2986444265 = t_2986444263.data[chckIndx(indexHEX60gensym22_2986444273, 0, (t_2986444263.data).length - 1)]; result_2986444265_Idx = "Field2";
    }
    else {
    raiseKeyError_3003132465(key_2986444264);
    }
    

  return [result_2986444265, result_2986444265_Idx];

}

function rawGet_2986444983(t_2986444986, key_2986444987, hc_2986444988, hc_2986444988_Idx) {
  var result_2986444989 = 0;

  BeforeRet: {
    hc_2986444988[hc_2986444988_Idx] = hash_3003124356(key_2986444987);
    if ((hc_2986444988[hc_2986444988_Idx] == 0)) {
    hc_2986444988[hc_2986444988_Idx] = 314159265;
    }
    
    if (((t_2986444986.data).length == 0)) {
    result_2986444989 = -1;
    break BeforeRet;
    }
    
    var h_2986445078 = (hc_2986444988[hc_2986444988_Idx] & (t_2986444986.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986444986.data[chckIndx(h_2986445078, 0, (t_2986444986.data).length - 1)].Field0)) break Label2;
          if (((t_2986444986.data[chckIndx(h_2986445078, 0, (t_2986444986.data).length - 1)].Field0 == hc_2986444988[hc_2986444988_Idx]) && HEX3DHEX3D_3003124693(t_2986444986.data[chckIndx(h_2986445078, 0, (t_2986444986.data).length - 1)].Field1, key_2986444987))) {
          result_2986444989 = h_2986445078;
          break BeforeRet;
          }
          
          h_2986445078 = nextTry_1308622883(h_2986445078, (t_2986444986.data).length - 1);
        }
    };
    result_2986444989 = subInt(-1, h_2986445078);
  };

  return result_2986444989;

}

function del_2986444977(t_2986444980, key_2986444981) {
    var hc_2986444982 = [0];
    var i_2986445344 = rawGet_2986444983(t_2986444980, key_2986444981, hc_2986444982, 0);
    var mskHEX60gensym36_2986445348 = (t_2986444980.data).length - 1;
    if ((0 <= i_2986445344)) {
    t_2986444980.counter = subInt(t_2986444980.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986445355 = i_2986445344;
            var rHEX60gensym36_2986445356 = jHEX60gensym36_2986445355;
            t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)].Field0 = 0;
            t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)].Field1 = nimCopy(t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)].Field2 = nimCopy(null, [], NTI2986344456);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986445344 = (addInt(i_2986445344, 1) & mskHEX60gensym36_2986445348);
                  if (isEmpty_1308622877(t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986445356 = (t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)].Field0 & mskHEX60gensym36_2986445348);
                  if (!(((((rHEX60gensym36_2986445356 <= i_2986445344) && (jHEX60gensym36_2986445355 < rHEX60gensym36_2986445356)) || ((jHEX60gensym36_2986445355 < rHEX60gensym36_2986445356) && (i_2986445344 < jHEX60gensym36_2986445355))) || ((i_2986445344 < jHEX60gensym36_2986445355) && (rHEX60gensym36_2986445356 <= i_2986445344))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986444980.data[chckIndx(jHEX60gensym36_2986445355, 0, (t_2986444980.data).length - 1)] = nimCopy(t_2986444980.data[chckIndx(jHEX60gensym36_2986445355, 0, (t_2986444980.data).length - 1)], t_2986444980.data[chckIndx(i_2986445344, 0, (t_2986444980.data).length - 1)], NTI2986344468);
          }
      };
    };
    }
    

  
}

function rawGet_2986444476(t_2986444479, key_2986444480, hc_2986444481, hc_2986444481_Idx) {
  var result_2986444482 = 0;

  BeforeRet: {
    hc_2986444481[hc_2986444481_Idx] = hash_2181038324(key_2986444480);
    if ((hc_2986444481[hc_2986444481_Idx] == 0)) {
    hc_2986444481[hc_2986444481_Idx] = 314159265;
    }
    
    if (((t_2986444479.data).length == 0)) {
    result_2986444482 = -1;
    break BeforeRet;
    }
    
    var h_2986444568 = (hc_2986444481[hc_2986444481_Idx] & (t_2986444479.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986444479.data[chckIndx(h_2986444568, 0, (t_2986444479.data).length - 1)].Field0)) break Label2;
          if (((t_2986444479.data[chckIndx(h_2986444568, 0, (t_2986444479.data).length - 1)].Field0 == hc_2986444481[hc_2986444481_Idx]) && HEX3DHEX3D_2181038320(t_2986444479.data[chckIndx(h_2986444568, 0, (t_2986444479.data).length - 1)].Field1, key_2986444480))) {
          result_2986444482 = h_2986444568;
          break BeforeRet;
          }
          
          h_2986444568 = nextTry_1308622883(h_2986444568, (t_2986444479.data).length - 1);
        }
    };
    result_2986444482 = subInt(-1, h_2986444568);
  };

  return result_2986444482;

}

function raiseKeyError_2969569048(key_2969569050) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2181038317(key_2969569050) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986444469(t_2986444472, key_2986444473) {
  var result_2986444474 = null;

    var hcHEX60gensym22_2986444475 = [0];
    var indexHEX60gensym22_2986444821 = rawGet_2986444476(t_2986444472, key_2986444473, hcHEX60gensym22_2986444475, 0);
    if ((0 <= indexHEX60gensym22_2986444821)) {
    result_2986444474 = t_2986444472.data[chckIndx(indexHEX60gensym22_2986444821, 0, (t_2986444472.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_2986444473);
    }
    

  return result_2986444474;

}

function voidType_3070230940() {
  var result_3070230941 = null;

    result_3070230941 = {kind: 1, open: false, returnType: null, paramTypes: []};

  return result_3070230941;

}

function integerOutOfRangeError_771752261() {
    raiseException({message: [80,97,114,115,101,100,32,105,110,116,101,103,101,114,32,111,117,116,115,105,100,101,32,111,102,32,118,97,108,105,100,32,114,97,110,103,101], parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function rawParseInt_771752263(s_771752264, b_771752265, b_771752265_Idx) {
      var Temporary1;
          var Temporary4;

  var result_771752266 = 0;

    var sign_771752267 = -1;
    var i_771752268 = 0;
    if ((i_771752268 < (s_771752264).length)) {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 43)) {
    i_771752268 += 1;
    }
    else {
    if ((s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 45)) {
    i_771752268 += 1;
    sign_771752267 = 1;
    }
    }
    }
    
      if (!(i_771752268 < (s_771752264).length)) Temporary1 = false; else {        Temporary1 = (ConstSet58[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);      }    if (Temporary1) {
    b_771752265[b_771752265_Idx] = 0;
    Label2: {
        Label3: while (true) {
          if (!(i_771752268 < (s_771752264).length)) Temporary4 = false; else {            Temporary4 = (ConstSet59[s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_771752302 = (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] - 48);
          if ((Math.trunc((-9223372036854775808 + c_771752302) / 10) <= b_771752265[b_771752265_Idx])) {
          b_771752265[b_771752265_Idx] = ((b_771752265[b_771752265_Idx] * 10) - c_771752302);
          }
          else {
          integerOutOfRangeError_771752261();
          }
          
          i_771752268 += 1;
          Label5: {
              Label6: while (true) {
              if (!((i_771752268 < (s_771752264).length) && (s_771752264[chckIndx(i_771752268, 0, (s_771752264).length - 1)] == 95))) break Label6;
                i_771752268 += 1;
              }
          };
        }
    };
    if (((sign_771752267 == -1) && (b_771752265[b_771752265_Idx] == -9223372036854775808))) {
    integerOutOfRangeError_771752261();
    }
    else {
      b_771752265[b_771752265_Idx] = (b_771752265[b_771752265_Idx] * sign_771752267);
      result_771752266 = i_771752268;
    }
    
    }
    

  return result_771752266;

}

function npuParseBiggestInt(s_771752325, number_771752326, number_771752326_Idx) {
  var result_771752327 = 0;

    var res_771752328 = [0];
    result_771752327 = rawParseInt_771752263(s_771752325, res_771752328, 0);
    if (!((result_771752327 == 0))) {
    number_771752326[number_771752326_Idx] = res_771752328[0];
    }
    

  return result_771752327;

}

function npuParseInt(s_771752330, number_771752331, number_771752331_Idx) {
  var result_771752332 = 0;

    var res_771752333 = [0];
    result_771752332 = npuParseBiggestInt(s_771752330, res_771752333, 0);
    if (((res_771752333[0] < -2147483648) || (2147483647 < res_771752333[0]))) {
    integerOutOfRangeError_771752261();
    }
    
    if (!((result_771752332 == 0))) {
    number_771752331[number_771752331_Idx] = chckRange(res_771752333[0], -2147483648, 2147483647);
    }
    

  return result_771752332;

}

function parseInt_771752724(s_771752725, number_771752726, number_771752726_Idx, start_771752727) {
  var result_771752728 = 0;

    result_771752728 = npuParseInt((s_771752725.slice(start_771752727, (s_771752725).length - 1 + 1)), number_771752726, number_771752726_Idx);

  return result_771752728;

}

function nsuParseInt(s_855638869) {
  var result_855638870 = [0];

    result_855638870[0] = 0;
    var L_855638871 = parseInt_771752724(s_855638869, result_855638870, 0, 0);
    if ((!((L_855638871 == (s_855638869).length)) || (L_855638871 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638869 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638870[0];

}

function intType_3070230942() {
  var result_3070230943 = null;

    result_3070230943 = {kind: 3, open: false, returnType: null, paramTypes: []};

  return result_3070230943;

}

function errorType_3070230904() {
  var result_3070230905 = null;

    result_3070230905 = {kind: 0, open: false, returnType: null, paramTypes: []};

  return result_3070230905;

}

function stringType_3070230944() {
  var result_3070230945 = null;

    result_3070230945 = {kind: 2, open: false, returnType: null, paramTypes: []};

  return result_3070230945;

}

function HEX5BHEX5D_2969567316(node_2969567317, index_2969567318) {
  var result_2969567319 = null;

  BeforeRet: {
    result_2969567319 = node_2969567317.children[chckIndx(index_2969567318, 0, (node_2969567317.children).length - 1)];
    break BeforeRet;
  };

  return result_2969567319;

}

function recordDependency_2986397948(ctxHEX60gensym72_2986397949, itemHEX60gensym72_2986397950, updateHEX60gensym72_2986397951) {
    if ((0 < (ctxHEX60gensym72_2986397949.dependencyStack).length)) {
    ctxHEX60gensym72_2986397949.dependencyStack[chckIndx((ctxHEX60gensym72_2986397949.dependencyStack).length - 1, 0, (ctxHEX60gensym72_2986397949.dependencyStack).length - 1)].push({Field0: nimCopy(null, itemHEX60gensym72_2986397950, NTI3003121689), Field1: updateHEX60gensym72_2986397951});;
    }
    

  
}

function toFloat_33556023(i_33556024) {
  var result_33556025 = 0.0;

    result_33556025 = i_33556024;

  return result_33556025;

}

function HEX2F_33556035(x_33556036, y_33556037) {
  var result_33556038 = 0.0;

    result_33556038 = (toFloat_33556023(x_33556036) / toFloat_33556023(y_33556037));

  return result_33556038;

}

function toUnixFloat_1191183346(t_1191183347) {
  var result_1191183348 = 0.0;

    result_1191183348 = (t_1191183347.seconds + HEX2F_33556035(t_1191183347.nanosecond, convert_1191182870(3, 0, 1)));

  return result_1191183348;

}

function myGetTicks_2281701422() {
  var result_2281701423 = 0;

  BeforeRet: {
    var time_2281701424 = getTime_1191183389();
    result_2281701423 = (toUnixFloat_1191183346(time_2281701424) * 1000000000.0);
    break BeforeRet;
  };

  return result_2281701423;

}

function startTimer_2281701428() {
  var result_2281701429 = ({start: 0});

    result_2281701429 = nimCopy(result_2281701429, {start: myGetTicks_2281701422()}, NTI2281701407);

  return result_2281701429;

}

function rawGet_3003124349(t_3003124352, key_3003124353, hc_3003124354, hc_3003124354_Idx) {
  var result_3003124355 = 0;

  BeforeRet: {
    hc_3003124354[hc_3003124354_Idx] = hash_3003124356(key_3003124353);
    if ((hc_3003124354[hc_3003124354_Idx] == 0)) {
    hc_3003124354[hc_3003124354_Idx] = 314159265;
    }
    
    if (((t_3003124352.data).length == 0)) {
    result_3003124355 = -1;
    break BeforeRet;
    }
    
    var h_3003124452 = (hc_3003124354[hc_3003124354_Idx] & (t_3003124352.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003124352.data[chckIndx(h_3003124452, 0, (t_3003124352.data).length - 1)].Field0)) break Label2;
          if (((t_3003124352.data[chckIndx(h_3003124452, 0, (t_3003124352.data).length - 1)].Field0 == hc_3003124354[hc_3003124354_Idx]) && HEX3DHEX3D_3003124693(t_3003124352.data[chckIndx(h_3003124452, 0, (t_3003124352.data).length - 1)].Field1, key_3003124353))) {
          result_3003124355 = h_3003124452;
          break BeforeRet;
          }
          
          h_3003124452 = nextTry_1308622883(h_3003124452, (t_3003124352.data).length - 1);
        }
    };
    result_3003124355 = subInt(-1, h_3003124452);
  };

  return result_3003124355;

}

function getOrDefault_3003124339(t_3003124342, key_3003124343, default_3003124344) {
    var Temporary1;

  var result_3003124345 = null;

    var hcHEX60gensym22_3003124348 = [0];
    var indexHEX60gensym22_3003124715 = rawGet_3003124349(t_3003124342, key_3003124343, hcHEX60gensym22_3003124348, 0);
    if ((0 <= indexHEX60gensym22_3003124715)) {
    Temporary1 = t_3003124342.data[chckIndx(indexHEX60gensym22_3003124715, 0, (t_3003124342.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003124344;
    }
    
    result_3003124345 = Temporary1;

  return result_3003124345;

}

function getOrDefault_3003124243(cache_3003124246, key_3003124247, val_3003124248) {
  var result_3003124249 = 0;

    var node_3003124805 = getOrDefault_3003124339(cache_3003124246.table, key_3003124247, null);
    if ((node_3003124805 == null)) {
    result_3003124249 = val_3003124248;
    }
    else {
      result_3003124249 = node_3003124805.value.val;
    }
    

  return result_3003124249;

}

function nodeColor_3003124149(graph_3003124150, key_3003124151, parentVerified_3003124152) {
  var result_3003124153 = 0;

  BeforeRet: {
    if ((key_3003124151.Field1 == -1)) {
    var inputChangedRevision_3003124809 = getOrDefault_3003124243(graph_3003124150.changed, key_3003124151, graph_3003124150.revision);
    if ((parentVerified_3003124152 < inputChangedRevision_3003124809)) {
    result_3003124153 = 1;
    break BeforeRet;
    }
    else {
      result_3003124153 = 2;
      break BeforeRet;
    }
    
    }
    
    var verified_3003124905 = getOrDefault_3003124243(graph_3003124150.verified, key_3003124151, 0);
    if (!((verified_3003124905 == graph_3003124150.revision))) {
    result_3003124153 = 0;
    break BeforeRet;
    }
    
    var changed_3003125001 = getOrDefault_3003124243(graph_3003124150.changed, key_3003124151, graph_3003124150.revision);
    if ((changed_3003125001 == graph_3003124150.revision)) {
    result_3003124153 = 1;
    break BeforeRet;
    }
    
    result_3003124153 = 2;
    break BeforeRet;
  };

  return result_3003124153;

}

function hash_2969569587(node_2969569588) {
  var result_2969569589 = 0;

    result_2969569589 = node_2969569588;

  return result_2969569589;

}

function rawGet_2986346825(t_2986346828, key_2986346829, hc_2986346830, hc_2986346830_Idx) {
  var result_2986346831 = 0;

  BeforeRet: {
    hc_2986346830[hc_2986346830_Idx] = hash_2969569587(key_2986346829);
    if ((hc_2986346830[hc_2986346830_Idx] == 0)) {
    hc_2986346830[hc_2986346830_Idx] = 314159265;
    }
    
    if (((t_2986346828.data).length == 0)) {
    result_2986346831 = -1;
    break BeforeRet;
    }
    
    var h_2986346917 = (hc_2986346830[hc_2986346830_Idx] & (t_2986346828.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986346828.data[chckIndx(h_2986346917, 0, (t_2986346828.data).length - 1)].Field0)) break Label2;
          if (((t_2986346828.data[chckIndx(h_2986346917, 0, (t_2986346828.data).length - 1)].Field0 == hc_2986346830[hc_2986346830_Idx]) && (t_2986346828.data[chckIndx(h_2986346917, 0, (t_2986346828.data).length - 1)].Field1 == key_2986346829))) {
          result_2986346831 = h_2986346917;
          break BeforeRet;
          }
          
          h_2986346917 = nextTry_1308622883(h_2986346917, (t_2986346828.data).length - 1);
        }
    };
    result_2986346831 = subInt(-1, h_2986346917);
  };

  return result_2986346831;

}

function hasKey_2986417075(t_2986417078, key_2986417079) {
  var result_2986417080 = false;

    var hc_2986417081 = [0];
    result_2986417080 = (0 <= rawGet_2986346825(t_2986417078, key_2986417079, hc_2986417081, 0));

  return result_2986417080;

}

function contains_2986417069(t_2986417072, key_2986417073) {
  var result_2986417074 = false;

  BeforeRet: {
    result_2986417074 = hasKey_2986417075(t_2986417072, key_2986417073);
    break BeforeRet;
  };

  return result_2986417074;

}

function contains_2986416975(cache_2986416978, key_2986416979) {
  var result_2986416980 = false;

    result_2986416980 = contains_2986417069(cache_2986416978.table, key_2986416979);

  return result_2986416980;

}

function HEX5BHEX5D_2986414412(t_2986414415, key_2986414416) {
  var result_2986414417 = null;
  var result_2986414417_Idx = 0;

    var hcHEX60gensym22_2986414418 = [0];
    var indexHEX60gensym22_2986414425 = rawGet_3003122103(t_2986414415, key_2986414416, hcHEX60gensym22_2986414418, 0);
    if ((0 <= indexHEX60gensym22_2986414425)) {
    result_2986414417 = t_2986414415.data[chckIndx(indexHEX60gensym22_2986414425, 0, (t_2986414415.data).length - 1)]; result_2986414417_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850841(key_2986414416);
    }
    

  return [result_2986414417, result_2986414417_Idx];

}

function isFilled_1828716583(hcode_1828716584) {
  var result_1828716585 = false;

    result_1828716585 = !((hcode_1828716584 == 0));

  return result_1828716585;

}

function nextTry_1828716586(h_1828716587, maxHash_1828716588) {
  var result_1828716589 = 0;

    result_1828716589 = (addInt(h_1828716587, 1) & maxHash_1828716588);

  return result_1828716589;

}

function rawGet_3003127798(t_3003127801, key_3003127802, hc_3003127803, hc_3003127803_Idx) {
  var result_3003127804 = 0;

  BeforeRet: {
    hc_3003127803[hc_3003127803_Idx] = hash_3003124356(key_3003127802);
    if ((hc_3003127803[hc_3003127803_Idx] == 0)) {
    hc_3003127803[hc_3003127803_Idx] = 314159265;
    }
    
    if (((t_3003127801.data).length == 0)) {
    result_3003127804 = -1;
    break BeforeRet;
    }
    
    var h_3003127893 = (hc_3003127803[hc_3003127803_Idx] & (t_3003127801.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003127801.data[chckIndx(h_3003127893, 0, (t_3003127801.data).length - 1)].Field0)) break Label2;
          if (((t_3003127801.data[chckIndx(h_3003127893, 0, (t_3003127801.data).length - 1)].Field0 == hc_3003127803[hc_3003127803_Idx]) && HEX3DHEX3D_3003124693(t_3003127801.data[chckIndx(h_3003127893, 0, (t_3003127801.data).length - 1)].Field1, key_3003127802))) {
          result_3003127804 = h_3003127893;
          break BeforeRet;
          }
          
          h_3003127893 = nextTry_1828716586(h_3003127893, (t_3003127801.data).length - 1);
        }
    };
    result_3003127804 = subInt(-1, h_3003127893);
  };

  return result_3003127804;

}

function contains_2986414585(s_2986414587, key_2986414588) {
  var result_2986414589 = false;

    var hc_2986414590 = [0];
    var index_2986414604 = rawGet_3003127798(s_2986414587, key_2986414588, hc_2986414590, 0);
    result_2986414589 = (0 <= index_2986414604);

  return result_2986414589;

}

function slotsNeeded_1828716594(count_1828716595) {
  var result_1828716596 = 0;

    result_1828716596 = nextPowerOfTwo_872415437(addInt(divInt(mulInt(count_1828716595, 3), 2), 4));

  return result_1828716596;

}

function mustRehash_3003129064(t_3003129066) {
  var result_3003129067 = false;

    if (!((t_3003129066.counter < (t_3003129066.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003129067 = ((mulInt((t_3003129066.data).length, 2) < mulInt(t_3003129066.counter, 3)) || (subInt((t_3003129066.data).length, t_3003129066.counter) < 4));

  return result_3003129067;

}

function rawGetKnownHC_3003129670(t_3003129673, key_3003129674, hc_3003129675) {
  var result_3003129676 = 0;

  BeforeRet: {
    if (((t_3003129673.data).length == 0)) {
    result_3003129676 = -1;
    break BeforeRet;
    }
    
    var h_3003129761 = (hc_3003129675 & (t_3003129673.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3003129673.data[chckIndx(h_3003129761, 0, (t_3003129673.data).length - 1)].Field0)) break Label2;
          if (((t_3003129673.data[chckIndx(h_3003129761, 0, (t_3003129673.data).length - 1)].Field0 == hc_3003129675) && HEX3DHEX3D_3003124693(t_3003129673.data[chckIndx(h_3003129761, 0, (t_3003129673.data).length - 1)].Field1, key_3003129674))) {
          result_3003129676 = h_3003129761;
          break BeforeRet;
          }
          
          h_3003129761 = nextTry_1828716586(h_3003129761, (t_3003129673.data).length - 1);
        }
    };
    result_3003129676 = subInt(-1, h_3003129761);
  };

  return result_3003129676;

}

function rawInsert_3003130174(s_3003130176, data_3003130177, data_3003130177_Idx, key_3003130178, hc_3003130179, h_3003130180) {
    if (((data_3003130177[data_3003130177_Idx]).length == 0)) {
    var correctSizeHEX60gensym56_3003130263 = slotsNeeded_1828716594(64);
    s_3003130176.counter = 0;
    s_3003130176.data = new Array(chckRange(correctSizeHEX60gensym56_3003130263, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_3003130263, 0, 2147483647) ; ++i) { s_3003130176.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    data_3003130177[data_3003130177_Idx][chckIndx(h_3003130180, 0, (data_3003130177[data_3003130177_Idx]).length - 1)].Field1 = nimCopy(data_3003130177[data_3003130177_Idx][chckIndx(h_3003130180, 0, (data_3003130177[data_3003130177_Idx]).length - 1)].Field1, key_3003130178, NTI3003121692);
    data_3003130177[data_3003130177_Idx][chckIndx(h_3003130180, 0, (data_3003130177[data_3003130177_Idx]).length - 1)].Field0 = hc_3003130179;

  
}

function enlarge_3003129327(s_3003129329) {
    var n_3003129331 = [];
    n_3003129331 = new Array(chckRange(mulInt((s_3003129329.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3003129329.data).length, 2), 0, 2147483647) ; ++i) { n_3003129331[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    var Temporary1 = s_3003129329.data; s_3003129329.data = n_3003129331; n_3003129331 = Temporary1;    Label2: {
      var i_3003129429 = 0;
      var colontmp__2936012953 = 0;
      colontmp__2936012953 = (n_3003129331).length - 1;
      var res_2936012954 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012954 <= colontmp__2936012953)) break Label4;
            i_3003129429 = res_2936012954;
            if (isFilled_1828716583(n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field0)) {
            var j_3003130009 = subInt(-1, rawGetKnownHC_3003129670(s_3003129329, n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field1, n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field0));
            rawInsert_3003130174(s_3003129329, s_3003129329, "data", n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field1, n_3003129331[chckIndx(i_3003129429, 0, (n_3003129331).length - 1)].Field0, j_3003130009);
            }
            
            res_2936012954 = addInt(res_2936012954, 1);
          }
      };
    };

  
}

function incl_3003128948(s_3003128950, key_3003128951) {
    if (((s_3003128950.data).length == 0)) {
    var correctSizeHEX60gensym49_3003129034 = slotsNeeded_1828716594(64);
    s_3003128950.counter = 0;
    s_3003128950.data = new Array(chckRange(correctSizeHEX60gensym49_3003129034, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym49_3003129034, 0, 2147483647) ; ++i) { s_3003128950.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}}; }    }
    
    var hc_3003129049 = [0];
    var index_3003129063 = rawGet_3003127798(s_3003128950, key_3003128951, hc_3003129049, 0);
    if ((index_3003129063 < 0)) {
    if (mustRehash_3003129064(s_3003128950)) {
    enlarge_3003129327(s_3003128950);
    index_3003129063 = rawGetKnownHC_3003129670(s_3003128950, key_3003128951, hc_3003129049[0]);
    }
    
    rawInsert_3003130174(s_3003128950, s_3003128950, "data", key_3003128951, hc_3003129049[0], subInt(-1, index_3003129063));
    s_3003128950.counter = addInt(s_3003128950.counter, 1);
    }
    

  
}

function getOrDefault_2986414816(t_2986414819, key_2986414820) {
  var result_2986414821 = [];

    var hcHEX60gensym462_2986414824 = [0];
    var indexHEX60gensym462_2986414831 = rawGet_3003122103(t_2986414819, key_2986414820, hcHEX60gensym462_2986414824, 0);
    if ((0 <= indexHEX60gensym462_2986414831)) {
    result_2986414821 = nimCopy(null, t_2986414819.data[chckIndx(indexHEX60gensym462_2986414831, 0, (t_2986414819.data).length - 1)].Field2, NTI33554449);
    }
    

  return result_2986414821;

}

function rawGet_2986394079(t_2986394082, key_2986394083, hc_2986394084, hc_2986394084_Idx) {
  var result_2986394085 = 0;

  BeforeRet: {
    hc_2986394084[hc_2986394084_Idx] = hash_1325400236(key_2986394083);
    if ((hc_2986394084[hc_2986394084_Idx] == 0)) {
    hc_2986394084[hc_2986394084_Idx] = 314159265;
    }
    
    if (((t_2986394082.data).length == 0)) {
    result_2986394085 = -1;
    break BeforeRet;
    }
    
    var h_2986394173 = (hc_2986394084[hc_2986394084_Idx] & (t_2986394082.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986394082.data[chckIndx(h_2986394173, 0, (t_2986394082.data).length - 1)].Field0)) break Label2;
          if (((t_2986394082.data[chckIndx(h_2986394173, 0, (t_2986394082.data).length - 1)].Field0 == hc_2986394084[hc_2986394084_Idx]) && (t_2986394082.data[chckIndx(h_2986394173, 0, (t_2986394082.data).length - 1)].Field1 == key_2986394083))) {
          result_2986394085 = h_2986394173;
          break BeforeRet;
          }
          
          h_2986394173 = nextTry_1308622883(h_2986394173, (t_2986394082.data).length - 1);
        }
    };
    result_2986394085 = subInt(-1, h_2986394173);
  };

  return result_2986394085;

}

function hasKey_2986414994(t_2986414997, key_2986414998) {
  var result_2986414999 = false;

    var hc_2986415000 = [0];
    result_2986414999 = (0 <= rawGet_2986394079(t_2986414997, key_2986414998, hc_2986415000, 0));

  return result_2986414999;

}

function contains_2986414988(t_2986414991, key_2986414992) {
  var result_2986414993 = false;

  BeforeRet: {
    result_2986414993 = hasKey_2986414994(t_2986414991, key_2986414992);
    break BeforeRet;
  };

  return result_2986414993;

}

function HEX5BHEX5D_2986415087(t_2986415090, key_2986415091) {
  var result_2986415092 = null;
  var result_2986415092_Idx = 0;

    var hcHEX60gensym22_2986415093 = [0];
    var indexHEX60gensym22_2986415100 = rawGet_2986394079(t_2986415090, key_2986415091, hcHEX60gensym22_2986415093, 0);
    if ((0 <= indexHEX60gensym22_2986415100)) {
    result_2986415092 = t_2986415090.data[chckIndx(indexHEX60gensym22_2986415100, 0, (t_2986415090.data).length - 1)]; result_2986415092_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850841(key_2986415091);
    }
    

  return [result_2986415092, result_2986415092_Idx];

}

function newDoublyLinkedNode_3003133260(value_3003133262) {
  var result_3003133263 = null;

    result_3003133263 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: 0})});
    result_3003133263.value = nimCopy(result_3003133263.value, value_3003133262, NTI3003121716);

  return result_3003133263;

}

function mustRehash_3003133610(t_3003133612) {
  var result_3003133613 = false;

    if (!((t_3003133612.counter < (t_3003133612.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003133613 = ((mulInt((t_3003133612.data).length, 2) < mulInt(t_3003133612.counter, 3)) || (subInt((t_3003133612.data).length, t_3003133612.counter) < 4));

  return result_3003133613;

}

function rawInsert_3003134303(t_3003134307, data_3003134308, data_3003134308_Idx, key_3003134309, val_3003134310, hc_3003134311, h_3003134312) {
    data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field1 = nimCopy(data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field1, key_3003134309, NTI3003121692);
    data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field2 = val_3003134310;
    data_3003134308[data_3003134308_Idx][chckIndx(h_3003134312, 0, (data_3003134308[data_3003134308_Idx]).length - 1)].Field0 = hc_3003134311;

  
}

function enlarge_3003133867(t_3003133870) {
    var n_3003133873 = [];
    n_3003133873 = new Array(chckRange(mulInt((t_3003133870.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003133870.data).length, 2), 0, 2147483647) ; ++i) { n_3003133873[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3003133870.data; t_3003133870.data = n_3003133873; n_3003133873 = Temporary1;    Label2: {
      var i_3003133971 = 0;
      var colontmp__2936012960 = 0;
      colontmp__2936012960 = (n_3003133873).length - 1;
      var res_2936012961 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012961 <= colontmp__2936012960)) break Label4;
            i_3003133971 = res_2936012961;
            var eh_3003134052 = n_3003133873[chckIndx(i_3003133971, 0, (n_3003133873).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003134052)) {
            var j_3003134056 = (eh_3003134052 & (t_3003133870.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003133870.data[chckIndx(j_3003134056, 0, (t_3003133870.data).length - 1)].Field0)) break Label6;
                  j_3003134056 = nextTry_1308622883(j_3003134056, (t_3003133870.data).length - 1);
                }
            };
            rawInsert_3003134303(t_3003133870, t_3003133870, "data", n_3003133873[chckIndx(i_3003133971, 0, (n_3003133873).length - 1)].Field1, n_3003133873[chckIndx(i_3003133971, 0, (n_3003133873).length - 1)].Field2, eh_3003134052, j_3003134056);
            }
            
            res_2936012961 = addInt(res_2936012961, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003134553(t_3003134556, key_3003134557, hc_3003134558) {
  var result_3003134559 = 0;

  BeforeRet: {
    if (((t_3003134556.data).length == 0)) {
    result_3003134559 = -1;
    break BeforeRet;
    }
    
    var h_3003134644 = (hc_3003134558 & (t_3003134556.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003134556.data[chckIndx(h_3003134644, 0, (t_3003134556.data).length - 1)].Field0)) break Label2;
          if (((t_3003134556.data[chckIndx(h_3003134644, 0, (t_3003134556.data).length - 1)].Field0 == hc_3003134558) && HEX3DHEX3D_3003124693(t_3003134556.data[chckIndx(h_3003134644, 0, (t_3003134556.data).length - 1)].Field1, key_3003134557))) {
          result_3003134559 = h_3003134644;
          break BeforeRet;
          }
          
          h_3003134644 = nextTry_1308622883(h_3003134644, (t_3003134556.data).length - 1);
        }
    };
    result_3003134559 = subInt(-1, h_3003134644);
  };

  return result_3003134559;

}

function HEX5BHEX5DHEX3D_3003133342(t_3003133345, key_3003133346, val_3003133347) {
    if (((t_3003133345.data).length == 0)) {
    var correctSizeHEX60gensym77_3003133430 = slotsNeeded_1308622891(32);
    t_3003133345.counter = 0;
    t_3003133345.data = new Array(chckRange(correctSizeHEX60gensym77_3003133430, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym77_3003133430, 0, 2147483647) ; ++i) { t_3003133345.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3003133435 = [0];
    var index_3003133442 = rawGet_3003124349(t_3003133345, key_3003133346, hc_3003133435, 0);
    if ((0 <= index_3003133442)) {
    t_3003133345.data[chckIndx(index_3003133442, 0, (t_3003133345.data).length - 1)].Field2 = val_3003133347;
    }
    else {
      if (((t_3003133345.data).length == 0)) {
      var correctSizeHEX60gensym80_3003133605 = slotsNeeded_1308622891(32);
      t_3003133345.counter = 0;
      t_3003133345.data = new Array(chckRange(correctSizeHEX60gensym80_3003133605, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym80_3003133605, 0, 2147483647) ; ++i) { t_3003133345.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003133610(t_3003133345)) {
      enlarge_3003133867(t_3003133345);
      index_3003133442 = rawGetKnownHC_3003134553(t_3003133345, key_3003133346, hc_3003133435[0]);
      }
      
      index_3003133442 = subInt(-1, index_3003133442);
      rawInsert_3003134303(t_3003133345, t_3003133345, "data", key_3003133346, val_3003133347, hc_3003133435[0], index_3003133442);
      t_3003133345.counter = addInt(t_3003133345.counter, 1);
    }
    

  
}

function prepend_3003134953(L_3003134955, n_3003134956) {
    n_3003134956.prev = null;
    n_3003134956.next = L_3003134955.head;
    if (!((L_3003134955.head == null))) {
    if (!((L_3003134955.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003134955.head.prev = n_3003134956;
    }
    
    L_3003134955.head = n_3003134956;
    if ((L_3003134955.tail == null)) {
    L_3003134955.tail = n_3003134956;
    }
    

  
}

function isEmpty_1828716580(hcode_1828716581) {
  var result_1828716582 = false;

    result_1828716582 = (hcode_1828716581 == 0);

  return result_1828716582;

}

function exclImpl_3003127792(s_3003127794, key_3003127795) {
          var Temporary5;

  var result_3003127796 = false;

  BeforeRet: {
    var hc_3003127797 = [0];
    var i_3003128159 = rawGet_3003127798(s_3003127794, key_3003127795, hc_3003127797, 0);
    var msk_3003128163 = (s_3003127794.data).length - 1;
    result_3003127796 = true;
    if ((0 <= i_3003128159)) {
    result_3003127796 = false;
    s_3003127794.counter = subInt(s_3003127794.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3003128169 = i_3003128159;
          var r_3003128170 = j_3003128169;
          s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field0 = 0;
          s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field1 = nimCopy(s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3003128159 = (addInt(i_3003128159, 1) & msk_3003128163);
                if (isEmpty_1828716580(s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3003128170 = (s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)].Field0 & msk_3003128163);
                if (!(((((r_3003128170 <= i_3003128159) && (j_3003128169 < r_3003128170)) || ((j_3003128169 < r_3003128170) && (i_3003128159 < j_3003128169))) || ((i_3003128159 < j_3003128169) && (r_3003128170 <= i_3003128159))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)];
          s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)] = genericReset(s_3003127794.data[chckIndx(i_3003128159, 0, (s_3003127794.data).length - 1)], NTI3003121772);
          s_3003127794.data[chckIndx(j_3003128169, 0, (s_3003127794.data).length - 1)] = nimCopy(s_3003127794.data[chckIndx(j_3003128169, 0, (s_3003127794.data).length - 1)], Temporary5, NTI3003121772);
        }
    };
    }
    
  };

  return result_3003127796;

}

function excl_3003127777(s_3003127779, key_3003127780) {
    var _ = exclImpl_3003127792(s_3003127779, key_3003127780);

  
}

function len_3003135346(t_3003135349) {
  var result_3003135350 = 0;

    result_3003135350 = t_3003135349.counter;

  return result_3003135350;

}

function len_3003135263(cache_3003135266) {
  var result_3003135267 = 0;

    result_3003135267 = len_3003135346(cache_3003135266.table);

  return result_3003135267;

}

function del_3003135438(t_3003135441, key_3003135442) {
    var hc_3003135443 = [0];
    var i_3003135450 = rawGet_3003124349(t_3003135441, key_3003135442, hc_3003135443, 0);
    var mskHEX60gensym36_3003135454 = (t_3003135441.data).length - 1;
    if ((0 <= i_3003135450)) {
    t_3003135441.counter = subInt(t_3003135441.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003135461 = i_3003135450;
            var rHEX60gensym36_3003135462 = jHEX60gensym36_3003135461;
            t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field0 = 0;
            t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field1 = nimCopy(t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003135450 = (addInt(i_3003135450, 1) & mskHEX60gensym36_3003135454);
                  if (isEmpty_1308622877(t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003135462 = (t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)].Field0 & mskHEX60gensym36_3003135454);
                  if (!(((((rHEX60gensym36_3003135462 <= i_3003135450) && (jHEX60gensym36_3003135461 < rHEX60gensym36_3003135462)) || ((jHEX60gensym36_3003135461 < rHEX60gensym36_3003135462) && (i_3003135450 < jHEX60gensym36_3003135461))) || ((i_3003135450 < jHEX60gensym36_3003135461) && (rHEX60gensym36_3003135462 <= i_3003135450))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003135441.data[chckIndx(jHEX60gensym36_3003135461, 0, (t_3003135441.data).length - 1)] = nimCopy(t_3003135441.data[chckIndx(jHEX60gensym36_3003135461, 0, (t_3003135441.data).length - 1)], t_3003135441.data[chckIndx(i_3003135450, 0, (t_3003135441.data).length - 1)], NTI3003121752);
          }
      };
    };
    }
    

  
}

function remove_3003136197(L_3003136199, n_3003136200) {
    if ((n_3003136200 == L_3003136199.tail)) {
    L_3003136199.tail = n_3003136200.prev;
    }
    
    if ((n_3003136200 == L_3003136199.head)) {
    L_3003136199.head = n_3003136200.next;
    }
    
    if (!((n_3003136200.next == null))) {
    n_3003136200.next.prev = n_3003136200.prev;
    }
    
    if (!((n_3003136200.prev == null))) {
    n_3003136200.prev.next = n_3003136200.next;
    }
    

  
}

function resize_3003135181(cache_3003135184) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003135184.capacity < len_3003135263(cache_3003135184))) break Label2;
          var t_3003135351 = cache_3003135184.list.tail;
          if (cache_3003135184.recordRemovedKeys) {
          incl_3003128948(cache_3003135184.removedKeys, t_3003135351.value.key);
          }
          
          del_3003135438(cache_3003135184.table, t_3003135351.value.key);
          remove_3003136197(cache_3003135184.list, t_3003135351);
        }
    };

  
}

function addNewNode_3003133252(cache_3003133255, key_3003133256, val_3003133257) {
    var node_3003133278 = newDoublyLinkedNode_3003133260({key: nimCopy(null, key_3003133256, NTI3003121692), val: val_3003133257});
    HEX5BHEX5DHEX3D_3003133342(cache_3003133255.table, key_3003133256, node_3003133278);
    prepend_3003134953(cache_3003133255.list, node_3003133278);
    if (cache_3003133255.recordRemovedKeys) {
    excl_3003127777(cache_3003133255.removedKeys, key_3003133256);
    }
    
    resize_3003135181(cache_3003133255);

  
}

function HEX5BHEX5DHEX3D_3003133124(cache_3003133127, key_3003133128, val_3003133129) {
    var node_3003133225 = getOrDefault_3003124339(cache_3003133127.table, key_3003133128, null);
    if ((node_3003133225 == null)) {
    addNewNode_3003133252(cache_3003133127, key_3003133128, val_3003133129);
    }
    else {
      node_3003133225.value.val = val_3003133129;
      remove_3003136197(cache_3003133127.list, node_3003133225);
      prepend_3003134953(cache_3003133127.list, node_3003133225);
    }
    

  
}

function rawGet_3003131853(t_3003131856, key_3003131857, hc_3003131858, hc_3003131858_Idx) {
  var result_3003131859 = 0;

  BeforeRet: {
    hc_3003131858[hc_3003131858_Idx] = hash_3003124356(key_3003131857);
    if ((hc_3003131858[hc_3003131858_Idx] == 0)) {
    hc_3003131858[hc_3003131858_Idx] = 314159265;
    }
    
    if (((t_3003131856.data).length == 0)) {
    result_3003131859 = -1;
    break BeforeRet;
    }
    
    var h_3003131948 = (hc_3003131858[hc_3003131858_Idx] & (t_3003131856.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003131856.data[chckIndx(h_3003131948, 0, (t_3003131856.data).length - 1)].Field0)) break Label2;
          if (((t_3003131856.data[chckIndx(h_3003131948, 0, (t_3003131856.data).length - 1)].Field0 == hc_3003131858[hc_3003131858_Idx]) && HEX3DHEX3D_3003124693(t_3003131856.data[chckIndx(h_3003131948, 0, (t_3003131856.data).length - 1)].Field1, key_3003131857))) {
          result_3003131859 = h_3003131948;
          break BeforeRet;
          }
          
          h_3003131948 = nextTry_1308622883(h_3003131948, (t_3003131856.data).length - 1);
        }
    };
    result_3003131859 = subInt(-1, h_3003131948);
  };

  return result_3003131859;

}

function getOrDefault_3003136801(t_3003136804, key_3003136805, default_3003136806) {
    var Temporary1;

  var result_3003136807 = null;

    var hcHEX60gensym90_3003136810 = [0];
    var indexHEX60gensym90_3003136817 = rawGet_3003131853(t_3003136804, key_3003136805, hcHEX60gensym90_3003136810, 0);
    if ((0 <= indexHEX60gensym90_3003136817)) {
    Temporary1 = t_3003136804.data[chckIndx(indexHEX60gensym90_3003136817, 0, (t_3003136804.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003136806;
    }
    
    result_3003136807 = Temporary1;

  return result_3003136807;

}

function newDoublyLinkedNode_3003136933(value_3003136935) {
  var result_3003136936 = null;

    result_3003136936 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3003136936.value = nimCopy(result_3003136936.value, value_3003136935, NTI3003121795);

  return result_3003136936;

}

function mustRehash_3003137283(t_3003137285) {
  var result_3003137286 = false;

    if (!((t_3003137285.counter < (t_3003137285.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003137286 = ((mulInt((t_3003137285.data).length, 2) < mulInt(t_3003137285.counter, 3)) || (subInt((t_3003137285.data).length, t_3003137285.counter) < 4));

  return result_3003137286;

}

function rawInsert_3003137976(t_3003137980, data_3003137981, data_3003137981_Idx, key_3003137982, val_3003137983, hc_3003137984, h_3003137985) {
    data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field1 = nimCopy(data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field1, key_3003137982, NTI3003121692);
    data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field2 = val_3003137983;
    data_3003137981[data_3003137981_Idx][chckIndx(h_3003137985, 0, (data_3003137981[data_3003137981_Idx]).length - 1)].Field0 = hc_3003137984;

  
}

function enlarge_3003137540(t_3003137543) {
    var n_3003137546 = [];
    n_3003137546 = new Array(chckRange(mulInt((t_3003137543.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003137543.data).length, 2), 0, 2147483647) ; ++i) { n_3003137546[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3003137543.data; t_3003137543.data = n_3003137546; n_3003137546 = Temporary1;    Label2: {
      var i_3003137644 = 0;
      var colontmp__2936012972 = 0;
      colontmp__2936012972 = (n_3003137546).length - 1;
      var res_2936012973 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012973 <= colontmp__2936012972)) break Label4;
            i_3003137644 = res_2936012973;
            var eh_3003137725 = n_3003137546[chckIndx(i_3003137644, 0, (n_3003137546).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003137725)) {
            var j_3003137729 = (eh_3003137725 & (t_3003137543.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003137543.data[chckIndx(j_3003137729, 0, (t_3003137543.data).length - 1)].Field0)) break Label6;
                  j_3003137729 = nextTry_1308622883(j_3003137729, (t_3003137543.data).length - 1);
                }
            };
            rawInsert_3003137976(t_3003137543, t_3003137543, "data", n_3003137546[chckIndx(i_3003137644, 0, (n_3003137546).length - 1)].Field1, n_3003137546[chckIndx(i_3003137644, 0, (n_3003137546).length - 1)].Field2, eh_3003137725, j_3003137729);
            }
            
            res_2936012973 = addInt(res_2936012973, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003138226(t_3003138229, key_3003138230, hc_3003138231) {
  var result_3003138232 = 0;

  BeforeRet: {
    if (((t_3003138229.data).length == 0)) {
    result_3003138232 = -1;
    break BeforeRet;
    }
    
    var h_3003138317 = (hc_3003138231 & (t_3003138229.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003138229.data[chckIndx(h_3003138317, 0, (t_3003138229.data).length - 1)].Field0)) break Label2;
          if (((t_3003138229.data[chckIndx(h_3003138317, 0, (t_3003138229.data).length - 1)].Field0 == hc_3003138231) && HEX3DHEX3D_3003124693(t_3003138229.data[chckIndx(h_3003138317, 0, (t_3003138229.data).length - 1)].Field1, key_3003138230))) {
          result_3003138232 = h_3003138317;
          break BeforeRet;
          }
          
          h_3003138317 = nextTry_1308622883(h_3003138317, (t_3003138229.data).length - 1);
        }
    };
    result_3003138232 = subInt(-1, h_3003138317);
  };

  return result_3003138232;

}

function HEX5BHEX5DHEX3D_3003137015(t_3003137018, key_3003137019, val_3003137020) {
    if (((t_3003137018.data).length == 0)) {
    var correctSizeHEX60gensym93_3003137103 = slotsNeeded_1308622891(32);
    t_3003137018.counter = 0;
    t_3003137018.data = new Array(chckRange(correctSizeHEX60gensym93_3003137103, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym93_3003137103, 0, 2147483647) ; ++i) { t_3003137018.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3003137108 = [0];
    var index_3003137115 = rawGet_3003131853(t_3003137018, key_3003137019, hc_3003137108, 0);
    if ((0 <= index_3003137115)) {
    t_3003137018.data[chckIndx(index_3003137115, 0, (t_3003137018.data).length - 1)].Field2 = val_3003137020;
    }
    else {
      if (((t_3003137018.data).length == 0)) {
      var correctSizeHEX60gensym96_3003137278 = slotsNeeded_1308622891(32);
      t_3003137018.counter = 0;
      t_3003137018.data = new Array(chckRange(correctSizeHEX60gensym96_3003137278, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3003137278, 0, 2147483647) ; ++i) { t_3003137018.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003137283(t_3003137018)) {
      enlarge_3003137540(t_3003137018);
      index_3003137115 = rawGetKnownHC_3003138226(t_3003137018, key_3003137019, hc_3003137108[0]);
      }
      
      index_3003137115 = subInt(-1, index_3003137115);
      rawInsert_3003137976(t_3003137018, t_3003137018, "data", key_3003137019, val_3003137020, hc_3003137108[0], index_3003137115);
      t_3003137018.counter = addInt(t_3003137018.counter, 1);
    }
    

  
}

function prepend_3003132872(L_3003132874, n_3003132875) {
    n_3003132875.prev = null;
    n_3003132875.next = L_3003132874.head;
    if (!((L_3003132874.head == null))) {
    if (!((L_3003132874.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003132874.head.prev = n_3003132875;
    }
    
    L_3003132874.head = n_3003132875;
    if ((L_3003132874.tail == null)) {
    L_3003132874.tail = n_3003132875;
    }
    

  
}

function len_3003138837(t_3003138840) {
  var result_3003138841 = 0;

    result_3003138841 = t_3003138840.counter;

  return result_3003138841;

}

function len_3003138754(cache_3003138757) {
  var result_3003138758 = 0;

    result_3003138758 = len_3003138837(cache_3003138757.table);

  return result_3003138758;

}

function del_3003138929(t_3003138932, key_3003138933) {
    var hc_3003138934 = [0];
    var i_3003138941 = rawGet_3003131853(t_3003138932, key_3003138933, hc_3003138934, 0);
    var mskHEX60gensym36_3003138945 = (t_3003138932.data).length - 1;
    if ((0 <= i_3003138941)) {
    t_3003138932.counter = subInt(t_3003138932.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003138952 = i_3003138941;
            var rHEX60gensym36_3003138953 = jHEX60gensym36_3003138952;
            t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field0 = 0;
            t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field1 = nimCopy(t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003138941 = (addInt(i_3003138941, 1) & mskHEX60gensym36_3003138945);
                  if (isEmpty_1308622877(t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003138953 = (t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)].Field0 & mskHEX60gensym36_3003138945);
                  if (!(((((rHEX60gensym36_3003138953 <= i_3003138941) && (jHEX60gensym36_3003138952 < rHEX60gensym36_3003138953)) || ((jHEX60gensym36_3003138952 < rHEX60gensym36_3003138953) && (i_3003138941 < jHEX60gensym36_3003138952))) || ((i_3003138941 < jHEX60gensym36_3003138952) && (rHEX60gensym36_3003138953 <= i_3003138941))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003138932.data[chckIndx(jHEX60gensym36_3003138952, 0, (t_3003138932.data).length - 1)] = nimCopy(t_3003138932.data[chckIndx(jHEX60gensym36_3003138952, 0, (t_3003138932.data).length - 1)], t_3003138932.data[chckIndx(i_3003138941, 0, (t_3003138932.data).length - 1)], NTI3003121831);
          }
      };
    };
    }
    

  
}

function remove_3003132580(L_3003132582, n_3003132583) {
    if ((n_3003132583 == L_3003132582.tail)) {
    L_3003132582.tail = n_3003132583.prev;
    }
    
    if ((n_3003132583 == L_3003132582.head)) {
    L_3003132582.head = n_3003132583.next;
    }
    
    if (!((n_3003132583.next == null))) {
    n_3003132583.next.prev = n_3003132583.prev;
    }
    
    if (!((n_3003132583.prev == null))) {
    n_3003132583.prev.next = n_3003132583.next;
    }
    

  
}

function resize_3003138672(cache_3003138675) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003138675.capacity < len_3003138754(cache_3003138675))) break Label2;
          var t_3003138842 = cache_3003138675.list.tail;
          if (cache_3003138675.recordRemovedKeys) {
          incl_3003128948(cache_3003138675.removedKeys, t_3003138842.value.key);
          }
          
          del_3003138929(cache_3003138675.table, t_3003138842.value.key);
          remove_3003132580(cache_3003138675.list, t_3003138842);
        }
    };

  
}

function addNewNode_3003136925(cache_3003136928, key_3003136929, val_3003136930) {
    var node_3003136951 = newDoublyLinkedNode_3003136933({key: nimCopy(null, key_3003136929, NTI3003121692), val: nimCopy(null, val_3003136930, NTI3003121688)});
    HEX5BHEX5DHEX3D_3003137015(cache_3003136928.table, key_3003136929, node_3003136951);
    prepend_3003132872(cache_3003136928.list, node_3003136951);
    if (cache_3003136928.recordRemovedKeys) {
    excl_3003127777(cache_3003136928.removedKeys, key_3003136929);
    }
    
    resize_3003138672(cache_3003136928);

  
}

function HEX5BHEX5DHEX3D_3003136706(cache_3003136709, key_3003136710, val_3003136711) {
    var node_3003136898 = getOrDefault_3003136801(cache_3003136709.table, key_3003136710, null);
    if ((node_3003136898 == null)) {
    addNewNode_3003136925(cache_3003136709, key_3003136710, val_3003136711);
    }
    else {
      node_3003136898.value.val = nimCopy(null, val_3003136711, NTI3003121688);
      remove_3003132580(cache_3003136709.list, node_3003136898);
      prepend_3003132872(cache_3003136709.list, node_3003136898);
    }
    

  
}

function markRed_3003136501(graph_3003136502, key_3003136503, fingerprint_3003136504) {
    HEX5BHEX5DHEX3D_3003133124(graph_3003136502.verified, key_3003136503, graph_3003136502.revision);
    HEX5BHEX5DHEX3D_3003133124(graph_3003136502.changed, key_3003136503, graph_3003136502.revision);
    HEX5BHEX5DHEX3D_3003136706(graph_3003136502.fingerprints, key_3003136503, fingerprint_3003136504);

  
}

function rawGet_3003125214(t_3003125217, key_3003125218, hc_3003125219, hc_3003125219_Idx) {
  var result_3003125220 = 0;

  BeforeRet: {
    hc_3003125219[hc_3003125219_Idx] = hash_3003124356(key_3003125218);
    if ((hc_3003125219[hc_3003125219_Idx] == 0)) {
    hc_3003125219[hc_3003125219_Idx] = 314159265;
    }
    
    if (((t_3003125217.data).length == 0)) {
    result_3003125220 = -1;
    break BeforeRet;
    }
    
    var h_3003125309 = (hc_3003125219[hc_3003125219_Idx] & (t_3003125217.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003125217.data[chckIndx(h_3003125309, 0, (t_3003125217.data).length - 1)].Field0)) break Label2;
          if (((t_3003125217.data[chckIndx(h_3003125309, 0, (t_3003125217.data).length - 1)].Field0 == hc_3003125219[hc_3003125219_Idx]) && HEX3DHEX3D_3003124693(t_3003125217.data[chckIndx(h_3003125309, 0, (t_3003125217.data).length - 1)].Field1, key_3003125218))) {
          result_3003125220 = h_3003125309;
          break BeforeRet;
          }
          
          h_3003125309 = nextTry_1308622883(h_3003125309, (t_3003125217.data).length - 1);
        }
    };
    result_3003125220 = subInt(-1, h_3003125309);
  };

  return result_3003125220;

}

function getOrDefault_3003125204(t_3003125207, key_3003125208, default_3003125209) {
    var Temporary1;

  var result_3003125210 = null;

    var hcHEX60gensym28_3003125213 = [0];
    var indexHEX60gensym28_3003125566 = rawGet_3003125214(t_3003125207, key_3003125208, hcHEX60gensym28_3003125213, 0);
    if ((0 <= indexHEX60gensym28_3003125566)) {
    Temporary1 = t_3003125207.data[chckIndx(indexHEX60gensym28_3003125566, 0, (t_3003125207.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3003125209;
    }
    
    result_3003125210 = Temporary1;

  return result_3003125210;

}

function newDoublyLinkedNode_3003125883(value_3003125885) {
  var result_3003125886 = null;

    result_3003125886 = ({next: null, prev: null, value: ({key: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, val: []})});
    result_3003125886.value = nimCopy(result_3003125886.value, value_3003125885, NTI3003121862);

  return result_3003125886;

}

function mustRehash_3003126233(t_3003126235) {
  var result_3003126236 = false;

    if (!((t_3003126235.counter < (t_3003126235.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003126236 = ((mulInt((t_3003126235.data).length, 2) < mulInt(t_3003126235.counter, 3)) || (subInt((t_3003126235.data).length, t_3003126235.counter) < 4));

  return result_3003126236;

}

function rawInsert_3003126926(t_3003126930, data_3003126931, data_3003126931_Idx, key_3003126932, val_3003126933, hc_3003126934, h_3003126935) {
    data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field1 = nimCopy(data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field1, key_3003126932, NTI3003121692);
    data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field2 = val_3003126933;
    data_3003126931[data_3003126931_Idx][chckIndx(h_3003126935, 0, (data_3003126931[data_3003126931_Idx]).length - 1)].Field0 = hc_3003126934;

  
}

function enlarge_3003126490(t_3003126493) {
    var n_3003126496 = [];
    n_3003126496 = new Array(chckRange(mulInt((t_3003126493.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003126493.data).length, 2), 0, 2147483647) ; ++i) { n_3003126496[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    var Temporary1 = t_3003126493.data; t_3003126493.data = n_3003126496; n_3003126496 = Temporary1;    Label2: {
      var i_3003126594 = 0;
      var colontmp__2936012982 = 0;
      colontmp__2936012982 = (n_3003126496).length - 1;
      var res_2936012983 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936012983 <= colontmp__2936012982)) break Label4;
            i_3003126594 = res_2936012983;
            var eh_3003126675 = n_3003126496[chckIndx(i_3003126594, 0, (n_3003126496).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003126675)) {
            var j_3003126679 = (eh_3003126675 & (t_3003126493.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003126493.data[chckIndx(j_3003126679, 0, (t_3003126493.data).length - 1)].Field0)) break Label6;
                  j_3003126679 = nextTry_1308622883(j_3003126679, (t_3003126493.data).length - 1);
                }
            };
            rawInsert_3003126926(t_3003126493, t_3003126493, "data", n_3003126496[chckIndx(i_3003126594, 0, (n_3003126496).length - 1)].Field1, n_3003126496[chckIndx(i_3003126594, 0, (n_3003126496).length - 1)].Field2, eh_3003126675, j_3003126679);
            }
            
            res_2936012983 = addInt(res_2936012983, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003127176(t_3003127179, key_3003127180, hc_3003127181) {
  var result_3003127182 = 0;

  BeforeRet: {
    if (((t_3003127179.data).length == 0)) {
    result_3003127182 = -1;
    break BeforeRet;
    }
    
    var h_3003127267 = (hc_3003127181 & (t_3003127179.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003127179.data[chckIndx(h_3003127267, 0, (t_3003127179.data).length - 1)].Field0)) break Label2;
          if (((t_3003127179.data[chckIndx(h_3003127267, 0, (t_3003127179.data).length - 1)].Field0 == hc_3003127181) && HEX3DHEX3D_3003124693(t_3003127179.data[chckIndx(h_3003127267, 0, (t_3003127179.data).length - 1)].Field1, key_3003127180))) {
          result_3003127182 = h_3003127267;
          break BeforeRet;
          }
          
          h_3003127267 = nextTry_1308622883(h_3003127267, (t_3003127179.data).length - 1);
        }
    };
    result_3003127182 = subInt(-1, h_3003127267);
  };

  return result_3003127182;

}

function HEX5BHEX5DHEX3D_3003125965(t_3003125968, key_3003125969, val_3003125970) {
    if (((t_3003125968.data).length == 0)) {
    var correctSizeHEX60gensym34_3003126053 = slotsNeeded_1308622891(32);
    t_3003125968.counter = 0;
    t_3003125968.data = new Array(chckRange(correctSizeHEX60gensym34_3003126053, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym34_3003126053, 0, 2147483647) ; ++i) { t_3003125968.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }    }
    
    var hc_3003126058 = [0];
    var index_3003126065 = rawGet_3003125214(t_3003125968, key_3003125969, hc_3003126058, 0);
    if ((0 <= index_3003126065)) {
    t_3003125968.data[chckIndx(index_3003126065, 0, (t_3003125968.data).length - 1)].Field2 = val_3003125970;
    }
    else {
      if (((t_3003125968.data).length == 0)) {
      var correctSizeHEX60gensym37_3003126228 = slotsNeeded_1308622891(32);
      t_3003125968.counter = 0;
      t_3003125968.data = new Array(chckRange(correctSizeHEX60gensym37_3003126228, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_3003126228, 0, 2147483647) ; ++i) { t_3003125968.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_3003126233(t_3003125968)) {
      enlarge_3003126490(t_3003125968);
      index_3003126065 = rawGetKnownHC_3003127176(t_3003125968, key_3003125969, hc_3003126058[0]);
      }
      
      index_3003126065 = subInt(-1, index_3003126065);
      rawInsert_3003126926(t_3003125968, t_3003125968, "data", key_3003125969, val_3003125970, hc_3003126058[0], index_3003126065);
      t_3003125968.counter = addInt(t_3003125968.counter, 1);
    }
    

  
}

function prepend_3003127576(L_3003127578, n_3003127579) {
    n_3003127579.prev = null;
    n_3003127579.next = L_3003127578.head;
    if (!((L_3003127578.head == null))) {
    if (!((L_3003127578.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3003127578.head.prev = n_3003127579;
    }
    
    L_3003127578.head = n_3003127579;
    if ((L_3003127578.tail == null)) {
    L_3003127578.tail = n_3003127579;
    }
    

  
}

function len_3003128923(t_3003128926) {
  var result_3003128927 = 0;

    result_3003128927 = t_3003128926.counter;

  return result_3003128927;

}

function len_3003128840(cache_3003128843) {
  var result_3003128844 = 0;

    result_3003128844 = len_3003128923(cache_3003128843.table);

  return result_3003128844;

}

function del_3003130530(t_3003130533, key_3003130534) {
    var hc_3003130535 = [0];
    var i_3003130542 = rawGet_3003125214(t_3003130533, key_3003130534, hc_3003130535, 0);
    var mskHEX60gensym36_3003130546 = (t_3003130533.data).length - 1;
    if ((0 <= i_3003130542)) {
    t_3003130533.counter = subInt(t_3003130533.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3003130553 = i_3003130542;
            var rHEX60gensym36_3003130554 = jHEX60gensym36_3003130553;
            t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field0 = 0;
            t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field1 = nimCopy(t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3003130542 = (addInt(i_3003130542, 1) & mskHEX60gensym36_3003130546);
                  if (isEmpty_1308622877(t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3003130554 = (t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)].Field0 & mskHEX60gensym36_3003130546);
                  if (!(((((rHEX60gensym36_3003130554 <= i_3003130542) && (jHEX60gensym36_3003130553 < rHEX60gensym36_3003130554)) || ((jHEX60gensym36_3003130553 < rHEX60gensym36_3003130554) && (i_3003130542 < jHEX60gensym36_3003130553))) || ((i_3003130542 < jHEX60gensym36_3003130553) && (rHEX60gensym36_3003130554 <= i_3003130542))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3003130533.data[chckIndx(jHEX60gensym36_3003130553, 0, (t_3003130533.data).length - 1)] = nimCopy(t_3003130533.data[chckIndx(jHEX60gensym36_3003130553, 0, (t_3003130533.data).length - 1)], t_3003130533.data[chckIndx(i_3003130542, 0, (t_3003130533.data).length - 1)], NTI3003121898);
          }
      };
    };
    }
    

  
}

function remove_3003131289(L_3003131291, n_3003131292) {
    if ((n_3003131292 == L_3003131291.tail)) {
    L_3003131291.tail = n_3003131292.prev;
    }
    
    if ((n_3003131292 == L_3003131291.head)) {
    L_3003131291.head = n_3003131292.next;
    }
    
    if (!((n_3003131292.next == null))) {
    n_3003131292.next.prev = n_3003131292.prev;
    }
    
    if (!((n_3003131292.prev == null))) {
    n_3003131292.prev.next = n_3003131292.next;
    }
    

  
}

function resize_3003128758(cache_3003128761) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3003128761.capacity < len_3003128840(cache_3003128761))) break Label2;
          var t_3003128928 = cache_3003128761.list.tail;
          if (cache_3003128761.recordRemovedKeys) {
          incl_3003128948(cache_3003128761.removedKeys, t_3003128928.value.key);
          }
          
          del_3003130530(cache_3003128761.table, t_3003128928.value.key);
          remove_3003131289(cache_3003128761.list, t_3003128928);
        }
    };

  
}

function addNewNode_3003125875(cache_3003125878, key_3003125879, val_3003125880) {
    var node_3003125901 = newDoublyLinkedNode_3003125883({key: nimCopy(null, key_3003125879, NTI3003121692), val: nimCopy(null, val_3003125880, NTI3003121848)});
    HEX5BHEX5DHEX3D_3003125965(cache_3003125878.table, key_3003125879, node_3003125901);
    prepend_3003127576(cache_3003125878.list, node_3003125901);
    if (cache_3003125878.recordRemovedKeys) {
    excl_3003127777(cache_3003125878.removedKeys, key_3003125879);
    }
    
    resize_3003128758(cache_3003125878);

  
}

function HEX5BHEX5DHEX3D_3003125747(cache_3003125750, key_3003125751, val_3003125752) {
    var node_3003125848 = getOrDefault_3003125204(cache_3003125750.table, key_3003125751, null);
    if ((node_3003125848 == null)) {
    addNewNode_3003125875(cache_3003125750, key_3003125751, val_3003125752);
    }
    else {
      node_3003125848.value.val = nimCopy(null, val_3003125752, NTI3003121848);
      remove_3003131289(cache_3003125750.list, node_3003125848);
      prepend_3003127576(cache_3003125750.list, node_3003125848);
    }
    

  
}

function clearEdges_3003125677(graph_3003125678, key_3003125679) {
    HEX5BHEX5DHEX3D_3003125747(graph_3003125678.dependencies, key_3003125679, []);

  
}

function setDependencies_3003131593(graph_3003131594, key_3003131595, deps_3003131596) {
    HEX5BHEX5DHEX3D_3003125747(graph_3003131594.dependencies, key_3003131595, deps_3003131596);

  
}

function pop_2986415233(s_2986415235, s_2986415235_Idx) {
  var result_2986415236 = [];

    var L_2986415240 = subInt((s_2986415235[s_2986415235_Idx]).length, 1);
    result_2986415236 = nimCopy(null, s_2986415235[s_2986415235_Idx][chckIndx(L_2986415240, 0, (s_2986415235[s_2986415235_Idx]).length - 1)], NTI2986344476);
    if (s_2986415235[s_2986415235_Idx].length < chckRange(L_2986415240, 0, 2147483647)) { for (var i = s_2986415235[s_2986415235_Idx].length ; i < chckRange(L_2986415240, 0, 2147483647) ; ++i) s_2986415235[s_2986415235_Idx].push([]); }
               else { s_2986415235[s_2986415235_Idx].length = chckRange(L_2986415240, 0, 2147483647); };

  return result_2986415236;

}

function pop_2986415264(s_2986415266, s_2986415266_Idx) {
  var result_2986415267 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};

    var L_2986415271 = subInt((s_2986415266[s_2986415266_Idx]).length, 1);
    result_2986415267 = nimCopy(result_2986415267, s_2986415266[s_2986415266_Idx][chckIndx(L_2986415271, 0, (s_2986415266[s_2986415266_Idx]).length - 1)], NTI3003121692);
    if (s_2986415266[s_2986415266_Idx].length < chckRange(L_2986415271, 0, 2147483647)) { for (var i = s_2986415266[s_2986415266_Idx].length ; i < chckRange(L_2986415271, 0, 2147483647) ; ++i) s_2986415266[s_2986415266_Idx].push({Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}); }
               else { s_2986415266[s_2986415266_Idx].length = chckRange(L_2986415271, 0, 2147483647); };

  return result_2986415267;

}

function hasKey_3003131846(t_3003131849, key_3003131850) {
  var result_3003131851 = false;

    var hc_3003131852 = [0];
    result_3003131851 = (0 <= rawGet_3003131853(t_3003131849, key_3003131850, hc_3003131852, 0));

  return result_3003131851;

}

function contains_3003131840(t_3003131843, key_3003131844) {
  var result_3003131845 = false;

  BeforeRet: {
    result_3003131845 = hasKey_3003131846(t_3003131843, key_3003131844);
    break BeforeRet;
  };

  return result_3003131845;

}

function contains_3003131746(cache_3003131749, key_3003131750) {
  var result_3003131751 = false;

    result_3003131751 = contains_3003131840(cache_3003131749.table, key_3003131750);

  return result_3003131751;

}

function HEX5BHEX5D_3003132371(t_3003132374, key_3003132375) {
  var result_3003132376 = null;
  var result_3003132376_Idx = 0;

    var hcHEX60gensym22_3003132377 = [0];
    var indexHEX60gensym22_3003132384 = rawGet_3003131853(t_3003132374, key_3003132375, hcHEX60gensym22_3003132377, 0);
    if ((0 <= indexHEX60gensym22_3003132384)) {
    result_3003132376 = t_3003132374.data[chckIndx(indexHEX60gensym22_3003132384, 0, (t_3003132374.data).length - 1)]; result_3003132376_Idx = "Field2";
    }
    else {
    raiseKeyError_3003132465(key_3003132375);
    }
    

  return [result_3003132376, result_3003132376_Idx];

}

function HEX5BHEX5D_3003132285(cache_3003132288, key_3003132289) {
    var Temporary1;

  var result_3003132290 = [];

    var node_3003132566 = (Temporary1 = HEX5BHEX5D_3003132371(cache_3003132288.table, key_3003132289), Temporary1)[0][Temporary1[1]];
    result_3003132290 = nimCopy(null, node_3003132566.value.val, NTI3003121688);
    remove_3003132580(cache_3003132288.list, node_3003132566);
    prepend_3003132872(cache_3003132288.list, node_3003132566);

  return result_3003132290;

}

function fingerprint_3003131666(graph_3003131667, key_3003131668) {
  var result_3003131669 = [];

  BeforeRet: {
    if (contains_3003131746(graph_3003131667.fingerprints, key_3003131668)) {
    result_3003131669 = nimCopy(null, HEX5BHEX5D_3003132285(graph_3003131667.fingerprints, key_3003131668), NTI3003121688);
    break BeforeRet;
    }
    
  };

  return result_3003131669;

}

function HEX3DHEX3D_2986415277(x_2986415279, y_2986415280) {
  var result_2986415281 = false;

  BeforeRet: {
    var sameObject_2986415288 = false;
    sameObject_2986415288 = x_2986415279 === y_2986415280
    if (sameObject_2986415288) {
    result_2986415281 = true;
    break BeforeRet;
    }
    
    if (!(((x_2986415279).length == (y_2986415280).length))) {
    result_2986415281 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_2986415302 = 0;
      var colontmp__2936012990 = 0;
      colontmp__2936012990 = subInt((x_2986415279).length, 1);
      var res_2936012991 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936012991 <= colontmp__2936012990)) break Label3;
            i_2986415302 = res_2936012991;
            if (!((x_2986415279[chckIndx(i_2986415302, 0, (x_2986415279).length - 1)] == y_2986415280[chckIndx(i_2986415302, 0, (y_2986415280).length - 1)]))) {
            result_2986415281 = false;
            break BeforeRet;
            }
            
            res_2936012991 = addInt(res_2936012991, 1);
          }
      };
    };
    result_2986415281 = true;
    break BeforeRet;
  };

  return result_2986415281;

}

function markGreen_3003133058(graph_3003133059, key_3003133060) {
    HEX5BHEX5DHEX3D_3003133124(graph_3003133059.verified, key_3003133060, graph_3003133059.revision);

  
}

function force_2986414319(ctxHEX60gensym88_2986414320, keyHEX60gensym88_2986414321) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
    var Temporary10;

  BeforeRet: {
    if (ctxHEX60gensym88_2986414320.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary1);
    try {
    if (ctxHEX60gensym88_2986414320.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [102,111,114,99,101,32], (Temporary3 = HEX5BHEX5D_2986414412(ctxHEX60gensym88_2986414320.depGraph.queryNames, keyHEX60gensym88_2986414321.Field1), Temporary3)[0][Temporary3[1]], HEX24_3003121876(keyHEX60gensym88_2986414321.Field0));
    }
    
    if (contains_2986414585(ctxHEX60gensym88_2986414320.activeQuerySet, keyHEX60gensym88_2986414321)) {
    incl_3003128948(ctxHEX60gensym88_2986414320.recursiveQueries, keyHEX60gensym88_2986414321);
    var itemHEX60gensym88_2986414628 = nimCopy(null, keyHEX60gensym88_2986414321.Field0, NTI3003121689);
    var queryHEX60gensym88_2986414714 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2986414412(ctxHEX60gensym88_2986414320.depGraph.queryNames, keyHEX60gensym88_2986414321.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3003121876(itemHEX60gensym88_2986414628), [32,40], queryHEX60gensym88_2986414714, [41]);
    Label5: {
      var kHEX60gensym88_2986414722 = 0;
      var colontmp__2936012948 = 0;
      colontmp__2936012948 = (ctxHEX60gensym88_2986414320.activeQueryStack).length - 1;
      var res_2936012949 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2936012949 <= colontmp__2936012948)) break Label7;
            kHEX60gensym88_2986414722 = res_2936012949;
            var iHEX60gensym88_2986414726 = subInt(subInt((ctxHEX60gensym88_2986414320.activeQueryStack).length, kHEX60gensym88_2986414722), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,102,111,114,99,101,93,32,91], HEX24_369098760(kHEX60gensym88_2986414722), [93,32,80,97,114,101,110,116,58,32], HEX24_3003121876(ctxHEX60gensym88_2986414320.activeQueryStack[chckIndx(iHEX60gensym88_2986414726, 0, (ctxHEX60gensym88_2986414320.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2986414816(ctxHEX60gensym88_2986414320.depGraph.queryNames, ctxHEX60gensym88_2986414320.activeQueryStack[chckIndx(iHEX60gensym88_2986414726, 0, (ctxHEX60gensym88_2986414320.activeQueryStack).length - 1)].Field1));
            res_2936012949 = addInt(res_2936012949, 1);
          }
      };
    };
    if (ctxHEX60gensym88_2986414320.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2986414988(ctxHEX60gensym88_2986414320.recoveryFunctions, keyHEX60gensym88_2986414321.Field1)) {
    (Temporary8 = HEX5BHEX5D_2986415087(ctxHEX60gensym88_2986414320.recoveryFunctions, keyHEX60gensym88_2986414321.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym88_2986414321);
    markRed_3003136501(ctxHEX60gensym88_2986414320.depGraph, keyHEX60gensym88_2986414321, []);
    }
    
    break BeforeRet;
    }
    
    incl_3003128948(ctxHEX60gensym88_2986414320.activeQuerySet, keyHEX60gensym88_2986414321);
    var Temporary9 = nimCopy(null, keyHEX60gensym88_2986414321, NTI3003121692);
    ctxHEX60gensym88_2986414320.activeQueryStack.push(Temporary9);;
    clearEdges_3003125677(ctxHEX60gensym88_2986414320.depGraph, keyHEX60gensym88_2986414321);
    ctxHEX60gensym88_2986414320.dependencyStack.push([]);;
    recordDependency_2986397948(ctxHEX60gensym88_2986414320, keyHEX60gensym88_2986414321.Field0, -1);
    var fingerprintHEX60gensym88_2986415232 = ctxHEX60gensym88_2986414320.updateFunctions[chckIndx(keyHEX60gensym88_2986414321.Field1, 0, (ctxHEX60gensym88_2986414320.updateFunctions).length - 1)](keyHEX60gensym88_2986414321.Field0);
    setDependencies_3003131593(ctxHEX60gensym88_2986414320.depGraph, keyHEX60gensym88_2986414321, pop_2986415233(ctxHEX60gensym88_2986414320, "dependencyStack"));
    excl_3003127777(ctxHEX60gensym88_2986414320.activeQuerySet, keyHEX60gensym88_2986414321);
    var _ = pop_2986415264(ctxHEX60gensym88_2986414320, "activeQueryStack");
    var prevFingerprintHEX60gensym88_2986415276 = fingerprint_3003131666(ctxHEX60gensym88_2986414320.depGraph, keyHEX60gensym88_2986414321);
    if (HEX3DHEX3D_2986415277(fingerprintHEX60gensym88_2986415232, prevFingerprintHEX60gensym88_2986415276)) {
    if (ctxHEX60gensym88_2986414320.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3003133058(ctxHEX60gensym88_2986414320.depGraph, keyHEX60gensym88_2986414321);
    }
    else {
      if (ctxHEX60gensym88_2986414320.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [109,97,114,107,32,114,101,100]);
      }
      
      markRed_3003136501(ctxHEX60gensym88_2986414320.depGraph, keyHEX60gensym88_2986414321, fingerprintHEX60gensym88_2986415232);
    }
    
    } finally {
    if (ctxHEX60gensym88_2986414320.enableLogging) {
    Temporary10 = 1;
    }
    else {
    Temporary10 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary10);
    }
  };

  
}

function addQuoted_3070231011(s_3070231013, s_3070231013_Idx, x_3070231014) {
    s_3070231013[s_3070231013_Idx].push.apply(s_3070231013[s_3070231013_Idx], HEX24_3070230964(x_3070231014));;

  
}

function collectionToString_3070230971(x_3070230973, prefix_3070230974, separator_3070230975, suffix_3070230976) {
  var result_3070230977 = [[]];

    result_3070230977[0] = nimCopy(null, prefix_3070230974, NTI33554449);
    var firstElement_3070230978 = true;
    Label1: {
      var value_3070231001 = null;
      var i_2936012995 = 0;
      var L_2936012996 = (x_3070230973).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936012995 < L_2936012996)) break Label3;
            value_3070231001 = x_3070230973[i_2936012995];
            if (firstElement_3070230978) {
            firstElement_3070230978 = false;
            }
            else {
            result_3070230977[0].push.apply(result_3070230977[0], separator_3070230975);;
            }
            
            if ((value_3070231001 == null)) {
            result_3070230977[0].push.apply(result_3070230977[0], [110,105,108]);;
            }
            else {
            addQuoted_3070231011(result_3070230977, 0, value_3070231001);
            }
            
            i_2936012995 += 1;
            if (!(((x_3070230973).length == L_2936012996))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3070230977[0].push.apply(result_3070230977[0], suffix_3070230976);;

  return result_3070230977[0];

}

function HEX24_3070230967(x_3070230969) {
  var result_3070230970 = [];

    result_3070230970 = nimCopy(null, collectionToString_3070230971(x_3070230969, [64,91], [44,32], [93]), NTI33554449);

  return result_3070230970;

}

function formatValue_2801798693(result_2801798695, result_2801798695_Idx, value_2801798696, specifier_2801798697) {
    formatValue_721420459(result_2801798695, result_2801798695_Idx, nimBoolToStr(value_2801798696), specifier_2801798697);

  
}

function HEX24_3070230964(typ_3070230965) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3070230966 = [];

  BeforeRet: {
    switch (typ_3070230965.kind) {
    case 0:
      result_3070230966 = nimCopy(null, [101,114,114,111,114], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3070230966 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      result_3070230966 = nimCopy(null, [115,116,114,105,110,103], NTI33554449);
      break BeforeRet;
      break;
    case 3:
      result_3070230966 = nimCopy(null, [105,110,116], NTI33554449);
      break BeforeRet;
      break;
    case 4:
      var Temporary1 = typ_3070230965;
      if (ConstSet60[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230531)); }
      var Temporary2 = typ_3070230965;
      if (ConstSet61[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230531)); }
      result_3070230966 = nimCopy(null, (HEX24_3070230967(Temporary1.paramTypes) || []).concat([32,45,62,32] || [],HEX24_3070230964(Temporary2.returnType) || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      result_3070230966 = nimCopy(null, [116,121,112,101], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var fmtRes_3070231030 = [mnewString(0)];
      fmtRes_3070231030[0].push.apply(fmtRes_3070231030[0], [97,110,121,40]);;
      var Temporary3 = typ_3070230965;
      if (ConstSet62[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
      formatValue_2801798693(fmtRes_3070231030, 0, Temporary3.open, []);
      fmtRes_3070231030[0].push.apply(fmtRes_3070231030[0], [41]);;
      result_3070230966 = nimCopy(null, fmtRes_3070231030[0], NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3070230966;

}

function raiseKeyError_2986417348(key_2986417350) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_2969569239(key_2986417350) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986417254(t_2986417257, key_2986417258) {
  var result_2986417259 = null;
  var result_2986417259_Idx = 0;

    var hcHEX60gensym22_2986417260 = [0];
    var indexHEX60gensym22_2986417267 = rawGet_2986346825(t_2986417257, key_2986417258, hcHEX60gensym22_2986417260, 0);
    if ((0 <= indexHEX60gensym22_2986417267)) {
    result_2986417259 = t_2986417257.data[chckIndx(indexHEX60gensym22_2986417267, 0, (t_2986417257.data).length - 1)]; result_2986417259_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417348(key_2986417258);
    }
    

  return [result_2986417259, result_2986417259_Idx];

}

function remove_2986352711(L_2986352713, n_2986352714) {
    if ((n_2986352714 == L_2986352713.tail)) {
    L_2986352713.tail = n_2986352714.prev;
    }
    
    if ((n_2986352714 == L_2986352713.head)) {
    L_2986352713.head = n_2986352714.next;
    }
    
    if (!((n_2986352714.next == null))) {
    n_2986352714.next.prev = n_2986352714.prev;
    }
    
    if (!((n_2986352714.prev == null))) {
    n_2986352714.prev.next = n_2986352714.next;
    }
    

  
}

function prepend_2986349001(L_2986349003, n_2986349004) {
    n_2986349004.prev = null;
    n_2986349004.next = L_2986349003.head;
    if (!((L_2986349003.head == null))) {
    if (!((L_2986349003.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986349003.head.prev = n_2986349004;
    }
    
    L_2986349003.head = n_2986349004;
    if ((L_2986349003.tail == null)) {
    L_2986349003.tail = n_2986349004;
    }
    

  
}

function HEX5BHEX5D_2986417168(cache_2986417171, key_2986417172) {
    var Temporary1;

  var result_2986417173 = null;

    var node_2986417361 = (Temporary1 = HEX5BHEX5D_2986417254(cache_2986417171.table, key_2986417172), Temporary1)[0][Temporary1[1]];
    result_2986417173 = node_2986417361.value.val;
    remove_2986352711(cache_2986417171.list, node_2986417361);
    prepend_2986349001(cache_2986417171.list, node_2986417361);

  return result_2986417173;

}

function addQuoted_2986415526(s_2986415528, s_2986415528_Idx, x_2986415529) {
    s_2986415528[s_2986415528_Idx].push.apply(s_2986415528[s_2986415528_Idx], HEX24_3003132512(x_2986415529));;

  
}

function collectionToString_2986415493(x_2986415495, prefix_2986415496, separator_2986415497, suffix_2986415498) {
  var result_2986415499 = [[]];

    result_2986415499[0] = nimCopy(null, prefix_2986415496, NTI33554449);
    var firstElement_2986415500 = true;
    Label1: {
      var value_2986415522 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var i_2936013011 = 0;
      var L_2936013012 = (x_2986415495).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013011 < L_2936013012)) break Label3;
            value_2986415522 = x_2986415495[i_2936013011];
            if (firstElement_2986415500) {
            firstElement_2986415500 = false;
            }
            else {
            result_2986415499[0].push.apply(result_2986415499[0], separator_2986415497);;
            }
            
            addQuoted_2986415526(result_2986415499, 0, value_2986415522);
            i_2936013011 += 1;
            if (!(((x_2986415495).length == L_2936013012))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2986415499[0].push.apply(result_2986415499[0], suffix_2986415498);;

  return result_2986415499[0];

}

function HEX24_2986415489(x_2986415491) {
  var result_2986415492 = [];

    result_2986415492 = nimCopy(null, collectionToString_2986415493(x_2986415491, [64,91], [44,32], [93]), NTI33554449);

  return result_2986415492;

}

function getOrDefault_3003125108(cache_3003125111, key_3003125112, val_3003125113) {
  var result_3003125114 = [];

    var node_3003125656 = getOrDefault_3003125204(cache_3003125111.table, key_3003125112, null);
    if ((node_3003125656 == null)) {
    result_3003125114 = nimCopy(null, val_3003125113, NTI3003121848);
    }
    else {
      result_3003125114 = nimCopy(null, node_3003125656.value.val, NTI3003121848);
    }
    

  return result_3003125114;

}

function getDependencies_3003125011(graph_3003125012, key_3003125013) {
  var result_3003125014 = [];

    result_3003125014 = nimCopy(null, getOrDefault_3003125108(graph_3003125012.dependencies, key_3003125013, []), NTI3003121848);
    if ((((result_3003125014).length == 0) && !((key_3003125013.Field1 == -1)))) {
    result_3003125014.push({Field0: nimCopy(null, key_3003125013.Field0, NTI3003121689), Field1: -1});;
    }
    

  return result_3003125014;

}

function tryMarkGreen_2986415334(ctxHEX60gensym89_2986415335, keyHEX60gensym89_2986415336, tryForceHEX60gensym89_2986415337) {
    var Temporary1;
    var Temporary3;
    var Temporary4;
    var Temporary8;
                var Temporary15;
                var Temporary16;
                var Temporary17;
                  var Temporary18;
                  var Temporary19;
                  var Temporary20;
                  var Temporary21;
    var Temporary22;

  var result_2986415338 = 0;

  BeforeRet: {
    if (ctxHEX60gensym89_2986415335.enableLogging) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary1);
    try {
    if (ctxHEX60gensym89_2986415335.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [116,114,121,77,97,114,107,71,114,101,101,110,32], ((Temporary3 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, keyHEX60gensym89_2986415336.Field1), Temporary3)[0][Temporary3[1]] || []).concat([58] || [],HEX24_3003121876(keyHEX60gensym89_2986415336.Field0) || []), [44,32,100,101,112,115,58,32], HEX24_2986415489(getDependencies_3003125011(ctxHEX60gensym89_2986415335.depGraph, keyHEX60gensym89_2986415336)));
    }
    
    if (contains_2986414585(ctxHEX60gensym89_2986415335.activeQuerySet, keyHEX60gensym89_2986415336)) {
    incl_3003128948(ctxHEX60gensym89_2986415335.recursiveQueries, keyHEX60gensym89_2986415336);
    var itemHEX60gensym89_2986415638 = nimCopy(null, keyHEX60gensym89_2986415336.Field0, NTI3003121689);
    var queryHEX60gensym89_2986415724 = nimCopy(null, (Temporary4 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, keyHEX60gensym89_2986415336.Field1), Temporary4)[0][Temporary4[1]], NTI33554449);
    rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,68,101,116,101,99,116,101,100,32,114,101,99,117,114,115,105,111,110,32,97,116,32], HEX24_3003121876(itemHEX60gensym89_2986415638), [32,40], queryHEX60gensym89_2986415724, [41]);
    Label5: {
      var kHEX60gensym89_2986415732 = 0;
      var colontmp__2936012999 = 0;
      colontmp__2936012999 = (ctxHEX60gensym89_2986415335.activeQueryStack).length - 1;
      var res_2936013000 = 0;
      Label6: {
          Label7: while (true) {
          if (!(res_2936013000 <= colontmp__2936012999)) break Label7;
            kHEX60gensym89_2986415732 = res_2936013000;
            var iHEX60gensym89_2986415736 = subInt(subInt((ctxHEX60gensym89_2986415335.activeQueryStack).length, kHEX60gensym89_2986415732), 1);
            rawEcho([91,113,117,101,114,121,95,115,121,115,116,101,109,58,116,114,121,77,97,114,107,71,114,101,101,110,93,32,91], HEX24_369098760(kHEX60gensym89_2986415732), [93,32,80,97,114,101,110,116,58,32], HEX24_3003121876(ctxHEX60gensym89_2986415335.activeQueryStack[chckIndx(iHEX60gensym89_2986415736, 0, (ctxHEX60gensym89_2986415335.activeQueryStack).length - 1)].Field0), [44,32], getOrDefault_2986414816(ctxHEX60gensym89_2986415335.depGraph.queryNames, ctxHEX60gensym89_2986415335.activeQueryStack[chckIndx(iHEX60gensym89_2986415736, 0, (ctxHEX60gensym89_2986415335.activeQueryStack).length - 1)].Field1));
            res_2936013000 = addInt(res_2936013000, 1);
          }
      };
    };
    if (ctxHEX60gensym89_2986415335.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,99,117,114,115,105,111,110,32,100,101,116,101,99,116,101,100]);
    }
    
    if (contains_2986414988(ctxHEX60gensym89_2986415335.recoveryFunctions, keyHEX60gensym89_2986415336.Field1)) {
    (Temporary8 = HEX5BHEX5D_2986415087(ctxHEX60gensym89_2986415335.recoveryFunctions, keyHEX60gensym89_2986415336.Field1), Temporary8)[0][Temporary8[1]](keyHEX60gensym89_2986415336);
    markRed_3003136501(ctxHEX60gensym89_2986415335.depGraph, keyHEX60gensym89_2986415336, []);
    }
    
    result_2986415338 = 2;
    break BeforeRet;
    }
    
    incl_3003128948(ctxHEX60gensym89_2986415335.activeQuerySet, keyHEX60gensym89_2986415336);
    var Temporary9 = nimCopy(null, keyHEX60gensym89_2986415336, NTI3003121692);
    ctxHEX60gensym89_2986415335.activeQueryStack.push(Temporary9);;
    try {
    var verifiedHEX60gensym89_2986416145 = getOrDefault_3003124243(ctxHEX60gensym89_2986415335.depGraph.verified, keyHEX60gensym89_2986415336, 0);
    Label11: {
      var iHEX60gensym89_2986416169 = 0;
      var depHEX60gensym89_2986416170 = {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0};
      var colontmp__2936013004 = [];
      colontmp__2936013004 = getDependencies_3003125011(ctxHEX60gensym89_2986415335.depGraph, keyHEX60gensym89_2986415336);
      var i_2936013006 = 0;
      var L_2936013007 = (colontmp__2936013004).length;
      Label12: {
          Label13: while (true) {
          if (!(i_2936013006 < L_2936013007)) break Label13;
            iHEX60gensym89_2986416169 = i_2936013006;
            depHEX60gensym89_2986416170 = nimCopy(depHEX60gensym89_2986416170, colontmp__2936013004[chckIndx(i_2936013006, 0, (colontmp__2936013004).length - 1)], NTI3003121692);
            Label14: {
              if (HEX3DHEX3D_2181038320(depHEX60gensym89_2986416170.Field0.Field0, null_2181038340)) {
              if (ctxHEX60gensym89_2986415335.enableLogging) {
              rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,103,111,116,32,100,101,108,101,116,101,100,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2986415338 = 1;
              break BeforeRet;
              }
              else {
              if (HEX3DHEX3D_2181038320(depHEX60gensym89_2986416170.Field0.Field0, dependencyGlobalRevision_3003121696)) {
              if ((verifiedHEX60gensym89_2986416145 < ctxHEX60gensym89_2986415335.depGraph.revision)) {
              if (ctxHEX60gensym89_2986415335.enableLogging) {
              rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,114,101,100,44,32,102,97,105,108,101,100]);
              }
              
              result_2986415338 = 1;
              break BeforeRet;
              }
              else {
                if (ctxHEX60gensym89_2986415335.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32,111,110,32,103,108,111,98,97,108,32,114,101,118,105,115,105,111,110,32,45,62,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
              }
              
              }
              }
              switch (nodeColor_3003124149(ctxHEX60gensym89_2986415335.depGraph, depHEX60gensym89_2986416170, verifiedHEX60gensym89_2986416145)) {
              case 2:
                if (ctxHEX60gensym89_2986415335.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary15 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary15)[0][Temporary15[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), [32,105,115,32,103,114,101,101,110,44,32,115,107,105,112]);
                }
                
                break Label14;
                break;
              case 1:
                if (ctxHEX60gensym89_2986415335.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary16 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary16)[0][Temporary16[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), [32,105,115,32,114,101,100,44,32,102,97,105,108,101,100]);
                }
                
                result_2986415338 = 1;
                break BeforeRet;
                break;
              case 0:
                if (ctxHEX60gensym89_2986415335.enableLogging) {
                rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary17 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary17)[0][Temporary17[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), [32,105,115,32,103,114,101,121]);
                }
                
                switch (tryMarkGreen_2986415334(ctxHEX60gensym89_2986415335, depHEX60gensym89_2986416170, true)) {
                case 2:
                  if (ctxHEX60gensym89_2986415335.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary18 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary18)[0][Temporary18[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,49,32] || []).concat(HEX24_3003132512(keyHEX60gensym89_2986415336) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2986415338 = 2;
                  break BeforeRet;
                  break;
                case 1:
                  if (ctxHEX60gensym89_2986415335.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary19 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary19)[0][Temporary19[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), [44,32,109,97,114,107,32,103,114,101,101,110,32,102,97,105,108,101,100]);
                  }
                  
                  if (tryForceHEX60gensym89_2986415337) {
                  force_2986414319(ctxHEX60gensym89_2986415335, depHEX60gensym89_2986416170);
                  }
                  else {
                    result_2986415338 = 1;
                    break BeforeRet;
                  }
                  
                  if (contains_2986414585(ctxHEX60gensym89_2986415335.recursiveQueries, keyHEX60gensym89_2986415336)) {
                  excl_3003127777(ctxHEX60gensym89_2986415335.recursiveQueries, keyHEX60gensym89_2986415336);
                  if (ctxHEX60gensym89_2986415335.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary20 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary20)[0][Temporary20[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), ([44,32,114,101,99,117,114,115,105,118,101,108,121,32,99,97,108,108,101,100,32,50,32] || []).concat(HEX24_3003132512(keyHEX60gensym89_2986415336) || [],[44,32,102,97,105,108,101,100] || []));
                  }
                  
                  result_2986415338 = 1;
                  break BeforeRet;
                  }
                  
                  if ((nodeColor_3003124149(ctxHEX60gensym89_2986415335.depGraph, depHEX60gensym89_2986416170, verifiedHEX60gensym89_2986416145) == 1)) {
                  if (ctxHEX60gensym89_2986415335.enableLogging) {
                  rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [68,101,112,101,110,100,101,110,99,121,32], ((Temporary21 = HEX5BHEX5D_2986414412(ctxHEX60gensym89_2986415335.depGraph.queryNames, depHEX60gensym89_2986416170.Field1), Temporary21)[0][Temporary21[1]] || []).concat([58] || [],HEX24_3003121876(depHEX60gensym89_2986416170.Field0) || []), [44,32,118,97,108,117,101,32,99,104,97,110,103,101,100]);
                  }
                  
                  result_2986415338 = 1;
                  break BeforeRet;
                  }
                  
                  break Label14;
                  break;
                default: 
                  break;
                }
                break;
              }
            };
            i_2936013006 = addInt(i_2936013006, 1);
            if (!(((colontmp__2936013004).length == L_2936013007))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (ctxHEX60gensym89_2986415335.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [109,97,114,107,32,103,114,101,101,110]);
    }
    
    markGreen_3003133058(ctxHEX60gensym89_2986415335.depGraph, keyHEX60gensym89_2986415336);
    result_2986415338 = 0;
    break BeforeRet;
    } finally {
    excl_3003127777(ctxHEX60gensym89_2986415335.activeQuerySet, keyHEX60gensym89_2986415336);
    var _ = pop_2986415264(ctxHEX60gensym89_2986415335, "activeQueryStack");
    }
    } finally {
    if (ctxHEX60gensym89_2986415335.enableLogging) {
    Temporary22 = 1;
    }
    else {
    Temporary22 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary22);
    }
  };

  return result_2986415338;

}

function clear_2986417549(s_2986417551) {
    s_2986417551.counter = 0;
    Label1: {
      var i_2986417637 = 0;
      var colontmp__2936013015 = 0;
      colontmp__2936013015 = (s_2986417551.data).length;
      var i_2936013016 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013016 < colontmp__2936013015)) break Label3;
            i_2986417637 = i_2936013016;
            s_2986417551.data[chckIndx(i_2986417637, 0, (s_2986417551.data).length - 1)].Field0 = 0;
            s_2986417551.data[chckIndx(i_2986417637, 0, (s_2986417551.data).length - 1)].Field1 = nimCopy(s_2986417551.data[chckIndx(i_2986417637, 0, (s_2986417551.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            i_2936013016 = addInt(i_2936013016, 1);
          }
      };
    };

  
}

function elapsed_2281701439(timer_2281701440) {
  var result_2281701441 = 0;

    result_2281701441 = subInt(myGetTicks_2281701422(), timer_2281701440.start);

  return result_2281701441;

}

function computeType_2986417458(ctxHEX60gensym92_2986417459, inputHEX60gensym92_2986417460, recordDependencyHEX60gensym92_2986417461) {
    var Temporary3;
    var Temporary5;

  var result_2986417462 = null;

  BeforeRet: {
    var timerHEX60gensym92_2986417463 = startTimer_2281701428();
    ctxHEX60gensym92_2986417459.statsType.totalCalls = addInt(ctxHEX60gensym92_2986417459.statsType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym92_2986417882 = getItem_2986398161(inputHEX60gensym92_2986417460);
    var keyHEX60gensym92_2986417883 = {Field0: nimCopy(null, itemHEX60gensym92_2986417882, NTI3003121689), Field1: 0};
    if (recordDependencyHEX60gensym92_2986417461) {
    recordDependency_2986397948(ctxHEX60gensym92_2986417459, itemHEX60gensym92_2986417882, 0);
    }
    
    var colorHEX60gensym92_2986417884 = nodeColor_3003124149(ctxHEX60gensym92_2986417459.depGraph, keyHEX60gensym92_2986417883, 0);
    if (ctxHEX60gensym92_2986417459.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym92_2986417459.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [84,121,112,101], [32], reprEnum(colorHEX60gensym92_2986417884, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym92_2986417882));
    }
    
    if ((colorHEX60gensym92_2986417884 == 2)) {
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    if (ctxHEX60gensym92_2986417459.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym92_2986417459, keyHEX60gensym92_2986417883);
    if (false) {
    markRed_3003136501(ctxHEX60gensym92_2986417459.depGraph, keyHEX60gensym92_2986417883, []);
    }
    
    if ((ctxHEX60gensym92_2986417459.enableLogging && contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460)));
    }
    
    }
    else {
      if ((ctxHEX60gensym92_2986417459.enableLogging && contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460)));
      }
      
    }
    
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986417460) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986417462 = HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym92_2986417884 == 0)) {
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    if (ctxHEX60gensym92_2986417459.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym92_2986417459, keyHEX60gensym92_2986417883);
    if (false) {
    markRed_3003136501(ctxHEX60gensym92_2986417459.depGraph, keyHEX60gensym92_2986417883, []);
    }
    
    if ((ctxHEX60gensym92_2986417459.enableLogging && contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460)));
    }
    
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986417460) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986417462 = HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym92_2986417459.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym92_2986417459, keyHEX60gensym92_2986417883, true) == 0)) {
    if ((ctxHEX60gensym92_2986417459.enableLogging && contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460)));
    }
    
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986417460) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986417462 = HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym92_2986417459.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym92_2986417459, keyHEX60gensym92_2986417883);
      if (false) {
      markRed_3003136501(ctxHEX60gensym92_2986417459.depGraph, keyHEX60gensym92_2986417883, []);
      }
      
      if ((ctxHEX60gensym92_2986417459.enableLogging && contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460)));
      }
      
      if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
      raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986417460) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986417462 = HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym92_2986417884 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym92_2986417459.enableLogging && contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460)));
    }
    
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    force_2986414319(ctxHEX60gensym92_2986417459, keyHEX60gensym92_2986417883);
    }
    
    if (!(contains_2986416975(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460))) {
    raiseException({message: ([99,111,109,112,117,116,101,84,121,112,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym92_2986417460) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986417462 = HEX5BHEX5D_2986417168(ctxHEX60gensym92_2986417459.queryCacheType, inputHEX60gensym92_2986417460);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym92_2986417459.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym92_2986417459.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym92_2986417459.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym92_2986417459.statsType.time = addInt(ctxHEX60gensym92_2986417459.statsType.time, elapsed_2281701439(timerHEX60gensym92_2986417463));
    }
  };

  return result_2986417462;

}

function formatValue_2986452532(result_2986452534, result_2986452534_Idx, value_2986452535, specifier_2986452536) {
    formatValue_721420459(result_2986452534, result_2986452534_Idx, HEX24_3070230964(value_2986452535), specifier_2986452536);

  
}

function rawGet_2986353542(t_2986353545, key_2986353546, hc_2986353547, hc_2986353547_Idx) {
  var result_2986353548 = 0;

  BeforeRet: {
    hc_2986353547[hc_2986353547_Idx] = hash_2969569587(key_2986353546);
    if ((hc_2986353547[hc_2986353547_Idx] == 0)) {
    hc_2986353547[hc_2986353547_Idx] = 314159265;
    }
    
    if (((t_2986353545.data).length == 0)) {
    result_2986353548 = -1;
    break BeforeRet;
    }
    
    var h_2986353634 = (hc_2986353547[hc_2986353547_Idx] & (t_2986353545.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986353545.data[chckIndx(h_2986353634, 0, (t_2986353545.data).length - 1)].Field0)) break Label2;
          if (((t_2986353545.data[chckIndx(h_2986353634, 0, (t_2986353545.data).length - 1)].Field0 == hc_2986353547[hc_2986353547_Idx]) && (t_2986353545.data[chckIndx(h_2986353634, 0, (t_2986353545.data).length - 1)].Field1 == key_2986353546))) {
          result_2986353548 = h_2986353634;
          break BeforeRet;
          }
          
          h_2986353634 = nextTry_1308622883(h_2986353634, (t_2986353545.data).length - 1);
        }
    };
    result_2986353548 = subInt(-1, h_2986353634);
  };

  return result_2986353548;

}

function hasKey_2986420550(t_2986420553, key_2986420554) {
  var result_2986420555 = false;

    var hc_2986420556 = [0];
    result_2986420555 = (0 <= rawGet_2986353542(t_2986420553, key_2986420554, hc_2986420556, 0));

  return result_2986420555;

}

function contains_2986420544(t_2986420547, key_2986420548) {
  var result_2986420549 = false;

  BeforeRet: {
    result_2986420549 = hasKey_2986420550(t_2986420547, key_2986420548);
    break BeforeRet;
  };

  return result_2986420549;

}

function contains_2986420450(cache_2986420453, key_2986420454) {
  var result_2986420455 = false;

    result_2986420455 = contains_2986420544(cache_2986420453.table, key_2986420454);

  return result_2986420455;

}

function HEX24_3070231271(value_3070231272) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3070231273 = [];

  BeforeRet: {
    switch (value_3070231272.kind) {
    case 0:
      result_3070231273 = nimCopy(null, [60,118,107,69,114,114,111,114,62], NTI33554449);
      break BeforeRet;
      break;
    case 1:
      result_3070231273 = nimCopy(null, [118,111,105,100], NTI33554449);
      break BeforeRet;
      break;
    case 2:
      var Temporary1 = value_3070231272;
      if (ConstSet63[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, Temporary1.stringValue, NTI33554449);
      break BeforeRet;
      break;
    case 3:
      var Temporary2 = value_3070231272;
      if (ConstSet64[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, HEX24_369098760(Temporary2.intValue), NTI33554449);
      break BeforeRet;
      break;
    case 4:
      result_3070231273 = nimCopy(null, [60,98,117,105,108,116,105,110,45,102,117,110,99,116,105,111,110,62], NTI33554449);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3070231272;
      if (ConstSet65[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, ([60,97,115,116,45,102,117,110,99,116,105,111,110,32] || []).concat(HEX24_2969569239(Temporary3.node) || [],[62] || []), NTI33554449);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3070231272;
      if (ConstSet66[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231273 = nimCopy(null, HEX24_3070230964(Temporary4.typ), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3070231273;

}

function HEX5BHEX5D_2986420729(t_2986420732, key_2986420733) {
  var result_2986420734 = null;
  var result_2986420734_Idx = 0;

    var hcHEX60gensym22_2986420735 = [0];
    var indexHEX60gensym22_2986420742 = rawGet_2986353542(t_2986420732, key_2986420733, hcHEX60gensym22_2986420735, 0);
    if ((0 <= indexHEX60gensym22_2986420742)) {
    result_2986420734 = t_2986420732.data[chckIndx(indexHEX60gensym22_2986420742, 0, (t_2986420732.data).length - 1)]; result_2986420734_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417348(key_2986420733);
    }
    

  return [result_2986420734, result_2986420734_Idx];

}

function remove_2986356980(L_2986356982, n_2986356983) {
    if ((n_2986356983 == L_2986356982.tail)) {
    L_2986356982.tail = n_2986356983.prev;
    }
    
    if ((n_2986356983 == L_2986356982.head)) {
    L_2986356982.head = n_2986356983.next;
    }
    
    if (!((n_2986356983.next == null))) {
    n_2986356983.next.prev = n_2986356983.prev;
    }
    
    if (!((n_2986356983.prev == null))) {
    n_2986356983.prev.next = n_2986356983.next;
    }
    

  
}

function prepend_2986355727(L_2986355729, n_2986355730) {
    n_2986355730.prev = null;
    n_2986355730.next = L_2986355729.head;
    if (!((L_2986355729.head == null))) {
    if (!((L_2986355729.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986355729.head.prev = n_2986355730;
    }
    
    L_2986355729.head = n_2986355730;
    if ((L_2986355729.tail == null)) {
    L_2986355729.tail = n_2986355730;
    }
    

  
}

function HEX5BHEX5D_2986420643(cache_2986420646, key_2986420647) {
    var Temporary1;

  var result_2986420648 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2986420835 = (Temporary1 = HEX5BHEX5D_2986420729(cache_2986420646.table, key_2986420647), Temporary1)[0][Temporary1[1]];
    result_2986420648 = nimCopy(result_2986420648, node_2986420835.value.val, NTI3070230535);
    remove_2986356980(cache_2986420646.list, node_2986420835);
    prepend_2986355727(cache_2986420646.list, node_2986420835);

  return result_2986420648;

}

function computeValue_2986420934(ctxHEX60gensym96_2986420935, inputHEX60gensym96_2986420936, recordDependencyHEX60gensym96_2986420937) {
    var Temporary3;
    var Temporary5;

  var result_2986420938 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym96_2986420939 = startTimer_2281701428();
    ctxHEX60gensym96_2986420935.statsValue.totalCalls = addInt(ctxHEX60gensym96_2986420935.statsValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym96_2986421028 = getItem_2986398161(inputHEX60gensym96_2986420936);
    var keyHEX60gensym96_2986421029 = {Field0: nimCopy(null, itemHEX60gensym96_2986421028, NTI3003121689), Field1: 1};
    if (recordDependencyHEX60gensym96_2986420937) {
    recordDependency_2986397948(ctxHEX60gensym96_2986420935, itemHEX60gensym96_2986421028, 1);
    }
    
    var colorHEX60gensym96_2986421030 = nodeColor_3003124149(ctxHEX60gensym96_2986420935.depGraph, keyHEX60gensym96_2986421029, 0);
    if (ctxHEX60gensym96_2986420935.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym96_2986420935.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [86,97,108,117,101], [32], reprEnum(colorHEX60gensym96_2986421030, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym96_2986421028));
    }
    
    if ((colorHEX60gensym96_2986421030 == 2)) {
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    if (ctxHEX60gensym96_2986420935.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym96_2986420935, keyHEX60gensym96_2986421029);
    if (false) {
    markRed_3003136501(ctxHEX60gensym96_2986420935.depGraph, keyHEX60gensym96_2986421029, []);
    }
    
    if ((ctxHEX60gensym96_2986420935.enableLogging && contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936)));
    }
    
    }
    else {
      if ((ctxHEX60gensym96_2986420935.enableLogging && contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936)));
      }
      
    }
    
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986420936) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986420938 = nimCopy(result_2986420938, HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936), NTI3070230535);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym96_2986421030 == 0)) {
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    if (ctxHEX60gensym96_2986420935.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym96_2986420935, keyHEX60gensym96_2986421029);
    if (false) {
    markRed_3003136501(ctxHEX60gensym96_2986420935.depGraph, keyHEX60gensym96_2986421029, []);
    }
    
    if ((ctxHEX60gensym96_2986420935.enableLogging && contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936)));
    }
    
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986420936) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986420938 = nimCopy(result_2986420938, HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936), NTI3070230535);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym96_2986420935.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym96_2986420935, keyHEX60gensym96_2986421029, true) == 0)) {
    if ((ctxHEX60gensym96_2986420935.enableLogging && contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936)));
    }
    
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986420936) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986420938 = nimCopy(result_2986420938, HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936), NTI3070230535);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym96_2986420935.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym96_2986420935, keyHEX60gensym96_2986421029);
      if (false) {
      markRed_3003136501(ctxHEX60gensym96_2986420935.depGraph, keyHEX60gensym96_2986421029, []);
      }
      
      if ((ctxHEX60gensym96_2986420935.enableLogging && contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936)));
      }
      
      if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
      raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986420936) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986420938 = nimCopy(result_2986420938, HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936), NTI3070230535);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym96_2986421030 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,57,54,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym96_2986420935.enableLogging && contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936)));
    }
    
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    force_2986414319(ctxHEX60gensym96_2986420935, keyHEX60gensym96_2986421029);
    }
    
    if (!(contains_2986420450(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936))) {
    raiseException({message: ([99,111,109,112,117,116,101,86,97,108,117,101,40] || []).concat(HEX24_2969569239(inputHEX60gensym96_2986420936) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986420938 = nimCopy(result_2986420938, HEX5BHEX5D_2986420643(ctxHEX60gensym96_2986420935.queryCacheValue, inputHEX60gensym96_2986420936), NTI3070230535);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym96_2986420935.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym96_2986420935.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym96_2986420935.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym96_2986420935.statsValue.time = addInt(ctxHEX60gensym96_2986420935.statsValue.time, elapsed_2281701439(timerHEX60gensym96_2986420939));
    }
  };

  return result_2986420938;

}

function formatValue_3120563615(result_3120563617, result_3120563617_Idx, value_3120563618, specifier_3120563619) {
    formatValue_721420459(result_3120563617, result_3120563617_Idx, HEX24_3070231271(value_3120563618), specifier_3120563619);

  
}

function newFunctionType_3070230946(paramTypes_3070230947, returnType_3070230948) {
  var result_3070230949 = null;

    result_3070230949 = {kind: 4, returnType: returnType_3070230948, paramTypes: nimCopy(null, paramTypes_3070230947, NTI3070230838), open: false};

  return result_3070230949;

}

function HEX3DHEX3D_3070231104(x_3070231106, y_3070231107) {
  var result_3070231108 = false;

  BeforeRet: {
    var sameObject_3070231115 = false;
    sameObject_3070231115 = x_3070231106 === y_3070231107
    if (sameObject_3070231115) {
    result_3070231108 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070231106).length == (y_3070231107).length))) {
    result_3070231108 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070231129 = 0;
      var colontmp__2936013020 = 0;
      colontmp__2936013020 = subInt((x_3070231106).length, 1);
      var res_2936013021 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013021 <= colontmp__2936013020)) break Label3;
            i_3070231129 = res_2936013021;
            if (!(HEX3DHEX3D_3070231086(x_3070231106[chckIndx(i_3070231129, 0, (x_3070231106).length - 1)], y_3070231107[chckIndx(i_3070231129, 0, (y_3070231107).length - 1)]))) {
            result_3070231108 = false;
            break BeforeRet;
            }
            
            res_2936013021 = addInt(res_2936013021, 1);
          }
      };
    };
    result_3070231108 = true;
    break BeforeRet;
  };

  return result_3070231108;

}

function HEX3DHEX3D_3070231086(a_3070231087, b_3070231088) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
      var Temporary6;
      var Temporary7;

  var result_3070231089 = false;

  BeforeRet: {
    if ((a_3070231087 == null)) {
    result_3070231089 = (b_3070231088 == null);
    break BeforeRet;
    }
    
    if ((b_3070231088 == null)) {
    result_3070231089 = false;
    break BeforeRet;
    }
    
    if (!((a_3070231087.kind == b_3070231088.kind))) {
    result_3070231089 = false;
    break BeforeRet;
    }
    
    switch (a_3070231087.kind) {
    case 4:
      var Temporary2 = a_3070231087;
      if (ConstSet69[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230531)); }
      var Temporary3 = b_3070231088;
      if (ConstSet70[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
      if (!HEX3DHEX3D_3070231086(Temporary2.returnType, Temporary3.returnType)) Temporary1 = false; else {        var Temporary4 = a_3070231087;
        if (ConstSet71[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
        var Temporary5 = b_3070231088;
        if (ConstSet72[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230531)); }
        Temporary1 = HEX3DHEX3D_3070231104(Temporary4.paramTypes, Temporary5.paramTypes);      }      result_3070231089 = Temporary1;
      break BeforeRet;
      break;
    case 5:
      var Temporary6 = a_3070231087;
      if (ConstSet73[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230531)); }
      var Temporary7 = b_3070231088;
      if (ConstSet74[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3070230531)); }
      result_3070231089 = (Temporary6.open == Temporary7.open);
      break BeforeRet;
      break;
    default: 
      result_3070231089 = true;
      break BeforeRet;
      break;
    }
  };

  return result_3070231089;

}

function anyType_3070230961(open_3070230962) {
  var result_3070230963 = null;

    result_3070230963 = {kind: 5, open: open_3070230962, returnType: null, paramTypes: []};

  return result_3070230963;

}

function rawGet_2986362074(t_2986362077, key_2986362078, hc_2986362079, hc_2986362079_Idx) {
  var result_2986362080 = 0;

  BeforeRet: {
    hc_2986362079[hc_2986362079_Idx] = hash_2969569587(key_2986362078);
    if ((hc_2986362079[hc_2986362079_Idx] == 0)) {
    hc_2986362079[hc_2986362079_Idx] = 314159265;
    }
    
    if (((t_2986362077.data).length == 0)) {
    result_2986362080 = -1;
    break BeforeRet;
    }
    
    var h_2986362166 = (hc_2986362079[hc_2986362079_Idx] & (t_2986362077.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986362077.data[chckIndx(h_2986362166, 0, (t_2986362077.data).length - 1)].Field0)) break Label2;
          if (((t_2986362077.data[chckIndx(h_2986362166, 0, (t_2986362077.data).length - 1)].Field0 == hc_2986362079[hc_2986362079_Idx]) && (t_2986362077.data[chckIndx(h_2986362166, 0, (t_2986362077.data).length - 1)].Field1 == key_2986362078))) {
          result_2986362080 = h_2986362166;
          break BeforeRet;
          }
          
          h_2986362166 = nextTry_1308622883(h_2986362166, (t_2986362077.data).length - 1);
        }
    };
    result_2986362080 = subInt(-1, h_2986362166);
  };

  return result_2986362080;

}

function hasKey_2986427178(t_2986427181, key_2986427182) {
  var result_2986427183 = false;

    var hc_2986427184 = [0];
    result_2986427183 = (0 <= rawGet_2986362074(t_2986427181, key_2986427182, hc_2986427184, 0));

  return result_2986427183;

}

function contains_2986427172(t_2986427175, key_2986427176) {
  var result_2986427177 = false;

  BeforeRet: {
    result_2986427177 = hasKey_2986427178(t_2986427175, key_2986427176);
    break BeforeRet;
  };

  return result_2986427177;

}

function contains_2986427078(cache_2986427081, key_2986427082) {
  var result_2986427083 = false;

    result_2986427083 = contains_2986427172(cache_2986427081.table, key_2986427082);

  return result_2986427083;

}

function len_3070231826(t_3070231829) {
  var result_3070231830 = 0;

    result_3070231830 = t_3070231829.counter;

  return result_3070231830;

}

function addQuoted_2986397591(s_2986397593, s_2986397593_Idx, x_2986397594) {
    s_2986397593[s_2986397593_Idx].push.apply(s_2986397593[s_2986397593_Idx], HEX24_2181038317(x_2986397594));;

  
}

function HEX24_3070231676(symbol_3070231677) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3070231678 = [];

  BeforeRet: {
    switch (symbol_3070231677.kind) {
    case 0:
      var Temporary1 = symbol_3070231677;
      if (ConstSet86[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
      result_3070231678 = nimCopy(null, ([83,121,109,40,65,115,116,78,111,100,101,44,32] || []).concat(HEX24_2181038317(symbol_3070231677.id) || [],[44,32] || [],HEX24_2969569239(Temporary1.node) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = symbol_3070231677;
      if (ConstSet87[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      var Temporary3 = symbol_3070231677;
      if (ConstSet88[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      result_3070231678 = nimCopy(null, ([83,121,109,40,66,117,105,108,116,105,110,44,32] || []).concat(HEX24_2181038317(symbol_3070231677.id) || [],[44,32] || [],HEX24_3070230964(Temporary2.typ) || [],[44,32] || [],HEX24_3070231271(Temporary3.value) || [],[41] || []), NTI33554449);
      break BeforeRet;
      break;
    }
  };

  return result_3070231678;

}

function addQuoted_2986397349(s_2986397351, s_2986397351_Idx, x_2986397352) {
    s_2986397351[s_2986397351_Idx].push.apply(s_2986397351[s_2986397351_Idx], HEX24_3070231676(x_2986397352));;

  
}

function HEX24_2986397498(t_2986397501) {
  var result_2986397502 = [[]];

    if ((len_3070231826(t_2986397501) == 0)) {
    result_2986397502[0] = nimCopy(null, [123,58,125], NTI33554449);
    }
    else {
      result_2986397502[0] = nimCopy(null, [123], NTI33554449);
      Label1: {
        var key_2986397589 = ({padding: 0, time: 0, fuzz: 0, count: 0});
        var val_2986397590 = null;
        var L_2936013029 = len_3070231826(t_2986397501);
        Label2: {
          var h_2936013031 = 0;
          var colontmp__2936013032 = 0;
          colontmp__2936013032 = (t_2986397501.data).length - 1;
          var res_2936013033 = 0;
          Label3: {
              Label4: while (true) {
              if (!(res_2936013033 <= colontmp__2936013032)) break Label4;
                h_2936013031 = res_2936013033;
                if (isFilled_1308622880(t_2986397501.data[chckIndx(h_2936013031, 0, (t_2986397501.data).length - 1)].Field0)) {
                key_2986397589 = nimCopy(key_2986397589, t_2986397501.data[chckIndx(h_2936013031, 0, (t_2986397501.data).length - 1)].Field1, NTI2181038083);
                val_2986397590 = t_2986397501.data[chckIndx(h_2936013031, 0, (t_2986397501.data).length - 1)].Field2;
                if ((1 < (result_2986397502[0]).length)) {
                result_2986397502[0].push.apply(result_2986397502[0], [44,32]);;
                }
                
                addQuoted_2986397591(result_2986397502, 0, key_2986397589);
                result_2986397502[0].push.apply(result_2986397502[0], [58,32]);;
                addQuoted_2986397349(result_2986397502, 0, val_2986397590);
                if (!((len_3070231826(t_2986397501) == L_2936013029))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                res_2936013033 = addInt(res_2936013033, 1);
              }
          };
        };
      };
      result_2986397502[0].push.apply(result_2986397502[0], [125]);;
    }
    

  return result_2986397502[0];

}

function HEX5BHEX5D_2986427357(t_2986427360, key_2986427361) {
  var result_2986427362 = null;
  var result_2986427362_Idx = 0;

    var hcHEX60gensym22_2986427363 = [0];
    var indexHEX60gensym22_2986427370 = rawGet_2986362074(t_2986427360, key_2986427361, hcHEX60gensym22_2986427363, 0);
    if ((0 <= indexHEX60gensym22_2986427370)) {
    result_2986427362 = t_2986427360.data[chckIndx(indexHEX60gensym22_2986427370, 0, (t_2986427360.data).length - 1)]; result_2986427362_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417348(key_2986427361);
    }
    

  return [result_2986427362, result_2986427362_Idx];

}

function remove_2986365503(L_2986365505, n_2986365506) {
    if ((n_2986365506 == L_2986365505.tail)) {
    L_2986365505.tail = n_2986365506.prev;
    }
    
    if ((n_2986365506 == L_2986365505.head)) {
    L_2986365505.head = n_2986365506.next;
    }
    
    if (!((n_2986365506.next == null))) {
    n_2986365506.next.prev = n_2986365506.prev;
    }
    
    if (!((n_2986365506.prev == null))) {
    n_2986365506.prev.next = n_2986365506.next;
    }
    

  
}

function prepend_2986364250(L_2986364252, n_2986364253) {
    n_2986364253.prev = null;
    n_2986364253.next = L_2986364252.head;
    if (!((L_2986364252.head == null))) {
    if (!((L_2986364252.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986364252.head.prev = n_2986364253;
    }
    
    L_2986364252.head = n_2986364253;
    if ((L_2986364252.tail == null)) {
    L_2986364252.tail = n_2986364253;
    }
    

  
}

function HEX5BHEX5D_2986427271(cache_2986427274, key_2986427275) {
    var Temporary1;

  var result_2986427276 = null;

    var node_2986427463 = (Temporary1 = HEX5BHEX5D_2986427357(cache_2986427274.table, key_2986427275), Temporary1)[0][Temporary1[1]];
    result_2986427276 = node_2986427463.value.val;
    remove_2986365503(cache_2986427274.list, node_2986427463);
    prepend_2986364250(cache_2986427274.list, node_2986427463);

  return result_2986427276;

}

function computeSymbols_2986427564(ctxHEX60gensym104_2986427565, inputHEX60gensym104_2986427566, recordDependencyHEX60gensym104_2986427567) {
    var Temporary3;
    var Temporary5;

  var result_2986427570 = null;

  BeforeRet: {
    var timerHEX60gensym104_2986427571 = startTimer_2281701428();
    ctxHEX60gensym104_2986427565.statsSymbols.totalCalls = addInt(ctxHEX60gensym104_2986427565.statsSymbols.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym104_2986427660 = getItem_2986398161(inputHEX60gensym104_2986427566);
    var keyHEX60gensym104_2986427661 = {Field0: nimCopy(null, itemHEX60gensym104_2986427660, NTI3003121689), Field1: 3};
    if (recordDependencyHEX60gensym104_2986427567) {
    recordDependency_2986397948(ctxHEX60gensym104_2986427565, itemHEX60gensym104_2986427660, 3);
    }
    
    var colorHEX60gensym104_2986427662 = nodeColor_3003124149(ctxHEX60gensym104_2986427565.depGraph, keyHEX60gensym104_2986427661, 0);
    if (ctxHEX60gensym104_2986427565.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym104_2986427565.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,115], [32], reprEnum(colorHEX60gensym104_2986427662, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym104_2986427660));
    }
    
    if ((colorHEX60gensym104_2986427662 == 2)) {
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    if (ctxHEX60gensym104_2986427565.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym104_2986427565, keyHEX60gensym104_2986427661);
    if (false) {
    markRed_3003136501(ctxHEX60gensym104_2986427565.depGraph, keyHEX60gensym104_2986427661, []);
    }
    
    if ((ctxHEX60gensym104_2986427565.enableLogging && contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397498(HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566)));
    }
    
    }
    else {
      if ((ctxHEX60gensym104_2986427565.enableLogging && contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986397498(HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566)));
      }
      
    }
    
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986427566) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986427570 = HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym104_2986427662 == 0)) {
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    if (ctxHEX60gensym104_2986427565.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym104_2986427565, keyHEX60gensym104_2986427661);
    if (false) {
    markRed_3003136501(ctxHEX60gensym104_2986427565.depGraph, keyHEX60gensym104_2986427661, []);
    }
    
    if ((ctxHEX60gensym104_2986427565.enableLogging && contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397498(HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566)));
    }
    
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986427566) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986427570 = HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym104_2986427565.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym104_2986427565, keyHEX60gensym104_2986427661, true) == 0)) {
    if ((ctxHEX60gensym104_2986427565.enableLogging && contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2986397498(HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566)));
    }
    
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986427566) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986427570 = HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym104_2986427565.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym104_2986427565, keyHEX60gensym104_2986427661);
      if (false) {
      markRed_3003136501(ctxHEX60gensym104_2986427565.depGraph, keyHEX60gensym104_2986427661, []);
      }
      
      if ((ctxHEX60gensym104_2986427565.enableLogging && contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397498(HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566)));
      }
      
      if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986427566) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986427570 = HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym104_2986427662 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,52,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym104_2986427565.enableLogging && contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986397498(HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566)));
    }
    
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    force_2986414319(ctxHEX60gensym104_2986427565, keyHEX60gensym104_2986427661);
    }
    
    if (!(contains_2986427078(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_2969569239(inputHEX60gensym104_2986427566) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986427570 = HEX5BHEX5D_2986427271(ctxHEX60gensym104_2986427565.queryCacheSymbols, inputHEX60gensym104_2986427566);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym104_2986427565.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym104_2986427565.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym104_2986427565.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym104_2986427565.statsSymbols.time = addInt(ctxHEX60gensym104_2986427565.statsSymbols.time, elapsed_2281701439(timerHEX60gensym104_2986427571));
    }
  };

  return result_2986427570;

}

function rawGet_2986441830(t_2986441833, key_2986441834, hc_2986441835, hc_2986441835_Idx) {
  var result_2986441836 = 0;

  BeforeRet: {
    hc_2986441835[hc_2986441835_Idx] = hash_2181038324(key_2986441834);
    if ((hc_2986441835[hc_2986441835_Idx] == 0)) {
    hc_2986441835[hc_2986441835_Idx] = 314159265;
    }
    
    if (((t_2986441833.data).length == 0)) {
    result_2986441836 = -1;
    break BeforeRet;
    }
    
    var h_2986441921 = (hc_2986441835[hc_2986441835_Idx] & (t_2986441833.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986441833.data[chckIndx(h_2986441921, 0, (t_2986441833.data).length - 1)].Field0)) break Label2;
          if (((t_2986441833.data[chckIndx(h_2986441921, 0, (t_2986441833.data).length - 1)].Field0 == hc_2986441835[hc_2986441835_Idx]) && HEX3DHEX3D_2181038320(t_2986441833.data[chckIndx(h_2986441921, 0, (t_2986441833.data).length - 1)].Field1, key_2986441834))) {
          result_2986441836 = h_2986441921;
          break BeforeRet;
          }
          
          h_2986441921 = nextTry_1308622883(h_2986441921, (t_2986441833.data).length - 1);
        }
    };
    result_2986441836 = subInt(-1, h_2986441921);
  };

  return result_2986441836;

}

function hasKey_2986453146(t_2986453149, key_2986453150) {
  var result_2986453151 = false;

    var hc_2986453152 = [0];
    result_2986453151 = (0 <= rawGet_2986441830(t_2986453149, key_2986453150, hc_2986453152, 0));

  return result_2986453151;

}

function hasKey_2986453020(t_2986453023, key_2986453024) {
  var result_2986453025 = false;

    result_2986453025 = hasKey_2986453146(t_2986453023, key_2986453024);

  return result_2986453025;

}

function contains_2986452984(t_2986452987, key_2986452988) {
  var result_2986452989 = false;

  BeforeRet: {
    result_2986452989 = hasKey_2986453020(t_2986452987, key_2986452988);
    break BeforeRet;
  };

  return result_2986452989;

}

function HEX5BHEX5D_2986453405(t_2986453408, key_2986453409) {
  var result_2986453410 = null;
  var result_2986453410_Idx = 0;

    var hcHEX60gensym22_2986453411 = [0];
    var indexHEX60gensym22_2986453418 = rawGet_2986441830(t_2986453408, key_2986453409, hcHEX60gensym22_2986453411, 0);
    if ((0 <= indexHEX60gensym22_2986453418)) {
    result_2986453410 = t_2986453408.data[chckIndx(indexHEX60gensym22_2986453418, 0, (t_2986453408.data).length - 1)]; result_2986453410_Idx = "Field2";
    }
    else {
    raiseKeyError_2969569048(key_2986453409);
    }
    

  return [result_2986453410, result_2986453410_Idx];

}

function HEX5BHEX5D_2986453239(t_2986453242, key_2986453243) {
    var Temporary1;

  var result_2986453244 = null;
  var result_2986453244_Idx = 0;

    result_2986453244 = (Temporary1 = HEX5BHEX5D_2986453405(t_2986453242, key_2986453243), Temporary1)[0]; result_2986453244_Idx = Temporary1[1];

  return [result_2986453244, result_2986453244_Idx];

}

function getItem_2986407430(selfHEX60gensym81_2986407431) {
  var result_2986407432 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym81_2986407431.id, null_2181038340)) {
    selfHEX60gensym81_2986407431.id = nimCopy(selfHEX60gensym81_2986407431.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym81_2986407431.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,49,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936013036 = nimCopy(null, selfHEX60gensym81_2986407431.id, NTI2181038083);
    var colontmp__2936013037 = 2;
    result_2986407432 = nimCopy(result_2986407432, {Field0: nimCopy(null, colontmp__2936013036, NTI2181038083), Field1: colontmp__2936013037}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986407432;

}

function hash_3070231679(symbol_3070231680) {
  var result_3070231681 = 0;

  BeforeRet: {
    result_3070231681 = hash_2181038324(symbol_3070231680.id);
    break BeforeRet;
  };

  return result_3070231681;

}

function HEX3DHEX3D_3070231294(a_3070231295, b_3070231296) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;

  var result_3070231297 = false;

  BeforeRet: {
    if (!((a_3070231295.kind == b_3070231296.kind))) {
    result_3070231297 = false;
    break BeforeRet;
    }
    
    switch (a_3070231295.kind) {
    case 0:
      result_3070231297 = true;
      break BeforeRet;
      break;
    case 1:
      result_3070231297 = true;
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = a_3070231295;
      if (ConstSet91[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      var Temporary2 = b_3070231296;
      if (ConstSet92[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231297 = (Temporary1.intValue == Temporary2.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = a_3070231295;
      if (ConstSet93[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      var Temporary4 = b_3070231296;
      if (ConstSet94[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231297 = eqStrings(Temporary3.stringValue, Temporary4.stringValue);
      break BeforeRet;
      break;
    case 4:
      var Temporary5 = a_3070231295;
      if (ConstSet95[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230534)); }
      var Temporary6 = b_3070231296;
      if (ConstSet96[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230534)); }
      result_3070231297 = (Temporary5.impl == Temporary6.impl);
      break BeforeRet;
      break;
    case 5:
      var Temporary7 = a_3070231295;
      if (ConstSet97[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3070230534)); }
      var Temporary8 = b_3070231296;
      if (ConstSet98[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3070230534)); }
      result_3070231297 = (Temporary7.node == Temporary8.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary9 = a_3070231295;
      if (ConstSet99[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3070230534)); }
      var Temporary10 = b_3070231296;
      if (ConstSet100[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3070230534)); }
      result_3070231297 = HEX3DHEX3D_3070231086(Temporary9.typ, Temporary10.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3070231297;

}

function HEX3DHEX3D_3070231682(a_3070231683, b_3070231684) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;
      var Temporary13;

  var result_3070231685 = false;

  BeforeRet: {
    if ((a_3070231683 == null)) {
    result_3070231685 = (b_3070231684 == null);
    break BeforeRet;
    }
    
    if ((b_3070231684 == null)) {
    result_3070231685 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2181038320(a_3070231683.id, b_3070231684.id))) {
    result_3070231685 = false;
    break BeforeRet;
    }
    
    if (!((a_3070231683.kind == b_3070231684.kind))) {
    result_3070231685 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3070231683.name, b_3070231684.name))) {
    result_3070231685 = false;
    break BeforeRet;
    }
    
    switch (a_3070231683.kind) {
    case 1:
      var Temporary4 = a_3070231683;
      if (ConstSet89[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      var Temporary5 = b_3070231684;
      if (ConstSet90[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230537)); }
      if (!HEX3DHEX3D_3070231086(Temporary4.typ, Temporary5.typ)) Temporary3 = false; else {        var Temporary6 = a_3070231683;
        if (ConstSet101[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230537)); }
        var Temporary7 = b_3070231684;
        if (ConstSet102[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI3070230537)); }
        Temporary3 = HEX3DHEX3D_3070231294(Temporary6.value, Temporary7.value);      }      if (!Temporary3) Temporary2 = false; else {        var Temporary8 = a_3070231683;
        if (ConstSet103[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3070230537)); }
        var Temporary9 = b_3070231684;
        if (ConstSet104[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI3070230537)); }
        Temporary2 = (Temporary8.operatorNotation == Temporary9.operatorNotation);      }      if (!Temporary2) Temporary1 = false; else {        var Temporary10 = a_3070231683;
        if (ConstSet105[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3070230537)); }
        var Temporary11 = b_3070231684;
        if (ConstSet106[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3070230537)); }
        Temporary1 = (Temporary10.precedence == Temporary11.precedence);      }      result_3070231685 = Temporary1;
      break BeforeRet;
      break;
    case 0:
      var Temporary12 = a_3070231683;
      if (ConstSet107[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3070230537)); }
      var Temporary13 = b_3070231684;
      if (ConstSet108[Temporary13.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary13.kind, NTI3070230537)); }
      result_3070231685 = (Temporary12.node == Temporary13.node);
      break BeforeRet;
      break;
    }
  };

  return result_3070231685;

}

function rawGet_2986367497(t_2986367500, key_2986367501, hc_2986367502, hc_2986367502_Idx) {
  var result_2986367503 = 0;

  BeforeRet: {
    hc_2986367502[hc_2986367502_Idx] = hash_3070231679(key_2986367501);
    if ((hc_2986367502[hc_2986367502_Idx] == 0)) {
    hc_2986367502[hc_2986367502_Idx] = 314159265;
    }
    
    if (((t_2986367500.data).length == 0)) {
    result_2986367503 = -1;
    break BeforeRet;
    }
    
    var h_2986367589 = (hc_2986367502[hc_2986367502_Idx] & (t_2986367500.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986367500.data[chckIndx(h_2986367589, 0, (t_2986367500.data).length - 1)].Field0)) break Label2;
          if (((t_2986367500.data[chckIndx(h_2986367589, 0, (t_2986367500.data).length - 1)].Field0 == hc_2986367502[hc_2986367502_Idx]) && HEX3DHEX3D_3070231682(t_2986367500.data[chckIndx(h_2986367589, 0, (t_2986367500.data).length - 1)].Field1, key_2986367501))) {
          result_2986367503 = h_2986367589;
          break BeforeRet;
          }
          
          h_2986367589 = nextTry_1308622883(h_2986367589, (t_2986367500.data).length - 1);
        }
    };
    result_2986367503 = subInt(-1, h_2986367589);
  };

  return result_2986367503;

}

function hasKey_2986430680(t_2986430683, key_2986430684) {
  var result_2986430685 = false;

    var hc_2986430686 = [0];
    result_2986430685 = (0 <= rawGet_2986367497(t_2986430683, key_2986430684, hc_2986430686, 0));

  return result_2986430685;

}

function contains_2986430674(t_2986430677, key_2986430678) {
  var result_2986430679 = false;

  BeforeRet: {
    result_2986430679 = hasKey_2986430680(t_2986430677, key_2986430678);
    break BeforeRet;
  };

  return result_2986430679;

}

function contains_2986430580(cache_2986430583, key_2986430584) {
  var result_2986430585 = false;

    result_2986430585 = contains_2986430674(cache_2986430583.table, key_2986430584);

  return result_2986430585;

}

function raiseKeyError_2986430953(key_2986430955) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3070231676(key_2986430955) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986430859(t_2986430862, key_2986430863) {
  var result_2986430864 = null;
  var result_2986430864_Idx = 0;

    var hcHEX60gensym22_2986430865 = [0];
    var indexHEX60gensym22_2986430872 = rawGet_2986367497(t_2986430862, key_2986430863, hcHEX60gensym22_2986430865, 0);
    if ((0 <= indexHEX60gensym22_2986430872)) {
    result_2986430864 = t_2986430862.data[chckIndx(indexHEX60gensym22_2986430872, 0, (t_2986430862.data).length - 1)]; result_2986430864_Idx = "Field2";
    }
    else {
    raiseKeyError_2986430953(key_2986430863);
    }
    

  return [result_2986430864, result_2986430864_Idx];

}

function remove_2986373376(L_2986373378, n_2986373379) {
    if ((n_2986373379 == L_2986373378.tail)) {
    L_2986373378.tail = n_2986373379.prev;
    }
    
    if ((n_2986373379 == L_2986373378.head)) {
    L_2986373378.head = n_2986373379.next;
    }
    
    if (!((n_2986373379.next == null))) {
    n_2986373379.next.prev = n_2986373379.prev;
    }
    
    if (!((n_2986373379.prev == null))) {
    n_2986373379.prev.next = n_2986373379.next;
    }
    

  
}

function prepend_2986369665(L_2986369667, n_2986369668) {
    n_2986369668.prev = null;
    n_2986369668.next = L_2986369667.head;
    if (!((L_2986369667.head == null))) {
    if (!((L_2986369667.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986369667.head.prev = n_2986369668;
    }
    
    L_2986369667.head = n_2986369668;
    if ((L_2986369667.tail == null)) {
    L_2986369667.tail = n_2986369668;
    }
    

  
}

function HEX5BHEX5D_2986430773(cache_2986430776, key_2986430777) {
    var Temporary1;

  var result_2986430778 = null;

    var node_2986430966 = (Temporary1 = HEX5BHEX5D_2986430859(cache_2986430776.table, key_2986430777), Temporary1)[0][Temporary1[1]];
    result_2986430778 = node_2986430966.value.val;
    remove_2986373376(cache_2986430776.list, node_2986430966);
    prepend_2986369665(cache_2986430776.list, node_2986430966);

  return result_2986430778;

}

function computeSymbolType_2986431036(ctxHEX60gensym108_2986431037, inputHEX60gensym108_2986431038, recordDependencyHEX60gensym108_2986431039) {
    var Temporary3;
    var Temporary5;

  var result_2986431040 = null;

  BeforeRet: {
    var timerHEX60gensym108_2986431041 = startTimer_2281701428();
    ctxHEX60gensym108_2986431037.statsSymbolType.totalCalls = addInt(ctxHEX60gensym108_2986431037.statsSymbolType.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym108_2986431130 = getItem_2986407430(inputHEX60gensym108_2986431038);
    var keyHEX60gensym108_2986431131 = {Field0: nimCopy(null, itemHEX60gensym108_2986431130, NTI3003121689), Field1: 4};
    if (recordDependencyHEX60gensym108_2986431039) {
    recordDependency_2986397948(ctxHEX60gensym108_2986431037, itemHEX60gensym108_2986431130, 4);
    }
    
    var colorHEX60gensym108_2986431132 = nodeColor_3003124149(ctxHEX60gensym108_2986431037.depGraph, keyHEX60gensym108_2986431131, 0);
    if (ctxHEX60gensym108_2986431037.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym108_2986431037.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,84,121,112,101], [32], reprEnum(colorHEX60gensym108_2986431132, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym108_2986431130));
    }
    
    if ((colorHEX60gensym108_2986431132 == 2)) {
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    if (ctxHEX60gensym108_2986431037.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym108_2986431037, keyHEX60gensym108_2986431131);
    if (false) {
    markRed_3003136501(ctxHEX60gensym108_2986431037.depGraph, keyHEX60gensym108_2986431131, []);
    }
    
    if ((ctxHEX60gensym108_2986431037.enableLogging && contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038)));
    }
    
    }
    else {
      if ((ctxHEX60gensym108_2986431037.enableLogging && contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038)));
      }
      
    }
    
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym108_2986431038) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431040 = HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym108_2986431132 == 0)) {
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    if (ctxHEX60gensym108_2986431037.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym108_2986431037, keyHEX60gensym108_2986431131);
    if (false) {
    markRed_3003136501(ctxHEX60gensym108_2986431037.depGraph, keyHEX60gensym108_2986431131, []);
    }
    
    if ((ctxHEX60gensym108_2986431037.enableLogging && contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038)));
    }
    
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym108_2986431038) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431040 = HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym108_2986431037.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym108_2986431037, keyHEX60gensym108_2986431131, true) == 0)) {
    if ((ctxHEX60gensym108_2986431037.enableLogging && contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038)));
    }
    
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym108_2986431038) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431040 = HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym108_2986431037.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym108_2986431037, keyHEX60gensym108_2986431131);
      if (false) {
      markRed_3003136501(ctxHEX60gensym108_2986431037.depGraph, keyHEX60gensym108_2986431131, []);
      }
      
      if ((ctxHEX60gensym108_2986431037.enableLogging && contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038)));
      }
      
      if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym108_2986431038) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986431040 = HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym108_2986431132 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,56,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym108_2986431037.enableLogging && contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070230964(HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038)));
    }
    
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    force_2986414319(ctxHEX60gensym108_2986431037, keyHEX60gensym108_2986431131);
    }
    
    if (!(contains_2986430580(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym108_2986431038) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986431040 = HEX5BHEX5D_2986430773(ctxHEX60gensym108_2986431037.queryCacheSymbolType, inputHEX60gensym108_2986431038);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym108_2986431037.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym108_2986431037.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym108_2986431037.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym108_2986431037.statsSymbolType.time = addInt(ctxHEX60gensym108_2986431037.statsSymbolType.time, elapsed_2281701439(timerHEX60gensym108_2986431041));
    }
  };

  return result_2986431040;

}

function none_2986417442() {
  var result_2986417448 = ({val: null});

  return result_2986417448;

}

function none_2986417439() {
  var result_2986417441 = ({val: null});

    result_2986417441 = nimCopy(result_2986417441, none_2986417442(), NTI2986387392);

  return result_2986417441;

}

function isNone_2986453594(self_2986453596) {
  var result_2986453597 = false;

    result_2986453597 = (self_2986453596.val == null);

  return result_2986453597;

}

function get_2986453637(self_2986453639) {
  var result_2986453640 = null;
  var result_2986453640_Idx = 0;

  BeforeRet: {
    if (isNone_2986453594(self_2986453639)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2986453640 = self_2986453639; result_2986453640_Idx = "val";
    break BeforeRet;
  };

  return [result_2986453640, result_2986453640_Idx];

}

function some_2986417426(val_2986417428) {
  var result_2986417429 = ({val: null});

    if (!(!((val_2986417428 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2986417429.val = val_2986417428;

  return result_2986417429;

}

function last_2969567490(node_2969567491) {
  var result_2969567492 = null;

  BeforeRet: {
    if ((0 < len_2969567320(node_2969567491))) {
    result_2969567492 = HEX5BHEX5D_2969567316(node_2969567491, subInt(len_2969567320(node_2969567491), 1));
    break BeforeRet;
    }
    
    result_2969567492 = null;
    break BeforeRet;
  };

  return result_2969567492;

}

function isSome_2986453764(self_2986453766) {
  var result_2986453767 = false;

    result_2986453767 = !((self_2986453766.val == null));

  return result_2986453767;

}

function get_2986453755(self_2986453757, otherwise_2986453758) {
    var Temporary1;

  var result_2986453759 = null;

    if (isSome_2986453764(self_2986453757)) {
    Temporary1 = self_2986453757.val;
    }
    else {
    Temporary1 = otherwise_2986453758;
    }
    
    result_2986453759 = Temporary1;

  return result_2986453759;

}

function rawGet_2986357812(t_2986357815, key_2986357816, hc_2986357817, hc_2986357817_Idx) {
  var result_2986357818 = 0;

  BeforeRet: {
    hc_2986357817[hc_2986357817_Idx] = hash_2969569587(key_2986357816);
    if ((hc_2986357817[hc_2986357817_Idx] == 0)) {
    hc_2986357817[hc_2986357817_Idx] = 314159265;
    }
    
    if (((t_2986357815.data).length == 0)) {
    result_2986357818 = -1;
    break BeforeRet;
    }
    
    var h_2986357904 = (hc_2986357817[hc_2986357817_Idx] & (t_2986357815.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986357815.data[chckIndx(h_2986357904, 0, (t_2986357815.data).length - 1)].Field0)) break Label2;
          if (((t_2986357815.data[chckIndx(h_2986357904, 0, (t_2986357815.data).length - 1)].Field0 == hc_2986357817[hc_2986357817_Idx]) && (t_2986357815.data[chckIndx(h_2986357904, 0, (t_2986357815.data).length - 1)].Field1 == key_2986357816))) {
          result_2986357818 = h_2986357904;
          break BeforeRet;
          }
          
          h_2986357904 = nextTry_1308622883(h_2986357904, (t_2986357815.data).length - 1);
        }
    };
    result_2986357818 = subInt(-1, h_2986357904);
  };

  return result_2986357818;

}

function hasKey_2986423687(t_2986423690, key_2986423691) {
  var result_2986423692 = false;

    var hc_2986423693 = [0];
    result_2986423692 = (0 <= rawGet_2986357812(t_2986423690, key_2986423691, hc_2986423693, 0));

  return result_2986423692;

}

function contains_2986423681(t_2986423684, key_2986423685) {
  var result_2986423686 = false;

  BeforeRet: {
    result_2986423686 = hasKey_2986423687(t_2986423684, key_2986423685);
    break BeforeRet;
  };

  return result_2986423686;

}

function contains_2986423587(cache_2986423590, key_2986423591) {
  var result_2986423592 = false;

    result_2986423592 = contains_2986423681(cache_2986423590.table, key_2986423591);

  return result_2986423592;

}

function isSome_3070232117(self_3070232119) {
  var result_3070232120 = false;

    result_3070232120 = !((self_3070232119.val == null));

  return result_3070232120;

}

function HEX24_2986397338(self_2986397340) {
  var result_2986397341 = [[]];

    if (isSome_3070232117(self_2986397340)) {
    result_2986397341[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2986397349(result_2986397341, 0, self_2986397340.val);
    result_2986397341[0].push.apply(result_2986397341[0], [41]);;
    }
    else {
      result_2986397341[0] = nimCopy(null, [110,111,110,101,40,83,121,109,98,111,108,41], NTI33554449);
    }
    

  return result_2986397341[0];

}

function HEX5BHEX5D_2986423866(t_2986423869, key_2986423870) {
  var result_2986423871 = null;
  var result_2986423871_Idx = 0;

    var hcHEX60gensym22_2986423872 = [0];
    var indexHEX60gensym22_2986423879 = rawGet_2986357812(t_2986423869, key_2986423870, hcHEX60gensym22_2986423872, 0);
    if ((0 <= indexHEX60gensym22_2986423879)) {
    result_2986423871 = t_2986423869.data[chckIndx(indexHEX60gensym22_2986423879, 0, (t_2986423869.data).length - 1)]; result_2986423871_Idx = "Field2";
    }
    else {
    raiseKeyError_2986417348(key_2986423870);
    }
    

  return [result_2986423871, result_2986423871_Idx];

}

function remove_2986361241(L_2986361243, n_2986361244) {
    if ((n_2986361244 == L_2986361243.tail)) {
    L_2986361243.tail = n_2986361244.prev;
    }
    
    if ((n_2986361244 == L_2986361243.head)) {
    L_2986361243.head = n_2986361244.next;
    }
    
    if (!((n_2986361244.next == null))) {
    n_2986361244.next.prev = n_2986361244.prev;
    }
    
    if (!((n_2986361244.prev == null))) {
    n_2986361244.prev.next = n_2986361244.next;
    }
    

  
}

function prepend_2986359988(L_2986359990, n_2986359991) {
    n_2986359991.prev = null;
    n_2986359991.next = L_2986359990.head;
    if (!((L_2986359990.head == null))) {
    if (!((L_2986359990.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986359990.head.prev = n_2986359991;
    }
    
    L_2986359990.head = n_2986359991;
    if ((L_2986359990.tail == null)) {
    L_2986359990.tail = n_2986359991;
    }
    

  
}

function HEX5BHEX5D_2986423780(cache_2986423783, key_2986423784) {
    var Temporary1;

  var result_2986423785 = ({val: null});

    var node_2986423972 = (Temporary1 = HEX5BHEX5D_2986423866(cache_2986423783.table, key_2986423784), Temporary1)[0][Temporary1[1]];
    result_2986423785 = nimCopy(result_2986423785, node_2986423972.value.val, NTI3070231688);
    remove_2986361241(cache_2986423783.list, node_2986423972);
    prepend_2986359988(cache_2986423783.list, node_2986423972);

  return result_2986423785;

}

function computeSymbol_2986424064(ctxHEX60gensym100_2986424065, inputHEX60gensym100_2986424066, recordDependencyHEX60gensym100_2986424067) {
    var Temporary3;
    var Temporary5;

  var result_2986424069 = ({val: null});

  BeforeRet: {
    var timerHEX60gensym100_2986424070 = startTimer_2281701428();
    ctxHEX60gensym100_2986424065.statsSymbol.totalCalls = addInt(ctxHEX60gensym100_2986424065.statsSymbol.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym100_2986424159 = getItem_2986398161(inputHEX60gensym100_2986424066);
    var keyHEX60gensym100_2986424160 = {Field0: nimCopy(null, itemHEX60gensym100_2986424159, NTI3003121689), Field1: 2};
    if (recordDependencyHEX60gensym100_2986424067) {
    recordDependency_2986397948(ctxHEX60gensym100_2986424065, itemHEX60gensym100_2986424159, 2);
    }
    
    var colorHEX60gensym100_2986424161 = nodeColor_3003124149(ctxHEX60gensym100_2986424065.depGraph, keyHEX60gensym100_2986424160, 0);
    if (ctxHEX60gensym100_2986424065.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym100_2986424065.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108], [32], reprEnum(colorHEX60gensym100_2986424161, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym100_2986424159));
    }
    
    if ((colorHEX60gensym100_2986424161 == 2)) {
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    if (ctxHEX60gensym100_2986424065.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym100_2986424065, keyHEX60gensym100_2986424160);
    if (false) {
    markRed_3003136501(ctxHEX60gensym100_2986424065.depGraph, keyHEX60gensym100_2986424160, []);
    }
    
    if ((ctxHEX60gensym100_2986424065.enableLogging && contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397338(HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066)));
    }
    
    }
    else {
      if ((ctxHEX60gensym100_2986424065.enableLogging && contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986397338(HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066)));
      }
      
    }
    
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424066) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424069 = nimCopy(result_2986424069, HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066), NTI3070231688);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym100_2986424161 == 0)) {
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    if (ctxHEX60gensym100_2986424065.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym100_2986424065, keyHEX60gensym100_2986424160);
    if (false) {
    markRed_3003136501(ctxHEX60gensym100_2986424065.depGraph, keyHEX60gensym100_2986424160, []);
    }
    
    if ((ctxHEX60gensym100_2986424065.enableLogging && contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397338(HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066)));
    }
    
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424066) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424069 = nimCopy(result_2986424069, HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066), NTI3070231688);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym100_2986424065.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym100_2986424065, keyHEX60gensym100_2986424160, true) == 0)) {
    if ((ctxHEX60gensym100_2986424065.enableLogging && contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_2986397338(HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066)));
    }
    
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424066) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424069 = nimCopy(result_2986424069, HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066), NTI3070231688);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym100_2986424065.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym100_2986424065, keyHEX60gensym100_2986424160);
      if (false) {
      markRed_3003136501(ctxHEX60gensym100_2986424065.depGraph, keyHEX60gensym100_2986424160, []);
      }
      
      if ((ctxHEX60gensym100_2986424065.enableLogging && contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_2986397338(HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066)));
      }
      
      if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424066) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986424069 = nimCopy(result_2986424069, HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066), NTI3070231688);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym100_2986424161 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,48,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym100_2986424065.enableLogging && contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_2986397338(HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066)));
    }
    
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    force_2986414319(ctxHEX60gensym100_2986424065, keyHEX60gensym100_2986424160);
    }
    
    if (!(contains_2986423587(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_2969569239(inputHEX60gensym100_2986424066) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986424069 = nimCopy(result_2986424069, HEX5BHEX5D_2986423780(ctxHEX60gensym100_2986424065.queryCacheSymbol, inputHEX60gensym100_2986424066), NTI3070231688);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym100_2986424065.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym100_2986424065.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym100_2986424065.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym100_2986424065.statsSymbol.time = addInt(ctxHEX60gensym100_2986424065.statsSymbol.time, elapsed_2281701439(timerHEX60gensym100_2986424070));
    }
  };

  return result_2986424069;

}

function isNone_3070232145(self_3070232147) {
  var result_3070232148 = false;

    result_3070232148 = (self_3070232147.val == null);

  return result_3070232148;

}

function get_3070232137(self_3070232139) {
  var result_3070232140 = null;

    if (isNone_3070232145(self_3070232139)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3070232140 = self_3070232139["val"];

  return result_3070232140;

}

function formatValue_2986453910(result_2986453912, result_2986453912_Idx, value_2986453913, specifier_2986453914) {
    formatValue_721420459(result_2986453912, result_2986453912_Idx, HEX24_3070231676(value_2986453913), specifier_2986453914);

  
}

function mustRehash_2986446432(t_2986446434) {
  var result_2986446435 = false;

    if (!((t_2986446434.counter < (t_2986446434.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986446435 = ((mulInt((t_2986446434.data).length, 2) < mulInt(t_2986446434.counter, 3)) || (subInt((t_2986446434.data).length, t_2986446434.counter) < 4));

  return result_2986446435;

}

function rawInsert_2986447125(t_2986447129, data_2986447130, data_2986447130_Idx, key_2986447131, val_2986447132, hc_2986447133, h_2986447134) {
    data_2986447130[data_2986447130_Idx][chckIndx(h_2986447134, 0, (data_2986447130[data_2986447130_Idx]).length - 1)].Field1 = nimCopy(data_2986447130[data_2986447130_Idx][chckIndx(h_2986447134, 0, (data_2986447130[data_2986447130_Idx]).length - 1)].Field1, key_2986447131, NTI3003121692);
    data_2986447130[data_2986447130_Idx][chckIndx(h_2986447134, 0, (data_2986447130[data_2986447130_Idx]).length - 1)].Field2 = nimCopy(null, val_2986447132, NTI2986344784);
    data_2986447130[data_2986447130_Idx][chckIndx(h_2986447134, 0, (data_2986447130[data_2986447130_Idx]).length - 1)].Field0 = hc_2986447133;

  
}

function enlarge_2986446689(t_2986446692) {
    var n_2986446695 = [];
    n_2986446695 = new Array(chckRange(mulInt((t_2986446692.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986446692.data).length, 2), 0, 2147483647) ; ++i) { n_2986446695[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2986446692.data; t_2986446692.data = n_2986446695; n_2986446695 = Temporary1;    Label2: {
      var i_2986446793 = 0;
      var colontmp__2936013042 = 0;
      colontmp__2936013042 = (n_2986446695).length - 1;
      var res_2936013043 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013043 <= colontmp__2936013042)) break Label4;
            i_2986446793 = res_2936013043;
            var eh_2986446874 = n_2986446695[chckIndx(i_2986446793, 0, (n_2986446695).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986446874)) {
            var j_2986446878 = (eh_2986446874 & (t_2986446692.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986446692.data[chckIndx(j_2986446878, 0, (t_2986446692.data).length - 1)].Field0)) break Label6;
                  j_2986446878 = nextTry_1308622883(j_2986446878, (t_2986446692.data).length - 1);
                }
            };
            rawInsert_2986447125(t_2986446692, t_2986446692, "data", n_2986446695[chckIndx(i_2986446793, 0, (n_2986446695).length - 1)].Field1, n_2986446695[chckIndx(i_2986446793, 0, (n_2986446695).length - 1)].Field2, eh_2986446874, j_2986446878);
            }
            
            res_2936013043 = addInt(res_2936013043, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986447384(t_2986447387, key_2986447388, hc_2986447389) {
  var result_2986447390 = 0;

  BeforeRet: {
    if (((t_2986447387.data).length == 0)) {
    result_2986447390 = -1;
    break BeforeRet;
    }
    
    var h_2986447475 = (hc_2986447389 & (t_2986447387.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986447387.data[chckIndx(h_2986447475, 0, (t_2986447387.data).length - 1)].Field0)) break Label2;
          if (((t_2986447387.data[chckIndx(h_2986447475, 0, (t_2986447387.data).length - 1)].Field0 == hc_2986447389) && HEX3DHEX3D_3003124693(t_2986447387.data[chckIndx(h_2986447475, 0, (t_2986447387.data).length - 1)].Field1, key_2986447388))) {
          result_2986447390 = h_2986447475;
          break BeforeRet;
          }
          
          h_2986447475 = nextTry_1308622883(h_2986447475, (t_2986447387.data).length - 1);
        }
    };
    result_2986447390 = subInt(-1, h_2986447475);
  };

  return result_2986447390;

}

function HEX5BHEX5DHEX3D_2986446164(t_2986446167, key_2986446168, val_2986446169) {
    if (((t_2986446167.data).length == 0)) {
    var correctSizeHEX60gensym566_2986446252 = slotsNeeded_1308622891(32);
    t_2986446167.counter = 0;
    t_2986446167.data = new Array(chckRange(correctSizeHEX60gensym566_2986446252, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym566_2986446252, 0, 2147483647) ; ++i) { t_2986446167.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2986446257 = [0];
    var index_2986446264 = rawGet_2986443828(t_2986446167, key_2986446168, hc_2986446257, 0);
    if ((0 <= index_2986446264)) {
    t_2986446167.data[chckIndx(index_2986446264, 0, (t_2986446167.data).length - 1)].Field2 = nimCopy(null, val_2986446169, NTI2986344784);
    }
    else {
      if (((t_2986446167.data).length == 0)) {
      var correctSizeHEX60gensym569_2986446427 = slotsNeeded_1308622891(32);
      t_2986446167.counter = 0;
      t_2986446167.data = new Array(chckRange(correctSizeHEX60gensym569_2986446427, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym569_2986446427, 0, 2147483647) ; ++i) { t_2986446167.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2986446432(t_2986446167)) {
      enlarge_2986446689(t_2986446167);
      index_2986446264 = rawGetKnownHC_2986447384(t_2986446167, key_2986446168, hc_2986446257[0]);
      }
      
      index_2986446264 = subInt(-1, index_2986446264);
      rawInsert_2986447125(t_2986446167, t_2986446167, "data", key_2986446168, val_2986446169, hc_2986446257[0], index_2986446264);
      t_2986446167.counter = addInt(t_2986446167.counter, 1);
    }
    

  
}

function hasKey_2986447833(t_2986447836, key_2986447837) {
  var result_2986447838 = false;

    var hc_2986447839 = [0];
    result_2986447838 = (0 <= rawGet_2986444476(t_2986447836, key_2986447837, hc_2986447839, 0));

  return result_2986447838;

}

function contains_2986447827(t_2986447830, key_2986447831) {
  var result_2986447832 = false;

  BeforeRet: {
    result_2986447832 = hasKey_2986447833(t_2986447830, key_2986447831);
    break BeforeRet;
  };

  return result_2986447832;

}

function mustRehash_2986448177(t_2986448179) {
  var result_2986448180 = false;

    if (!((t_2986448179.counter < (t_2986448179.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986448180 = ((mulInt((t_2986448179.data).length, 2) < mulInt(t_2986448179.counter, 3)) || (subInt((t_2986448179.data).length, t_2986448179.counter) < 4));

  return result_2986448180;

}

function rawInsert_2986448870(t_2986448874, data_2986448875, data_2986448875_Idx, key_2986448876, val_2986448877, hc_2986448878, h_2986448879) {
    data_2986448875[data_2986448875_Idx][chckIndx(h_2986448879, 0, (data_2986448875[data_2986448875_Idx]).length - 1)].Field1 = nimCopy(data_2986448875[data_2986448875_Idx][chckIndx(h_2986448879, 0, (data_2986448875[data_2986448875_Idx]).length - 1)].Field1, key_2986448876, NTI2181038083);
    data_2986448875[data_2986448875_Idx][chckIndx(h_2986448879, 0, (data_2986448875[data_2986448875_Idx]).length - 1)].Field2 = nimCopy(data_2986448875[data_2986448875_Idx][chckIndx(h_2986448879, 0, (data_2986448875[data_2986448875_Idx]).length - 1)].Field2, val_2986448877, NTI2986344452);
    data_2986448875[data_2986448875_Idx][chckIndx(h_2986448879, 0, (data_2986448875[data_2986448875_Idx]).length - 1)].Field0 = hc_2986448878;

  
}

function enlarge_2986448434(t_2986448437) {
    var n_2986448440 = [];
    n_2986448440 = new Array(chckRange(mulInt((t_2986448437.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986448437.data).length, 2), 0, 2147483647) ; ++i) { n_2986448440[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    var Temporary1 = t_2986448437.data; t_2986448437.data = n_2986448440; n_2986448440 = Temporary1;    Label2: {
      var i_2986448538 = 0;
      var colontmp__2936013048 = 0;
      colontmp__2936013048 = (n_2986448440).length - 1;
      var res_2936013049 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013049 <= colontmp__2936013048)) break Label4;
            i_2986448538 = res_2936013049;
            var eh_2986448619 = n_2986448440[chckIndx(i_2986448538, 0, (n_2986448440).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986448619)) {
            var j_2986448623 = (eh_2986448619 & (t_2986448437.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986448437.data[chckIndx(j_2986448623, 0, (t_2986448437.data).length - 1)].Field0)) break Label6;
                  j_2986448623 = nextTry_1308622883(j_2986448623, (t_2986448437.data).length - 1);
                }
            };
            rawInsert_2986448870(t_2986448437, t_2986448437, "data", n_2986448440[chckIndx(i_2986448538, 0, (n_2986448440).length - 1)].Field1, n_2986448440[chckIndx(i_2986448538, 0, (n_2986448440).length - 1)].Field2, eh_2986448619, j_2986448623);
            }
            
            res_2936013049 = addInt(res_2936013049, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986449129(t_2986449132, key_2986449133, hc_2986449134) {
  var result_2986449135 = 0;

  BeforeRet: {
    if (((t_2986449132.data).length == 0)) {
    result_2986449135 = -1;
    break BeforeRet;
    }
    
    var h_2986449220 = (hc_2986449134 & (t_2986449132.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986449132.data[chckIndx(h_2986449220, 0, (t_2986449132.data).length - 1)].Field0)) break Label2;
          if (((t_2986449132.data[chckIndx(h_2986449220, 0, (t_2986449132.data).length - 1)].Field0 == hc_2986449134) && HEX3DHEX3D_2181038320(t_2986449132.data[chckIndx(h_2986449220, 0, (t_2986449132.data).length - 1)].Field1, key_2986449133))) {
          result_2986449135 = h_2986449220;
          break BeforeRet;
          }
          
          h_2986449220 = nextTry_1308622883(h_2986449220, (t_2986449132.data).length - 1);
        }
    };
    result_2986449135 = subInt(-1, h_2986449220);
  };

  return result_2986449135;

}

function HEX5BHEX5DHEX3D_2986447909(t_2986447912, key_2986447913, val_2986447914) {
    if (((t_2986447912.data).length == 0)) {
    var correctSizeHEX60gensym578_2986447997 = slotsNeeded_1308622891(32);
    t_2986447912.counter = 0;
    t_2986447912.data = new Array(chckRange(correctSizeHEX60gensym578_2986447997, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym578_2986447997, 0, 2147483647) ; ++i) { t_2986447912.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }    }
    
    var hc_2986448002 = [0];
    var index_2986448009 = rawGet_2986444476(t_2986447912, key_2986447913, hc_2986448002, 0);
    if ((0 <= index_2986448009)) {
    t_2986447912.data[chckIndx(index_2986448009, 0, (t_2986447912.data).length - 1)].Field2 = nimCopy(t_2986447912.data[chckIndx(index_2986448009, 0, (t_2986447912.data).length - 1)].Field2, val_2986447914, NTI2986344452);
    }
    else {
      if (((t_2986447912.data).length == 0)) {
      var correctSizeHEX60gensym581_2986448172 = slotsNeeded_1308622891(32);
      t_2986447912.counter = 0;
      t_2986447912.data = new Array(chckRange(correctSizeHEX60gensym581_2986448172, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym581_2986448172, 0, 2147483647) ; ++i) { t_2986447912.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }      }
      
      if (mustRehash_2986448177(t_2986447912)) {
      enlarge_2986448434(t_2986447912);
      index_2986448009 = rawGetKnownHC_2986449129(t_2986447912, key_2986447913, hc_2986448002[0]);
      }
      
      index_2986448009 = subInt(-1, index_2986448009);
      rawInsert_2986448870(t_2986447912, t_2986447912, "data", key_2986447913, val_2986447914, hc_2986448002[0], index_2986448009);
      t_2986447912.counter = addInt(t_2986447912.counter, 1);
    }
    

  
}

function hasKey_2986449649(t_2986449652, key_2986449653) {
  var result_2986449654 = false;

    var hc_2986449655 = [0];
    result_2986449654 = (0 <= rawGet_2986444983(t_2986449652, key_2986449653, hc_2986449655, 0));

  return result_2986449654;

}

function contains_2986449643(t_2986449646, key_2986449647) {
  var result_2986449648 = false;

  BeforeRet: {
    result_2986449648 = hasKey_2986449649(t_2986449646, key_2986449647);
    break BeforeRet;
  };

  return result_2986449648;

}

function mustRehash_2986450082(t_2986450084) {
  var result_2986450085 = false;

    if (!((t_2986450084.counter < (t_2986450084.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986450085 = ((mulInt((t_2986450084.data).length, 2) < mulInt(t_2986450084.counter, 3)) || (subInt((t_2986450084.data).length, t_2986450084.counter) < 4));

  return result_2986450085;

}

function rawInsert_2986450775(t_2986450779, data_2986450780, data_2986450780_Idx, key_2986450781, val_2986450782, hc_2986450783, h_2986450784) {
    data_2986450780[data_2986450780_Idx][chckIndx(h_2986450784, 0, (data_2986450780[data_2986450780_Idx]).length - 1)].Field1 = nimCopy(data_2986450780[data_2986450780_Idx][chckIndx(h_2986450784, 0, (data_2986450780[data_2986450780_Idx]).length - 1)].Field1, key_2986450781, NTI3003121692);
    data_2986450780[data_2986450780_Idx][chckIndx(h_2986450784, 0, (data_2986450780[data_2986450780_Idx]).length - 1)].Field2 = nimCopy(null, val_2986450782, NTI2986344456);
    data_2986450780[data_2986450780_Idx][chckIndx(h_2986450784, 0, (data_2986450780[data_2986450780_Idx]).length - 1)].Field0 = hc_2986450783;

  
}

function enlarge_2986450339(t_2986450342) {
    var n_2986450345 = [];
    n_2986450345 = new Array(chckRange(mulInt((t_2986450342.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986450342.data).length, 2), 0, 2147483647) ; ++i) { n_2986450345[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    var Temporary1 = t_2986450342.data; t_2986450342.data = n_2986450345; n_2986450345 = Temporary1;    Label2: {
      var i_2986450443 = 0;
      var colontmp__2936013054 = 0;
      colontmp__2936013054 = (n_2986450345).length - 1;
      var res_2936013055 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013055 <= colontmp__2936013054)) break Label4;
            i_2986450443 = res_2936013055;
            var eh_2986450524 = n_2986450345[chckIndx(i_2986450443, 0, (n_2986450345).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986450524)) {
            var j_2986450528 = (eh_2986450524 & (t_2986450342.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986450342.data[chckIndx(j_2986450528, 0, (t_2986450342.data).length - 1)].Field0)) break Label6;
                  j_2986450528 = nextTry_1308622883(j_2986450528, (t_2986450342.data).length - 1);
                }
            };
            rawInsert_2986450775(t_2986450342, t_2986450342, "data", n_2986450345[chckIndx(i_2986450443, 0, (n_2986450345).length - 1)].Field1, n_2986450345[chckIndx(i_2986450443, 0, (n_2986450345).length - 1)].Field2, eh_2986450524, j_2986450528);
            }
            
            res_2936013055 = addInt(res_2936013055, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986451025(t_2986451028, key_2986451029, hc_2986451030) {
  var result_2986451031 = 0;

  BeforeRet: {
    if (((t_2986451028.data).length == 0)) {
    result_2986451031 = -1;
    break BeforeRet;
    }
    
    var h_2986451116 = (hc_2986451030 & (t_2986451028.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986451028.data[chckIndx(h_2986451116, 0, (t_2986451028.data).length - 1)].Field0)) break Label2;
          if (((t_2986451028.data[chckIndx(h_2986451116, 0, (t_2986451028.data).length - 1)].Field0 == hc_2986451030) && HEX3DHEX3D_3003124693(t_2986451028.data[chckIndx(h_2986451116, 0, (t_2986451028.data).length - 1)].Field1, key_2986451029))) {
          result_2986451031 = h_2986451116;
          break BeforeRet;
          }
          
          h_2986451116 = nextTry_1308622883(h_2986451116, (t_2986451028.data).length - 1);
        }
    };
    result_2986451031 = subInt(-1, h_2986451116);
  };

  return result_2986451031;

}

function HEX5BHEX5DHEX3D_2986449814(t_2986449817, key_2986449818, val_2986449819) {
    if (((t_2986449817.data).length == 0)) {
    var correctSizeHEX60gensym590_2986449902 = slotsNeeded_1308622891(32);
    t_2986449817.counter = 0;
    t_2986449817.data = new Array(chckRange(correctSizeHEX60gensym590_2986449902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym590_2986449902, 0, 2147483647) ; ++i) { t_2986449817.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }    }
    
    var hc_2986449907 = [0];
    var index_2986449914 = rawGet_2986444983(t_2986449817, key_2986449818, hc_2986449907, 0);
    if ((0 <= index_2986449914)) {
    t_2986449817.data[chckIndx(index_2986449914, 0, (t_2986449817.data).length - 1)].Field2 = nimCopy(null, val_2986449819, NTI2986344456);
    }
    else {
      if (((t_2986449817.data).length == 0)) {
      var correctSizeHEX60gensym593_2986450077 = slotsNeeded_1308622891(32);
      t_2986449817.counter = 0;
      t_2986449817.data = new Array(chckRange(correctSizeHEX60gensym593_2986450077, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym593_2986450077, 0, 2147483647) ; ++i) { t_2986449817.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }      }
      
      if (mustRehash_2986450082(t_2986449817)) {
      enlarge_2986450339(t_2986449817);
      index_2986449914 = rawGetKnownHC_2986451025(t_2986449817, key_2986449818, hc_2986449907[0]);
      }
      
      index_2986449914 = subInt(-1, index_2986449914);
      rawInsert_2986450775(t_2986449817, t_2986449817, "data", key_2986449818, val_2986449819, hc_2986449907[0], index_2986449914);
      t_2986449817.counter = addInt(t_2986449817.counter, 1);
    }
    

  
}

function HEX5BHEX5D_2986451547(t_2986451550, key_2986451551) {
  var result_2986451552 = null;
  var result_2986451552_Idx = 0;

    var hcHEX60gensym22_2986451553 = [0];
    var indexHEX60gensym22_2986451560 = rawGet_2986444983(t_2986451550, key_2986451551, hcHEX60gensym22_2986451553, 0);
    if ((0 <= indexHEX60gensym22_2986451560)) {
    result_2986451552 = t_2986451550.data[chckIndx(indexHEX60gensym22_2986451560, 0, (t_2986451550.data).length - 1)]; result_2986451552_Idx = "Field2";
    }
    else {
    raiseKeyError_3003132465(key_2986451551);
    }
    

  return [result_2986451552, result_2986451552_Idx];

}

function del_2986451720(t_2986451723, key_2986451724) {
    var hc_2986451725 = [0];
    var i_2986451732 = rawGet_2986443828(t_2986451723, key_2986451724, hc_2986451725, 0);
    var mskHEX60gensym36_2986451736 = (t_2986451723.data).length - 1;
    if ((0 <= i_2986451732)) {
    t_2986451723.counter = subInt(t_2986451723.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986451743 = i_2986451732;
            var rHEX60gensym36_2986451744 = jHEX60gensym36_2986451743;
            t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)].Field0 = 0;
            t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)].Field1 = nimCopy(t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)].Field2 = nimCopy(null, [], NTI2986344784);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986451732 = (addInt(i_2986451732, 1) & mskHEX60gensym36_2986451736);
                  if (isEmpty_1308622877(t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986451744 = (t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)].Field0 & mskHEX60gensym36_2986451736);
                  if (!(((((rHEX60gensym36_2986451744 <= i_2986451732) && (jHEX60gensym36_2986451743 < rHEX60gensym36_2986451744)) || ((jHEX60gensym36_2986451743 < rHEX60gensym36_2986451744) && (i_2986451732 < jHEX60gensym36_2986451743))) || ((i_2986451732 < jHEX60gensym36_2986451743) && (rHEX60gensym36_2986451744 <= i_2986451732))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986451723.data[chckIndx(jHEX60gensym36_2986451743, 0, (t_2986451723.data).length - 1)] = nimCopy(t_2986451723.data[chckIndx(jHEX60gensym36_2986451743, 0, (t_2986451723.data).length - 1)], t_2986451723.data[chckIndx(i_2986451732, 0, (t_2986451723.data).length - 1)], NTI2986344796);
          }
      };
    };
    }
    

  
}

function computeTypeImpl_2986345267(ctx_2986345268, node_2986345269) {
      var Temporary4;
      var Temporary16;
      var Temporary19;
      var Temporary20;
      var Temporary21;
        var Temporary22;
        var Temporary23;
        var Temporary24;
        var Temporary25;
        var Temporary26;
        var Temporary27;
      var Temporary29;
                  var Temporary34;
                    var Temporary35;
                  var Temporary36;
                  var Temporary37;
                var Temporary39;
                var Temporary40;
      var Temporary41;
      var Temporary44;
      var Temporary48;
      var Temporary50;
                var Temporary60;
        var Temporary61;
        var Temporary64;
        var Temporary66;
            var Temporary71;

  var result_2986443725 = null;

  BeforeRet: {
    var logQueryHEX60gensym555_2986443727 = (ctx_2986345268.enableLogging || ctx_2986345268.enableQueryLogging);
    if (logQueryHEX60gensym555_2986443727) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym555_2986443727) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345269) || []));
    }
    
    try {
    var key_2986443738 = nimCopy(null, getTypeKey_2986416887(ctx_2986345268, getItem_2986398161(node_2986345269)), NTI3003121692);
    if (contains_2986443815(ctx_2986345268.diagnosticsPerQuery, key_2986443738)) {
    Label3: {
      var id_2986444388 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var colontmp__2936012893 = [];
      colontmp__2936012893 = (Temporary4 = HEX5BHEX5D_2986444260(ctx_2986345268.diagnosticsPerQuery, key_2986443738), Temporary4)[0][Temporary4[1]];
      var i_2936012895 = 0;
      var L_2936012896 = (colontmp__2936012893).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2936012895 < L_2936012896)) break Label6;
            id_2986444388 = colontmp__2936012893[chckIndx(i_2936012895, 0, (colontmp__2936012893).length - 1)];
            del_2986444977(HEX5BHEX5D_2986444469(ctx_2986345268.diagnosticsPerNode, id_2986444388).queries, key_2986443738);
            i_2936012895 = addInt(i_2936012895, 1);
            if (!(((colontmp__2936012893).length == L_2936012896))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    var diagnostics_2986446091 = [];
    var ids_2986446096 = [];
    try {
    Label8: {
      var expr_2986452469 = node_2986345269;
      var pos_2986452470 = 0;
      var _ = pos_2986452470;
      if ((expr_2986452469.kind == 0)) {
      result_2986443725 = voidType_3070230940();
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 2)) {
++excHandler;
      try {
      var _ = nsuParseInt(node_2986345269.text);
      result_2986443725 = intType_3070230942();
      break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      }
      else {
      if ((expr_2986452469.kind == 3)) {
      result_2986443725 = stringType_3070230944();
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 12)) {
      result_2986443725 = voidType_3070230940();
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 11)) {
      if ((len_2969567320(node_2986345269) < 3)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var params_2986452493 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      recordDependency_2986397948(ctx_2986345268, getItem_2986398161(params_2986452493), -1);
      var returnTypeNode_2986452494 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      var paramTypes_2986452499 = [];
      var ok_2986452500 = true;
      Label10: {
        var param_2986452504 = null;
        var i_2936012906 = 0;
        var L_2936012907 = (params_2986452493.children).length;
        Label11: {
            Label12: while (true) {
            if (!(i_2936012906 < L_2936012907)) break Label12;
              param_2986452504 = params_2986452493.children[chckIndx(i_2936012906, 0, (params_2986452493.children).length - 1)];
              Label13: {
                var paramType_2986452505 = computeType_2986417458(ctx_2986345268, param_2986452504, true);
                if ((paramType_2986452505.kind == 0)) {
                ok_2986452500 = false;
                break Label13;
                }
                
                paramTypes_2986452499.push(paramType_2986452505);;
              };
              i_2936012906 = addInt(i_2936012906, 1);
              if (!(((params_2986452493.children).length == L_2936012907))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      var returnTypeType_2986452514 = computeType_2986417458(ctx_2986345268, returnTypeNode_2986452494, true);
      if ((returnTypeType_2986452514.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((returnTypeType_2986452514.kind == 6))) {
      var Temporary14 = nimCopy(null, returnTypeNode_2986452494.id, NTI2181038083);
      ids_2986446096.push(Temporary14);;
      var fmtRes_2986452531 = [mnewString(0)];
      fmtRes_2986452531[0].push.apply(fmtRes_2986452531[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2986452532(fmtRes_2986452531, 0, returnTypeType_2986452514, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452531[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var returnTypeValue_2986452541 = computeValue_2986420934(ctx_2986345268, returnTypeNode_2986452494, true);
      if ((returnTypeValue_2986452541.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((returnTypeValue_2986452541.kind == 6))) {
      var Temporary15 = nimCopy(null, returnTypeNode_2986452494.id, NTI2181038083);
      ids_2986446096.push(Temporary15);;
      var fmtRes_2986452558 = [mnewString(0)];
      fmtRes_2986452558[0].push.apply(fmtRes_2986452558[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3120563615(fmtRes_2986452558, 0, returnTypeValue_2986452541, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452558[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary16 = returnTypeValue_2986452541;
      if (ConstSet67[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3070230534)); }
      var returnType_2986452568 = Temporary16.typ;
      result_2986443725 = newFunctionType_3070230946(paramTypes_2986452499, returnType_2986452568);
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 8)) {
      if ((len_2969567320(node_2986345269) == 0)) {
      var Temporary17 = nimCopy(null, node_2986345269.id, NTI2181038083);
      ids_2986446096.push(Temporary17);;
      var fmtRes_2986452581 = mnewString(0);
      fmtRes_2986452581.push.apply(fmtRes_2986452581, [69,109,112,116,121,32,99,97,108,108,32,110,111,100,101]);;
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452581, NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var function_2986452586 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var functionType_2986452587 = computeType_2986417458(ctx_2986345268, function_2986452586, true);
      if ((functionType_2986452587.kind == 0)) {
      result_2986443725 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      if (!((functionType_2986452587.kind == 4))) {
      var Temporary18 = nimCopy(null, function_2986452586.id, NTI2181038083);
      ids_2986446096.push(Temporary18);;
      var fmtRes_2986452604 = [mnewString(0)];
      fmtRes_2986452604[0].push.apply(fmtRes_2986452604[0], [84,114,121,105,110,103,32,116,111,32,99,97,108,108,32,110,111,110,45,102,117,110,99,116,105,111,110,32,116,121,112,101,32]);;
      formatValue_2986452532(fmtRes_2986452604, 0, functionType_2986452587, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452604[0], NTI33554449)});;
      result_2986443725 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var numArgs_2986452614 = subInt(len_2969567320(node_2986345269), 1);
      var Temporary21 = functionType_2986452587;
      if (ConstSet68[Temporary21.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary21.kind, NTI3070230531)); }
      if (!(0 < (Temporary21.paramTypes).length)) Temporary20 = false; else {        var Temporary22 = functionType_2986452587;
        if (ConstSet75[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3070230531)); }
        var Temporary23 = functionType_2986452587;
        if (ConstSet76[Temporary23.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary23.kind, NTI3070230531)); }
        Temporary20 = HEX3DHEX3D_3070231086((Temporary24 = Temporary22.paramTypes, Temporary24)[chckIndx((Temporary23.paramTypes).length - 1, 0, (Temporary24).length - 1)], anyType_3070230961(true));      }      if (!Temporary20) Temporary19 = false; else {        var Temporary25 = functionType_2986452587;
        if (ConstSet77[Temporary25.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary25.kind, NTI3070230531)); }
        Temporary19 = (subInt((Temporary25.paramTypes).length, 1) <= numArgs_2986452614);      }      var isValidOpenAnyCall_2986452624 = Temporary19;
        var Temporary27 = functionType_2986452587;
        if (ConstSet78[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230531)); }
        if (!!((numArgs_2986452614 == (Temporary27.paramTypes).length))) Temporary26 = false; else {          Temporary26 = !(isValidOpenAnyCall_2986452624);        }      if (Temporary26) {
      var Temporary28 = nimCopy(null, node_2986345269.id, NTI2181038083);
      ids_2986446096.push(Temporary28);;
      var fmtRes_2986452636 = [mnewString(0)];
      fmtRes_2986452636[0].push.apply(fmtRes_2986452636[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,46,32,69,120,112,101,99,116,101,100,32]);;
      var Temporary29 = functionType_2986452587;
      if (ConstSet79[Temporary29.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary29.kind, NTI3070230531)); }
      formatValue_2332033544(fmtRes_2986452636, 0, (Temporary29.paramTypes).length, []);
      fmtRes_2986452636[0].push.apply(fmtRes_2986452636[0], [32,103,111,116,32]);;
      formatValue_2332033544(fmtRes_2986452636, 0, numArgs_2986452614, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452636[0], NTI33554449)});;
      result_2986443725 = {kind: 0, open: false, returnType: null, paramTypes: []};
      break BeforeRet;
      }
      
      var allArgsOk_2986452654 = true;
      Label30: {
        var i_2986452659 = 0;
        var res_2936012911 = 1;
        Label31: {
            Label32: while (true) {
            if (!(res_2936012911 <= numArgs_2986452614)) break Label32;
              i_2986452659 = res_2936012911;
              Label33: {
                var argType_2986452660 = computeType_2986417458(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, i_2986452659), true);
                if ((argType_2986452660.kind == 0)) {
                allArgsOk_2986452654 = false;
                break Label33;
                }
                
                  if (!isValidOpenAnyCall_2986452624) Temporary34 = false; else {                    var Temporary35 = functionType_2986452587;
                    if (ConstSet80[Temporary35.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary35.kind, NTI3070230531)); }
                    Temporary34 = ((Temporary35.paramTypes).length - 1 < i_2986452659);                  }                if (Temporary34) {
                break Label33;
                }
                
                  var Temporary36 = functionType_2986452587;
                  if (ConstSet81[Temporary36.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary36.kind, NTI3070230531)); }
                if (!(HEX3DHEX3D_3070231086(argType_2986452660, (Temporary37 = Temporary36.paramTypes, Temporary37)[chckIndx(subInt(i_2986452659, 1), 0, (Temporary37).length - 1)]))) {
                var Temporary38 = nimCopy(null, HEX5BHEX5D_2969567316(node_2986345269, i_2986452659).id, NTI2181038083);
                ids_2986446096.push(Temporary38);;
                var fmtRes_2986452676 = [mnewString(0)];
                fmtRes_2986452676[0].push.apply(fmtRes_2986452676[0], [65,114,103,117,109,101,110,116,32]);;
                formatValue_2332033544(fmtRes_2986452676, 0, i_2986452659, []);
                fmtRes_2986452676[0].push.apply(fmtRes_2986452676[0], [32,104,97,115,32,116,104,101,32,119,114,111,110,103,32,116,121,112,101,46,32,69,120,112,101,99,116,101,100,32]);;
                var Temporary39 = functionType_2986452587;
                if (ConstSet82[Temporary39.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary39.kind, NTI3070230531)); }
                formatValue_2986452532(fmtRes_2986452676, 0, (Temporary40 = Temporary39.paramTypes, Temporary40)[chckIndx(subInt(i_2986452659, 1), 0, (Temporary40).length - 1)], []);
                fmtRes_2986452676[0].push.apply(fmtRes_2986452676[0], [32,103,111,116,32]);;
                formatValue_2986452532(fmtRes_2986452676, 0, argType_2986452660, []);
                diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452676[0], NTI33554449)});;
                allArgsOk_2986452654 = false;
                }
                
              };
              res_2936012911 = addInt(res_2936012911, 1);
            }
        };
      };
      if (!(allArgsOk_2986452654)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary41 = functionType_2986452587;
      if (ConstSet83[Temporary41.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary41.kind, NTI3070230531)); }
      result_2986443725 = Temporary41.returnType;
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 4)) {
      if ((len_2969567320(node_2986345269) == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      result_2986443725 = computeType_2986417458(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, 0), true);
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 5)) {
      if ((len_2969567320(node_2986345269) < 1)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNode_2986452704 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var typ_2986452705 = voidType_3070230940();
      if (!((typeNode_2986452704.kind == 0))) {
      var typeNodeType_2986452710 = computeType_2986417458(ctx_2986345268, typeNode_2986452704, true);
      if ((typeNodeType_2986452710.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2986452710.kind == 6))) {
      var Temporary42 = nimCopy(null, typeNode_2986452704.id, NTI2181038083);
      ids_2986446096.push(Temporary42);;
      var fmtRes_2986452727 = [mnewString(0)];
      fmtRes_2986452727[0].push.apply(fmtRes_2986452727[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2986452532(fmtRes_2986452727, 0, typeNodeType_2986452710, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452727[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNodeValue_2986452737 = computeValue_2986420934(ctx_2986345268, typeNode_2986452704, true);
      if ((typeNodeValue_2986452737.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2986452737.kind == 6))) {
      var Temporary43 = nimCopy(null, typeNode_2986452704.id, NTI2181038083);
      ids_2986446096.push(Temporary43);;
      var fmtRes_2986452754 = [mnewString(0)];
      fmtRes_2986452754[0].push.apply(fmtRes_2986452754[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3120563615(fmtRes_2986452754, 0, typeNodeValue_2986452737, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452754[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary44 = typeNodeValue_2986452737;
      if (ConstSet84[Temporary44.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary44.kind, NTI3070230534)); }
      typ_2986452705 = Temporary44.typ;
      }
      
      if ((2 <= len_2969567320(node_2986345269))) {
      var valueNode_2986452764 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      if (!((valueNode_2986452764.kind == 0))) {
      var valueNodeType_2986452769 = computeType_2986417458(ctx_2986345268, valueNode_2986452764, true);
      if ((valueNodeType_2986452769.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if ((typ_2986452705.kind == 1)) {
      typ_2986452705 = valueNodeType_2986452769;
      }
      
      if (!(HEX3DHEX3D_3070231086(valueNodeType_2986452769, typ_2986452705))) {
      var Temporary45 = nimCopy(null, valueNode_2986452764.id, NTI2181038083);
      ids_2986446096.push(Temporary45);;
      var fmtRes_2986452786 = [mnewString(0)];
      fmtRes_2986452786[0].push.apply(fmtRes_2986452786[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2986452532(fmtRes_2986452786, 0, typ_2986452705, []);
      fmtRes_2986452786[0].push.apply(fmtRes_2986452786[0], [44,32,103,111,116,32]);;
      formatValue_2986452532(fmtRes_2986452786, 0, valueNodeType_2986452769, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452786[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2986443725 = typ_2986452705;
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 6)) {
      if ((len_2969567320(node_2986345269) < 1)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNode_2986452805 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var typ_2986452806 = voidType_3070230940();
      if (!((typeNode_2986452805.kind == 0))) {
      var typeNodeType_2986452811 = computeType_2986417458(ctx_2986345268, typeNode_2986452805, true);
      if ((typeNodeType_2986452811.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeType_2986452811.kind == 6))) {
      var Temporary46 = nimCopy(null, typeNode_2986452805.id, NTI2181038083);
      ids_2986446096.push(Temporary46);;
      var fmtRes_2986452828 = [mnewString(0)];
      fmtRes_2986452828[0].push.apply(fmtRes_2986452828[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,44,32,103,111,116,32]);;
      formatValue_2986452532(fmtRes_2986452828, 0, typeNodeType_2986452811, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452828[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var typeNodeValue_2986452838 = computeValue_2986420934(ctx_2986345268, typeNode_2986452805, true);
      if ((typeNodeValue_2986452838.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((typeNodeValue_2986452838.kind == 6))) {
      var Temporary47 = nimCopy(null, typeNode_2986452805.id, NTI2181038083);
      ids_2986446096.push(Temporary47);;
      var fmtRes_2986452855 = [mnewString(0)];
      fmtRes_2986452855[0].push.apply(fmtRes_2986452855[0], [69,120,112,101,99,116,101,100,32,116,121,112,101,32,118,97,108,117,101,44,32,103,111,116,32]);;
      formatValue_3120563615(fmtRes_2986452855, 0, typeNodeValue_2986452838, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452855[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var Temporary48 = typeNodeValue_2986452838;
      if (ConstSet85[Temporary48.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary48.kind, NTI3070230534)); }
      typ_2986452806 = Temporary48.typ;
      }
      
      if ((2 <= len_2969567320(node_2986345269))) {
      var valueNode_2986452865 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      if (!((valueNode_2986452865.kind == 0))) {
      var valueNodeType_2986452870 = computeType_2986417458(ctx_2986345268, valueNode_2986452865, true);
      if ((valueNodeType_2986452870.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if ((typ_2986452806.kind == 1)) {
      typ_2986452806 = valueNodeType_2986452870;
      }
      
      if (!(HEX3DHEX3D_3070231086(valueNodeType_2986452870, typ_2986452806))) {
      var Temporary49 = nimCopy(null, valueNode_2986452865.id, NTI2181038083);
      ids_2986446096.push(Temporary49);;
      var fmtRes_2986452887 = [mnewString(0)];
      fmtRes_2986452887[0].push.apply(fmtRes_2986452887[0], [69,120,112,101,99,116,101,100,32]);;
      formatValue_2986452532(fmtRes_2986452887, 0, typ_2986452806, []);
      fmtRes_2986452887[0].push.apply(fmtRes_2986452887[0], [44,32,103,111,116,32]);;
      formatValue_2986452532(fmtRes_2986452887, 0, valueNodeType_2986452870, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986452887[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      }
      
      }
      
      result_2986443725 = typ_2986452806;
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 1)) {
      var id_2986452906 = nimCopy(null, node_2986345269.reff, NTI2181038083);
      var symbols_2986452907 = computeSymbols_2986427564(ctx_2986345268, node_2986345269, true);
      if (contains_2986452984(symbols_2986452907, id_2986452906)) {
      var symbol_2986453511 = (Temporary50 = HEX5BHEX5D_2986453239(symbols_2986452907, id_2986452906), Temporary50)[0][Temporary50[1]];
      result_2986443725 = computeSymbolType_2986431036(ctx_2986345268, symbol_2986453511, true);
      break BeforeRet;
      }
      
      var Temporary51 = nimCopy(null, node_2986345269.id, NTI2181038083);
      ids_2986446096.push(Temporary51);;
      var fmtRes_2986453520 = [mnewString(0)];
      fmtRes_2986453520[0].push.apply(fmtRes_2986453520[0], [85,110,107,110,111,119,110,32,115,121,109,98,111,108,32,39]);;
      formatValue_3003121884(fmtRes_2986453520, 0, id_2986452906, []);
      fmtRes_2986453520[0].push.apply(fmtRes_2986453520[0], [39]);;
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986453520[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 7)) {
      if ((len_2969567320(node_2986345269) == 0)) {
      result_2986443725 = voidType_3070230940();
      break BeforeRet;
      }
      
      var lastType_2986453534 = null;
      Label52: {
        var child_2986453538 = null;
        var i_2936012914 = 0;
        var L_2936012915 = (node_2986345269.children).length;
        Label53: {
            Label54: while (true) {
            if (!(i_2936012914 < L_2936012915)) break Label54;
              child_2986453538 = node_2986345269.children[chckIndx(i_2936012914, 0, (node_2986345269.children).length - 1)];
              lastType_2986453534 = computeType_2986417458(ctx_2986345268, child_2986453538, true);
              if ((lastType_2986453534.kind == 0)) {
              result_2986443725 = errorType_3070230904();
              break BeforeRet;
              }
              
              i_2936012914 = addInt(i_2936012914, 1);
              if (!(((node_2986345269.children).length == L_2936012915))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_2986443725 = lastType_2986453534;
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 9)) {
      if ((len_2969567320(node_2986345269) < 2)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var ok_2986453547 = true;
      var commonType_2986453550 = [none_2986417439()];
      var index_2986453551 = 0;
      Label55: {
          Label56: while (true) {
          if (!(addInt(index_2986453551, 1) < len_2969567320(node_2986345269))) break Label56;
            Label57: {
              try {
              var condition_2986453556 = HEX5BHEX5D_2969567316(node_2986345269, index_2986453551);
              var trueCase_2986453557 = HEX5BHEX5D_2969567316(node_2986345269, addInt(index_2986453551, 1));
              var conditionType_2986453558 = computeType_2986417458(ctx_2986345268, condition_2986453556, true);
              if ((conditionType_2986453558.kind == 0)) {
              ok_2986453547 = false;
              }
              else {
              if (!((conditionType_2986453558.kind == 3))) {
              var Temporary59 = nimCopy(null, condition_2986453556.id, NTI2181038083);
              ids_2986446096.push(Temporary59);;
              var fmtRes_2986453575 = [mnewString(0)];
              fmtRes_2986453575[0].push.apply(fmtRes_2986453575[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
              formatValue_2986452532(fmtRes_2986453575, 0, conditionType_2986453558, []);
              diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986453575[0], NTI33554449)});;
              ok_2986453547 = false;
              }
              }
              var trueCaseType_2986453585 = computeType_2986417458(ctx_2986345268, trueCase_2986453557, true);
              if ((trueCaseType_2986453585.kind == 0)) {
              ok_2986453547 = false;
              break Label57;
              }
              
              if ((isNone_2986453594(commonType_2986453550[0]) || HEX3DHEX3D_3070231086(trueCaseType_2986453585, (Temporary60 = get_2986453637(commonType_2986453550[0]), Temporary60)[0][Temporary60[1]]))) {
              commonType_2986453550[0] = nimCopy(commonType_2986453550[0], some_2986417426(trueCaseType_2986453585), NTI2986387392);
              }
              else {
                commonType_2986453550[0] = nimCopy(commonType_2986453550[0], some_2986417426(voidType_3070230940()), NTI2986387392);
              }
              
              } finally {
              index_2986453551 = addInt(index_2986453551, 2);
              }
            };
          }
      };
      if (!((modInt(len_2969567320(node_2986345269), 2) == 0))) {
      var falseCaseType_2986453664 = computeType_2986417458(ctx_2986345268, last_2969567490(node_2986345269), true);
      if ((falseCaseType_2986453664.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if ((isNone_2986453594(commonType_2986453550[0]) || HEX3DHEX3D_3070231086(falseCaseType_2986453664, (Temporary61 = get_2986453637(commonType_2986453550[0]), Temporary61)[0][Temporary61[1]]))) {
      commonType_2986453550[0] = nimCopy(commonType_2986453550[0], some_2986417426(falseCaseType_2986453664), NTI2986387392);
      }
      else {
        commonType_2986453550[0] = nimCopy(commonType_2986453550[0], some_2986417426(voidType_3070230940()), NTI2986387392);
      }
      
      }
      
      if (!(ok_2986453547)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      result_2986443725 = get_2986453755(commonType_2986453550[0], voidType_3070230940());
      break BeforeRet;
      }
      else {
      if ((expr_2986452469.kind == 10)) {
      if ((len_2969567320(node_2986345269) < 2)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var ok_2986453776 = true;
      var conditionType_2986453777 = computeType_2986417458(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, 0), true);
      if ((conditionType_2986453777.kind == 0)) {
      ok_2986453776 = false;
      }
      else {
      if (!((conditionType_2986453777.kind == 3))) {
      var Temporary62 = nimCopy(null, HEX5BHEX5D_2969567316(node_2986345269, 0).id, NTI2181038083);
      ids_2986446096.push(Temporary62);;
      var fmtRes_2986453794 = [mnewString(0)];
      fmtRes_2986453794[0].push.apply(fmtRes_2986453794[0], [67,111,110,100,105,116,105,111,110,32,111,102,32,119,104,105,108,101,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
      formatValue_2986452532(fmtRes_2986453794, 0, conditionType_2986453777, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986453794[0], NTI33554449)});;
      ok_2986453776 = false;
      }
      }
      var bodyType_2986453804 = computeType_2986417458(ctx_2986345268, HEX5BHEX5D_2969567316(node_2986345269, 1), true);
      if ((bodyType_2986453804.kind == 0)) {
      ok_2986453776 = false;
      }
      
      if (ok_2986453776) {
      result_2986443725 = voidType_3070230940();
      break BeforeRet;
      }
      else {
        result_2986443725 = errorType_3070230904();
        break BeforeRet;
      }
      
      }
      else {
      if ((expr_2986452469.kind == 13)) {
      if ((len_2969567320(node_2986345269) < 2)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var target_2986453813 = HEX5BHEX5D_2969567316(node_2986345269, 0);
      var value_2986453814 = HEX5BHEX5D_2969567316(node_2986345269, 1);
      var targetType_2986453815 = computeType_2986417458(ctx_2986345268, target_2986453813, true);
      if ((targetType_2986453815.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      var valueType_2986453820 = computeType_2986417458(ctx_2986345268, value_2986453814, true);
      if ((valueType_2986453820.kind == 0)) {
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!(HEX3DHEX3D_3070231086(targetType_2986453815, valueType_2986453820))) {
      var Temporary63 = nimCopy(null, value_2986453814.id, NTI2181038083);
      ids_2986446096.push(Temporary63);;
      var fmtRes_2986453833 = [mnewString(0)];
      fmtRes_2986453833[0].push.apply(fmtRes_2986453833[0], [67,97,110,39,116,32,97,115,115,105,103,110,32]);;
      formatValue_2986452532(fmtRes_2986453833, 0, valueType_2986453820, []);
      fmtRes_2986453833[0].push.apply(fmtRes_2986453833[0], [32,116,111,32]);;
      formatValue_2986452532(fmtRes_2986453833, 0, targetType_2986453815, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986453833[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
        var oHEX60gensym687_2986453850 = computeSymbol_2986424064(ctx_2986345268, target_2986453813, true);
        if (!isSome_3070232117(oHEX60gensym687_2986453850)) Temporary64 = false; else {          var sym_2986453896 = get_3070232137(oHEX60gensym687_2986453850);
          Temporary64 = true;        }      if (Temporary64) {
      if ((sym_2986453896.kind == 1)) {
      var Temporary65 = nimCopy(null, target_2986453813.id, NTI2181038083);
      ids_2986446096.push(Temporary65);;
      var fmtRes_2986453909 = [mnewString(0)];
      fmtRes_2986453909[0].push.apply(fmtRes_2986453909[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,98,117,105,108,116,105,110,32,115,121,109,98,111,108,32]);;
      formatValue_2986453910(fmtRes_2986453909, 0, sym_2986453896, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986453909[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      if (!((sym_2986453896.kind == 0))) {
      failedAssertImpl_268435515([99,111,109,112,105,108,101,114,46,110,105,109,40,52,52,52,44,32,55,41,32,96,115,121,109,46,107,105,110,100,32,61,61,32,115,107,65,115,116,78,111,100,101,96,32]);
      }
      
        var Temporary66 = sym_2986453896;
        if (ConstSet109[Temporary66.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary66.kind, NTI3070230537)); }
      if (!((Temporary66.node.kind == 6))) {
      var Temporary67 = nimCopy(null, target_2986453813.id, NTI2181038083);
      ids_2986446096.push(Temporary67);;
      var fmtRes_2986453940 = [mnewString(0)];
      fmtRes_2986453940[0].push.apply(fmtRes_2986453940[0], [67,97,110,39,116,32,97,115,115,105,103,110,32,116,111,32,110,111,110,45,109,117,116,97,98,108,101,32,115,121,109,98,111,108,32]);;
      formatValue_2986453910(fmtRes_2986453940, 0, sym_2986453896, []);
      diagnostics_2986446091.push({message: nimCopy(null, fmtRes_2986453940[0], NTI33554449)});;
      result_2986443725 = errorType_3070230904();
      break BeforeRet;
      }
      
      }
      
      result_2986443725 = voidType_3070230940();
      break BeforeRet;
      }
      else {
        result_2986443725 = errorType_3070230904();
        break BeforeRet;
      }
      }}}}}}}}}}}}}
    };
    } finally {
    if ((0 < (diagnostics_2986446091).length)) {
    HEX5BHEX5DHEX3D_2986446164(ctx_2986345268.diagnosticsPerQuery, key_2986443738, ids_2986446096);
    Label68: {
      var i_2986447748 = 0;
      var colontmp__2936012899 = 0;
      colontmp__2936012899 = (ids_2986446096).length - 1;
      var res_2936012900 = 0;
      Label69: {
          Label70: while (true) {
          if (!(res_2936012900 <= colontmp__2936012899)) break Label70;
            i_2986447748 = res_2936012900;
            var id_2986447749 = nimCopy(null, ids_2986446096[chckIndx(i_2986447748, 0, (ids_2986446096).length - 1)], NTI2181038083);
            var diag_2986447750 = nimCopy(null, diagnostics_2986446091[chckIndx(i_2986447748, 0, (diagnostics_2986446091).length - 1)], NTI2986344451);
            if (!(contains_2986447827(ctx_2986345268.diagnosticsPerNode, id_2986447749))) {
            HEX5BHEX5DHEX3D_2986447909(ctx_2986345268.diagnosticsPerNode, id_2986447749, {queries: ({data: [], counter: 0})});
            }
            
            if (!(contains_2986449643(HEX5BHEX5D_2986444469(ctx_2986345268.diagnosticsPerNode, id_2986447749).queries, key_2986443738))) {
            HEX5BHEX5DHEX3D_2986449814(HEX5BHEX5D_2986444469(ctx_2986345268.diagnosticsPerNode, id_2986447749).queries, key_2986443738, []);
            }
            
            var Temporary72 = nimCopy(null, diag_2986447750, NTI2986344451);
            (Temporary71 = HEX5BHEX5D_2986451547(HEX5BHEX5D_2986444469(ctx_2986345268.diagnosticsPerNode, id_2986447749).queries, key_2986443738), Temporary71)[0][Temporary71[1]].push(Temporary72);;
            res_2936012900 = addInt(res_2936012900, 1);
          }
      };
    };
    }
    else {
    del_2986451720(ctx_2986345268.diagnosticsPerQuery, key_2986443738);
    }
    
    }
    } finally {
    if ((logQueryHEX60gensym555_2986443727 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070230964(result_2986443725) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym555_2986443727) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986443725;

}

function getOrDefault_2986346815(t_2986346818, key_2986346819, default_2986346820) {
    var Temporary1;

  var result_2986346821 = null;

    var hcHEX60gensym128_2986346824 = [0];
    var indexHEX60gensym128_2986347183 = rawGet_2986346825(t_2986346818, key_2986346819, hcHEX60gensym128_2986346824, 0);
    if ((0 <= indexHEX60gensym128_2986347183)) {
    Temporary1 = t_2986346818.data[chckIndx(indexHEX60gensym128_2986347183, 0, (t_2986346818.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986346820;
    }
    
    result_2986346821 = Temporary1;

  return result_2986346821;

}

function newDoublyLinkedNode_2986347308(value_2986347310) {
  var result_2986347311 = null;

    result_2986347311 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2986347311.value = nimCopy(result_2986347311.value, value_2986347310, NTI2986344813);

  return result_2986347311;

}

function mustRehash_2986347658(t_2986347660) {
  var result_2986347661 = false;

    if (!((t_2986347660.counter < (t_2986347660.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986347661 = ((mulInt((t_2986347660.data).length, 2) < mulInt(t_2986347660.counter, 3)) || (subInt((t_2986347660.data).length, t_2986347660.counter) < 4));

  return result_2986347661;

}

function rawInsert_2986348351(t_2986348355, data_2986348356, data_2986348356_Idx, key_2986348357, val_2986348358, hc_2986348359, h_2986348360) {
    data_2986348356[data_2986348356_Idx][chckIndx(h_2986348360, 0, (data_2986348356[data_2986348356_Idx]).length - 1)].Field1 = key_2986348357;
    data_2986348356[data_2986348356_Idx][chckIndx(h_2986348360, 0, (data_2986348356[data_2986348356_Idx]).length - 1)].Field2 = val_2986348358;
    data_2986348356[data_2986348356_Idx][chckIndx(h_2986348360, 0, (data_2986348356[data_2986348356_Idx]).length - 1)].Field0 = hc_2986348359;

  
}

function enlarge_2986347915(t_2986347918) {
    var n_2986347921 = [];
    n_2986347921 = new Array(chckRange(mulInt((t_2986347918.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986347918.data).length, 2), 0, 2147483647) ; ++i) { n_2986347921[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986347918.data; t_2986347918.data = n_2986347921; n_2986347921 = Temporary1;    Label2: {
      var i_2986348019 = 0;
      var colontmp__2936013062 = 0;
      colontmp__2936013062 = (n_2986347921).length - 1;
      var res_2936013063 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013063 <= colontmp__2936013062)) break Label4;
            i_2986348019 = res_2936013063;
            var eh_2986348100 = n_2986347921[chckIndx(i_2986348019, 0, (n_2986347921).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986348100)) {
            var j_2986348104 = (eh_2986348100 & (t_2986347918.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986347918.data[chckIndx(j_2986348104, 0, (t_2986347918.data).length - 1)].Field0)) break Label6;
                  j_2986348104 = nextTry_1308622883(j_2986348104, (t_2986347918.data).length - 1);
                }
            };
            rawInsert_2986348351(t_2986347918, t_2986347918, "data", n_2986347921[chckIndx(i_2986348019, 0, (n_2986347921).length - 1)].Field1, n_2986347921[chckIndx(i_2986348019, 0, (n_2986347921).length - 1)].Field2, eh_2986348100, j_2986348104);
            }
            
            res_2936013063 = addInt(res_2936013063, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986348601(t_2986348604, key_2986348605, hc_2986348606) {
  var result_2986348607 = 0;

  BeforeRet: {
    if (((t_2986348604.data).length == 0)) {
    result_2986348607 = -1;
    break BeforeRet;
    }
    
    var h_2986348692 = (hc_2986348606 & (t_2986348604.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986348604.data[chckIndx(h_2986348692, 0, (t_2986348604.data).length - 1)].Field0)) break Label2;
          if (((t_2986348604.data[chckIndx(h_2986348692, 0, (t_2986348604.data).length - 1)].Field0 == hc_2986348606) && (t_2986348604.data[chckIndx(h_2986348692, 0, (t_2986348604.data).length - 1)].Field1 == key_2986348605))) {
          result_2986348607 = h_2986348692;
          break BeforeRet;
          }
          
          h_2986348692 = nextTry_1308622883(h_2986348692, (t_2986348604.data).length - 1);
        }
    };
    result_2986348607 = subInt(-1, h_2986348692);
  };

  return result_2986348607;

}

function HEX5BHEX5DHEX3D_2986347390(t_2986347393, key_2986347394, val_2986347395) {
    if (((t_2986347393.data).length == 0)) {
    var correctSizeHEX60gensym133_2986347478 = slotsNeeded_1308622891(32);
    t_2986347393.counter = 0;
    t_2986347393.data = new Array(chckRange(correctSizeHEX60gensym133_2986347478, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym133_2986347478, 0, 2147483647) ; ++i) { t_2986347393.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986347483 = [0];
    var index_2986347490 = rawGet_2986346825(t_2986347393, key_2986347394, hc_2986347483, 0);
    if ((0 <= index_2986347490)) {
    t_2986347393.data[chckIndx(index_2986347490, 0, (t_2986347393.data).length - 1)].Field2 = val_2986347395;
    }
    else {
      if (((t_2986347393.data).length == 0)) {
      var correctSizeHEX60gensym136_2986347653 = slotsNeeded_1308622891(32);
      t_2986347393.counter = 0;
      t_2986347393.data = new Array(chckRange(correctSizeHEX60gensym136_2986347653, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym136_2986347653, 0, 2147483647) ; ++i) { t_2986347393.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986347658(t_2986347393)) {
      enlarge_2986347915(t_2986347393);
      index_2986347490 = rawGetKnownHC_2986348601(t_2986347393, key_2986347394, hc_2986347483[0]);
      }
      
      index_2986347490 = subInt(-1, index_2986347490);
      rawInsert_2986348351(t_2986347393, t_2986347393, "data", key_2986347394, val_2986347395, hc_2986347483[0], index_2986347490);
      t_2986347393.counter = addInt(t_2986347393.counter, 1);
    }
    

  
}

function rawGet_2986349232(t_2986349235, key_2986349236, hc_2986349237, hc_2986349237_Idx) {
  var result_2986349238 = 0;

  BeforeRet: {
    hc_2986349237[hc_2986349237_Idx] = hash_2969569587(key_2986349236);
    if ((hc_2986349237[hc_2986349237_Idx] == 0)) {
    hc_2986349237[hc_2986349237_Idx] = 314159265;
    }
    
    if (((t_2986349235.data).length == 0)) {
    result_2986349238 = -1;
    break BeforeRet;
    }
    
    var h_2986349324 = (hc_2986349237[hc_2986349237_Idx] & (t_2986349235.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986349235.data[chckIndx(h_2986349324, 0, (t_2986349235.data).length - 1)].Field0)) break Label2;
          if (((t_2986349235.data[chckIndx(h_2986349324, 0, (t_2986349235.data).length - 1)].Field0 == hc_2986349237[hc_2986349237_Idx]) && (t_2986349235.data[chckIndx(h_2986349324, 0, (t_2986349235.data).length - 1)].Field1 == key_2986349236))) {
          result_2986349238 = h_2986349324;
          break BeforeRet;
          }
          
          h_2986349324 = nextTry_1828716586(h_2986349324, (t_2986349235.data).length - 1);
        }
    };
    result_2986349238 = subInt(-1, h_2986349324);
  };

  return result_2986349238;

}

function exclImpl_2986349226(s_2986349228, key_2986349229) {
          var Temporary5;

  var result_2986349230 = false;

  BeforeRet: {
    var hc_2986349231 = [0];
    var i_2986349590 = rawGet_2986349232(s_2986349228, key_2986349229, hc_2986349231, 0);
    var msk_2986349594 = (s_2986349228.data).length - 1;
    result_2986349230 = true;
    if ((0 <= i_2986349590)) {
    result_2986349230 = false;
    s_2986349228.counter = subInt(s_2986349228.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986349600 = i_2986349590;
          var r_2986349601 = j_2986349600;
          s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)].Field0 = 0;
          s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986349590 = (addInt(i_2986349590, 1) & msk_2986349594);
                if (isEmpty_1828716580(s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986349601 = (s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)].Field0 & msk_2986349594);
                if (!(((((r_2986349601 <= i_2986349590) && (j_2986349600 < r_2986349601)) || ((j_2986349600 < r_2986349601) && (i_2986349590 < j_2986349600))) || ((i_2986349590 < j_2986349600) && (r_2986349601 <= i_2986349590))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)];
          s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)] = genericReset(s_2986349228.data[chckIndx(i_2986349590, 0, (s_2986349228.data).length - 1)], NTI2986344869);
          s_2986349228.data[chckIndx(j_2986349600, 0, (s_2986349228.data).length - 1)] = nimCopy(s_2986349228.data[chckIndx(j_2986349600, 0, (s_2986349228.data).length - 1)], Temporary5, NTI2986344869);
        }
    };
    }
    
  };

  return result_2986349230;

}

function excl_2986349211(s_2986349213, key_2986349214) {
    var _ = exclImpl_2986349226(s_2986349213, key_2986349214);

  
}

function len_2986350345(t_2986350348) {
  var result_2986350349 = 0;

    result_2986350349 = t_2986350348.counter;

  return result_2986350349;

}

function len_2986350262(cache_2986350265) {
  var result_2986350266 = 0;

    result_2986350266 = len_2986350345(cache_2986350265.table);

  return result_2986350266;

}

function mustRehash_2986350486(t_2986350488) {
  var result_2986350489 = false;

    if (!((t_2986350488.counter < (t_2986350488.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986350489 = ((mulInt((t_2986350488.data).length, 2) < mulInt(t_2986350488.counter, 3)) || (subInt((t_2986350488.data).length, t_2986350488.counter) < 4));

  return result_2986350489;

}

function rawGetKnownHC_2986351092(t_2986351095, key_2986351096, hc_2986351097) {
  var result_2986351098 = 0;

  BeforeRet: {
    if (((t_2986351095.data).length == 0)) {
    result_2986351098 = -1;
    break BeforeRet;
    }
    
    var h_2986351183 = (hc_2986351097 & (t_2986351095.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986351095.data[chckIndx(h_2986351183, 0, (t_2986351095.data).length - 1)].Field0)) break Label2;
          if (((t_2986351095.data[chckIndx(h_2986351183, 0, (t_2986351095.data).length - 1)].Field0 == hc_2986351097) && (t_2986351095.data[chckIndx(h_2986351183, 0, (t_2986351095.data).length - 1)].Field1 == key_2986351096))) {
          result_2986351098 = h_2986351183;
          break BeforeRet;
          }
          
          h_2986351183 = nextTry_1828716586(h_2986351183, (t_2986351095.data).length - 1);
        }
    };
    result_2986351098 = subInt(-1, h_2986351183);
  };

  return result_2986351098;

}

function rawInsert_2986351596(s_2986351598, data_2986351599, data_2986351599_Idx, key_2986351600, hc_2986351601, h_2986351602) {
    if (((data_2986351599[data_2986351599_Idx]).length == 0)) {
    var correctSizeHEX60gensym155_2986351685 = slotsNeeded_1828716594(64);
    s_2986351598.counter = 0;
    s_2986351598.data = new Array(chckRange(correctSizeHEX60gensym155_2986351685, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym155_2986351685, 0, 2147483647) ; ++i) { s_2986351598.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986351599[data_2986351599_Idx][chckIndx(h_2986351602, 0, (data_2986351599[data_2986351599_Idx]).length - 1)].Field1 = key_2986351600;
    data_2986351599[data_2986351599_Idx][chckIndx(h_2986351602, 0, (data_2986351599[data_2986351599_Idx]).length - 1)].Field0 = hc_2986351601;

  
}

function enlarge_2986350749(s_2986350751) {
    var n_2986350753 = [];
    n_2986350753 = new Array(chckRange(mulInt((s_2986350751.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986350751.data).length, 2), 0, 2147483647) ; ++i) { n_2986350753[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986350751.data; s_2986350751.data = n_2986350753; n_2986350753 = Temporary1;    Label2: {
      var i_2986350851 = 0;
      var colontmp__2936013071 = 0;
      colontmp__2936013071 = (n_2986350753).length - 1;
      var res_2936013072 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013072 <= colontmp__2936013071)) break Label4;
            i_2986350851 = res_2936013072;
            if (isFilled_1828716583(n_2986350753[chckIndx(i_2986350851, 0, (n_2986350753).length - 1)].Field0)) {
            var j_2986351431 = subInt(-1, rawGetKnownHC_2986351092(s_2986350751, n_2986350753[chckIndx(i_2986350851, 0, (n_2986350753).length - 1)].Field1, n_2986350753[chckIndx(i_2986350851, 0, (n_2986350753).length - 1)].Field0));
            rawInsert_2986351596(s_2986350751, s_2986350751, "data", n_2986350753[chckIndx(i_2986350851, 0, (n_2986350753).length - 1)].Field1, n_2986350753[chckIndx(i_2986350851, 0, (n_2986350753).length - 1)].Field0, j_2986351431);
            }
            
            res_2936013072 = addInt(res_2936013072, 1);
          }
      };
    };

  
}

function incl_2986350370(s_2986350372, key_2986350373) {
    if (((s_2986350372.data).length == 0)) {
    var correctSizeHEX60gensym148_2986350456 = slotsNeeded_1828716594(64);
    s_2986350372.counter = 0;
    s_2986350372.data = new Array(chckRange(correctSizeHEX60gensym148_2986350456, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym148_2986350456, 0, 2147483647) ; ++i) { s_2986350372.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986350471 = [0];
    var index_2986350485 = rawGet_2986349232(s_2986350372, key_2986350373, hc_2986350471, 0);
    if ((index_2986350485 < 0)) {
    if (mustRehash_2986350486(s_2986350372)) {
    enlarge_2986350749(s_2986350372);
    index_2986350485 = rawGetKnownHC_2986351092(s_2986350372, key_2986350373, hc_2986350471[0]);
    }
    
    rawInsert_2986351596(s_2986350372, s_2986350372, "data", key_2986350373, hc_2986350471[0], subInt(-1, index_2986350485));
    s_2986350372.counter = addInt(s_2986350372.counter, 1);
    }
    

  
}

function del_2986351952(t_2986351955, key_2986351956) {
    var hc_2986351957 = [0];
    var i_2986351964 = rawGet_2986346825(t_2986351955, key_2986351956, hc_2986351957, 0);
    var mskHEX60gensym36_2986351968 = (t_2986351955.data).length - 1;
    if ((0 <= i_2986351964)) {
    t_2986351955.counter = subInt(t_2986351955.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986351975 = i_2986351964;
            var rHEX60gensym36_2986351976 = jHEX60gensym36_2986351975;
            t_2986351955.data[chckIndx(i_2986351964, 0, (t_2986351955.data).length - 1)].Field0 = 0;
            t_2986351955.data[chckIndx(i_2986351964, 0, (t_2986351955.data).length - 1)].Field1 = null;
            t_2986351955.data[chckIndx(i_2986351964, 0, (t_2986351955.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986351964 = (addInt(i_2986351964, 1) & mskHEX60gensym36_2986351968);
                  if (isEmpty_1308622877(t_2986351955.data[chckIndx(i_2986351964, 0, (t_2986351955.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986351976 = (t_2986351955.data[chckIndx(i_2986351964, 0, (t_2986351955.data).length - 1)].Field0 & mskHEX60gensym36_2986351968);
                  if (!(((((rHEX60gensym36_2986351976 <= i_2986351964) && (jHEX60gensym36_2986351975 < rHEX60gensym36_2986351976)) || ((jHEX60gensym36_2986351975 < rHEX60gensym36_2986351976) && (i_2986351964 < jHEX60gensym36_2986351975))) || ((i_2986351964 < jHEX60gensym36_2986351975) && (rHEX60gensym36_2986351976 <= i_2986351964))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986351955.data[chckIndx(jHEX60gensym36_2986351975, 0, (t_2986351955.data).length - 1)] = nimCopy(t_2986351955.data[chckIndx(jHEX60gensym36_2986351975, 0, (t_2986351955.data).length - 1)], t_2986351955.data[chckIndx(i_2986351964, 0, (t_2986351955.data).length - 1)], NTI2986344849);
          }
      };
    };
    }
    

  
}

function resize_2986350180(cache_2986350183) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986350183.capacity < len_2986350262(cache_2986350183))) break Label2;
          var t_2986350350 = cache_2986350183.list.tail;
          if (cache_2986350183.recordRemovedKeys) {
          incl_2986350370(cache_2986350183.removedKeys, t_2986350350.value.key);
          }
          
          del_2986351952(cache_2986350183.table, t_2986350350.value.key);
          remove_2986352711(cache_2986350183.list, t_2986350350);
        }
    };

  
}

function addNewNode_2986347300(cache_2986347303, key_2986347304, val_2986347305) {
    var node_2986347326 = newDoublyLinkedNode_2986347308({key: key_2986347304, val: val_2986347305});
    HEX5BHEX5DHEX3D_2986347390(cache_2986347303.table, key_2986347304, node_2986347326);
    prepend_2986349001(cache_2986347303.list, node_2986347326);
    if (cache_2986347303.recordRemovedKeys) {
    excl_2986349211(cache_2986347303.removedKeys, key_2986347304);
    }
    
    resize_2986350180(cache_2986347303);

  
}

function HEX5BHEX5DHEX3D_2986346720(cache_2986346723, key_2986346724, val_2986346725) {
    var node_2986347273 = getOrDefault_2986346815(cache_2986346723.table, key_2986346724, null);
    if ((node_2986347273 == null)) {
    addNewNode_2986347300(cache_2986346723, key_2986346724, val_2986346725);
    }
    else {
      node_2986347273.value.val = val_2986346725;
      remove_2986352711(cache_2986346723.list, node_2986347273);
      prepend_2986349001(cache_2986346723.list, node_2986347273);
    }
    

  
}

function HEX26_3070231137(x_3070231139, y_3070231140) {
  var result_3070231141 = [];

    result_3070231141 = new Array(chckRange(addInt((x_3070231139).length, (y_3070231140).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3070231139).length, (y_3070231140).length), 0, 2147483647) ; ++i) { result_3070231141[i] = 0; }    Label1: {
      var i_3070231159 = 0;
      var colontmp__2936013083 = 0;
      colontmp__2936013083 = subInt((x_3070231139).length, 1);
      var res_2936013084 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013084 <= colontmp__2936013083)) break Label3;
            i_3070231159 = res_2936013084;
            result_3070231141[chckIndx(i_3070231159, 0, (result_3070231141).length - 1)] = x_3070231139[chckIndx(i_3070231159, 0, (x_3070231139).length - 1)];
            res_2936013084 = addInt(res_2936013084, 1);
          }
      };
    };
    Label4: {
      var i_3070231167 = 0;
      var colontmp__2936013087 = 0;
      colontmp__2936013087 = subInt((y_3070231140).length, 1);
      var res_2936013088 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_2936013088 <= colontmp__2936013087)) break Label6;
            i_3070231167 = res_2936013088;
            result_3070231141[chckIndx(addInt(i_3070231167, (x_3070231139).length), 0, (result_3070231141).length - 1)] = y_3070231140[chckIndx(i_3070231167, 0, (y_3070231140).length - 1)];
            res_2936013088 = addInt(res_2936013088, 1);
          }
      };
    };

  return result_3070231141;

}

function add_3070231175(x_3070231177, x_3070231177_Idx, y_3070231178) {
    var Temporary1;

    var xl_3070231182 = (x_3070231177[x_3070231177_Idx]).length;
    if (x_3070231177[x_3070231177_Idx].length < (Temporary1 = chckRange(addInt(xl_3070231182, (y_3070231178).length), 0, 2147483647), Temporary1)) { for (var i = x_3070231177[x_3070231177_Idx].length ; i < Temporary1 ; ++i) x_3070231177[x_3070231177_Idx].push(0); }
               else { x_3070231177[x_3070231177_Idx].length = Temporary1; };
    Label2: {
      var i_3070231197 = 0;
      var colontmp__2936013091 = 0;
      colontmp__2936013091 = (y_3070231178).length - 1;
      var res_2936013092 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013092 <= colontmp__2936013091)) break Label4;
            i_3070231197 = res_2936013092;
            x_3070231177[x_3070231177_Idx][chckIndx(addInt(xl_3070231182, i_3070231197), 0, (x_3070231177[x_3070231177_Idx]).length - 1)] = y_3070231178[chckIndx(i_3070231197, 0, (y_3070231178).length - 1)];
            res_2936013092 = addInt(res_2936013092, 1);
          }
      };
    };

  
}

function fingerprint_3070231130(typ_3070231131) {
      var Temporary1;
        var Temporary3;
      var Temporary6;

  var result_3070231132 = [[]];

    switch (typ_3070231131.kind) {
    case 4:
      var Temporary1 = typ_3070231131;
      if (ConstSet110[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230531)); }
      result_3070231132[0] = nimCopy(null, HEX26_3070231137([typ_3070231131.kind], fingerprint_3070231130(Temporary1.returnType)), NTI3070230983);
      Label2: {
        var param_3070231174 = null;
        var colontmp__2936013078 = [];
        var Temporary3 = typ_3070231131;
        if (ConstSet111[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
        colontmp__2936013078 = Temporary3.paramTypes;
        var i_2936013079 = 0;
        var L_2936013080 = (colontmp__2936013078).length;
        Label4: {
            Label5: while (true) {
            if (!(i_2936013079 < L_2936013080)) break Label5;
              param_3070231174 = colontmp__2936013078[chckIndx(i_2936013079, 0, (colontmp__2936013078).length - 1)];
              add_3070231175(result_3070231132, 0, fingerprint_3070231130(param_3070231174));
              i_2936013079 = addInt(i_2936013079, 1);
              if (!(((colontmp__2936013078).length == L_2936013080))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      break;
    case 5:
      var Temporary6 = typ_3070231131;
      if (ConstSet112[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230531)); }
      result_3070231132[0] = nimCopy(null, [typ_3070231131.kind, Temporary6.open], NTI3003121997);
      break;
    default: 
      result_3070231132[0] = nimCopy(null, [typ_3070231131.kind], NTI3070230977);
      break;
    }

  return result_3070231132[0];

}

function initDoublyLinkedList_2986353154() {
  var result_2986353156 = ({head: null, tail: null});

  return result_2986353156;

}

function initTable_2986353160(initialSize_2986353163) {
  var result_2986353164 = ({data: [], counter: 0});

    var correctSizeHEX60gensym156_2986353166 = slotsNeeded_1308622891(chckRange(initialSize_2986353163, 0, 2147483647));
    result_2986353164.counter = 0;
    result_2986353164.data = new Array(chckRange(correctSizeHEX60gensym156_2986353166, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym156_2986353166, 0, 2147483647) ; ++i) { result_2986353164.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986353164;

}

function newLruCache_2986353144(capacity_2986353147, recordRemovedKeys_2986353148) {
  var result_2986353149 = null;

    result_2986353149 = {capacity: capacity_2986353147, list: initDoublyLinkedList_2986353154(), table: initTable_2986353160(correctSize_3019898901(capacity_2986353147)), recordRemovedKeys: recordRemovedKeys_2986353148, removedKeys: ({data: [], counter: 0})};

  return result_2986353149;

}

function newCache_2986353139(capacity_2986353142) {
  var result_2986353143 = null;

    result_2986353143 = newLruCache_2986353144(capacity_2986353142, false);

  return result_2986353143;

}

function init_2986353134(result_2986353137, result_2986353137_Idx, capacity_2986353138) {
    result_2986353137[result_2986353137_Idx] = newCache_2986353139(capacity_2986353138);

  
}

function errorValue_3070231215() {
  var result_3070231216 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231216 = nimCopy(result_3070231216, {kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);

  return result_3070231216;

}

function HEX5BHEX5D_3120563989(s_3120563993, x_3120563994) {
  var result_3120563995 = [];

    var a_3120563997 = x_3120563994.a;
    var L_3120564003 = addInt(subInt(subInt((s_3120563993).length, x_3120563994.b), a_3120563997), 1);
    result_3120563995 = new Array(chckRange(L_3120564003, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3120564003, 0, 2147483647) ; ++i) { result_3120563995[i] = null; }    Label1: {
      var i_3120564012 = 0;
      var i_2936013102 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013102 < L_3120564003)) break Label3;
            i_3120564012 = i_2936013102;
            result_3120563995[chckIndx(i_3120564012, 0, (result_3120563995).length - 1)] = s_3120563993[chckIndx(addInt(i_3120564012, a_3120563997), 0, (s_3120563993).length - 1)];
            i_2936013102 = addInt(i_2936013102, 1);
          }
      };
    };

  return result_3120563995;

}

function formatValue_3070231363(result_3070231365, result_3070231365_Idx, value_3070231366, specifier_3070231367) {
    formatValue_721420459(result_3070231365, result_3070231365_Idx, HEX24_2969569239(value_3070231366), specifier_3070231367);

  
}

function hash_3070231277(x_3070231279) {
  var result_3070231280 = 0;

    result_3070231280 = hashWangYi1_1325400244(x_3070231279);

  return result_3070231280;

}

function hash_3070231039(x_3070231041) {
  var result_3070231042 = 0;

    result_3070231042 = hashWangYi1_1325400244(x_3070231041);

  return result_3070231042;

}

function hash_3070231050(x_3070231052) {
  var result_3070231053 = 0;

    Label1: {
      var a_3070231067 = null;
      var i_2936013119 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013119 < (x_3070231052).length)) break Label3;
            a_3070231067 = x_3070231052[chckIndx(i_2936013119, 0, (x_3070231052).length - 1)];
            result_3070231053 = HEX21HEX26_1325400067(result_3070231053, hash_3070231036(a_3070231067));
            i_2936013119 = addInt(i_2936013119, 1);
          }
      };
    };
    result_3070231053 = HEX21HEX24_1325400082(result_3070231053);

  return result_3070231053;

}

function hash_2600471099(x_2600471101) {
  var result_2600471102 = 0;

    result_2600471102 = hashWangYi1_1325400244((x_2600471101 ? 1 : 0));

  return result_2600471102;

}

function hash_3070231036(typ_3070231037) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3070231038 = 0;

  BeforeRet: {
    switch (typ_3070231037.kind) {
    case 4:
      var Temporary2 = typ_3070231037;
      if (ConstSet118[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230531)); }
      var Temporary3 = typ_3070231037;
      if (ConstSet119[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230531)); }
      Temporary1 = ((hash_3070231039(typ_3070231037.kind) ^ hash_3070231036(Temporary2.returnType)) ^ hash_3070231050(Temporary3.paramTypes));
      break;
    case 5:
      var Temporary4 = typ_3070231037;
      if (ConstSet120[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'open\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
      Temporary1 = (hash_3070231039(typ_3070231037.kind) ^ hash_2600471099(Temporary4.open));
      break;
    default: 
      result_3070231038 = hash_3070231039(typ_3070231037.kind);
      break BeforeRet;
      break;
    }
    result_3070231038 = Temporary1;
  };

  return result_3070231038;

}

function hash_3070231274(value_3070231275) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;

  var result_3070231276 = 0;

  BeforeRet: {
    switch (value_3070231275.kind) {
    case 0:
      result_3070231276 = hash_3070231277(value_3070231275.kind);
      break BeforeRet;
      break;
    case 1:
      result_3070231276 = hash_3070231277(value_3070231275.kind);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3070231275;
      if (ConstSet115[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      result_3070231276 = hash_1325400236(Temporary1.intValue);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3070231275;
      if (ConstSet116[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231276 = hash_1325400491(Temporary2.stringValue);
      break BeforeRet;
      break;
    case 4:
      result_3070231276 = 0;
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3070231275;
      if (ConstSet117[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      result_3070231276 = hash_2969569587(Temporary3.node);
      break BeforeRet;
      break;
    case 6:
      var Temporary4 = value_3070231275;
      if (ConstSet121[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231276 = hash_3070231036(Temporary4.typ);
      break BeforeRet;
      break;
    }
  };

  return result_3070231276;

}

function hash_3070231508(x_3070231510) {
  var result_3070231511 = 0;

    Label1: {
      var a_3070231525 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936013115 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013115 < (x_3070231510).length)) break Label3;
            a_3070231525 = x_3070231510[chckIndx(i_2936013115, 0, (x_3070231510).length - 1)];
            result_3070231511 = HEX21HEX26_1325400067(result_3070231511, hash_3070231274(a_3070231525));
            i_2936013115 = addInt(i_2936013115, 1);
          }
      };
    };
    result_3070231511 = HEX21HEX24_1325400082(result_3070231511);

  return result_3070231511;

}

function hash_3070231526(x_3070231528) {
  var result_3070231529 = 0;

    result_3070231529 = HEX21HEX26_1325400067(result_3070231529, hash_1325400236(x_3070231528.val));
    result_3070231529 = HEX21HEX26_1325400067(result_3070231529, hash_2600471099(x_3070231528.has));
    result_3070231529 = HEX21HEX24_1325400082(result_3070231529);

  return result_3070231529;

}

function hash_3070231505(fec_3070231506) {
  var result_3070231507 = 0;

    result_3070231507 = HEX21HEX26_1325400067(HEX21HEX26_1325400067(hash_2969569587(fec_3070231506.node), hash_3070231508(fec_3070231506.arguments)), hash_3070231526(fec_3070231506.maxLoopIterations));
    result_3070231507 = HEX21HEX24_1325400082(result_3070231507);

  return result_3070231507;

}

function HEX3DHEX3D_3070231566(x_3070231568, y_3070231569) {
  var result_3070231570 = false;

  BeforeRet: {
    var sameObject_3070231577 = false;
    sameObject_3070231577 = x_3070231568 === y_3070231569
    if (sameObject_3070231577) {
    result_3070231570 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070231568).length == (y_3070231569).length))) {
    result_3070231570 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070231591 = 0;
      var colontmp__2936013122 = 0;
      colontmp__2936013122 = subInt((x_3070231568).length, 1);
      var res_2936013123 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013123 <= colontmp__2936013122)) break Label3;
            i_3070231591 = res_2936013123;
            if (!(HEX3DHEX3D_3070231294(x_3070231568[chckIndx(i_3070231591, 0, (x_3070231568).length - 1)], y_3070231569[chckIndx(i_3070231591, 0, (y_3070231569).length - 1)]))) {
            result_3070231570 = false;
            break BeforeRet;
            }
            
            res_2936013123 = addInt(res_2936013123, 1);
          }
      };
    };
    result_3070231570 = true;
    break BeforeRet;
  };

  return result_3070231570;

}

function isSome_1191185117(self_1191185119) {
  var result_1191185120 = false;

    result_1191185120 = self_1191185119.has;

  return result_1191185120;

}

function isNone_1191185194(self_1191185196) {
  var result_1191185197 = false;

    result_1191185197 = !(self_1191185196.has);

  return result_1191185197;

}

function HEX3DHEX3D_3070231642(a_3070231644, b_3070231645) {
  var result_3070231646 = false;

    result_3070231646 = (((isSome_1191185117(a_3070231644) && isSome_1191185117(b_3070231645)) && (a_3070231644.val == b_3070231645.val)) || (isNone_1191185194(a_3070231644) && isNone_1191185194(b_3070231645)));

  return result_3070231646;

}

function HEX3DHEX3D_3070231549(a_3070231550, b_3070231551) {
  var result_3070231552 = false;

  BeforeRet: {
    if ((a_3070231550 == null)) {
    result_3070231552 = (b_3070231551 == null);
    break BeforeRet;
    }
    
    if ((b_3070231551 == null)) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    if (!((a_3070231550.node == b_3070231551.node))) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070231566(a_3070231550.arguments, b_3070231551.arguments))) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070231642(a_3070231550.maxLoopIterations, b_3070231551.maxLoopIterations))) {
    result_3070231552 = false;
    break BeforeRet;
    }
    
    result_3070231552 = true;
    break BeforeRet;
  };

  return result_3070231552;

}

function getItem_2986410834(selfHEX60gensym84_2986410835) {
  var result_2986410836 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym84_2986410835.id, null_2181038340)) {
    selfHEX60gensym84_2986410835.id = nimCopy(selfHEX60gensym84_2986410835.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym84_2986410835.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,56,52,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936013125 = nimCopy(null, selfHEX60gensym84_2986410835.id, NTI2181038083);
    var colontmp__2936013126 = 3;
    result_2986410836 = nimCopy(result_2986410836, {Field0: nimCopy(null, colontmp__2936013125, NTI2181038083), Field1: colontmp__2936013126}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986410836;

}

function rawGet_2986378310(t_2986378313, key_2986378314, hc_2986378315, hc_2986378315_Idx) {
  var result_2986378316 = 0;

  BeforeRet: {
    hc_2986378315[hc_2986378315_Idx] = hash_2986345496(key_2986378314);
    if ((hc_2986378315[hc_2986378315_Idx] == 0)) {
    hc_2986378315[hc_2986378315_Idx] = 314159265;
    }
    
    if (((t_2986378313.data).length == 0)) {
    result_2986378316 = -1;
    break BeforeRet;
    }
    
    var h_2986378405 = (hc_2986378315[hc_2986378315_Idx] & (t_2986378313.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986378313.data[chckIndx(h_2986378405, 0, (t_2986378313.data).length - 1)].Field0)) break Label2;
          if (((t_2986378313.data[chckIndx(h_2986378405, 0, (t_2986378313.data).length - 1)].Field0 == hc_2986378315[hc_2986378315_Idx]) && HEX3DHEX3D_2986345833(t_2986378313.data[chckIndx(h_2986378405, 0, (t_2986378313.data).length - 1)].Field1, key_2986378314))) {
          result_2986378316 = h_2986378405;
          break BeforeRet;
          }
          
          h_2986378405 = nextTry_1308622883(h_2986378405, (t_2986378313.data).length - 1);
        }
    };
    result_2986378316 = subInt(-1, h_2986378405);
  };

  return result_2986378316;

}

function getOrDefault_2986411085(t_2986411088, key_2986411089, default_2986411090) {
    var Temporary1;

  var result_2986411091 = null;

    var hcHEX60gensym447_2986411094 = [0];
    var indexHEX60gensym447_2986411101 = rawGet_2986378310(t_2986411088, key_2986411089, hcHEX60gensym447_2986411094, 0);
    if ((0 <= indexHEX60gensym447_2986411101)) {
    Temporary1 = t_2986411088.data[chckIndx(indexHEX60gensym447_2986411101, 0, (t_2986411088.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986411090;
    }
    
    result_2986411091 = Temporary1;

  return result_2986411091;

}

function newDoublyLinkedNode_2986411217(value_2986411219) {
  var result_2986411220 = null;

    result_2986411220 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986411220.value = nimCopy(result_2986411220.value, value_2986411219, NTI2986344711);

  return result_2986411220;

}

function mustRehash_2986411558(t_2986411560) {
  var result_2986411561 = false;

    if (!((t_2986411560.counter < (t_2986411560.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986411561 = ((mulInt((t_2986411560.data).length, 2) < mulInt(t_2986411560.counter, 3)) || (subInt((t_2986411560.data).length, t_2986411560.counter) < 4));

  return result_2986411561;

}

function rawInsert_2986412251(t_2986412255, data_2986412256, data_2986412256_Idx, key_2986412257, val_2986412258, hc_2986412259, h_2986412260) {
    data_2986412256[data_2986412256_Idx][chckIndx(h_2986412260, 0, (data_2986412256[data_2986412256_Idx]).length - 1)].Field1 = nimCopy(data_2986412256[data_2986412256_Idx][chckIndx(h_2986412260, 0, (data_2986412256[data_2986412256_Idx]).length - 1)].Field1, key_2986412257, NTI3003121689);
    data_2986412256[data_2986412256_Idx][chckIndx(h_2986412260, 0, (data_2986412256[data_2986412256_Idx]).length - 1)].Field2 = val_2986412258;
    data_2986412256[data_2986412256_Idx][chckIndx(h_2986412260, 0, (data_2986412256[data_2986412256_Idx]).length - 1)].Field0 = hc_2986412259;

  
}

function enlarge_2986411815(t_2986411818) {
    var n_2986411821 = [];
    n_2986411821 = new Array(chckRange(mulInt((t_2986411818.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986411818.data).length, 2), 0, 2147483647) ; ++i) { n_2986411821[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986411818.data; t_2986411818.data = n_2986411821; n_2986411821 = Temporary1;    Label2: {
      var i_2986411919 = 0;
      var colontmp__2936013130 = 0;
      colontmp__2936013130 = (n_2986411821).length - 1;
      var res_2936013131 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013131 <= colontmp__2936013130)) break Label4;
            i_2986411919 = res_2936013131;
            var eh_2986412000 = n_2986411821[chckIndx(i_2986411919, 0, (n_2986411821).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986412000)) {
            var j_2986412004 = (eh_2986412000 & (t_2986411818.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986411818.data[chckIndx(j_2986412004, 0, (t_2986411818.data).length - 1)].Field0)) break Label6;
                  j_2986412004 = nextTry_1308622883(j_2986412004, (t_2986411818.data).length - 1);
                }
            };
            rawInsert_2986412251(t_2986411818, t_2986411818, "data", n_2986411821[chckIndx(i_2986411919, 0, (n_2986411821).length - 1)].Field1, n_2986411821[chckIndx(i_2986411919, 0, (n_2986411821).length - 1)].Field2, eh_2986412000, j_2986412004);
            }
            
            res_2936013131 = addInt(res_2936013131, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986412501(t_2986412504, key_2986412505, hc_2986412506) {
  var result_2986412507 = 0;

  BeforeRet: {
    if (((t_2986412504.data).length == 0)) {
    result_2986412507 = -1;
    break BeforeRet;
    }
    
    var h_2986412592 = (hc_2986412506 & (t_2986412504.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986412504.data[chckIndx(h_2986412592, 0, (t_2986412504.data).length - 1)].Field0)) break Label2;
          if (((t_2986412504.data[chckIndx(h_2986412592, 0, (t_2986412504.data).length - 1)].Field0 == hc_2986412506) && HEX3DHEX3D_2986345833(t_2986412504.data[chckIndx(h_2986412592, 0, (t_2986412504.data).length - 1)].Field1, key_2986412505))) {
          result_2986412507 = h_2986412592;
          break BeforeRet;
          }
          
          h_2986412592 = nextTry_1308622883(h_2986412592, (t_2986412504.data).length - 1);
        }
    };
    result_2986412507 = subInt(-1, h_2986412592);
  };

  return result_2986412507;

}

function HEX5BHEX5DHEX3D_2986411290(t_2986411293, key_2986411294, val_2986411295) {
    if (((t_2986411293.data).length == 0)) {
    var correctSizeHEX60gensym450_2986411378 = slotsNeeded_1308622891(32);
    t_2986411293.counter = 0;
    t_2986411293.data = new Array(chckRange(correctSizeHEX60gensym450_2986411378, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym450_2986411378, 0, 2147483647) ; ++i) { t_2986411293.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986411383 = [0];
    var index_2986411390 = rawGet_2986378310(t_2986411293, key_2986411294, hc_2986411383, 0);
    if ((0 <= index_2986411390)) {
    t_2986411293.data[chckIndx(index_2986411390, 0, (t_2986411293.data).length - 1)].Field2 = val_2986411295;
    }
    else {
      if (((t_2986411293.data).length == 0)) {
      var correctSizeHEX60gensym453_2986411553 = slotsNeeded_1308622891(32);
      t_2986411293.counter = 0;
      t_2986411293.data = new Array(chckRange(correctSizeHEX60gensym453_2986411553, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym453_2986411553, 0, 2147483647) ; ++i) { t_2986411293.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986411558(t_2986411293)) {
      enlarge_2986411815(t_2986411293);
      index_2986411390 = rawGetKnownHC_2986412501(t_2986411293, key_2986411294, hc_2986411383[0]);
      }
      
      index_2986411390 = subInt(-1, index_2986411390);
      rawInsert_2986412251(t_2986411293, t_2986411293, "data", key_2986411294, val_2986411295, hc_2986411383[0], index_2986411390);
      t_2986411293.counter = addInt(t_2986411293.counter, 1);
    }
    

  
}

function prepend_2986379266(L_2986379268, n_2986379269) {
    n_2986379269.prev = null;
    n_2986379269.next = L_2986379268.head;
    if (!((L_2986379268.head == null))) {
    if (!((L_2986379268.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986379268.head.prev = n_2986379269;
    }
    
    L_2986379268.head = n_2986379269;
    if ((L_2986379268.tail == null)) {
    L_2986379268.tail = n_2986379269;
    }
    

  
}

function rawGet_2986400272(t_2986400275, key_2986400276, hc_2986400277, hc_2986400277_Idx) {
  var result_2986400278 = 0;

  BeforeRet: {
    hc_2986400277[hc_2986400277_Idx] = hash_2986345496(key_2986400276);
    if ((hc_2986400277[hc_2986400277_Idx] == 0)) {
    hc_2986400277[hc_2986400277_Idx] = 314159265;
    }
    
    if (((t_2986400275.data).length == 0)) {
    result_2986400278 = -1;
    break BeforeRet;
    }
    
    var h_2986400367 = (hc_2986400277[hc_2986400277_Idx] & (t_2986400275.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986400275.data[chckIndx(h_2986400367, 0, (t_2986400275.data).length - 1)].Field0)) break Label2;
          if (((t_2986400275.data[chckIndx(h_2986400367, 0, (t_2986400275.data).length - 1)].Field0 == hc_2986400277[hc_2986400277_Idx]) && HEX3DHEX3D_2986345833(t_2986400275.data[chckIndx(h_2986400367, 0, (t_2986400275.data).length - 1)].Field1, key_2986400276))) {
          result_2986400278 = h_2986400367;
          break BeforeRet;
          }
          
          h_2986400367 = nextTry_1828716586(h_2986400367, (t_2986400275.data).length - 1);
        }
    };
    result_2986400278 = subInt(-1, h_2986400367);
  };

  return result_2986400278;

}

function exclImpl_2986400266(s_2986400268, key_2986400269) {
          var Temporary5;

  var result_2986400270 = false;

  BeforeRet: {
    var hc_2986400271 = [0];
    var i_2986400633 = rawGet_2986400272(s_2986400268, key_2986400269, hc_2986400271, 0);
    var msk_2986400637 = (s_2986400268.data).length - 1;
    result_2986400270 = true;
    if ((0 <= i_2986400633)) {
    result_2986400270 = false;
    s_2986400268.counter = subInt(s_2986400268.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986400643 = i_2986400633;
          var r_2986400644 = j_2986400643;
          s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)].Field0 = 0;
          s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)].Field1 = nimCopy(s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986400633 = (addInt(i_2986400633, 1) & msk_2986400637);
                if (isEmpty_1828716580(s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986400644 = (s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)].Field0 & msk_2986400637);
                if (!(((((r_2986400644 <= i_2986400633) && (j_2986400643 < r_2986400644)) || ((j_2986400643 < r_2986400644) && (i_2986400633 < j_2986400643))) || ((i_2986400633 < j_2986400643) && (r_2986400644 <= i_2986400633))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)];
          s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)] = genericReset(s_2986400268.data[chckIndx(i_2986400633, 0, (s_2986400268.data).length - 1)], NTI2986344566);
          s_2986400268.data[chckIndx(j_2986400643, 0, (s_2986400268.data).length - 1)] = nimCopy(s_2986400268.data[chckIndx(j_2986400643, 0, (s_2986400268.data).length - 1)], Temporary5, NTI2986344566);
        }
    };
    }
    
  };

  return result_2986400270;

}

function excl_2986400251(s_2986400253, key_2986400254) {
    var _ = exclImpl_2986400266(s_2986400253, key_2986400254);

  
}

function len_2986413112(t_2986413115) {
  var result_2986413116 = 0;

    result_2986413116 = t_2986413115.counter;

  return result_2986413116;

}

function len_2986413029(cache_2986413032) {
  var result_2986413033 = 0;

    result_2986413033 = len_2986413112(cache_2986413032.table);

  return result_2986413033;

}

function mustRehash_2986401538(t_2986401540) {
  var result_2986401541 = false;

    if (!((t_2986401540.counter < (t_2986401540.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986401541 = ((mulInt((t_2986401540.data).length, 2) < mulInt(t_2986401540.counter, 3)) || (subInt((t_2986401540.data).length, t_2986401540.counter) < 4));

  return result_2986401541;

}

function rawGetKnownHC_2986402144(t_2986402147, key_2986402148, hc_2986402149) {
  var result_2986402150 = 0;

  BeforeRet: {
    if (((t_2986402147.data).length == 0)) {
    result_2986402150 = -1;
    break BeforeRet;
    }
    
    var h_2986402235 = (hc_2986402149 & (t_2986402147.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986402147.data[chckIndx(h_2986402235, 0, (t_2986402147.data).length - 1)].Field0)) break Label2;
          if (((t_2986402147.data[chckIndx(h_2986402235, 0, (t_2986402147.data).length - 1)].Field0 == hc_2986402149) && HEX3DHEX3D_2986345833(t_2986402147.data[chckIndx(h_2986402235, 0, (t_2986402147.data).length - 1)].Field1, key_2986402148))) {
          result_2986402150 = h_2986402235;
          break BeforeRet;
          }
          
          h_2986402235 = nextTry_1828716586(h_2986402235, (t_2986402147.data).length - 1);
        }
    };
    result_2986402150 = subInt(-1, h_2986402235);
  };

  return result_2986402150;

}

function rawInsert_2986402648(s_2986402650, data_2986402651, data_2986402651_Idx, key_2986402652, hc_2986402653, h_2986402654) {
    if (((data_2986402651[data_2986402651_Idx]).length == 0)) {
    var correctSizeHEX60gensym403_2986402737 = slotsNeeded_1828716594(64);
    s_2986402650.counter = 0;
    s_2986402650.data = new Array(chckRange(correctSizeHEX60gensym403_2986402737, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym403_2986402737, 0, 2147483647) ; ++i) { s_2986402650.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    data_2986402651[data_2986402651_Idx][chckIndx(h_2986402654, 0, (data_2986402651[data_2986402651_Idx]).length - 1)].Field1 = nimCopy(data_2986402651[data_2986402651_Idx][chckIndx(h_2986402654, 0, (data_2986402651[data_2986402651_Idx]).length - 1)].Field1, key_2986402652, NTI3003121689);
    data_2986402651[data_2986402651_Idx][chckIndx(h_2986402654, 0, (data_2986402651[data_2986402651_Idx]).length - 1)].Field0 = hc_2986402653;

  
}

function enlarge_2986401801(s_2986401803) {
    var n_2986401805 = [];
    n_2986401805 = new Array(chckRange(mulInt((s_2986401803.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986401803.data).length, 2), 0, 2147483647) ; ++i) { n_2986401805[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    var Temporary1 = s_2986401803.data; s_2986401803.data = n_2986401805; n_2986401805 = Temporary1;    Label2: {
      var i_2986401903 = 0;
      var colontmp__2936013139 = 0;
      colontmp__2936013139 = (n_2986401805).length - 1;
      var res_2936013140 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013140 <= colontmp__2936013139)) break Label4;
            i_2986401903 = res_2936013140;
            if (isFilled_1828716583(n_2986401805[chckIndx(i_2986401903, 0, (n_2986401805).length - 1)].Field0)) {
            var j_2986402483 = subInt(-1, rawGetKnownHC_2986402144(s_2986401803, n_2986401805[chckIndx(i_2986401903, 0, (n_2986401805).length - 1)].Field1, n_2986401805[chckIndx(i_2986401903, 0, (n_2986401805).length - 1)].Field0));
            rawInsert_2986402648(s_2986401803, s_2986401803, "data", n_2986401805[chckIndx(i_2986401903, 0, (n_2986401805).length - 1)].Field1, n_2986401805[chckIndx(i_2986401903, 0, (n_2986401805).length - 1)].Field0, j_2986402483);
            }
            
            res_2936013140 = addInt(res_2936013140, 1);
          }
      };
    };

  
}

function incl_2986401422(s_2986401424, key_2986401425) {
    if (((s_2986401424.data).length == 0)) {
    var correctSizeHEX60gensym396_2986401508 = slotsNeeded_1828716594(64);
    s_2986401424.counter = 0;
    s_2986401424.data = new Array(chckRange(correctSizeHEX60gensym396_2986401508, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym396_2986401508, 0, 2147483647) ; ++i) { s_2986401424.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}}; }    }
    
    var hc_2986401523 = [0];
    var index_2986401537 = rawGet_2986400272(s_2986401424, key_2986401425, hc_2986401523, 0);
    if ((index_2986401537 < 0)) {
    if (mustRehash_2986401538(s_2986401424)) {
    enlarge_2986401801(s_2986401424);
    index_2986401537 = rawGetKnownHC_2986402144(s_2986401424, key_2986401425, hc_2986401523[0]);
    }
    
    rawInsert_2986402648(s_2986401424, s_2986401424, "data", key_2986401425, hc_2986401523[0], subInt(-1, index_2986401537));
    s_2986401424.counter = addInt(s_2986401424.counter, 1);
    }
    

  
}

function del_2986413204(t_2986413207, key_2986413208) {
    var hc_2986413209 = [0];
    var i_2986413216 = rawGet_2986378310(t_2986413207, key_2986413208, hc_2986413209, 0);
    var mskHEX60gensym36_2986413220 = (t_2986413207.data).length - 1;
    if ((0 <= i_2986413216)) {
    t_2986413207.counter = subInt(t_2986413207.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986413227 = i_2986413216;
            var rHEX60gensym36_2986413228 = jHEX60gensym36_2986413227;
            t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)].Field0 = 0;
            t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)].Field1 = nimCopy(t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986413216 = (addInt(i_2986413216, 1) & mskHEX60gensym36_2986413220);
                  if (isEmpty_1308622877(t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986413228 = (t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)].Field0 & mskHEX60gensym36_2986413220);
                  if (!(((((rHEX60gensym36_2986413228 <= i_2986413216) && (jHEX60gensym36_2986413227 < rHEX60gensym36_2986413228)) || ((jHEX60gensym36_2986413227 < rHEX60gensym36_2986413228) && (i_2986413216 < jHEX60gensym36_2986413227))) || ((i_2986413216 < jHEX60gensym36_2986413227) && (rHEX60gensym36_2986413228 <= i_2986413216))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986413207.data[chckIndx(jHEX60gensym36_2986413227, 0, (t_2986413207.data).length - 1)] = nimCopy(t_2986413207.data[chckIndx(jHEX60gensym36_2986413227, 0, (t_2986413207.data).length - 1)], t_2986413207.data[chckIndx(i_2986413216, 0, (t_2986413207.data).length - 1)], NTI2986344747);
          }
      };
    };
    }
    

  
}

function remove_2986378962(L_2986378964, n_2986378965) {
    if ((n_2986378965 == L_2986378964.tail)) {
    L_2986378964.tail = n_2986378965.prev;
    }
    
    if ((n_2986378965 == L_2986378964.head)) {
    L_2986378964.head = n_2986378965.next;
    }
    
    if (!((n_2986378965.next == null))) {
    n_2986378965.next.prev = n_2986378965.prev;
    }
    
    if (!((n_2986378965.prev == null))) {
    n_2986378965.prev.next = n_2986378965.next;
    }
    

  
}

function resize_2986412947(cache_2986412950) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986412950.capacity < len_2986413029(cache_2986412950))) break Label2;
          var t_2986413117 = cache_2986412950.list.tail;
          if (cache_2986412950.recordRemovedKeys) {
          incl_2986401422(cache_2986412950.removedKeys, t_2986413117.value.key);
          }
          
          del_2986413204(cache_2986412950.table, t_2986413117.value.key);
          remove_2986378962(cache_2986412950.list, t_2986413117);
        }
    };

  
}

function addNewNode_2986411209(cache_2986411212, key_2986411213, val_2986411214) {
    var node_2986411226 = newDoublyLinkedNode_2986411217({key: nimCopy(null, key_2986411213, NTI3003121689), val: val_2986411214});
    HEX5BHEX5DHEX3D_2986411290(cache_2986411212.table, key_2986411213, node_2986411226);
    prepend_2986379266(cache_2986411212.list, node_2986411226);
    if (cache_2986411212.recordRemovedKeys) {
    excl_2986400251(cache_2986411212.removedKeys, key_2986411213);
    }
    
    resize_2986412947(cache_2986411212);

  
}

function HEX5BHEX5DHEX3D_2986410990(cache_2986410993, key_2986410994, val_2986410995) {
    var node_2986411182 = getOrDefault_2986411085(cache_2986410993.table, key_2986410994, null);
    if ((node_2986411182 == null)) {
    addNewNode_2986411209(cache_2986410993, key_2986410994, val_2986410995);
    }
    else {
      node_2986411182.value.val = val_2986410995;
      remove_2986378962(cache_2986410993.list, node_2986411182);
      prepend_2986379266(cache_2986410993.list, node_2986411182);
    }
    

  
}

function getOrCreateFunctionExecutionContext_2986410843(ctxHEX60gensym85_2986410844, dataHEX60gensym85_2986410845) {
  var result_2986410846 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym85_2986410855 = null;
      Label2: {
        var node_2936013110 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936013111 = ctxHEX60gensym85_2986410844.itemsFunctionExecutionContext.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2936013111 == null))) break Label4;
              node_2936013110 = nimCopy(node_2936013110, it_2936013111.value, NTI2986344711);
              existingHEX60gensym85_2986410855 = node_2936013110.val;
              if (((hash_3070231505(existingHEX60gensym85_2986410855) == hash_3070231505(dataHEX60gensym85_2986410845)) && HEX3DHEX3D_3070231549(existingHEX60gensym85_2986410855, dataHEX60gensym85_2986410845))) {
              result_2986410846 = existingHEX60gensym85_2986410855;
              break BeforeRet;
              }
              
              it_2936013111 = it_2936013111.next;
            }
        };
      };
    };
    var itemHEX60gensym85_2986410856 = getItem_2986410834(dataHEX60gensym85_2986410845);
    var keyHEX60gensym85_2986410857 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym85_2986410856, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym85_2986410844.depGraph.changed, keyHEX60gensym85_2986410857, ctxHEX60gensym85_2986410844.depGraph.revision);
    HEX5BHEX5DHEX3D_2986410990(ctxHEX60gensym85_2986410844.itemsFunctionExecutionContext, itemHEX60gensym85_2986410856, dataHEX60gensym85_2986410845);
    result_2986410846 = dataHEX60gensym85_2986410845;
    break BeforeRet;
  };

  return result_2986410846;

}

function rawGet_2986379640(t_2986379643, key_2986379644, hc_2986379645, hc_2986379645_Idx) {
  var result_2986379646 = 0;

  BeforeRet: {
    hc_2986379645[hc_2986379645_Idx] = hash_3070231505(key_2986379644);
    if ((hc_2986379645[hc_2986379645_Idx] == 0)) {
    hc_2986379645[hc_2986379645_Idx] = 314159265;
    }
    
    if (((t_2986379643.data).length == 0)) {
    result_2986379646 = -1;
    break BeforeRet;
    }
    
    var h_2986379732 = (hc_2986379645[hc_2986379645_Idx] & (t_2986379643.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986379643.data[chckIndx(h_2986379732, 0, (t_2986379643.data).length - 1)].Field0)) break Label2;
          if (((t_2986379643.data[chckIndx(h_2986379732, 0, (t_2986379643.data).length - 1)].Field0 == hc_2986379645[hc_2986379645_Idx]) && HEX3DHEX3D_3070231549(t_2986379643.data[chckIndx(h_2986379732, 0, (t_2986379643.data).length - 1)].Field1, key_2986379644))) {
          result_2986379646 = h_2986379732;
          break BeforeRet;
          }
          
          h_2986379732 = nextTry_1308622883(h_2986379732, (t_2986379643.data).length - 1);
        }
    };
    result_2986379646 = subInt(-1, h_2986379732);
  };

  return result_2986379646;

}

function hasKey_2986436887(t_2986436890, key_2986436891) {
  var result_2986436892 = false;

    var hc_2986436893 = [0];
    result_2986436892 = (0 <= rawGet_2986379640(t_2986436890, key_2986436891, hc_2986436893, 0));

  return result_2986436892;

}

function contains_2986436881(t_2986436884, key_2986436885) {
  var result_2986436886 = false;

  BeforeRet: {
    result_2986436886 = hasKey_2986436887(t_2986436884, key_2986436885);
    break BeforeRet;
  };

  return result_2986436886;

}

function contains_2986436787(cache_2986436790, key_2986436791) {
  var result_2986436792 = false;

    result_2986436792 = contains_2986436881(cache_2986436790.table, key_2986436791);

  return result_2986436792;

}

function addQuoted_3070231411(s_3070231413, s_3070231413_Idx, x_3070231414) {
    s_3070231413[s_3070231413_Idx].push.apply(s_3070231413[s_3070231413_Idx], HEX24_3070231271(x_3070231414));;

  
}

function collectionToString_3070231377(x_3070231379, prefix_3070231380, separator_3070231381, suffix_3070231382) {
  var result_3070231383 = [[]];

    result_3070231383[0] = nimCopy(null, prefix_3070231380, NTI33554449);
    var firstElement_3070231384 = true;
    Label1: {
      var value_3070231407 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936013148 = 0;
      var L_2936013149 = (x_3070231379).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013148 < L_2936013149)) break Label3;
            value_3070231407 = x_3070231379[i_2936013148];
            if (firstElement_3070231384) {
            firstElement_3070231384 = false;
            }
            else {
            result_3070231383[0].push.apply(result_3070231383[0], separator_3070231381);;
            }
            
            addQuoted_3070231411(result_3070231383, 0, value_3070231407);
            i_2936013148 += 1;
            if (!(((x_3070231379).length == L_2936013149))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3070231383[0].push.apply(result_3070231383[0], suffix_3070231382);;

  return result_3070231383[0];

}

function HEX24_3070231373(x_3070231375) {
  var result_3070231376 = [];

    result_3070231376 = nimCopy(null, collectionToString_3070231377(x_3070231375, [64,91], [44,32], [93]), NTI33554449);

  return result_3070231376;

}

function formatValue_3070231368(result_3070231370, result_3070231370_Idx, value_3070231371, specifier_3070231372) {
    formatValue_721420459(result_3070231370, result_3070231370_Idx, HEX24_3070231373(value_3070231371), specifier_3070231372);

  
}

function HEX24_3070231486(self_3070231488) {
  var result_3070231489 = [[]];

    if (isSome_1191185117(self_3070231488)) {
    result_3070231489[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_855639425(result_3070231489, 0, self_3070231488.val);
    result_3070231489[0].push.apply(result_3070231489[0], [41]);;
    }
    else {
      result_3070231489[0] = nimCopy(null, [110,111,110,101,40,105,110,116,41], NTI33554449);
    }
    

  return result_3070231489[0];

}

function formatValue_3070231435(result_3070231437, result_3070231437_Idx, value_3070231438, specifier_3070231439) {
    formatValue_721420459(result_3070231437, result_3070231437_Idx, HEX24_3070231486(value_3070231438), specifier_3070231439);

  
}

function HEX24_3070231355(fec_3070231356) {
  var result_3070231357 = [];

  BeforeRet: {
    var fmtRes_3070231362 = [mnewString(0)];
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [67,97,108,108,32]);;
    formatValue_3070231363(fmtRes_3070231362, 0, fec_3070231356.node, []);
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [40]);;
    formatValue_3070231368(fmtRes_3070231362, 0, fec_3070231356.arguments, []);
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [44,32,109,97,120,76,111,111,112,73,116,101,114,97,116,105,111,110,115,61]);;
    formatValue_3070231435(fmtRes_3070231362, 0, fec_3070231356.maxLoopIterations, []);
    fmtRes_3070231362[0].push.apply(fmtRes_3070231362[0], [41]);;
    result_3070231357 = nimCopy(null, fmtRes_3070231362[0], NTI33554449);
    break BeforeRet;
  };

  return result_3070231357;

}

function raiseKeyError_2986437160(key_2986437162) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3070231355(key_2986437162) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986437066(t_2986437069, key_2986437070) {
  var result_2986437071 = null;
  var result_2986437071_Idx = 0;

    var hcHEX60gensym22_2986437072 = [0];
    var indexHEX60gensym22_2986437079 = rawGet_2986379640(t_2986437069, key_2986437070, hcHEX60gensym22_2986437072, 0);
    if ((0 <= indexHEX60gensym22_2986437079)) {
    result_2986437071 = t_2986437069.data[chckIndx(indexHEX60gensym22_2986437079, 0, (t_2986437069.data).length - 1)]; result_2986437071_Idx = "Field2";
    }
    else {
    raiseKeyError_2986437160(key_2986437070);
    }
    

  return [result_2986437071, result_2986437071_Idx];

}

function remove_2986385528(L_2986385530, n_2986385531) {
    if ((n_2986385531 == L_2986385530.tail)) {
    L_2986385530.tail = n_2986385531.prev;
    }
    
    if ((n_2986385531 == L_2986385530.head)) {
    L_2986385530.head = n_2986385531.next;
    }
    
    if (!((n_2986385531.next == null))) {
    n_2986385531.next.prev = n_2986385531.prev;
    }
    
    if (!((n_2986385531.prev == null))) {
    n_2986385531.prev.next = n_2986385531.next;
    }
    

  
}

function prepend_2986381817(L_2986381819, n_2986381820) {
    n_2986381820.prev = null;
    n_2986381820.next = L_2986381819.head;
    if (!((L_2986381819.head == null))) {
    if (!((L_2986381819.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986381819.head.prev = n_2986381820;
    }
    
    L_2986381819.head = n_2986381820;
    if ((L_2986381819.tail == null)) {
    L_2986381819.tail = n_2986381820;
    }
    

  
}

function HEX5BHEX5D_2986436980(cache_2986436983, key_2986436984) {
    var Temporary1;

  var result_2986436985 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2986437173 = (Temporary1 = HEX5BHEX5D_2986437066(cache_2986436983.table, key_2986436984), Temporary1)[0][Temporary1[1]];
    result_2986436985 = nimCopy(result_2986436985, node_2986437173.value.val, NTI3070230535);
    remove_2986385528(cache_2986436983.list, node_2986437173);
    prepend_2986381817(cache_2986436983.list, node_2986437173);

  return result_2986436985;

}

function computeFunctionExecution_2986437243(ctxHEX60gensym116_2986437244, inputHEX60gensym116_2986437245) {
    var Temporary3;
    var Temporary5;

  var result_2986437246 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym116_2986437247 = startTimer_2281701428();
    ctxHEX60gensym116_2986437244.statsFunctionExecution.totalCalls = addInt(ctxHEX60gensym116_2986437244.statsFunctionExecution.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym116_2986437336 = getItem_2986410834(inputHEX60gensym116_2986437245);
    var keyHEX60gensym116_2986437337 = {Field0: nimCopy(null, itemHEX60gensym116_2986437336, NTI3003121689), Field1: 6};
    recordDependency_2986397948(ctxHEX60gensym116_2986437244, itemHEX60gensym116_2986437336, 6);
    if (ctxHEX60gensym116_2986437244.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym116_2986437244.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110], [44,32], HEX24_3003121876(itemHEX60gensym116_2986437336));
    }
    
    force_2986414319(ctxHEX60gensym116_2986437244, keyHEX60gensym116_2986437337);
    if (!(contains_2986436787(ctxHEX60gensym116_2986437244.queryCacheFunctionExecution, inputHEX60gensym116_2986437245))) {
    raiseException({message: ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3070231355(inputHEX60gensym116_2986437245) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986437246 = nimCopy(result_2986437246, HEX5BHEX5D_2986436980(ctxHEX60gensym116_2986437244.queryCacheFunctionExecution, inputHEX60gensym116_2986437245), NTI3070230535);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym116_2986437244.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym116_2986437244.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym116_2986437244.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym116_2986437244.statsFunctionExecution.time = addInt(ctxHEX60gensym116_2986437244.statsFunctionExecution.time, elapsed_2281701439(timerHEX60gensym116_2986437247));
    }
  };

  return result_2986437246;

}

function rawGet_2986374207(t_2986374210, key_2986374211, hc_2986374212, hc_2986374212_Idx) {
  var result_2986374213 = 0;

  BeforeRet: {
    hc_2986374212[hc_2986374212_Idx] = hash_3070231679(key_2986374211);
    if ((hc_2986374212[hc_2986374212_Idx] == 0)) {
    hc_2986374212[hc_2986374212_Idx] = 314159265;
    }
    
    if (((t_2986374210.data).length == 0)) {
    result_2986374213 = -1;
    break BeforeRet;
    }
    
    var h_2986374299 = (hc_2986374212[hc_2986374212_Idx] & (t_2986374210.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986374210.data[chckIndx(h_2986374299, 0, (t_2986374210.data).length - 1)].Field0)) break Label2;
          if (((t_2986374210.data[chckIndx(h_2986374299, 0, (t_2986374210.data).length - 1)].Field0 == hc_2986374212[hc_2986374212_Idx]) && HEX3DHEX3D_3070231682(t_2986374210.data[chckIndx(h_2986374299, 0, (t_2986374210.data).length - 1)].Field1, key_2986374211))) {
          result_2986374213 = h_2986374299;
          break BeforeRet;
          }
          
          h_2986374299 = nextTry_1308622883(h_2986374299, (t_2986374210.data).length - 1);
        }
    };
    result_2986374213 = subInt(-1, h_2986374299);
  };

  return result_2986374213;

}

function hasKey_2986433784(t_2986433787, key_2986433788) {
  var result_2986433789 = false;

    var hc_2986433790 = [0];
    result_2986433789 = (0 <= rawGet_2986374207(t_2986433787, key_2986433788, hc_2986433790, 0));

  return result_2986433789;

}

function contains_2986433778(t_2986433781, key_2986433782) {
  var result_2986433783 = false;

  BeforeRet: {
    result_2986433783 = hasKey_2986433784(t_2986433781, key_2986433782);
    break BeforeRet;
  };

  return result_2986433783;

}

function contains_2986433684(cache_2986433687, key_2986433688) {
  var result_2986433689 = false;

    result_2986433689 = contains_2986433778(cache_2986433687.table, key_2986433688);

  return result_2986433689;

}

function HEX5BHEX5D_2986433963(t_2986433966, key_2986433967) {
  var result_2986433968 = null;
  var result_2986433968_Idx = 0;

    var hcHEX60gensym22_2986433969 = [0];
    var indexHEX60gensym22_2986433976 = rawGet_2986374207(t_2986433966, key_2986433967, hcHEX60gensym22_2986433969, 0);
    if ((0 <= indexHEX60gensym22_2986433976)) {
    result_2986433968 = t_2986433966.data[chckIndx(indexHEX60gensym22_2986433976, 0, (t_2986433966.data).length - 1)]; result_2986433968_Idx = "Field2";
    }
    else {
    raiseKeyError_2986430953(key_2986433967);
    }
    

  return [result_2986433968, result_2986433968_Idx];

}

function remove_2986377637(L_2986377639, n_2986377640) {
    if ((n_2986377640 == L_2986377639.tail)) {
    L_2986377639.tail = n_2986377640.prev;
    }
    
    if ((n_2986377640 == L_2986377639.head)) {
    L_2986377639.head = n_2986377640.next;
    }
    
    if (!((n_2986377640.next == null))) {
    n_2986377640.next.prev = n_2986377640.prev;
    }
    
    if (!((n_2986377640.prev == null))) {
    n_2986377640.prev.next = n_2986377640.next;
    }
    

  
}

function prepend_2986376384(L_2986376386, n_2986376387) {
    n_2986376387.prev = null;
    n_2986376387.next = L_2986376386.head;
    if (!((L_2986376386.head == null))) {
    if (!((L_2986376386.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986376386.head.prev = n_2986376387;
    }
    
    L_2986376386.head = n_2986376387;
    if ((L_2986376386.tail == null)) {
    L_2986376386.tail = n_2986376387;
    }
    

  
}

function HEX5BHEX5D_2986433877(cache_2986433880, key_2986433881) {
    var Temporary1;

  var result_2986433882 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    var node_2986434069 = (Temporary1 = HEX5BHEX5D_2986433963(cache_2986433880.table, key_2986433881), Temporary1)[0][Temporary1[1]];
    result_2986433882 = nimCopy(result_2986433882, node_2986434069.value.val, NTI3070230535);
    remove_2986377637(cache_2986433880.list, node_2986434069);
    prepend_2986376384(cache_2986433880.list, node_2986434069);

  return result_2986433882;

}

function computeSymbolValue_2986434139(ctxHEX60gensym112_2986434140, inputHEX60gensym112_2986434141, recordDependencyHEX60gensym112_2986434142) {
    var Temporary3;
    var Temporary5;

  var result_2986434143 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var timerHEX60gensym112_2986434144 = startTimer_2281701428();
    ctxHEX60gensym112_2986434140.statsSymbolValue.totalCalls = addInt(ctxHEX60gensym112_2986434140.statsSymbolValue.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym112_2986434233 = getItem_2986407430(inputHEX60gensym112_2986434141);
    var keyHEX60gensym112_2986434234 = {Field0: nimCopy(null, itemHEX60gensym112_2986434233, NTI3003121689), Field1: 5};
    if (recordDependencyHEX60gensym112_2986434142) {
    recordDependency_2986397948(ctxHEX60gensym112_2986434140, itemHEX60gensym112_2986434233, 5);
    }
    
    var colorHEX60gensym112_2986434235 = nodeColor_3003124149(ctxHEX60gensym112_2986434140.depGraph, keyHEX60gensym112_2986434234, 0);
    if (ctxHEX60gensym112_2986434140.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym112_2986434140.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [83,121,109,98,111,108,86,97,108,117,101], [32], reprEnum(colorHEX60gensym112_2986434235, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym112_2986434233));
    }
    
    if ((colorHEX60gensym112_2986434235 == 2)) {
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    if (ctxHEX60gensym112_2986434140.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym112_2986434140, keyHEX60gensym112_2986434234);
    if (false) {
    markRed_3003136501(ctxHEX60gensym112_2986434140.depGraph, keyHEX60gensym112_2986434234, []);
    }
    
    if ((ctxHEX60gensym112_2986434140.enableLogging && contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141)));
    }
    
    }
    else {
      if ((ctxHEX60gensym112_2986434140.enableLogging && contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141)));
      }
      
    }
    
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym112_2986434141) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434143 = nimCopy(result_2986434143, HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141), NTI3070230535);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym112_2986434235 == 0)) {
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    if (ctxHEX60gensym112_2986434140.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym112_2986434140, keyHEX60gensym112_2986434234);
    if (false) {
    markRed_3003136501(ctxHEX60gensym112_2986434140.depGraph, keyHEX60gensym112_2986434234, []);
    }
    
    if ((ctxHEX60gensym112_2986434140.enableLogging && contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141)));
    }
    
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym112_2986434141) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434143 = nimCopy(result_2986434143, HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141), NTI3070230535);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym112_2986434140.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym112_2986434140, keyHEX60gensym112_2986434234, true) == 0)) {
    if ((ctxHEX60gensym112_2986434140.enableLogging && contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141)));
    }
    
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym112_2986434141) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434143 = nimCopy(result_2986434143, HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141), NTI3070230535);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym112_2986434140.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym112_2986434140, keyHEX60gensym112_2986434234);
      if (false) {
      markRed_3003136501(ctxHEX60gensym112_2986434140.depGraph, keyHEX60gensym112_2986434234, []);
      }
      
      if ((ctxHEX60gensym112_2986434140.enableLogging && contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141)));
      }
      
      if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
      raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym112_2986434141) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986434143 = nimCopy(result_2986434143, HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141), NTI3070230535);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym112_2986434235 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,49,50,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym112_2986434140.enableLogging && contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070231271(HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141)));
    }
    
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    force_2986414319(ctxHEX60gensym112_2986434140, keyHEX60gensym112_2986434234);
    }
    
    if (!(contains_2986433684(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141))) {
    raiseException({message: ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3070231676(inputHEX60gensym112_2986434141) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986434143 = nimCopy(result_2986434143, HEX5BHEX5D_2986433877(ctxHEX60gensym112_2986434140.queryCacheSymbolValue, inputHEX60gensym112_2986434141), NTI3070230535);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym112_2986434140.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym112_2986434140.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym112_2986434140.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym112_2986434140.statsSymbolValue.time = addInt(ctxHEX60gensym112_2986434140.statsSymbolValue.time, elapsed_2281701439(timerHEX60gensym112_2986434144));
    }
  };

  return result_2986434143;

}

function voidValue_3070231244() {
  var result_3070231245 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231245 = nimCopy(result_3070231245, {kind: 1, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);

  return result_3070231245;

}

function some_2986420900(val_2986420902) {
  var result_2986420903 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2986420903.has = true;
    result_2986420903.val = nimCopy(result_2986420903.val, val_2986420902, NTI3070230535);

  return result_2986420903;

}

function none_2986420908() {
  var result_2986420915 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  return result_2986420915;

}

function none_2986420905() {
  var result_2986420907 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

    result_2986420907 = nimCopy(result_2986420907, none_2986420908(), NTI2986389396);

  return result_2986420907;

}

function getValue_2986420365(ctxHEX60gensym95_2986420366, inputHEX60gensym95_2986420367) {
  var result_2986420373 = ({val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), has: false});

  BeforeRet: {
    if (contains_2986420450(ctxHEX60gensym95_2986420366.queryCacheValue, inputHEX60gensym95_2986420367)) {
    result_2986420373 = nimCopy(result_2986420373, some_2986420900(HEX5BHEX5D_2986420643(ctxHEX60gensym95_2986420366.queryCacheValue, inputHEX60gensym95_2986420367)), NTI2986389396);
    break BeforeRet;
    }
    
    result_2986420373 = nimCopy(result_2986420373, none_2986420905(), NTI2986389396);
    break BeforeRet;
  };

  return result_2986420373;

}

function isSome_3120562208(self_3120562210) {
  var result_3120562211 = false;

    result_3120562211 = self_3120562210.has;

  return result_3120562211;

}

function isNone_3120562233(self_3120562235) {
  var result_3120562236 = false;

    result_3120562236 = !(self_3120562235.has);

  return result_3120562236;

}

function get_3120562225(self_3120562227) {
  var result_3120562228 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    if (isNone_3120562233(self_3120562227)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3120562228 = self_3120562227.val;

  return result_3120562228;

}

function newAstFunctionValue_3070231267(node_3070231268, rev_3070231269) {
  var result_3070231270 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3070231270 = nimCopy(result_3070231270, {kind: 5, node: node_3070231268, rev: rev_3070231269, stringValue: [], intValue: 0, impl: null, typ: null}, NTI3070230535);
    break BeforeRet;
  };

  return result_3070231270;

}

function computeValueImpl_2986345270(ctx_2986345271, node_2986345272) {
      var Temporary4;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;

  var result_2986453998 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym695_2986454000 = (ctx_2986345271.enableLogging || ctx_2986345271.enableQueryLogging);
    if (logQueryHEX60gensym695_2986454000) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym695_2986454000) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345272) || []));
    }
    
    try {
    Label3: {
      var expr_2986454011 = node_2986345272;
      var pos_2986454012 = 0;
      var _ = pos_2986454012;
      if ((expr_2986454011.kind == 2)) {
++excHandler;
      try {
      Temporary4 = nsuParseInt(node_2986345272.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_2986454019 = Temporary4;
      result_2986453998 = nimCopy(result_2986453998, {kind: 3, intValue: value_2986454019, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 3)) {
      result_2986453998 = nimCopy(result_2986453998, {kind: 2, stringValue: nimCopy(null, node_2986345272.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 8)) {
      var function_2986454028 = HEX5BHEX5D_2969567316(node_2986345272, 0);
      var functionValue_2986454029 = computeValue_2986420934(ctx_2986345271, function_2986454028, true);
      if ((functionValue_2986454029.kind == 0)) {
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var args_2986454038 = [];
      Label6: {
        var arg_2986454057 = null;
        var colontmp__2936013096 = [];
        colontmp__2936013096 = HEX5BHEX5D_3120563989(node_2986345272.children, HEX2EHEX2E_1040187488(1, 1));
        var i_2936013097 = 0;
        var L_2936013098 = (colontmp__2936013096).length;
        Label7: {
            Label8: while (true) {
            if (!(i_2936013097 < L_2936013098)) break Label8;
              arg_2986454057 = colontmp__2936013096[chckIndx(i_2936013097, 0, (colontmp__2936013096).length - 1)];
              var value_2986454058 = computeValue_2986420934(ctx_2986345271, arg_2986454057, true);
              if ((value_2986454058.kind == 0)) {
              result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
              break BeforeRet;
              }
              
              var Temporary9 = nimCopy(null, value_2986454058, NTI3070230535);
              args_2986454038.push(Temporary9);;
              i_2936013097 = addInt(i_2936013097, 1);
              if (!(((colontmp__2936013096).length == L_2936013098))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((functionValue_2986454029.kind == 4)) {
        var Temporary10 = functionValue_2986454029;
        if (ConstSet113[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI3070230534)); }
      if ((Temporary10.impl == null)) {
      var fmtRes_2986454079 = [mnewString(0)];
      fmtRes_2986454079[0].push.apply(fmtRes_2986454079[0], [91,99,111,109,112,105,108,101,114,93,58,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,97,116,32,99,111,109,112,105,108,101,32,116,105,109,101,32,39]);;
      formatValue_3003121884(fmtRes_2986454079, 0, function_2986454028.id, []);
      fmtRes_2986454079[0].push.apply(fmtRes_2986454079[0], [39,32,97,116,32]);;
      formatValue_3070231363(fmtRes_2986454079, 0, node_2986345272, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986454079[0], NTI33554449)]);
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var Temporary11 = functionValue_2986454029;
      if (ConstSet114[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI3070230534)); }
      result_2986453998 = nimCopy(result_2986453998, Temporary11.impl(args_2986454038), NTI3070230535);
      break BeforeRet;
      }
      
      if ((functionValue_2986454029.kind == 5)) {
      var Temporary12 = functionValue_2986454029;
      if (ConstSet122[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3070230534)); }
      var fec_2986454094 = getOrCreateFunctionExecutionContext_2986410843(ctx_2986345271, {node: Temporary12.node, arguments: nimCopy(null, args_2986454038, NTI2986408772), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
      result_2986453998 = nimCopy(result_2986453998, computeFunctionExecution_2986437243(ctx_2986345271, fec_2986454094), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 7)) {
      if ((len_2969567320(node_2986345272) == 0)) {
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986453998 = nimCopy(result_2986453998, computeValue_2986420934(ctx_2986345271, last_2969567490(node_2986345272), true), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 4)) {
      if ((len_2969567320(node_2986345272) == 0)) {
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986453998 = nimCopy(result_2986453998, computeValue_2986420934(ctx_2986345271, HEX5BHEX5D_2969567316(node_2986345272, 0), true), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 1)) {
      var id_2986454107 = nimCopy(null, node_2986345272.reff, NTI2181038083);
      var symbols_2986454108 = computeSymbols_2986427564(ctx_2986345271, node_2986345272, true);
      if (contains_2986452984(symbols_2986454108, id_2986454107)) {
      var symbol_2986454275 = (Temporary13 = HEX5BHEX5D_2986453239(symbols_2986454108, id_2986454107), Temporary13)[0][Temporary13[1]];
      result_2986453998 = nimCopy(result_2986453998, computeSymbolValue_2986434139(ctx_2986345271, symbol_2986454275, true), NTI3070230535);
      break BeforeRet;
      }
      
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 9)) {
      if ((len_2969567320(node_2986345272) < 2)) {
      result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var index_2986454280 = 0;
      Label14: {
          Label15: while (true) {
          if (!(addInt(index_2986454280, 1) < len_2969567320(node_2986345272))) break Label15;
            try {
            var condition_2986454285 = HEX5BHEX5D_2969567316(node_2986345272, index_2986454280);
            var trueCase_2986454286 = HEX5BHEX5D_2969567316(node_2986345272, addInt(index_2986454280, 1));
            var conditionValue_2986454287 = computeValue_2986420934(ctx_2986345271, condition_2986454285, true);
            if ((conditionValue_2986454287.kind == 0)) {
            result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_2986454287.kind == 3))) {
            var fmtRes_2986454300 = [mnewString(0)];
            fmtRes_2986454300[0].push.apply(fmtRes_2986454300[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3120563615(fmtRes_2986454300, 0, conditionValue_2986454287, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986454300[0], NTI33554449)]);
            result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_2986454287.intValue == 0))) {
            var trueCaseValue_2986454306 = computeValue_2986420934(ctx_2986345271, trueCase_2986454286, true);
            result_2986453998 = nimCopy(result_2986453998, trueCaseValue_2986454306, NTI3070230535);
            break BeforeRet;
            }
            
            } finally {
            index_2986454280 = addInt(index_2986454280, 2);
            }
          }
      };
      if (!((modInt(len_2969567320(node_2986345272), 2) == 0))) {
      var falseCaseValue_2986454307 = computeValue_2986420934(ctx_2986345271, last_2969567490(node_2986345272), true);
      result_2986453998 = nimCopy(result_2986453998, falseCaseValue_2986454307, NTI3070230535);
      break BeforeRet;
      }
      
      result_2986453998 = nimCopy(result_2986453998, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_2986454011.kind == 11)) {
        var oHEX60gensym720_2986454314 = getValue_2986420365(ctx_2986345271, node_2986345272);
        if (!isSome_3120562208(oHEX60gensym720_2986454314)) Temporary19 = false; else {          var value_2986454360 = nimCopy(null, get_3120562225(oHEX60gensym720_2986454314), NTI3070230535);
          Temporary19 = true;        }        if (!Temporary19) Temporary18 = false; else {          Temporary18 = (value_2986454360.kind == 5);        }      if (Temporary18) {
      var Temporary20 = value_2986454360;
      if (ConstSet123[Temporary20.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary20.kind, NTI3070230534)); }
      Temporary17 = Temporary20.rev;
      }
      else {
      Temporary17 = 0;
      }
      
      var currentRev_2986454365 = Temporary17;
      result_2986453998 = nimCopy(result_2986453998, newAstFunctionValue_3070231267(node_2986345272, addInt(currentRev_2986454365, 1)), NTI3070230535);
      break BeforeRet;
      }
      else {
        result_2986453998 = nimCopy(result_2986453998, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
      }
      }}}}}}}
    };
    } finally {
    if ((logQueryHEX60gensym695_2986454000 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070231271(result_2986453998) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym695_2986454000) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986453998;

}

function getOrDefault_2986353532(t_2986353535, key_2986353536, default_2986353537) {
    var Temporary1;

  var result_2986353538 = null;

    var hcHEX60gensym159_2986353541 = [0];
    var indexHEX60gensym159_2986353900 = rawGet_2986353542(t_2986353535, key_2986353536, hcHEX60gensym159_2986353541, 0);
    if ((0 <= indexHEX60gensym159_2986353900)) {
    Temporary1 = t_2986353535.data[chckIndx(indexHEX60gensym159_2986353900, 0, (t_2986353535.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986353537;
    }
    
    result_2986353538 = Temporary1;

  return result_2986353538;

}

function newDoublyLinkedNode_2986354025(value_2986354027) {
  var result_2986354028 = null;

    result_2986354028 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2986354028.value = nimCopy(result_2986354028.value, value_2986354027, NTI2986344888);

  return result_2986354028;

}

function mustRehash_2986354384(t_2986354386) {
  var result_2986354387 = false;

    if (!((t_2986354386.counter < (t_2986354386.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986354387 = ((mulInt((t_2986354386.data).length, 2) < mulInt(t_2986354386.counter, 3)) || (subInt((t_2986354386.data).length, t_2986354386.counter) < 4));

  return result_2986354387;

}

function rawInsert_2986355077(t_2986355081, data_2986355082, data_2986355082_Idx, key_2986355083, val_2986355084, hc_2986355085, h_2986355086) {
    data_2986355082[data_2986355082_Idx][chckIndx(h_2986355086, 0, (data_2986355082[data_2986355082_Idx]).length - 1)].Field1 = key_2986355083;
    data_2986355082[data_2986355082_Idx][chckIndx(h_2986355086, 0, (data_2986355082[data_2986355082_Idx]).length - 1)].Field2 = val_2986355084;
    data_2986355082[data_2986355082_Idx][chckIndx(h_2986355086, 0, (data_2986355082[data_2986355082_Idx]).length - 1)].Field0 = hc_2986355085;

  
}

function enlarge_2986354641(t_2986354644) {
    var n_2986354647 = [];
    n_2986354647 = new Array(chckRange(mulInt((t_2986354644.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986354644.data).length, 2), 0, 2147483647) ; ++i) { n_2986354647[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986354644.data; t_2986354644.data = n_2986354647; n_2986354647 = Temporary1;    Label2: {
      var i_2986354745 = 0;
      var colontmp__2936013154 = 0;
      colontmp__2936013154 = (n_2986354647).length - 1;
      var res_2936013155 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013155 <= colontmp__2936013154)) break Label4;
            i_2986354745 = res_2936013155;
            var eh_2986354826 = n_2986354647[chckIndx(i_2986354745, 0, (n_2986354647).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986354826)) {
            var j_2986354830 = (eh_2986354826 & (t_2986354644.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986354644.data[chckIndx(j_2986354830, 0, (t_2986354644.data).length - 1)].Field0)) break Label6;
                  j_2986354830 = nextTry_1308622883(j_2986354830, (t_2986354644.data).length - 1);
                }
            };
            rawInsert_2986355077(t_2986354644, t_2986354644, "data", n_2986354647[chckIndx(i_2986354745, 0, (n_2986354647).length - 1)].Field1, n_2986354647[chckIndx(i_2986354745, 0, (n_2986354647).length - 1)].Field2, eh_2986354826, j_2986354830);
            }
            
            res_2936013155 = addInt(res_2936013155, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986355327(t_2986355330, key_2986355331, hc_2986355332) {
  var result_2986355333 = 0;

  BeforeRet: {
    if (((t_2986355330.data).length == 0)) {
    result_2986355333 = -1;
    break BeforeRet;
    }
    
    var h_2986355418 = (hc_2986355332 & (t_2986355330.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986355330.data[chckIndx(h_2986355418, 0, (t_2986355330.data).length - 1)].Field0)) break Label2;
          if (((t_2986355330.data[chckIndx(h_2986355418, 0, (t_2986355330.data).length - 1)].Field0 == hc_2986355332) && (t_2986355330.data[chckIndx(h_2986355418, 0, (t_2986355330.data).length - 1)].Field1 == key_2986355331))) {
          result_2986355333 = h_2986355418;
          break BeforeRet;
          }
          
          h_2986355418 = nextTry_1308622883(h_2986355418, (t_2986355330.data).length - 1);
        }
    };
    result_2986355333 = subInt(-1, h_2986355418);
  };

  return result_2986355333;

}

function HEX5BHEX5DHEX3D_2986354116(t_2986354119, key_2986354120, val_2986354121) {
    if (((t_2986354119.data).length == 0)) {
    var correctSizeHEX60gensym164_2986354204 = slotsNeeded_1308622891(32);
    t_2986354119.counter = 0;
    t_2986354119.data = new Array(chckRange(correctSizeHEX60gensym164_2986354204, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym164_2986354204, 0, 2147483647) ; ++i) { t_2986354119.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986354209 = [0];
    var index_2986354216 = rawGet_2986353542(t_2986354119, key_2986354120, hc_2986354209, 0);
    if ((0 <= index_2986354216)) {
    t_2986354119.data[chckIndx(index_2986354216, 0, (t_2986354119.data).length - 1)].Field2 = val_2986354121;
    }
    else {
      if (((t_2986354119.data).length == 0)) {
      var correctSizeHEX60gensym167_2986354379 = slotsNeeded_1308622891(32);
      t_2986354119.counter = 0;
      t_2986354119.data = new Array(chckRange(correctSizeHEX60gensym167_2986354379, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym167_2986354379, 0, 2147483647) ; ++i) { t_2986354119.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986354384(t_2986354119)) {
      enlarge_2986354641(t_2986354119);
      index_2986354216 = rawGetKnownHC_2986355327(t_2986354119, key_2986354120, hc_2986354209[0]);
      }
      
      index_2986354216 = subInt(-1, index_2986354216);
      rawInsert_2986355077(t_2986354119, t_2986354119, "data", key_2986354120, val_2986354121, hc_2986354209[0], index_2986354216);
      t_2986354119.counter = addInt(t_2986354119.counter, 1);
    }
    

  
}

function len_2986356129(t_2986356132) {
  var result_2986356133 = 0;

    result_2986356133 = t_2986356132.counter;

  return result_2986356133;

}

function len_2986356046(cache_2986356049) {
  var result_2986356050 = 0;

    result_2986356050 = len_2986356129(cache_2986356049.table);

  return result_2986356050;

}

function del_2986356221(t_2986356224, key_2986356225) {
    var hc_2986356226 = [0];
    var i_2986356233 = rawGet_2986353542(t_2986356224, key_2986356225, hc_2986356226, 0);
    var mskHEX60gensym36_2986356237 = (t_2986356224.data).length - 1;
    if ((0 <= i_2986356233)) {
    t_2986356224.counter = subInt(t_2986356224.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986356244 = i_2986356233;
            var rHEX60gensym36_2986356245 = jHEX60gensym36_2986356244;
            t_2986356224.data[chckIndx(i_2986356233, 0, (t_2986356224.data).length - 1)].Field0 = 0;
            t_2986356224.data[chckIndx(i_2986356233, 0, (t_2986356224.data).length - 1)].Field1 = null;
            t_2986356224.data[chckIndx(i_2986356233, 0, (t_2986356224.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986356233 = (addInt(i_2986356233, 1) & mskHEX60gensym36_2986356237);
                  if (isEmpty_1308622877(t_2986356224.data[chckIndx(i_2986356233, 0, (t_2986356224.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986356245 = (t_2986356224.data[chckIndx(i_2986356233, 0, (t_2986356224.data).length - 1)].Field0 & mskHEX60gensym36_2986356237);
                  if (!(((((rHEX60gensym36_2986356245 <= i_2986356233) && (jHEX60gensym36_2986356244 < rHEX60gensym36_2986356245)) || ((jHEX60gensym36_2986356244 < rHEX60gensym36_2986356245) && (i_2986356233 < jHEX60gensym36_2986356244))) || ((i_2986356233 < jHEX60gensym36_2986356244) && (rHEX60gensym36_2986356245 <= i_2986356233))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986356224.data[chckIndx(jHEX60gensym36_2986356244, 0, (t_2986356224.data).length - 1)] = nimCopy(t_2986356224.data[chckIndx(jHEX60gensym36_2986356244, 0, (t_2986356224.data).length - 1)], t_2986356224.data[chckIndx(i_2986356233, 0, (t_2986356224.data).length - 1)], NTI2986344924);
          }
      };
    };
    }
    

  
}

function resize_2986355964(cache_2986355967) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986355967.capacity < len_2986356046(cache_2986355967))) break Label2;
          var t_2986356134 = cache_2986355967.list.tail;
          if (cache_2986355967.recordRemovedKeys) {
          incl_2986350370(cache_2986355967.removedKeys, t_2986356134.value.key);
          }
          
          del_2986356221(cache_2986355967.table, t_2986356134.value.key);
          remove_2986356980(cache_2986355967.list, t_2986356134);
        }
    };

  
}

function addNewNode_2986354017(cache_2986354020, key_2986354021, val_2986354022) {
    var node_2986354052 = newDoublyLinkedNode_2986354025({key: key_2986354021, val: nimCopy(null, val_2986354022, NTI3070230535)});
    HEX5BHEX5DHEX3D_2986354116(cache_2986354020.table, key_2986354021, node_2986354052);
    prepend_2986355727(cache_2986354020.list, node_2986354052);
    if (cache_2986354020.recordRemovedKeys) {
    excl_2986349211(cache_2986354020.removedKeys, key_2986354021);
    }
    
    resize_2986355964(cache_2986354020);

  
}

function HEX5BHEX5DHEX3D_2986353437(cache_2986353440, key_2986353441, val_2986353442) {
    var node_2986353990 = getOrDefault_2986353532(cache_2986353440.table, key_2986353441, null);
    if ((node_2986353990 == null)) {
    addNewNode_2986354017(cache_2986353440, key_2986353441, val_2986353442);
    }
    else {
      node_2986353990.value.val = nimCopy(node_2986353990.value.val, val_2986353442, NTI3070230535);
      remove_2986356980(cache_2986353440.list, node_2986353990);
      prepend_2986355727(cache_2986353440.list, node_2986353990);
    }
    

  
}

function fingerprint_3070231311(value_3070231312) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3070231313 = [];

  BeforeRet: {
    switch (value_3070231312.kind) {
    case 0:
      result_3070231313 = nimCopy(null, [value_3070231312.kind], NTI3070230977);
      break BeforeRet;
      break;
    case 1:
      result_3070231313 = nimCopy(null, [value_3070231312.kind], NTI3070230977);
      break BeforeRet;
      break;
    case 3:
      var Temporary1 = value_3070231312;
      if (ConstSet124[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, [value_3070231312.kind, Temporary1.intValue], NTI3003121997);
      break BeforeRet;
      break;
    case 2:
      var Temporary2 = value_3070231312;
      if (ConstSet125[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, [value_3070231312.kind, hash_1325400491(Temporary2.stringValue)], NTI3003121997);
      break BeforeRet;
      break;
    case 4:
      result_3070231313 = nimCopy(null, [], NTI2013268507);
      break BeforeRet;
      break;
    case 5:
      var Temporary3 = value_3070231312;
      if (ConstSet126[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230534)); }
      var Temporary4 = value_3070231312;
      if (ConstSet127[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rev\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, [value_3070231312.kind, hash_2969569587(Temporary3.node), Temporary4.rev], NTI3070231167);
      break BeforeRet;
      break;
    case 6:
      var Temporary5 = value_3070231312;
      if (ConstSet128[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230534)); }
      result_3070231313 = nimCopy(null, HEX26_3070231137([value_3070231312.kind], fingerprint_3070231130(Temporary5.typ)), NTI3070230983);
      break BeforeRet;
      break;
    }
  };

  return result_3070231313;

}

function initDoublyLinkedList_2986357423() {
  var result_2986357425 = ({head: null, tail: null});

  return result_2986357425;

}

function initTable_2986357429(initialSize_2986357432) {
  var result_2986357433 = ({data: [], counter: 0});

    var correctSizeHEX60gensym177_2986357435 = slotsNeeded_1308622891(chckRange(initialSize_2986357432, 0, 2147483647));
    result_2986357433.counter = 0;
    result_2986357433.data = new Array(chckRange(correctSizeHEX60gensym177_2986357435, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym177_2986357435, 0, 2147483647) ; ++i) { result_2986357433.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986357433;

}

function newLruCache_2986357413(capacity_2986357416, recordRemovedKeys_2986357417) {
  var result_2986357418 = null;

    result_2986357418 = {capacity: capacity_2986357416, list: initDoublyLinkedList_2986357423(), table: initTable_2986357429(correctSize_3019898901(capacity_2986357416)), recordRemovedKeys: recordRemovedKeys_2986357417, removedKeys: ({data: [], counter: 0})};

  return result_2986357418;

}

function newCache_2986357408(capacity_2986357411) {
  var result_2986357412 = null;

    result_2986357412 = newLruCache_2986357413(capacity_2986357411, false);

  return result_2986357412;

}

function init_2986357403(result_2986357406, result_2986357406_Idx, capacity_2986357407) {
    result_2986357406[result_2986357406_Idx] = newCache_2986357408(capacity_2986357407);

  
}

function some_2986407407(val_2986407409) {
  var result_2986407410 = ({val: null});

    if (!(!((val_2986407409 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2986407410.val = val_2986407409;

  return result_2986407410;

}

function rawGet_2986366176(t_2986366179, key_2986366180, hc_2986366181, hc_2986366181_Idx) {
  var result_2986366182 = 0;

  BeforeRet: {
    hc_2986366181[hc_2986366181_Idx] = hash_2986345496(key_2986366180);
    if ((hc_2986366181[hc_2986366181_Idx] == 0)) {
    hc_2986366181[hc_2986366181_Idx] = 314159265;
    }
    
    if (((t_2986366179.data).length == 0)) {
    result_2986366182 = -1;
    break BeforeRet;
    }
    
    var h_2986366271 = (hc_2986366181[hc_2986366181_Idx] & (t_2986366179.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986366179.data[chckIndx(h_2986366271, 0, (t_2986366179.data).length - 1)].Field0)) break Label2;
          if (((t_2986366179.data[chckIndx(h_2986366271, 0, (t_2986366179.data).length - 1)].Field0 == hc_2986366181[hc_2986366181_Idx]) && HEX3DHEX3D_2986345833(t_2986366179.data[chckIndx(h_2986366271, 0, (t_2986366179.data).length - 1)].Field1, key_2986366180))) {
          result_2986366182 = h_2986366271;
          break BeforeRet;
          }
          
          h_2986366271 = nextTry_1308622883(h_2986366271, (t_2986366179.data).length - 1);
        }
    };
    result_2986366182 = subInt(-1, h_2986366271);
  };

  return result_2986366182;

}

function getOrDefault_2986407681(t_2986407684, key_2986407685, default_2986407686) {
    var Temporary1;

  var result_2986407687 = null;

    var hcHEX60gensym428_2986407690 = [0];
    var indexHEX60gensym428_2986407697 = rawGet_2986366176(t_2986407684, key_2986407685, hcHEX60gensym428_2986407690, 0);
    if ((0 <= indexHEX60gensym428_2986407697)) {
    Temporary1 = t_2986407684.data[chckIndx(indexHEX60gensym428_2986407697, 0, (t_2986407684.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986407686;
    }
    
    result_2986407687 = Temporary1;

  return result_2986407687;

}

function newDoublyLinkedNode_2986407813(value_2986407815) {
  var result_2986407816 = null;

    result_2986407816 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986407816.value = nimCopy(result_2986407816.value, value_2986407815, NTI2986344647);

  return result_2986407816;

}

function mustRehash_2986408154(t_2986408156) {
  var result_2986408157 = false;

    if (!((t_2986408156.counter < (t_2986408156.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986408157 = ((mulInt((t_2986408156.data).length, 2) < mulInt(t_2986408156.counter, 3)) || (subInt((t_2986408156.data).length, t_2986408156.counter) < 4));

  return result_2986408157;

}

function rawInsert_2986408847(t_2986408851, data_2986408852, data_2986408852_Idx, key_2986408853, val_2986408854, hc_2986408855, h_2986408856) {
    data_2986408852[data_2986408852_Idx][chckIndx(h_2986408856, 0, (data_2986408852[data_2986408852_Idx]).length - 1)].Field1 = nimCopy(data_2986408852[data_2986408852_Idx][chckIndx(h_2986408856, 0, (data_2986408852[data_2986408852_Idx]).length - 1)].Field1, key_2986408853, NTI3003121689);
    data_2986408852[data_2986408852_Idx][chckIndx(h_2986408856, 0, (data_2986408852[data_2986408852_Idx]).length - 1)].Field2 = val_2986408854;
    data_2986408852[data_2986408852_Idx][chckIndx(h_2986408856, 0, (data_2986408852[data_2986408852_Idx]).length - 1)].Field0 = hc_2986408855;

  
}

function enlarge_2986408411(t_2986408414) {
    var n_2986408417 = [];
    n_2986408417 = new Array(chckRange(mulInt((t_2986408414.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986408414.data).length, 2), 0, 2147483647) ; ++i) { n_2986408417[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986408414.data; t_2986408414.data = n_2986408417; n_2986408417 = Temporary1;    Label2: {
      var i_2986408515 = 0;
      var colontmp__2936013165 = 0;
      colontmp__2936013165 = (n_2986408417).length - 1;
      var res_2936013166 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013166 <= colontmp__2936013165)) break Label4;
            i_2986408515 = res_2936013166;
            var eh_2986408596 = n_2986408417[chckIndx(i_2986408515, 0, (n_2986408417).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986408596)) {
            var j_2986408600 = (eh_2986408596 & (t_2986408414.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986408414.data[chckIndx(j_2986408600, 0, (t_2986408414.data).length - 1)].Field0)) break Label6;
                  j_2986408600 = nextTry_1308622883(j_2986408600, (t_2986408414.data).length - 1);
                }
            };
            rawInsert_2986408847(t_2986408414, t_2986408414, "data", n_2986408417[chckIndx(i_2986408515, 0, (n_2986408417).length - 1)].Field1, n_2986408417[chckIndx(i_2986408515, 0, (n_2986408417).length - 1)].Field2, eh_2986408596, j_2986408600);
            }
            
            res_2936013166 = addInt(res_2936013166, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986409097(t_2986409100, key_2986409101, hc_2986409102) {
  var result_2986409103 = 0;

  BeforeRet: {
    if (((t_2986409100.data).length == 0)) {
    result_2986409103 = -1;
    break BeforeRet;
    }
    
    var h_2986409188 = (hc_2986409102 & (t_2986409100.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986409100.data[chckIndx(h_2986409188, 0, (t_2986409100.data).length - 1)].Field0)) break Label2;
          if (((t_2986409100.data[chckIndx(h_2986409188, 0, (t_2986409100.data).length - 1)].Field0 == hc_2986409102) && HEX3DHEX3D_2986345833(t_2986409100.data[chckIndx(h_2986409188, 0, (t_2986409100.data).length - 1)].Field1, key_2986409101))) {
          result_2986409103 = h_2986409188;
          break BeforeRet;
          }
          
          h_2986409188 = nextTry_1308622883(h_2986409188, (t_2986409100.data).length - 1);
        }
    };
    result_2986409103 = subInt(-1, h_2986409188);
  };

  return result_2986409103;

}

function HEX5BHEX5DHEX3D_2986407886(t_2986407889, key_2986407890, val_2986407891) {
    if (((t_2986407889.data).length == 0)) {
    var correctSizeHEX60gensym431_2986407974 = slotsNeeded_1308622891(32);
    t_2986407889.counter = 0;
    t_2986407889.data = new Array(chckRange(correctSizeHEX60gensym431_2986407974, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym431_2986407974, 0, 2147483647) ; ++i) { t_2986407889.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986407979 = [0];
    var index_2986407986 = rawGet_2986366176(t_2986407889, key_2986407890, hc_2986407979, 0);
    if ((0 <= index_2986407986)) {
    t_2986407889.data[chckIndx(index_2986407986, 0, (t_2986407889.data).length - 1)].Field2 = val_2986407891;
    }
    else {
      if (((t_2986407889.data).length == 0)) {
      var correctSizeHEX60gensym434_2986408149 = slotsNeeded_1308622891(32);
      t_2986407889.counter = 0;
      t_2986407889.data = new Array(chckRange(correctSizeHEX60gensym434_2986408149, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym434_2986408149, 0, 2147483647) ; ++i) { t_2986407889.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986408154(t_2986407889)) {
      enlarge_2986408411(t_2986407889);
      index_2986407986 = rawGetKnownHC_2986409097(t_2986407889, key_2986407890, hc_2986407979[0]);
      }
      
      index_2986407986 = subInt(-1, index_2986407986);
      rawInsert_2986408847(t_2986407889, t_2986407889, "data", key_2986407890, val_2986407891, hc_2986407979[0], index_2986407986);
      t_2986407889.counter = addInt(t_2986407889.counter, 1);
    }
    

  
}

function prepend_2986367132(L_2986367134, n_2986367135) {
    n_2986367135.prev = null;
    n_2986367135.next = L_2986367134.head;
    if (!((L_2986367134.head == null))) {
    if (!((L_2986367134.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986367134.head.prev = n_2986367135;
    }
    
    L_2986367134.head = n_2986367135;
    if ((L_2986367134.tail == null)) {
    L_2986367134.tail = n_2986367135;
    }
    

  
}

function len_2986409708(t_2986409711) {
  var result_2986409712 = 0;

    result_2986409712 = t_2986409711.counter;

  return result_2986409712;

}

function len_2986409625(cache_2986409628) {
  var result_2986409629 = 0;

    result_2986409629 = len_2986409708(cache_2986409628.table);

  return result_2986409629;

}

function del_2986409800(t_2986409803, key_2986409804) {
    var hc_2986409805 = [0];
    var i_2986409812 = rawGet_2986366176(t_2986409803, key_2986409804, hc_2986409805, 0);
    var mskHEX60gensym36_2986409816 = (t_2986409803.data).length - 1;
    if ((0 <= i_2986409812)) {
    t_2986409803.counter = subInt(t_2986409803.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986409823 = i_2986409812;
            var rHEX60gensym36_2986409824 = jHEX60gensym36_2986409823;
            t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)].Field0 = 0;
            t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)].Field1 = nimCopy(t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986409812 = (addInt(i_2986409812, 1) & mskHEX60gensym36_2986409816);
                  if (isEmpty_1308622877(t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986409824 = (t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)].Field0 & mskHEX60gensym36_2986409816);
                  if (!(((((rHEX60gensym36_2986409824 <= i_2986409812) && (jHEX60gensym36_2986409823 < rHEX60gensym36_2986409824)) || ((jHEX60gensym36_2986409823 < rHEX60gensym36_2986409824) && (i_2986409812 < jHEX60gensym36_2986409823))) || ((i_2986409812 < jHEX60gensym36_2986409823) && (rHEX60gensym36_2986409824 <= i_2986409812))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986409803.data[chckIndx(jHEX60gensym36_2986409823, 0, (t_2986409803.data).length - 1)] = nimCopy(t_2986409803.data[chckIndx(jHEX60gensym36_2986409823, 0, (t_2986409803.data).length - 1)], t_2986409803.data[chckIndx(i_2986409812, 0, (t_2986409803.data).length - 1)], NTI2986344683);
          }
      };
    };
    }
    

  
}

function remove_2986366828(L_2986366830, n_2986366831) {
    if ((n_2986366831 == L_2986366830.tail)) {
    L_2986366830.tail = n_2986366831.prev;
    }
    
    if ((n_2986366831 == L_2986366830.head)) {
    L_2986366830.head = n_2986366831.next;
    }
    
    if (!((n_2986366831.next == null))) {
    n_2986366831.next.prev = n_2986366831.prev;
    }
    
    if (!((n_2986366831.prev == null))) {
    n_2986366831.prev.next = n_2986366831.next;
    }
    

  
}

function resize_2986409543(cache_2986409546) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986409546.capacity < len_2986409625(cache_2986409546))) break Label2;
          var t_2986409713 = cache_2986409546.list.tail;
          if (cache_2986409546.recordRemovedKeys) {
          incl_2986401422(cache_2986409546.removedKeys, t_2986409713.value.key);
          }
          
          del_2986409800(cache_2986409546.table, t_2986409713.value.key);
          remove_2986366828(cache_2986409546.list, t_2986409713);
        }
    };

  
}

function addNewNode_2986407805(cache_2986407808, key_2986407809, val_2986407810) {
    var node_2986407822 = newDoublyLinkedNode_2986407813({key: nimCopy(null, key_2986407809, NTI3003121689), val: val_2986407810});
    HEX5BHEX5DHEX3D_2986407886(cache_2986407808.table, key_2986407809, node_2986407822);
    prepend_2986367132(cache_2986407808.list, node_2986407822);
    if (cache_2986407808.recordRemovedKeys) {
    excl_2986400251(cache_2986407808.removedKeys, key_2986407809);
    }
    
    resize_2986409543(cache_2986407808);

  
}

function HEX5BHEX5DHEX3D_2986407586(cache_2986407589, key_2986407590, val_2986407591) {
    var node_2986407778 = getOrDefault_2986407681(cache_2986407589.table, key_2986407590, null);
    if ((node_2986407778 == null)) {
    addNewNode_2986407805(cache_2986407589, key_2986407590, val_2986407591);
    }
    else {
      node_2986407778.value.val = val_2986407591;
      remove_2986366828(cache_2986407589.list, node_2986407778);
      prepend_2986367132(cache_2986407589.list, node_2986407778);
    }
    

  
}

function newSymbol_2986414031(ctxHEX60gensym86_2986414032, dataHEX60gensym86_2986414033) {
  var result_2986414034 = null;

  BeforeRet: {
    var itemHEX60gensym86_2986414035 = getItem_2986407430(dataHEX60gensym86_2986414033);
    var keyHEX60gensym86_2986414036 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym86_2986414035, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym86_2986414032.depGraph.changed, keyHEX60gensym86_2986414036, ctxHEX60gensym86_2986414032.depGraph.revision);
    HEX5BHEX5DHEX3D_2986407586(ctxHEX60gensym86_2986414032.itemsSymbol, itemHEX60gensym86_2986414035, dataHEX60gensym86_2986414033);
    result_2986414034 = dataHEX60gensym86_2986414033;
    break BeforeRet;
  };

  return result_2986414034;

}

function none_2986407423() {
  var result_2986407429 = ({val: null});

  return result_2986407429;

}

function none_2986407420() {
  var result_2986407422 = ({val: null});

    result_2986407422 = nimCopy(result_2986407422, none_2986407423(), NTI3070231688);

  return result_2986407422;

}

function computeSymbolImpl_2986345273(ctx_2986345274, node_2986345275) {
      var Temporary4;

  var result_2986454372 = ({val: null});

  BeforeRet: {
    var logQueryHEX60gensym721_2986454374 = (ctx_2986345274.enableLogging || ctx_2986345274.enableQueryLogging);
    if (logQueryHEX60gensym721_2986454374) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym721_2986454374) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345275) || []));
    }
    
    try {
    Label3: {
      var expr_2986454445 = node_2986345275;
      var pos_2986454446 = 0;
      var _ = pos_2986454446;
      if ((expr_2986454445.kind == 1)) {
      var symbols_2986454453 = computeSymbols_2986427564(ctx_2986345274, node_2986345275, true);
      if (contains_2986452984(symbols_2986454453, node_2986345275.reff)) {
      result_2986454372 = nimCopy(result_2986454372, some_2986407407((Temporary4 = HEX5BHEX5D_2986453239(symbols_2986454453, node_2986345275.reff), Temporary4)[0][Temporary4[1]]), NTI3070231688);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_2986454445.kind == 4)) {
      result_2986454372 = nimCopy(result_2986454372, some_2986407407(newSymbol_2986414031(ctx_2986345274, {kind: 0, id: nimCopy(null, node_2986345275.id, NTI2181038083), node: node_2986345275, name: nimCopy(null, node_2986345275.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3070231688);
      break BeforeRet;
      }
      else {
      if ((expr_2986454445.kind == 5)) {
      result_2986454372 = nimCopy(result_2986454372, some_2986407407(newSymbol_2986414031(ctx_2986345274, {kind: 0, id: nimCopy(null, node_2986345275.id, NTI2181038083), node: node_2986345275, name: nimCopy(null, node_2986345275.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3070231688);
      break BeforeRet;
      }
      else {
      if ((expr_2986454445.kind == 6)) {
      result_2986454372 = nimCopy(result_2986454372, some_2986407407(newSymbol_2986414031(ctx_2986345274, {kind: 0, id: nimCopy(null, node_2986345275.id, NTI2181038083), node: node_2986345275, name: nimCopy(null, node_2986345275.text, NTI33554449), typ: null, value: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null}), operatorNotation: 0, precedence: 0})), NTI3070231688);
      break BeforeRet;
      }
      else {
        var fmtRes_2986454648 = [mnewString(0)];
        fmtRes_2986454648[0].push.apply(fmtRes_2986454648[0], [70,97,105,108,101,100,32,116,111,32,103,101,116,32,115,121,109,98,111,108,32,102,114,111,109,32,110,111,100,101,32]);;
        formatValue_3070231363(fmtRes_2986454648, 0, node_2986345275, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2986454648[0], NTI33554449)]);
        result_2986454372 = nimCopy(result_2986454372, none_2986407420(), NTI3070231688);
        break BeforeRet;
      }
      }}}
    };
    } finally {
    if ((logQueryHEX60gensym721_2986454374 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2986397338(result_2986454372) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym721_2986454374) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986454372;

}

function getOrDefault_2986357802(t_2986357805, key_2986357806, default_2986357807) {
    var Temporary1;

  var result_2986357808 = null;

    var hcHEX60gensym180_2986357811 = [0];
    var indexHEX60gensym180_2986358170 = rawGet_2986357812(t_2986357805, key_2986357806, hcHEX60gensym180_2986357811, 0);
    if ((0 <= indexHEX60gensym180_2986358170)) {
    Temporary1 = t_2986357805.data[chckIndx(indexHEX60gensym180_2986358170, 0, (t_2986357805.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986357807;
    }
    
    result_2986357808 = Temporary1;

  return result_2986357808;

}

function newDoublyLinkedNode_2986358295(value_2986358297) {
  var result_2986358298 = null;

    result_2986358298 = ({next: null, prev: null, value: ({key: null, val: ({val: null})})});
    result_2986358298.value = nimCopy(result_2986358298.value, value_2986358297, NTI2986344959);

  return result_2986358298;

}

function mustRehash_2986358645(t_2986358647) {
  var result_2986358648 = false;

    if (!((t_2986358647.counter < (t_2986358647.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986358648 = ((mulInt((t_2986358647.data).length, 2) < mulInt(t_2986358647.counter, 3)) || (subInt((t_2986358647.data).length, t_2986358647.counter) < 4));

  return result_2986358648;

}

function rawInsert_2986359338(t_2986359342, data_2986359343, data_2986359343_Idx, key_2986359344, val_2986359345, hc_2986359346, h_2986359347) {
    data_2986359343[data_2986359343_Idx][chckIndx(h_2986359347, 0, (data_2986359343[data_2986359343_Idx]).length - 1)].Field1 = key_2986359344;
    data_2986359343[data_2986359343_Idx][chckIndx(h_2986359347, 0, (data_2986359343[data_2986359343_Idx]).length - 1)].Field2 = val_2986359345;
    data_2986359343[data_2986359343_Idx][chckIndx(h_2986359347, 0, (data_2986359343[data_2986359343_Idx]).length - 1)].Field0 = hc_2986359346;

  
}

function enlarge_2986358902(t_2986358905) {
    var n_2986358908 = [];
    n_2986358908 = new Array(chckRange(mulInt((t_2986358905.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986358905.data).length, 2), 0, 2147483647) ; ++i) { n_2986358908[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986358905.data; t_2986358905.data = n_2986358908; n_2986358908 = Temporary1;    Label2: {
      var i_2986359006 = 0;
      var colontmp__2936013174 = 0;
      colontmp__2936013174 = (n_2986358908).length - 1;
      var res_2936013175 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013175 <= colontmp__2936013174)) break Label4;
            i_2986359006 = res_2936013175;
            var eh_2986359087 = n_2986358908[chckIndx(i_2986359006, 0, (n_2986358908).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986359087)) {
            var j_2986359091 = (eh_2986359087 & (t_2986358905.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986358905.data[chckIndx(j_2986359091, 0, (t_2986358905.data).length - 1)].Field0)) break Label6;
                  j_2986359091 = nextTry_1308622883(j_2986359091, (t_2986358905.data).length - 1);
                }
            };
            rawInsert_2986359338(t_2986358905, t_2986358905, "data", n_2986358908[chckIndx(i_2986359006, 0, (n_2986358908).length - 1)].Field1, n_2986358908[chckIndx(i_2986359006, 0, (n_2986358908).length - 1)].Field2, eh_2986359087, j_2986359091);
            }
            
            res_2936013175 = addInt(res_2936013175, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986359588(t_2986359591, key_2986359592, hc_2986359593) {
  var result_2986359594 = 0;

  BeforeRet: {
    if (((t_2986359591.data).length == 0)) {
    result_2986359594 = -1;
    break BeforeRet;
    }
    
    var h_2986359679 = (hc_2986359593 & (t_2986359591.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986359591.data[chckIndx(h_2986359679, 0, (t_2986359591.data).length - 1)].Field0)) break Label2;
          if (((t_2986359591.data[chckIndx(h_2986359679, 0, (t_2986359591.data).length - 1)].Field0 == hc_2986359593) && (t_2986359591.data[chckIndx(h_2986359679, 0, (t_2986359591.data).length - 1)].Field1 == key_2986359592))) {
          result_2986359594 = h_2986359679;
          break BeforeRet;
          }
          
          h_2986359679 = nextTry_1308622883(h_2986359679, (t_2986359591.data).length - 1);
        }
    };
    result_2986359594 = subInt(-1, h_2986359679);
  };

  return result_2986359594;

}

function HEX5BHEX5DHEX3D_2986358377(t_2986358380, key_2986358381, val_2986358382) {
    if (((t_2986358380.data).length == 0)) {
    var correctSizeHEX60gensym185_2986358465 = slotsNeeded_1308622891(32);
    t_2986358380.counter = 0;
    t_2986358380.data = new Array(chckRange(correctSizeHEX60gensym185_2986358465, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym185_2986358465, 0, 2147483647) ; ++i) { t_2986358380.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986358470 = [0];
    var index_2986358477 = rawGet_2986357812(t_2986358380, key_2986358381, hc_2986358470, 0);
    if ((0 <= index_2986358477)) {
    t_2986358380.data[chckIndx(index_2986358477, 0, (t_2986358380.data).length - 1)].Field2 = val_2986358382;
    }
    else {
      if (((t_2986358380.data).length == 0)) {
      var correctSizeHEX60gensym188_2986358640 = slotsNeeded_1308622891(32);
      t_2986358380.counter = 0;
      t_2986358380.data = new Array(chckRange(correctSizeHEX60gensym188_2986358640, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym188_2986358640, 0, 2147483647) ; ++i) { t_2986358380.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986358645(t_2986358380)) {
      enlarge_2986358902(t_2986358380);
      index_2986358477 = rawGetKnownHC_2986359588(t_2986358380, key_2986358381, hc_2986358470[0]);
      }
      
      index_2986358477 = subInt(-1, index_2986358477);
      rawInsert_2986359338(t_2986358380, t_2986358380, "data", key_2986358381, val_2986358382, hc_2986358470[0], index_2986358477);
      t_2986358380.counter = addInt(t_2986358380.counter, 1);
    }
    

  
}

function len_2986360390(t_2986360393) {
  var result_2986360394 = 0;

    result_2986360394 = t_2986360393.counter;

  return result_2986360394;

}

function len_2986360307(cache_2986360310) {
  var result_2986360311 = 0;

    result_2986360311 = len_2986360390(cache_2986360310.table);

  return result_2986360311;

}

function del_2986360482(t_2986360485, key_2986360486) {
    var hc_2986360487 = [0];
    var i_2986360494 = rawGet_2986357812(t_2986360485, key_2986360486, hc_2986360487, 0);
    var mskHEX60gensym36_2986360498 = (t_2986360485.data).length - 1;
    if ((0 <= i_2986360494)) {
    t_2986360485.counter = subInt(t_2986360485.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986360505 = i_2986360494;
            var rHEX60gensym36_2986360506 = jHEX60gensym36_2986360505;
            t_2986360485.data[chckIndx(i_2986360494, 0, (t_2986360485.data).length - 1)].Field0 = 0;
            t_2986360485.data[chckIndx(i_2986360494, 0, (t_2986360485.data).length - 1)].Field1 = null;
            t_2986360485.data[chckIndx(i_2986360494, 0, (t_2986360485.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986360494 = (addInt(i_2986360494, 1) & mskHEX60gensym36_2986360498);
                  if (isEmpty_1308622877(t_2986360485.data[chckIndx(i_2986360494, 0, (t_2986360485.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986360506 = (t_2986360485.data[chckIndx(i_2986360494, 0, (t_2986360485.data).length - 1)].Field0 & mskHEX60gensym36_2986360498);
                  if (!(((((rHEX60gensym36_2986360506 <= i_2986360494) && (jHEX60gensym36_2986360505 < rHEX60gensym36_2986360506)) || ((jHEX60gensym36_2986360505 < rHEX60gensym36_2986360506) && (i_2986360494 < jHEX60gensym36_2986360505))) || ((i_2986360494 < jHEX60gensym36_2986360505) && (rHEX60gensym36_2986360506 <= i_2986360494))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986360485.data[chckIndx(jHEX60gensym36_2986360505, 0, (t_2986360485.data).length - 1)] = nimCopy(t_2986360485.data[chckIndx(jHEX60gensym36_2986360505, 0, (t_2986360485.data).length - 1)], t_2986360485.data[chckIndx(i_2986360494, 0, (t_2986360485.data).length - 1)], NTI2986344995);
          }
      };
    };
    }
    

  
}

function resize_2986360225(cache_2986360228) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986360228.capacity < len_2986360307(cache_2986360228))) break Label2;
          var t_2986360395 = cache_2986360228.list.tail;
          if (cache_2986360228.recordRemovedKeys) {
          incl_2986350370(cache_2986360228.removedKeys, t_2986360395.value.key);
          }
          
          del_2986360482(cache_2986360228.table, t_2986360395.value.key);
          remove_2986361241(cache_2986360228.list, t_2986360395);
        }
    };

  
}

function addNewNode_2986358287(cache_2986358290, key_2986358291, val_2986358292) {
    var node_2986358313 = newDoublyLinkedNode_2986358295({key: key_2986358291, val: nimCopy(null, val_2986358292, NTI3070231688)});
    HEX5BHEX5DHEX3D_2986358377(cache_2986358290.table, key_2986358291, node_2986358313);
    prepend_2986359988(cache_2986358290.list, node_2986358313);
    if (cache_2986358290.recordRemovedKeys) {
    excl_2986349211(cache_2986358290.removedKeys, key_2986358291);
    }
    
    resize_2986360225(cache_2986358290);

  
}

function HEX5BHEX5DHEX3D_2986357707(cache_2986357710, key_2986357711, val_2986357712) {
    var node_2986358260 = getOrDefault_2986357802(cache_2986357710.table, key_2986357711, null);
    if ((node_2986358260 == null)) {
    addNewNode_2986358287(cache_2986357710, key_2986357711, val_2986357712);
    }
    else {
      node_2986358260.value.val = nimCopy(node_2986358260.value.val, val_2986357712, NTI3070231688);
      remove_2986361241(cache_2986357710.list, node_2986358260);
      prepend_2986359988(cache_2986357710.list, node_2986358260);
    }
    

  
}

function fingerprint_3070231709(symbol_3070231710) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;

  var result_3070231711 = [];

    switch (symbol_3070231710.kind) {
    case 0:
      var Temporary1 = symbol_3070231710;
      if (ConstSet129[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
      result_3070231711 = nimCopy(null, [hash_2181038324(symbol_3070231710.id), hash_1325400491(symbol_3070231710.name), symbol_3070231710.kind, hash_2181038324(Temporary1.node.id)], NTI3070231437);
      break;
    case 1:
      var Temporary2 = symbol_3070231710;
      if (ConstSet130[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      var Temporary3 = symbol_3070231710;
      if (ConstSet131[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      var Temporary4 = symbol_3070231710;
      if (ConstSet132[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      var Temporary5 = symbol_3070231710;
      if (ConstSet133[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230537)); }
      result_3070231711 = nimCopy(null, HEX26_3070231137(HEX26_3070231137([hash_2181038324(symbol_3070231710.id), hash_1325400491(symbol_3070231710.name), symbol_3070231710.kind, Temporary2.precedence, Temporary3.operatorNotation], fingerprint_3070231130(Temporary4.typ)), fingerprint_3070231311(Temporary5.value)), NTI3070230983);
      break;
    }

  return result_3070231711;

}

function fingerprint_3070232103(symbol_3070232108) {
      var Temporary1;

  var result_3070232109 = [];

  BeforeRet: {
      var oHEX60gensym27_3070232112 = nimCopy(null, symbol_3070232108, NTI3070231688);
      if (!isSome_3070232117(oHEX60gensym27_3070232112)) Temporary1 = false; else {        var s_3070232163 = get_3070232137(oHEX60gensym27_3070232112);
        Temporary1 = true;      }    if (Temporary1) {
    result_3070232109 = nimCopy(null, fingerprint_3070231709(s_3070232163), NTI3003121688);
    break BeforeRet;
    }
    
    result_3070232109 = nimCopy(null, [], NTI2013268507);
    break BeforeRet;
  };

  return result_3070232109;

}

function initDoublyLinkedList_2986361684() {
  var result_2986361686 = ({head: null, tail: null});

  return result_2986361686;

}

function initTable_2986361690(initialSize_2986361693) {
  var result_2986361694 = ({data: [], counter: 0});

    var correctSizeHEX60gensym198_2986361696 = slotsNeeded_1308622891(chckRange(initialSize_2986361693, 0, 2147483647));
    result_2986361694.counter = 0;
    result_2986361694.data = new Array(chckRange(correctSizeHEX60gensym198_2986361696, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym198_2986361696, 0, 2147483647) ; ++i) { result_2986361694.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986361694;

}

function newLruCache_2986361674(capacity_2986361677, recordRemovedKeys_2986361678) {
  var result_2986361679 = null;

    result_2986361679 = {capacity: capacity_2986361677, list: initDoublyLinkedList_2986361684(), table: initTable_2986361690(correctSize_3019898901(capacity_2986361677)), recordRemovedKeys: recordRemovedKeys_2986361678, removedKeys: ({data: [], counter: 0})};

  return result_2986361679;

}

function newCache_2986361669(capacity_2986361672) {
  var result_2986361673 = null;

    result_2986361673 = newLruCache_2986361674(capacity_2986361672, false);

  return result_2986361673;

}

function init_2986361664(result_2986361667, result_2986361667_Idx, capacity_2986361668) {
    result_2986361667[result_2986361667_Idx] = newCache_2986361669(capacity_2986361668);

  
}

function initTable_2986396528(initialSize_2986396531) {
  var result_2986396532 = ({data: [], counter: 0});

    var correctSizeHEX60gensym369_2986396534 = slotsNeeded_1308622891(chckRange(initialSize_2986396531, 0, 2147483647));
    result_2986396532.counter = 0;
    result_2986396532.data = new Array(chckRange(correctSizeHEX60gensym369_2986396534, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym369_2986396534, 0, 2147483647) ; ++i) { result_2986396532.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }
  return result_2986396532;

}

function newTable_2986441536(initialSize_2986441539) {
  var result_2986441540 = null;

    result_2986441540 = ({data: [], counter: 0});
    result_2986441540 = nimCopy(result_2986441540, initTable_2986396528(initialSize_2986441539), NTI3070231496);

  return result_2986441540;

}

function none_2969567439() {
  var result_2969567445 = ({val: null});

  return result_2969567445;

}

function none_2969567436() {
  var result_2969567438 = ({val: null});

    result_2969567438 = nimCopy(result_2969567438, none_2969567439(), NTI2969567351);

  return result_2969567438;

}

function some_2969567458(val_2969567460) {
  var result_2969567461 = ({val: null});

    if (!(!((val_2969567460 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2969567461.val = val_2969567460;

  return result_2969567461;

}

function findWithParentRec_2969569157(node_2969569158, kind_2969569159) {
  var result_2969569161 = ({val: null});

  BeforeRet: {
    if ((node_2969569158.parent == null)) {
    result_2969569161 = nimCopy(result_2969569161, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    if ((node_2969569158.parent.kind == kind_2969569159)) {
    result_2969569161 = nimCopy(result_2969569161, some_2969567458(node_2969569158), NTI2969567351);
    break BeforeRet;
    }
    
    result_2969569161 = nimCopy(result_2969569161, findWithParentRec_2969569157(node_2969569158.parent, kind_2969569159), NTI2969567351);
    break BeforeRet;
  };

  return result_2969569161;

}

function isSome_2969569114(self_2969569116) {
  var result_2969569117 = false;

    result_2969569117 = !((self_2969569116.val == null));

  return result_2969569117;

}

function isNone_2969569142(self_2969569144) {
  var result_2969569145 = false;

    result_2969569145 = (self_2969569144.val == null);

  return result_2969569145;

}

function get_2969569134(self_2969569136) {
  var result_2969569137 = null;

    if (isNone_2969569142(self_2969569136)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2969569137 = self_2969569136["val"];

  return result_2969569137;

}

function mustRehash_2986442333(t_2986442335) {
  var result_2986442336 = false;

    if (!((t_2986442335.counter < (t_2986442335.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986442336 = ((mulInt((t_2986442335.data).length, 2) < mulInt(t_2986442335.counter, 3)) || (subInt((t_2986442335.data).length, t_2986442335.counter) < 4));

  return result_2986442336;

}

function rawInsert_2986443026(t_2986443030, data_2986443031, data_2986443031_Idx, key_2986443032, val_2986443033, hc_2986443034, h_2986443035) {
    data_2986443031[data_2986443031_Idx][chckIndx(h_2986443035, 0, (data_2986443031[data_2986443031_Idx]).length - 1)].Field1 = nimCopy(data_2986443031[data_2986443031_Idx][chckIndx(h_2986443035, 0, (data_2986443031[data_2986443031_Idx]).length - 1)].Field1, key_2986443032, NTI2181038083);
    data_2986443031[data_2986443031_Idx][chckIndx(h_2986443035, 0, (data_2986443031[data_2986443031_Idx]).length - 1)].Field2 = val_2986443033;
    data_2986443031[data_2986443031_Idx][chckIndx(h_2986443035, 0, (data_2986443031[data_2986443031_Idx]).length - 1)].Field0 = hc_2986443034;

  
}

function enlarge_2986442590(t_2986442593) {
    var n_2986442596 = [];
    n_2986442596 = new Array(chckRange(mulInt((t_2986442593.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986442593.data).length, 2), 0, 2147483647) ; ++i) { n_2986442596[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2986442593.data; t_2986442593.data = n_2986442596; n_2986442596 = Temporary1;    Label2: {
      var i_2986442694 = 0;
      var colontmp__2936013219 = 0;
      colontmp__2936013219 = (n_2986442596).length - 1;
      var res_2936013220 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013220 <= colontmp__2936013219)) break Label4;
            i_2986442694 = res_2936013220;
            var eh_2986442775 = n_2986442596[chckIndx(i_2986442694, 0, (n_2986442596).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986442775)) {
            var j_2986442779 = (eh_2986442775 & (t_2986442593.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986442593.data[chckIndx(j_2986442779, 0, (t_2986442593.data).length - 1)].Field0)) break Label6;
                  j_2986442779 = nextTry_1308622883(j_2986442779, (t_2986442593.data).length - 1);
                }
            };
            rawInsert_2986443026(t_2986442593, t_2986442593, "data", n_2986442596[chckIndx(i_2986442694, 0, (n_2986442596).length - 1)].Field1, n_2986442596[chckIndx(i_2986442694, 0, (n_2986442596).length - 1)].Field2, eh_2986442775, j_2986442779);
            }
            
            res_2936013220 = addInt(res_2936013220, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986443276(t_2986443279, key_2986443280, hc_2986443281) {
  var result_2986443282 = 0;

  BeforeRet: {
    if (((t_2986443279.data).length == 0)) {
    result_2986443282 = -1;
    break BeforeRet;
    }
    
    var h_2986443367 = (hc_2986443281 & (t_2986443279.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986443279.data[chckIndx(h_2986443367, 0, (t_2986443279.data).length - 1)].Field0)) break Label2;
          if (((t_2986443279.data[chckIndx(h_2986443367, 0, (t_2986443279.data).length - 1)].Field0 == hc_2986443281) && HEX3DHEX3D_2181038320(t_2986443279.data[chckIndx(h_2986443367, 0, (t_2986443279.data).length - 1)].Field1, key_2986443280))) {
          result_2986443282 = h_2986443367;
          break BeforeRet;
          }
          
          h_2986443367 = nextTry_1308622883(h_2986443367, (t_2986443279.data).length - 1);
        }
    };
    result_2986443282 = subInt(-1, h_2986443367);
  };

  return result_2986443282;

}

function HEX5BHEX5DHEX3D_2986441735(t_2986441738, key_2986441739, val_2986441740) {
    if (((t_2986441738.data).length == 0)) {
    var correctSizeHEX60gensym540_2986441824 = slotsNeeded_1308622891(32);
    t_2986441738.counter = 0;
    t_2986441738.data = new Array(chckRange(correctSizeHEX60gensym540_2986441824, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym540_2986441824, 0, 2147483647) ; ++i) { t_2986441738.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2986441829 = [0];
    var index_2986442165 = rawGet_2986441830(t_2986441738, key_2986441739, hc_2986441829, 0);
    if ((0 <= index_2986442165)) {
    t_2986441738.data[chckIndx(index_2986442165, 0, (t_2986441738.data).length - 1)].Field2 = val_2986441740;
    }
    else {
      if (((t_2986441738.data).length == 0)) {
      var correctSizeHEX60gensym545_2986442328 = slotsNeeded_1308622891(32);
      t_2986441738.counter = 0;
      t_2986441738.data = new Array(chckRange(correctSizeHEX60gensym545_2986442328, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym545_2986442328, 0, 2147483647) ; ++i) { t_2986441738.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2986442333(t_2986441738)) {
      enlarge_2986442590(t_2986441738);
      index_2986442165 = rawGetKnownHC_2986443276(t_2986441738, key_2986441739, hc_2986441829[0]);
      }
      
      index_2986442165 = subInt(-1, index_2986442165);
      rawInsert_2986443026(t_2986441738, t_2986441738, "data", key_2986441739, val_2986441740, hc_2986441829[0], index_2986442165);
      t_2986441738.counter = addInt(t_2986441738.counter, 1);
    }
    

  
}

function HEX5BHEX5DHEX3D_2986454892(t_2986454895, key_2986454896, val_2986454897) {
    HEX5BHEX5DHEX3D_2986441735(t_2986454895, key_2986454896, val_2986454897);

  
}

function base_2969567326(node_2969567327) {
  var result_2969567328 = null;

  BeforeRet: {
    if ((node_2969567327.parent == null)) {
    result_2969567328 = node_2969567327;
    break BeforeRet;
    }
    
    result_2969567328 = base_2969567326(node_2969567327.parent);
    break BeforeRet;
  };

  return result_2969567328;

}

function len_2986455580(t_2986455583) {
  var result_2986455584 = 0;

    result_2986455584 = t_2986455583.counter;

  return result_2986455584;

}

function computeSymbolsImpl_2986345277(ctx_2986345278, node_2986345279) {
      var Temporary3;
      var Temporary4;
                var Temporary13;
      var Temporary14;
              var Temporary18;
                var Temporary23;

  var result_2986454687 = null;

    var logQueryHEX60gensym732_2986454689 = (ctx_2986345278.enableLogging || ctx_2986345278.enableQueryLogging);
    if (logQueryHEX60gensym732_2986454689) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym732_2986454689) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,115,73,109,112,108,32] || []).concat(HEX24_2969569239(node_2986345279) || []));
    }
    
    try {
    result_2986454687 = newTable_2986441536(32);
      var oHEX60gensym733_2986454771 = findWithParentRec_2969569157(node_2986345279, 7);
      if (!isSome_2969569114(oHEX60gensym733_2986454771)) Temporary4 = false; else {        var parentInNodeList_2986454817 = get_2969569134(oHEX60gensym733_2986454771);
        Temporary4 = true;      }      if (!Temporary4) Temporary3 = false; else {        Temporary3 = !((parentInNodeList_2986454817.parent.parent == null));      }    if (Temporary3) {
    var parentSymbols_2986454822 = computeSymbols_2986427564(ctx_2986345278, parentInNodeList_2986454817.parent, true);
    Label5: {
      var id_2986454827 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var sym_2986454828 = null;
      var L_2936013182 = len_3070231826(parentSymbols_2986454822);
      Label6: {
        var h_2936013184 = 0;
        var colontmp__2936013185 = 0;
        colontmp__2936013185 = (parentSymbols_2986454822.data).length - 1;
        var res_2936013186 = 0;
        Label7: {
            Label8: while (true) {
            if (!(res_2936013186 <= colontmp__2936013185)) break Label8;
              h_2936013184 = res_2936013186;
              if (isFilled_1308622880(parentSymbols_2986454822.data[chckIndx(h_2936013184, 0, (parentSymbols_2986454822.data).length - 1)].Field0)) {
              var colontmp__2936013189 = nimCopy(null, {Field0: nimCopy(null, parentSymbols_2986454822.data[chckIndx(h_2936013184, 0, (parentSymbols_2986454822.data).length - 1)].Field1, NTI2181038083), Field1: parentSymbols_2986454822.data[chckIndx(h_2936013184, 0, (parentSymbols_2986454822.data).length - 1)].Field2}, NTI3070231514);
              id_2986454827 = nimCopy(id_2986454827, colontmp__2936013189["Field0"], NTI2181038083);
              sym_2986454828 = colontmp__2936013189["Field1"];
              HEX5BHEX5DHEX3D_2986454892(result_2986454687, id_2986454827, sym_2986454828);
              if (!((len_3070231826(parentSymbols_2986454822) == L_2936013182))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013186 = addInt(res_2936013186, 1);
            }
        };
      };
    };
    recordDependency_2986397948(ctx_2986345278, getItem_2986398161(parentInNodeList_2986454817.parent), -1);
    var bIsOrderDependent_2986455051 = !((parentInNodeList_2986454817.parent.parent == null));
    Label9: {
      var child_2986455055 = null;
      var i_2936013192 = 0;
      var L_2936013193 = (parentInNodeList_2986454817.parent.children).length;
      Label10: {
          Label11: while (true) {
          if (!(i_2936013192 < L_2936013193)) break Label11;
            child_2986455055 = parentInNodeList_2986454817.parent.children[chckIndx(i_2936013192, 0, (parentInNodeList_2986454817.parent.children).length - 1)];
            Label12: {
              if ((bIsOrderDependent_2986455051 && (child_2986455055 == parentInNodeList_2986454817))) {
              break Label9;
              }
              
              if (((!((child_2986455055.kind == 4)) && !((child_2986455055.kind == 5))) && !((child_2986455055.kind == 6)))) {
              break Label12;
              }
              
                var oHEX60gensym739_2986455074 = computeSymbol_2986424064(ctx_2986345278, child_2986455055, true);
                if (!isSome_3070232117(oHEX60gensym739_2986455074)) Temporary13 = false; else {                  var symbol_2986455120 = get_3070232137(oHEX60gensym739_2986455074);
                  Temporary13 = true;                }              if (Temporary13) {
              HEX5BHEX5DHEX3D_2986454892(result_2986454687, symbol_2986455120.id, symbol_2986455120);
              }
              
            };
            i_2936013192 = addInt(i_2936013192, 1);
            if (!(((parentInNodeList_2986454817.parent.children).length == L_2936013193))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
      var oHEX60gensym740_2986455192 = findWithParentRec_2969569157(node_2986345279, 11);
      if (!isSome_2969569114(oHEX60gensym740_2986455192)) Temporary14 = false; else {        var parentInFunctionDef_2986455238 = get_2969569134(oHEX60gensym740_2986455192);
        Temporary14 = true;      }    if (Temporary14) {
    var functionDefinition_2986455239 = parentInFunctionDef_2986455238.parent;
    if ((0 < len_2969567320(functionDefinition_2986455239))) {
    var params_2986455240 = HEX5BHEX5D_2969567316(functionDefinition_2986455239, 0);
    recordDependency_2986397948(ctx_2986345278, getItem_2986398161(params_2986455240), -1);
    Label15: {
      var param_2986455244 = null;
      var i_2936013196 = 0;
      var L_2936013197 = (params_2986455240.children).length;
      Label16: {
          Label17: while (true) {
          if (!(i_2936013196 < L_2936013197)) break Label17;
            param_2986455244 = params_2986455240.children[chckIndx(i_2936013196, 0, (params_2986455240.children).length - 1)];
            recordDependency_2986397948(ctx_2986345278, getItem_2986398161(param_2986455244), -1);
              var oHEX60gensym742_2986455247 = computeSymbol_2986424064(ctx_2986345278, param_2986455244, true);
              if (!isSome_3070232117(oHEX60gensym742_2986455247)) Temporary18 = false; else {                var symbol_2986455293 = get_3070232137(oHEX60gensym742_2986455247);
                Temporary18 = true;              }            if (Temporary18) {
            HEX5BHEX5DHEX3D_2986454892(result_2986454687, param_2986455244.id, symbol_2986455293);
            }
            
            i_2936013196 = addInt(i_2936013196, 1);
            if (!(((params_2986455240.children).length == L_2936013197))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    }
    }
    var root_2986455363 = base_2969567326(node_2986345279);
    recordDependency_2986397948(ctx_2986345278, getItem_2986398161(root_2986455363), -1);
    Label19: {
      var child_2986455367 = null;
      var i_2936013201 = 0;
      var L_2936013202 = (root_2986455363.children).length;
      Label20: {
          Label21: while (true) {
          if (!(i_2936013201 < L_2936013202)) break Label21;
            child_2986455367 = root_2986455363.children[chckIndx(i_2936013201, 0, (root_2986455363.children).length - 1)];
            Label22: {
              if (((!((child_2986455367.kind == 4)) && !((child_2986455367.kind == 5))) && !((child_2986455367.kind == 6)))) {
              break Label22;
              }
              
                var oHEX60gensym746_2986455382 = computeSymbol_2986424064(ctx_2986345278, child_2986455367, true);
                if (!isSome_3070232117(oHEX60gensym746_2986455382)) Temporary23 = false; else {                  var symbol_2986455428 = get_3070232137(oHEX60gensym746_2986455382);
                  Temporary23 = true;                }              if (Temporary23) {
              HEX5BHEX5DHEX3D_2986454892(result_2986454687, symbol_2986455428.id, symbol_2986455428);
              }
              
            };
            i_2936013201 = addInt(i_2936013201, 1);
            if (!(((root_2986455363.children).length == L_2936013202))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label24: {
      var key_2986455921 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2986455922 = null;
      var L_2936013209 = len_2986455580(ctx_2986345278.globalScope);
      Label25: {
        var h_2936013211 = 0;
        var colontmp__2936013212 = 0;
        colontmp__2936013212 = (ctx_2986345278.globalScope.data).length - 1;
        var res_2936013213 = 0;
        Label26: {
            Label27: while (true) {
            if (!(res_2936013213 <= colontmp__2936013212)) break Label27;
              h_2936013211 = res_2936013213;
              if (isFilled_1308622880(ctx_2986345278.globalScope.data[chckIndx(h_2936013211, 0, (ctx_2986345278.globalScope.data).length - 1)].Field0)) {
              var colontmp__2936013216 = nimCopy(null, {Field0: nimCopy(null, ctx_2986345278.globalScope.data[chckIndx(h_2936013211, 0, (ctx_2986345278.globalScope.data).length - 1)].Field1, NTI2181038083), Field1: ctx_2986345278.globalScope.data[chckIndx(h_2936013211, 0, (ctx_2986345278.globalScope.data).length - 1)].Field2}, NTI2986409679);
              key_2986455921 = nimCopy(key_2986455921, colontmp__2936013216["Field0"], NTI2181038083);
              symbol_2986455922 = colontmp__2936013216["Field1"];
              recordDependency_2986397948(ctx_2986345278, getItem_2986407430(symbol_2986455922), -1);
              HEX5BHEX5DHEX3D_2986454892(result_2986454687, symbol_2986455922.id, symbol_2986455922);
              if (!((len_2986455580(ctx_2986345278.globalScope) == L_2936013209))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013213 = addInt(res_2936013213, 1);
            }
        };
      };
    };
    } finally {
    if ((logQueryHEX60gensym732_2986454689 && false)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_2986397498(result_2986454687) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym732_2986454689) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }

  return result_2986454687;

}

function getOrDefault_2986362064(t_2986362067, key_2986362068, default_2986362069) {
    var Temporary1;

  var result_2986362070 = null;

    var hcHEX60gensym201_2986362073 = [0];
    var indexHEX60gensym201_2986362432 = rawGet_2986362074(t_2986362067, key_2986362068, hcHEX60gensym201_2986362073, 0);
    if ((0 <= indexHEX60gensym201_2986362432)) {
    Temporary1 = t_2986362067.data[chckIndx(indexHEX60gensym201_2986362432, 0, (t_2986362067.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986362069;
    }
    
    result_2986362070 = Temporary1;

  return result_2986362070;

}

function newDoublyLinkedNode_2986362557(value_2986362559) {
  var result_2986362560 = null;

    result_2986362560 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2986362560.value = nimCopy(result_2986362560.value, value_2986362559, NTI2986345032);

  return result_2986362560;

}

function mustRehash_2986362907(t_2986362909) {
  var result_2986362910 = false;

    if (!((t_2986362909.counter < (t_2986362909.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986362910 = ((mulInt((t_2986362909.data).length, 2) < mulInt(t_2986362909.counter, 3)) || (subInt((t_2986362909.data).length, t_2986362909.counter) < 4));

  return result_2986362910;

}

function rawInsert_2986363600(t_2986363604, data_2986363605, data_2986363605_Idx, key_2986363606, val_2986363607, hc_2986363608, h_2986363609) {
    data_2986363605[data_2986363605_Idx][chckIndx(h_2986363609, 0, (data_2986363605[data_2986363605_Idx]).length - 1)].Field1 = key_2986363606;
    data_2986363605[data_2986363605_Idx][chckIndx(h_2986363609, 0, (data_2986363605[data_2986363605_Idx]).length - 1)].Field2 = val_2986363607;
    data_2986363605[data_2986363605_Idx][chckIndx(h_2986363609, 0, (data_2986363605[data_2986363605_Idx]).length - 1)].Field0 = hc_2986363608;

  
}

function enlarge_2986363164(t_2986363167) {
    var n_2986363170 = [];
    n_2986363170 = new Array(chckRange(mulInt((t_2986363167.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986363167.data).length, 2), 0, 2147483647) ; ++i) { n_2986363170[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986363167.data; t_2986363167.data = n_2986363170; n_2986363170 = Temporary1;    Label2: {
      var i_2986363268 = 0;
      var colontmp__2936013225 = 0;
      colontmp__2936013225 = (n_2986363170).length - 1;
      var res_2936013226 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013226 <= colontmp__2936013225)) break Label4;
            i_2986363268 = res_2936013226;
            var eh_2986363349 = n_2986363170[chckIndx(i_2986363268, 0, (n_2986363170).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986363349)) {
            var j_2986363353 = (eh_2986363349 & (t_2986363167.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986363167.data[chckIndx(j_2986363353, 0, (t_2986363167.data).length - 1)].Field0)) break Label6;
                  j_2986363353 = nextTry_1308622883(j_2986363353, (t_2986363167.data).length - 1);
                }
            };
            rawInsert_2986363600(t_2986363167, t_2986363167, "data", n_2986363170[chckIndx(i_2986363268, 0, (n_2986363170).length - 1)].Field1, n_2986363170[chckIndx(i_2986363268, 0, (n_2986363170).length - 1)].Field2, eh_2986363349, j_2986363353);
            }
            
            res_2936013226 = addInt(res_2936013226, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986363850(t_2986363853, key_2986363854, hc_2986363855) {
  var result_2986363856 = 0;

  BeforeRet: {
    if (((t_2986363853.data).length == 0)) {
    result_2986363856 = -1;
    break BeforeRet;
    }
    
    var h_2986363941 = (hc_2986363855 & (t_2986363853.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986363853.data[chckIndx(h_2986363941, 0, (t_2986363853.data).length - 1)].Field0)) break Label2;
          if (((t_2986363853.data[chckIndx(h_2986363941, 0, (t_2986363853.data).length - 1)].Field0 == hc_2986363855) && (t_2986363853.data[chckIndx(h_2986363941, 0, (t_2986363853.data).length - 1)].Field1 == key_2986363854))) {
          result_2986363856 = h_2986363941;
          break BeforeRet;
          }
          
          h_2986363941 = nextTry_1308622883(h_2986363941, (t_2986363853.data).length - 1);
        }
    };
    result_2986363856 = subInt(-1, h_2986363941);
  };

  return result_2986363856;

}

function HEX5BHEX5DHEX3D_2986362639(t_2986362642, key_2986362643, val_2986362644) {
    if (((t_2986362642.data).length == 0)) {
    var correctSizeHEX60gensym206_2986362727 = slotsNeeded_1308622891(32);
    t_2986362642.counter = 0;
    t_2986362642.data = new Array(chckRange(correctSizeHEX60gensym206_2986362727, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym206_2986362727, 0, 2147483647) ; ++i) { t_2986362642.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986362732 = [0];
    var index_2986362739 = rawGet_2986362074(t_2986362642, key_2986362643, hc_2986362732, 0);
    if ((0 <= index_2986362739)) {
    t_2986362642.data[chckIndx(index_2986362739, 0, (t_2986362642.data).length - 1)].Field2 = val_2986362644;
    }
    else {
      if (((t_2986362642.data).length == 0)) {
      var correctSizeHEX60gensym209_2986362902 = slotsNeeded_1308622891(32);
      t_2986362642.counter = 0;
      t_2986362642.data = new Array(chckRange(correctSizeHEX60gensym209_2986362902, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym209_2986362902, 0, 2147483647) ; ++i) { t_2986362642.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986362907(t_2986362642)) {
      enlarge_2986363164(t_2986362642);
      index_2986362739 = rawGetKnownHC_2986363850(t_2986362642, key_2986362643, hc_2986362732[0]);
      }
      
      index_2986362739 = subInt(-1, index_2986362739);
      rawInsert_2986363600(t_2986362642, t_2986362642, "data", key_2986362643, val_2986362644, hc_2986362732[0], index_2986362739);
      t_2986362642.counter = addInt(t_2986362642.counter, 1);
    }
    

  
}

function len_2986364652(t_2986364655) {
  var result_2986364656 = 0;

    result_2986364656 = t_2986364655.counter;

  return result_2986364656;

}

function len_2986364569(cache_2986364572) {
  var result_2986364573 = 0;

    result_2986364573 = len_2986364652(cache_2986364572.table);

  return result_2986364573;

}

function del_2986364744(t_2986364747, key_2986364748) {
    var hc_2986364749 = [0];
    var i_2986364756 = rawGet_2986362074(t_2986364747, key_2986364748, hc_2986364749, 0);
    var mskHEX60gensym36_2986364760 = (t_2986364747.data).length - 1;
    if ((0 <= i_2986364756)) {
    t_2986364747.counter = subInt(t_2986364747.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986364767 = i_2986364756;
            var rHEX60gensym36_2986364768 = jHEX60gensym36_2986364767;
            t_2986364747.data[chckIndx(i_2986364756, 0, (t_2986364747.data).length - 1)].Field0 = 0;
            t_2986364747.data[chckIndx(i_2986364756, 0, (t_2986364747.data).length - 1)].Field1 = null;
            t_2986364747.data[chckIndx(i_2986364756, 0, (t_2986364747.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986364756 = (addInt(i_2986364756, 1) & mskHEX60gensym36_2986364760);
                  if (isEmpty_1308622877(t_2986364747.data[chckIndx(i_2986364756, 0, (t_2986364747.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986364768 = (t_2986364747.data[chckIndx(i_2986364756, 0, (t_2986364747.data).length - 1)].Field0 & mskHEX60gensym36_2986364760);
                  if (!(((((rHEX60gensym36_2986364768 <= i_2986364756) && (jHEX60gensym36_2986364767 < rHEX60gensym36_2986364768)) || ((jHEX60gensym36_2986364767 < rHEX60gensym36_2986364768) && (i_2986364756 < jHEX60gensym36_2986364767))) || ((i_2986364756 < jHEX60gensym36_2986364767) && (rHEX60gensym36_2986364768 <= i_2986364756))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986364747.data[chckIndx(jHEX60gensym36_2986364767, 0, (t_2986364747.data).length - 1)] = nimCopy(t_2986364747.data[chckIndx(jHEX60gensym36_2986364767, 0, (t_2986364747.data).length - 1)], t_2986364747.data[chckIndx(i_2986364756, 0, (t_2986364747.data).length - 1)], NTI2986345068);
          }
      };
    };
    }
    

  
}

function resize_2986364487(cache_2986364490) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986364490.capacity < len_2986364569(cache_2986364490))) break Label2;
          var t_2986364657 = cache_2986364490.list.tail;
          if (cache_2986364490.recordRemovedKeys) {
          incl_2986350370(cache_2986364490.removedKeys, t_2986364657.value.key);
          }
          
          del_2986364744(cache_2986364490.table, t_2986364657.value.key);
          remove_2986365503(cache_2986364490.list, t_2986364657);
        }
    };

  
}

function addNewNode_2986362549(cache_2986362552, key_2986362553, val_2986362554) {
    var node_2986362575 = newDoublyLinkedNode_2986362557({key: key_2986362553, val: val_2986362554});
    HEX5BHEX5DHEX3D_2986362639(cache_2986362552.table, key_2986362553, node_2986362575);
    prepend_2986364250(cache_2986362552.list, node_2986362575);
    if (cache_2986362552.recordRemovedKeys) {
    excl_2986349211(cache_2986362552.removedKeys, key_2986362553);
    }
    
    resize_2986364487(cache_2986362552);

  
}

function HEX5BHEX5DHEX3D_2986361969(cache_2986361972, key_2986361973, val_2986361974) {
    var node_2986362522 = getOrDefault_2986362064(cache_2986361972.table, key_2986361973, null);
    if ((node_2986362522 == null)) {
    addNewNode_2986362549(cache_2986361972, key_2986361973, val_2986361974);
    }
    else {
      node_2986362522.value.val = val_2986361974;
      remove_2986365503(cache_2986361972.list, node_2986362522);
      prepend_2986364250(cache_2986361972.list, node_2986362522);
    }
    

  
}

function fingerprint_3070231764(symbols_3070231772) {
  var result_3070231773 = [[]];

    result_3070231773[0] = nimCopy(null, [], NTI2013268507);
    Label1: {
      var key_3070232088 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var value_3070232089 = null;
      var L_2936013233 = len_3070231826(symbols_3070231772);
      Label2: {
        var h_2936013235 = 0;
        var colontmp__2936013236 = 0;
        colontmp__2936013236 = (symbols_3070231772.data).length - 1;
        var res_2936013237 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936013237 <= colontmp__2936013236)) break Label4;
              h_2936013235 = res_2936013237;
              if (isFilled_1308622880(symbols_3070231772.data[chckIndx(h_2936013235, 0, (symbols_3070231772.data).length - 1)].Field0)) {
              var colontmp__2936013240 = nimCopy(null, {Field0: nimCopy(null, symbols_3070231772.data[chckIndx(h_2936013235, 0, (symbols_3070231772.data).length - 1)].Field1, NTI2181038083), Field1: symbols_3070231772.data[chckIndx(h_2936013235, 0, (symbols_3070231772.data).length - 1)].Field2}, NTI3070231514);
              key_3070232088 = nimCopy(key_3070232088, colontmp__2936013240["Field0"], NTI2181038083);
              value_3070232089 = colontmp__2936013240["Field1"];
              add_3070231175(result_3070231773, 0, fingerprint_3070231709(value_3070232089));
              if (!((len_3070231826(symbols_3070231772) == L_2936013233))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013237 = addInt(res_2936013237, 1);
            }
        };
      };
    };

  return result_3070231773[0];

}

function initDoublyLinkedList_2986365946() {
  var result_2986365948 = ({head: null, tail: null});

  return result_2986365948;

}

function initTable_2986365952(initialSize_2986365955) {
  var result_2986365956 = ({data: [], counter: 0});

    var correctSizeHEX60gensym219_2986365958 = slotsNeeded_1308622891(chckRange(initialSize_2986365955, 0, 2147483647));
    result_2986365956.counter = 0;
    result_2986365956.data = new Array(chckRange(correctSizeHEX60gensym219_2986365958, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym219_2986365958, 0, 2147483647) ; ++i) { result_2986365956.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986365956;

}

function newLruCache_2986365936(capacity_2986365939, recordRemovedKeys_2986365940) {
  var result_2986365941 = null;

    result_2986365941 = {capacity: capacity_2986365939, list: initDoublyLinkedList_2986365946(), table: initTable_2986365952(correctSize_3019898901(capacity_2986365939)), recordRemovedKeys: recordRemovedKeys_2986365940, removedKeys: ({data: [], counter: 0})};

  return result_2986365941;

}

function newCache_2986365931(capacity_2986365934) {
  var result_2986365935 = null;

    result_2986365935 = newLruCache_2986365936(capacity_2986365934, false);

  return result_2986365935;

}

function init_2986365926(result_2986365929, result_2986365929_Idx, capacity_2986365930) {
    result_2986365929[result_2986365929_Idx] = newCache_2986365931(capacity_2986365930);

  
}

function hasKey_2986366169(t_2986366172, key_2986366173) {
  var result_2986366174 = false;

    var hc_2986366175 = [0];
    result_2986366174 = (0 <= rawGet_2986366176(t_2986366172, key_2986366173, hc_2986366175, 0));

  return result_2986366174;

}

function contains_2986366163(t_2986366166, key_2986366167) {
  var result_2986366168 = false;

  BeforeRet: {
    result_2986366168 = hasKey_2986366169(t_2986366166, key_2986366167);
    break BeforeRet;
  };

  return result_2986366168;

}

function contains_2986366069(cache_2986366072, key_2986366073) {
  var result_2986366074 = false;

    result_2986366074 = contains_2986366163(cache_2986366072.table, key_2986366073);

  return result_2986366074;

}

function HEX5BHEX5D_2986366708(t_2986366711, key_2986366712) {
  var result_2986366713 = null;
  var result_2986366713_Idx = 0;

    var hcHEX60gensym22_2986366714 = [0];
    var indexHEX60gensym22_2986366721 = rawGet_2986366176(t_2986366711, key_2986366712, hcHEX60gensym22_2986366714, 0);
    if ((0 <= indexHEX60gensym22_2986366721)) {
    result_2986366713 = t_2986366711.data[chckIndx(indexHEX60gensym22_2986366721, 0, (t_2986366711.data).length - 1)]; result_2986366713_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986366712);
    }
    

  return [result_2986366713, result_2986366713_Idx];

}

function HEX5BHEX5D_2986366622(cache_2986366625, key_2986366626) {
    var Temporary1;

  var result_2986366627 = null;

    var node_2986366814 = (Temporary1 = HEX5BHEX5D_2986366708(cache_2986366625.table, key_2986366626), Temporary1)[0][Temporary1[1]];
    result_2986366627 = node_2986366814.value.val;
    remove_2986366828(cache_2986366625.list, node_2986366814);
    prepend_2986367132(cache_2986366625.list, node_2986366814);

  return result_2986366627;

}

function computeSymbolTypeImpl_2986345282(ctx_2986345283, symbol_2986345284) {
      var Temporary3;
      var Temporary4;

  var result_2986443693 = null;

  BeforeRet: {
    var logQueryHEX60gensym553_2986443695 = (ctx_2986345283.enableLogging || ctx_2986345283.enableQueryLogging);
    if (logQueryHEX60gensym553_2986443695) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym553_2986443695) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,84,121,112,101,73,109,112,108,32] || []).concat(HEX24_3070231676(symbol_2986345284) || []));
    }
    
    try {
    switch (symbol_2986345284.kind) {
    case 0:
      var Temporary3 = symbol_2986345284;
      if (ConstSet134[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      result_2986443693 = computeType_2986417458(ctx_2986345283, Temporary3.node, true);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2986345284;
      if (ConstSet135[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'typ\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      result_2986443693 = Temporary4.typ;
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym553_2986443695 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070230964(result_2986443693) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym553_2986443695) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986443693;

}

function getOrDefault_2986367487(t_2986367490, key_2986367491, default_2986367492) {
    var Temporary1;

  var result_2986367493 = null;

    var hcHEX60gensym226_2986367496 = [0];
    var indexHEX60gensym226_2986367851 = rawGet_2986367497(t_2986367490, key_2986367491, hcHEX60gensym226_2986367496, 0);
    if ((0 <= indexHEX60gensym226_2986367851)) {
    Temporary1 = t_2986367490.data[chckIndx(indexHEX60gensym226_2986367851, 0, (t_2986367490.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986367492;
    }
    
    result_2986367493 = Temporary1;

  return result_2986367493;

}

function newDoublyLinkedNode_2986367976(value_2986367978) {
  var result_2986367979 = null;

    result_2986367979 = ({next: null, prev: null, value: ({key: null, val: null})});
    result_2986367979.value = nimCopy(result_2986367979.value, value_2986367978, NTI2986345098);

  return result_2986367979;

}

function mustRehash_2986368326(t_2986368328) {
  var result_2986368329 = false;

    if (!((t_2986368328.counter < (t_2986368328.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986368329 = ((mulInt((t_2986368328.data).length, 2) < mulInt(t_2986368328.counter, 3)) || (subInt((t_2986368328.data).length, t_2986368328.counter) < 4));

  return result_2986368329;

}

function rawInsert_2986369019(t_2986369023, data_2986369024, data_2986369024_Idx, key_2986369025, val_2986369026, hc_2986369027, h_2986369028) {
    data_2986369024[data_2986369024_Idx][chckIndx(h_2986369028, 0, (data_2986369024[data_2986369024_Idx]).length - 1)].Field1 = key_2986369025;
    data_2986369024[data_2986369024_Idx][chckIndx(h_2986369028, 0, (data_2986369024[data_2986369024_Idx]).length - 1)].Field2 = val_2986369026;
    data_2986369024[data_2986369024_Idx][chckIndx(h_2986369028, 0, (data_2986369024[data_2986369024_Idx]).length - 1)].Field0 = hc_2986369027;

  
}

function enlarge_2986368583(t_2986368586) {
    var n_2986368589 = [];
    n_2986368589 = new Array(chckRange(mulInt((t_2986368586.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986368586.data).length, 2), 0, 2147483647) ; ++i) { n_2986368589[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986368586.data; t_2986368586.data = n_2986368589; n_2986368589 = Temporary1;    Label2: {
      var i_2986368687 = 0;
      var colontmp__2936013243 = 0;
      colontmp__2936013243 = (n_2986368589).length - 1;
      var res_2936013244 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013244 <= colontmp__2936013243)) break Label4;
            i_2986368687 = res_2936013244;
            var eh_2986368768 = n_2986368589[chckIndx(i_2986368687, 0, (n_2986368589).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986368768)) {
            var j_2986368772 = (eh_2986368768 & (t_2986368586.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986368586.data[chckIndx(j_2986368772, 0, (t_2986368586.data).length - 1)].Field0)) break Label6;
                  j_2986368772 = nextTry_1308622883(j_2986368772, (t_2986368586.data).length - 1);
                }
            };
            rawInsert_2986369019(t_2986368586, t_2986368586, "data", n_2986368589[chckIndx(i_2986368687, 0, (n_2986368589).length - 1)].Field1, n_2986368589[chckIndx(i_2986368687, 0, (n_2986368589).length - 1)].Field2, eh_2986368768, j_2986368772);
            }
            
            res_2936013244 = addInt(res_2936013244, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986369269(t_2986369272, key_2986369273, hc_2986369274) {
  var result_2986369275 = 0;

  BeforeRet: {
    if (((t_2986369272.data).length == 0)) {
    result_2986369275 = -1;
    break BeforeRet;
    }
    
    var h_2986369360 = (hc_2986369274 & (t_2986369272.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986369272.data[chckIndx(h_2986369360, 0, (t_2986369272.data).length - 1)].Field0)) break Label2;
          if (((t_2986369272.data[chckIndx(h_2986369360, 0, (t_2986369272.data).length - 1)].Field0 == hc_2986369274) && HEX3DHEX3D_3070231682(t_2986369272.data[chckIndx(h_2986369360, 0, (t_2986369272.data).length - 1)].Field1, key_2986369273))) {
          result_2986369275 = h_2986369360;
          break BeforeRet;
          }
          
          h_2986369360 = nextTry_1308622883(h_2986369360, (t_2986369272.data).length - 1);
        }
    };
    result_2986369275 = subInt(-1, h_2986369360);
  };

  return result_2986369275;

}

function HEX5BHEX5DHEX3D_2986368058(t_2986368061, key_2986368062, val_2986368063) {
    if (((t_2986368061.data).length == 0)) {
    var correctSizeHEX60gensym231_2986368146 = slotsNeeded_1308622891(32);
    t_2986368061.counter = 0;
    t_2986368061.data = new Array(chckRange(correctSizeHEX60gensym231_2986368146, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym231_2986368146, 0, 2147483647) ; ++i) { t_2986368061.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986368151 = [0];
    var index_2986368158 = rawGet_2986367497(t_2986368061, key_2986368062, hc_2986368151, 0);
    if ((0 <= index_2986368158)) {
    t_2986368061.data[chckIndx(index_2986368158, 0, (t_2986368061.data).length - 1)].Field2 = val_2986368063;
    }
    else {
      if (((t_2986368061.data).length == 0)) {
      var correctSizeHEX60gensym234_2986368321 = slotsNeeded_1308622891(32);
      t_2986368061.counter = 0;
      t_2986368061.data = new Array(chckRange(correctSizeHEX60gensym234_2986368321, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym234_2986368321, 0, 2147483647) ; ++i) { t_2986368061.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986368326(t_2986368061)) {
      enlarge_2986368583(t_2986368061);
      index_2986368158 = rawGetKnownHC_2986369269(t_2986368061, key_2986368062, hc_2986368151[0]);
      }
      
      index_2986368158 = subInt(-1, index_2986368158);
      rawInsert_2986369019(t_2986368061, t_2986368061, "data", key_2986368062, val_2986368063, hc_2986368151[0], index_2986368158);
      t_2986368061.counter = addInt(t_2986368061.counter, 1);
    }
    

  
}

function rawGet_2986369896(t_2986369899, key_2986369900, hc_2986369901, hc_2986369901_Idx) {
  var result_2986369902 = 0;

  BeforeRet: {
    hc_2986369901[hc_2986369901_Idx] = hash_3070231679(key_2986369900);
    if ((hc_2986369901[hc_2986369901_Idx] == 0)) {
    hc_2986369901[hc_2986369901_Idx] = 314159265;
    }
    
    if (((t_2986369899.data).length == 0)) {
    result_2986369902 = -1;
    break BeforeRet;
    }
    
    var h_2986369988 = (hc_2986369901[hc_2986369901_Idx] & (t_2986369899.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986369899.data[chckIndx(h_2986369988, 0, (t_2986369899.data).length - 1)].Field0)) break Label2;
          if (((t_2986369899.data[chckIndx(h_2986369988, 0, (t_2986369899.data).length - 1)].Field0 == hc_2986369901[hc_2986369901_Idx]) && HEX3DHEX3D_3070231682(t_2986369899.data[chckIndx(h_2986369988, 0, (t_2986369899.data).length - 1)].Field1, key_2986369900))) {
          result_2986369902 = h_2986369988;
          break BeforeRet;
          }
          
          h_2986369988 = nextTry_1828716586(h_2986369988, (t_2986369899.data).length - 1);
        }
    };
    result_2986369902 = subInt(-1, h_2986369988);
  };

  return result_2986369902;

}

function exclImpl_2986369890(s_2986369892, key_2986369893) {
          var Temporary5;

  var result_2986369894 = false;

  BeforeRet: {
    var hc_2986369895 = [0];
    var i_2986370250 = rawGet_2986369896(s_2986369892, key_2986369893, hc_2986369895, 0);
    var msk_2986370254 = (s_2986369892.data).length - 1;
    result_2986369894 = true;
    if ((0 <= i_2986370250)) {
    result_2986369894 = false;
    s_2986369892.counter = subInt(s_2986369892.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986370260 = i_2986370250;
          var r_2986370261 = j_2986370260;
          s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)].Field0 = 0;
          s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986370250 = (addInt(i_2986370250, 1) & msk_2986370254);
                if (isEmpty_1828716580(s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986370261 = (s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)].Field0 & msk_2986370254);
                if (!(((((r_2986370261 <= i_2986370250) && (j_2986370260 < r_2986370261)) || ((j_2986370260 < r_2986370261) && (i_2986370250 < j_2986370260))) || ((i_2986370250 < j_2986370260) && (r_2986370261 <= i_2986370250))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)];
          s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)] = genericReset(s_2986369892.data[chckIndx(i_2986370250, 0, (s_2986369892.data).length - 1)], NTI2986345154);
          s_2986369892.data[chckIndx(j_2986370260, 0, (s_2986369892.data).length - 1)] = nimCopy(s_2986369892.data[chckIndx(j_2986370260, 0, (s_2986369892.data).length - 1)], Temporary5, NTI2986345154);
        }
    };
    }
    
  };

  return result_2986369894;

}

function excl_2986369875(s_2986369877, key_2986369878) {
    var _ = exclImpl_2986369890(s_2986369877, key_2986369878);

  
}

function len_2986371014(t_2986371017) {
  var result_2986371018 = 0;

    result_2986371018 = t_2986371017.counter;

  return result_2986371018;

}

function len_2986370931(cache_2986370934) {
  var result_2986370935 = 0;

    result_2986370935 = len_2986371014(cache_2986370934.table);

  return result_2986370935;

}

function mustRehash_2986371155(t_2986371157) {
  var result_2986371158 = false;

    if (!((t_2986371157.counter < (t_2986371157.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986371158 = ((mulInt((t_2986371157.data).length, 2) < mulInt(t_2986371157.counter, 3)) || (subInt((t_2986371157.data).length, t_2986371157.counter) < 4));

  return result_2986371158;

}

function rawGetKnownHC_2986371761(t_2986371764, key_2986371765, hc_2986371766) {
  var result_2986371767 = 0;

  BeforeRet: {
    if (((t_2986371764.data).length == 0)) {
    result_2986371767 = -1;
    break BeforeRet;
    }
    
    var h_2986371852 = (hc_2986371766 & (t_2986371764.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986371764.data[chckIndx(h_2986371852, 0, (t_2986371764.data).length - 1)].Field0)) break Label2;
          if (((t_2986371764.data[chckIndx(h_2986371852, 0, (t_2986371764.data).length - 1)].Field0 == hc_2986371766) && HEX3DHEX3D_3070231682(t_2986371764.data[chckIndx(h_2986371852, 0, (t_2986371764.data).length - 1)].Field1, key_2986371765))) {
          result_2986371767 = h_2986371852;
          break BeforeRet;
          }
          
          h_2986371852 = nextTry_1828716586(h_2986371852, (t_2986371764.data).length - 1);
        }
    };
    result_2986371767 = subInt(-1, h_2986371852);
  };

  return result_2986371767;

}

function rawInsert_2986372261(s_2986372263, data_2986372264, data_2986372264_Idx, key_2986372265, hc_2986372266, h_2986372267) {
    if (((data_2986372264[data_2986372264_Idx]).length == 0)) {
    var correctSizeHEX60gensym253_2986372350 = slotsNeeded_1828716594(64);
    s_2986372263.counter = 0;
    s_2986372263.data = new Array(chckRange(correctSizeHEX60gensym253_2986372350, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym253_2986372350, 0, 2147483647) ; ++i) { s_2986372263.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986372264[data_2986372264_Idx][chckIndx(h_2986372267, 0, (data_2986372264[data_2986372264_Idx]).length - 1)].Field1 = key_2986372265;
    data_2986372264[data_2986372264_Idx][chckIndx(h_2986372267, 0, (data_2986372264[data_2986372264_Idx]).length - 1)].Field0 = hc_2986372266;

  
}

function enlarge_2986371418(s_2986371420) {
    var n_2986371422 = [];
    n_2986371422 = new Array(chckRange(mulInt((s_2986371420.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986371420.data).length, 2), 0, 2147483647) ; ++i) { n_2986371422[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986371420.data; s_2986371420.data = n_2986371422; n_2986371422 = Temporary1;    Label2: {
      var i_2986371520 = 0;
      var colontmp__2936013252 = 0;
      colontmp__2936013252 = (n_2986371422).length - 1;
      var res_2936013253 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013253 <= colontmp__2936013252)) break Label4;
            i_2986371520 = res_2936013253;
            if (isFilled_1828716583(n_2986371422[chckIndx(i_2986371520, 0, (n_2986371422).length - 1)].Field0)) {
            var j_2986372096 = subInt(-1, rawGetKnownHC_2986371761(s_2986371420, n_2986371422[chckIndx(i_2986371520, 0, (n_2986371422).length - 1)].Field1, n_2986371422[chckIndx(i_2986371520, 0, (n_2986371422).length - 1)].Field0));
            rawInsert_2986372261(s_2986371420, s_2986371420, "data", n_2986371422[chckIndx(i_2986371520, 0, (n_2986371422).length - 1)].Field1, n_2986371422[chckIndx(i_2986371520, 0, (n_2986371422).length - 1)].Field0, j_2986372096);
            }
            
            res_2936013253 = addInt(res_2936013253, 1);
          }
      };
    };

  
}

function incl_2986371039(s_2986371041, key_2986371042) {
    if (((s_2986371041.data).length == 0)) {
    var correctSizeHEX60gensym246_2986371125 = slotsNeeded_1828716594(64);
    s_2986371041.counter = 0;
    s_2986371041.data = new Array(chckRange(correctSizeHEX60gensym246_2986371125, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym246_2986371125, 0, 2147483647) ; ++i) { s_2986371041.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986371140 = [0];
    var index_2986371154 = rawGet_2986369896(s_2986371041, key_2986371042, hc_2986371140, 0);
    if ((index_2986371154 < 0)) {
    if (mustRehash_2986371155(s_2986371041)) {
    enlarge_2986371418(s_2986371041);
    index_2986371154 = rawGetKnownHC_2986371761(s_2986371041, key_2986371042, hc_2986371140[0]);
    }
    
    rawInsert_2986372261(s_2986371041, s_2986371041, "data", key_2986371042, hc_2986371140[0], subInt(-1, index_2986371154));
    s_2986371041.counter = addInt(s_2986371041.counter, 1);
    }
    

  
}

function del_2986372617(t_2986372620, key_2986372621) {
    var hc_2986372622 = [0];
    var i_2986372629 = rawGet_2986367497(t_2986372620, key_2986372621, hc_2986372622, 0);
    var mskHEX60gensym36_2986372633 = (t_2986372620.data).length - 1;
    if ((0 <= i_2986372629)) {
    t_2986372620.counter = subInt(t_2986372620.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986372640 = i_2986372629;
            var rHEX60gensym36_2986372641 = jHEX60gensym36_2986372640;
            t_2986372620.data[chckIndx(i_2986372629, 0, (t_2986372620.data).length - 1)].Field0 = 0;
            t_2986372620.data[chckIndx(i_2986372629, 0, (t_2986372620.data).length - 1)].Field1 = null;
            t_2986372620.data[chckIndx(i_2986372629, 0, (t_2986372620.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986372629 = (addInt(i_2986372629, 1) & mskHEX60gensym36_2986372633);
                  if (isEmpty_1308622877(t_2986372620.data[chckIndx(i_2986372629, 0, (t_2986372620.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986372641 = (t_2986372620.data[chckIndx(i_2986372629, 0, (t_2986372620.data).length - 1)].Field0 & mskHEX60gensym36_2986372633);
                  if (!(((((rHEX60gensym36_2986372641 <= i_2986372629) && (jHEX60gensym36_2986372640 < rHEX60gensym36_2986372641)) || ((jHEX60gensym36_2986372640 < rHEX60gensym36_2986372641) && (i_2986372629 < jHEX60gensym36_2986372640))) || ((i_2986372629 < jHEX60gensym36_2986372640) && (rHEX60gensym36_2986372641 <= i_2986372629))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986372620.data[chckIndx(jHEX60gensym36_2986372640, 0, (t_2986372620.data).length - 1)] = nimCopy(t_2986372620.data[chckIndx(jHEX60gensym36_2986372640, 0, (t_2986372620.data).length - 1)], t_2986372620.data[chckIndx(i_2986372629, 0, (t_2986372620.data).length - 1)], NTI2986345134);
          }
      };
    };
    }
    

  
}

function resize_2986370849(cache_2986370852) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986370852.capacity < len_2986370931(cache_2986370852))) break Label2;
          var t_2986371019 = cache_2986370852.list.tail;
          if (cache_2986370852.recordRemovedKeys) {
          incl_2986371039(cache_2986370852.removedKeys, t_2986371019.value.key);
          }
          
          del_2986372617(cache_2986370852.table, t_2986371019.value.key);
          remove_2986373376(cache_2986370852.list, t_2986371019);
        }
    };

  
}

function addNewNode_2986367968(cache_2986367971, key_2986367972, val_2986367973) {
    var node_2986367994 = newDoublyLinkedNode_2986367976({key: key_2986367972, val: val_2986367973});
    HEX5BHEX5DHEX3D_2986368058(cache_2986367971.table, key_2986367972, node_2986367994);
    prepend_2986369665(cache_2986367971.list, node_2986367994);
    if (cache_2986367971.recordRemovedKeys) {
    excl_2986369875(cache_2986367971.removedKeys, key_2986367972);
    }
    
    resize_2986370849(cache_2986367971);

  
}

function HEX5BHEX5DHEX3D_2986367392(cache_2986367395, key_2986367396, val_2986367397) {
    var node_2986367941 = getOrDefault_2986367487(cache_2986367395.table, key_2986367396, null);
    if ((node_2986367941 == null)) {
    addNewNode_2986367968(cache_2986367395, key_2986367396, val_2986367397);
    }
    else {
      node_2986367941.value.val = val_2986367397;
      remove_2986373376(cache_2986367395.list, node_2986367941);
      prepend_2986369665(cache_2986367395.list, node_2986367941);
    }
    

  
}

function initDoublyLinkedList_2986373819() {
  var result_2986373821 = ({head: null, tail: null});

  return result_2986373821;

}

function initTable_2986373825(initialSize_2986373828) {
  var result_2986373829 = ({data: [], counter: 0});

    var correctSizeHEX60gensym254_2986373831 = slotsNeeded_1308622891(chckRange(initialSize_2986373828, 0, 2147483647));
    result_2986373829.counter = 0;
    result_2986373829.data = new Array(chckRange(correctSizeHEX60gensym254_2986373831, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym254_2986373831, 0, 2147483647) ; ++i) { result_2986373829.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986373829;

}

function newLruCache_2986373809(capacity_2986373812, recordRemovedKeys_2986373813) {
  var result_2986373814 = null;

    result_2986373814 = {capacity: capacity_2986373812, list: initDoublyLinkedList_2986373819(), table: initTable_2986373825(correctSize_3019898901(capacity_2986373812)), recordRemovedKeys: recordRemovedKeys_2986373813, removedKeys: ({data: [], counter: 0})};

  return result_2986373814;

}

function newCache_2986373804(capacity_2986373807) {
  var result_2986373808 = null;

    result_2986373808 = newLruCache_2986373809(capacity_2986373807, false);

  return result_2986373808;

}

function init_2986373799(result_2986373802, result_2986373802_Idx, capacity_2986373803) {
    result_2986373802[result_2986373802_Idx] = newCache_2986373804(capacity_2986373803);

  
}

function computeSymbolValueImpl_2986345285(ctx_2986345286, symbol_2986345287) {
      var Temporary3;
      var Temporary4;

  var result_2986443709 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym554_2986443711 = (ctx_2986345286.enableLogging || ctx_2986345286.enableQueryLogging);
    if (logQueryHEX60gensym554_2986443711) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym554_2986443711) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,83,121,109,98,111,108,86,97,108,117,101,73,109,112,108,32] || []).concat(HEX24_3070231676(symbol_2986345287) || []));
    }
    
    try {
    switch (symbol_2986345287.kind) {
    case 0:
      var Temporary3 = symbol_2986345287;
      if (ConstSet136[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      result_2986443709 = nimCopy(result_2986443709, computeValue_2986420934(ctx_2986345286, Temporary3.node, true), NTI3070230535);
      break BeforeRet;
      break;
    case 1:
      var Temporary4 = symbol_2986345287;
      if (ConstSet137[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'value\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      result_2986443709 = nimCopy(result_2986443709, Temporary4.value, NTI3070230535);
      break BeforeRet;
      break;
    }
    } finally {
    if ((logQueryHEX60gensym554_2986443711 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070231271(result_2986443709) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym554_2986443711) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986443709;

}

function getOrDefault_2986374197(t_2986374200, key_2986374201, default_2986374202) {
    var Temporary1;

  var result_2986374203 = null;

    var hcHEX60gensym257_2986374206 = [0];
    var indexHEX60gensym257_2986374561 = rawGet_2986374207(t_2986374200, key_2986374201, hcHEX60gensym257_2986374206, 0);
    if ((0 <= indexHEX60gensym257_2986374561)) {
    Temporary1 = t_2986374200.data[chckIndx(indexHEX60gensym257_2986374561, 0, (t_2986374200.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986374202;
    }
    
    result_2986374203 = Temporary1;

  return result_2986374203;

}

function newDoublyLinkedNode_2986374686(value_2986374688) {
  var result_2986374689 = null;

    result_2986374689 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2986374689.value = nimCopy(result_2986374689.value, value_2986374688, NTI2986345173);

  return result_2986374689;

}

function mustRehash_2986375045(t_2986375047) {
  var result_2986375048 = false;

    if (!((t_2986375047.counter < (t_2986375047.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986375048 = ((mulInt((t_2986375047.data).length, 2) < mulInt(t_2986375047.counter, 3)) || (subInt((t_2986375047.data).length, t_2986375047.counter) < 4));

  return result_2986375048;

}

function rawInsert_2986375738(t_2986375742, data_2986375743, data_2986375743_Idx, key_2986375744, val_2986375745, hc_2986375746, h_2986375747) {
    data_2986375743[data_2986375743_Idx][chckIndx(h_2986375747, 0, (data_2986375743[data_2986375743_Idx]).length - 1)].Field1 = key_2986375744;
    data_2986375743[data_2986375743_Idx][chckIndx(h_2986375747, 0, (data_2986375743[data_2986375743_Idx]).length - 1)].Field2 = val_2986375745;
    data_2986375743[data_2986375743_Idx][chckIndx(h_2986375747, 0, (data_2986375743[data_2986375743_Idx]).length - 1)].Field0 = hc_2986375746;

  
}

function enlarge_2986375302(t_2986375305) {
    var n_2986375308 = [];
    n_2986375308 = new Array(chckRange(mulInt((t_2986375305.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986375305.data).length, 2), 0, 2147483647) ; ++i) { n_2986375308[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986375305.data; t_2986375305.data = n_2986375308; n_2986375308 = Temporary1;    Label2: {
      var i_2986375406 = 0;
      var colontmp__2936013260 = 0;
      colontmp__2936013260 = (n_2986375308).length - 1;
      var res_2936013261 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013261 <= colontmp__2936013260)) break Label4;
            i_2986375406 = res_2936013261;
            var eh_2986375487 = n_2986375308[chckIndx(i_2986375406, 0, (n_2986375308).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986375487)) {
            var j_2986375491 = (eh_2986375487 & (t_2986375305.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986375305.data[chckIndx(j_2986375491, 0, (t_2986375305.data).length - 1)].Field0)) break Label6;
                  j_2986375491 = nextTry_1308622883(j_2986375491, (t_2986375305.data).length - 1);
                }
            };
            rawInsert_2986375738(t_2986375305, t_2986375305, "data", n_2986375308[chckIndx(i_2986375406, 0, (n_2986375308).length - 1)].Field1, n_2986375308[chckIndx(i_2986375406, 0, (n_2986375308).length - 1)].Field2, eh_2986375487, j_2986375491);
            }
            
            res_2936013261 = addInt(res_2936013261, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986375988(t_2986375991, key_2986375992, hc_2986375993) {
  var result_2986375994 = 0;

  BeforeRet: {
    if (((t_2986375991.data).length == 0)) {
    result_2986375994 = -1;
    break BeforeRet;
    }
    
    var h_2986376079 = (hc_2986375993 & (t_2986375991.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986375991.data[chckIndx(h_2986376079, 0, (t_2986375991.data).length - 1)].Field0)) break Label2;
          if (((t_2986375991.data[chckIndx(h_2986376079, 0, (t_2986375991.data).length - 1)].Field0 == hc_2986375993) && HEX3DHEX3D_3070231682(t_2986375991.data[chckIndx(h_2986376079, 0, (t_2986375991.data).length - 1)].Field1, key_2986375992))) {
          result_2986375994 = h_2986376079;
          break BeforeRet;
          }
          
          h_2986376079 = nextTry_1308622883(h_2986376079, (t_2986375991.data).length - 1);
        }
    };
    result_2986375994 = subInt(-1, h_2986376079);
  };

  return result_2986375994;

}

function HEX5BHEX5DHEX3D_2986374777(t_2986374780, key_2986374781, val_2986374782) {
    if (((t_2986374780.data).length == 0)) {
    var correctSizeHEX60gensym262_2986374865 = slotsNeeded_1308622891(32);
    t_2986374780.counter = 0;
    t_2986374780.data = new Array(chckRange(correctSizeHEX60gensym262_2986374865, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym262_2986374865, 0, 2147483647) ; ++i) { t_2986374780.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986374870 = [0];
    var index_2986374877 = rawGet_2986374207(t_2986374780, key_2986374781, hc_2986374870, 0);
    if ((0 <= index_2986374877)) {
    t_2986374780.data[chckIndx(index_2986374877, 0, (t_2986374780.data).length - 1)].Field2 = val_2986374782;
    }
    else {
      if (((t_2986374780.data).length == 0)) {
      var correctSizeHEX60gensym265_2986375040 = slotsNeeded_1308622891(32);
      t_2986374780.counter = 0;
      t_2986374780.data = new Array(chckRange(correctSizeHEX60gensym265_2986375040, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym265_2986375040, 0, 2147483647) ; ++i) { t_2986374780.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986375045(t_2986374780)) {
      enlarge_2986375302(t_2986374780);
      index_2986374877 = rawGetKnownHC_2986375988(t_2986374780, key_2986374781, hc_2986374870[0]);
      }
      
      index_2986374877 = subInt(-1, index_2986374877);
      rawInsert_2986375738(t_2986374780, t_2986374780, "data", key_2986374781, val_2986374782, hc_2986374870[0], index_2986374877);
      t_2986374780.counter = addInt(t_2986374780.counter, 1);
    }
    

  
}

function len_2986376786(t_2986376789) {
  var result_2986376790 = 0;

    result_2986376790 = t_2986376789.counter;

  return result_2986376790;

}

function len_2986376703(cache_2986376706) {
  var result_2986376707 = 0;

    result_2986376707 = len_2986376786(cache_2986376706.table);

  return result_2986376707;

}

function del_2986376878(t_2986376881, key_2986376882) {
    var hc_2986376883 = [0];
    var i_2986376890 = rawGet_2986374207(t_2986376881, key_2986376882, hc_2986376883, 0);
    var mskHEX60gensym36_2986376894 = (t_2986376881.data).length - 1;
    if ((0 <= i_2986376890)) {
    t_2986376881.counter = subInt(t_2986376881.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986376901 = i_2986376890;
            var rHEX60gensym36_2986376902 = jHEX60gensym36_2986376901;
            t_2986376881.data[chckIndx(i_2986376890, 0, (t_2986376881.data).length - 1)].Field0 = 0;
            t_2986376881.data[chckIndx(i_2986376890, 0, (t_2986376881.data).length - 1)].Field1 = null;
            t_2986376881.data[chckIndx(i_2986376890, 0, (t_2986376881.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986376890 = (addInt(i_2986376890, 1) & mskHEX60gensym36_2986376894);
                  if (isEmpty_1308622877(t_2986376881.data[chckIndx(i_2986376890, 0, (t_2986376881.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986376902 = (t_2986376881.data[chckIndx(i_2986376890, 0, (t_2986376881.data).length - 1)].Field0 & mskHEX60gensym36_2986376894);
                  if (!(((((rHEX60gensym36_2986376902 <= i_2986376890) && (jHEX60gensym36_2986376901 < rHEX60gensym36_2986376902)) || ((jHEX60gensym36_2986376901 < rHEX60gensym36_2986376902) && (i_2986376890 < jHEX60gensym36_2986376901))) || ((i_2986376890 < jHEX60gensym36_2986376901) && (rHEX60gensym36_2986376902 <= i_2986376890))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986376881.data[chckIndx(jHEX60gensym36_2986376901, 0, (t_2986376881.data).length - 1)] = nimCopy(t_2986376881.data[chckIndx(jHEX60gensym36_2986376901, 0, (t_2986376881.data).length - 1)], t_2986376881.data[chckIndx(i_2986376890, 0, (t_2986376881.data).length - 1)], NTI2986345209);
          }
      };
    };
    }
    

  
}

function resize_2986376621(cache_2986376624) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986376624.capacity < len_2986376703(cache_2986376624))) break Label2;
          var t_2986376791 = cache_2986376624.list.tail;
          if (cache_2986376624.recordRemovedKeys) {
          incl_2986371039(cache_2986376624.removedKeys, t_2986376791.value.key);
          }
          
          del_2986376878(cache_2986376624.table, t_2986376791.value.key);
          remove_2986377637(cache_2986376624.list, t_2986376791);
        }
    };

  
}

function addNewNode_2986374678(cache_2986374681, key_2986374682, val_2986374683) {
    var node_2986374713 = newDoublyLinkedNode_2986374686({key: key_2986374682, val: nimCopy(null, val_2986374683, NTI3070230535)});
    HEX5BHEX5DHEX3D_2986374777(cache_2986374681.table, key_2986374682, node_2986374713);
    prepend_2986376384(cache_2986374681.list, node_2986374713);
    if (cache_2986374681.recordRemovedKeys) {
    excl_2986369875(cache_2986374681.removedKeys, key_2986374682);
    }
    
    resize_2986376621(cache_2986374681);

  
}

function HEX5BHEX5DHEX3D_2986374102(cache_2986374105, key_2986374106, val_2986374107) {
    var node_2986374651 = getOrDefault_2986374197(cache_2986374105.table, key_2986374106, null);
    if ((node_2986374651 == null)) {
    addNewNode_2986374678(cache_2986374105, key_2986374106, val_2986374107);
    }
    else {
      node_2986374651.value.val = nimCopy(node_2986374651.value.val, val_2986374107, NTI3070230535);
      remove_2986377637(cache_2986374105.list, node_2986374651);
      prepend_2986376384(cache_2986374105.list, node_2986374651);
    }
    

  
}

function initDoublyLinkedList_2986378080() {
  var result_2986378082 = ({head: null, tail: null});

  return result_2986378082;

}

function initTable_2986378086(initialSize_2986378089) {
  var result_2986378090 = ({data: [], counter: 0});

    var correctSizeHEX60gensym275_2986378092 = slotsNeeded_1308622891(chckRange(initialSize_2986378089, 0, 2147483647));
    result_2986378090.counter = 0;
    result_2986378090.data = new Array(chckRange(correctSizeHEX60gensym275_2986378092, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym275_2986378092, 0, 2147483647) ; ++i) { result_2986378090.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986378090;

}

function newLruCache_2986378070(capacity_2986378073, recordRemovedKeys_2986378074) {
  var result_2986378075 = null;

    result_2986378075 = {capacity: capacity_2986378073, list: initDoublyLinkedList_2986378080(), table: initTable_2986378086(correctSize_3019898901(capacity_2986378073)), recordRemovedKeys: recordRemovedKeys_2986378074, removedKeys: ({data: [], counter: 0})};

  return result_2986378075;

}

function newCache_2986378065(capacity_2986378068) {
  var result_2986378069 = null;

    result_2986378069 = newLruCache_2986378070(capacity_2986378068, false);

  return result_2986378069;

}

function init_2986378060(result_2986378063, result_2986378063_Idx, capacity_2986378064) {
    result_2986378063[result_2986378063_Idx] = newCache_2986378065(capacity_2986378064);

  
}

function hasKey_2986378303(t_2986378306, key_2986378307) {
  var result_2986378308 = false;

    var hc_2986378309 = [0];
    result_2986378308 = (0 <= rawGet_2986378310(t_2986378306, key_2986378307, hc_2986378309, 0));

  return result_2986378308;

}

function contains_2986378297(t_2986378300, key_2986378301) {
  var result_2986378302 = false;

  BeforeRet: {
    result_2986378302 = hasKey_2986378303(t_2986378300, key_2986378301);
    break BeforeRet;
  };

  return result_2986378302;

}

function contains_2986378203(cache_2986378206, key_2986378207) {
  var result_2986378208 = false;

    result_2986378208 = contains_2986378297(cache_2986378206.table, key_2986378207);

  return result_2986378208;

}

function HEX5BHEX5D_2986378842(t_2986378845, key_2986378846) {
  var result_2986378847 = null;
  var result_2986378847_Idx = 0;

    var hcHEX60gensym22_2986378848 = [0];
    var indexHEX60gensym22_2986378855 = rawGet_2986378310(t_2986378845, key_2986378846, hcHEX60gensym22_2986378848, 0);
    if ((0 <= indexHEX60gensym22_2986378855)) {
    result_2986378847 = t_2986378845.data[chckIndx(indexHEX60gensym22_2986378855, 0, (t_2986378845.data).length - 1)]; result_2986378847_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986378846);
    }
    

  return [result_2986378847, result_2986378847_Idx];

}

function HEX5BHEX5D_2986378756(cache_2986378759, key_2986378760) {
    var Temporary1;

  var result_2986378761 = null;

    var node_2986378948 = (Temporary1 = HEX5BHEX5D_2986378842(cache_2986378759.table, key_2986378760), Temporary1)[0][Temporary1[1]];
    result_2986378761 = node_2986378948.value.val;
    remove_2986378962(cache_2986378759.list, node_2986378948);
    prepend_2986379266(cache_2986378759.list, node_2986378948);

  return result_2986378761;

}

function initTable_3120564412(initialSize_3120564415) {
  var result_3120564416 = ({data: [], counter: 0});

    var correctSizeHEX60gensym58_3120564418 = slotsNeeded_1308622891(chckRange(initialSize_3120564415, 0, 2147483647));
    result_3120564416.counter = 0;
    result_3120564416.data = new Array(chckRange(correctSizeHEX60gensym58_3120564418, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym58_3120564418, 0, 2147483647) ; ++i) { result_3120564416.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }
  return result_3120564416;

}

function rawGet_3120562341(t_3120562344, key_3120562345, hc_3120562346, hc_3120562346_Idx) {
  var result_3120562347 = 0;

  BeforeRet: {
    hc_3120562346[hc_3120562346_Idx] = hash_2181038324(key_3120562345);
    if ((hc_3120562346[hc_3120562346_Idx] == 0)) {
    hc_3120562346[hc_3120562346_Idx] = 314159265;
    }
    
    if (((t_3120562344.data).length == 0)) {
    result_3120562347 = -1;
    break BeforeRet;
    }
    
    var h_3120562398 = (hc_3120562346[hc_3120562346_Idx] & (t_3120562344.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120562344.data[chckIndx(h_3120562398, 0, (t_3120562344.data).length - 1)].Field0)) break Label2;
          if (((t_3120562344.data[chckIndx(h_3120562398, 0, (t_3120562344.data).length - 1)].Field0 == hc_3120562346[hc_3120562346_Idx]) && HEX3DHEX3D_2181038320(t_3120562344.data[chckIndx(h_3120562398, 0, (t_3120562344.data).length - 1)].Field1, key_3120562345))) {
          result_3120562347 = h_3120562398;
          break BeforeRet;
          }
          
          h_3120562398 = nextTry_1308622883(h_3120562398, (t_3120562344.data).length - 1);
        }
    };
    result_3120562347 = subInt(-1, h_3120562398);
  };

  return result_3120562347;

}

function mustRehash_3120562686(t_3120562688) {
  var result_3120562689 = false;

    if (!((t_3120562688.counter < (t_3120562688.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3120562689 = ((mulInt((t_3120562688.data).length, 2) < mulInt(t_3120562688.counter, 3)) || (subInt((t_3120562688.data).length, t_3120562688.counter) < 4));

  return result_3120562689;

}

function rawInsert_3120563135(t_3120563139, data_3120563140, data_3120563140_Idx, key_3120563141, val_3120563142, hc_3120563143, h_3120563144) {
    data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field1 = nimCopy(data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field1, key_3120563141, NTI2181038083);
    data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field2 = nimCopy(data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field2, val_3120563142, NTI3070230535);
    data_3120563140[data_3120563140_Idx][chckIndx(h_3120563144, 0, (data_3120563140[data_3120563140_Idx]).length - 1)].Field0 = hc_3120563143;

  
}

function enlarge_3120562841(t_3120562844) {
    var n_3120562847 = [];
    n_3120562847 = new Array(chckRange(mulInt((t_3120562844.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3120562844.data).length, 2), 0, 2147483647) ; ++i) { n_3120562847[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    var Temporary1 = t_3120562844.data; t_3120562844.data = n_3120562847; n_3120562847 = Temporary1;    Label2: {
      var i_3120562911 = 0;
      var colontmp__2936013275 = 0;
      colontmp__2936013275 = (n_3120562847).length - 1;
      var res_2936013276 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013276 <= colontmp__2936013275)) break Label4;
            i_3120562911 = res_2936013276;
            var eh_3120562965 = n_3120562847[chckIndx(i_3120562911, 0, (n_3120562847).length - 1)].Field0;
            if (isFilled_1308622880(eh_3120562965)) {
            var j_3120562969 = (eh_3120562965 & (t_3120562844.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3120562844.data[chckIndx(j_3120562969, 0, (t_3120562844.data).length - 1)].Field0)) break Label6;
                  j_3120562969 = nextTry_1308622883(j_3120562969, (t_3120562844.data).length - 1);
                }
            };
            rawInsert_3120563135(t_3120562844, t_3120562844, "data", n_3120562847[chckIndx(i_3120562911, 0, (n_3120562847).length - 1)].Field1, n_3120562847[chckIndx(i_3120562911, 0, (n_3120562847).length - 1)].Field2, eh_3120562965, j_3120562969);
            }
            
            res_2936013276 = addInt(res_2936013276, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3120563304(t_3120563307, key_3120563308, hc_3120563309) {
  var result_3120563310 = 0;

  BeforeRet: {
    if (((t_3120563307.data).length == 0)) {
    result_3120563310 = -1;
    break BeforeRet;
    }
    
    var h_3120563361 = (hc_3120563309 & (t_3120563307.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3120563307.data[chckIndx(h_3120563361, 0, (t_3120563307.data).length - 1)].Field0)) break Label2;
          if (((t_3120563307.data[chckIndx(h_3120563361, 0, (t_3120563307.data).length - 1)].Field0 == hc_3120563309) && HEX3DHEX3D_2181038320(t_3120563307.data[chckIndx(h_3120563361, 0, (t_3120563307.data).length - 1)].Field1, key_3120563308))) {
          result_3120563310 = h_3120563361;
          break BeforeRet;
          }
          
          h_3120563361 = nextTry_1308622883(h_3120563361, (t_3120563307.data).length - 1);
        }
    };
    result_3120563310 = subInt(-1, h_3120563361);
  };

  return result_3120563310;

}

function HEX5BHEX5DHEX3D_3120562280(t_3120562283, key_3120562284, val_3120562285) {
    if (((t_3120562283.data).length == 0)) {
    var correctSizeHEX60gensym3_3120562335 = slotsNeeded_1308622891(32);
    t_3120562283.counter = 0;
    t_3120562283.data = new Array(chckRange(correctSizeHEX60gensym3_3120562335, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3120562335, 0, 2147483647) ; ++i) { t_3120562283.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }    }
    
    var hc_3120562340 = [0];
    var index_3120562579 = rawGet_3120562341(t_3120562283, key_3120562284, hc_3120562340, 0);
    if ((0 <= index_3120562579)) {
    t_3120562283.data[chckIndx(index_3120562579, 0, (t_3120562283.data).length - 1)].Field2 = nimCopy(t_3120562283.data[chckIndx(index_3120562579, 0, (t_3120562283.data).length - 1)].Field2, val_3120562285, NTI3070230535);
    }
    else {
      if (((t_3120562283.data).length == 0)) {
      var correctSizeHEX60gensym8_3120562681 = slotsNeeded_1308622891(32);
      t_3120562283.counter = 0;
      t_3120562283.data = new Array(chckRange(correctSizeHEX60gensym8_3120562681, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3120562681, 0, 2147483647) ; ++i) { t_3120562283.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})}; }      }
      
      if (mustRehash_3120562686(t_3120562283)) {
      enlarge_3120562841(t_3120562283);
      index_3120562579 = rawGetKnownHC_3120563304(t_3120562283, key_3120562284, hc_3120562340[0]);
      }
      
      index_3120562579 = subInt(-1, index_3120562579);
      rawInsert_3120563135(t_3120562283, t_3120562283, "data", key_3120562284, val_3120562285, hc_3120562340[0], index_3120562579);
      t_3120562283.counter = addInt(t_3120562283.counter, 1);
    }
    

  
}

function get_1191185108(self_1191185110, otherwise_1191185111) {
    var Temporary1;

  var result_1191185112 = 0;

    if (isSome_1191185117(self_1191185110)) {
    Temporary1 = self_1191185110.val;
    }
    else {
    Temporary1 = otherwise_1191185111;
    }
    
    result_1191185112 = Temporary1;

  return result_1191185112;

}

function hasKey_3120563742(t_3120563745, key_3120563746) {
  var result_3120563747 = false;

    var hc_3120563748 = [0];
    result_3120563747 = (0 <= rawGet_3120562341(t_3120563745, key_3120563746, hc_3120563748, 0));

  return result_3120563747;

}

function contains_3120563736(t_3120563739, key_3120563740) {
  var result_3120563741 = false;

  BeforeRet: {
    result_3120563741 = hasKey_3120563742(t_3120563739, key_3120563740);
    break BeforeRet;
  };

  return result_3120563741;

}

function HEX5BHEX5D_3120563808(t_3120563811, key_3120563812) {
  var result_3120563813 = null;

    var hcHEX60gensym22_3120563814 = [0];
    var indexHEX60gensym22_3120563821 = rawGet_3120562341(t_3120563811, key_3120563812, hcHEX60gensym22_3120563814, 0);
    if ((0 <= indexHEX60gensym22_3120563821)) {
    result_3120563813 = t_3120563811.data[chckIndx(indexHEX60gensym22_3120563821, 0, (t_3120563811.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_3120563812);
    }
    

  return result_3120563813;

}

function newFunctionExecutionContext_2986414175(ctxHEX60gensym87_2986414176, dataHEX60gensym87_2986414177) {
  var result_2986414178 = null;

  BeforeRet: {
    var itemHEX60gensym87_2986414179 = getItem_2986410834(dataHEX60gensym87_2986414177);
    var keyHEX60gensym87_2986414180 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym87_2986414179, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym87_2986414176.depGraph.changed, keyHEX60gensym87_2986414180, ctxHEX60gensym87_2986414176.depGraph.revision);
    HEX5BHEX5DHEX3D_2986410990(ctxHEX60gensym87_2986414176.itemsFunctionExecutionContext, itemHEX60gensym87_2986414179, dataHEX60gensym87_2986414177);
    result_2986414178 = dataHEX60gensym87_2986414177;
    break BeforeRet;
  };

  return result_2986414178;

}

function executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, node_3120563549, variables_3120563552) {
      var Temporary7;
              var Temporary12;
              var Temporary16;
        var Temporary17;
        var Temporary22;
        var Temporary27;
        var Temporary28;

  var result_3120563553 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (ctx_3120563547.enableExecutionLogging) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (ctx_3120563547.enableExecutionLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32], HEX24_2969569239(node_3120563549));
    }
    
    try {
    Label3: {
      var expr_3120563564 = node_3120563549;
      var pos_3120563565 = 0;
      var _ = pos_3120563565;
      if ((expr_3120563564.kind == 0)) {
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 7)) {
      var lastValue_3120563576 = errorValue_3070231215();
      Label4: {
        var child_3120563580 = null;
        var i_2936013281 = 0;
        var L_2936013282 = (node_3120563549.children).length;
        Label5: {
            Label6: while (true) {
            if (!(i_2936013281 < L_2936013282)) break Label6;
              child_3120563580 = node_3120563549.children[chckIndx(i_2936013281, 0, (node_3120563549.children).length - 1)];
              lastValue_3120563576 = nimCopy(lastValue_3120563576, executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, child_3120563580, variables_3120563552), NTI3070230535);
              i_2936013281 = addInt(i_2936013281, 1);
              if (!(((node_3120563549.children).length == L_2936013282))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_3120563553 = nimCopy(result_3120563553, lastValue_3120563576, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 3)) {
      result_3120563553 = nimCopy(result_3120563553, {kind: 2, stringValue: nimCopy(null, node_3120563549.text, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 2)) {
++excHandler;
      try {
      Temporary7 = nsuParseInt(node_3120563549.text);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
      if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      	reraiseException();
      }
      lastJSError = prevJSError;
      } finally {
      }
      var value_3120563589 = Temporary7;
      result_3120563553 = nimCopy(result_3120563553, {kind: 3, intValue: value_3120563589, stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 9)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var index_3120563594 = 0;
      Label9: {
          Label10: while (true) {
          if (!(addInt(index_3120563594, 1) < len_2969567320(node_3120563549))) break Label10;
            try {
            var condition_3120563599 = HEX5BHEX5D_2969567316(node_3120563549, index_3120563594);
            var trueCase_3120563600 = HEX5BHEX5D_2969567316(node_3120563549, addInt(index_3120563594, 1));
            var conditionValue_3120563601 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, condition_3120563599, variables_3120563552);
            if ((conditionValue_3120563601.kind == 0)) {
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_3120563601.kind == 3))) {
            var fmtRes_3120563614 = [mnewString(0)];
            fmtRes_3120563614[0].push.apply(fmtRes_3120563614[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3120563615(fmtRes_3120563614, 0, conditionValue_3120563601, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563614[0], NTI33554449)]);
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
              var Temporary12 = conditionValue_3120563601;
              if (ConstSet138[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI3070230534)); }
            if (!((Temporary12.intValue == 0))) {
            var trueCaseValue_3120563620 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, trueCase_3120563600, variables_3120563552);
            result_3120563553 = nimCopy(result_3120563553, trueCaseValue_3120563620, NTI3070230535);
            break BeforeRet;
            }
            
            } finally {
            index_3120563594 = addInt(index_3120563594, 2);
            }
          }
      };
      if (!((modInt(len_2969567320(node_3120563549), 2) == 0))) {
      var falseCaseValue_3120563621 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, last_2969567490(node_3120563549), variables_3120563552);
      result_3120563553 = nimCopy(result_3120563553, falseCaseValue_3120563621, NTI3070230535);
      break BeforeRet;
      }
      
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 10)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var condition_3120563626 = HEX5BHEX5D_2969567316(node_3120563549, 0);
      var body_3120563627 = HEX5BHEX5D_2969567316(node_3120563549, 1);
      var index_3120563628 = 0;
      Label13: {
          Label14: while (true) {
          if (!true) break Label14;
            try {
            var maxLoopIterations_3120563649 = get_1191185108(fec_3120563548.maxLoopIterations, 1000);
            if ((maxLoopIterations_3120563649 < index_3120563628)) {
            var fmtRes_3120563654 = [mnewString(0)];
            fmtRes_3120563654[0].push.apply(fmtRes_3120563654[0], [91,99,111,109,112,105,108,101,114,93,32,77,97,120,32,108,111,111,112,32,105,116,101,114,97,116,105,111,110,115,32,40]);;
            formatValue_2332033544(fmtRes_3120563654, 0, maxLoopIterations_3120563649, []);
            fmtRes_3120563654[0].push.apply(fmtRes_3120563654[0], [41,32,114,101,97,99,104,101,100,32,102,111,114,32]);;
            formatValue_3070231363(fmtRes_3120563654, 0, node_3120563549, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563654[0], NTI33554449)]);
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            var conditionValue_3120563665 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, condition_3120563626, variables_3120563552);
            if ((conditionValue_3120563665.kind == 0)) {
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            if (!((conditionValue_3120563665.kind == 3))) {
            var fmtRes_3120563678 = [mnewString(0)];
            fmtRes_3120563678[0].push.apply(fmtRes_3120563678[0], [91,99,111,109,112,105,108,101,114,93,32,67,111,110,100,105,116,105,111,110,32,111,102,32,105,102,32,115,116,97,116,101,109,101,110,116,32,109,117,115,116,32,98,101,32,97,110,32,105,110,116,32,98,117,116,32,105,115,32]);;
            formatValue_3120563615(fmtRes_3120563678, 0, conditionValue_3120563665, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563678[0], NTI33554449)]);
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
              var Temporary16 = conditionValue_3120563665;
              if (ConstSet139[Temporary16.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary16.kind, NTI3070230534)); }
            if ((Temporary16.intValue == 0)) {
            break Label13;
            }
            
            var bodyValue_3120563684 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, body_3120563627, variables_3120563552);
            if ((bodyValue_3120563684.kind == 0)) {
            result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            } finally {
            index_3120563628 = addInt(index_3120563628, 1);
            }
          }
      };
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 1)) {
      var id_3120563693 = nimCopy(null, node_3120563549.reff, NTI2181038083);
      if (contains_3120563736(variables_3120563552, id_3120563693)) {
      result_3120563553 = nimCopy(result_3120563553, HEX5BHEX5D_3120563808(variables_3120563552, id_3120563693), NTI3070230535);
      break BeforeRet;
      }
      
        var oHEX60gensym44_3120563889 = computeSymbol_2986424064(ctx_3120563547, node_3120563549, true);
        if (!isSome_3070232117(oHEX60gensym44_3120563889)) Temporary17 = false; else {          var sym_3120563912 = get_3070232137(oHEX60gensym44_3120563889);
          Temporary17 = true;        }      if (Temporary17) {
      var value_3120563913 = computeSymbolValue_2986434139(ctx_3120563547, sym_3120563912, true);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, id_3120563693, value_3120563913);
      result_3120563553 = nimCopy(result_3120563553, value_3120563913, NTI3070230535);
      break BeforeRet;
      }
      
      var fmtRes_3120563964 = [mnewString(0)];
      fmtRes_3120563964[0].push.apply(fmtRes_3120563964[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
      formatValue_3070231363(fmtRes_3120563964, 0, node_3120563549, []);
      fmtRes_3120563964[0].push.apply(fmtRes_3120563964[0], [58,32,70,97,105,108,101,100,32,116,111,32,108,111,111,107,32,117,112,32,118,97,108,117,101,32,102,111,114,32,105,100,101,110,116,105,102,105,101,114]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120563964[0], NTI33554449)]);
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 8)) {
      var function_3120563974 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, HEX5BHEX5D_2969567316(node_3120563549, 0), variables_3120563552);
      switch (function_3120563974.kind) {
      case 0:
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        break;
      case 4:
        var args_3120563979 = [];
        Label18: {
          var arg_3120564016 = null;
          var colontmp__2936013287 = [];
          colontmp__2936013287 = HEX5BHEX5D_3120563989(node_3120563549.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2936013288 = 0;
          var L_2936013289 = (colontmp__2936013287).length;
          Label19: {
              Label20: while (true) {
              if (!(i_2936013288 < L_2936013289)) break Label20;
                arg_3120564016 = colontmp__2936013287[chckIndx(i_2936013288, 0, (colontmp__2936013287).length - 1)];
                var value_3120564017 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, arg_3120564016, variables_3120563552);
                if ((value_3120564017.kind == 0)) {
                result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
                break BeforeRet;
                }
                
                var Temporary21 = nimCopy(null, value_3120564017, NTI3070230535);
                args_3120563979.push(Temporary21);;
                i_2936013288 = addInt(i_2936013288, 1);
                if (!(((colontmp__2936013287).length == L_2936013289))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary22 = function_3120563974;
        if (ConstSet140[Temporary22.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'impl\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary22.kind, NTI3070230534)); }
        result_3120563553 = nimCopy(result_3120563553, Temporary22.impl(args_3120563979), NTI3070230535);
        break BeforeRet;
        break;
      case 5:
        var args_3120564030 = [];
        Label23: {
          var arg_3120564049 = null;
          var colontmp__2936013292 = [];
          colontmp__2936013292 = HEX5BHEX5D_3120563989(node_3120563549.children, HEX2EHEX2E_1040187488(1, 1));
          var i_2936013293 = 0;
          var L_2936013294 = (colontmp__2936013292).length;
          Label24: {
              Label25: while (true) {
              if (!(i_2936013293 < L_2936013294)) break Label25;
                arg_3120564049 = colontmp__2936013292[chckIndx(i_2936013293, 0, (colontmp__2936013292).length - 1)];
                var value_3120564050 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, arg_3120564049, variables_3120563552);
                if ((value_3120564050.kind == 0)) {
                result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
                break BeforeRet;
                }
                
                var Temporary26 = nimCopy(null, value_3120564050, NTI3070230535);
                args_3120564030.push(Temporary26);;
                i_2936013293 = addInt(i_2936013293, 1);
                if (!(((colontmp__2936013292).length == L_2936013294))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        var Temporary27 = function_3120563974;
        if (ConstSet141[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230534)); }
        var fec_3120564059 = newFunctionExecutionContext_2986414175(ctx_3120563547, {node: Temporary27.node, arguments: nimCopy(null, args_3120564030, NTI3120563186), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), maxLoopIterations: ({val: 0, has: false})});
        result_3120563553 = nimCopy(result_3120563553, computeFunctionExecution_2986437243(ctx_3120563547, fec_3120564059), NTI3070230535);
        break BeforeRet;
        break;
      default: 
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        break;
      }
      }
      else {
      if ((expr_3120563564.kind == 5)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var valueNode_3120564064 = HEX5BHEX5D_2969567316(node_3120563549, 1);
      var value_3120564065 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, valueNode_3120564064, variables_3120563552);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, node_3120563549.id, value_3120564065);
      result_3120563553 = nimCopy(result_3120563553, value_3120564065, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 6)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var valueNode_3120564116 = HEX5BHEX5D_2969567316(node_3120563549, 1);
      var value_3120564117 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, valueNode_3120564116, variables_3120563552);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, node_3120563549.id, value_3120564117);
      result_3120563553 = nimCopy(result_3120563553, value_3120564117, NTI3070230535);
      break BeforeRet;
      }
      else {
      if ((expr_3120563564.kind == 4)) {
      var id_3120564168 = nimCopy(null, node_3120563549.id, NTI2181038083);
      if (contains_3120563736(variables_3120563552, id_3120564168)) {
      result_3120563553 = nimCopy(result_3120563553, HEX5BHEX5D_3120563808(variables_3120563552, id_3120564168), NTI3070230535);
      break BeforeRet;
      }
      
      }
      else {
      if ((expr_3120563564.kind == 13)) {
      if ((len_2969567320(node_3120563549) < 2)) {
      result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
      break BeforeRet;
      }
      
      var targetNode_3120564278 = HEX5BHEX5D_2969567316(node_3120563549, 0);
      var valueNode_3120564279 = HEX5BHEX5D_2969567316(node_3120563549, 1);
        var oHEX60gensym55_3120564282 = computeSymbol_2986424064(ctx_3120563547, targetNode_3120564278, true);
        if (!isSome_3070232117(oHEX60gensym55_3120564282)) Temporary28 = false; else {          var sym_3120564305 = get_3070232137(oHEX60gensym55_3120564282);
          Temporary28 = true;        }      if (Temporary28) {
      var value_3120564306 = executeNodeRec_3120563546(ctx_3120563547, fec_3120563548, valueNode_3120564279, variables_3120563552);
      HEX5BHEX5DHEX3D_3120562280(variables_3120563552, sym_3120564305.id, value_3120564306);
      result_3120563553 = nimCopy(result_3120563553, voidValue_3070231244(), NTI3070230535);
      break BeforeRet;
      }
      else {
        var fmtRes_3120564357 = [mnewString(0)];
        fmtRes_3120564357[0].push.apply(fmtRes_3120564357[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32]);;
        formatValue_3070231363(fmtRes_3120564357, 0, node_3120563549, []);
        fmtRes_3120564357[0].push.apply(fmtRes_3120564357[0], [58,32,70,97,105,108,101,100,32,116,111,32,97,115,115,105,103,110,32,116,111,32]);;
        formatValue_3070231363(fmtRes_3120564357, 0, targetNode_3120564278, []);
        fmtRes_3120564357[0].push.apply(fmtRes_3120564357[0], [58,32,110,111,32,115,121,109,98,111,108,32,102,111,117,110,100]);;
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120564357[0], NTI33554449)]);
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
      }
      
      }
      else {
        var fmtRes_3120564372 = [mnewString(0)];
        fmtRes_3120564372[0].push.apply(fmtRes_3120564372[0], [101,120,101,99,117,116,101,78,111,100,101,82,101,99,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3070231363(fmtRes_3120564372, 0, node_3120563549, []);
        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120564372[0], NTI33554449)]);
        result_3120563553 = nimCopy(result_3120563553, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
      }
      }}}}}}}}}}}
    };
    } finally {
    if (ctx_3120563547.enableExecutionLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [45,62,32], HEX24_3070231271(result_3120563553));
    }
    
    }
    } finally {
    if (ctx_3120563547.enableExecutionLogging) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_3120563553;

}

function computeFunctionExecutionImpl2_3120564407(ctx_3120564408, fec_3120564409) {
      var Temporary4;
        var Temporary5;

  var result_3120564410 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var body_3120564411 = HEX5BHEX5D_2969567316(fec_3120564409.node, 2);
    var variables_3120564423 = [initTable_3120564412(32)];
    var params_3120564424 = HEX5BHEX5D_2969567316(fec_3120564409.node, 0);
    Label1: {
      var i_3120564466 = 0;
      var arg_3120564467 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936013269 = 0;
      var L_2936013270 = (fec_3120564409.arguments).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013269 < L_2936013270)) break Label3;
            i_3120564466 = i_2936013269;
            arg_3120564467 = nimCopy(arg_3120564467, fec_3120564409.arguments[chckIndx(i_2936013269, 0, (fec_3120564409.arguments).length - 1)], NTI3070230535);
            if ((len_2969567320(params_3120564424) <= i_3120564466)) {
            var fmtRes_3120564472 = [mnewString(0)];
            fmtRes_3120564472[0].push.apply(fmtRes_3120564472[0], [87,114,111,110,103,32,110,117,109,98,101,114,32,111,102,32,97,114,103,117,109,101,110,116,115,44,32,101,120,112,101,99,116,101,100,32]);;
            formatValue_2332033544(fmtRes_3120564472, 0, len_2969567320(params_3120564424), []);
            fmtRes_3120564472[0].push.apply(fmtRes_3120564472[0], [44,32,103,111,116,32]);;
            formatValue_2332033544(fmtRes_3120564472, 0, (fec_3120564409.arguments).length, []);
            log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3120564472[0], NTI33554449)]);
            result_3120564410 = nimCopy(result_3120564410, errorValue_3070231215(), NTI3070230535);
            break BeforeRet;
            }
            
            var param_3120564486 = HEX5BHEX5D_2969567316(params_3120564424, i_3120564466);
            HEX5BHEX5DHEX3D_3120562280(variables_3120564423[0], param_3120564486.id, arg_3120564467);
            i_2936013269 = addInt(i_2936013269, 1);
            if (!(((fec_3120564409.arguments).length == L_2936013270))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var bodyResult_3120564533 = executeNodeRec_3120563546(ctx_3120564408, fec_3120564409, body_3120564411, variables_3120564423[0]);
    if ((bodyResult_3120564533.kind == 0)) {
    result_3120564410 = nimCopy(result_3120564410, errorValue_3070231215(), NTI3070230535);
    break BeforeRet;
    }
    
    var functionType_3120564538 = computeType_2986417458(ctx_3120564408, fec_3120564409.node, true);
      if (!(functionType_3120564538.kind == 4)) Temporary4 = false; else {        var Temporary5 = functionType_3120564538;
        if (ConstSet142[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'returnType\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230531)); }
        Temporary4 = (Temporary5.returnType.kind == 1);      }    if (Temporary4) {
    result_3120564410 = nimCopy(result_3120564410, voidValue_3070231244(), NTI3070230535);
    break BeforeRet;
    }
    
    result_3120564410 = nimCopy(result_3120564410, bodyResult_3120564533, NTI3070230535);
    break BeforeRet;
  };

  return result_3120564410;

}

function computeFunctionExecutionImpl_2986345288(ctx_2986345289, fec_2986345290) {
  var result_2986441000 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    var logQueryHEX60gensym530_2986441002 = (ctx_2986345289.enableLogging || ctx_2986345289.enableQueryLogging);
    if (logQueryHEX60gensym530_2986441002) {
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], 1);
    }
    
    try {
    if (logQueryHEX60gensym530_2986441002) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), ([99,111,109,112,117,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,73,109,112,108,32] || []).concat(HEX24_3070231355(fec_2986345290) || []));
    }
    
    try {
    result_2986441000 = nimCopy(result_2986441000, computeFunctionExecutionImpl2_3120564407(ctx_2986345289, fec_2986345290), NTI3070230535);
    break BeforeRet;
    } finally {
    if ((logQueryHEX60gensym530_2986441002 && true)) {
    log_1174405220(logger_704643272[0], 2, [(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)) || []).concat([45,62,32] || [],HEX24_3070231271(result_2986441000) || [])]);
    }
    
    }
    } finally {
    if (logQueryHEX60gensym530_2986441002) {
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], 1);
    }
    
    }
  };

  return result_2986441000;

}

function getOrDefault_2986379630(t_2986379633, key_2986379634, default_2986379635) {
    var Temporary1;

  var result_2986379636 = null;

    var hcHEX60gensym282_2986379639 = [0];
    var indexHEX60gensym282_2986379994 = rawGet_2986379640(t_2986379633, key_2986379634, hcHEX60gensym282_2986379639, 0);
    if ((0 <= indexHEX60gensym282_2986379994)) {
    Temporary1 = t_2986379633.data[chckIndx(indexHEX60gensym282_2986379994, 0, (t_2986379633.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986379635;
    }
    
    result_2986379636 = Temporary1;

  return result_2986379636;

}

function newDoublyLinkedNode_2986380119(value_2986380121) {
  var result_2986380122 = null;

    result_2986380122 = ({next: null, prev: null, value: ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})})});
    result_2986380122.value = nimCopy(result_2986380122.value, value_2986380121, NTI2986345239);

  return result_2986380122;

}

function mustRehash_2986380478(t_2986380480) {
  var result_2986380481 = false;

    if (!((t_2986380480.counter < (t_2986380480.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986380481 = ((mulInt((t_2986380480.data).length, 2) < mulInt(t_2986380480.counter, 3)) || (subInt((t_2986380480.data).length, t_2986380480.counter) < 4));

  return result_2986380481;

}

function rawInsert_2986381171(t_2986381175, data_2986381176, data_2986381176_Idx, key_2986381177, val_2986381178, hc_2986381179, h_2986381180) {
    data_2986381176[data_2986381176_Idx][chckIndx(h_2986381180, 0, (data_2986381176[data_2986381176_Idx]).length - 1)].Field1 = key_2986381177;
    data_2986381176[data_2986381176_Idx][chckIndx(h_2986381180, 0, (data_2986381176[data_2986381176_Idx]).length - 1)].Field2 = val_2986381178;
    data_2986381176[data_2986381176_Idx][chckIndx(h_2986381180, 0, (data_2986381176[data_2986381176_Idx]).length - 1)].Field0 = hc_2986381179;

  
}

function enlarge_2986380735(t_2986380738) {
    var n_2986380741 = [];
    n_2986380741 = new Array(chckRange(mulInt((t_2986380738.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986380738.data).length, 2), 0, 2147483647) ; ++i) { n_2986380741[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986380738.data; t_2986380738.data = n_2986380741; n_2986380741 = Temporary1;    Label2: {
      var i_2986380839 = 0;
      var colontmp__2936013298 = 0;
      colontmp__2936013298 = (n_2986380741).length - 1;
      var res_2936013299 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013299 <= colontmp__2936013298)) break Label4;
            i_2986380839 = res_2936013299;
            var eh_2986380920 = n_2986380741[chckIndx(i_2986380839, 0, (n_2986380741).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986380920)) {
            var j_2986380924 = (eh_2986380920 & (t_2986380738.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986380738.data[chckIndx(j_2986380924, 0, (t_2986380738.data).length - 1)].Field0)) break Label6;
                  j_2986380924 = nextTry_1308622883(j_2986380924, (t_2986380738.data).length - 1);
                }
            };
            rawInsert_2986381171(t_2986380738, t_2986380738, "data", n_2986380741[chckIndx(i_2986380839, 0, (n_2986380741).length - 1)].Field1, n_2986380741[chckIndx(i_2986380839, 0, (n_2986380741).length - 1)].Field2, eh_2986380920, j_2986380924);
            }
            
            res_2936013299 = addInt(res_2936013299, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986381421(t_2986381424, key_2986381425, hc_2986381426) {
  var result_2986381427 = 0;

  BeforeRet: {
    if (((t_2986381424.data).length == 0)) {
    result_2986381427 = -1;
    break BeforeRet;
    }
    
    var h_2986381512 = (hc_2986381426 & (t_2986381424.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986381424.data[chckIndx(h_2986381512, 0, (t_2986381424.data).length - 1)].Field0)) break Label2;
          if (((t_2986381424.data[chckIndx(h_2986381512, 0, (t_2986381424.data).length - 1)].Field0 == hc_2986381426) && HEX3DHEX3D_3070231549(t_2986381424.data[chckIndx(h_2986381512, 0, (t_2986381424.data).length - 1)].Field1, key_2986381425))) {
          result_2986381427 = h_2986381512;
          break BeforeRet;
          }
          
          h_2986381512 = nextTry_1308622883(h_2986381512, (t_2986381424.data).length - 1);
        }
    };
    result_2986381427 = subInt(-1, h_2986381512);
  };

  return result_2986381427;

}

function HEX5BHEX5DHEX3D_2986380210(t_2986380213, key_2986380214, val_2986380215) {
    if (((t_2986380213.data).length == 0)) {
    var correctSizeHEX60gensym287_2986380298 = slotsNeeded_1308622891(32);
    t_2986380213.counter = 0;
    t_2986380213.data = new Array(chckRange(correctSizeHEX60gensym287_2986380298, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym287_2986380298, 0, 2147483647) ; ++i) { t_2986380213.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986380303 = [0];
    var index_2986380310 = rawGet_2986379640(t_2986380213, key_2986380214, hc_2986380303, 0);
    if ((0 <= index_2986380310)) {
    t_2986380213.data[chckIndx(index_2986380310, 0, (t_2986380213.data).length - 1)].Field2 = val_2986380215;
    }
    else {
      if (((t_2986380213.data).length == 0)) {
      var correctSizeHEX60gensym290_2986380473 = slotsNeeded_1308622891(32);
      t_2986380213.counter = 0;
      t_2986380213.data = new Array(chckRange(correctSizeHEX60gensym290_2986380473, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym290_2986380473, 0, 2147483647) ; ++i) { t_2986380213.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986380478(t_2986380213)) {
      enlarge_2986380735(t_2986380213);
      index_2986380310 = rawGetKnownHC_2986381421(t_2986380213, key_2986380214, hc_2986380303[0]);
      }
      
      index_2986380310 = subInt(-1, index_2986380310);
      rawInsert_2986381171(t_2986380213, t_2986380213, "data", key_2986380214, val_2986380215, hc_2986380303[0], index_2986380310);
      t_2986380213.counter = addInt(t_2986380213.counter, 1);
    }
    

  
}

function rawGet_2986382048(t_2986382051, key_2986382052, hc_2986382053, hc_2986382053_Idx) {
  var result_2986382054 = 0;

  BeforeRet: {
    hc_2986382053[hc_2986382053_Idx] = hash_3070231505(key_2986382052);
    if ((hc_2986382053[hc_2986382053_Idx] == 0)) {
    hc_2986382053[hc_2986382053_Idx] = 314159265;
    }
    
    if (((t_2986382051.data).length == 0)) {
    result_2986382054 = -1;
    break BeforeRet;
    }
    
    var h_2986382140 = (hc_2986382053[hc_2986382053_Idx] & (t_2986382051.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986382051.data[chckIndx(h_2986382140, 0, (t_2986382051.data).length - 1)].Field0)) break Label2;
          if (((t_2986382051.data[chckIndx(h_2986382140, 0, (t_2986382051.data).length - 1)].Field0 == hc_2986382053[hc_2986382053_Idx]) && HEX3DHEX3D_3070231549(t_2986382051.data[chckIndx(h_2986382140, 0, (t_2986382051.data).length - 1)].Field1, key_2986382052))) {
          result_2986382054 = h_2986382140;
          break BeforeRet;
          }
          
          h_2986382140 = nextTry_1828716586(h_2986382140, (t_2986382051.data).length - 1);
        }
    };
    result_2986382054 = subInt(-1, h_2986382140);
  };

  return result_2986382054;

}

function exclImpl_2986382042(s_2986382044, key_2986382045) {
          var Temporary5;

  var result_2986382046 = false;

  BeforeRet: {
    var hc_2986382047 = [0];
    var i_2986382402 = rawGet_2986382048(s_2986382044, key_2986382045, hc_2986382047, 0);
    var msk_2986382406 = (s_2986382044.data).length - 1;
    result_2986382046 = true;
    if ((0 <= i_2986382402)) {
    result_2986382046 = false;
    s_2986382044.counter = subInt(s_2986382044.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986382412 = i_2986382402;
          var r_2986382413 = j_2986382412;
          s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)].Field0 = 0;
          s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986382402 = (addInt(i_2986382402, 1) & msk_2986382406);
                if (isEmpty_1828716580(s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986382413 = (s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)].Field0 & msk_2986382406);
                if (!(((((r_2986382413 <= i_2986382402) && (j_2986382412 < r_2986382413)) || ((j_2986382412 < r_2986382413) && (i_2986382402 < j_2986382412))) || ((i_2986382402 < j_2986382412) && (r_2986382413 <= i_2986382402))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)];
          s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)] = genericReset(s_2986382044.data[chckIndx(i_2986382402, 0, (s_2986382044.data).length - 1)], NTI2986345295);
          s_2986382044.data[chckIndx(j_2986382412, 0, (s_2986382044.data).length - 1)] = nimCopy(s_2986382044.data[chckIndx(j_2986382412, 0, (s_2986382044.data).length - 1)], Temporary5, NTI2986345295);
        }
    };
    }
    
  };

  return result_2986382046;

}

function excl_2986382027(s_2986382029, key_2986382030) {
    var _ = exclImpl_2986382042(s_2986382029, key_2986382030);

  
}

function len_2986383166(t_2986383169) {
  var result_2986383170 = 0;

    result_2986383170 = t_2986383169.counter;

  return result_2986383170;

}

function len_2986383083(cache_2986383086) {
  var result_2986383087 = 0;

    result_2986383087 = len_2986383166(cache_2986383086.table);

  return result_2986383087;

}

function mustRehash_2986383307(t_2986383309) {
  var result_2986383310 = false;

    if (!((t_2986383309.counter < (t_2986383309.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986383310 = ((mulInt((t_2986383309.data).length, 2) < mulInt(t_2986383309.counter, 3)) || (subInt((t_2986383309.data).length, t_2986383309.counter) < 4));

  return result_2986383310;

}

function rawGetKnownHC_2986383913(t_2986383916, key_2986383917, hc_2986383918) {
  var result_2986383919 = 0;

  BeforeRet: {
    if (((t_2986383916.data).length == 0)) {
    result_2986383919 = -1;
    break BeforeRet;
    }
    
    var h_2986384004 = (hc_2986383918 & (t_2986383916.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986383916.data[chckIndx(h_2986384004, 0, (t_2986383916.data).length - 1)].Field0)) break Label2;
          if (((t_2986383916.data[chckIndx(h_2986384004, 0, (t_2986383916.data).length - 1)].Field0 == hc_2986383918) && HEX3DHEX3D_3070231549(t_2986383916.data[chckIndx(h_2986384004, 0, (t_2986383916.data).length - 1)].Field1, key_2986383917))) {
          result_2986383919 = h_2986384004;
          break BeforeRet;
          }
          
          h_2986384004 = nextTry_1828716586(h_2986384004, (t_2986383916.data).length - 1);
        }
    };
    result_2986383919 = subInt(-1, h_2986384004);
  };

  return result_2986383919;

}

function rawInsert_2986384413(s_2986384415, data_2986384416, data_2986384416_Idx, key_2986384417, hc_2986384418, h_2986384419) {
    if (((data_2986384416[data_2986384416_Idx]).length == 0)) {
    var correctSizeHEX60gensym309_2986384502 = slotsNeeded_1828716594(64);
    s_2986384415.counter = 0;
    s_2986384415.data = new Array(chckRange(correctSizeHEX60gensym309_2986384502, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym309_2986384502, 0, 2147483647) ; ++i) { s_2986384415.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986384416[data_2986384416_Idx][chckIndx(h_2986384419, 0, (data_2986384416[data_2986384416_Idx]).length - 1)].Field1 = key_2986384417;
    data_2986384416[data_2986384416_Idx][chckIndx(h_2986384419, 0, (data_2986384416[data_2986384416_Idx]).length - 1)].Field0 = hc_2986384418;

  
}

function enlarge_2986383570(s_2986383572) {
    var n_2986383574 = [];
    n_2986383574 = new Array(chckRange(mulInt((s_2986383572.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986383572.data).length, 2), 0, 2147483647) ; ++i) { n_2986383574[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986383572.data; s_2986383572.data = n_2986383574; n_2986383574 = Temporary1;    Label2: {
      var i_2986383672 = 0;
      var colontmp__2936013307 = 0;
      colontmp__2936013307 = (n_2986383574).length - 1;
      var res_2936013308 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013308 <= colontmp__2936013307)) break Label4;
            i_2986383672 = res_2936013308;
            if (isFilled_1828716583(n_2986383574[chckIndx(i_2986383672, 0, (n_2986383574).length - 1)].Field0)) {
            var j_2986384248 = subInt(-1, rawGetKnownHC_2986383913(s_2986383572, n_2986383574[chckIndx(i_2986383672, 0, (n_2986383574).length - 1)].Field1, n_2986383574[chckIndx(i_2986383672, 0, (n_2986383574).length - 1)].Field0));
            rawInsert_2986384413(s_2986383572, s_2986383572, "data", n_2986383574[chckIndx(i_2986383672, 0, (n_2986383574).length - 1)].Field1, n_2986383574[chckIndx(i_2986383672, 0, (n_2986383574).length - 1)].Field0, j_2986384248);
            }
            
            res_2936013308 = addInt(res_2936013308, 1);
          }
      };
    };

  
}

function incl_2986383191(s_2986383193, key_2986383194) {
    if (((s_2986383193.data).length == 0)) {
    var correctSizeHEX60gensym302_2986383277 = slotsNeeded_1828716594(64);
    s_2986383193.counter = 0;
    s_2986383193.data = new Array(chckRange(correctSizeHEX60gensym302_2986383277, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym302_2986383277, 0, 2147483647) ; ++i) { s_2986383193.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986383292 = [0];
    var index_2986383306 = rawGet_2986382048(s_2986383193, key_2986383194, hc_2986383292, 0);
    if ((index_2986383306 < 0)) {
    if (mustRehash_2986383307(s_2986383193)) {
    enlarge_2986383570(s_2986383193);
    index_2986383306 = rawGetKnownHC_2986383913(s_2986383193, key_2986383194, hc_2986383292[0]);
    }
    
    rawInsert_2986384413(s_2986383193, s_2986383193, "data", key_2986383194, hc_2986383292[0], subInt(-1, index_2986383306));
    s_2986383193.counter = addInt(s_2986383193.counter, 1);
    }
    

  
}

function del_2986384769(t_2986384772, key_2986384773) {
    var hc_2986384774 = [0];
    var i_2986384781 = rawGet_2986379640(t_2986384772, key_2986384773, hc_2986384774, 0);
    var mskHEX60gensym36_2986384785 = (t_2986384772.data).length - 1;
    if ((0 <= i_2986384781)) {
    t_2986384772.counter = subInt(t_2986384772.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986384792 = i_2986384781;
            var rHEX60gensym36_2986384793 = jHEX60gensym36_2986384792;
            t_2986384772.data[chckIndx(i_2986384781, 0, (t_2986384772.data).length - 1)].Field0 = 0;
            t_2986384772.data[chckIndx(i_2986384781, 0, (t_2986384772.data).length - 1)].Field1 = null;
            t_2986384772.data[chckIndx(i_2986384781, 0, (t_2986384772.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986384781 = (addInt(i_2986384781, 1) & mskHEX60gensym36_2986384785);
                  if (isEmpty_1308622877(t_2986384772.data[chckIndx(i_2986384781, 0, (t_2986384772.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986384793 = (t_2986384772.data[chckIndx(i_2986384781, 0, (t_2986384772.data).length - 1)].Field0 & mskHEX60gensym36_2986384785);
                  if (!(((((rHEX60gensym36_2986384793 <= i_2986384781) && (jHEX60gensym36_2986384792 < rHEX60gensym36_2986384793)) || ((jHEX60gensym36_2986384792 < rHEX60gensym36_2986384793) && (i_2986384781 < jHEX60gensym36_2986384792))) || ((i_2986384781 < jHEX60gensym36_2986384792) && (rHEX60gensym36_2986384793 <= i_2986384781))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986384772.data[chckIndx(jHEX60gensym36_2986384792, 0, (t_2986384772.data).length - 1)] = nimCopy(t_2986384772.data[chckIndx(jHEX60gensym36_2986384792, 0, (t_2986384772.data).length - 1)], t_2986384772.data[chckIndx(i_2986384781, 0, (t_2986384772.data).length - 1)], NTI2986345275);
          }
      };
    };
    }
    

  
}

function resize_2986383001(cache_2986383004) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986383004.capacity < len_2986383083(cache_2986383004))) break Label2;
          var t_2986383171 = cache_2986383004.list.tail;
          if (cache_2986383004.recordRemovedKeys) {
          incl_2986383191(cache_2986383004.removedKeys, t_2986383171.value.key);
          }
          
          del_2986384769(cache_2986383004.table, t_2986383171.value.key);
          remove_2986385528(cache_2986383004.list, t_2986383171);
        }
    };

  
}

function addNewNode_2986380111(cache_2986380114, key_2986380115, val_2986380116) {
    var node_2986380146 = newDoublyLinkedNode_2986380119({key: key_2986380115, val: nimCopy(null, val_2986380116, NTI3070230535)});
    HEX5BHEX5DHEX3D_2986380210(cache_2986380114.table, key_2986380115, node_2986380146);
    prepend_2986381817(cache_2986380114.list, node_2986380146);
    if (cache_2986380114.recordRemovedKeys) {
    excl_2986382027(cache_2986380114.removedKeys, key_2986380115);
    }
    
    resize_2986383001(cache_2986380114);

  
}

function HEX5BHEX5DHEX3D_2986379535(cache_2986379538, key_2986379539, val_2986379540) {
    var node_2986380084 = getOrDefault_2986379630(cache_2986379538.table, key_2986379539, null);
    if ((node_2986380084 == null)) {
    addNewNode_2986380111(cache_2986379538, key_2986379539, val_2986379540);
    }
    else {
      node_2986380084.value.val = nimCopy(node_2986380084.value.val, val_2986379540, NTI3070230535);
      remove_2986385528(cache_2986379538.list, node_2986380084);
      prepend_2986381817(cache_2986379538.list, node_2986380084);
    }
    

  
}

function initDoublyLinkedList_2986385975() {
  var result_2986385977 = ({head: null, tail: null});

  return result_2986385977;

}

function initTable_2986385981(initialSize_2986385984) {
  var result_2986385985 = ({data: [], counter: 0});

    var correctSizeHEX60gensym310_2986385987 = slotsNeeded_1308622891(chckRange(initialSize_2986385984, 0, 2147483647));
    result_2986385985.counter = 0;
    result_2986385985.data = new Array(chckRange(correctSizeHEX60gensym310_2986385987, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym310_2986385987, 0, 2147483647) ; ++i) { result_2986385985.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986385985;

}

function newLruCache_2986385965(capacity_2986385968, recordRemovedKeys_2986385969) {
  var result_2986385970 = null;

    result_2986385970 = {capacity: capacity_2986385968, list: initDoublyLinkedList_2986385975(), table: initTable_2986385981(correctSize_3019898901(capacity_2986385968)), recordRemovedKeys: recordRemovedKeys_2986385969, removedKeys: ({data: [], counter: 0})};

  return result_2986385970;

}

function newCache_2986385960(capacity_2986385963) {
  var result_2986385964 = null;

    result_2986385964 = newLruCache_2986385965(capacity_2986385963, false);

  return result_2986385964;

}

function init_2986385955(result_2986385958, result_2986385958_Idx, capacity_2986385959) {
    result_2986385958[result_2986385958_Idx] = newCache_2986385960(capacity_2986385959);

  
}

function rawGet_2986386205(t_2986386208, key_2986386209, hc_2986386210, hc_2986386210_Idx) {
  var result_2986386211 = 0;

  BeforeRet: {
    hc_2986386210[hc_2986386210_Idx] = hash_2986345496(key_2986386209);
    if ((hc_2986386210[hc_2986386210_Idx] == 0)) {
    hc_2986386210[hc_2986386210_Idx] = 314159265;
    }
    
    if (((t_2986386208.data).length == 0)) {
    result_2986386211 = -1;
    break BeforeRet;
    }
    
    var h_2986386300 = (hc_2986386210[hc_2986386210_Idx] & (t_2986386208.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986386208.data[chckIndx(h_2986386300, 0, (t_2986386208.data).length - 1)].Field0)) break Label2;
          if (((t_2986386208.data[chckIndx(h_2986386300, 0, (t_2986386208.data).length - 1)].Field0 == hc_2986386210[hc_2986386210_Idx]) && HEX3DHEX3D_2986345833(t_2986386208.data[chckIndx(h_2986386300, 0, (t_2986386208.data).length - 1)].Field1, key_2986386209))) {
          result_2986386211 = h_2986386300;
          break BeforeRet;
          }
          
          h_2986386300 = nextTry_1308622883(h_2986386300, (t_2986386208.data).length - 1);
        }
    };
    result_2986386211 = subInt(-1, h_2986386300);
  };

  return result_2986386211;

}

function hasKey_2986386198(t_2986386201, key_2986386202) {
  var result_2986386203 = false;

    var hc_2986386204 = [0];
    result_2986386203 = (0 <= rawGet_2986386205(t_2986386201, key_2986386202, hc_2986386204, 0));

  return result_2986386203;

}

function contains_2986386192(t_2986386195, key_2986386196) {
  var result_2986386197 = false;

  BeforeRet: {
    result_2986386197 = hasKey_2986386198(t_2986386195, key_2986386196);
    break BeforeRet;
  };

  return result_2986386197;

}

function contains_2986386098(cache_2986386101, key_2986386102) {
  var result_2986386103 = false;

    result_2986386103 = contains_2986386192(cache_2986386101.table, key_2986386102);

  return result_2986386103;

}

function HEX5BHEX5D_2986386737(t_2986386740, key_2986386741) {
  var result_2986386742 = null;
  var result_2986386742_Idx = 0;

    var hcHEX60gensym22_2986386743 = [0];
    var indexHEX60gensym22_2986386750 = rawGet_2986386205(t_2986386740, key_2986386741, hcHEX60gensym22_2986386743, 0);
    if ((0 <= indexHEX60gensym22_2986386750)) {
    result_2986386742 = t_2986386740.data[chckIndx(indexHEX60gensym22_2986386750, 0, (t_2986386740.data).length - 1)]; result_2986386742_Idx = "Field2";
    }
    else {
    raiseKeyError_2986346129(key_2986386741);
    }
    

  return [result_2986386742, result_2986386742_Idx];

}

function remove_2986386857(L_2986386859, n_2986386860) {
    if ((n_2986386860 == L_2986386859.tail)) {
    L_2986386859.tail = n_2986386860.prev;
    }
    
    if ((n_2986386860 == L_2986386859.head)) {
    L_2986386859.head = n_2986386860.next;
    }
    
    if (!((n_2986386860.next == null))) {
    n_2986386860.next.prev = n_2986386860.prev;
    }
    
    if (!((n_2986386860.prev == null))) {
    n_2986386860.prev.next = n_2986386860.next;
    }
    

  
}

function prepend_2986387161(L_2986387163, n_2986387164) {
    n_2986387164.prev = null;
    n_2986387164.next = L_2986387163.head;
    if (!((L_2986387163.head == null))) {
    if (!((L_2986387163.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986387163.head.prev = n_2986387164;
    }
    
    L_2986387163.head = n_2986387164;
    if ((L_2986387163.tail == null)) {
    L_2986387163.tail = n_2986387164;
    }
    

  
}

function HEX5BHEX5D_2986386651(cache_2986386654, key_2986386655) {
    var Temporary1;

  var result_2986386656 = null;

    var node_2986386843 = (Temporary1 = HEX5BHEX5D_2986386737(cache_2986386654.table, key_2986386655), Temporary1)[0][Temporary1[1]];
    result_2986386656 = node_2986386843.value.val;
    remove_2986386857(cache_2986386654.list, node_2986386843);
    prepend_2986387161(cache_2986386654.list, node_2986386843);

  return result_2986386656;

}

function dependOnCurrentRevision_2986397972(ctxHEX60gensym73_2986397973) {
    if ((0 < (ctxHEX60gensym73_2986397973.dependencyStack).length)) {
    ctxHEX60gensym73_2986397973.dependencyStack[chckIndx((ctxHEX60gensym73_2986397973.dependencyStack).length - 1, 0, (ctxHEX60gensym73_2986397973.dependencyStack).length - 1)].push({Field0: {Field0: nimCopy(null, dependencyGlobalRevision_3003121696, NTI2181038083), Field1: -1}, Field1: -1});;
    }
    

  
}

function initTable_3103788430(initialSize_3103788433) {
  var result_3103788434 = ({data: [], counter: 0});

    var correctSizeHEX60gensym96_3103788436 = slotsNeeded_1308622891(chckRange(initialSize_3103788433, 0, 2147483647));
    result_3103788434.counter = 0;
    result_3103788434.data = new Array(chckRange(correctSizeHEX60gensym96_3103788436, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym96_3103788436, 0, 2147483647) ; ++i) { result_3103788434.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }
  return result_3103788434;

}

function rawGet_3070233124(t_3070233127, key_3070233128, hc_3070233129, hc_3070233129_Idx) {
  var result_3070233130 = 0;

  BeforeRet: {
    hc_3070233129[hc_3070233129_Idx] = hash_2181038324(key_3070233128);
    if ((hc_3070233129[hc_3070233129_Idx] == 0)) {
    hc_3070233129[hc_3070233129_Idx] = 314159265;
    }
    
    if (((t_3070233127.data).length == 0)) {
    result_3070233130 = -1;
    break BeforeRet;
    }
    
    var h_3070233182 = (hc_3070233129[hc_3070233129_Idx] & (t_3070233127.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3070233127.data[chckIndx(h_3070233182, 0, (t_3070233127.data).length - 1)].Field0)) break Label2;
          if (((t_3070233127.data[chckIndx(h_3070233182, 0, (t_3070233127.data).length - 1)].Field0 == hc_3070233129[hc_3070233129_Idx]) && HEX3DHEX3D_2181038320(t_3070233127.data[chckIndx(h_3070233182, 0, (t_3070233127.data).length - 1)].Field1, key_3070233128))) {
          result_3070233130 = h_3070233182;
          break BeforeRet;
          }
          
          h_3070233182 = nextTry_1308622883(h_3070233182, (t_3070233127.data).length - 1);
        }
    };
    result_3070233130 = subInt(-1, h_3070233182);
  };

  return result_3070233130;

}

function hasKey_3070233117(t_3070233120, key_3070233121) {
  var result_3070233122 = false;

    var hc_3070233123 = [0];
    result_3070233122 = (0 <= rawGet_3070233124(t_3070233120, key_3070233121, hc_3070233123, 0));

  return result_3070233122;

}

function contains_3103785325(t_3103785328, key_3103785329) {
  var result_3103785330 = false;

  BeforeRet: {
    result_3103785330 = hasKey_3070233117(t_3103785328, key_3103785329);
    break BeforeRet;
  };

  return result_3103785330;

}

function rawGet_3103785569(t_3103785572, key_3103785573, hc_3103785574, hc_3103785574_Idx) {
  var result_3103785575 = 0;

  BeforeRet: {
    hc_3103785574[hc_3103785574_Idx] = hash_2181038324(key_3103785573);
    if ((hc_3103785574[hc_3103785574_Idx] == 0)) {
    hc_3103785574[hc_3103785574_Idx] = 314159265;
    }
    
    if (((t_3103785572.data).length == 0)) {
    result_3103785575 = -1;
    break BeforeRet;
    }
    
    var h_3103785626 = (hc_3103785574[hc_3103785574_Idx] & (t_3103785572.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3103785572.data[chckIndx(h_3103785626, 0, (t_3103785572.data).length - 1)].Field0)) break Label2;
          if (((t_3103785572.data[chckIndx(h_3103785626, 0, (t_3103785572.data).length - 1)].Field0 == hc_3103785574[hc_3103785574_Idx]) && HEX3DHEX3D_2181038320(t_3103785572.data[chckIndx(h_3103785626, 0, (t_3103785572.data).length - 1)].Field1, key_3103785573))) {
          result_3103785575 = h_3103785626;
          break BeforeRet;
          }
          
          h_3103785626 = nextTry_1308622883(h_3103785626, (t_3103785572.data).length - 1);
        }
    };
    result_3103785575 = subInt(-1, h_3103785626);
  };

  return result_3103785575;

}

function mustRehash_3103785914(t_3103785916) {
  var result_3103785917 = false;

    if (!((t_3103785916.counter < (t_3103785916.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3103785917 = ((mulInt((t_3103785916.data).length, 2) < mulInt(t_3103785916.counter, 3)) || (subInt((t_3103785916.data).length, t_3103785916.counter) < 4));

  return result_3103785917;

}

function rawInsert_3103786363(t_3103786367, data_3103786368, data_3103786368_Idx, key_3103786369, val_3103786370, hc_3103786371, h_3103786372) {
    data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field1 = nimCopy(data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field1, key_3103786369, NTI2181038083);
    data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field2 = nimCopy(data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field2, val_3103786370, NTI3070230558);
    data_3103786368[data_3103786368_Idx][chckIndx(h_3103786372, 0, (data_3103786368[data_3103786368_Idx]).length - 1)].Field0 = hc_3103786371;

  
}

function enlarge_3103786069(t_3103786072) {
    var n_3103786075 = [];
    n_3103786075 = new Array(chckRange(mulInt((t_3103786072.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3103786072.data).length, 2), 0, 2147483647) ; ++i) { n_3103786075[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    var Temporary1 = t_3103786072.data; t_3103786072.data = n_3103786075; n_3103786075 = Temporary1;    Label2: {
      var i_3103786139 = 0;
      var colontmp__2936013334 = 0;
      colontmp__2936013334 = (n_3103786075).length - 1;
      var res_2936013335 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013335 <= colontmp__2936013334)) break Label4;
            i_3103786139 = res_2936013335;
            var eh_3103786193 = n_3103786075[chckIndx(i_3103786139, 0, (n_3103786075).length - 1)].Field0;
            if (isFilled_1308622880(eh_3103786193)) {
            var j_3103786197 = (eh_3103786193 & (t_3103786072.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3103786072.data[chckIndx(j_3103786197, 0, (t_3103786072.data).length - 1)].Field0)) break Label6;
                  j_3103786197 = nextTry_1308622883(j_3103786197, (t_3103786072.data).length - 1);
                }
            };
            rawInsert_3103786363(t_3103786072, t_3103786072, "data", n_3103786075[chckIndx(i_3103786139, 0, (n_3103786075).length - 1)].Field1, n_3103786075[chckIndx(i_3103786139, 0, (n_3103786075).length - 1)].Field2, eh_3103786193, j_3103786197);
            }
            
            res_2936013335 = addInt(res_2936013335, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3103786532(t_3103786535, key_3103786536, hc_3103786537) {
  var result_3103786538 = 0;

  BeforeRet: {
    if (((t_3103786535.data).length == 0)) {
    result_3103786538 = -1;
    break BeforeRet;
    }
    
    var h_3103786589 = (hc_3103786537 & (t_3103786535.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3103786535.data[chckIndx(h_3103786589, 0, (t_3103786535.data).length - 1)].Field0)) break Label2;
          if (((t_3103786535.data[chckIndx(h_3103786589, 0, (t_3103786535.data).length - 1)].Field0 == hc_3103786537) && HEX3DHEX3D_2181038320(t_3103786535.data[chckIndx(h_3103786589, 0, (t_3103786535.data).length - 1)].Field1, key_3103786536))) {
          result_3103786538 = h_3103786589;
          break BeforeRet;
          }
          
          h_3103786589 = nextTry_1308622883(h_3103786589, (t_3103786535.data).length - 1);
        }
    };
    result_3103786538 = subInt(-1, h_3103786589);
  };

  return result_3103786538;

}

function HEX5BHEX5DHEX3D_3103785508(t_3103785511, key_3103785512, val_3103785513) {
    if (((t_3103785511.data).length == 0)) {
    var correctSizeHEX60gensym21_3103785563 = slotsNeeded_1308622891(32);
    t_3103785511.counter = 0;
    t_3103785511.data = new Array(chckRange(correctSizeHEX60gensym21_3103785563, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_3103785563, 0, 2147483647) ; ++i) { t_3103785511.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }    }
    
    var hc_3103785568 = [0];
    var index_3103785807 = rawGet_3103785569(t_3103785511, key_3103785512, hc_3103785568, 0);
    if ((0 <= index_3103785807)) {
    t_3103785511.data[chckIndx(index_3103785807, 0, (t_3103785511.data).length - 1)].Field2 = nimCopy(t_3103785511.data[chckIndx(index_3103785807, 0, (t_3103785511.data).length - 1)].Field2, val_3103785513, NTI3070230558);
    }
    else {
      if (((t_3103785511.data).length == 0)) {
      var correctSizeHEX60gensym26_3103785909 = slotsNeeded_1308622891(32);
      t_3103785511.counter = 0;
      t_3103785511.data = new Array(chckRange(correctSizeHEX60gensym26_3103785909, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym26_3103785909, 0, 2147483647) ; ++i) { t_3103785511.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({parent: null, first: 0, last: 0})}; }      }
      
      if (mustRehash_3103785914(t_3103785511)) {
      enlarge_3103786069(t_3103785511);
      index_3103785807 = rawGetKnownHC_3103786532(t_3103785511, key_3103785512, hc_3103785568[0]);
      }
      
      index_3103785807 = subInt(-1, index_3103785807);
      rawInsert_3103786363(t_3103785511, t_3103785511, "data", key_3103785512, val_3103785513, hc_3103785568[0], index_3103785807);
      t_3103785511.counter = addInt(t_3103785511.counter, 1);
    }
    

  
}

function min_33555609(x_33555610, y_33555611) {
    var Temporary1;

  var result_33555612 = 0.0;

    if (((x_33555610 <= y_33555611) || !((y_33555611 == y_33555611)))) {
    Temporary1 = x_33555610;
    }
    else {
    Temporary1 = y_33555611;
    }
    
    result_33555612 = Temporary1;

  return result_33555612;

}

function max_33555642(x_33555643, y_33555644) {
    var Temporary1;

  var result_33555645 = 0.0;

    if (((y_33555644 <= x_33555643) || !((y_33555644 == y_33555644)))) {
    Temporary1 = x_33555643;
    }
    else {
    Temporary1 = y_33555644;
    }
    
    result_33555645 = Temporary1;

  return result_33555645;

}

function or_2080374872(a_2080374873, b_2080374874) {
  var result_2080374875 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374875.x = min_33555609(a_2080374873.x, b_2080374874.x);
    result_2080374875.y = min_33555609(a_2080374873.y, b_2080374874.y);
    result_2080374875.w = (max_33555642((a_2080374873.x + a_2080374873.w), (b_2080374874.x + b_2080374874.w)) - result_2080374875.x);
    result_2080374875.h = (max_33555642((a_2080374873.y + a_2080374873.h), (b_2080374874.y + b_2080374874.h)) - result_2080374875.y);

  return result_2080374875;

}

function HEX2B_2063597727(a_2063597728, b_2063597729) {
  var result_2063597730 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2063597730.x = (a_2063597728.x + b_2063597729.arr[chckIndx(0, 0, (b_2063597729.arr).length - 1)]);
    result_2063597730.y = (a_2063597728.y + b_2063597729.arr[chckIndx(1, 0, (b_2063597729.arr).length - 1)]);
    result_2063597730.w = a_2063597728.w;
    result_2063597730.h = a_2063597728.h;

  return result_2063597730;

}

function vec2_2097152992(xHEX60gensym72_2097152993, yHEX60gensym72_2097152994) {
  var result_2097152995 = ({arr: new Float32Array(2)});

    result_2097152995 = nimCopy(result_2097152995, {arr: new Float32Array([xHEX60gensym72_2097152993, yHEX60gensym72_2097152994])}, NTI2097152387);

  return result_2097152995;

}

function xy_2080374820(rect_2080374821) {
  var result_2080374822 = ({arr: new Float32Array(2)});

    result_2080374822 = nimCopy(result_2080374822, vec2_2097152992(rect_2080374821.x, rect_2080374821.y), NTI2097152387);

  return result_2080374822;

}

function add_3070232595(node_3070232596, node_3070232596_Idx, child_3070232597) {
  var result_3070232598 = ({parent: null, first: 0, last: 0});

  BeforeRet: {
    node_3070232596[node_3070232596_Idx].children.push(child_3070232597);;
    child_3070232597.depth = addInt(node_3070232596[node_3070232596_Idx].depth, 1);
    child_3070232597.parent = node_3070232596[node_3070232596_Idx];
    child_3070232597.bounds.x = node_3070232596[node_3070232596_Idx].bounds.w;
    node_3070232596[node_3070232596_Idx].bounds = nimCopy(node_3070232596[node_3070232596_Idx].bounds, or_2080374872(node_3070232596[node_3070232596_Idx].bounds, HEX2B_2063597727(child_3070232597.bounds, xy_2080374820(node_3070232596[node_3070232596_Idx].bounds))), NTI2080374789);
    result_3070232598 = nimCopy(result_3070232598, {parent: node_3070232596[node_3070232596_Idx], first: (node_3070232596[node_3070232596_Idx].children).length - 1, last: (node_3070232596[node_3070232596_Idx].children).length}, NTI3070230558);
    break BeforeRet;
  };

  return result_3070232598;

}

function map_3070232196(s_3070232199, op_3070232201) {
  var result_3070232202 = [];

    result_3070232202 = new Array(chckRange((s_3070232199).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3070232199).length, 0, 2147483647) ; ++i) { result_3070232202[i] = null; }    Label1: {
      var i_3070232218 = 0;
      var colontmp__2936013344 = 0;
      colontmp__2936013344 = (s_3070232199).length;
      var i_2936013345 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013345 < colontmp__2936013344)) break Label3;
            i_3070232218 = i_2936013345;
            result_3070232202[chckIndx(i_3070232218, 0, (result_3070232202).length - 1)] = op_3070232201(s_3070232199[chckIndx(i_3070232218, 0, (s_3070232199).length - 1)]);
            i_2936013345 = addInt(i_2936013345, 1);
          }
      };
    };

  return result_3070232202;

}

function clone_3070232177(node_3070232178) {
    
function HEX3Aanonymous_3070232183(c_3070232191) {
      var result_3070232194 = null;

        result_3070232194 = clone_3070232177(c_3070232191);

      return result_3070232194;

    }

  var result_3070232179 = null;

    result_3070232179 = ({id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, orientation: 0, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0});
    result_3070232179.id = nimCopy(result_3070232179.id, newId_2181038297(), NTI2181038083);
    result_3070232179.parent = node_3070232178.parent;
    result_3070232179.node = node_3070232178.node;
    result_3070232179.text = nimCopy(null, node_3070232178.text, NTI33554449);
    result_3070232179.bounds = nimCopy(result_3070232179.bounds, node_3070232178.bounds, NTI2080374789);
    result_3070232179.indent = node_3070232178.indent;
    result_3070232179.font = nimCopy(null, node_3070232178.font, NTI33554449);
    result_3070232179.fontSize = node_3070232178.fontSize;
    result_3070232179.render = node_3070232178.render;
    result_3070232179.children = nimCopy(null, map_3070232196(node_3070232178.children, HEX3Aanonymous_3070232183), NTI3070231781);
    Label1: {
      var c_3070232222 = null;
      var i_2936013340 = 0;
      var L_2936013341 = (result_3070232179.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013340 < L_2936013341)) break Label3;
            c_3070232222 = result_3070232179.children[chckIndx(i_2936013340, 0, (result_3070232179.children).length - 1)];
            c_3070232222.parent = result_3070232179;
            i_2936013340 = addInt(i_2936013340, 1);
            if (!(((result_3070232179.children).length == L_2936013341))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_3070232179;

}

function HEX5BHEX5D_3103785394(t_3103785397, key_3103785398) {
  var result_3103785399 = null;
  var result_3103785399_Idx = 0;

    var hcHEX60gensym22_3103785400 = [0];
    var indexHEX60gensym22_3103785407 = rawGet_3070233124(t_3103785397, key_3103785398, hcHEX60gensym22_3103785400, 0);
    if ((0 <= indexHEX60gensym22_3103785407)) {
    result_3103785399 = t_3103785397.data[chckIndx(indexHEX60gensym22_3103785407, 0, (t_3103785397.data).length - 1)]; result_3103785399_Idx = "Field2";
    }
    else {
    raiseKeyError_2969569048(key_3103785398);
    }
    

  return [result_3103785399, result_3103785399_Idx];

}

function createReplacement_3103785277(input_3103785278, node_3103785279, layout_3103785280, line_3103785281, line_3103785281_Idx) {
    var Temporary1;
    var Temporary2;

  var result_3103785282 = false;

  BeforeRet: {
    if (contains_3103785325(input_3103785278.replacements, node_3103785279.id)) {
    HEX5BHEX5DHEX3D_3103785508(layout_3103785280.nodeToVisualNode, node_3103785279.id, add_3070232595(line_3103785281, line_3103785281_Idx, clone_3070232177((Temporary1 = HEX5BHEX5D_3103785394(input_3103785278.replacements, node_3103785279.id), Temporary1)[0][Temporary1[1]])));
    result_3103785282 = true;
    break BeforeRet;
    }
    
    if (contains_3103785325(input_3103785278.replacements, node_3103785279.reff)) {
    HEX5BHEX5DHEX3D_3103785508(layout_3103785280.nodeToVisualNode, node_3103785279.id, add_3070232595(line_3103785281, line_3103785281_Idx, clone_3070232177((Temporary2 = HEX5BHEX5D_3103785394(input_3103785278.replacements, node_3103785279.reff), Temporary2)[0][Temporary2[1]])));
    result_3103785282 = true;
    break BeforeRet;
    }
    
    result_3103785282 = false;
    break BeforeRet;
  };

  return result_3103785282;

}

function rect_2080374808(pos_2080374809, size_2080374810) {
  var result_2080374811 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374811.x = pos_2080374809.arr[chckIndx(0, 0, (pos_2080374809.arr).length - 1)];
    result_2080374811.y = pos_2080374809.arr[chckIndx(1, 0, (pos_2080374809.arr).length - 1)];
    result_2080374811.w = size_2080374810.arr[chckIndx(0, 0, (size_2080374810.arr).length - 1)];
    result_2080374811.h = size_2080374810.arr[chckIndx(1, 0, (size_2080374810.arr).length - 1)];

  return result_2080374811;

}

function vec2_2097152926() {
  var result_2097152927 = ({arr: new Float32Array(2)});

    result_2097152927 = nimCopy(result_2097152927, {arr: new Float32Array([0.0, 0.0])}, NTI2097152387);

  return result_2097152927;

}

function whHEX3D_2080374831(rect_2080374832, v_2080374833) {
    rect_2080374832.w = v_2080374833.arr[chckIndx(0, 0, (v_2080374833.arr).length - 1)];
    rect_2080374832.h = v_2080374833.arr[chckIndx(1, 0, (v_2080374833.arr).length - 1)];

  
}

function newTextNode_3103785204(text_3103785205, color_3103785206, font_3103785207, measureText_3103785210, node_3103785211) {
  var result_3103785212 = null;

    result_3103785212 = {id: newId_2181038297(), text: nimCopy(null, text_3103785205, NTI33554449), colors: [nimCopy(null, color_3103785206, NTI33554449)], font: nimCopy(null, font_3103785207, NTI33554449), fontSize: config_3103785173[0].fontSize, node: node_3103785211, parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0};
    whHEX3D_2080374831(result_3103785212.bounds, measureText_3103785210(text_3103785205));

  return result_3103785212;

}

function newTextNode_3103785217(text_3103785218, colors_3103785219, font_3103785220, measureText_3103785223, node_3103785224, styleOverride_3103785234) {
  var result_3103785235 = null;

    result_3103785235 = {id: newId_2181038297(), text: nimCopy(null, text_3103785218, NTI33554449), colors: nimCopy(null, colors_3103785219, NTI3103785143), font: nimCopy(null, font_3103785220, NTI33554449), fontSize: config_3103785173[0].fontSize, node: node_3103785224, styleOverride: nimCopy(null, styleOverride_3103785234, NTI3070230572), parent: null, orientation: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, render: null, children: [], background: ({val: [], has: false}), depth: 0};
    whHEX3D_2080374831(result_3103785235.bounds, measureText_3103785223(text_3103785218));

  return result_3103785235;

}

function none_3103785226() {
  var result_3103785233 = ({val: {}, has: false});

  return result_3103785233;

}

function getColorForSymbol_3103786921(ctx_3103786922, sym_3103786923) {
      var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
        var Temporary6;

  var result_3103786924 = [];

  BeforeRet: {
    var typ_3103786925 = computeSymbolType_2986431036(ctx_3103786922, sym_3103786923, false);
    switch (typ_3103786925.kind) {
    case 0:
      result_3103786924 = nimCopy(null, [[105,110,118,97,108,105,100]], NTI1560281203);
      break BeforeRet;
      break;
    case 6:
      result_3103786924 = nimCopy(null, [[115,116,111,114,97,103,101,46,116,121,112,101]], NTI1560281203);
      break BeforeRet;
      break;
    case 4:
      if ((sym_3103786923.kind == 1)) {
      var Temporary1 = sym_3103786923;
      if (ConstSet145[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
      switch (Temporary1.operatorNotation) {
      case 1:
      case 3:
      case 2:
        result_3103786924 = nimCopy(null, [[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], NTI1560281203);
        break BeforeRet;
        break;
      default: 
        result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3103786054);
        break BeforeRet;
        break;
      }
      }
      
      result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,102,117,110,99,116,105,111,110], [118,97,114,105,97,98,108,101]], NTI3103786054);
      break BeforeRet;
      break;
    default: 
      if ((sym_3103786923.kind == 0)) {
        var Temporary2 = sym_3103786923;
        if (ConstSet146[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      if ((Temporary2.node.kind == 4)) {
      result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114,46,99,111,110,115,116,97,110,116], [118,97,114,105,97,98,108,101]], NTI3103786054);
      break BeforeRet;
      }
      else {
        var Temporary4 = sym_3103786923;
        if (ConstSet147[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
        if ((Temporary4.node.kind == 6)) Temporary3 = true; else {          var Temporary5 = sym_3103786923;
          if (ConstSet148[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230537)); }
          Temporary3 = (Temporary5.node.kind == 5);        }      if (Temporary3) {
        var Temporary6 = sym_3103786923;
        if (ConstSet149[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230537)); }
      if ((Temporary6.node.parent.kind == 12)) {
      result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,112,97,114,97,109,101,116,101,114], [118,97,114,105,97,98,108,101]], NTI3103786054);
      break BeforeRet;
      }
      else {
        result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101]], NTI1560281203);
        break BeforeRet;
      }
      
      }
      else {
        result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3103786054);
        break BeforeRet;
      }
      }
      }
      
      break;
    }
    result_3103786924 = nimCopy(null, [[118,97,114,105,97,98,108,101,46,111,116,104,101,114], [118,97,114,105,97,98,108,101]], NTI3103786054);
    break BeforeRet;
  };

  return result_3103786924;

}

function some_3103787041(val_3103787043) {
  var result_3103787044 = ({val: {}, has: false});

    result_3103787044.has = true;
    result_3103787044.val = nimCopy(result_3103787044.val, val_3103787043, NTI3070230567);

  return result_3103787044;

}

function getStyleForSymbol_3103786990(ctx_3103786991, sym_3103786992) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3103786994 = ({val: {}, has: false});

    var style_3103786995 = nimCopy(null, ConstSet150, NTI3103786118);
    if ((sym_3103786992.kind == 0)) {
      var Temporary1 = sym_3103786992;
      if (ConstSet151[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
    if ((Temporary1.node.kind == 6)) {
    style_3103786995 = nimCopy(style_3103786995, SetPlus(style_3103786995, ConstSet152), NTI3103786118);
    }
    
      var Temporary2 = sym_3103786992;
      if (ConstSet153[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
    if ((Temporary2.node.kind == 4)) {
    var typ_3103787014 = computeSymbolType_2986431036(ctx_3103786991, sym_3103786992, false);
    if (!((typ_3103787014.kind == 4))) {
    style_3103786995 = nimCopy(style_3103786995, SetPlus(style_3103786995, ConstSet154), NTI3103786118);
    }
    
    }
    
    }
    else {
    if ((sym_3103786992.kind == 1)) {
      var Temporary3 = sym_3103786992;
      if (ConstSet155[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
    if ((Temporary3.operatorNotation == 0)) {
    style_3103786995[1] = true;
    }
    
    }
    }
    if (!(SetEq(style_3103786995, ConstSet156))) {
    result_3103786994 = nimCopy(result_3103786994, some_3103787041(style_3103786995), NTI3070230572);
    }
    

  return result_3103786994;

}

function len_3070230753(node_3070230754) {
  var result_3070230755 = 0;

  BeforeRet: {
    result_3070230755 = (node_3070230754.children).length;
    break BeforeRet;
  };

  return result_3070230755;

}

function addLine_3070232621(node_3070232622, node_3070232622_Idx, child_3070232623, child_3070232623_Idx) {
    node_3070232622[node_3070232622_Idx].children.push(child_3070232623[child_3070232623_Idx]);;
    child_3070232623[child_3070232623_Idx].depth = addInt(node_3070232622[node_3070232622_Idx].depth, 1);
    child_3070232623[child_3070232623_Idx].parent = node_3070232622[node_3070232622_Idx];
    child_3070232623[child_3070232623_Idx].bounds.y = node_3070232622[node_3070232622_Idx].bounds.h;
    node_3070232622[node_3070232622_Idx].bounds = nimCopy(node_3070232622[node_3070232622_Idx].bounds, or_2080374872(node_3070232622[node_3070232622_Idx].bounds, HEX2B_2063597727(child_3070232623[child_3070232623_Idx].bounds, xy_2080374820(node_3070232622[node_3070232622_Idx].bounds))), NTI2080374789);

  
}

function rect_2080374802(x_2080374803, y_2080374804, w_2080374805, h_2080374806) {
  var result_2080374807 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374807.x = x_2080374803;
    result_2080374807.y = y_2080374804;
    result_2080374807.w = w_2080374805;
    result_2080374807.h = h_2080374806;

  return result_2080374807;

}

function getPrecedenceForNode_3103784974(ctx_3103784975, node_3103784976) {
      var Temporary1;
      var Temporary2;

  var result_3103784977 = 0;

  BeforeRet: {
    if ((!((node_3103784976.kind == 8)) || (len_2969567320(node_3103784976) == 0))) {
    result_3103784977 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym1_3103784984 = computeSymbol_2986424064(ctx_3103784975, HEX5BHEX5D_2969567316(node_3103784976, 0), false);
      if (!isSome_3070232117(oHEX60gensym1_3103784984)) Temporary1 = false; else {        var symbol_3103785007 = get_3070232137(oHEX60gensym1_3103784984);
        Temporary1 = true;      }    if (Temporary1) {
    switch (symbol_3103785007.kind) {
    case 1:
      var Temporary2 = symbol_3103785007;
      if (ConstSet159[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'precedence\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      result_3103784977 = Temporary2.precedence;
      break BeforeRet;
      break;
    case 0:
      break;
    }
    }
    
    result_3103784977 = 0;
    break BeforeRet;
  };

  return result_3103784977;

}

function some_3103785259(val_3103785261) {
  var result_3103785262 = ({val: [], has: false});

    result_3103785262.has = true;
    result_3103785262.val = nimCopy(null, val_3103785261, NTI3103785172);

  return result_3103785262;

}

function newBlockNode_3103785245(colors_3103785246, size_3103785247, node_3103785248, styleOverride_3103785257) {
  var result_3103785258 = null;

    result_3103785258 = {id: newId_2181038297(), node: node_3103785248, styleOverride: nimCopy(null, styleOverride_3103785257, NTI3070230572), background: some_3103785259(colors_3103785246), parent: null, orientation: 0, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], depth: 0};
    whHEX3D_2080374831(result_3103785258.bounds, size_3103785247);

  return result_3103785258;

}

function HEX2BHEX3D_2080374895(x_2080374897, x_2080374897_Idx, y_2080374898) {
    x_2080374897[x_2080374897_Idx] = (x_2080374897[x_2080374897_Idx] + y_2080374898);

  
}

function formatValue_3103788382(result_3103788384, result_3103788384_Idx, value_3103788385, specifier_3103788386) {
    formatValue_721420459(result_3103788384, result_3103788384_Idx, reprEnum(value_3103788385, NTI2969567235), specifier_3103788386);

  
}

function createLayoutLineForRemainingChildren_3103787059(ctx_3103787060, input_3103787061, node_3103787062, firstChildIndex_3103787063, result_3103787064, line_3103787065, line_3103787065_Idx) {
  BeforeRet: {
    if ((len_2969567320(node_3103787062) <= firstChildIndex_3103787063)) {
    break BeforeRet;
    }
    
    var _ = add_3070232595(line_3103787065, line_3103787065_Idx, newTextNode_3103785217([60], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787061.measureText, null, none_3103785226()));
    Label1: {
      var i_3103787074 = 0;
      var colontmp__2936013350 = 0;
      colontmp__2936013350 = len_2969567320(node_3103787062);
      var i_2936013351 = firstChildIndex_3103787063;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013351 < colontmp__2936013350)) break Label3;
            i_3103787074 = i_2936013351;
            if ((firstChildIndex_3103787063 < i_3103787074)) {
            var _ = add_3070232595(line_3103787065, line_3103787065_Idx, newTextNode_3103785217([44,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787061.measureText, null, none_3103785226()));
            }
            
            createLayoutLineForNode_3103787053(ctx_3103787060, input_3103787061, HEX5BHEX5D_2969567316(node_3103787062, i_3103787074), result_3103787064, line_3103787065, line_3103787065_Idx);
            i_2936013351 = addInt(i_2936013351, 1);
          }
      };
    };
    var _ = add_3070232595(line_3103787065, line_3103787065_Idx, newTextNode_3103785217([62], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787061.measureText, null, none_3103785226()));
  };

  
}

function createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx) {
        var Temporary5;
      var Temporary6;
        var Temporary7;
        var Temporary8;
      var Temporary9;
        var Temporary10;
      var Temporary11;
        var Temporary12;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
      var Temporary29;
      var Temporary30;

  BeforeRet: {
    var renderInline_3103787098 = ((ConstSet143[node_3103787056.kind] != undefined) && (ConstSet144[node_3103787056.parent.kind] != undefined));
    var prevLine_3103787099 = line_3103787058[line_3103787058_Idx];
    var first_3103787103 = (prevLine_3103787099.children).length;
    try {
    var oldLineHEX60gensym42_3103787158 = [line_3103787058[line_3103787058_Idx]];
    var containerLineHEX60gensym42_3103787159 = [{id: newId_2181038297(), node: node_3103787056, parent: line_3103787058[line_3103787058_Idx], orientation: 1, depth: addInt(line_3103787058[line_3103787058_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    if (renderInline_3103787098) {
    line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: containerLineHEX60gensym42_3103787159[0], orientation: 0, depth: addInt(containerLineHEX60gensym42_3103787159[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
    }
    
    try {
    var _ = computeType_2986417458(ctx_3103787054, node_3103787056, false);
    var lastUsedChild_3103787206 = -1;
    try {
    Label4: {
      var expr_3103787207 = node_3103787056;
      var pos_3103787208 = 0;
      var _ = pos_3103787208;
      if ((expr_3103787207.kind == 0)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(line_3103787058, line_3103787058_Idx, {id: newId_2181038297(), colors: [nimCopy(null, config_3103785173[0].colors.empty, NTI33554449)], node: node_3103787056, bounds: rect_2080374808(vec2_2097152926(), vec2_2097152992((config_3103785173[0].fontSize * 0.5), config_3103785173[0].fontSize)), parent: null, orientation: 0, text: [], indent: 0, font: [], fontSize: 0.0, render: null, children: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}));
      }
      
      }
      else {
      if ((expr_3103787207.kind == 2)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(node_3103787056.text, [99,111,110,115,116,97,110,116,46,110,117,109,101,114,105,99], config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056)));
      }
      
      }
      else {
      if ((expr_3103787207.kind == 3)) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(node_3103787056.text, [115,116,114,105,110,103], config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056));
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([34], [[112,117,110,99,116,117,97,116,105,111,110,46,100,101,102,105,110,105,116,105,111,110,46,115,116,114,105,110,103], nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      }
      else {
      if ((expr_3103787207.kind == 1)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym61_3103787333 = computeSymbol_2986424064(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232117(oHEX60gensym61_3103787333)) Temporary5 = false; else {          var sym_3103787356 = get_3070232137(oHEX60gensym61_3103787333);
          Temporary5 = true;        }      if (Temporary5) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(sym_3103787356.name, getColorForSymbol_3103786921(ctx_3103787054, sym_3103787356), config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787356))));
      }
      else {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_2181038317(node_3103787056.reff), [118,97,114,105,97,98,108,101], config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056)));
      }
      
      }
      
      }
      else {
      if ((expr_3103787207.kind == 4)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym63_3103787455 = computeSymbol_2986424064(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232117(oHEX60gensym63_3103787455)) Temporary7 = false; else {          var sym_3103787478 = get_3070232137(oHEX60gensym63_3103787455);
          Temporary7 = true;        }      if (Temporary7) {
      Temporary6 = getColorForSymbol_3103786921(ctx_3103787054, sym_3103787478);
      }
      else {
      Temporary6 = [[101,110,116,105,116,121,46,110,97,109,101,46,99,111,110,115,116,97,110,116]];
      }
      
      var color_3103787483 = nimCopy(null, Temporary6, NTI3103786020);
        var oHEX60gensym64_3103787486 = computeSymbol_2986424064(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232117(oHEX60gensym64_3103787486)) Temporary8 = false; else {          var sym_3103787509 = get_3070232137(oHEX60gensym64_3103787486);
          Temporary8 = true;        }      if (Temporary8) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(sym_3103787509.name, color_3103787483, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787509)));
      }
      else {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(HEX24_2181038317(node_3103787056.id), color_3103787483, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, none_3103785226()));
      }
      
      }
      
      var typ_3103787510 = computeType_2986417458(ctx_3103787054, node_3103787056, false);
      if ((typ_3103787510.kind == 4)) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      }
      else {
        var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
        var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070230964(typ_3103787510), config_3103785173[0].colors.typ, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
        var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      }
      
      if ((0 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      var value_3103787527 = computeValue_2986420934(ctx_3103787054, node_3103787056, false);
      switch (value_3103787527.kind) {
      case 5:
      case 4:
      case 1:
        break;
      default: 
        switch (HEX5BHEX5D_2969567316(node_3103787056, 0).kind) {
        case 3:
        case 2:
          break;
        default: 
          var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
          var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070231271(value_3103787527), [115,116,114,105,110,103], config_3103785173[0].fontRegular, input_3103787055.measureText, null));
          break;
        }
        break;
      }
      }
      
      lastUsedChild_3103787206 = 0;
      }
      else {
      if ((expr_3103787207.kind == 5)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym67_3103787538 = computeSymbol_2986424064(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232117(oHEX60gensym67_3103787538)) Temporary10 = false; else {          var sym_3103787561 = get_3070232137(oHEX60gensym67_3103787538);
          Temporary10 = true;        }      if (Temporary10) {
      Temporary9 = {Field0: getColorForSymbol_3103786921(ctx_3103787054, sym_3103787561), Field1: getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787561)};
      }
      else {
      Temporary9 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3103785226()};
      }
      
      var colontmp__2936013347 = nimCopy(null, Temporary9, NTI3103786490);
      var color_3103787573 = nimCopy(null, colontmp__2936013347["Field0"], NTI3103786020);
      var style_3103787574 = nimCopy(null, colontmp__2936013347["Field1"], NTI3070230572);
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(node_3103787056.text, color_3103787573, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, style_3103787574));
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      if ((((HEX5BHEX5D_2969567316(node_3103787056, 0).kind == 0) && ((HEX5BHEX5D_2969567316(node_3103787056, 0).text).length == 0)) && !(contains_3103785325(input_3103787055.replacements, HEX5BHEX5D_2969567316(node_3103787056, 0).id)))) {
      var typ_3103787630 = computeType_2986417458(ctx_3103787054, node_3103787056, false);
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070230964(typ_3103787630), config_3103785173[0].colors.typ, config_3103785173[0].fontRegular, input_3103787055.measureText, HEX5BHEX5D_2969567316(node_3103787056, 0))));
      }
      else {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      }
      
      if ((1 < len_2969567320(node_3103787056))) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 6)) {
      if (!(createReplacement_3103785277(input_3103787055, node_3103787056, result_3103787057, line_3103787058, line_3103787058_Idx))) {
        var oHEX60gensym71_3103787687 = computeSymbol_2986424064(ctx_3103787054, node_3103787056, false);
        if (!isSome_3070232117(oHEX60gensym71_3103787687)) Temporary12 = false; else {          var sym_3103787710 = get_3070232137(oHEX60gensym71_3103787687);
          Temporary12 = true;        }      if (Temporary12) {
      Temporary11 = {Field0: getColorForSymbol_3103786921(ctx_3103787054, sym_3103787710), Field1: getStyleForSymbol_3103786990(ctx_3103787054, sym_3103787710)};
      }
      else {
      Temporary11 = {Field0: [[118,97,114,105,97,98,108,101]], Field1: none_3103785226()};
      }
      
      var colontmp__2936013348 = nimCopy(null, Temporary11, NTI3103786593);
      var color_3103787722 = nimCopy(null, colontmp__2936013348["Field0"], NTI3103786020);
      var style_3103787723 = nimCopy(null, colontmp__2936013348["Field1"], NTI3070230572);
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217(node_3103787056.text, color_3103787722, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056, style_3103787723));
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,58,32,109,117,116,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      if ((((HEX5BHEX5D_2969567316(node_3103787056, 0).kind == 0) && ((HEX5BHEX5D_2969567316(node_3103787056, 0).text).length == 0)) && !(contains_3103785325(input_3103787055.replacements, HEX5BHEX5D_2969567316(node_3103787056, 0).id)))) {
      var typ_3103787779 = computeType_2986417458(ctx_3103787054, node_3103787056, false);
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204(HEX24_3070230964(typ_3103787779), config_3103785173[0].colors.typ, config_3103785173[0].fontRegular, input_3103787055.measureText, HEX5BHEX5D_2969567316(node_3103787056, 0))));
      }
      else {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      }
      
      if ((1 < len_2969567320(node_3103787056))) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 11)) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([102,110], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([40], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      var parent_3103787834 = line_3103787058[line_3103787058_Idx];
      var first_3103787835 = len_3070230753(parent_3103787834);
      Label13: {
        var i_3103787859 = 0;
        var param_3103787860 = null;
        var colontmp__2936013316 = [];
        colontmp__2936013316 = HEX5BHEX5D_2969567316(node_3103787056, 0).children;
        var i_2936013318 = 0;
        var L_2936013319 = (colontmp__2936013316).length;
        Label14: {
            Label15: while (true) {
            if (!(i_2936013318 < L_2936013319)) break Label15;
              i_3103787859 = i_2936013318;
              param_3103787860 = colontmp__2936013316[chckIndx(i_2936013318, 0, (colontmp__2936013316).length - 1)];
              if ((0 < i_3103787859)) {
              var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([44,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
              }
              
              createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, param_3103787860, result_3103787057, line_3103787058, line_3103787058_Idx);
              i_2936013318 = addInt(i_2936013318, 1);
              if (!(((colontmp__2936013316).length == L_2936013319))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if ((len_2969567320(HEX5BHEX5D_2969567316(node_3103787056, 0)) == 0)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([32], config_3103785173[0].colors.empty, config_3103785173[0].fontRegular, input_3103787055.measureText, HEX5BHEX5D_2969567316(node_3103787056, 0))));
      }
      else {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, {parent: parent_3103787834, first: first_3103787835, last: len_3070230753(parent_3103787834)});
      }
      
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([41,32], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((1 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((2 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 2), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 2;
      }
      else {
      if ((expr_3103787207.kind == 9)) {
      var parent_3103787965 = [line_3103787058[line_3103787058_Idx].parent];
      var prevIndent_3103787966 = line_3103787058[line_3103787058_Idx].indent;
      var first_3103787970 = (parent_3103787965[0].children).length;
      try {
      var i_3103788023 = 0;
      Label17: {
          Label18: while (true) {
          if (!(addInt(i_3103788023, 1) < len_2969567320(node_3103787056))) break Label18;
            try {
            if ((i_3103788023 == 0)) {
            var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([105,102,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
            }
            else {
              addLine_3070232621(parent_3103787965, 0, line_3103787058, line_3103787058_Idx);
              line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103787965[0], bounds: rect_2080374802((prevIndent_3103787966 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103787966, depth: addInt(parent_3103787965[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([101,108,105,102,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
            }
            
            createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, i_3103788023), result_3103787057, line_3103787058, line_3103787058_Idx);
            var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
            createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, addInt(i_3103788023, 1)), result_3103787057, line_3103787058, line_3103787058_Idx);
            } finally {
            i_3103788023 = addInt(i_3103788023, 2);
            }
          }
      };
      if ((modInt(len_2969567320(node_3103787056), 2) == 1)) {
      addLine_3070232621(parent_3103787965, 0, line_3103787058, line_3103787058_Idx);
      line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103787965[0], bounds: rect_2080374802((prevIndent_3103787966 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103787966, depth: addInt(parent_3103787965[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([101,108,115,101,58,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, last_2969567490(node_3103787056), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      addLine_3070232621(parent_3103787965, 0, line_3103787058, line_3103787058_Idx);
      line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103787965[0], bounds: rect_2080374802((prevIndent_3103787966 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103787966, depth: addInt(parent_3103787965[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3103787206 = subInt(len_2969567320(node_3103787056), 1);
      } finally {
      if ((first_3103787970 < (parent_3103787965[0].children).length)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: parent_3103787965[0], first: first_3103787970, last: (parent_3103787965[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3103787207.kind == 10)) {
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([119,104,105,108,101,32], config_3103785173[0].colors.keyword, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
      if ((1 <= len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([58,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((2 <= len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 7)) {
      var parent_3103788044 = [line_3103787058[line_3103787058_Idx].parent];
      var first_3103788048 = addInt((parent_3103788044[0].children).length, 1);
      try {
      var prevIndent_3103788101 = line_3103787058[line_3103787058_Idx].indent;
      Label21: {
        var child_3103788105 = null;
        var i_2936013323 = 0;
        var L_2936013324 = (node_3103787056.children).length;
        Label22: {
            Label23: while (true) {
            if (!(i_2936013323 < L_2936013324)) break Label23;
              child_3103788105 = node_3103787056.children[chckIndx(i_2936013323, 0, (node_3103787056.children).length - 1)];
              addLine_3070232621(parent_3103788044, 0, line_3103787058, line_3103787058_Idx);
              line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103788044[0], bounds: rect_2080374802((prevIndent_3103788101 * config_3103785173[0].indent), 0.0, config_3103785173[0].indent, 0.0), indent: addInt(prevIndent_3103788101, 1), node: child_3103788105, depth: addInt(parent_3103788044[0].depth, 1), orientation: 0, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
              createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, child_3103788105, result_3103787057, line_3103787058, line_3103787058_Idx);
              i_2936013323 = addInt(i_2936013323, 1);
              if (!(((node_3103787056.children).length == L_2936013324))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      addLine_3070232621(parent_3103788044, 0, line_3103787058, line_3103787058_Idx);
      line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103788044[0], bounds: rect_2080374802((prevIndent_3103788101 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788101, depth: addInt(parent_3103788044[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
      lastUsedChild_3103787206 = subInt(len_2969567320(node_3103787056), 1);
      } finally {
      if ((first_3103788048 < (parent_3103788044[0].children).length)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: parent_3103788044[0], first: first_3103788048, last: (parent_3103788044[0].children).length});
      }
      
      }
      }
      else {
      if ((expr_3103787207.kind == 13)) {
      if ((0 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([32,61,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
      if ((0 < len_2969567320(node_3103787056))) {
      createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
      }
      
      lastUsedChild_3103787206 = 1;
      }
      else {
      if ((expr_3103787207.kind == 8)) {
      if ((len_2969567320(node_3103787056) == 0)) {
      HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([60,101,109,112,116,121,32,102,117,110,99,116,105,111,110,32,99,97,108,108,62], config_3103785173[0].colors.empty, config_3103785173[0].fontRegular, input_3103787055.measureText, node_3103787056)));
      break BeforeRet;
      }
      
      var isDivision_3103788164 = false;
        var oHEX60gensym90_3103788167 = computeSymbol_2986424064(ctx_3103787054, HEX5BHEX5D_2969567316(node_3103787056, 0), false);
        if (!isSome_3070232117(oHEX60gensym90_3103788167)) Temporary26 = false; else {          var sym_3103788190 = get_3070232137(oHEX60gensym90_3103788167);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_3103788190.kind == 1);        }      if (Temporary25) {
      if (HEX3DHEX3D_2181038320(sym_3103788190.id, IdDiv_2952790022)) {
      isDivision_3103788164 = true;
      }
      
      var Temporary27 = sym_3103788190;
      if (ConstSet157[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230537)); }
      switch (Temporary27.operatorNotation) {
      case 3:
        Temporary28 = 2;
        break;
      case 1:
      case 2:
        Temporary28 = 1;
        break;
      default: 
        Temporary28 = -1;
        break;
      }
      var arity_3103788195 = Temporary28;
      if ((len_2969567320(node_3103787056) == addInt(arity_3103788195, 1))) {
      var Temporary30 = sym_3103788190;
      if (ConstSet158[Temporary30.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary30.kind, NTI3070230537)); }
      Temporary29 = Temporary30.operatorNotation;
      }
      else {
      Temporary29 = 0;
      }
      
      Temporary24 = Temporary29;
      }
      else {
      Temporary24 = 0;
      }
      
      var operatorNotation_3103788196 = Temporary24;
      switch (operatorNotation_3103788196) {
      case 3:
        var parentPrecedence_3103788197 = getPrecedenceForNode_3103784974(ctx_3103787054, node_3103787056.parent);
        var precedence_3103788198 = getPrecedenceForNode_3103784974(ctx_3103787054, node_3103787056);
        var renderParens_3103788199 = (precedence_3103788198 < parentPrecedence_3103788197);
        if ((isDivision_3103788164 && !(input_3103787055.renderDivisionVertically))) {
        var oldLineHEX60gensym91_3103788202 = [line_3103787058[line_3103787058_Idx]];
        var containerLineHEX60gensym91_3103788203 = [{id: newId_2181038297(), node: node_3103787056, parent: line_3103787058[line_3103787058_Idx], orientation: 1, depth: addInt(line_3103787058[line_3103787058_Idx].depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
        if (true) {
        line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: containerLineHEX60gensym91_3103788203[0], orientation: 0, depth: addInt(containerLineHEX60gensym91_3103788203[0].depth, 1), node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        }
        
        try {
        var parent_3103788250 = [line_3103787058[line_3103787058_Idx].parent];
        var prevIndent_3103788251 = line_3103787058[line_3103787058_Idx].indent;
        var first_3103788255 = (parent_3103788250[0].children).length;
        try {
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
        addLine_3070232621(parent_3103788250, 0, line_3103787058, line_3103787058_Idx);
        var line1_3103788308 = line_3103787058[line_3103787058_Idx];
        line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103788250[0], bounds: rect_2080374802((prevIndent_3103788251 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788251, depth: addInt(parent_3103788250[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        var divLine_3103788313 = newBlockNode_3103785245([[107,101,121,119,111,114,100,46,111,112,101,114,97,116,111,114]], vec2_2097152992(0.0, (config_3103785173[0].fontSize * 0.1)), HEX5BHEX5D_2969567316(node_3103787056, 0), none_3103785226());
        var _ = add_3070232595(line_3103787058, line_3103787058_Idx, divLine_3103788313);
        HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, HEX5BHEX5D_2969567316(node_3103787056, 0).id, {parent: line_3103787058[line_3103787058_Idx], first: 0, last: 1});
        addLine_3070232621(parent_3103788250, 0, line_3103787058, line_3103787058_Idx);
        line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103788250[0], bounds: rect_2080374802((prevIndent_3103788251 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788251, depth: addInt(parent_3103788250[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 2), result_3103787057, line_3103787058, line_3103787058_Idx);
        addLine_3070232621(parent_3103788250, 0, line_3103787058, line_3103787058_Idx);
        var line2_3103788360 = line_3103787058[line_3103787058_Idx];
        line_3103787058[line_3103787058_Idx] = {id: newId_2181038297(), parent: parent_3103788250[0], bounds: rect_2080374802((prevIndent_3103788251 * config_3103785173[0].indent), 0.0, 0.0, 0.0), indent: prevIndent_3103788251, depth: addInt(parent_3103788250[0].depth, 1), orientation: 0, node: null, text: [], font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})};
        divLine_3103788313.bounds.w = max_33555642(line1_3103788308.bounds.w, line2_3103788360.bounds.w);
        divLine_3103788313.parent.bounds.w = divLine_3103788313.bounds.w;
        var shorterLine_3103788361 = line1_3103788308;
        var longerLine_3103788362 = line2_3103788360;
        if ((longerLine_3103788362.bounds.w < shorterLine_3103788361.bounds.w)) {
        shorterLine_3103788361 = line2_3103788360;
        longerLine_3103788362 = line1_3103788308;
        }
        
        var lengthDiff_3103788363 = (longerLine_3103788362.bounds.w - shorterLine_3103788361.bounds.w);
        HEX2BHEX3D_2080374895(shorterLine_3103788361.bounds, "x", (lengthDiff_3103788363 / 2.0));
        lastUsedChild_3103787206 = 2;
        } finally {
        if ((first_3103788255 < (parent_3103788250[0].children).length)) {
        HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: parent_3103788250[0], first: first_3103788255, last: (parent_3103788250[0].children).length});
        }
        
        }
        } finally {
        if (true) {
        addLine_3070232621(containerLineHEX60gensym91_3103788203, 0, line_3103787058, line_3103787058_Idx);
        HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(oldLineHEX60gensym91_3103788202, 0, containerLineHEX60gensym91_3103788203[0]));
        line_3103787058[line_3103787058_Idx] = oldLineHEX60gensym91_3103788202[0];
        }
        
        }
        }
        else {
          if (renderParens_3103788199) {
          var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([40], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
          }
          
          createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
          var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([32], config_3103785173[0].colors.separator, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
          createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
          var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785204([32], config_3103785173[0].colors.separator, config_3103785173[0].fontRegular, input_3103787055.measureText, null));
          createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 2), result_3103787057, line_3103787058, line_3103787058_Idx);
          if (renderParens_3103788199) {
          var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([41], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
          }
          
          lastUsedChild_3103787206 = 2;
        }
        
        break;
      case 1:
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
        lastUsedChild_3103787206 = 1;
        break;
      case 2:
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
        lastUsedChild_3103787206 = 1;
        break;
      default: 
        if ((0 < len_2969567320(node_3103787056))) {
        createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, 0), result_3103787057, line_3103787058, line_3103787058_Idx);
        }
        
        var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([40], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
        Label33: {
          var i_3103788372 = 0;
          var colontmp__2936013327 = 0;
          colontmp__2936013327 = len_2969567320(node_3103787056);
          var i_2936013328 = 1;
          Label34: {
              Label35: while (true) {
              if (!(i_2936013328 < colontmp__2936013327)) break Label35;
                i_3103788372 = i_2936013328;
                if ((1 < i_3103788372)) {
                var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([44,32], [nimCopy(null, config_3103785173[0].colors.separator, NTI33554449), [38,101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100]], config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
                }
                
                createLayoutLineForNode_3103787053(ctx_3103787054, input_3103787055, HEX5BHEX5D_2969567316(node_3103787056, i_3103788372), result_3103787057, line_3103787058, line_3103787058_Idx);
                i_2936013328 = addInt(i_2936013328, 1);
              }
          };
        };
        var _ = add_3070232595(line_3103787058, line_3103787058_Idx, newTextNode_3103785217([41], config_3103785173[0].colors.separatorParen, config_3103785173[0].fontRegular, input_3103787055.measureText, null, none_3103785226()));
        lastUsedChild_3103787206 = subInt(len_2969567320(node_3103787056), 1);
        break;
      }
      }
      else {
        var fmtRes_3103788381 = [mnewString(0)];
        fmtRes_3103788381[0].push.apply(fmtRes_3103788381[0], [99,114,101,97,116,101,76,97,121,111,117,116,76,105,110,101,70,111,114,78,111,100,101,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,32,102,111,114,32]);;
        formatValue_3103788382(fmtRes_3103788381, 0, node_3103787056.kind, []);
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3103788381[0], NTI33554449)]);
      }
      }}}}}}}}}}}}
    };
    } finally {
    createLayoutLineForRemainingChildren_3103787059(ctx_3103787054, input_3103787055, node_3103787056, addInt(lastUsedChild_3103787206, 1), result_3103787057, line_3103787058, line_3103787058_Idx);
    }
    } finally {
    if (renderInline_3103787098) {
    addLine_3070232621(containerLineHEX60gensym42_3103787159, 0, line_3103787058, line_3103787058_Idx);
    HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, add_3070232595(oldLineHEX60gensym42_3103787158, 0, containerLineHEX60gensym42_3103787159[0]));
    line_3103787058[line_3103787058_Idx] = oldLineHEX60gensym42_3103787158[0];
    }
    
    }
    } finally {
    if ((first_3103787103 < (prevLine_3103787099.children).length)) {
    HEX5BHEX5DHEX3D_3103785508(result_3103787057.nodeToVisualNode, node_3103787056.id, {parent: prevLine_3103787099, first: first_3103787103, last: (prevLine_3103787099.children).length});
    }
    
    }
  };

  
}

function centerChildrenVertically_3103788408(vnode_3103788409) {
    var height_3103788410 = vnode_3103788409.bounds.h;
    Label1: {
      var child_3103788414 = null;
      var i_2936013354 = 0;
      var L_2936013355 = (vnode_3103788409.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936013354 < L_2936013355)) break Label3;
            child_3103788414 = vnode_3103788409.children[chckIndx(i_2936013354, 0, (vnode_3103788409.children).length - 1)];
            if ((vnode_3103788409.orientation == 0)) {
            var heightDiff_3103788420 = (height_3103788410 - child_3103788414.bounds.h);
            HEX2BHEX3D_2080374895(child_3103788414.bounds, "y", (heightDiff_3103788420 * 0.5));
            }
            
            centerChildrenVertically_3103788408(child_3103788414);
            i_2936013354 = addInt(i_2936013354, 1);
            if (!(((vnode_3103788409.children).length == L_2936013355))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function computeNodeLayoutImpl2_3103788425(ctx_3103788426, input_3103788427) {
  var result_3103788428 = [({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})];

    var node_3103788429 = input_3103788427.node;
    result_3103788428[0] = nimCopy(result_3103788428[0], {node: node_3103788429, root: {id: newId_2181038297(), orientation: 1, parent: null, node: null, text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false}), depth: 0}, nodeToVisualNode: initTable_3103788430(32)}, NTI3070230559);
    var line_3103788441 = [{id: newId_2181038297(), node: node_3103788429, parent: result_3103788428[0].root, orientation: 0, depth: addInt(result_3103788428[0].root.depth, 1), text: [], bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), indent: 0, font: [], fontSize: 0.0, render: null, children: [], colors: [], styleOverride: ({val: {}, has: false}), background: ({val: [], has: false})}];
    createLayoutLineForNode_3103787053(ctx_3103788426, input_3103788427, node_3103788429, result_3103788428[0], line_3103788441, 0);
    addLine_3070232621(line_3103788441[0], "parent", line_3103788441, 0);
    centerChildrenVertically_3103788408(result_3103788428[0].root);

  return result_3103788428[0];

}

function computeNodeLayoutImpl_2986345291(ctx_2986345292, nodeLayoutInput_2986345293) {
  var result_2986440996 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    dependOnCurrentRevision_2986397972(ctx_2986345292);
    result_2986440996 = nimCopy(result_2986440996, computeNodeLayoutImpl2_3103788425(ctx_2986345292, nodeLayoutInput_2986345293), NTI3070230559);
    break BeforeRet;
  };

  return result_2986440996;

}

function hash_3070232696(input_3070232697) {
  var result_3070232698 = 0;

    result_3070232698 = HEX21HEX26_1325400067(hash_2969569587(input_3070232697.node), hash_2181038324(input_3070232697.selectedNode));
    result_3070232698 = HEX21HEX24_1325400082(result_3070232698);

  return result_3070232698;

}

function len_3070232822(t_3070232825) {
  var result_3070232826 = 0;

    result_3070232826 = t_3070232825.counter;

  return result_3070232826;

}

function HEX3DHEX3D_3070232535(x_3070232537, y_3070232538) {
  var result_3070232539 = false;

  BeforeRet: {
    var sameObject_3070232546 = false;
    sameObject_3070232546 = x_3070232537 === y_3070232538
    if (sameObject_3070232546) {
    result_3070232539 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070232537).length == (y_3070232538).length))) {
    result_3070232539 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070232560 = 0;
      var colontmp__2936013370 = 0;
      colontmp__2936013370 = subInt((x_3070232537).length, 1);
      var res_2936013371 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013371 <= colontmp__2936013370)) break Label3;
            i_3070232560 = res_2936013371;
            if (!(eqStrings(x_3070232537[chckIndx(i_3070232560, 0, (x_3070232537).length - 1)], y_3070232538[chckIndx(i_3070232560, 0, (y_3070232538).length - 1)]))) {
            result_3070232539 = false;
            break BeforeRet;
            }
            
            res_2936013371 = addInt(res_2936013371, 1);
          }
      };
    };
    result_3070232539 = true;
    break BeforeRet;
  };

  return result_3070232539;

}

function HEX3DHEX3D_2332033735(x_2332033737, y_2332033738) {
  var result_2332033739 = false;

  BeforeRet: {
    if (!((x_2332033737.x == y_2332033738.x))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033737.y == y_2332033738.y))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033737.w == y_2332033738.w))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033737.h == y_2332033738.h))) {
    result_2332033739 = false;
    break BeforeRet;
    }
    
    result_2332033739 = true;
    break BeforeRet;
  };

  return result_2332033739;

}

function HEX3DHEX3D_3070232569(x_3070232571, y_3070232572) {
  var result_3070232573 = false;

  BeforeRet: {
    var sameObject_3070232580 = false;
    sameObject_3070232580 = x_3070232571 === y_3070232572
    if (sameObject_3070232580) {
    result_3070232573 = true;
    break BeforeRet;
    }
    
    if (!(((x_3070232571).length == (y_3070232572).length))) {
    result_3070232573 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_3070232594 = 0;
      var colontmp__2936013374 = 0;
      colontmp__2936013374 = subInt((x_3070232571).length, 1);
      var res_2936013375 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936013375 <= colontmp__2936013374)) break Label3;
            i_3070232594 = res_2936013375;
            if (!(HEX3DHEX3D_3070232518(x_3070232571[chckIndx(i_3070232594, 0, (x_3070232571).length - 1)], y_3070232572[chckIndx(i_3070232594, 0, (y_3070232572).length - 1)]))) {
            result_3070232573 = false;
            break BeforeRet;
            }
            
            res_2936013375 = addInt(res_2936013375, 1);
          }
      };
    };
    result_3070232573 = true;
    break BeforeRet;
  };

  return result_3070232573;

}

function HEX3DHEX3D_3070232518(a_3070232519, b_3070232520) {
  var result_3070232521 = false;

  BeforeRet: {
    if ((a_3070232519 == null)) {
    result_3070232521 = (b_3070232520 == null);
    break BeforeRet;
    }
    
    if ((b_3070232520 == null)) {
    result_3070232521 = false;
    break BeforeRet;
    }
    
    if (!(eqStrings(a_3070232519.text, b_3070232520.text))) {
    result_3070232521 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232519.node == b_3070232520.node))) {
    result_3070232521 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070232535(a_3070232519.colors, b_3070232520.colors))) {
    result_3070232521 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2332033735(a_3070232519.bounds, b_3070232520.bounds))) {
    result_3070232521 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232519.render == b_3070232520.render))) {
    result_3070232521 = false;
    break BeforeRet;
    }
    
    result_3070232521 = HEX3DHEX3D_3070232569(a_3070232519.children, b_3070232520.children);
    break BeforeRet;
  };

  return result_3070232521;

}

function getOrDefault_3070233411(t_3070233414, key_3070233415) {
  var result_3070233416 = null;

    var hcHEX60gensym49_3070233419 = [0];
    var indexHEX60gensym49_3070233426 = rawGet_3070233124(t_3070233414, key_3070233415, hcHEX60gensym49_3070233419, 0);
    if ((0 <= indexHEX60gensym49_3070233426)) {
    result_3070233416 = t_3070233414.data[chckIndx(indexHEX60gensym49_3070233426, 0, (t_3070233414.data).length - 1)].Field2;
    }
    

  return result_3070233416;

}

function HEX3DHEX3D_3070232766(s_3070232769, t_3070232770) {
  var result_3070232771 = false;

  BeforeRet: {
    if ((s_3070232769.counter == t_3070232770.counter)) {
    Label1: {
      var keyHEX60gensym43_3070233075 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var valHEX60gensym43_3070233076 = null;
      var L_2936013363 = len_3070232822(s_3070232769);
      Label2: {
        var h_2936013365 = 0;
        var colontmp__2936013366 = 0;
        colontmp__2936013366 = (s_3070232769.data).length - 1;
        var res_2936013367 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936013367 <= colontmp__2936013366)) break Label4;
              h_2936013365 = res_2936013367;
              if (isFilled_1308622880(s_3070232769.data[chckIndx(h_2936013365, 0, (s_3070232769.data).length - 1)].Field0)) {
              keyHEX60gensym43_3070233075 = nimCopy(keyHEX60gensym43_3070233075, s_3070232769.data[chckIndx(h_2936013365, 0, (s_3070232769.data).length - 1)].Field1, NTI2181038083);
              valHEX60gensym43_3070233076 = s_3070232769.data[chckIndx(h_2936013365, 0, (s_3070232769.data).length - 1)].Field2;
              if (!(hasKey_3070233117(t_3070232770, keyHEX60gensym43_3070233075))) {
              result_3070232771 = false;
              break BeforeRet;
              }
              
              if (!(HEX3DHEX3D_3070232518(getOrDefault_3070233411(t_3070232770, keyHEX60gensym43_3070233075), valHEX60gensym43_3070233076))) {
              result_3070232771 = false;
              break BeforeRet;
              }
              
              if (!((len_3070232822(s_3070232769) == L_2936013363))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(701, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936013367 = addInt(res_2936013367, 1);
            }
        };
      };
    };
    result_3070232771 = true;
    break BeforeRet;
    }
    
  };

  return result_3070232771;

}

function HEX3DHEX3D_3070232699(a_3070232700, b_3070232701) {
  var result_3070232702 = false;

  BeforeRet: {
    if ((a_3070232700 == null)) {
    result_3070232702 = (b_3070232701 == null);
    break BeforeRet;
    }
    
    if ((b_3070232701 == null)) {
    result_3070232702 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232700.revision == b_3070232701.revision))) {
    result_3070232702 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232700.node == b_3070232701.node))) {
    result_3070232702 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_2181038320(a_3070232700.selectedNode, b_3070232701.selectedNode))) {
    result_3070232702 = false;
    break BeforeRet;
    }
    
    if (!(HEX3DHEX3D_3070232766(a_3070232700.replacements, b_3070232701.replacements))) {
    result_3070232702 = false;
    break BeforeRet;
    }
    
    if (!((a_3070232700.renderDivisionVertically == b_3070232701.renderDivisionVertically))) {
    result_3070232702 = false;
    break BeforeRet;
    }
    
    result_3070232702 = true;
    break BeforeRet;
  };

  return result_3070232702;

}

function rawGet_2986387535(t_2986387538, key_2986387539, hc_2986387540, hc_2986387540_Idx) {
  var result_2986387541 = 0;

  BeforeRet: {
    hc_2986387540[hc_2986387540_Idx] = hash_3070232696(key_2986387539);
    if ((hc_2986387540[hc_2986387540_Idx] == 0)) {
    hc_2986387540[hc_2986387540_Idx] = 314159265;
    }
    
    if (((t_2986387538.data).length == 0)) {
    result_2986387541 = -1;
    break BeforeRet;
    }
    
    var h_2986387627 = (hc_2986387540[hc_2986387540_Idx] & (t_2986387538.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986387538.data[chckIndx(h_2986387627, 0, (t_2986387538.data).length - 1)].Field0)) break Label2;
          if (((t_2986387538.data[chckIndx(h_2986387627, 0, (t_2986387538.data).length - 1)].Field0 == hc_2986387540[hc_2986387540_Idx]) && HEX3DHEX3D_3070232699(t_2986387538.data[chckIndx(h_2986387627, 0, (t_2986387538.data).length - 1)].Field1, key_2986387539))) {
          result_2986387541 = h_2986387627;
          break BeforeRet;
          }
          
          h_2986387627 = nextTry_1308622883(h_2986387627, (t_2986387538.data).length - 1);
        }
    };
    result_2986387541 = subInt(-1, h_2986387627);
  };

  return result_2986387541;

}

function getOrDefault_2986387525(t_2986387528, key_2986387529, default_2986387530) {
    var Temporary1;

  var result_2986387531 = null;

    var hcHEX60gensym317_2986387534 = [0];
    var indexHEX60gensym317_2986387889 = rawGet_2986387535(t_2986387528, key_2986387529, hcHEX60gensym317_2986387534, 0);
    if ((0 <= indexHEX60gensym317_2986387889)) {
    Temporary1 = t_2986387528.data[chckIndx(indexHEX60gensym317_2986387889, 0, (t_2986387528.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986387530;
    }
    
    result_2986387531 = Temporary1;

  return result_2986387531;

}

function newDoublyLinkedNode_2986388014(value_2986388016) {
  var result_2986388017 = null;

    result_2986388017 = ({next: null, prev: null, value: ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})})});
    result_2986388017.value = nimCopy(result_2986388017.value, value_2986388016, NTI2986345314);

  return result_2986388017;

}

function mustRehash_2986388364(t_2986388366) {
  var result_2986388367 = false;

    if (!((t_2986388366.counter < (t_2986388366.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986388367 = ((mulInt((t_2986388366.data).length, 2) < mulInt(t_2986388366.counter, 3)) || (subInt((t_2986388366.data).length, t_2986388366.counter) < 4));

  return result_2986388367;

}

function rawInsert_2986389057(t_2986389061, data_2986389062, data_2986389062_Idx, key_2986389063, val_2986389064, hc_2986389065, h_2986389066) {
    data_2986389062[data_2986389062_Idx][chckIndx(h_2986389066, 0, (data_2986389062[data_2986389062_Idx]).length - 1)].Field1 = key_2986389063;
    data_2986389062[data_2986389062_Idx][chckIndx(h_2986389066, 0, (data_2986389062[data_2986389062_Idx]).length - 1)].Field2 = val_2986389064;
    data_2986389062[data_2986389062_Idx][chckIndx(h_2986389066, 0, (data_2986389062[data_2986389062_Idx]).length - 1)].Field0 = hc_2986389065;

  
}

function enlarge_2986388621(t_2986388624) {
    var n_2986388627 = [];
    n_2986388627 = new Array(chckRange(mulInt((t_2986388624.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986388624.data).length, 2), 0, 2147483647) ; ++i) { n_2986388627[i] = {Field0: 0, Field1: null, Field2: null}; }    var Temporary1 = t_2986388624.data; t_2986388624.data = n_2986388627; n_2986388627 = Temporary1;    Label2: {
      var i_2986388725 = 0;
      var colontmp__2936013379 = 0;
      colontmp__2936013379 = (n_2986388627).length - 1;
      var res_2936013380 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013380 <= colontmp__2936013379)) break Label4;
            i_2986388725 = res_2936013380;
            var eh_2986388806 = n_2986388627[chckIndx(i_2986388725, 0, (n_2986388627).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986388806)) {
            var j_2986388810 = (eh_2986388806 & (t_2986388624.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986388624.data[chckIndx(j_2986388810, 0, (t_2986388624.data).length - 1)].Field0)) break Label6;
                  j_2986388810 = nextTry_1308622883(j_2986388810, (t_2986388624.data).length - 1);
                }
            };
            rawInsert_2986389057(t_2986388624, t_2986388624, "data", n_2986388627[chckIndx(i_2986388725, 0, (n_2986388627).length - 1)].Field1, n_2986388627[chckIndx(i_2986388725, 0, (n_2986388627).length - 1)].Field2, eh_2986388806, j_2986388810);
            }
            
            res_2936013380 = addInt(res_2936013380, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986389307(t_2986389310, key_2986389311, hc_2986389312) {
  var result_2986389313 = 0;

  BeforeRet: {
    if (((t_2986389310.data).length == 0)) {
    result_2986389313 = -1;
    break BeforeRet;
    }
    
    var h_2986389398 = (hc_2986389312 & (t_2986389310.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986389310.data[chckIndx(h_2986389398, 0, (t_2986389310.data).length - 1)].Field0)) break Label2;
          if (((t_2986389310.data[chckIndx(h_2986389398, 0, (t_2986389310.data).length - 1)].Field0 == hc_2986389312) && HEX3DHEX3D_3070232699(t_2986389310.data[chckIndx(h_2986389398, 0, (t_2986389310.data).length - 1)].Field1, key_2986389311))) {
          result_2986389313 = h_2986389398;
          break BeforeRet;
          }
          
          h_2986389398 = nextTry_1308622883(h_2986389398, (t_2986389310.data).length - 1);
        }
    };
    result_2986389313 = subInt(-1, h_2986389398);
  };

  return result_2986389313;

}

function HEX5BHEX5DHEX3D_2986388096(t_2986388099, key_2986388100, val_2986388101) {
    if (((t_2986388099.data).length == 0)) {
    var correctSizeHEX60gensym322_2986388184 = slotsNeeded_1308622891(32);
    t_2986388099.counter = 0;
    t_2986388099.data = new Array(chckRange(correctSizeHEX60gensym322_2986388184, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym322_2986388184, 0, 2147483647) ; ++i) { t_2986388099.data[i] = {Field0: 0, Field1: null, Field2: null}; }    }
    
    var hc_2986388189 = [0];
    var index_2986388196 = rawGet_2986387535(t_2986388099, key_2986388100, hc_2986388189, 0);
    if ((0 <= index_2986388196)) {
    t_2986388099.data[chckIndx(index_2986388196, 0, (t_2986388099.data).length - 1)].Field2 = val_2986388101;
    }
    else {
      if (((t_2986388099.data).length == 0)) {
      var correctSizeHEX60gensym325_2986388359 = slotsNeeded_1308622891(32);
      t_2986388099.counter = 0;
      t_2986388099.data = new Array(chckRange(correctSizeHEX60gensym325_2986388359, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym325_2986388359, 0, 2147483647) ; ++i) { t_2986388099.data[i] = {Field0: 0, Field1: null, Field2: null}; }      }
      
      if (mustRehash_2986388364(t_2986388099)) {
      enlarge_2986388621(t_2986388099);
      index_2986388196 = rawGetKnownHC_2986389307(t_2986388099, key_2986388100, hc_2986388189[0]);
      }
      
      index_2986388196 = subInt(-1, index_2986388196);
      rawInsert_2986389057(t_2986388099, t_2986388099, "data", key_2986388100, val_2986388101, hc_2986388189[0], index_2986388196);
      t_2986388099.counter = addInt(t_2986388099.counter, 1);
    }
    

  
}

function prepend_2986389703(L_2986389705, n_2986389706) {
    n_2986389706.prev = null;
    n_2986389706.next = L_2986389705.head;
    if (!((L_2986389705.head == null))) {
    if (!((L_2986389705.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_2986389705.head.prev = n_2986389706;
    }
    
    L_2986389705.head = n_2986389706;
    if ((L_2986389705.tail == null)) {
    L_2986389705.tail = n_2986389706;
    }
    

  
}

function rawGet_2986389934(t_2986389937, key_2986389938, hc_2986389939, hc_2986389939_Idx) {
  var result_2986389940 = 0;

  BeforeRet: {
    hc_2986389939[hc_2986389939_Idx] = hash_3070232696(key_2986389938);
    if ((hc_2986389939[hc_2986389939_Idx] == 0)) {
    hc_2986389939[hc_2986389939_Idx] = 314159265;
    }
    
    if (((t_2986389937.data).length == 0)) {
    result_2986389940 = -1;
    break BeforeRet;
    }
    
    var h_2986390026 = (hc_2986389939[hc_2986389939_Idx] & (t_2986389937.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986389937.data[chckIndx(h_2986390026, 0, (t_2986389937.data).length - 1)].Field0)) break Label2;
          if (((t_2986389937.data[chckIndx(h_2986390026, 0, (t_2986389937.data).length - 1)].Field0 == hc_2986389939[hc_2986389939_Idx]) && HEX3DHEX3D_3070232699(t_2986389937.data[chckIndx(h_2986390026, 0, (t_2986389937.data).length - 1)].Field1, key_2986389938))) {
          result_2986389940 = h_2986390026;
          break BeforeRet;
          }
          
          h_2986390026 = nextTry_1828716586(h_2986390026, (t_2986389937.data).length - 1);
        }
    };
    result_2986389940 = subInt(-1, h_2986390026);
  };

  return result_2986389940;

}

function exclImpl_2986389928(s_2986389930, key_2986389931) {
          var Temporary5;

  var result_2986389932 = false;

  BeforeRet: {
    var hc_2986389933 = [0];
    var i_2986390288 = rawGet_2986389934(s_2986389930, key_2986389931, hc_2986389933, 0);
    var msk_2986390292 = (s_2986389930.data).length - 1;
    result_2986389932 = true;
    if ((0 <= i_2986390288)) {
    result_2986389932 = false;
    s_2986389930.counter = subInt(s_2986389930.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_2986390298 = i_2986390288;
          var r_2986390299 = j_2986390298;
          s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)].Field0 = 0;
          s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)].Field1 = null;
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_2986390288 = (addInt(i_2986390288, 1) & msk_2986390292);
                if (isEmpty_1828716580(s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_2986390299 = (s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)].Field0 & msk_2986390292);
                if (!(((((r_2986390299 <= i_2986390288) && (j_2986390298 < r_2986390299)) || ((j_2986390298 < r_2986390299) && (i_2986390288 < j_2986390298))) || ((i_2986390288 < j_2986390298) && (r_2986390299 <= i_2986390288))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)];
          s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)] = genericReset(s_2986389930.data[chckIndx(i_2986390288, 0, (s_2986389930.data).length - 1)], NTI2986345370);
          s_2986389930.data[chckIndx(j_2986390298, 0, (s_2986389930.data).length - 1)] = nimCopy(s_2986389930.data[chckIndx(j_2986390298, 0, (s_2986389930.data).length - 1)], Temporary5, NTI2986345370);
        }
    };
    }
    
  };

  return result_2986389932;

}

function excl_2986389913(s_2986389915, key_2986389916) {
    var _ = exclImpl_2986389928(s_2986389915, key_2986389916);

  
}

function len_2986391052(t_2986391055) {
  var result_2986391056 = 0;

    result_2986391056 = t_2986391055.counter;

  return result_2986391056;

}

function len_2986390969(cache_2986390972) {
  var result_2986390973 = 0;

    result_2986390973 = len_2986391052(cache_2986390972.table);

  return result_2986390973;

}

function mustRehash_2986391193(t_2986391195) {
  var result_2986391196 = false;

    if (!((t_2986391195.counter < (t_2986391195.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986391196 = ((mulInt((t_2986391195.data).length, 2) < mulInt(t_2986391195.counter, 3)) || (subInt((t_2986391195.data).length, t_2986391195.counter) < 4));

  return result_2986391196;

}

function rawGetKnownHC_2986391799(t_2986391802, key_2986391803, hc_2986391804) {
  var result_2986391805 = 0;

  BeforeRet: {
    if (((t_2986391802.data).length == 0)) {
    result_2986391805 = -1;
    break BeforeRet;
    }
    
    var h_2986391890 = (hc_2986391804 & (t_2986391802.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_2986391802.data[chckIndx(h_2986391890, 0, (t_2986391802.data).length - 1)].Field0)) break Label2;
          if (((t_2986391802.data[chckIndx(h_2986391890, 0, (t_2986391802.data).length - 1)].Field0 == hc_2986391804) && HEX3DHEX3D_3070232699(t_2986391802.data[chckIndx(h_2986391890, 0, (t_2986391802.data).length - 1)].Field1, key_2986391803))) {
          result_2986391805 = h_2986391890;
          break BeforeRet;
          }
          
          h_2986391890 = nextTry_1828716586(h_2986391890, (t_2986391802.data).length - 1);
        }
    };
    result_2986391805 = subInt(-1, h_2986391890);
  };

  return result_2986391805;

}

function rawInsert_2986392299(s_2986392301, data_2986392302, data_2986392302_Idx, key_2986392303, hc_2986392304, h_2986392305) {
    if (((data_2986392302[data_2986392302_Idx]).length == 0)) {
    var correctSizeHEX60gensym344_2986392388 = slotsNeeded_1828716594(64);
    s_2986392301.counter = 0;
    s_2986392301.data = new Array(chckRange(correctSizeHEX60gensym344_2986392388, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym344_2986392388, 0, 2147483647) ; ++i) { s_2986392301.data[i] = {Field0: 0, Field1: null}; }    }
    
    data_2986392302[data_2986392302_Idx][chckIndx(h_2986392305, 0, (data_2986392302[data_2986392302_Idx]).length - 1)].Field1 = key_2986392303;
    data_2986392302[data_2986392302_Idx][chckIndx(h_2986392305, 0, (data_2986392302[data_2986392302_Idx]).length - 1)].Field0 = hc_2986392304;

  
}

function enlarge_2986391456(s_2986391458) {
    var n_2986391460 = [];
    n_2986391460 = new Array(chckRange(mulInt((s_2986391458.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_2986391458.data).length, 2), 0, 2147483647) ; ++i) { n_2986391460[i] = {Field0: 0, Field1: null}; }    var Temporary1 = s_2986391458.data; s_2986391458.data = n_2986391460; n_2986391460 = Temporary1;    Label2: {
      var i_2986391558 = 0;
      var colontmp__2936013388 = 0;
      colontmp__2936013388 = (n_2986391460).length - 1;
      var res_2936013389 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013389 <= colontmp__2936013388)) break Label4;
            i_2986391558 = res_2936013389;
            if (isFilled_1828716583(n_2986391460[chckIndx(i_2986391558, 0, (n_2986391460).length - 1)].Field0)) {
            var j_2986392134 = subInt(-1, rawGetKnownHC_2986391799(s_2986391458, n_2986391460[chckIndx(i_2986391558, 0, (n_2986391460).length - 1)].Field1, n_2986391460[chckIndx(i_2986391558, 0, (n_2986391460).length - 1)].Field0));
            rawInsert_2986392299(s_2986391458, s_2986391458, "data", n_2986391460[chckIndx(i_2986391558, 0, (n_2986391460).length - 1)].Field1, n_2986391460[chckIndx(i_2986391558, 0, (n_2986391460).length - 1)].Field0, j_2986392134);
            }
            
            res_2936013389 = addInt(res_2936013389, 1);
          }
      };
    };

  
}

function incl_2986391077(s_2986391079, key_2986391080) {
    if (((s_2986391079.data).length == 0)) {
    var correctSizeHEX60gensym337_2986391163 = slotsNeeded_1828716594(64);
    s_2986391079.counter = 0;
    s_2986391079.data = new Array(chckRange(correctSizeHEX60gensym337_2986391163, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym337_2986391163, 0, 2147483647) ; ++i) { s_2986391079.data[i] = {Field0: 0, Field1: null}; }    }
    
    var hc_2986391178 = [0];
    var index_2986391192 = rawGet_2986389934(s_2986391079, key_2986391080, hc_2986391178, 0);
    if ((index_2986391192 < 0)) {
    if (mustRehash_2986391193(s_2986391079)) {
    enlarge_2986391456(s_2986391079);
    index_2986391192 = rawGetKnownHC_2986391799(s_2986391079, key_2986391080, hc_2986391178[0]);
    }
    
    rawInsert_2986392299(s_2986391079, s_2986391079, "data", key_2986391080, hc_2986391178[0], subInt(-1, index_2986391192));
    s_2986391079.counter = addInt(s_2986391079.counter, 1);
    }
    

  
}

function del_2986392655(t_2986392658, key_2986392659) {
    var hc_2986392660 = [0];
    var i_2986392667 = rawGet_2986387535(t_2986392658, key_2986392659, hc_2986392660, 0);
    var mskHEX60gensym36_2986392671 = (t_2986392658.data).length - 1;
    if ((0 <= i_2986392667)) {
    t_2986392658.counter = subInt(t_2986392658.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986392678 = i_2986392667;
            var rHEX60gensym36_2986392679 = jHEX60gensym36_2986392678;
            t_2986392658.data[chckIndx(i_2986392667, 0, (t_2986392658.data).length - 1)].Field0 = 0;
            t_2986392658.data[chckIndx(i_2986392667, 0, (t_2986392658.data).length - 1)].Field1 = null;
            t_2986392658.data[chckIndx(i_2986392667, 0, (t_2986392658.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986392667 = (addInt(i_2986392667, 1) & mskHEX60gensym36_2986392671);
                  if (isEmpty_1308622877(t_2986392658.data[chckIndx(i_2986392667, 0, (t_2986392658.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986392679 = (t_2986392658.data[chckIndx(i_2986392667, 0, (t_2986392658.data).length - 1)].Field0 & mskHEX60gensym36_2986392671);
                  if (!(((((rHEX60gensym36_2986392679 <= i_2986392667) && (jHEX60gensym36_2986392678 < rHEX60gensym36_2986392679)) || ((jHEX60gensym36_2986392678 < rHEX60gensym36_2986392679) && (i_2986392667 < jHEX60gensym36_2986392678))) || ((i_2986392667 < jHEX60gensym36_2986392678) && (rHEX60gensym36_2986392679 <= i_2986392667))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986392658.data[chckIndx(jHEX60gensym36_2986392678, 0, (t_2986392658.data).length - 1)] = nimCopy(t_2986392658.data[chckIndx(jHEX60gensym36_2986392678, 0, (t_2986392658.data).length - 1)], t_2986392658.data[chckIndx(i_2986392667, 0, (t_2986392658.data).length - 1)], NTI2986345350);
          }
      };
    };
    }
    

  
}

function remove_2986393414(L_2986393416, n_2986393417) {
    if ((n_2986393417 == L_2986393416.tail)) {
    L_2986393416.tail = n_2986393417.prev;
    }
    
    if ((n_2986393417 == L_2986393416.head)) {
    L_2986393416.head = n_2986393417.next;
    }
    
    if (!((n_2986393417.next == null))) {
    n_2986393417.next.prev = n_2986393417.prev;
    }
    
    if (!((n_2986393417.prev == null))) {
    n_2986393417.prev.next = n_2986393417.next;
    }
    

  
}

function resize_2986390887(cache_2986390890) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986390890.capacity < len_2986390969(cache_2986390890))) break Label2;
          var t_2986391057 = cache_2986390890.list.tail;
          if (cache_2986390890.recordRemovedKeys) {
          incl_2986391077(cache_2986390890.removedKeys, t_2986391057.value.key);
          }
          
          del_2986392655(cache_2986390890.table, t_2986391057.value.key);
          remove_2986393414(cache_2986390890.list, t_2986391057);
        }
    };

  
}

function addNewNode_2986388006(cache_2986388009, key_2986388010, val_2986388011) {
    var node_2986388032 = newDoublyLinkedNode_2986388014({key: key_2986388010, val: nimCopy(null, val_2986388011, NTI3070230559)});
    HEX5BHEX5DHEX3D_2986388096(cache_2986388009.table, key_2986388010, node_2986388032);
    prepend_2986389703(cache_2986388009.list, node_2986388032);
    if (cache_2986388009.recordRemovedKeys) {
    excl_2986389913(cache_2986388009.removedKeys, key_2986388010);
    }
    
    resize_2986390887(cache_2986388009);

  
}

function HEX5BHEX5DHEX3D_2986387430(cache_2986387433, key_2986387434, val_2986387435) {
    var node_2986387979 = getOrDefault_2986387525(cache_2986387433.table, key_2986387434, null);
    if ((node_2986387979 == null)) {
    addNewNode_2986388006(cache_2986387433, key_2986387434, val_2986387435);
    }
    else {
      node_2986387979.value.val = nimCopy(node_2986387979.value.val, val_2986387435, NTI3070230559);
      remove_2986393414(cache_2986387433.list, node_2986387979);
      prepend_2986389703(cache_2986387433.list, node_2986387979);
    }
    

  
}

function initDoublyLinkedList_2986393870() {
  var result_2986393872 = ({head: null, tail: null});

  return result_2986393872;

}

function initTable_2986393876(initialSize_2986393879) {
  var result_2986393880 = ({data: [], counter: 0});

    var correctSizeHEX60gensym345_2986393882 = slotsNeeded_1308622891(chckRange(initialSize_2986393879, 0, 2147483647));
    result_2986393880.counter = 0;
    result_2986393880.data = new Array(chckRange(correctSizeHEX60gensym345_2986393882, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym345_2986393882, 0, 2147483647) ; ++i) { result_2986393880.data[i] = {Field0: 0, Field1: null, Field2: null}; }
  return result_2986393880;

}

function newLruCache_2986393860(capacity_2986393863, recordRemovedKeys_2986393864) {
  var result_2986393865 = null;

    result_2986393865 = {capacity: capacity_2986393863, list: initDoublyLinkedList_2986393870(), table: initTable_2986393876(correctSize_3019898901(capacity_2986393863)), recordRemovedKeys: recordRemovedKeys_2986393864, removedKeys: ({data: [], counter: 0})};

  return result_2986393865;

}

function newCache_2986393855(capacity_2986393858) {
  var result_2986393859 = null;

    result_2986393859 = newLruCache_2986393860(capacity_2986393858, false);

  return result_2986393859;

}

function init_2986393850(result_2986393853, result_2986393853_Idx, capacity_2986393854) {
    result_2986393853[result_2986393853_Idx] = newCache_2986393855(capacity_2986393854);

  
}

function mustRehash_2986394603(t_2986394605) {
  var result_2986394606 = false;

    if (!((t_2986394605.counter < (t_2986394605.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986394606 = ((mulInt((t_2986394605.data).length, 2) < mulInt(t_2986394605.counter, 3)) || (subInt((t_2986394605.data).length, t_2986394605.counter) < 4));

  return result_2986394606;

}

function rawInsert_2986395296(t_2986395300, data_2986395301, data_2986395301_Idx, key_2986395302, val_2986395303, hc_2986395304, h_2986395305) {
    data_2986395301[data_2986395301_Idx][chckIndx(h_2986395305, 0, (data_2986395301[data_2986395301_Idx]).length - 1)].Field1 = key_2986395302;
    data_2986395301[data_2986395301_Idx][chckIndx(h_2986395305, 0, (data_2986395301[data_2986395301_Idx]).length - 1)].Field2 = val_2986395303;
    data_2986395301[data_2986395301_Idx][chckIndx(h_2986395305, 0, (data_2986395301[data_2986395301_Idx]).length - 1)].Field0 = hc_2986395304;

  
}

function enlarge_2986394860(t_2986394863) {
    var n_2986394866 = [];
    n_2986394866 = new Array(chckRange(mulInt((t_2986394863.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986394863.data).length, 2), 0, 2147483647) ; ++i) { n_2986394866[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_2986394863.data; t_2986394863.data = n_2986394866; n_2986394866 = Temporary1;    Label2: {
      var i_2986394964 = 0;
      var colontmp__2936013396 = 0;
      colontmp__2936013396 = (n_2986394866).length - 1;
      var res_2936013397 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936013397 <= colontmp__2936013396)) break Label4;
            i_2986394964 = res_2936013397;
            var eh_2986395045 = n_2986394866[chckIndx(i_2986394964, 0, (n_2986394866).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986395045)) {
            var j_2986395049 = (eh_2986395045 & (t_2986394863.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986394863.data[chckIndx(j_2986395049, 0, (t_2986394863.data).length - 1)].Field0)) break Label6;
                  j_2986395049 = nextTry_1308622883(j_2986395049, (t_2986394863.data).length - 1);
                }
            };
            rawInsert_2986395296(t_2986394863, t_2986394863, "data", n_2986394866[chckIndx(i_2986394964, 0, (n_2986394866).length - 1)].Field1, n_2986394866[chckIndx(i_2986394964, 0, (n_2986394866).length - 1)].Field2, eh_2986395045, j_2986395049);
            }
            
            res_2936013397 = addInt(res_2936013397, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986395555(t_2986395558, key_2986395559, hc_2986395560) {
  var result_2986395561 = 0;

  BeforeRet: {
    if (((t_2986395558.data).length == 0)) {
    result_2986395561 = -1;
    break BeforeRet;
    }
    
    var h_2986395646 = (hc_2986395560 & (t_2986395558.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986395558.data[chckIndx(h_2986395646, 0, (t_2986395558.data).length - 1)].Field0)) break Label2;
          if (((t_2986395558.data[chckIndx(h_2986395646, 0, (t_2986395558.data).length - 1)].Field0 == hc_2986395560) && (t_2986395558.data[chckIndx(h_2986395646, 0, (t_2986395558.data).length - 1)].Field1 == key_2986395559))) {
          result_2986395561 = h_2986395646;
          break BeforeRet;
          }
          
          h_2986395646 = nextTry_1308622883(h_2986395646, (t_2986395558.data).length - 1);
        }
    };
    result_2986395561 = subInt(-1, h_2986395646);
  };

  return result_2986395561;

}

function HEX5BHEX5DHEX3D_2986393984(t_2986393987, key_2986393988, val_2986393989) {
    if (((t_2986393987.data).length == 0)) {
    var correctSizeHEX60gensym348_2986394073 = slotsNeeded_1308622891(32);
    t_2986393987.counter = 0;
    t_2986393987.data = new Array(chckRange(correctSizeHEX60gensym348_2986394073, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym348_2986394073, 0, 2147483647) ; ++i) { t_2986393987.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_2986394078 = [0];
    var index_2986394435 = rawGet_2986394079(t_2986393987, key_2986393988, hc_2986394078, 0);
    if ((0 <= index_2986394435)) {
    t_2986393987.data[chckIndx(index_2986394435, 0, (t_2986393987.data).length - 1)].Field2 = val_2986393989;
    }
    else {
      if (((t_2986393987.data).length == 0)) {
      var correctSizeHEX60gensym353_2986394598 = slotsNeeded_1308622891(32);
      t_2986393987.counter = 0;
      t_2986393987.data = new Array(chckRange(correctSizeHEX60gensym353_2986394598, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym353_2986394598, 0, 2147483647) ; ++i) { t_2986393987.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_2986394603(t_2986393987)) {
      enlarge_2986394860(t_2986393987);
      index_2986394435 = rawGetKnownHC_2986395555(t_2986393987, key_2986393988, hc_2986394078[0]);
      }
      
      index_2986394435 = subInt(-1, index_2986394435);
      rawInsert_2986395296(t_2986393987, t_2986393987, "data", key_2986393988, val_2986393989, hc_2986394078[0], index_2986394435);
      t_2986393987.counter = addInt(t_2986393987.counter, 1);
    }
    

  
}

function formatValue_2986441021(result_2986441023, result_2986441023_Idx, value_2986441024, specifier_2986441025) {
    formatValue_721420459(result_2986441023, result_2986441023_Idx, HEX24_3003132512(value_2986441024), specifier_2986441025);

  
}

function getAstNode_2986397984(ctxHEX60gensym74_2986397985, idHEX60gensym74_2986397986) {
  var result_2986397988 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym74_2986397989 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym74_2986397986, NTI2181038083), Field1: 0}, NTI3003121689);
    if (contains_2986345382(ctxHEX60gensym74_2986397985.itemsAstNode, itemHEX60gensym74_2986397989)) {
    result_2986397988 = nimCopy(result_2986397988, some_2969567458(HEX5BHEX5D_2986345949(ctxHEX60gensym74_2986397985.itemsAstNode, itemHEX60gensym74_2986397989)), NTI2969567351);
    break BeforeRet;
    }
    
    result_2986397988 = nimCopy(result_2986397988, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2986397988;

}

function recoverValue_2986345255(ctx_2986345256, key_2986345257) {
      var Temporary1;

    var fmtRes_2986441020 = [mnewString(0)];
    fmtRes_2986441020[0].push.apply(fmtRes_2986441020[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,118,97,108,117,101,32,102,111,114,32]);;
    formatValue_2986441021(fmtRes_2986441020, 0, key_2986345257, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441020[0], NTI33554449)]);
      var oHEX60gensym532_2986441031 = getAstNode_2986397984(ctx_2986345256, key_2986345257.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym532_2986441031)) Temporary1 = false; else {        var node_2986441077 = get_2969569134(oHEX60gensym532_2986441031);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986353437(ctx_2986345256.queryCacheValue, node_2986441077, errorValue_3070231215());
    }
    

  
}

function recoverType_2986345258(ctx_2986345259, key_2986345260) {
      var Temporary1;

    var fmtRes_2986441154 = [mnewString(0)];
    fmtRes_2986441154[0].push.apply(fmtRes_2986441154[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,116,121,112,101,32,102,111,114,32]);;
    formatValue_2986441021(fmtRes_2986441154, 0, key_2986345260, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441154[0], NTI33554449)]);
      var oHEX60gensym534_2986441162 = getAstNode_2986397984(ctx_2986345259, key_2986345260.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym534_2986441162)) Temporary1 = false; else {        var node_2986441208 = get_2969569134(oHEX60gensym534_2986441162);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986346720(ctx_2986345259.queryCacheType, node_2986441208, errorType_3070230904());
    }
    

  
}

function recoverSymbol_2986345261(ctx_2986345262, key_2986345263) {
      var Temporary1;

    var fmtRes_2986441285 = [mnewString(0)];
    fmtRes_2986441285[0].push.apply(fmtRes_2986441285[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,32,102,111,114,32]);;
    formatValue_2986441021(fmtRes_2986441285, 0, key_2986345263, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441285[0], NTI33554449)]);
      var oHEX60gensym536_2986441293 = getAstNode_2986397984(ctx_2986345262, key_2986345263.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym536_2986441293)) Temporary1 = false; else {        var node_2986441339 = get_2969569134(oHEX60gensym536_2986441293);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986357707(ctx_2986345262.queryCacheSymbol, node_2986441339, none_2986407420());
    }
    

  
}

function recoverSymbols_2986345264(ctx_2986345265, key_2986345266) {
      var Temporary1;

    var fmtRes_2986441418 = [mnewString(0)];
    fmtRes_2986441418[0].push.apply(fmtRes_2986441418[0], [91,99,111,109,112,105,108,101,114,93,32,82,101,99,111,118,101,114,105,110,103,32,115,121,109,98,111,108,115,32,102,111,114,32]);;
    formatValue_2986441021(fmtRes_2986441418, 0, key_2986345266, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986441418[0], NTI33554449)]);
      var oHEX60gensym538_2986441426 = getAstNode_2986397984(ctx_2986345265, key_2986345266.Field0.Field0);
      if (!isSome_2969569114(oHEX60gensym538_2986441426)) Temporary1 = false; else {        var node_2986441472 = get_2969569134(oHEX60gensym538_2986441426);
        Temporary1 = true;      }    if (Temporary1) {
    HEX5BHEX5DHEX3D_2986361969(ctx_2986345265.queryCacheSymbols, node_2986441472, newTable_2986441536(32));
    }
    

  
}

function initDoublyLinkedList_2986396190() {
  var result_2986396192 = ({head: null, tail: null});

  return result_2986396192;

}

function initTable_2986396196(initialSize_2986396199) {
  var result_2986396200 = ({data: [], counter: 0});

    var correctSizeHEX60gensym361_2986396202 = slotsNeeded_1308622891(chckRange(initialSize_2986396199, 0, 2147483647));
    result_2986396200.counter = 0;
    result_2986396200.data = new Array(chckRange(correctSizeHEX60gensym361_2986396202, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym361_2986396202, 0, 2147483647) ; ++i) { result_2986396200.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396200;

}

function newLruCache_2986396180(capacity_2986396183, recordRemovedKeys_2986396184) {
  var result_2986396185 = null;

    result_2986396185 = {capacity: capacity_2986396183, list: initDoublyLinkedList_2986396190(), table: initTable_2986396196(correctSize_3019898901(capacity_2986396183)), recordRemovedKeys: recordRemovedKeys_2986396184, removedKeys: ({data: [], counter: 0})};

  return result_2986396185;

}

function newCache_2986396175(capacity_2986396178) {
  var result_2986396179 = null;

    result_2986396179 = newLruCache_2986396180(capacity_2986396178, false);

  return result_2986396179;

}

function init_2986396170(result_2986396173, result_2986396173_Idx, capacity_2986396174) {
    result_2986396173[result_2986396173_Idx] = newCache_2986396175(capacity_2986396174);

  
}

function initDoublyLinkedList_2986396288() {
  var result_2986396290 = ({head: null, tail: null});

  return result_2986396290;

}

function initTable_2986396294(initialSize_2986396297) {
  var result_2986396298 = ({data: [], counter: 0});

    var correctSizeHEX60gensym363_2986396300 = slotsNeeded_1308622891(chckRange(initialSize_2986396297, 0, 2147483647));
    result_2986396298.counter = 0;
    result_2986396298.data = new Array(chckRange(correctSizeHEX60gensym363_2986396300, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym363_2986396300, 0, 2147483647) ; ++i) { result_2986396298.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396298;

}

function newLruCache_2986396278(capacity_2986396281, recordRemovedKeys_2986396282) {
  var result_2986396283 = null;

    result_2986396283 = {capacity: capacity_2986396281, list: initDoublyLinkedList_2986396288(), table: initTable_2986396294(correctSize_3019898901(capacity_2986396281)), recordRemovedKeys: recordRemovedKeys_2986396282, removedKeys: ({data: [], counter: 0})};

  return result_2986396283;

}

function newCache_2986396273(capacity_2986396276) {
  var result_2986396277 = null;

    result_2986396277 = newLruCache_2986396278(capacity_2986396276, false);

  return result_2986396277;

}

function init_2986396268(result_2986396271, result_2986396271_Idx, capacity_2986396272) {
    result_2986396271[result_2986396271_Idx] = newCache_2986396273(capacity_2986396272);

  
}

function initDoublyLinkedList_2986396386() {
  var result_2986396388 = ({head: null, tail: null});

  return result_2986396388;

}

function initTable_2986396392(initialSize_2986396395) {
  var result_2986396396 = ({data: [], counter: 0});

    var correctSizeHEX60gensym365_2986396398 = slotsNeeded_1308622891(chckRange(initialSize_2986396395, 0, 2147483647));
    result_2986396396.counter = 0;
    result_2986396396.data = new Array(chckRange(correctSizeHEX60gensym365_2986396398, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym365_2986396398, 0, 2147483647) ; ++i) { result_2986396396.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396396;

}

function newLruCache_2986396376(capacity_2986396379, recordRemovedKeys_2986396380) {
  var result_2986396381 = null;

    result_2986396381 = {capacity: capacity_2986396379, list: initDoublyLinkedList_2986396386(), table: initTable_2986396392(correctSize_3019898901(capacity_2986396379)), recordRemovedKeys: recordRemovedKeys_2986396380, removedKeys: ({data: [], counter: 0})};

  return result_2986396381;

}

function newCache_2986396371(capacity_2986396374) {
  var result_2986396375 = null;

    result_2986396375 = newLruCache_2986396376(capacity_2986396374, false);

  return result_2986396375;

}

function init_2986396366(result_2986396369, result_2986396369_Idx, capacity_2986396370) {
    result_2986396369[result_2986396369_Idx] = newCache_2986396371(capacity_2986396370);

  
}

function initDoublyLinkedList_2986396484() {
  var result_2986396486 = ({head: null, tail: null});

  return result_2986396486;

}

function initTable_2986396490(initialSize_2986396493) {
  var result_2986396494 = ({data: [], counter: 0});

    var correctSizeHEX60gensym367_2986396496 = slotsNeeded_1308622891(chckRange(initialSize_2986396493, 0, 2147483647));
    result_2986396494.counter = 0;
    result_2986396494.data = new Array(chckRange(correctSizeHEX60gensym367_2986396496, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym367_2986396496, 0, 2147483647) ; ++i) { result_2986396494.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }
  return result_2986396494;

}

function newLruCache_2986396474(capacity_2986396477, recordRemovedKeys_2986396478) {
  var result_2986396479 = null;

    result_2986396479 = {capacity: capacity_2986396477, list: initDoublyLinkedList_2986396484(), table: initTable_2986396490(correctSize_3019898901(capacity_2986396477)), recordRemovedKeys: recordRemovedKeys_2986396478, removedKeys: ({data: [], counter: 0})};

  return result_2986396479;

}

function newCache_2986396469(capacity_2986396472) {
  var result_2986396473 = null;

    result_2986396473 = newLruCache_2986396474(capacity_2986396472, false);

  return result_2986396473;

}

function init_2986396464(result_2986396467, result_2986396467_Idx, capacity_2986396468) {
    result_2986396467[result_2986396467_Idx] = newCache_2986396469(capacity_2986396468);

  
}

function initTable_2986396539(initialSize_2986396542) {
  var result_2986396543 = ({data: [], counter: 0});

    var correctSizeHEX60gensym371_2986396545 = slotsNeeded_1308622891(chckRange(initialSize_2986396542, 0, 2147483647));
    result_2986396543.counter = 0;
    result_2986396543.data = new Array(chckRange(correctSizeHEX60gensym371_2986396545, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym371_2986396545, 0, 2147483647) ; ++i) { result_2986396543.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({queries: ({data: [], counter: 0})})}; }
  return result_2986396543;

}

function initTable_2986396559(initialSize_2986396562) {
  var result_2986396563 = ({data: [], counter: 0});

    var correctSizeHEX60gensym373_2986396565 = slotsNeeded_1308622891(chckRange(initialSize_2986396562, 0, 2147483647));
    result_2986396563.counter = 0;
    result_2986396563.data = new Array(chckRange(correctSizeHEX60gensym373_2986396565, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym373_2986396565, 0, 2147483647) ; ++i) { result_2986396563.data[i] = {Field0: 0, Field1: {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, Field2: []}; }
  return result_2986396563;

}

function newContext_2986345294() {
    
function HEX3Aanonymous_2986345303(itemHEX60gensym28_2986345304) {
      var result_2986345305 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym28_2986345304))) {
        raiseException({message: ([117,112,100,97,116,101,84,121,112,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym28_2986345304) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsType.forcedCalls = addInt(ctx_2986344632.statsType.forcedCalls, 1);
        var argHEX60gensym28_2986346655 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym28_2986345304);
        var valueHEX60gensym28_2986346656 = computeTypeImpl_2986345267(ctx_2986344632, argHEX60gensym28_2986346655);
        HEX5BHEX5DHEX3D_2986346720(ctx_2986344632.queryCacheType, argHEX60gensym28_2986346655, valueHEX60gensym28_2986346656);
        result_2986345305 = nimCopy(null, fingerprint_3070231130(valueHEX60gensym28_2986346656), NTI3003121688);
        break BeforeRet;
      };

      return result_2986345305;

    }
    
function HEX3Aanonymous_2986353198(itemHEX60gensym29_2986353199) {
      var result_2986353200 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym29_2986353199))) {
        raiseException({message: ([117,112,100,97,116,101,86,97,108,117,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym29_2986353199) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsValue.forcedCalls = addInt(ctx_2986344632.statsValue.forcedCalls, 1);
        var argHEX60gensym29_2986353372 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym29_2986353199);
        var valueHEX60gensym29_2986353373 = computeValueImpl_2986345270(ctx_2986344632, argHEX60gensym29_2986353372);
        HEX5BHEX5DHEX3D_2986353437(ctx_2986344632.queryCacheValue, argHEX60gensym29_2986353372, valueHEX60gensym29_2986353373);
        result_2986353200 = nimCopy(null, fingerprint_3070231311(valueHEX60gensym29_2986353373), NTI3003121688);
        break BeforeRet;
      };

      return result_2986353200;

    }
    
function HEX3Aanonymous_2986357467(itemHEX60gensym30_2986357468) {
      var result_2986357469 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym30_2986357468))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,40] || []).concat(HEX24_3003121876(itemHEX60gensym30_2986357468) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbol.forcedCalls = addInt(ctx_2986344632.statsSymbol.forcedCalls, 1);
        var argHEX60gensym30_2986357641 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym30_2986357468);
        var valueHEX60gensym30_2986357643 = computeSymbolImpl_2986345273(ctx_2986344632, argHEX60gensym30_2986357641);
        HEX5BHEX5DHEX3D_2986357707(ctx_2986344632.queryCacheSymbol, argHEX60gensym30_2986357641, valueHEX60gensym30_2986357643);
        result_2986357469 = nimCopy(null, fingerprint_3070232103(valueHEX60gensym30_2986357643), NTI3003121688);
        break BeforeRet;
      };

      return result_2986357469;

    }
    
function HEX3Aanonymous_2986361728(itemHEX60gensym31_2986361729) {
      var result_2986361730 = [];

      BeforeRet: {
        if (!(contains_2986345382(ctx_2986344632.itemsAstNode, itemHEX60gensym31_2986361729))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,115,40] || []).concat(HEX24_3003121876(itemHEX60gensym31_2986361729) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbols.forcedCalls = addInt(ctx_2986344632.statsSymbols.forcedCalls, 1);
        var argHEX60gensym31_2986361902 = HEX5BHEX5D_2986345949(ctx_2986344632.itemsAstNode, itemHEX60gensym31_2986361729);
        var valueHEX60gensym31_2986361905 = computeSymbolsImpl_2986345277(ctx_2986344632, argHEX60gensym31_2986361902);
        HEX5BHEX5DHEX3D_2986361969(ctx_2986344632.queryCacheSymbols, argHEX60gensym31_2986361902, valueHEX60gensym31_2986361905);
        result_2986361730 = nimCopy(null, fingerprint_3070231764(valueHEX60gensym31_2986361905), NTI3003121688);
        break BeforeRet;
      };

      return result_2986361730;

    }
    
function HEX3Aanonymous_2986365990(itemHEX60gensym32_2986365991) {
      var result_2986365992 = [];

      BeforeRet: {
        if (!(contains_2986366069(ctx_2986344632.itemsSymbol, itemHEX60gensym32_2986365991))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,84,121,112,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym32_2986365991) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbolType.forcedCalls = addInt(ctx_2986344632.statsSymbolType.forcedCalls, 1);
        var argHEX60gensym32_2986367327 = HEX5BHEX5D_2986366622(ctx_2986344632.itemsSymbol, itemHEX60gensym32_2986365991);
        var valueHEX60gensym32_2986367328 = computeSymbolTypeImpl_2986345282(ctx_2986344632, argHEX60gensym32_2986367327);
        HEX5BHEX5DHEX3D_2986367392(ctx_2986344632.queryCacheSymbolType, argHEX60gensym32_2986367327, valueHEX60gensym32_2986367328);
        result_2986365992 = nimCopy(null, fingerprint_3070231130(valueHEX60gensym32_2986367328), NTI3003121688);
        break BeforeRet;
      };

      return result_2986365992;

    }
    
function HEX3Aanonymous_2986373863(itemHEX60gensym33_2986373864) {
      var result_2986373865 = [];

      BeforeRet: {
        if (!(contains_2986366069(ctx_2986344632.itemsSymbol, itemHEX60gensym33_2986373864))) {
        raiseException({message: ([117,112,100,97,116,101,83,121,109,98,111,108,86,97,108,117,101,40] || []).concat(HEX24_3003121876(itemHEX60gensym33_2986373864) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsSymbolValue.forcedCalls = addInt(ctx_2986344632.statsSymbolValue.forcedCalls, 1);
        var argHEX60gensym33_2986374037 = HEX5BHEX5D_2986366622(ctx_2986344632.itemsSymbol, itemHEX60gensym33_2986373864);
        var valueHEX60gensym33_2986374038 = computeSymbolValueImpl_2986345285(ctx_2986344632, argHEX60gensym33_2986374037);
        HEX5BHEX5DHEX3D_2986374102(ctx_2986344632.queryCacheSymbolValue, argHEX60gensym33_2986374037, valueHEX60gensym33_2986374038);
        result_2986373865 = nimCopy(null, fingerprint_3070231311(valueHEX60gensym33_2986374038), NTI3003121688);
        break BeforeRet;
      };

      return result_2986373865;

    }
    
function HEX3Aanonymous_2986378124(itemHEX60gensym34_2986378125) {
      var result_2986378126 = [];

      BeforeRet: {
        if (!(contains_2986378203(ctx_2986344632.itemsFunctionExecutionContext, itemHEX60gensym34_2986378125))) {
        raiseException({message: ([117,112,100,97,116,101,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,40] || []).concat(HEX24_3003121876(itemHEX60gensym34_2986378125) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsFunctionExecution.forcedCalls = addInt(ctx_2986344632.statsFunctionExecution.forcedCalls, 1);
        var argHEX60gensym34_2986379470 = HEX5BHEX5D_2986378756(ctx_2986344632.itemsFunctionExecutionContext, itemHEX60gensym34_2986378125);
        var valueHEX60gensym34_2986379471 = computeFunctionExecutionImpl_2986345288(ctx_2986344632, argHEX60gensym34_2986379470);
        HEX5BHEX5DHEX3D_2986379535(ctx_2986344632.queryCacheFunctionExecution, argHEX60gensym34_2986379470, valueHEX60gensym34_2986379471);
        result_2986378126 = nimCopy(null, [], NTI2986369034);
        break BeforeRet;
      };

      return result_2986378126;

    }
    
function HEX3Aanonymous_2986386019(itemHEX60gensym35_2986386020) {
      var result_2986386021 = [];

      BeforeRet: {
        if (!(contains_2986386098(ctx_2986344632.itemsNodeLayoutInput, itemHEX60gensym35_2986386020))) {
        raiseException({message: ([117,112,100,97,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3003121876(itemHEX60gensym35_2986386020) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
        }
        
        ctx_2986344632.statsNodeLayout.forcedCalls = addInt(ctx_2986344632.statsNodeLayout.forcedCalls, 1);
        var argHEX60gensym35_2986387365 = HEX5BHEX5D_2986386651(ctx_2986344632.itemsNodeLayoutInput, itemHEX60gensym35_2986386020);
        var valueHEX60gensym35_2986387366 = computeNodeLayoutImpl_2986345291(ctx_2986344632, argHEX60gensym35_2986387365);
        HEX5BHEX5DHEX3D_2986387430(ctx_2986344632.queryCacheNodeLayout, argHEX60gensym35_2986387365, valueHEX60gensym35_2986387366);
        result_2986386021 = nimCopy(null, [], NTI2986373631);
        break BeforeRet;
      };

      return result_2986386021;

    }
    
function HEX3Aanonymous_2986393919(keyHEX60gensym36_2986393920) {
        recoverValue_2986345255(ctx_2986344632, keyHEX60gensym36_2986393920);

      
    }
    
function HEX3Aanonymous_2986395913(keyHEX60gensym37_2986395914) {
        recoverType_2986345258(ctx_2986344632, keyHEX60gensym37_2986395914);

      
    }
    
function HEX3Aanonymous_2986395989(keyHEX60gensym38_2986395990) {
        recoverSymbol_2986345261(ctx_2986344632, keyHEX60gensym38_2986395990);

      
    }
    
function HEX3Aanonymous_2986396065(keyHEX60gensym39_2986396066) {
        recoverSymbols_2986345264(ctx_2986344632, keyHEX60gensym39_2986396066);

      
    }

  var result_2986345295 = null;

  BeforeRet: {
    var ctx_2986344632 = null;
    ctx_2986344632 = ({depGraph: null, dependencyStack: [], activeQuerySet: ({data: [], counter: 0}), activeQueryStack: [], recursiveQueries: ({data: [], counter: 0}), updateFunctions: [], recoveryFunctions: ({data: [], counter: 0}), enableLogging: false, itemsAstNode: null, itemsNodeLayoutInput: null, itemsSymbol: null, itemsFunctionExecutionContext: null, globalScope: ({data: [], counter: 0}), enableQueryLogging: false, enableExecutionLogging: false, diagnosticsPerNode: ({data: [], counter: 0}), diagnosticsPerQuery: ({data: [], counter: 0}), queryCacheType: null, updateType: null, statsType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheValue: null, updateValue: null, statsValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbol: null, updateSymbol: null, statsSymbol: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbols: null, updateSymbols: null, statsSymbols: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolType: null, updateSymbolType: null, statsSymbolType: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheSymbolValue: null, updateSymbolValue: null, statsSymbolValue: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheFunctionExecution: null, updateFunctionExecution: null, statsFunctionExecution: ({time: 0, totalCalls: 0, forcedCalls: 0}), queryCacheNodeLayout: null, updateNodeLayout: null, statsNodeLayout: ({time: 0, totalCalls: 0, forcedCalls: 0})});
    ctx_2986344632.depGraph = newDependencyGraph_3003121940();
    ctx_2986344632.dependencyStack = nimCopy(null, [], NTI2986345408);
    ctx_2986344632.updateType = HEX3Aanonymous_2986345303;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateType);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 0, [84,121,112,101]);
    init_2986353134(ctx_2986344632, "queryCacheType", 2000);
    ctx_2986344632.updateValue = HEX3Aanonymous_2986353198;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateValue);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 1, [86,97,108,117,101]);
    init_2986357403(ctx_2986344632, "queryCacheValue", 2000);
    ctx_2986344632.updateSymbol = HEX3Aanonymous_2986357467;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbol);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 2, [83,121,109,98,111,108]);
    init_2986361664(ctx_2986344632, "queryCacheSymbol", 2000);
    ctx_2986344632.updateSymbols = HEX3Aanonymous_2986361728;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbols);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 3, [83,121,109,98,111,108,115]);
    init_2986365926(ctx_2986344632, "queryCacheSymbols", 2000);
    ctx_2986344632.updateSymbolType = HEX3Aanonymous_2986365990;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbolType);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 4, [83,121,109,98,111,108,84,121,112,101]);
    init_2986373799(ctx_2986344632, "queryCacheSymbolType", 2000);
    ctx_2986344632.updateSymbolValue = HEX3Aanonymous_2986373863;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateSymbolValue);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 5, [83,121,109,98,111,108,86,97,108,117,101]);
    init_2986378060(ctx_2986344632, "queryCacheSymbolValue", 2000);
    ctx_2986344632.updateFunctionExecution = HEX3Aanonymous_2986378124;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateFunctionExecution);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 6, [70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110]);
    init_2986385955(ctx_2986344632, "queryCacheFunctionExecution", 2000);
    ctx_2986344632.updateNodeLayout = HEX3Aanonymous_2986386019;
    ctx_2986344632.updateFunctions.push(ctx_2986344632.updateNodeLayout);;
    HEX5BHEX5DHEX3D_3003122008(ctx_2986344632.depGraph.queryNames, 7, [78,111,100,101,76,97,121,111,117,116]);
    init_2986393850(ctx_2986344632, "queryCacheNodeLayout", 2000);
    HEX5BHEX5DHEX3D_2986393984(ctx_2986344632.recoveryFunctions, 1, HEX3Aanonymous_2986393919);
    HEX5BHEX5DHEX3D_2986393984(ctx_2986344632.recoveryFunctions, 0, HEX3Aanonymous_2986395913);
    HEX5BHEX5DHEX3D_2986393984(ctx_2986344632.recoveryFunctions, 2, HEX3Aanonymous_2986395989);
    HEX5BHEX5DHEX3D_2986393984(ctx_2986344632.recoveryFunctions, 3, HEX3Aanonymous_2986396065);
    init_2986396170(ctx_2986344632, "itemsAstNode", 2000);
    init_2986396268(ctx_2986344632, "itemsNodeLayoutInput", 2000);
    init_2986396366(ctx_2986344632, "itemsSymbol", 2000);
    init_2986396464(ctx_2986344632, "itemsFunctionExecutionContext", 2000);
    ctx_2986344632.globalScope = nimCopy(ctx_2986344632.globalScope, initTable_2986396528(32), NTI3070231496);
    ctx_2986344632.enableQueryLogging = false;
    ctx_2986344632.enableExecutionLogging = false;
    ctx_2986344632.diagnosticsPerNode = nimCopy(ctx_2986344632.diagnosticsPerNode, initTable_2986396539(32), NTI2986344773);
    ctx_2986344632.diagnosticsPerQuery = nimCopy(ctx_2986344632.diagnosticsPerQuery, initTable_2986396559(32), NTI2986344790);
    result_2986345295 = ctx_2986344632;
    break BeforeRet;
  };

  return result_2986345295;

}
var executionOutput_2936012852 = [{lines: [], scroll: 0}];
var ctx_2936012853 = newContext_2986345294();
ctx_2936012853.enableLogging = false;
ctx_2936012853.enableQueryLogging = false;

function newFunctionValue_3070231255(impl_3070231256) {
  var result_3070231257 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_3070231257 = nimCopy(result_3070231257, {kind: 4, impl: impl_3070231256, stringValue: [], intValue: 0, node: null, rev: 0, typ: null}, NTI3070230535);
    break BeforeRet;
  };

  return result_3070231257;

}

function createBinaryIntOperator_2936013400(operator_2936013404) {
    
function HEX3Aanonymous_2936013406(values_2936013407) {
        var Temporary1;
        var Temporary2;

      var result_2936013408 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2936013407).length < 2)) {
        result_2936013408 = nimCopy(result_2936013408, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        if ((!((values_2936013407[chckIndx(0, 0, (values_2936013407).length - 1)].kind == 3)) || !((values_2936013407[chckIndx(1, 0, (values_2936013407).length - 1)].kind == 3)))) {
        result_2936013408 = nimCopy(result_2936013408, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        var Temporary1 = values_2936013407[chckIndx(0, 0, (values_2936013407).length - 1)];
        if (ConstSet160[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
        var Temporary2 = values_2936013407[chckIndx(1, 0, (values_2936013407).length - 1)];
        if (ConstSet161[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230534)); }
        result_2936013408 = nimCopy(result_2936013408, {kind: 3, intValue: operator_2936013404(Temporary1.intValue, Temporary2.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
        break BeforeRet;
      };

      return result_2936013408;

    }

  var result_2936013405 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2936013405 = nimCopy(result_2936013405, newFunctionValue_3070231255(HEX3Aanonymous_2936013406), NTI3070230535);
    break BeforeRet;
  };

  return result_2936013405;

}

function createUnityIntOperator_2936013420(operator_2936013423) {
    
function HEX3Aanonymous_2936013425(values_2936013426) {
        var Temporary1;

      var result_2936013427 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

      BeforeRet: {
        if (((values_2936013426).length < 1)) {
        result_2936013427 = nimCopy(result_2936013427, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        var value_2936013431 = nimCopy(null, values_2936013426[chckIndx(0, 0, (values_2936013426).length - 1)], NTI3070230535);
        if (!((value_2936013431.kind == 3))) {
        result_2936013427 = nimCopy(result_2936013427, errorValue_3070231215(), NTI3070230535);
        break BeforeRet;
        }
        
        var Temporary1 = value_2936013431;
        if (ConstSet162[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'intValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
        result_2936013427 = nimCopy(result_2936013427, {kind: 3, intValue: operator_2936013423(Temporary1.intValue), stringValue: [], impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
        break BeforeRet;
      };

      return result_2936013427;

    }

  var result_2936013424 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2936013424 = nimCopy(result_2936013424, newFunctionValue_3070231255(HEX3Aanonymous_2936013425), NTI3070230535);
    break BeforeRet;
  };

  return result_2936013424;

}

function stringValue_3070231249(value_3070231250) {
  var result_3070231251 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231251 = nimCopy(result_3070231251, {kind: 2, stringValue: nimCopy(null, value_3070231250, NTI33554449), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);

  return result_3070231251;

}

function join_2936013575(a_2936013577, sep_2936013578) {
  var result_2936013579 = [];

    result_2936013579 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2936013594 = 0;
      var x_2936013595 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      var i_2936015330 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936015330 < (a_2936013577).length)) break Label3;
            i_2936013594 = i_2936015330;
            x_2936013595 = nimCopy(x_2936013595, a_2936013577[chckIndx(i_2936015330, 0, (a_2936013577).length - 1)], NTI3070230535);
            if ((0 < i_2936013594)) {
            result_2936013579.push.apply(result_2936013579, sep_2936013578);;
            }
            
            result_2936013579.push.apply(result_2936013579, HEX24_3070231271(x_2936013595));;
            i_2936015330 = addInt(i_2936015330, 1);
          }
      };
    };

  return result_2936013579;

}

function delete_2936013613(s_2936013615, s_2936013615_Idx, slice_2936013616) {
    if (!((((slice_2936013616.a < (s_2936013615[s_2936013615_Idx]).length) && (0 <= slice_2936013616.a)) && (slice_2936013616.b < (s_2936013615[s_2936013615_Idx]).length)))) {
    raiseException({message: HEX24_855639371({Field0: nimCopy(null, slice_2936013616, NTI805306392), Field1: (s_2936013615[s_2936013615_Idx]).length}), parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    if ((slice_2936013616.a <= slice_2936013616.b)) {
    var n_2936013663 = addInt(subInt(slice_2936013616.b, slice_2936013616.a), 1);
    var first_2936013664 = slice_2936013616.a;
    s_2936013615[s_2936013615_Idx].splice(first_2936013664, n_2936013663);
    }
    

  
}

function color_2449473918(c_2449473919) {
  var result_2449473920 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473920 = nimCopy(result_2449473920, c_2449473919, NTI2365587459);

  return result_2449473920;

}

function addOutput_2936013596(self_2936013598, line_2936013599, color_2936013600) {
    if ((1500 <= (self_2936013598.lines).length)) {
    delete_2936013613(self_2936013598, "lines", HEX2EHEX2E_805306418(0, subInt((self_2936013598.lines).length, 1000)));
    }
    
    if ((0 < self_2936013598.scroll)) {
    self_2936013598.scroll = addInt(self_2936013598.scroll, 1);
    }
    
    self_2936013598.lines.push({Field0: nimCopy(null, line_2936013599, NTI33554449), Field1: color_2449473918(color_2936013600)});;

  
}

function typeType_3070230959() {
  var result_3070230960 = null;

    result_3070230960 = {kind: 6, open: false, returnType: null, paramTypes: []};

  return result_3070230960;

}

function typeValue_3070231252(typ_3070231253) {
  var result_3070231254 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_3070231254 = nimCopy(result_3070231254, {kind: 6, typ: typ_3070231253, stringValue: [], intValue: 0, impl: null, node: null, rev: 0}, NTI3070230535);

  return result_3070231254;

}

function HEX3Aanonymous_2936013481(a_2936013482, b_2936013483) {
  var result_2936013484 = 0;

    result_2936013484 = addInt(a_2936013482, b_2936013483);

  return result_2936013484;

}

function HEX3Aanonymous_2936013486(a_2936013487, b_2936013488) {
  var result_2936013489 = 0;

    result_2936013489 = subInt(a_2936013487, b_2936013488);

  return result_2936013489;

}

function HEX3Aanonymous_2936013491(a_2936013492, b_2936013493) {
  var result_2936013494 = 0;

    result_2936013494 = mulInt(a_2936013492, b_2936013493);

  return result_2936013494;

}

function HEX3Aanonymous_2936013496(a_2936013497, b_2936013498) {
  var result_2936013499 = 0;

    result_2936013499 = divInt(a_2936013497, b_2936013498);

  return result_2936013499;

}

function HEX3Aanonymous_2936013501(a_2936013502, b_2936013503) {
  var result_2936013504 = 0;

    result_2936013504 = modInt(a_2936013502, b_2936013503);

  return result_2936013504;

}

function HEX3Aanonymous_2936013506(a_2936013507) {
  var result_2936013508 = 0;

    result_2936013508 = negInt(a_2936013507);

  return result_2936013508;

}

function HEX3Aanonymous_2936013510(a_2936013511) {
    var Temporary1;

  var result_2936013512 = 0;

    if (!((a_2936013511 == 0))) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = 1;
    }
    
    result_2936013512 = Temporary1;

  return result_2936013512;

}

function HEX3Aanonymous_2936013514(a_2936013515, b_2936013516) {
    var Temporary1;

  var result_2936013517 = 0;

    if ((a_2936013515 < b_2936013516)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013517 = Temporary1;

  return result_2936013517;

}

function HEX3Aanonymous_2936013519(a_2936013520, b_2936013521) {
    var Temporary1;

  var result_2936013522 = 0;

    if ((a_2936013520 <= b_2936013521)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013522 = Temporary1;

  return result_2936013522;

}

function HEX3Aanonymous_2936013524(a_2936013525, b_2936013526) {
    var Temporary1;

  var result_2936013527 = 0;

    if ((b_2936013526 < a_2936013525)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013527 = Temporary1;

  return result_2936013527;

}

function HEX3Aanonymous_2936013529(a_2936013530, b_2936013531) {
    var Temporary1;

  var result_2936013532 = 0;

    if ((b_2936013531 <= a_2936013530)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013532 = Temporary1;

  return result_2936013532;

}

function HEX3Aanonymous_2936013534(a_2936013535, b_2936013536) {
    var Temporary1;

  var result_2936013537 = 0;

    if ((a_2936013535 == b_2936013536)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013537 = Temporary1;

  return result_2936013537;

}

function HEX3Aanonymous_2936013539(a_2936013540, b_2936013541) {
    var Temporary1;

  var result_2936013542 = 0;

    if (!((a_2936013540 == b_2936013541))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013542 = Temporary1;

  return result_2936013542;

}

function HEX3Aanonymous_2936013544(a_2936013545, b_2936013546) {
    var Temporary1;

  var result_2936013547 = 0;

    if ((!((a_2936013545 == 0)) && !((b_2936013546 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013547 = Temporary1;

  return result_2936013547;

}

function HEX3Aanonymous_2936013549(a_2936013550, b_2936013551) {
    var Temporary1;

  var result_2936013552 = 0;

    if ((!((a_2936013550 == 0)) || !((b_2936013551 == 0)))) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    result_2936013552 = Temporary1;

  return result_2936013552;

}

function HEX3Aanonymous_2936013554(a_2936013555, b_2936013556) {
    var Temporary1;

  var result_2936013557 = 0;

    if ((a_2936013555 < b_2936013556)) {
    Temporary1 = -1;
    }
    else {
    if ((b_2936013556 < a_2936013555)) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    }
    result_2936013557 = Temporary1;

  return result_2936013557;

}

function HEX3Aanonymous_2936013559(values_2936013560) {
    var Temporary1;

  var result_2936013561 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    if (((values_2936013560).length < 2)) {
    result_2936013561 = nimCopy(result_2936013561, errorValue_3070231215(), NTI3070230535);
    break BeforeRet;
    }
    
    var leftValue_2936013565 = nimCopy(null, values_2936013560[chckIndx(0, 0, (values_2936013560).length - 1)], NTI3070230535);
    var rightValue_2936013566 = nimCopy(null, values_2936013560[chckIndx(1, 0, (values_2936013560).length - 1)], NTI3070230535);
    if (!((leftValue_2936013565.kind == 2))) {
    result_2936013561 = nimCopy(result_2936013561, errorValue_3070231215(), NTI3070230535);
    break BeforeRet;
    }
    
    var Temporary1 = leftValue_2936013565;
    if (ConstSet163[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'stringValue\' is not accessible for type \'Value\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230534)); }
    result_2936013561 = nimCopy(result_2936013561, {kind: 2, stringValue: (Temporary1.stringValue || []).concat(HEX24_3070231271(rightValue_2936013566) || []), intValue: 0, impl: null, node: null, rev: 0, typ: null}, NTI3070230535);
    break BeforeRet;
  };

  return result_2936013561;

}

function HEX3Aanonymous_2936013572(values_2936013573) {
  var result_2936013574 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

  BeforeRet: {
    result_2936013574 = nimCopy(result_2936013574, stringValue_3070231249(join_2936013575(values_2936013573, [])), NTI3070230535);
    addOutput_2936013596(executionOutput_2936012852[0], HEX24_3070231271(result_2936013574), {r: 1.0, g: 1.0, b: 1.0, a: 1.0});
    log_1174405220(logger_704643272[0], 2, [HEX24_3070231271(result_2936013574)]);
    result_2936013574 = nimCopy(result_2936013574, voidValue_3070231244(), NTI3070230535);
    break BeforeRet;
  };

  return result_2936013574;

}

function HEX3Aanonymous_2936013683(values_2936013686) {
  var result_2936013689 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});

    result_2936013689 = nimCopy(result_2936013689, stringValue_3070231249(join_2936013575(values_2936013686, [])), NTI3070230535);

  return result_2936013689;

}
var typeAddIntInt_2936013440 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeSubIntInt_2936013445 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeMulIntInt_2936013450 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeDivIntInt_2936013455 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeModIntInt_2936013460 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var typeAddStringInt_2936013465 = newFunctionType_3070230946([stringType_3070230944(), intType_3070230942()], stringType_3070230944());
var typeNegInt_2936013470 = newFunctionType_3070230946([intType_3070230942()], intType_3070230942());
var typeNotInt_2936013475 = newFunctionType_3070230946([intType_3070230942()], intType_3070230942());
var typeFnIntIntInt_2936013480 = newFunctionType_3070230946([intType_3070230942(), intType_3070230942()], intType_3070230942());
var funcAddIntInt_2936013485 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013481);
var funcSubIntInt_2936013490 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013486);
var funcMulIntInt_2936013495 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013491);
var funcDivIntInt_2936013500 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013496);
var funcModIntInt_2936013505 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013501);
var funcNegInt_2936013509 = createUnityIntOperator_2936013420(HEX3Aanonymous_2936013506);
var funcNotInt_2936013513 = createUnityIntOperator_2936013420(HEX3Aanonymous_2936013510);
var funcLessIntInt_2936013518 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013514);
var funcLessEqualIntInt_2936013523 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013519);
var funcGreaterIntInt_2936013528 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013524);
var funcGreaterEqualIntInt_2936013533 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013529);
var funcEqualIntInt_2936013538 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013534);
var funcNotEqualIntInt_2936013543 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013539);
var funcAndIntInt_2936013548 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013544);
var funcOrIntInt_2936013553 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013549);
var funcOrderIntInt_2936013558 = createBinaryIntOperator_2936013400(HEX3Aanonymous_2936013554);
var funcAddStringInt_2936013571 = newFunctionValue_3070231255(HEX3Aanonymous_2936013559);
var funcPrintAny_2936013682 = newFunctionValue_3070231255(HEX3Aanonymous_2936013572);
var funcBuildStringAny_2936013694 = newFunctionValue_3070231255(HEX3Aanonymous_2936013683);
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdAdd_2952790019, {id: nimCopy(null, IdAdd_2952790019, NTI2181038083), name: [43], kind: 1, typ: typeAddIntInt_2936013440, value: nimCopy(null, funcAddIntInt_2936013485, NTI3070230535), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdSub_2952790020, {id: nimCopy(null, IdSub_2952790020, NTI2181038083), name: [45], kind: 1, typ: typeSubIntInt_2936013445, value: nimCopy(null, funcSubIntInt_2936013490, NTI3070230535), operatorNotation: 3, precedence: 10, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdMul_2952790021, {id: nimCopy(null, IdMul_2952790021, NTI2181038083), name: [42], kind: 1, typ: typeMulIntInt_2936013450, value: nimCopy(null, funcMulIntInt_2936013495, NTI3070230535), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdDiv_2952790022, {id: nimCopy(null, IdDiv_2952790022, NTI2181038083), name: [47], kind: 1, typ: typeDivIntInt_2936013455, value: nimCopy(null, funcDivIntInt_2936013500, NTI3070230535), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdMod_2952790023, {id: nimCopy(null, IdMod_2952790023, NTI2181038083), name: [37], kind: 1, typ: typeModIntInt_2936013460, value: nimCopy(null, funcModIntInt_2936013505, NTI3070230535), operatorNotation: 3, precedence: 20, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdNegate_2952790024, {id: nimCopy(null, IdNegate_2952790024, NTI2181038083), name: [45], kind: 1, typ: typeNegInt_2936013470, value: nimCopy(null, funcNegInt_2936013509, NTI3070230535), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdNot_2952790025, {id: nimCopy(null, IdNot_2952790025, NTI2181038083), name: [33], kind: 1, typ: typeNotInt_2936013475, value: nimCopy(null, funcNotInt_2936013513, NTI3070230535), operatorNotation: 1, node: null, precedence: 0});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdAppendString_2952790027, {id: nimCopy(null, IdAppendString_2952790027, NTI2181038083), name: [38], kind: 1, typ: typeAddStringInt_2936013465, value: nimCopy(null, funcAddStringInt_2936013571, NTI3070230535), operatorNotation: 3, precedence: 0, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdLess_2952790031, {id: nimCopy(null, IdLess_2952790031, NTI2181038083), name: [60], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcLessIntInt_2936013518, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdLessEqual_2952790032, {id: nimCopy(null, IdLessEqual_2952790032, NTI2181038083), name: [60,61], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcLessEqualIntInt_2936013523, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdGreater_2952790033, {id: nimCopy(null, IdGreater_2952790033, NTI2181038083), name: [62], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcGreaterIntInt_2936013528, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdGreaterEqual_2952790034, {id: nimCopy(null, IdGreaterEqual_2952790034, NTI2181038083), name: [62,61], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcGreaterEqualIntInt_2936013533, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdEqual_2952790035, {id: nimCopy(null, IdEqual_2952790035, NTI2181038083), name: [61,61], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcEqualIntInt_2936013538, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdNotEqual_2952790036, {id: nimCopy(null, IdNotEqual_2952790036, NTI2181038083), name: [33,61], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcNotEqualIntInt_2936013543, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdAnd_2952790037, {id: nimCopy(null, IdAnd_2952790037, NTI2181038083), name: [97,110,100], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcAndIntInt_2936013548, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdOr_2952790038, {id: nimCopy(null, IdOr_2952790038, NTI2181038083), name: [111,114], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcOrIntInt_2936013553, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdOrder_2952790039, {id: nimCopy(null, IdOrder_2952790039, NTI2181038083), name: [60,61,62], kind: 1, typ: typeFnIntIntInt_2936013480, value: nimCopy(null, funcOrderIntInt_2936013558, NTI3070230535), operatorNotation: 3, precedence: 5, node: null});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdInt_2952790028, {id: nimCopy(null, IdInt_2952790028, NTI2181038083), name: [105,110,116], kind: 1, typ: typeType_3070230959(), value: typeValue_3070231252(intType_3070230942()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdString_2952790029, {id: nimCopy(null, IdString_2952790029, NTI2181038083), name: [115,116,114,105,110,103], kind: 1, typ: typeType_3070230959(), value: typeValue_3070231252(stringType_3070230944()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdVoid_2952790030, {id: nimCopy(null, IdVoid_2952790030, NTI2181038083), name: [118,111,105,100], kind: 1, typ: typeType_3070230959(), value: typeValue_3070231252(voidType_3070230940()), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdPrint_2952790018, {id: nimCopy(null, IdPrint_2952790018, NTI2181038083), name: [112,114,105,110,116], kind: 1, typ: newFunctionType_3070230946([anyType_3070230961(true)], voidType_3070230940()), value: nimCopy(null, funcPrintAny_2936013682, NTI3070230535), node: null, operatorNotation: 0, precedence: 0});
HEX5BHEX5DHEX3D_2986441735(ctx_2936012853.globalScope, IdBuildString_2952790040, {id: nimCopy(null, IdBuildString_2952790040, NTI2181038083), name: [98,117,105,108,100], kind: 1, typ: newFunctionType_3070230946([anyType_3070230961(true)], stringType_3070230944()), value: nimCopy(null, funcBuildStringAny_2936013694, NTI3070230535), node: null, operatorNotation: 0, precedence: 0});
Label160: {
  var symbol_2936015235 = [null];
  var L_2936015322 = len_2986455580(ctx_2936012853.globalScope);
  Label161: {
    var h_2936015324 = 0;
    var colontmp__2936015325 = 0;
    colontmp__2936015325 = (ctx_2936012853.globalScope.data).length - 1;
    var res_2936015326 = 0;
    Label162: {
        Label163: while (true) {
        if (!(res_2936015326 <= colontmp__2936015325)) break Label163;
          h_2936015324 = res_2936015326;
          if (isFilled_1308622880(ctx_2936012853.globalScope.data[chckIndx(h_2936015324, 0, (ctx_2936012853.globalScope.data).length - 1)].Field0)) {
          symbol_2936015235[0] = ctx_2936012853.globalScope.data[chckIndx(h_2936015324, 0, (ctx_2936012853.globalScope.data).length - 1)]["Field2"];
          var _ = newSymbol_2986414031(ctx_2936012853, symbol_2936015235[0]);
          if (!((len_2986455580(ctx_2936012853.globalScope) == L_2936015322))) {
          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
          }
          
          }
          
          res_2936015326 = addInt(res_2936015326, 1);
        }
    };
  };
};

function isEditing_2936021000(self_2936021001) {
  var result_2936021002 = false;

    result_2936021002 = !((self_2936021001.textEditor == null));

  return result_2936021002;

}

function node_2936015479(editor_2936015480) {
  var result_2936015481 = null;

  BeforeRet: {
    result_2936015481 = editor_2936015480.selectedNode;
    break BeforeRet;
  };

  return result_2936015481;

}

function newSeq_2936017401(len_2936017403) {
  var result_2936017404 = [];

    result_2936017404 = new Array(len_2936017403); for (var i = 0 ; i < len_2936017403 ; ++i) { result_2936017404[i] = null; }
  return result_2936017404;

}

function expandIfNeeded_2936017391(deq_2936017393) {
              var Temporary5;
    var Temporary6;

    if ((deq_2936017393.mask == 0)) {
    var correctSizeHEX60gensym52_2936017395 = nextPowerOfTwo_872415437(4);
    deq_2936017393.mask = subInt(correctSizeHEX60gensym52_2936017395, 1);
    deq_2936017393.data = new Array(chckRange(correctSizeHEX60gensym52_2936017395, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym52_2936017395, 0, 2147483647) ; ++i) { deq_2936017393.data[i] = null; }    }
    
    var cap_2936017400 = addInt(deq_2936017393.mask, 1);
    if ((cap_2936017400 <= deq_2936017393.count)) {
    var n_2936017409 = newSeq_2936017401(chckRange(mulInt(cap_2936017400, 2), 0, 2147483647));
    var i_2936017410 = 0;
    Label1: {
      var x_2936017420 = null;
      var x_2936017420_Idx = 0;
      var i_2936024859 = deq_2936017393.head;
      Label2: {
        var c_2936024861 = 0;
        var i_2936024862 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_2936024862 < deq_2936017393.count)) break Label4;
              c_2936024861 = i_2936024862;
              x_2936017420 = deq_2936017393.data; x_2936017420_Idx = chckIndx(i_2936024859, 0, (deq_2936017393.data).length - 1);
              Temporary5 = x_2936017420[x_2936017420_Idx];
              x_2936017420[x_2936017420_Idx] = genericReset(x_2936017420[x_2936017420_Idx], NTI2969567236);
              n_2936017409[chckIndx(i_2936017410, 0, (n_2936017409).length - 1)] = Temporary5;
              i_2936017410 = addInt(i_2936017410, 1);
              i_2936024859 = (addInt(i_2936024859, 1) & deq_2936017393.mask);
              i_2936024862 = addInt(i_2936024862, 1);
            }
        };
      };
    };
    Temporary6 = n_2936017409;
    n_2936017409 = genericReset(n_2936017409, NTI2936015265);
    deq_2936017393.data = nimCopy(null, Temporary6, NTI2936015265);
    deq_2936017393.mask = subInt(mulInt(cap_2936017400, 2), 1);
    deq_2936017393.tail = deq_2936017393.count;
    deq_2936017393.head = 0;
    }
    

  
}

function addLast_2936017382(deq_2936017384, item_2936017385) {
    expandIfNeeded_2936017391(deq_2936017384);
    deq_2936017384.count = addInt(deq_2936017384.count, 1);
    deq_2936017384.data[chckIndx(deq_2936017384.tail, 0, (deq_2936017384.data).length - 1)] = item_2936017385;
    deq_2936017384.tail = (addInt(deq_2936017384.tail, 1) & deq_2936017384.mask);

  
}

function len_2936017523(deq_2936017525) {
  var result_2936017526 = 0;

    result_2936017526 = deq_2936017525.count;

  return result_2936017526;

}

function popFirst_2936017532(deq_2936017534) {
    var Temporary1;

  var result_2936017535 = null;

    if ((deq_2936017534.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2936017534.count = subInt(deq_2936017534.count, 1);
    Temporary1 = deq_2936017534.data[chckIndx(deq_2936017534.head, 0, (deq_2936017534.data).length - 1)];
    deq_2936017534.data[chckIndx(deq_2936017534.head, 0, (deq_2936017534.data).length - 1)] = genericReset(deq_2936017534.data[chckIndx(deq_2936017534.head, 0, (deq_2936017534.data).length - 1)], NTI2969567236);
    result_2936017535 = Temporary1;
    deq_2936017534.head = (addInt(deq_2936017534.head, 1) & deq_2936017534.mask);

  return result_2936017535;

}

function hasKey_2936015562(t_2936015565, key_2936015566) {
  var result_2936015567 = false;

    var hc_2936015568 = [0];
    result_2936015567 = (0 <= rawGet_3103785569(t_2936015565, key_2936015566, hc_2936015568, 0));

  return result_2936015567;

}

function contains_2936015556(t_2936015559, key_2936015560) {
  var result_2936015561 = false;

  BeforeRet: {
    result_2936015561 = hasKey_2936015562(t_2936015559, key_2936015560);
    break BeforeRet;
  };

  return result_2936015561;

}

function HEX5BHEX5D_2936015652(t_2936015655, key_2936015656) {
  var result_2936015657 = null;

    var hcHEX60gensym22_2936015658 = [0];
    var indexHEX60gensym22_2936015665 = rawGet_3103785569(t_2936015655, key_2936015656, hcHEX60gensym22_2936015658, 0);
    if ((0 <= indexHEX60gensym22_2936015665)) {
    result_2936015657 = t_2936015655.data[chckIndx(indexHEX60gensym22_2936015665, 0, (t_2936015655.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_2936015656);
    }
    

  return result_2936015657;

}

function xyHEX3D_2080374823(rect_2080374824, v_2080374825) {
    rect_2080374824.x = v_2080374825.arr[chckIndx(0, 0, (v_2080374825.arr).length - 1)];
    rect_2080374824.y = v_2080374825.arr[chckIndx(1, 0, (v_2080374825.arr).length - 1)];

  
}

function HEX2B_2080375257(aHEX60gensym153_2080375259, bHEX60gensym153_2080375260) {
  var result_2080375261 = ({arr: new Float32Array(2)});

    result_2080375261 = nimCopy(result_2080375261, {arr: new Float32Array([(aHEX60gensym153_2080375259.arr[0] + bHEX60gensym153_2080375260.arr[0]), (aHEX60gensym153_2080375259.arr[1] + bHEX60gensym153_2080375260.arr[1])])}, NTI2097152387);

  return result_2080375261;

}

function wh_2080374828(rect_2080374829) {
  var result_2080374830 = ({arr: new Float32Array(2)});

    result_2080374830 = nimCopy(result_2080374830, vec2_2097152992(rect_2080374829.w, rect_2080374829.h), NTI2097152387);

  return result_2080374830;

}

function absoluteBounds_3070232288(node_3070232289) {
  var result_3070232290 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    if ((node_3070232289.parent == null)) {
    result_3070232290 = nimCopy(result_3070232290, node_3070232289.bounds, NTI2080374789);
    }
    else {
      result_3070232290 = nimCopy(result_3070232290, rect_2080374808(HEX2B_2080375257(xy_2080374820(absoluteBounds_3070232288(node_3070232289.parent)), xy_2080374820(node_3070232289.bounds)), wh_2080374828(node_3070232289.bounds)), NTI2080374789);
    }
    

  return result_3070232290;

}

function absoluteBounds_3070232308(nodeRange_3070232309) {
  var result_3070232310 = [({x: 0.0, y: 0.0, w: 0.0, h: 0.0})];

    result_3070232310[0] = nimCopy(result_3070232310[0], nodeRange_3070232309.parent.children[chckIndx(nodeRange_3070232309.first, 0, (nodeRange_3070232309.parent.children).length - 1)].bounds, NTI2080374789);
    Label1: {
      var i_3070232315 = 0;
      var colontmp__2936024877 = 0;
      colontmp__2936024877 = addInt(nodeRange_3070232309.first, 1);
      var i_2936024878 = colontmp__2936024877;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024878 < nodeRange_3070232309.last)) break Label3;
            i_3070232315 = i_2936024878;
            result_3070232310[0] = nimCopy(result_3070232310[0], or_2080374872(result_3070232310[0], nodeRange_3070232309.parent.children[chckIndx(i_3070232315, 0, (nodeRange_3070232309.parent.children).length - 1)].bounds), NTI2080374789);
            i_2936024878 = addInt(i_2936024878, 1);
          }
      };
    };
    xyHEX3D_2080374823(result_3070232310[0], HEX2B_2080375257(xy_2080374820(result_3070232310[0]), xy_2080374820(absoluteBounds_3070232288(nodeRange_3070232309.parent))));

  return result_3070232310[0];

}

function and_2080374876(a_2080374877, b_2080374878) {
  var result_2080374879 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2080374879.x = max_33555642(a_2080374877.x, b_2080374878.x);
    result_2080374879.y = max_33555642(a_2080374877.y, b_2080374878.y);
    result_2080374879.w = (min_33555609((a_2080374877.x + a_2080374877.w), (b_2080374878.x + b_2080374878.w)) - result_2080374879.x);
    result_2080374879.h = (min_33555609((a_2080374877.y + a_2080374877.h), (b_2080374878.y + b_2080374878.h)) - result_2080374879.y);

  return result_2080374879;

}

function intersects_2063597753(a_2063597754, b_2063597755) {
  var result_2063597756 = false;

  BeforeRet: {
    var intersection_2063597757 = and_2080374876(a_2063597754, b_2063597755);
    result_2063597756 = ((0.0 < intersection_2063597757.w) && (0.0 < intersection_2063597757.h));
    break BeforeRet;
  };

  return result_2063597756;

}

function subbase_2969567333(node_2969567334) {
  var result_2969567335 = null;

  BeforeRet: {
    if ((node_2969567334.parent.parent == null)) {
    result_2969567335 = node_2969567334;
    break BeforeRet;
    }
    
    result_2969567335 = subbase_2969567333(node_2969567334.parent);
    break BeforeRet;
  };

  return result_2969567335;

}

function getItem_2986404038(selfHEX60gensym78_2986404039) {
  var result_2986404040 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};

  BeforeRet: {
    if (HEX3DHEX3D_2181038320(selfHEX60gensym78_2986404039.id, null_2181038340)) {
    selfHEX60gensym78_2986404039.id = nimCopy(selfHEX60gensym78_2986404039.id, newId_2181038297(), NTI2181038083);
    }
    
    if (!(!(HEX3DHEX3D_2181038320(selfHEX60gensym78_2986404039.id, null_2181038340)))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,53,51,51,44,32,57,41,32,96,115,101,108,102,96,103,101,110,115,121,109,55,56,46,105,100,32,33,61,32,110,117,108,108,96,32]);
    }
    
    var colontmp__2936024889 = nimCopy(null, selfHEX60gensym78_2986404039.id, NTI2181038083);
    var colontmp__2936024890 = 1;
    result_2986404040 = nimCopy(result_2986404040, {Field0: nimCopy(null, colontmp__2936024889, NTI2181038083), Field1: colontmp__2936024890}, NTI3003121689);
    break BeforeRet;
  };

  return result_2986404040;

}

function getOrDefault_2986404289(t_2986404292, key_2986404293, default_2986404294) {
    var Temporary1;

  var result_2986404295 = null;

    var hcHEX60gensym409_2986404298 = [0];
    var indexHEX60gensym409_2986404305 = rawGet_2986386205(t_2986404292, key_2986404293, hcHEX60gensym409_2986404298, 0);
    if ((0 <= indexHEX60gensym409_2986404305)) {
    Temporary1 = t_2986404292.data[chckIndx(indexHEX60gensym409_2986404305, 0, (t_2986404292.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986404294;
    }
    
    result_2986404295 = Temporary1;

  return result_2986404295;

}

function newDoublyLinkedNode_2986404421(value_2986404423) {
  var result_2986404424 = null;

    result_2986404424 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986404424.value = nimCopy(result_2986404424.value, value_2986404423, NTI2986344583);

  return result_2986404424;

}

function mustRehash_2986404762(t_2986404764) {
  var result_2986404765 = false;

    if (!((t_2986404764.counter < (t_2986404764.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986404765 = ((mulInt((t_2986404764.data).length, 2) < mulInt(t_2986404764.counter, 3)) || (subInt((t_2986404764.data).length, t_2986404764.counter) < 4));

  return result_2986404765;

}

function rawInsert_2986405455(t_2986405459, data_2986405460, data_2986405460_Idx, key_2986405461, val_2986405462, hc_2986405463, h_2986405464) {
    data_2986405460[data_2986405460_Idx][chckIndx(h_2986405464, 0, (data_2986405460[data_2986405460_Idx]).length - 1)].Field1 = nimCopy(data_2986405460[data_2986405460_Idx][chckIndx(h_2986405464, 0, (data_2986405460[data_2986405460_Idx]).length - 1)].Field1, key_2986405461, NTI3003121689);
    data_2986405460[data_2986405460_Idx][chckIndx(h_2986405464, 0, (data_2986405460[data_2986405460_Idx]).length - 1)].Field2 = val_2986405462;
    data_2986405460[data_2986405460_Idx][chckIndx(h_2986405464, 0, (data_2986405460[data_2986405460_Idx]).length - 1)].Field0 = hc_2986405463;

  
}

function enlarge_2986405019(t_2986405022) {
    var n_2986405025 = [];
    n_2986405025 = new Array(chckRange(mulInt((t_2986405022.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986405022.data).length, 2), 0, 2147483647) ; ++i) { n_2986405025[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986405022.data; t_2986405022.data = n_2986405025; n_2986405025 = Temporary1;    Label2: {
      var i_2986405123 = 0;
      var colontmp__2936024893 = 0;
      colontmp__2936024893 = (n_2986405025).length - 1;
      var res_2936024894 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936024894 <= colontmp__2936024893)) break Label4;
            i_2986405123 = res_2936024894;
            var eh_2986405204 = n_2986405025[chckIndx(i_2986405123, 0, (n_2986405025).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986405204)) {
            var j_2986405208 = (eh_2986405204 & (t_2986405022.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986405022.data[chckIndx(j_2986405208, 0, (t_2986405022.data).length - 1)].Field0)) break Label6;
                  j_2986405208 = nextTry_1308622883(j_2986405208, (t_2986405022.data).length - 1);
                }
            };
            rawInsert_2986405455(t_2986405022, t_2986405022, "data", n_2986405025[chckIndx(i_2986405123, 0, (n_2986405025).length - 1)].Field1, n_2986405025[chckIndx(i_2986405123, 0, (n_2986405025).length - 1)].Field2, eh_2986405204, j_2986405208);
            }
            
            res_2936024894 = addInt(res_2936024894, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986405705(t_2986405708, key_2986405709, hc_2986405710) {
  var result_2986405711 = 0;

  BeforeRet: {
    if (((t_2986405708.data).length == 0)) {
    result_2986405711 = -1;
    break BeforeRet;
    }
    
    var h_2986405796 = (hc_2986405710 & (t_2986405708.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986405708.data[chckIndx(h_2986405796, 0, (t_2986405708.data).length - 1)].Field0)) break Label2;
          if (((t_2986405708.data[chckIndx(h_2986405796, 0, (t_2986405708.data).length - 1)].Field0 == hc_2986405710) && HEX3DHEX3D_2986345833(t_2986405708.data[chckIndx(h_2986405796, 0, (t_2986405708.data).length - 1)].Field1, key_2986405709))) {
          result_2986405711 = h_2986405796;
          break BeforeRet;
          }
          
          h_2986405796 = nextTry_1308622883(h_2986405796, (t_2986405708.data).length - 1);
        }
    };
    result_2986405711 = subInt(-1, h_2986405796);
  };

  return result_2986405711;

}

function HEX5BHEX5DHEX3D_2986404494(t_2986404497, key_2986404498, val_2986404499) {
    if (((t_2986404497.data).length == 0)) {
    var correctSizeHEX60gensym412_2986404582 = slotsNeeded_1308622891(32);
    t_2986404497.counter = 0;
    t_2986404497.data = new Array(chckRange(correctSizeHEX60gensym412_2986404582, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym412_2986404582, 0, 2147483647) ; ++i) { t_2986404497.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986404587 = [0];
    var index_2986404594 = rawGet_2986386205(t_2986404497, key_2986404498, hc_2986404587, 0);
    if ((0 <= index_2986404594)) {
    t_2986404497.data[chckIndx(index_2986404594, 0, (t_2986404497.data).length - 1)].Field2 = val_2986404499;
    }
    else {
      if (((t_2986404497.data).length == 0)) {
      var correctSizeHEX60gensym415_2986404757 = slotsNeeded_1308622891(32);
      t_2986404497.counter = 0;
      t_2986404497.data = new Array(chckRange(correctSizeHEX60gensym415_2986404757, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym415_2986404757, 0, 2147483647) ; ++i) { t_2986404497.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986404762(t_2986404497)) {
      enlarge_2986405019(t_2986404497);
      index_2986404594 = rawGetKnownHC_2986405705(t_2986404497, key_2986404498, hc_2986404587[0]);
      }
      
      index_2986404594 = subInt(-1, index_2986404594);
      rawInsert_2986405455(t_2986404497, t_2986404497, "data", key_2986404498, val_2986404499, hc_2986404587[0], index_2986404594);
      t_2986404497.counter = addInt(t_2986404497.counter, 1);
    }
    

  
}

function len_2986406316(t_2986406319) {
  var result_2986406320 = 0;

    result_2986406320 = t_2986406319.counter;

  return result_2986406320;

}

function len_2986406233(cache_2986406236) {
  var result_2986406237 = 0;

    result_2986406237 = len_2986406316(cache_2986406236.table);

  return result_2986406237;

}

function del_2986406408(t_2986406411, key_2986406412) {
    var hc_2986406413 = [0];
    var i_2986406420 = rawGet_2986386205(t_2986406411, key_2986406412, hc_2986406413, 0);
    var mskHEX60gensym36_2986406424 = (t_2986406411.data).length - 1;
    if ((0 <= i_2986406420)) {
    t_2986406411.counter = subInt(t_2986406411.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986406431 = i_2986406420;
            var rHEX60gensym36_2986406432 = jHEX60gensym36_2986406431;
            t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)].Field0 = 0;
            t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)].Field1 = nimCopy(t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986406420 = (addInt(i_2986406420, 1) & mskHEX60gensym36_2986406424);
                  if (isEmpty_1308622877(t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986406432 = (t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)].Field0 & mskHEX60gensym36_2986406424);
                  if (!(((((rHEX60gensym36_2986406432 <= i_2986406420) && (jHEX60gensym36_2986406431 < rHEX60gensym36_2986406432)) || ((jHEX60gensym36_2986406431 < rHEX60gensym36_2986406432) && (i_2986406420 < jHEX60gensym36_2986406431))) || ((i_2986406420 < jHEX60gensym36_2986406431) && (rHEX60gensym36_2986406432 <= i_2986406420))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986406411.data[chckIndx(jHEX60gensym36_2986406431, 0, (t_2986406411.data).length - 1)] = nimCopy(t_2986406411.data[chckIndx(jHEX60gensym36_2986406431, 0, (t_2986406411.data).length - 1)], t_2986406411.data[chckIndx(i_2986406420, 0, (t_2986406411.data).length - 1)], NTI2986344619);
          }
      };
    };
    }
    

  
}

function resize_2986406151(cache_2986406154) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986406154.capacity < len_2986406233(cache_2986406154))) break Label2;
          var t_2986406321 = cache_2986406154.list.tail;
          if (cache_2986406154.recordRemovedKeys) {
          incl_2986401422(cache_2986406154.removedKeys, t_2986406321.value.key);
          }
          
          del_2986406408(cache_2986406154.table, t_2986406321.value.key);
          remove_2986386857(cache_2986406154.list, t_2986406321);
        }
    };

  
}

function addNewNode_2986404413(cache_2986404416, key_2986404417, val_2986404418) {
    var node_2986404430 = newDoublyLinkedNode_2986404421({key: nimCopy(null, key_2986404417, NTI3003121689), val: val_2986404418});
    HEX5BHEX5DHEX3D_2986404494(cache_2986404416.table, key_2986404417, node_2986404430);
    prepend_2986387161(cache_2986404416.list, node_2986404430);
    if (cache_2986404416.recordRemovedKeys) {
    excl_2986400251(cache_2986404416.removedKeys, key_2986404417);
    }
    
    resize_2986406151(cache_2986404416);

  
}

function HEX5BHEX5DHEX3D_2986404194(cache_2986404197, key_2986404198, val_2986404199) {
    var node_2986404386 = getOrDefault_2986404289(cache_2986404197.table, key_2986404198, null);
    if ((node_2986404386 == null)) {
    addNewNode_2986404413(cache_2986404197, key_2986404198, val_2986404199);
    }
    else {
      node_2986404386.value.val = val_2986404199;
      remove_2986386857(cache_2986404197.list, node_2986404386);
      prepend_2986387161(cache_2986404197.list, node_2986404386);
    }
    

  
}

function getOrCreateNodeLayoutInput_2986404047(ctxHEX60gensym79_2986404048, dataHEX60gensym79_2986404049) {
  var result_2986404050 = null;

  BeforeRet: {
    Label1: {
      var existingHEX60gensym79_2986404059 = null;
      Label2: {
        var node_2936024886 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936024887 = ctxHEX60gensym79_2986404048.itemsNodeLayoutInput.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2936024887 == null))) break Label4;
              node_2936024886 = nimCopy(node_2936024886, it_2936024887.value, NTI2986344583);
              existingHEX60gensym79_2986404059 = node_2936024886.val;
              if (((hash_3070232696(existingHEX60gensym79_2986404059) == hash_3070232696(dataHEX60gensym79_2986404049)) && HEX3DHEX3D_3070232699(existingHEX60gensym79_2986404059, dataHEX60gensym79_2986404049))) {
              result_2986404050 = existingHEX60gensym79_2986404059;
              break BeforeRet;
              }
              
              it_2936024887 = it_2936024887.next;
            }
        };
      };
    };
    var itemHEX60gensym79_2986404060 = getItem_2986404038(dataHEX60gensym79_2986404049);
    var keyHEX60gensym79_2986404061 = nimCopy(null, {Field0: nimCopy(null, itemHEX60gensym79_2986404060, NTI3003121689), Field1: -1}, NTI3003121692);
    HEX5BHEX5DHEX3D_3003133124(ctxHEX60gensym79_2986404048.depGraph.changed, keyHEX60gensym79_2986404061, ctxHEX60gensym79_2986404048.depGraph.revision);
    HEX5BHEX5DHEX3D_2986404194(ctxHEX60gensym79_2986404048.itemsNodeLayoutInput, itemHEX60gensym79_2986404060, dataHEX60gensym79_2986404049);
    result_2986404050 = dataHEX60gensym79_2986404049;
    break BeforeRet;
  };

  return result_2986404050;

}

function hasKey_2986438047(t_2986438050, key_2986438051) {
  var result_2986438052 = false;

    var hc_2986438053 = [0];
    result_2986438052 = (0 <= rawGet_2986387535(t_2986438050, key_2986438051, hc_2986438053, 0));

  return result_2986438052;

}

function contains_2986438041(t_2986438044, key_2986438045) {
  var result_2986438046 = false;

  BeforeRet: {
    result_2986438046 = hasKey_2986438047(t_2986438044, key_2986438045);
    break BeforeRet;
  };

  return result_2986438046;

}

function contains_2986437947(cache_2986437950, key_2986437951) {
  var result_2986437952 = false;

    result_2986437952 = contains_2986438041(cache_2986437950.table, key_2986437951);

  return result_2986437952;

}

function nimFloatToString_385876087(a_385876088) {
  var result_385876089 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_385876088))
      result_385876089 = a_385876088 === 0 && 1 / a_385876088 < 0 ? "-0.0" : a_385876088+".0"
    else {
      result_385876089 = a_385876088+""
      if(nimOnlyDigitsOrMinus(result_385876089)){
        result_385876089 = a_385876088+".0"
      }
    }
  

  return result_385876089;

}

function addFloat_2097153066(result_2097153068, result_2097153068_Idx, x_2097153069) {
    add_33556386(result_2097153068, result_2097153068_Idx, nimFloatToString_385876087(x_2097153069));

  
}

function HEX24_2097153062(x_2097153064) {
  var result_2097153065 = [[]];

    addFloat_2097153066(result_2097153065, 0, x_2097153064);

  return result_2097153065[0];

}

function HEX24_2080374857(a_2080374858) {
  var result_2080374859 = [];

    result_2080374859 = nimCopy(null, ([40] || []).concat(HEX24_2097153062(a_2080374858.x) || [],[44,32] || [],HEX24_2097153062(a_2080374858.y) || [],[58,32] || [],HEX24_2097153062(a_2080374858.w) || [],[32,120,32] || [],HEX24_2097153062(a_2080374858.h) || [],[41] || []), NTI33554449);

  return result_2080374859;

}

function collectionToString_3070232340(x_3070232342, prefix_3070232343, separator_3070232344, suffix_3070232345) {
  var result_3070232346 = [[]];

    result_3070232346[0] = nimCopy(null, prefix_3070232343, NTI33554449);
    var firstElement_3070232347 = true;
    Label1: {
      var value_3070232351 = [];
      var i_2936024905 = 0;
      var L_2936024906 = (x_3070232342).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024905 < L_2936024906)) break Label3;
            value_3070232351 = x_3070232342[i_2936024905];
            if (firstElement_3070232347) {
            firstElement_3070232347 = false;
            }
            else {
            result_3070232346[0].push.apply(result_3070232346[0], separator_3070232344);;
            }
            
            addQuoted_1593835572(result_3070232346, 0, value_3070232351);
            i_2936024905 += 1;
            if (!(((x_3070232342).length == L_2936024906))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3070232346[0].push.apply(result_3070232346[0], suffix_3070232345);;

  return result_3070232346[0];

}

function HEX24_3070232336(x_3070232338) {
  var result_3070232339 = [];

    result_3070232339 = nimCopy(null, collectionToString_3070232340(x_3070232338, [64,91], [44,32], [93]), NTI33554449);

  return result_3070232339;

}

function HEX24_3070232329(vnode_3070232330) {
  var result_3070232331 = [];

    result_3070232331 = nimCopy(null, [86,78,111,100,101,40,39], NTI33554449);
    result_3070232331.push.apply(result_3070232331, (vnode_3070232330.text || []).concat([39,44,32] || []));;
    result_3070232331.push.apply(result_3070232331, (HEX24_2080374857(vnode_3070232330.bounds) || []).concat([44,32] || []));;
    if (!((vnode_3070232330.node == null))) {
    result_3070232331.push.apply(result_3070232331, (HEX24_2969569239(vnode_3070232330.node) || []).concat([44,32] || []));;
    }
    
    result_3070232331.push.apply(result_3070232331, (HEX24_3070232336(vnode_3070232330.colors) || []).concat([44,32] || []));;
    result_3070232331.push.apply(result_3070232331, [41]);;

  return result_3070232331;

}

function join_3070232634(a_3070232636, sep_3070232637) {
  var result_3070232638 = [];

    result_3070232638 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_3070232653 = 0;
      var x_3070232654 = null;
      var i_2936024902 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936024902 < (a_3070232636).length)) break Label3;
            i_3070232653 = i_2936024902;
            x_3070232654 = a_3070232636[chckIndx(i_2936024902, 0, (a_3070232636).length - 1)];
            if ((0 < i_3070232653)) {
            result_3070232638.push.apply(result_3070232638, sep_3070232637);;
            }
            
            result_3070232638.push.apply(result_3070232638, HEX24_3070232329(x_3070232654));;
            i_2936024902 = addInt(i_2936024902, 1);
          }
      };
    };

  return result_3070232638;

}

function HEX24_3070232631(nodeLayout_3070232632) {
  var result_3070232633 = [];

    result_3070232633 = nimCopy(null, join_3070232634(nodeLayout_3070232632.root.children, [10]), NTI33554449);

  return result_3070232633;

}

function HEX24_3070232668(input_3070232669) {
  var result_3070232670 = [];

  BeforeRet: {
    var fmtRes_3070232675 = [mnewString(0)];
    fmtRes_3070232675[0].push.apply(fmtRes_3070232675[0], [78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,40]);;
    formatValue_3003121884(fmtRes_3070232675, 0, input_3070232669.id, []);
    fmtRes_3070232675[0].push.apply(fmtRes_3070232675[0], [44,32,110,111,100,101,58,32]);;
    formatValue_3070231363(fmtRes_3070232675, 0, input_3070232669.node, []);
    fmtRes_3070232675[0].push.apply(fmtRes_3070232675[0], [44,32,115,101,108,101,99,116,101,100,58,32]);;
    formatValue_3003121884(fmtRes_3070232675, 0, input_3070232669.selectedNode, []);
    fmtRes_3070232675[0].push.apply(fmtRes_3070232675[0], [44,32,114,101,118,105,115,105,111,110,58,32]);;
    formatValue_2332033544(fmtRes_3070232675, 0, input_3070232669.revision, []);
    fmtRes_3070232675[0].push.apply(fmtRes_3070232675[0], [41]);;
    result_3070232670 = nimCopy(null, fmtRes_3070232675[0], NTI33554449);
    break BeforeRet;
  };

  return result_3070232670;

}

function raiseKeyError_2986438320(key_2986438322) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(HEX24_3070232668(key_2986438322) || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");

  
}

function HEX5BHEX5D_2986438226(t_2986438229, key_2986438230) {
  var result_2986438231 = null;
  var result_2986438231_Idx = 0;

    var hcHEX60gensym22_2986438232 = [0];
    var indexHEX60gensym22_2986438239 = rawGet_2986387535(t_2986438229, key_2986438230, hcHEX60gensym22_2986438232, 0);
    if ((0 <= indexHEX60gensym22_2986438239)) {
    result_2986438231 = t_2986438229.data[chckIndx(indexHEX60gensym22_2986438239, 0, (t_2986438229.data).length - 1)]; result_2986438231_Idx = "Field2";
    }
    else {
    raiseKeyError_2986438320(key_2986438230);
    }
    

  return [result_2986438231, result_2986438231_Idx];

}

function HEX5BHEX5D_2986438140(cache_2986438143, key_2986438144) {
    var Temporary1;

  var result_2986438145 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

    var node_2986438333 = (Temporary1 = HEX5BHEX5D_2986438226(cache_2986438143.table, key_2986438144), Temporary1)[0][Temporary1[1]];
    result_2986438145 = nimCopy(result_2986438145, node_2986438333.value.val, NTI3070230559);
    remove_2986393414(cache_2986438143.list, node_2986438333);
    prepend_2986389703(cache_2986438143.list, node_2986438333);

  return result_2986438145;

}

function computeNodeLayout_2986438423(ctxHEX60gensym120_2986438424, inputHEX60gensym120_2986438425, recordDependencyHEX60gensym120_2986438426) {
    var Temporary3;
    var Temporary5;

  var result_2986438427 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});

  BeforeRet: {
    var timerHEX60gensym120_2986438428 = startTimer_2281701428();
    ctxHEX60gensym120_2986438424.statsNodeLayout.totalCalls = addInt(ctxHEX60gensym120_2986438424.statsNodeLayout.totalCalls, 1);
    try {
    try {
    var itemHEX60gensym120_2986438517 = getItem_2986404038(inputHEX60gensym120_2986438425);
    var keyHEX60gensym120_2986438518 = {Field0: nimCopy(null, itemHEX60gensym120_2986438517, NTI3003121689), Field1: 7};
    if (recordDependencyHEX60gensym120_2986438426) {
    recordDependency_2986397948(ctxHEX60gensym120_2986438424, itemHEX60gensym120_2986438517, 7);
    }
    
    var colorHEX60gensym120_2986438519 = nodeColor_3003124149(ctxHEX60gensym120_2986438424.depGraph, keyHEX60gensym120_2986438518, 0);
    if (ctxHEX60gensym120_2986438424.enableLogging) {
    Temporary3 = 1;
    }
    else {
    Temporary3 = 0;
    }
    
    currentIndent_3003121678[0] = addInt(currentIndent_3003121678[0], Temporary3);
    try {
    if (ctxHEX60gensym120_2986438424.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(subInt(currentIndent_3003121678[0], 1), 0, 2147483647)), [99,111,109,112,117,116,101], [78,111,100,101,76,97,121,111,117,116], [32], reprEnum(colorHEX60gensym120_2986438519, NTI3003121694), [44,32], HEX24_3003121876(itemHEX60gensym120_2986438517));
    }
    
    if ((colorHEX60gensym120_2986438519 == 2)) {
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    if (ctxHEX60gensym120_2986438424.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym120_2986438424, keyHEX60gensym120_2986438518);
    if (true) {
    markRed_3003136501(ctxHEX60gensym120_2986438424.depGraph, keyHEX60gensym120_2986438518, []);
    }
    
    if ((ctxHEX60gensym120_2986438424.enableLogging && contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070232631(HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425)));
    }
    
    }
    else {
      if ((ctxHEX60gensym120_2986438424.enableLogging && contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070232631(HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425)));
      }
      
    }
    
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232668(inputHEX60gensym120_2986438425) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986438427 = nimCopy(result_2986438427, HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425), NTI3070230559);
    break BeforeRet;
    }
    
    if ((colorHEX60gensym120_2986438519 == 0)) {
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    if (ctxHEX60gensym120_2986438424.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,110,111,116,32,105,110,32,99,97,99,104,101]);
    }
    
    force_2986414319(ctxHEX60gensym120_2986438424, keyHEX60gensym120_2986438518);
    if (true) {
    markRed_3003136501(ctxHEX60gensym120_2986438424.depGraph, keyHEX60gensym120_2986438518, []);
    }
    
    if ((ctxHEX60gensym120_2986438424.enableLogging && contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070232631(HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425)));
    }
    
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232668(inputHEX60gensym120_2986438425) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986438427 = nimCopy(result_2986438427, HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425), NTI3070230559);
    break BeforeRet;
    }
    
    if (ctxHEX60gensym120_2986438424.enableLogging) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,121,44,32,105,110,32,99,97,99,104,101]);
    }
    
    if ((tryMarkGreen_2986415334(ctxHEX60gensym120_2986438424, keyHEX60gensym120_2986438518, true) == 0)) {
    if ((ctxHEX60gensym120_2986438424.enableLogging && contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [103,114,101,101,110,44,32,114,101,115,117,108,116,58,32], HEX24_3070232631(HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425)));
    }
    
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232668(inputHEX60gensym120_2986438425) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986438427 = nimCopy(result_2986438427, HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425), NTI3070230559);
    break BeforeRet;
    }
    else {
      if (ctxHEX60gensym120_2986438424.enableLogging) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [102,97,105,108,101,100,32,116,111,32,109,97,114,107,32,103,114,101,101,110]);
      }
      
      force_2986414319(ctxHEX60gensym120_2986438424, keyHEX60gensym120_2986438518);
      if (true) {
      markRed_3003136501(ctxHEX60gensym120_2986438424.depGraph, keyHEX60gensym120_2986438518, []);
      }
      
      if ((ctxHEX60gensym120_2986438424.enableLogging && contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
      rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,115,117,108,116,58,32], HEX24_3070232631(HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425)));
      }
      
      if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
      raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232668(inputHEX60gensym120_2986438425) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
      }
      
      result_2986438427 = nimCopy(result_2986438427, HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425), NTI3070230559);
      break BeforeRet;
    }
    
    }
    
    if (!((colorHEX60gensym120_2986438519 == 1))) {
    failedAssertImpl_268435515([113,117,101,114,121,95,115,121,115,116,101,109,46,110,105,109,40,55,57,51,44,32,49,49,41,32,96,99,111,108,111,114,96,103,101,110,115,121,109,49,50,48,32,61,61,32,82,101,100,96,32]);
    }
    
    if ((ctxHEX60gensym120_2986438424.enableLogging && contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    rawEcho(repeat2_3003121679([124,32], chckRange(currentIndent_3003121678[0], 0, 2147483647)), [114,101,100,44,32,105,110,32,99,97,99,104,101,44,32,114,101,115,117,108,116,58,32], HEX24_3070232631(HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425)));
    }
    
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    force_2986414319(ctxHEX60gensym120_2986438424, keyHEX60gensym120_2986438518);
    }
    
    if (!(contains_2986437947(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425))) {
    raiseException({message: ([99,111,109,112,117,116,101,78,111,100,101,76,97,121,111,117,116,40] || []).concat(HEX24_3070232668(inputHEX60gensym120_2986438425) || [],[41,58,32,110,111,116,32,105,110,32,99,97,99,104,101,32,97,110,121,109,111,114,101] || []), parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    result_2986438427 = nimCopy(result_2986438427, HEX5BHEX5D_2986438140(ctxHEX60gensym120_2986438424.queryCacheNodeLayout, inputHEX60gensym120_2986438425), NTI3070230559);
    break BeforeRet;
    } finally {
    if (ctxHEX60gensym120_2986438424.enableLogging) {
    Temporary5 = 1;
    }
    else {
    Temporary5 = 0;
    }
    
    currentIndent_3003121678[0] = subInt(currentIndent_3003121678[0], Temporary5);
    }
    } finally {
    if (((ctxHEX60gensym120_2986438424.dependencyStack).length == 0)) {
    clear_2986417549(ctxHEX60gensym120_2986438424.recursiveQueries);
    }
    
    }
    } finally {
    ctxHEX60gensym120_2986438424.statsNodeLayout.time = addInt(ctxHEX60gensym120_2986438424.statsNodeLayout.time, elapsed_2281701439(timerHEX60gensym120_2986438428));
    }
  };

  return result_2986438427;

}

function prev_2969567471(node_2969567472) {
  var result_2969567474 = ({val: null});

  BeforeRet: {
    if ((node_2969567472.parent == null)) {
    result_2969567474 = nimCopy(result_2969567474, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var i_2969567481 = index_2969567340(node_2969567472);
    if ((i_2969567481 <= 0)) {
    result_2969567474 = nimCopy(result_2969567474, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    result_2969567474 = nimCopy(result_2969567474, some_2969567458(HEX5BHEX5D_2969567316(node_2969567472.parent, subInt(i_2969567481, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2969567474;

}

function HEX2BHEX3D_2936016193(aHEX60gensym160_2936016195, bHEX60gensym160_2936016196) {
    HEX2BHEX3D_2080374895(aHEX60gensym160_2936016195.arr, 0, bHEX60gensym160_2936016196);
    HEX2BHEX3D_2080374895(aHEX60gensym160_2936016195.arr, 1, bHEX60gensym160_2936016196);

  
}

function bounds_3070232665(nodeLayout_3070232666) {
  var result_3070232667 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

  BeforeRet: {
    result_3070232667 = nimCopy(result_3070232667, nodeLayout_3070232666.root.bounds, NTI2080374789);
    break BeforeRet;
  };

  return result_3070232667;

}

function insert_2936016361(x_2936016363, x_2936016363_Idx, item_2936016364, i_2936016365) {
    var it_2936016385 = {Field0: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null}), Field1: ({arr: new Float32Array(2)})};
    x_2936016363[x_2936016363_Idx] = x_2936016363[x_2936016363_Idx] || []; x_2936016363[x_2936016363_Idx].splice(i_2936016365, 0, it_2936016385);
    x_2936016363[x_2936016363_Idx][chckIndx(i_2936016365, 0, (x_2936016363[x_2936016363_Idx]).length - 1)] = nimCopy(x_2936016363[x_2936016363_Idx][chckIndx(i_2936016365, 0, (x_2936016363[x_2936016363_Idx]).length - 1)], item_2936016364, NTI2936014334);

  
}

function next_2969567425(node_2969567426) {
  var result_2969567431 = ({val: null});

  BeforeRet: {
    if ((node_2969567426.parent == null)) {
    result_2969567431 = nimCopy(result_2969567431, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var i_2969567455 = index_2969567340(node_2969567426);
    if ((subInt(len_2969567320(node_2969567426.parent), 1) <= i_2969567455)) {
    result_2969567431 = nimCopy(result_2969567431, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    result_2969567431 = nimCopy(result_2969567431, some_2969567458(HEX5BHEX5D_2969567316(node_2969567426.parent, addInt(i_2969567455, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2969567431;

}

function HEX5BHEX5D_2936017217(t_2936017220, key_2936017221) {
  var result_2936017222 = ({parent: null, first: 0, last: 0});

    var hcHEX60gensym20_2936017223 = [0];
    var indexHEX60gensym20_2936017230 = rawGet_3103785569(t_2936017220, key_2936017221, hcHEX60gensym20_2936017223, 0);
    if ((0 <= indexHEX60gensym20_2936017230)) {
    result_2936017222 = nimCopy(result_2936017222, t_2936017220.data[chckIndx(indexHEX60gensym20_2936017230, 0, (t_2936017220.data).length - 1)].Field2, NTI3070230558);
    }
    else {
    raiseKeyError_2969569048(key_2936017221);
    }
    

  return result_2936017222;

}

function handleSelectedNodeChanged_2936015482(editor_2936015483) {
          
function HEX3Aanonymous_2936016078(t_2936016081) {
            var result_2936016084 = ({arr: new Float32Array(2)});

              result_2936016084 = nimCopy(result_2936016084, measureText_2315255958(gEditor.platform, t_2936016081), NTI2097152387);

            return result_2936016084;

          }
            var Temporary9;
            var Temporary10;
              var Temporary11;
          
function HEX3Aanonymous_2936016179(t_2936016182) {
            var result_2936016185 = ({arr: new Float32Array(2)});

              result_2936016185 = nimCopy(result_2936016185, measureText_2315255958(gEditor.platform, t_2936016182), NTI2097152387);

            return result_2936016185;

          }
            var Temporary15;
            var Temporary16;
              var Temporary17;
          
function HEX3Aanonymous_2936016578(t_2936016581) {
            var result_2936016584 = ({arr: new Float32Array(2)});

              result_2936016584 = nimCopy(result_2936016584, measureText_2315255958(gEditor.platform, t_2936016581), NTI2097152387);

            return result_2936016584;

          }
    
function HEX3Aanonymous_2936017068(t_2936017071) {
      var result_2936017074 = ({arr: new Float32Array(2)});

        result_2936017074 = nimCopy(result_2936017074, measureText_2315255958(gEditor.platform, t_2936017071), NTI2097152387);

      return result_2936017074;

    }

  BeforeRet: {
    var node_2936015484 = node_2936015479(editor_2936015483);
    var foundNode_2936015485 = false;
    var i_2936015486 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_2936015486 < (editor_2936015483.lastLayouts).length)) break Label2;
          try {
          var layout_2936015496 = nimCopy(null, editor_2936015483.lastLayouts[chckIndx(i_2936015486, 0, (editor_2936015483.lastLayouts).length - 1)].Field0, NTI3070230559);
          var offset_2936015497 = nimCopy(null, editor_2936015483.lastLayouts[chckIndx(i_2936015486, 0, (editor_2936015483.lastLayouts).length - 1)].Field1, NTI2097152387);
          if (contains_2936015556(layout_2936015496.nodeToVisualNode, node_2936015484.id)) {
          var visualNode_2936015755 = nimCopy(null, HEX5BHEX5D_2936015652(layout_2936015496.nodeToVisualNode, node_2936015484.id), NTI3070230558);
          var bounds_2936015837 = HEX2B_2063597727(absoluteBounds_3070232308(visualNode_2936015755), vec2_2097152992(0.0, offset_2936015497.arr[chckIndx(1, 0, (offset_2936015497.arr).length - 1)]));
          if (!(intersects_2063597753(bounds_2936015837, editor_2936015483.lastBounds))) {
          break Label1;
          }
          
          if (((bounds_2936015837.y + bounds_2936015837.h) < 100.0)) {
          var subbase_2936015838 = subbase_2969567333(node_2936015484);
          editor_2936015483.previousBaseIndex = index_2969567340(subbase_2936015838);
          editor_2936015483.scrollOffset = (100.0 - ((bounds_2936015837.y + bounds_2936015837.h) - offset_2936015497.arr[chckIndx(1, 0, (offset_2936015497.arr).length - 1)]));
          }
          else {
          if (((editor_2936015483.lastBounds.h - 100.0) < bounds_2936015837.y)) {
          var subbase_2936015917 = subbase_2969567333(node_2936015484);
          editor_2936015483.previousBaseIndex = index_2969567340(subbase_2936015917);
          editor_2936015483.scrollOffset = ((-((bounds_2936015837.y - offset_2936015497.arr[chckIndx(1, 0, (offset_2936015497.arr).length - 1)])) + editor_2936015483.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2936015486 = addInt(i_2936015486, 1);
          }
        }
    };
    i_2936015486 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_2936015486 < (editor_2936015483.lastLayouts).length)) break Label5;
          try {
          var layout_2936016004 = nimCopy(null, editor_2936015483.lastLayouts[chckIndx(i_2936015486, 0, (editor_2936015483.lastLayouts).length - 1)].Field0, NTI3070230559);
          var offset_2936016005 = [nimCopy(null, editor_2936015483.lastLayouts[chckIndx(i_2936015486, 0, (editor_2936015483.lastLayouts).length - 1)].Field1, NTI2097152387)];
          var targetNode_2936016006 = node_2936015484;
          Label7: {
              Label8: while (true) {
              if (!(!((targetNode_2936016006 == null)) && !(contains_2936015556(layout_2936016004.nodeToVisualNode, targetNode_2936016006.id)))) break Label8;
                targetNode_2936016006 = targetNode_2936016006.parent;
              }
          };
          if (!((targetNode_2936016006 == null))) {
          var input_2936016085 = getOrCreateNodeLayoutInput_2986404047(ctx_2936012853, {node: subbase_2969567333(targetNode_2936016006), selectedNode: nimCopy(null, node_2936015484.id, NTI2181038083), measureText: HEX3Aanonymous_2936016078, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2936016004 = nimCopy(layout_2936016004, computeNodeLayout_2986438423(ctx_2936012853, input_2936016085, true), NTI3070230559);
          foundNode_2936015485 = true;
          }
          else {
            if (!(node_2936015484.parent == editor_2936015483.document.rootNode)) Temporary10 = false; else {              var oHEX60gensym34_2936016092 = prev_2969567471(node_2936015484);
              if (!isSome_2969569114(oHEX60gensym34_2936016092)) Temporary11 = false; else {                var prev_2936016115 = get_2969569134(oHEX60gensym34_2936016092);
                Temporary11 = true;              }              Temporary10 = Temporary11;            }            if (!Temporary10) Temporary9 = false; else {              Temporary9 = contains_2936015556(layout_2936016004.nodeToVisualNode, prev_2936016115.id);            }          if (Temporary9) {
          var input_2936016186 = getOrCreateNodeLayoutInput_2986404047(ctx_2936012853, {node: subbase_2969567333(node_2936015484), selectedNode: nimCopy(null, node_2936015484.id, NTI2181038083), measureText: HEX3Aanonymous_2936016179, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2936016004 = nimCopy(layout_2936016004, computeNodeLayout_2986438423(ctx_2936012853, input_2936016186, true), NTI3070230559);
          HEX2BHEX3D_2936016193(offset_2936016005[0], bounds_3070232665(layout_2936016004).h);
          insert_2936016361(editor_2936015483, "lastLayouts", {Field0: nimCopy(null, layout_2936016004, NTI3070230559), Field1: nimCopy(null, offset_2936016005[0], NTI2097152387)}, chckRange(addInt(i_2936015486, 1), 0, 2147483647));
          Label12: {
            var k_2936016402 = 0;
            var colontmp__2936024868 = 0;
            var colontmp__2936024869 = 0;
            colontmp__2936024868 = addInt(i_2936015486, 1);
            colontmp__2936024869 = (editor_2936015483.lastLayouts).length - 1;
            var res_2936024870 = colontmp__2936024868;
            Label13: {
                Label14: while (true) {
                if (!(res_2936024870 <= colontmp__2936024869)) break Label14;
                  k_2936016402 = res_2936024870;
                  HEX2BHEX3D_2080374895(editor_2936015483.lastLayouts[chckIndx(k_2936016402, 0, (editor_2936015483.lastLayouts).length - 1)].Field1.arr, chckIndx(1, 0, (editor_2936015483.lastLayouts[chckIndx(k_2936016402, 0, (editor_2936015483.lastLayouts).length - 1)].Field1.arr).length - 1), bounds_3070232665(layout_2936016004).h);
                  res_2936024870 = addInt(res_2936024870, 1);
                }
            };
          };
          foundNode_2936015485 = true;
          }
          else {
            if (!(node_2936015484.parent == editor_2936015483.document.rootNode)) Temporary16 = false; else {              var oHEX60gensym40_2936016491 = next_2969567425(node_2936015484);
              if (!isSome_2969569114(oHEX60gensym40_2936016491)) Temporary17 = false; else {                var next_2936016514 = get_2969569134(oHEX60gensym40_2936016491);
                Temporary17 = true;              }              Temporary16 = Temporary17;            }            if (!Temporary16) Temporary15 = false; else {              Temporary15 = contains_2936015556(layout_2936016004.nodeToVisualNode, next_2936016514.id);            }          if (Temporary15) {
          var input_2936016585 = getOrCreateNodeLayoutInput_2986404047(ctx_2936012853, {node: subbase_2969567333(node_2936015484), selectedNode: nimCopy(null, node_2936015484.id, NTI2181038083), measureText: HEX3Aanonymous_2936016578, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
          layout_2936016004 = nimCopy(layout_2936016004, computeNodeLayout_2986438423(ctx_2936012853, input_2936016585, true), NTI3070230559);
          insert_2936016361(editor_2936015483, "lastLayouts", {Field0: nimCopy(null, layout_2936016004, NTI3070230559), Field1: nimCopy(null, offset_2936016005[0], NTI2097152387)}, chckRange(i_2936015486, 0, 2147483647));
          Label18: {
            var k_2936016598 = 0;
            var colontmp__2936024873 = 0;
            colontmp__2936024873 = (editor_2936015483.lastLayouts).length - 1;
            var res_2936024874 = i_2936015486;
            Label19: {
                Label20: while (true) {
                if (!(res_2936024874 <= colontmp__2936024873)) break Label20;
                  k_2936016598 = res_2936024874;
                  HEX2BHEX3D_2080374895(editor_2936015483.lastLayouts[chckIndx(k_2936016598, 0, (editor_2936015483.lastLayouts).length - 1)].Field1.arr, chckIndx(1, 0, (editor_2936015483.lastLayouts[chckIndx(k_2936016598, 0, (editor_2936015483.lastLayouts).length - 1)].Field1.arr).length - 1), bounds_3070232665(layout_2936016004).h);
                  res_2936024874 = addInt(res_2936024874, 1);
                }
            };
          };
          foundNode_2936015485 = true;
          }
          }}
          if ((foundNode_2936015485 && contains_2936015556(layout_2936016004.nodeToVisualNode, node_2936015484.id))) {
          var visualNode_2936016826 = nimCopy(null, HEX5BHEX5D_2936015652(layout_2936016004.nodeToVisualNode, node_2936015484.id), NTI3070230558);
          var bounds_2936016908 = HEX2B_2063597727(absoluteBounds_3070232308(visualNode_2936016826), vec2_2097152992(0.0, offset_2936016005[0].arr[chckIndx(1, 0, (offset_2936016005[0].arr).length - 1)]));
          if (!(intersects_2063597753(bounds_2936016908, rect_2080374802(0.0, 0.0, editor_2936015483.lastBounds.w, editor_2936015483.lastBounds.h)))) {
          break Label4;
          }
          
          if (((bounds_2936016908.y + bounds_2936016908.h) < 100.0)) {
          var subbase_2936016909 = subbase_2969567333(node_2936015484);
          editor_2936015483.previousBaseIndex = index_2969567340(subbase_2936016909);
          editor_2936015483.scrollOffset = (100.0 - ((bounds_2936016908.y + bounds_2936016908.h) - offset_2936016005[0].arr[chckIndx(1, 0, (offset_2936016005[0].arr).length - 1)]));
          }
          else {
          if (((editor_2936015483.lastBounds.h - 100.0) < bounds_2936016908.y)) {
          var subbase_2936016988 = subbase_2969567333(node_2936015484);
          editor_2936015483.previousBaseIndex = index_2969567340(subbase_2936016988);
          editor_2936015483.scrollOffset = ((-((bounds_2936016908.y - offset_2936016005[0].arr[chckIndx(1, 0, (offset_2936016005[0].arr).length - 1)])) + editor_2936015483.lastBounds.h) - 100.0);
          }
          }
          break BeforeRet;
          }
          
          } finally {
          i_2936015486 = addInt(i_2936015486, 1);
          }
        }
    };
    var subbase_2936017067 = subbase_2969567333(node_2936015484);
    var input_2936017075 = getOrCreateNodeLayoutInput_2986404047(ctx_2936012853, {node: subbase_2936017067, selectedNode: nimCopy(null, node_2936015484.id, NTI2181038083), measureText: HEX3Aanonymous_2936017068, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), replacements: ({data: [], counter: 0}), revision: 0, renderDivisionVertically: false});
    var layout_2936017076 = computeNodeLayout_2986438423(ctx_2936012853, input_2936017075, true);
    if (contains_2936015556(layout_2936017076.nodeToVisualNode, node_2936015484.id)) {
    var visualNode_2936017311 = HEX5BHEX5D_2936017217(layout_2936017076.nodeToVisualNode, node_2936015484.id);
    var bounds_2936017312 = absoluteBounds_3070232308(visualNode_2936017311);
    editor_2936015483.previousBaseIndex = index_2969567340(subbase_2936017067);
    editor_2936015483.scrollOffset = (-(bounds_2936017312.y) + (editor_2936015483.lastBounds.h * 0.5));
    }
    
  };

  
}

function nodeHEX3D_2936017358(editor_2936017359, node_2936017360) {
  BeforeRet: {
    if ((node_2936017360 == editor_2936017359.selectedNode)) {
    break BeforeRet;
    }
    
    if (((node_2936017360.parent == null) || !((base_2969567326(node_2936017360) == editor_2936017359.document.rootNode)))) {
    break BeforeRet;
    }
    
    if (!((editor_2936017359.selectedNode == null))) {
    addLast_2936017382(editor_2936017359.selectionHistory, editor_2936017359.selectedNode);
    }
    
    if ((100 < len_2936017523(editor_2936017359.selectionHistory))) {
    var _ = popFirst_2936017532(editor_2936017359.selectionHistory);
    }
    
    editor_2936017359.selectedNode = node_2936017360;
    handleSelectedNodeChanged_2936015482(editor_2936017359);
  };

  
}

function moveCursor_2936024757(self_2936024758, direction_2936024759) {
  BeforeRet: {
    if ((direction_2936024759 < 0)) {
    if (isEditing_2936021000(self_2936024758)) {
    break BeforeRet;
    }
    
    var index_2936024760 = index_2969567340(node_2936015479(self_2936024758));
    if ((0 < index_2936024760)) {
    nodeHEX3D_2936017358(self_2936024758, HEX5BHEX5D_2969567316(node_2936015479(self_2936024758).parent, subInt(index_2936024760, 1)));
    }
    
    }
    else {
      if (isEditing_2936021000(self_2936024758)) {
      break BeforeRet;
      }
      
      var index_2936024761 = index_2969567340(node_2936015479(self_2936024758));
      if (((0 <= index_2936024761) && (index_2936024761 < subInt(len_2969567320(node_2936015479(self_2936024758).parent), 1)))) {
      nodeHEX3D_2936017358(self_2936024758, HEX5BHEX5D_2969567316(node_2936015479(self_2936024758).parent, addInt(index_2936024761, 1)));
      }
      
    }
    
  };

  
}

function moveCursorJsWrapper_2936024753(self_2936024813, direction_2936024814) {
    moveCursor_2936024757(self_2936024813, direction_2936024814);

  
}
editor_ast_prototype.moveCursor = function(direction_ /* : int */) { return (moveCursorJsWrapper_2936024753(this, direction_));};

function moveCursorUp_2936024915(self_2936024916) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936024916)) {
    break BeforeRet;
    }
    
    if (((!((node_2936015479(self_2936024916) == self_2936024916.document.rootNode)) && !((node_2936015479(self_2936024916).parent == self_2936024916.document.rootNode))) && !((node_2936015479(self_2936024916).parent == null)))) {
    nodeHEX3D_2936017358(self_2936024916, node_2936015479(self_2936024916).parent);
    }
    
  };

  
}

function moveCursorUpJsWrapper_2936024911(self_2936024956) {
    moveCursorUp_2936024915(self_2936024956);

  
}
editor_ast_prototype.moveCursorUp = function() { return (moveCursorUpJsWrapper_2936024911(this));};

function moveCursorDown_2936024977(self_2936024978) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936024978)) {
    break BeforeRet;
    }
    
    if ((0 < len_2969567320(node_2936015479(self_2936024978)))) {
    nodeHEX3D_2936017358(self_2936024978, HEX5BHEX5D_2969567316(node_2936015479(self_2936024978), 0));
    }
    
  };

  
}

function moveCursorDownJsWrapper_2936024973(self_2936025006) {
    moveCursorDown_2936024977(self_2936025006);

  
}
editor_ast_prototype.moveCursorDown = function() { return (moveCursorDownJsWrapper_2936024973(this));};

function getNextChild_2936015474(document_2936015475, node_2936015476, min_2936015477) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2936021634 = ({val: null});

  BeforeRet: {
    if ((len_2969567320(node_2936015476) == 0)) {
    result_2936021634 = nimCopy(result_2936021634, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2936021637 = node_2936015476;
      var pos_2936021638 = 0;
      var _ = pos_2936021638;
      if ((expr_2936021637.kind == 8)) {
        var oHEX60gensym128_2936021647 = computeSymbol_2986424064(ctx_2936012853, HEX5BHEX5D_2969567316(node_2936015476, 0), true);
        if (!isSome_3070232117(oHEX60gensym128_2936021647)) Temporary3 = false; else {          var sym_2936021670 = get_3070232137(oHEX60gensym128_2936021647);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2936021670.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2936021670;
      if (ConstSet164[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2969567320(node_2936015476) == 3)) {
        if ((min_2936015477 == 0)) {
        result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, 2)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((min_2936015477 == 1)) {
        result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((min_2936015477 == 2)) {
        result_2936021634 = nimCopy(result_2936021634, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2969567320(node_2936015476) == 2)) {
        if ((min_2936015477 == 0)) {
        result_2936021634 = nimCopy(result_2936021634, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        if ((min_2936015477 == 1)) {
        result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((min_2936015477 < 0)) {
    result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, 0)), NTI2969567351);
    break BeforeRet;
    }
    
    if ((subInt(len_2969567320(node_2936015476), 1) <= min_2936015477)) {
    result_2936021634 = nimCopy(result_2936021634, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    result_2936021634 = nimCopy(result_2936021634, some_2969567458(HEX5BHEX5D_2969567316(node_2936015476, addInt(min_2936015477, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021634;

}

function shouldSelectNode_2936021702(node_2936021703) {
  var result_2936021704 = false;

  BeforeRet: {
    switch (node_2936021703.kind) {
    case 8:
    case 7:
    case 12:
    case 13:
      result_2936021704 = (len_2969567320(node_2936021703) == 0);
      break BeforeRet;
      break;
    default: 
      result_2936021704 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2936021704;

}

function moveCursorNext_2936025027(self_2936025028) {
              var Temporary5;
                var Temporary6;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025028)) {
    break BeforeRet;
    }
    
    var node_2936025029 = node_2936015479(self_2936025028);
    Label1: {
      var __2936025030 = 0;
      var n_2936025031 = null;
      var colontmp__2936025080 = null;
      colontmp__2936025080 = node_2936015479(self_2936025028);
      var n_2936025082 = colontmp__2936025080;
      var i_2936025083 = 0;
      var gotoChild_2936025084 = true;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936025082 == null))) break Label3;
            if ((gotoChild_2936025084 && (0 < len_2969567320(n_2936025082)))) {
            n_2936025082 = get_2969569134(getNextChild_2936015474(self_2936025028.document, n_2936025082, -1));
            __2936025030 = i_2936025083;
            n_2936025031 = n_2936025082;
            Label4: {
              if (!(shouldSelectNode_2936021702(n_2936025031))) {
              break Label4;
              }
              
              if (!((n_2936025031 == node_2936015479(self_2936025028)))) {
              nodeHEX3D_2936017358(self_2936025028, n_2936025031);
              break Label1;
              }
              
            };
            gotoChild_2936025084 = true;
            }
            else {
              if (!!((n_2936025082.parent == null))) Temporary5 = false; else {                var oHEX60gensym85_2936025086 = getNextChild_2936015474(self_2936025028.document, n_2936025082.parent, index_2969567340(n_2936025082));
                if (!isSome_2969569114(oHEX60gensym85_2936025086)) Temporary6 = false; else {                  var ne_2936025087 = get_2969569134(oHEX60gensym85_2936025086);
                  Temporary6 = true;                }                Temporary5 = Temporary6;              }            if (Temporary5) {
            n_2936025082 = ne_2936025087;
            __2936025030 = i_2936025083;
            n_2936025031 = n_2936025082;
            Label7: {
              if (!(shouldSelectNode_2936021702(n_2936025031))) {
              break Label7;
              }
              
              if (!((n_2936025031 == node_2936015479(self_2936025028)))) {
              nodeHEX3D_2936017358(self_2936025028, n_2936025031);
              break Label1;
              }
              
            };
            gotoChild_2936025084 = true;
            }
            else {
              gotoChild_2936025084 = false;
              n_2936025082 = n_2936025082.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorNextJsWrapper_2936025023(self_2936025063) {
    moveCursorNext_2936025027(self_2936025063);

  
}
editor_ast_prototype.moveCursorNext = function() { return (moveCursorNextJsWrapper_2936025023(this));};

function getPrevChild_2936015469(document_2936015470, node_2936015471, max_2936015472) {
        var Temporary2;
        var Temporary3;
      var Temporary4;

  var result_2936021784 = ({val: null});

  BeforeRet: {
    if ((len_2969567320(node_2936015471) == 0)) {
    result_2936021784 = nimCopy(result_2936021784, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    Label1: {
      var expr_2936021787 = node_2936015471;
      var pos_2936021788 = 0;
      var _ = pos_2936021788;
      if ((expr_2936021787.kind == 8)) {
        var oHEX60gensym137_2936021797 = computeSymbol_2986424064(ctx_2936012853, HEX5BHEX5D_2969567316(node_2936015471, 0), true);
        if (!isSome_3070232117(oHEX60gensym137_2936021797)) Temporary3 = false; else {          var sym_2936021820 = get_3070232137(oHEX60gensym137_2936021797);
          Temporary3 = true;        }        if (!Temporary3) Temporary2 = false; else {          Temporary2 = (sym_2936021820.kind == 1);        }      if (Temporary2) {
      var Temporary4 = sym_2936021820;
      if (ConstSet165[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230537)); }
      switch (Temporary4.operatorNotation) {
      case 3:
        if ((len_2969567320(node_2936015471) == 3)) {
        if ((max_2936015472 == 0)) {
        result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((max_2936015472 == 1)) {
        result_2936021784 = nimCopy(result_2936021784, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        if ((max_2936015472 == 2)) {
        result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, 2)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      case 2:
        if ((len_2969567320(node_2936015471) == 2)) {
        if ((max_2936015472 == 0)) {
        result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, 1)), NTI2969567351);
        break BeforeRet;
        }
        
        if ((max_2936015472 == 1)) {
        result_2936021784 = nimCopy(result_2936021784, none_2969567436(), NTI2969567351);
        break BeforeRet;
        }
        
        result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, 0)), NTI2969567351);
        break BeforeRet;
        }
        
        break;
      default: 
        break;
      }
      }
      
      }
      else {
      }
      
    };
    if ((max_2936015472 < 0)) {
    result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, subInt(len_2969567320(node_2936015471), 1))), NTI2969567351);
    break BeforeRet;
    }
    else {
    if ((max_2936015472 == 0)) {
    result_2936021784 = nimCopy(result_2936021784, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    }
    result_2936021784 = nimCopy(result_2936021784, some_2969567458(HEX5BHEX5D_2969567316(node_2936015471, subInt(max_2936015472, 1))), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021784;

}

function moveCursorPrev_2936025095(self_2936025096) {
              var Temporary4;
                var Temporary5;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025096)) {
    break BeforeRet;
    }
    
    var node_2936025097 = node_2936015479(self_2936025096);
    Label1: {
      var n_2936025098 = null;
      var colontmp__2936025147 = null;
      colontmp__2936025147 = node_2936015479(self_2936025096);
      var gotoChild_2936025149 = false;
      var n_2936025150 = colontmp__2936025147;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936025150 == null))) break Label3;
            if ((gotoChild_2936025149 && (0 < len_2969567320(n_2936025150)))) {
            n_2936025150 = get_2969569134(getPrevChild_2936015469(self_2936025096.document, n_2936025150, -1));
            gotoChild_2936025149 = true;
            }
            else {
              if (!!((n_2936025150.parent == null))) Temporary4 = false; else {                var oHEX60gensym89_2936025152 = getPrevChild_2936015469(self_2936025096.document, n_2936025150.parent, index_2969567340(n_2936025150));
                if (!isSome_2969569114(oHEX60gensym89_2936025152)) Temporary5 = false; else {                  var ne_2936025153 = get_2969569134(oHEX60gensym89_2936025152);
                  Temporary5 = true;                }                Temporary4 = Temporary5;              }            if (Temporary4) {
            n_2936025098 = n_2936025150;
            Label6: {
              if (!(shouldSelectNode_2936021702(n_2936025098))) {
              break Label6;
              }
              
              if (!((n_2936025098 == node_2936015479(self_2936025096)))) {
              nodeHEX3D_2936017358(self_2936025096, n_2936025098);
              break Label1;
              }
              
            };
            n_2936025150 = ne_2936025153;
            gotoChild_2936025149 = true;
            }
            else {
              n_2936025098 = n_2936025150;
              Label7: {
                if (!(shouldSelectNode_2936021702(n_2936025098))) {
                break Label7;
                }
                
                if (!((n_2936025098 == node_2936015479(self_2936025096)))) {
                nodeHEX3D_2936017358(self_2936025096, n_2936025098);
                break Label1;
                }
                
              };
              gotoChild_2936025149 = false;
              n_2936025150 = n_2936025150.parent;
            }
            }
          }
      };
    };
  };

  
}

function moveCursorPrevJsWrapper_2936025091(self_2936025130) {
    moveCursorPrev_2936025095(self_2936025130);

  
}
editor_ast_prototype.moveCursorPrev = function() { return (moveCursorPrevJsWrapper_2936025091(this));};

function getNextLine_2936021868(document_2936021869, node_2936021870) {
              var Temporary6;
              var Temporary7;

  var result_2936021872 = ({val: null});

  BeforeRet: {
    Label1: {
      var __2936021873 = 0;
      var n_2936021874 = null;
      var n_2936025234 = node_2936021870;
      var idx_2936025235 = -1;
      var i_2936025236 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2936025235 == -1)) {
            __2936021873 = i_2936025236;
            n_2936021874 = n_2936025234;
            Label5: {
              if (((n_2936021874 == node_2936021870) || (n_2936021874.parent == null))) {
              break Label5;
              }
              
              if ((n_2936021874.parent.kind == 7)) {
              if (((n_2936021874.kind == 7) && (len_2969567320(n_2936021874) == 0))) {
              result_2936021872 = nimCopy(result_2936021872, some_2969567458(n_2936021874), NTI2969567351);
              break BeforeRet;
              }
              else {
              if (!((n_2936021874.kind == 7))) {
              result_2936021872 = nimCopy(result_2936021872, some_2969567458(n_2936021874), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2936021874.parent.kind == 9)) {
              var isElse_2936021909 = ((n_2936021874 == last_2969567490(n_2936021874.parent)) && !((modInt(len_2969567320(n_2936021874.parent), 2) == 0)));
              var isCondition_2936021910 = (!(isElse_2936021909) && (modInt(index_2969567340(n_2936021874), 2) == 0));
              if (((n_2936021874.kind == 7) && (len_2969567320(n_2936021874) == 0))) {
              result_2936021872 = nimCopy(result_2936021872, some_2969567458(n_2936021874), NTI2969567351);
              break BeforeRet;
              }
              else {
              if ((!((n_2936021874.kind == 7)) && (!(isCondition_2936021910) || (0 < index_2969567340(n_2936021874))))) {
              result_2936021872 = nimCopy(result_2936021872, some_2969567458(n_2936021874), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
            };
            }
            
            if ((addInt(idx_2936025235, 1) < len_2969567320(n_2936025234))) {
            n_2936025234 = HEX5BHEX5D_2969567316(n_2936025234, addInt(idx_2936025235, 1));
            idx_2936025235 = -1;
            }
            else {
              var oHEX60gensym74_2936025238 = next_2969567425(n_2936025234);
              if (!isSome_2969569114(oHEX60gensym74_2936025238)) Temporary7 = false; else {                var ne_2936025239 = get_2969569134(oHEX60gensym74_2936025238);
                Temporary7 = true;              }              if (!Temporary7) Temporary6 = false; else {                Temporary6 = !((n_2936025234 == null));              }            if (Temporary6) {
            n_2936025234 = ne_2936025239;
            idx_2936025235 = -1;
            }
            else {
            if (((!((n_2936025234.parent == null)) && !((n_2936025234 == null))) && !((n_2936025234.parent == null)))) {
            idx_2936025235 = index_2969567340(n_2936025234);
            n_2936025234 = n_2936025234.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2936025236 = addInt(i_2936025236, 1);
            }
          }
      };
    };
    result_2936021872 = nimCopy(result_2936021872, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021872;

}

function moveCursorNextLine_2936025161(self_2936025162) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025162)) {
    break BeforeRet;
    }
    
      var oHEX60gensym593_2936025165 = getNextLine_2936021868(self_2936025162.document, node_2936015479(self_2936025162));
      if (!isSome_2969569114(oHEX60gensym593_2936025165)) Temporary1 = false; else {        var next_2936025188 = get_2969569134(oHEX60gensym593_2936025165);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936017358(self_2936025162, next_2936025188);
    }
    
  };

  
}

function moveCursorNextLineJsWrapper_2936025157(self_2936025216) {
    moveCursorNextLine_2936025161(self_2936025216);

  
}
editor_ast_prototype.moveCursorNextLine = function() { return (moveCursorNextLineJsWrapper_2936025157(this));};

function contains_1191183809(s_1191183813, value_1191183814) {
  var result_1191183815 = false;

    result_1191183815 = ((s_1191183813.a <= value_1191183814) && (value_1191183814 <= s_1191183813.b));

  return result_1191183815;

}

function getPrevLine_2936021927(document_2936021928, node_2936021929) {
              var Temporary4;

  var result_2936021931 = ({val: null});

  BeforeRet: {
    Label1: {
      var n_2936021932 = null;
      var idx_2936025319 = 0;
      var n_2936025320 = node_2936021929;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936025320 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936025320), 1)), subInt(idx_2936025319, 1))) {
            n_2936025320 = HEX5BHEX5D_2969567316(n_2936025320, subInt(idx_2936025319, 1));
            idx_2936025319 = len_2969567320(n_2936025320);
            }
            else {
              var oHEX60gensym93_2936025322 = prev_2969567471(n_2936025320);
              if (!isSome_2969569114(oHEX60gensym93_2936025322)) Temporary4 = false; else {                var ne_2936025323 = get_2969569134(oHEX60gensym93_2936025322);
                Temporary4 = true;              }            if (Temporary4) {
            n_2936021932 = n_2936025320;
            Label5: {
              if (((n_2936021932 == node_2936021929) || (n_2936021932.parent == null))) {
              break Label5;
              }
              
              if ((n_2936021932.parent.kind == 7)) {
              if (((n_2936021932.kind == 7) && (len_2969567320(n_2936021932) == 0))) {
              result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
              break BeforeRet;
              }
              else {
              if (!((n_2936021932.kind == 7))) {
              result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2936021932.parent.kind == 9)) {
              var isElse_2936021967 = ((n_2936021932 == last_2969567490(n_2936021932.parent)) && !((modInt(len_2969567320(n_2936021932.parent), 2) == 0)));
              var isCondition_2936021968 = (!(isElse_2936021967) && (modInt(index_2969567340(n_2936021932), 2) == 0));
              if (((n_2936021932.kind == 7) && (len_2969567320(n_2936021932) == 0))) {
              result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
              break BeforeRet;
              }
              else {
              if ((!((n_2936021932.kind == 7)) && (!(isCondition_2936021968) || (0 < index_2969567340(n_2936021932))))) {
              result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
              break BeforeRet;
              }
              }
              }
              
              if ((n_2936021932.kind == 9)) {
              result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
              break BeforeRet;
              }
              
            };
            n_2936025320 = ne_2936025323;
            idx_2936025319 = len_2969567320(n_2936025320);
            }
            else {
              n_2936021932 = n_2936025320;
              Label6: {
                if (((n_2936021932 == node_2936021929) || (n_2936021932.parent == null))) {
                break Label6;
                }
                
                if ((n_2936021932.parent.kind == 7)) {
                if (((n_2936021932.kind == 7) && (len_2969567320(n_2936021932) == 0))) {
                result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
                break BeforeRet;
                }
                else {
                if (!((n_2936021932.kind == 7))) {
                result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2936021932.parent.kind == 9)) {
                var isElse_2936025324 = ((n_2936021932 == last_2969567490(n_2936021932.parent)) && !((modInt(len_2969567320(n_2936021932.parent), 2) == 0)));
                var isCondition_2936025325 = (!(isElse_2936025324) && (modInt(index_2969567340(n_2936021932), 2) == 0));
                if (((n_2936021932.kind == 7) && (len_2969567320(n_2936021932) == 0))) {
                result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
                break BeforeRet;
                }
                else {
                if ((!((n_2936021932.kind == 7)) && (!(isCondition_2936025325) || (0 < index_2969567340(n_2936021932))))) {
                result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
                break BeforeRet;
                }
                }
                }
                
                if ((n_2936021932.kind == 9)) {
                result_2936021931 = nimCopy(result_2936021931, some_2969567458(n_2936021932), NTI2969567351);
                break BeforeRet;
                }
                
              };
              idx_2936025319 = index_2969567340(n_2936025320);
              n_2936025320 = n_2936025320.parent;
            }
            }
          }
      };
    };
    result_2936021931 = nimCopy(result_2936021931, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936021931;

}

function moveCursorPrevLine_2936025246(self_2936025247) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025247)) {
    break BeforeRet;
    }
    
      var oHEX60gensym602_2936025250 = getPrevLine_2936021927(self_2936025247.document, node_2936015479(self_2936025247));
      if (!isSome_2969569114(oHEX60gensym602_2936025250)) Temporary1 = false; else {        var prev_2936025273 = get_2969569134(oHEX60gensym602_2936025250);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936017358(self_2936025247, prev_2936025273);
    }
    
  };

  
}

function moveCursorPrevLineJsWrapper_2936025242(self_2936025301) {
    moveCursorPrevLine_2936025246(self_2936025301);

  
}
editor_ast_prototype.moveCursorPrevLine = function() { return (moveCursorPrevLineJsWrapper_2936025242(this));};

function selectContaining_2936025332(self_2936025333, container_2936025334) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025333)) {
    break BeforeRet;
    }
    
    switch (toJSStr(container_2936025334)) {
    case "function":
        var oHEX60gensym612_2936025337 = findWithParentRec_2969569157(node_2936015479(self_2936025333), 11);
        if (!isSome_2969569114(oHEX60gensym612_2936025337)) Temporary1 = false; else {          var child_2936025360 = get_2969569134(oHEX60gensym612_2936025337);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2936017358(self_2936025333, child_2936025360.parent);
      }
      
      break;
    case "const-decl":
        var oHEX60gensym613_2936025363 = findWithParentRec_2969569157(node_2936015479(self_2936025333), 4);
        if (!isSome_2969569114(oHEX60gensym613_2936025363)) Temporary2 = false; else {          var child_2936025386 = get_2969569134(oHEX60gensym613_2936025363);
          Temporary2 = true;        }      if (Temporary2) {
      nodeHEX3D_2936017358(self_2936025333, child_2936025386.parent);
      }
      
      break;
    case "line":
        var oHEX60gensym614_2936025389 = findWithParentRec_2969569157(node_2936015479(self_2936025333), 7);
        if (!isSome_2969569114(oHEX60gensym614_2936025389)) Temporary3 = false; else {          var child_2936025412 = get_2969569134(oHEX60gensym614_2936025389);
          Temporary3 = true;        }      if (Temporary3) {
      nodeHEX3D_2936017358(self_2936025333, child_2936025412);
      }
      
      break;
    case "node-list":
        var oHEX60gensym615_2936025415 = findWithParentRec_2969569157(node_2936015479(self_2936025333), 7);
        if (!isSome_2969569114(oHEX60gensym615_2936025415)) Temporary4 = false; else {          var child_2936025438 = get_2969569134(oHEX60gensym615_2936025415);
          Temporary4 = true;        }      if (Temporary4) {
      nodeHEX3D_2936017358(self_2936025333, child_2936025438.parent);
      }
      
      break;
    case "if":
        var oHEX60gensym616_2936025441 = findWithParentRec_2969569157(node_2936015479(self_2936025333), 9);
        if (!isSome_2969569114(oHEX60gensym616_2936025441)) Temporary5 = false; else {          var child_2936025464 = get_2969569134(oHEX60gensym616_2936025441);
          Temporary5 = true;        }      if (Temporary5) {
      nodeHEX3D_2936017358(self_2936025333, child_2936025464.parent);
      }
      
      break;
    case "while":
        var oHEX60gensym617_2936025467 = findWithParentRec_2969569157(node_2936015479(self_2936025333), 10);
        if (!isSome_2969569114(oHEX60gensym617_2936025467)) Temporary6 = false; else {          var child_2936025490 = get_2969569134(oHEX60gensym617_2936025467);
          Temporary6 = true;        }      if (Temporary6) {
      nodeHEX3D_2936017358(self_2936025333, child_2936025490.parent);
      }
      
      break;
    default: 
      break;
    }
  };

  
}

function selectContainingJsWrapper_2936025328(self_2936025519, container_2936025520) {
    selectContaining_2936025332(self_2936025519, container_2936025520);

  
}
editor_ast_prototype.selectContaining = function(container_ /* : string */) { return (selectContainingJsWrapper_2936025328(this, container_ == undefined ? undefined : cstrToNimstr(container_)));};

function del_2986456840(cache_2986456843, key_2986456844) {
    var node_2986456940 = getOrDefault_3003124339(cache_2986456843.table, key_2986456844, null);
    if (!((node_2986456940 == null))) {
    del_3003135438(cache_2986456843.table, key_2986456844);
    remove_3003136197(cache_2986456843.list, node_2986456940);
    }
    

  
}

function deleteNode_2986456770(ctx_2986456771, node_2986456772) {
          var Temporary3;
            var Temporary4;

    ctx_2986456771.depGraph.revision = addInt(ctx_2986456771.depGraph.revision, 1);
    del_2986456840(ctx_2986456771.depGraph.changed, {Field0: getItem_2986398161(node_2986456772), Field1: -1});
    if (!((node_2986456772.parent == null))) {
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456771.depGraph.changed, {Field0: getItem_2986398161(node_2986456772.parent), Field1: -1}, ctx_2986456771.depGraph.revision);
    }
    
    var parent_2986457102 = node_2986456772.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2986457102 == null))) Temporary3 = false; else {            var oHEX60gensym758_2986457109 = findWithParentRec_2969569157(parent_2986457102, 11);
            if (!isSome_2969569114(oHEX60gensym758_2986457109)) Temporary4 = false; else {              var child_2986457155 = get_2969569134(oHEX60gensym758_2986457109);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2986457156 = child_2986457155.parent;
          HEX5BHEX5DHEX3D_3003133124(ctx_2986456771.depGraph.changed, {Field0: getItem_2986398161(functionDefinition_2986457156), Field1: -1}, ctx_2986456771.depGraph.revision);
          parent_2986457102 = functionDefinition_2986457156.parent;
        }
    };

  
}

function rawGet_3170893898(t_3170893901, key_3170893902, hc_3170893903, hc_3170893903_Idx) {
  var result_3170893904 = 0;

  BeforeRet: {
    hc_3170893903[hc_3170893903_Idx] = hash_2181038324(key_3170893902);
    if ((hc_3170893903[hc_3170893903_Idx] == 0)) {
    hc_3170893903[hc_3170893903_Idx] = 314159265;
    }
    
    if (((t_3170893901.data).length == 0)) {
    result_3170893904 = -1;
    break BeforeRet;
    }
    
    var h_3170893956 = (hc_3170893903[hc_3170893903_Idx] & (t_3170893901.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3170893901.data[chckIndx(h_3170893956, 0, (t_3170893901.data).length - 1)].Field0)) break Label2;
          if (((t_3170893901.data[chckIndx(h_3170893956, 0, (t_3170893901.data).length - 1)].Field0 == hc_3170893903[hc_3170893903_Idx]) && HEX3DHEX3D_2181038320(t_3170893901.data[chckIndx(h_3170893956, 0, (t_3170893901.data).length - 1)].Field1, key_3170893902))) {
          result_3170893904 = h_3170893956;
          break BeforeRet;
          }
          
          h_3170893956 = nextTry_1308622883(h_3170893956, (t_3170893901.data).length - 1);
        }
    };
    result_3170893904 = subInt(-1, h_3170893956);
  };

  return result_3170893904;

}

function del_2936020140(t_2936020143, key_2936020144) {
    var hc_2936020145 = [0];
    var i_2936020152 = rawGet_3170893898(t_2936020143, key_2936020144, hc_2936020145, 0);
    var mskHEX60gensym36_2936020156 = (t_2936020143.data).length - 1;
    if ((0 <= i_2936020152)) {
    t_2936020143.counter = subInt(t_2936020143.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2936020163 = i_2936020152;
            var rHEX60gensym36_2936020164 = jHEX60gensym36_2936020163;
            t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)].Field0 = 0;
            t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)].Field1 = nimCopy(t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)].Field1, ({padding: 0, time: 0, fuzz: 0, count: 0}), NTI2181038083);
            t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2936020152 = (addInt(i_2936020152, 1) & mskHEX60gensym36_2936020156);
                  if (isEmpty_1308622877(t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2936020164 = (t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)].Field0 & mskHEX60gensym36_2936020156);
                  if (!(((((rHEX60gensym36_2936020164 <= i_2936020152) && (jHEX60gensym36_2936020163 < rHEX60gensym36_2936020164)) || ((jHEX60gensym36_2936020163 < rHEX60gensym36_2936020164) && (i_2936020152 < jHEX60gensym36_2936020163))) || ((i_2936020152 < jHEX60gensym36_2936020163) && (rHEX60gensym36_2936020164 <= i_2936020152))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2936020143.data[chckIndx(jHEX60gensym36_2936020163, 0, (t_2936020143.data).length - 1)] = nimCopy(t_2936020143.data[chckIndx(jHEX60gensym36_2936020163, 0, (t_2936020143.data).length - 1)], t_2936020143.data[chckIndx(i_2936020152, 0, (t_2936020143.data).length - 1)], NTI2936014305);
          }
      };
    };
    }
    

  
}

function handleNodeDelete_2936019726(doc_2936019727, node_2936019728) {
              var Temporary8;

    var fmtRes_2936019733 = [mnewString(0)];
    fmtRes_2936019733[0].push.apply(fmtRes_2936019733[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,100,101,108,101,116,101,100,58,32]);;
    formatValue_3070231363(fmtRes_2936019733, 0, node_2936019728, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936019733[0], NTI33554449)]);
    Label1: {
      var child_2936019742 = null;
      var i_2936025594 = 0;
      var L_2936025595 = (node_2936019728.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025594 < L_2936025595)) break Label3;
            child_2936019742 = node_2936019728.children[chckIndx(i_2936025594, 0, (node_2936019728.children).length - 1)];
            handleNodeDelete_2936019726(doc_2936019727, child_2936019742);
            i_2936025594 = addInt(i_2936025594, 1);
            if (!(((node_2936019728.children).length == L_2936025595))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    deleteNode_2986456770(ctx_2936012853, node_2936019728);
    Label4: {
      var i_2936019776 = 0;
      var update_2936019777 = null;
      var i_2936025604 = 0;
      var L_2936025605 = (ctx_2936012853.updateFunctions).length;
      Label5: {
          Label6: while (true) {
          if (!(i_2936025604 < L_2936025605)) break Label6;
            i_2936019776 = i_2936025604;
            update_2936019777 = ctx_2936012853.updateFunctions[chckIndx(i_2936025604, 0, (ctx_2936012853.updateFunctions).length - 1)];
            var key_2936019778 = {Field0: getItem_2986398161(node_2936019728), Field1: i_2936019776};
            if (contains_2986443815(ctx_2936012853.diagnosticsPerQuery, key_2936019778)) {
            Label7: {
              var id_2936019927 = ({padding: 0, time: 0, fuzz: 0, count: 0});
              var colontmp__2936025599 = [];
              colontmp__2936025599 = (Temporary8 = HEX5BHEX5D_2986444260(ctx_2936012853.diagnosticsPerQuery, key_2936019778), Temporary8)[0][Temporary8[1]];
              var i_2936025600 = 0;
              var L_2936025601 = (colontmp__2936025599).length;
              Label9: {
                  Label10: while (true) {
                  if (!(i_2936025600 < L_2936025601)) break Label10;
                    id_2936019927 = colontmp__2936025599[chckIndx(i_2936025600, 0, (colontmp__2936025599).length - 1)];
                    del_2986444977(HEX5BHEX5D_2986444469(ctx_2936012853.diagnosticsPerNode, id_2936019927).queries, key_2936019778);
                    i_2936025600 = addInt(i_2936025600, 1);
                    if (!(((colontmp__2936025599).length == L_2936025601))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            del_2986451720(ctx_2936012853.diagnosticsPerQuery, key_2936019778);
            }
            
            i_2936025604 = addInt(i_2936025604, 1);
            if (!(((ctx_2936012853.updateFunctions).length == L_2936025605))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    del_2936020140(doc_2936019727.nodes, node_2936019728.id);

  
}

function HEX5BHEX5DHEX3D_2969567496(node_2969567497, index_2969567498, newNode_2969567499) {
    newNode_2969567499.parent = node_2969567497;
    node_2969567497.children[chckIndx(index_2969567498, 0, (node_2969567497.children).length - 1)].parent = null;
    node_2969567497.children[chckIndx(index_2969567498, 0, (node_2969567497.children).length - 1)] = newNode_2969567499;

  
}

function getOrDefault_2986398416(t_2986398419, key_2986398420, default_2986398421) {
    var Temporary1;

  var result_2986398422 = null;

    var hcHEX60gensym380_2986398425 = [0];
    var indexHEX60gensym380_2986398432 = rawGet_2986345489(t_2986398419, key_2986398420, hcHEX60gensym380_2986398425, 0);
    if ((0 <= indexHEX60gensym380_2986398432)) {
    Temporary1 = t_2986398419.data[chckIndx(indexHEX60gensym380_2986398432, 0, (t_2986398419.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_2986398421;
    }
    
    result_2986398422 = Temporary1;

  return result_2986398422;

}

function newDoublyLinkedNode_2986398548(value_2986398550) {
  var result_2986398551 = null;

    result_2986398551 = ({next: null, prev: null, value: ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null})});
    result_2986398551.value = nimCopy(result_2986398551.value, value_2986398550, NTI2986344510);

  return result_2986398551;

}

function mustRehash_2986398889(t_2986398891) {
  var result_2986398892 = false;

    if (!((t_2986398891.counter < (t_2986398891.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2986398892 = ((mulInt((t_2986398891.data).length, 2) < mulInt(t_2986398891.counter, 3)) || (subInt((t_2986398891.data).length, t_2986398891.counter) < 4));

  return result_2986398892;

}

function rawInsert_2986399582(t_2986399586, data_2986399587, data_2986399587_Idx, key_2986399588, val_2986399589, hc_2986399590, h_2986399591) {
    data_2986399587[data_2986399587_Idx][chckIndx(h_2986399591, 0, (data_2986399587[data_2986399587_Idx]).length - 1)].Field1 = nimCopy(data_2986399587[data_2986399587_Idx][chckIndx(h_2986399591, 0, (data_2986399587[data_2986399587_Idx]).length - 1)].Field1, key_2986399588, NTI3003121689);
    data_2986399587[data_2986399587_Idx][chckIndx(h_2986399591, 0, (data_2986399587[data_2986399587_Idx]).length - 1)].Field2 = val_2986399589;
    data_2986399587[data_2986399587_Idx][chckIndx(h_2986399591, 0, (data_2986399587[data_2986399587_Idx]).length - 1)].Field0 = hc_2986399590;

  
}

function enlarge_2986399146(t_2986399149) {
    var n_2986399152 = [];
    n_2986399152 = new Array(chckRange(mulInt((t_2986399149.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2986399149.data).length, 2), 0, 2147483647) ; ++i) { n_2986399152[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    var Temporary1 = t_2986399149.data; t_2986399149.data = n_2986399152; n_2986399152 = Temporary1;    Label2: {
      var i_2986399250 = 0;
      var colontmp__2936025638 = 0;
      colontmp__2936025638 = (n_2986399152).length - 1;
      var res_2936025639 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936025639 <= colontmp__2936025638)) break Label4;
            i_2986399250 = res_2936025639;
            var eh_2986399331 = n_2986399152[chckIndx(i_2986399250, 0, (n_2986399152).length - 1)].Field0;
            if (isFilled_1308622880(eh_2986399331)) {
            var j_2986399335 = (eh_2986399331 & (t_2986399149.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2986399149.data[chckIndx(j_2986399335, 0, (t_2986399149.data).length - 1)].Field0)) break Label6;
                  j_2986399335 = nextTry_1308622883(j_2986399335, (t_2986399149.data).length - 1);
                }
            };
            rawInsert_2986399582(t_2986399149, t_2986399149, "data", n_2986399152[chckIndx(i_2986399250, 0, (n_2986399152).length - 1)].Field1, n_2986399152[chckIndx(i_2986399250, 0, (n_2986399152).length - 1)].Field2, eh_2986399331, j_2986399335);
            }
            
            res_2936025639 = addInt(res_2936025639, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2986399832(t_2986399835, key_2986399836, hc_2986399837) {
  var result_2986399838 = 0;

  BeforeRet: {
    if (((t_2986399835.data).length == 0)) {
    result_2986399838 = -1;
    break BeforeRet;
    }
    
    var h_2986399923 = (hc_2986399837 & (t_2986399835.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2986399835.data[chckIndx(h_2986399923, 0, (t_2986399835.data).length - 1)].Field0)) break Label2;
          if (((t_2986399835.data[chckIndx(h_2986399923, 0, (t_2986399835.data).length - 1)].Field0 == hc_2986399837) && HEX3DHEX3D_2986345833(t_2986399835.data[chckIndx(h_2986399923, 0, (t_2986399835.data).length - 1)].Field1, key_2986399836))) {
          result_2986399838 = h_2986399923;
          break BeforeRet;
          }
          
          h_2986399923 = nextTry_1308622883(h_2986399923, (t_2986399835.data).length - 1);
        }
    };
    result_2986399838 = subInt(-1, h_2986399923);
  };

  return result_2986399838;

}

function HEX5BHEX5DHEX3D_2986398621(t_2986398624, key_2986398625, val_2986398626) {
    if (((t_2986398624.data).length == 0)) {
    var correctSizeHEX60gensym383_2986398709 = slotsNeeded_1308622891(32);
    t_2986398624.counter = 0;
    t_2986398624.data = new Array(chckRange(correctSizeHEX60gensym383_2986398709, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym383_2986398709, 0, 2147483647) ; ++i) { t_2986398624.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }    }
    
    var hc_2986398714 = [0];
    var index_2986398721 = rawGet_2986345489(t_2986398624, key_2986398625, hc_2986398714, 0);
    if ((0 <= index_2986398721)) {
    t_2986398624.data[chckIndx(index_2986398721, 0, (t_2986398624.data).length - 1)].Field2 = val_2986398626;
    }
    else {
      if (((t_2986398624.data).length == 0)) {
      var correctSizeHEX60gensym386_2986398884 = slotsNeeded_1308622891(32);
      t_2986398624.counter = 0;
      t_2986398624.data = new Array(chckRange(correctSizeHEX60gensym386_2986398884, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym386_2986398884, 0, 2147483647) ; ++i) { t_2986398624.data[i] = {Field0: 0, Field1: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field2: null}; }      }
      
      if (mustRehash_2986398889(t_2986398624)) {
      enlarge_2986399146(t_2986398624);
      index_2986398721 = rawGetKnownHC_2986399832(t_2986398624, key_2986398625, hc_2986398714[0]);
      }
      
      index_2986398721 = subInt(-1, index_2986398721);
      rawInsert_2986399582(t_2986398624, t_2986398624, "data", key_2986398625, val_2986398626, hc_2986398714[0], index_2986398721);
      t_2986398624.counter = addInt(t_2986398624.counter, 1);
    }
    

  
}

function len_2986401397(t_2986401400) {
  var result_2986401401 = 0;

    result_2986401401 = t_2986401400.counter;

  return result_2986401401;

}

function len_2986401314(cache_2986401317) {
  var result_2986401318 = 0;

    result_2986401318 = len_2986401397(cache_2986401317.table);

  return result_2986401318;

}

function del_2986403004(t_2986403007, key_2986403008) {
    var hc_2986403009 = [0];
    var i_2986403016 = rawGet_2986345489(t_2986403007, key_2986403008, hc_2986403009, 0);
    var mskHEX60gensym36_2986403020 = (t_2986403007.data).length - 1;
    if ((0 <= i_2986403016)) {
    t_2986403007.counter = subInt(t_2986403007.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2986403027 = i_2986403016;
            var rHEX60gensym36_2986403028 = jHEX60gensym36_2986403027;
            t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)].Field0 = 0;
            t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)].Field1 = nimCopy(t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2986403016 = (addInt(i_2986403016, 1) & mskHEX60gensym36_2986403020);
                  if (isEmpty_1308622877(t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2986403028 = (t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)].Field0 & mskHEX60gensym36_2986403020);
                  if (!(((((rHEX60gensym36_2986403028 <= i_2986403016) && (jHEX60gensym36_2986403027 < rHEX60gensym36_2986403028)) || ((jHEX60gensym36_2986403027 < rHEX60gensym36_2986403028) && (i_2986403016 < jHEX60gensym36_2986403027))) || ((i_2986403016 < jHEX60gensym36_2986403027) && (rHEX60gensym36_2986403028 <= i_2986403016))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2986403007.data[chckIndx(jHEX60gensym36_2986403027, 0, (t_2986403007.data).length - 1)] = nimCopy(t_2986403007.data[chckIndx(jHEX60gensym36_2986403027, 0, (t_2986403007.data).length - 1)], t_2986403007.data[chckIndx(i_2986403016, 0, (t_2986403007.data).length - 1)], NTI2986344546);
          }
      };
    };
    }
    

  
}

function resize_2986401232(cache_2986401235) {
    Label1: {
        Label2: while (true) {
        if (!(cache_2986401235.capacity < len_2986401314(cache_2986401235))) break Label2;
          var t_2986401402 = cache_2986401235.list.tail;
          if (cache_2986401235.recordRemovedKeys) {
          incl_2986401422(cache_2986401235.removedKeys, t_2986401402.value.key);
          }
          
          del_2986403004(cache_2986401235.table, t_2986401402.value.key);
          remove_2986346156(cache_2986401235.list, t_2986401402);
        }
    };

  
}

function addNewNode_2986398540(cache_2986398543, key_2986398544, val_2986398545) {
    var node_2986398557 = newDoublyLinkedNode_2986398548({key: nimCopy(null, key_2986398544, NTI3003121689), val: val_2986398545});
    HEX5BHEX5DHEX3D_2986398621(cache_2986398543.table, key_2986398544, node_2986398557);
    prepend_2986346460(cache_2986398543.list, node_2986398557);
    if (cache_2986398543.recordRemovedKeys) {
    excl_2986400251(cache_2986398543.removedKeys, key_2986398544);
    }
    
    resize_2986401232(cache_2986398543);

  
}

function HEX5BHEX5DHEX3D_2986398321(cache_2986398324, key_2986398325, val_2986398326) {
    var node_2986398513 = getOrDefault_2986398416(cache_2986398324.table, key_2986398325, null);
    if ((node_2986398513 == null)) {
    addNewNode_2986398540(cache_2986398324, key_2986398325, val_2986398326);
    }
    else {
      node_2986398513.value.val = val_2986398326;
      remove_2986346156(cache_2986398324.list, node_2986398513);
      prepend_2986346460(cache_2986398324.list, node_2986398513);
    }
    

  
}

function insertNode_2986456078(ctx_2986456079, node_2986456080) {
              var Temporary5;
          var Temporary8;
            var Temporary9;

    ctx_2986456079.depGraph.revision = addInt(ctx_2986456079.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456079.depGraph.changed, {Field0: getItem_2986398161(node_2986456080), Field1: -1}, ctx_2986456079.depGraph.revision);
    if (!((node_2986456080.parent == null))) {
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456079.depGraph.changed, {Field0: getItem_2986398161(node_2986456080.parent), Field1: -1}, ctx_2986456079.depGraph.revision);
    }
    
    HEX5BHEX5DHEX3D_2986398321(ctx_2986456079.itemsAstNode, getItem_2986398161(node_2986456080), node_2986456080);
    Label1: {
      var key_2986456296 = 0;
      var child_2986456297 = null;
      var n_2936025627 = node_2986456080;
      var idx_2936025628 = -1;
      var i_2936025629 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2936025628 == -1)) {
            var colontmp__2936025632 = nimCopy(null, {Field0: i_2936025629, Field1: n_2936025627}, NTI2969568569);
            key_2986456296 = colontmp__2936025632["Field0"];
            child_2986456297 = colontmp__2936025632["Field1"];
            HEX5BHEX5DHEX3D_3003133124(ctx_2986456079.depGraph.changed, {Field0: getItem_2986398161(child_2986456297), Field1: -1}, ctx_2986456079.depGraph.revision);
            HEX5BHEX5DHEX3D_2986398321(ctx_2986456079.itemsAstNode, getItem_2986398161(child_2986456297), child_2986456297);
            }
            
            if ((addInt(idx_2936025628, 1) < len_2969567320(n_2936025627))) {
            n_2936025627 = HEX5BHEX5D_2969567316(n_2936025627, addInt(idx_2936025628, 1));
            idx_2936025628 = -1;
            }
            else {
              var oHEX60gensym74_2936025633 = next_2969567425(n_2936025627);
              if (!isSome_2969569114(oHEX60gensym74_2936025633)) Temporary5 = false; else {                var ne_2936025634 = get_2969569134(oHEX60gensym74_2936025633);
                Temporary5 = true;              }            if (Temporary5) {
            n_2936025627 = ne_2936025634;
            idx_2936025628 = -1;
            }
            else {
            if ((!((n_2936025627.parent == null)) && !((n_2936025627.parent == node_2986456080)))) {
            idx_2936025628 = index_2969567340(n_2936025627);
            n_2936025627 = n_2936025627.parent;
            }
            else {
              break Label2;
            }
            }}
            } finally {
            i_2936025629 = addInt(i_2936025629, 1);
            }
          }
      };
    };
    var parent_2986456436 = node_2986456080.parent;
    Label6: {
        Label7: while (true) {
          if (!!((parent_2986456436 == null))) Temporary8 = false; else {            var oHEX60gensym752_2986456443 = findWithParentRec_2969569157(parent_2986456436, 11);
            if (!isSome_2969569114(oHEX60gensym752_2986456443)) Temporary9 = false; else {              var child_2986456489 = get_2969569134(oHEX60gensym752_2986456443);
              Temporary9 = true;            }            Temporary8 = Temporary9;          }        if (!Temporary8) break Label7;
          var functionDefinition_2986456490 = child_2986456489.parent;
          HEX5BHEX5DHEX3D_3003133124(ctx_2986456079.depGraph.changed, {Field0: getItem_2986398161(functionDefinition_2986456490), Field1: -1}, ctx_2986456079.depGraph.revision);
          parent_2986456436 = functionDefinition_2986456490.parent;
        }
    };

  
}

function mustRehash_2936018466(t_2936018468) {
  var result_2936018469 = false;

    if (!((t_2936018468.counter < (t_2936018468.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2936018469 = ((mulInt((t_2936018468.data).length, 2) < mulInt(t_2936018468.counter, 3)) || (subInt((t_2936018468.data).length, t_2936018468.counter) < 4));

  return result_2936018469;

}

function rawInsert_2936019075(t_2936019079, data_2936019080, data_2936019080_Idx, key_2936019081, val_2936019082, hc_2936019083, h_2936019084) {
    data_2936019080[data_2936019080_Idx][chckIndx(h_2936019084, 0, (data_2936019080[data_2936019080_Idx]).length - 1)].Field1 = nimCopy(data_2936019080[data_2936019080_Idx][chckIndx(h_2936019084, 0, (data_2936019080[data_2936019080_Idx]).length - 1)].Field1, key_2936019081, NTI2181038083);
    data_2936019080[data_2936019080_Idx][chckIndx(h_2936019084, 0, (data_2936019080[data_2936019080_Idx]).length - 1)].Field2 = val_2936019082;
    data_2936019080[data_2936019080_Idx][chckIndx(h_2936019084, 0, (data_2936019080[data_2936019080_Idx]).length - 1)].Field0 = hc_2936019083;

  
}

function enlarge_2936018669(t_2936018672) {
    var n_2936018675 = [];
    n_2936018675 = new Array(chckRange(mulInt((t_2936018672.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2936018672.data).length, 2), 0, 2147483647) ; ++i) { n_2936018675[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    var Temporary1 = t_2936018672.data; t_2936018672.data = n_2936018675; n_2936018675 = Temporary1;    Label2: {
      var i_2936018755 = 0;
      var colontmp__2936025647 = 0;
      colontmp__2936025647 = (n_2936018675).length - 1;
      var res_2936025648 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936025648 <= colontmp__2936025647)) break Label4;
            i_2936018755 = res_2936025648;
            var eh_2936018833 = n_2936018675[chckIndx(i_2936018755, 0, (n_2936018675).length - 1)].Field0;
            if (isFilled_1308622880(eh_2936018833)) {
            var j_2936018837 = (eh_2936018833 & (t_2936018672.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2936018672.data[chckIndx(j_2936018837, 0, (t_2936018672.data).length - 1)].Field0)) break Label6;
                  j_2936018837 = nextTry_1308622883(j_2936018837, (t_2936018672.data).length - 1);
                }
            };
            rawInsert_2936019075(t_2936018672, t_2936018672, "data", n_2936018675[chckIndx(i_2936018755, 0, (n_2936018675).length - 1)].Field1, n_2936018675[chckIndx(i_2936018755, 0, (n_2936018675).length - 1)].Field2, eh_2936018833, j_2936018837);
            }
            
            res_2936025648 = addInt(res_2936025648, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2936019316(t_2936019319, key_2936019320, hc_2936019321) {
  var result_2936019322 = 0;

  BeforeRet: {
    if (((t_2936019319.data).length == 0)) {
    result_2936019322 = -1;
    break BeforeRet;
    }
    
    var h_2936019389 = (hc_2936019321 & (t_2936019319.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2936019319.data[chckIndx(h_2936019389, 0, (t_2936019319.data).length - 1)].Field0)) break Label2;
          if (((t_2936019319.data[chckIndx(h_2936019389, 0, (t_2936019319.data).length - 1)].Field0 == hc_2936019321) && HEX3DHEX3D_2181038320(t_2936019319.data[chckIndx(h_2936019389, 0, (t_2936019319.data).length - 1)].Field1, key_2936019320))) {
          result_2936019322 = h_2936019389;
          break BeforeRet;
          }
          
          h_2936019389 = nextTry_1308622883(h_2936019389, (t_2936019319.data).length - 1);
        }
    };
    result_2936019322 = subInt(-1, h_2936019389);
  };

  return result_2936019322;

}

function HEX5BHEX5DHEX3D_2936018237(t_2936018240, key_2936018241, val_2936018242) {
    if (((t_2936018240.data).length == 0)) {
    var correctSizeHEX60gensym98_2936018307 = slotsNeeded_1308622891(32);
    t_2936018240.counter = 0;
    t_2936018240.data = new Array(chckRange(correctSizeHEX60gensym98_2936018307, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym98_2936018307, 0, 2147483647) ; ++i) { t_2936018240.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }    }
    
    var hc_2936018312 = [0];
    var index_2936018319 = rawGet_3170893898(t_2936018240, key_2936018241, hc_2936018312, 0);
    if ((0 <= index_2936018319)) {
    t_2936018240.data[chckIndx(index_2936018319, 0, (t_2936018240.data).length - 1)].Field2 = val_2936018242;
    }
    else {
      if (((t_2936018240.data).length == 0)) {
      var correctSizeHEX60gensym101_2936018461 = slotsNeeded_1308622891(32);
      t_2936018240.counter = 0;
      t_2936018240.data = new Array(chckRange(correctSizeHEX60gensym101_2936018461, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym101_2936018461, 0, 2147483647) ; ++i) { t_2936018240.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: null}; }      }
      
      if (mustRehash_2936018466(t_2936018240)) {
      enlarge_2936018669(t_2936018240);
      index_2936018319 = rawGetKnownHC_2936019316(t_2936018240, key_2936018241, hc_2936018312[0]);
      }
      
      index_2936018319 = subInt(-1, index_2936018319);
      rawInsert_2936019075(t_2936018240, t_2936018240, "data", key_2936018241, val_2936018242, hc_2936018312[0], index_2936018319);
      t_2936018240.counter = addInt(t_2936018240.counter, 1);
    }
    

  
}

function handleNodeInserted_2936018151(doc_2936018152, node_2936018153) {
              var Temporary8;

    var fmtRes_2936018158 = [mnewString(0)];
    fmtRes_2936018158[0].push.apply(fmtRes_2936018158[0], [91,97,115,116,100,111,99,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3070231363(fmtRes_2936018158, 0, node_2936018153, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936018158[0], NTI33554449)]);
    insertNode_2986456078(ctx_2936012853, node_2936018153);
    Label1: {
      var handler_2936018186 = null;
      var i_2936025613 = 0;
      var L_2936025614 = (doc_2936018152.onNodeInserted).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025613 < L_2936025614)) break Label3;
            handler_2936018186 = doc_2936018152.onNodeInserted[chckIndx(i_2936025613, 0, (doc_2936018152.onNodeInserted).length - 1)];
            handler_2936018186(doc_2936018152, node_2936018153);
            i_2936025613 = addInt(i_2936025613, 1);
            if (!(((doc_2936018152.onNodeInserted).length == L_2936025614))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_2936018237(doc_2936018152.nodes, node_2936018153.id, node_2936018153);
    Label4: {
      var key_2936019642 = 0;
      var child_2936019643 = null;
      var n_2936025618 = node_2936018153;
      var idx_2936025619 = -1;
      var i_2936025620 = 0;
      Label5: {
          Label6: while (true) {
          if (!true) break Label6;
            try {
            if ((idx_2936025619 == -1)) {
            var colontmp__2936025623 = nimCopy(null, {Field0: i_2936025620, Field1: n_2936025618}, NTI2969568569);
            key_2936019642 = colontmp__2936025623["Field0"];
            child_2936019643 = colontmp__2936025623["Field1"];
            HEX5BHEX5DHEX3D_2936018237(doc_2936018152.nodes, child_2936019643.id, child_2936019643);
            }
            
            if ((addInt(idx_2936025619, 1) < len_2969567320(n_2936025618))) {
            n_2936025618 = HEX5BHEX5D_2969567316(n_2936025618, addInt(idx_2936025619, 1));
            idx_2936025619 = -1;
            }
            else {
              var oHEX60gensym74_2936025624 = next_2969567425(n_2936025618);
              if (!isSome_2969569114(oHEX60gensym74_2936025624)) Temporary8 = false; else {                var ne_2936025625 = get_2969569134(oHEX60gensym74_2936025624);
                Temporary8 = true;              }            if (Temporary8) {
            n_2936025618 = ne_2936025625;
            idx_2936025619 = -1;
            }
            else {
            if ((!((n_2936025618.parent == null)) && !((n_2936025618.parent == node_2936018153)))) {
            idx_2936025619 = index_2969567340(n_2936025618);
            n_2936025618 = n_2936025618.parent;
            }
            else {
              break Label5;
            }
            }}
            } finally {
            i_2936025620 = addInt(i_2936025620, 1);
            }
          }
      };
    };

  
}

function replaceNode_2936021992(document_2936021993, node_2936021994, newNode_2936021995) {
  var result_2936021996 = null;

  BeforeRet: {
    if ((node_2936021994.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    var idx_2936022002 = index_2969567340(node_2936021994);
    document_2936021993.undoOps.push({kind: 1, parent: node_2936021994.parent, idx: idx_2936022002, node: node_2936021994, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2936021993.redoOps = nimCopy(null, [], NTI2936017906);
    handleNodeDelete_2936019726(document_2936021993, node_2936021994);
    HEX5BHEX5DHEX3D_2969567496(node_2936021994.parent, idx_2936022002, newNode_2936021995);
    handleNodeInserted_2936018151(document_2936021993, newNode_2936021995);
    result_2936021996 = newNode_2936021995;
    break BeforeRet;
  };

  return result_2936021996;

}

function delete_2969567504(x_2969567506, x_2969567506_Idx, i_2969567507) {
    x_2969567506[x_2969567506_Idx].splice(i_2969567507, 1);

  
}

function delete_2969567500(node_2969567501, index_2969567502) {
  var result_2969567503 = null;

  BeforeRet: {
    if (((index_2969567502 < 0) || (len_2969567320(node_2969567501) <= index_2969567502))) {
    result_2969567503 = node_2969567501;
    break BeforeRet;
    }
    
    HEX5BHEX5D_2969567316(node_2969567501, index_2969567502).parent = null;
    delete_2969567504(node_2969567501, "children", chckRange(index_2969567502, 0, 2147483647));
    if ((index_2969567502 < len_2969567320(node_2969567501))) {
    result_2969567503 = HEX5BHEX5D_2969567316(node_2969567501, index_2969567502);
    break BeforeRet;
    }
    else {
    if ((0 < len_2969567320(node_2969567501))) {
    result_2969567503 = HEX5BHEX5D_2969567316(node_2969567501, subInt(index_2969567502, 1));
    break BeforeRet;
    }
    else {
      result_2969567503 = node_2969567501;
      break BeforeRet;
    }
    }
  };

  return result_2969567503;

}

function deleteNode_2936022056(document_2936022057, node_2936022058) {
  var result_2936022059 = null;

  BeforeRet: {
    if ((node_2936022058.parent == null)) {
    raiseException({message: [108,111,108], parent: null, m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    }
    
    if (((node_2936022058.parent == document_2936022057.rootNode) && (len_2969567320(document_2936022057.rootNode) == 1))) {
    result_2936022059 = replaceNode_2936021992(document_2936022057, node_2936022058, {kind: 0, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []});
    break BeforeRet;
    }
    
    document_2936022057.undoOps.push({kind: 0, parent: node_2936022058.parent, idx: index_2969567340(node_2936022058), node: node_2936022058, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2936022057.redoOps = nimCopy(null, [], NTI2936017906);
    handleNodeDelete_2936019726(document_2936022057, node_2936022058);
    result_2936022059 = delete_2969567500(node_2936022058.parent, index_2969567340(node_2936022058));
    break BeforeRet;
  };

  return result_2936022059;

}

function deleteSelected_2936025546(self_2936025547) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936025547)) {
    break BeforeRet;
    }
    
    self_2936025547.deletedNode = nimCopy(self_2936025547.deletedNode, some_2969567458(node_2936015479(self_2936025547)), NTI2969567351);
    nodeHEX3D_2936017358(self_2936025547, deleteNode_2936022056(self_2936025547.document, node_2936015479(self_2936025547)));
  };

  
}

function deleteSelectedJsWrapper_2936025542(self_2936025578) {
    deleteSelected_2936025546(self_2936025578);

  
}
editor_ast_prototype.deleteSelected = function() { return (deleteSelectedJsWrapper_2936025542(this));};

function initTable_2969569068(initialSize_2969569071) {
  var result_2969569072 = ({data: [], counter: 0});

    var correctSizeHEX60gensym29_2969569074 = slotsNeeded_1308622891(chckRange(initialSize_2969569071, 0, 2147483647));
    result_2969569072.counter = 0;
    result_2969569072.data = new Array(chckRange(correctSizeHEX60gensym29_2969569074, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym29_2969569074, 0, 2147483647) ; ++i) { result_2969569072.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }
  return result_2969569072;

}

function rawGet_2969567639(t_2969567642, key_2969567643, hc_2969567644, hc_2969567644_Idx) {
  var result_2969567645 = 0;

  BeforeRet: {
    hc_2969567644[hc_2969567644_Idx] = hash_2181038324(key_2969567643);
    if ((hc_2969567644[hc_2969567644_Idx] == 0)) {
    hc_2969567644[hc_2969567644_Idx] = 314159265;
    }
    
    if (((t_2969567642.data).length == 0)) {
    result_2969567645 = -1;
    break BeforeRet;
    }
    
    var h_2969567696 = (hc_2969567644[hc_2969567644_Idx] & (t_2969567642.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969567642.data[chckIndx(h_2969567696, 0, (t_2969567642.data).length - 1)].Field0)) break Label2;
          if (((t_2969567642.data[chckIndx(h_2969567696, 0, (t_2969567642.data).length - 1)].Field0 == hc_2969567644[hc_2969567644_Idx]) && HEX3DHEX3D_2181038320(t_2969567642.data[chckIndx(h_2969567696, 0, (t_2969567642.data).length - 1)].Field1, key_2969567643))) {
          result_2969567645 = h_2969567696;
          break BeforeRet;
          }
          
          h_2969567696 = nextTry_1308622883(h_2969567696, (t_2969567642.data).length - 1);
        }
    };
    result_2969567645 = subInt(-1, h_2969567696);
  };

  return result_2969567645;

}

function mustRehash_2969567984(t_2969567986) {
  var result_2969567987 = false;

    if (!((t_2969567986.counter < (t_2969567986.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2969567987 = ((mulInt((t_2969567986.data).length, 2) < mulInt(t_2969567986.counter, 3)) || (subInt((t_2969567986.data).length, t_2969567986.counter) < 4));

  return result_2969567987;

}

function rawInsert_2969568433(t_2969568437, data_2969568438, data_2969568438_Idx, key_2969568439, val_2969568440, hc_2969568441, h_2969568442) {
    data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field1 = nimCopy(data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field1, key_2969568439, NTI2181038083);
    data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field2 = nimCopy(data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field2, val_2969568440, NTI2181038083);
    data_2969568438[data_2969568438_Idx][chckIndx(h_2969568442, 0, (data_2969568438[data_2969568438_Idx]).length - 1)].Field0 = hc_2969568441;

  
}

function enlarge_2969568139(t_2969568142) {
    var n_2969568145 = [];
    n_2969568145 = new Array(chckRange(mulInt((t_2969568142.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2969568142.data).length, 2), 0, 2147483647) ; ++i) { n_2969568145[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    var Temporary1 = t_2969568142.data; t_2969568142.data = n_2969568145; n_2969568145 = Temporary1;    Label2: {
      var i_2969568209 = 0;
      var colontmp__2936025716 = 0;
      colontmp__2936025716 = (n_2969568145).length - 1;
      var res_2936025717 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2936025717 <= colontmp__2936025716)) break Label4;
            i_2969568209 = res_2936025717;
            var eh_2969568263 = n_2969568145[chckIndx(i_2969568209, 0, (n_2969568145).length - 1)].Field0;
            if (isFilled_1308622880(eh_2969568263)) {
            var j_2969568267 = (eh_2969568263 & (t_2969568142.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2969568142.data[chckIndx(j_2969568267, 0, (t_2969568142.data).length - 1)].Field0)) break Label6;
                  j_2969568267 = nextTry_1308622883(j_2969568267, (t_2969568142.data).length - 1);
                }
            };
            rawInsert_2969568433(t_2969568142, t_2969568142, "data", n_2969568145[chckIndx(i_2969568209, 0, (n_2969568145).length - 1)].Field1, n_2969568145[chckIndx(i_2969568209, 0, (n_2969568145).length - 1)].Field2, eh_2969568263, j_2969568267);
            }
            
            res_2936025717 = addInt(res_2936025717, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2969568602(t_2969568605, key_2969568606, hc_2969568607) {
  var result_2969568608 = 0;

  BeforeRet: {
    if (((t_2969568605.data).length == 0)) {
    result_2969568608 = -1;
    break BeforeRet;
    }
    
    var h_2969568659 = (hc_2969568607 & (t_2969568605.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2969568605.data[chckIndx(h_2969568659, 0, (t_2969568605.data).length - 1)].Field0)) break Label2;
          if (((t_2969568605.data[chckIndx(h_2969568659, 0, (t_2969568605.data).length - 1)].Field0 == hc_2969568607) && HEX3DHEX3D_2181038320(t_2969568605.data[chckIndx(h_2969568659, 0, (t_2969568605.data).length - 1)].Field1, key_2969568606))) {
          result_2969568608 = h_2969568659;
          break BeforeRet;
          }
          
          h_2969568659 = nextTry_1308622883(h_2969568659, (t_2969568605.data).length - 1);
        }
    };
    result_2969568608 = subInt(-1, h_2969568659);
  };

  return result_2969568608;

}

function HEX5BHEX5DHEX3D_2969567578(t_2969567581, key_2969567582, val_2969567583) {
    if (((t_2969567581.data).length == 0)) {
    var correctSizeHEX60gensym15_2969567633 = slotsNeeded_1308622891(32);
    t_2969567581.counter = 0;
    t_2969567581.data = new Array(chckRange(correctSizeHEX60gensym15_2969567633, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym15_2969567633, 0, 2147483647) ; ++i) { t_2969567581.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }    }
    
    var hc_2969567638 = [0];
    var index_2969567877 = rawGet_2969567639(t_2969567581, key_2969567582, hc_2969567638, 0);
    if ((0 <= index_2969567877)) {
    t_2969567581.data[chckIndx(index_2969567877, 0, (t_2969567581.data).length - 1)].Field2 = nimCopy(t_2969567581.data[chckIndx(index_2969567877, 0, (t_2969567581.data).length - 1)].Field2, val_2969567583, NTI2181038083);
    }
    else {
      if (((t_2969567581.data).length == 0)) {
      var correctSizeHEX60gensym20_2969567979 = slotsNeeded_1308622891(32);
      t_2969567581.counter = 0;
      t_2969567581.data = new Array(chckRange(correctSizeHEX60gensym20_2969567979, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym20_2969567979, 0, 2147483647) ; ++i) { t_2969567581.data[i] = {Field0: 0, Field1: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field2: ({padding: 0, time: 0, fuzz: 0, count: 0})}; }      }
      
      if (mustRehash_2969567984(t_2969567581)) {
      enlarge_2969568139(t_2969567581);
      index_2969567877 = rawGetKnownHC_2969568602(t_2969567581, key_2969567582, hc_2969567638[0]);
      }
      
      index_2969567877 = subInt(-1, index_2969567877);
      rawInsert_2969568433(t_2969567581, t_2969567581, "data", key_2969567582, val_2969567583, hc_2969567638[0], index_2969567877);
      t_2969567581.counter = addInt(t_2969567581.counter, 1);
    }
    

  
}

function add_2969567270(node_2969567271, child_2969567272) {
    if (HEX3DHEX3D_2181038320(node_2969567271.id, null_2181038340)) {
    node_2969567271.id = nimCopy(node_2969567271.id, newId_2181038297(), NTI2181038083);
    }
    
    if (HEX3DHEX3D_2181038320(child_2969567272.id, null_2181038340)) {
    child_2969567272.id = nimCopy(child_2969567272.id, newId_2181038297(), NTI2181038083);
    }
    
    child_2969567272.parent = node_2969567271;
    node_2969567271.children.push(child_2969567272);;

  
}

function clone_2969567526(node_2969567527, idMap_2969567535) {
  var result_2969567536 = null;

    var newNodeId_2969567537 = newId_2181038297();
    result_2969567536 = {kind: node_2969567527.kind, id: nimCopy(null, newNodeId_2969567537, NTI2181038083), reff: nimCopy(null, node_2969567527.reff, NTI2181038083), text: nimCopy(null, node_2969567527.text, NTI33554449), parent: null, children: []};
    HEX5BHEX5DHEX3D_2969567578(idMap_2969567535, node_2969567527.id, newNodeId_2969567537);
    Label1: {
      var child_2969568843 = null;
      var i_2936025710 = 0;
      var L_2936025711 = (node_2969567527.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025710 < L_2936025711)) break Label3;
            child_2969568843 = node_2969567527.children[chckIndx(i_2936025710, 0, (node_2969567527.children).length - 1)];
            add_2969567270(result_2969567536, clone_2969567526(child_2969568843, idMap_2969567535));
            i_2936025710 = addInt(i_2936025710, 1);
            if (!(((node_2969567527.children).length == L_2936025711))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2969567536;

}

function hasKey_2969568915(t_2969568918, key_2969568919) {
  var result_2969568920 = false;

    var hc_2969568921 = [0];
    result_2969568920 = (0 <= rawGet_2969567639(t_2969568918, key_2969568919, hc_2969568921, 0));

  return result_2969568920;

}

function contains_2969568909(t_2969568912, key_2969568913) {
  var result_2969568914 = false;

  BeforeRet: {
    result_2969568914 = hasKey_2969568915(t_2969568912, key_2969568913);
    break BeforeRet;
  };

  return result_2969568914;

}

function HEX5BHEX5D_2969568981(t_2969568984, key_2969568985) {
  var result_2969568986 = null;

    var hcHEX60gensym22_2969568987 = [0];
    var indexHEX60gensym22_2969568994 = rawGet_2969567639(t_2969568984, key_2969568985, hcHEX60gensym22_2969568987, 0);
    if ((0 <= indexHEX60gensym22_2969568994)) {
    result_2969568986 = t_2969568984.data[chckIndx(indexHEX60gensym22_2969568994, 0, (t_2969568984.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_2969569048(key_2969568985);
    }
    

  return result_2969568986;

}

function replaceReferences_2969568862(node_2969568863, idMap_2969568866) {
    if (contains_2969568909(idMap_2969568866, node_2969568863.reff)) {
    node_2969568863.reff = nimCopy(node_2969568863.reff, HEX5BHEX5D_2969568981(idMap_2969568866, node_2969568863.reff), NTI2181038083);
    }
    
    Label1: {
      var child_2969569064 = null;
      var i_2936025721 = 0;
      var L_2936025722 = (node_2969568863.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025721 < L_2936025722)) break Label3;
            child_2969569064 = node_2969568863.children[chckIndx(i_2936025721, 0, (node_2969568863.children).length - 1)];
            replaceReferences_2969568862(child_2969569064, idMap_2969568866);
            i_2936025721 = addInt(i_2936025721, 1);
            if (!(((node_2969568863.children).length == L_2936025722))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function cloneAndMapIds_2969569065(node_2969569066) {
  var result_2969569067 = null;

  BeforeRet: {
    var idMap_2969569079 = [initTable_2969569068(32)];
    var newNode_2969569080 = clone_2969567526(node_2969569066, idMap_2969569079[0]);
    replaceReferences_2969568862(newNode_2969569080, idMap_2969569079[0]);
    result_2969569067 = newNode_2969569080;
    break BeforeRet;
  };

  return result_2969569067;

}

function copySelected_2936025662(self_2936025663) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936025663)) {
    break BeforeRet;
    }
    
    self_2936025663.deletedNode = nimCopy(self_2936025663.deletedNode, some_2969567458(cloneAndMapIds_2969569065(node_2936015479(self_2936025663))), NTI2969567351);
  };

  
}

function copySelectedJsWrapper_2936025658(self_2936025694) {
    copySelected_2936025662(self_2936025694);

  
}
editor_ast_prototype.copySelected = function() { return (copySelectedJsWrapper_2936025658(this));};

function getSymbol_2986407235(ctxHEX60gensym80_2986407236, idHEX60gensym80_2986407237) {
  var result_2986407239 = ({val: null});

  BeforeRet: {
    var itemHEX60gensym80_2986407240 = nimCopy(null, {Field0: nimCopy(null, idHEX60gensym80_2986407237, NTI2181038083), Field1: 2}, NTI3003121689);
    if (contains_2986366069(ctxHEX60gensym80_2986407236.itemsSymbol, itemHEX60gensym80_2986407240)) {
    result_2986407239 = nimCopy(result_2986407239, some_2986407407(HEX5BHEX5D_2986366622(ctxHEX60gensym80_2986407236.itemsSymbol, itemHEX60gensym80_2986407240)), NTI3070231688);
    break BeforeRet;
    }
    
    result_2986407239 = nimCopy(result_2986407239, none_2986407420(), NTI3070231688);
    break BeforeRet;
  };

  return result_2986407239;

}

function content_2801796219(document_2801796220) {
  var result_2801796221 = [];

  BeforeRet: {
    result_2801796221 = nimCopy(null, document_2801796220.lines, NTI2801795208);
    break BeforeRet;
  };

  return result_2801796221;

}

function updateNode_2986456560(ctx_2986456561, node_2986456562) {
          var Temporary3;
            var Temporary4;

    ctx_2986456561.depGraph.revision = addInt(ctx_2986456561.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3003133124(ctx_2986456561.depGraph.changed, {Field0: getItem_2986398161(node_2986456562), Field1: -1}, ctx_2986456561.depGraph.revision);
    var parent_2986456636 = node_2986456562.parent;
    Label1: {
        Label2: while (true) {
          if (!!((parent_2986456636 == null))) Temporary3 = false; else {            var oHEX60gensym754_2986456643 = findWithParentRec_2969569157(parent_2986456636, 11);
            if (!isSome_2969569114(oHEX60gensym754_2986456643)) Temporary4 = false; else {              var child_2986456689 = get_2969569134(oHEX60gensym754_2986456643);
              Temporary4 = true;            }            Temporary3 = Temporary4;          }        if (!Temporary3) break Label2;
          var functionDefinition_2986456690 = child_2986456689.parent;
          HEX5BHEX5DHEX3D_3003133124(ctx_2986456561.depGraph.changed, {Field0: getItem_2986398161(functionDefinition_2986456690), Field1: -1}, ctx_2986456561.depGraph.revision);
          parent_2986456636 = functionDefinition_2986456690.parent;
        }
    };
    var fmtRes_2986456764 = [mnewString(0)];
    fmtRes_2986456764[0].push.apply(fmtRes_2986456764[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3070231363(fmtRes_2986456764, 0, node_2986456562, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986456764[0], NTI33554449)]);

  
}

function notifySymbolChanged_2986455992(ctx_2986455993, sym_2986455994) {
    ctx_2986455993.depGraph.revision = addInt(ctx_2986455993.depGraph.revision, 1);
    HEX5BHEX5DHEX3D_3003133124(ctx_2986455993.depGraph.changed, {Field0: getItem_2986407430(sym_2986455994), Field1: -1}, ctx_2986455993.depGraph.revision);
    var fmtRes_2986456072 = [mnewString(0)];
    fmtRes_2986456072[0].push.apply(fmtRes_2986456072[0], [91,99,111,109,112,105,108,101,114,93,32,73,110,118,97,108,105,100,97,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2986456072, 0, sym_2986455994.name, []);
    fmtRes_2986456072[0].push.apply(fmtRes_2986456072[0], [32,40]);;
    formatValue_3003121884(fmtRes_2986456072, 0, sym_2986455994.id, []);
    fmtRes_2986456072[0].push.apply(fmtRes_2986456072[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2986456072[0], NTI33554449)]);

  
}

function newSeq_1979711504(len_1979711506) {
  var result_1979711507 = [];

    result_1979711507 = new Array(len_1979711506); for (var i = 0 ; i < len_1979711506 ; ++i) { result_1979711507[i] = []; }
  return result_1979711507;

}

function newSeq_1979711539(len_1979711541) {
  var result_1979711542 = [];

    result_1979711542 = new Array(len_1979711541); for (var i = 0 ; i < len_1979711541 ; ++i) { result_1979711542[i] = 0; }
  return result_1979711542;

}

function levenshtein_ratio_and_distance_1979711491(s_1979711492, t_1979711493, ratio_calc_1979711494) {
                    var Temporary16;
                    var Temporary17;
    var Temporary18;

  var result_1979711495 = 0.0;

  BeforeRet: {
    var rows_1979711496 = addInt((s_1979711492).length, 1);
    var cols_1979711497 = addInt((t_1979711493).length, 1);
    var distance_1979711498 = [];
    var cost_1979711499 = 0;
    distance_1979711498 = nimCopy(null, newSeq_1979711504(chckRange(rows_1979711496, 0, 2147483647)), NTI1979711504);
    Label1: {
      var i_1979711534 = 0;
      var i_2936025835 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025835 < rows_1979711496)) break Label3;
            i_1979711534 = i_2936025835;
            distance_1979711498[chckIndx(i_1979711534, 0, (distance_1979711498).length - 1)] = nimCopy(null, newSeq_1979711539(chckRange(cols_1979711497, 0, 2147483647)), NTI1979711531);
            i_2936025835 = addInt(i_2936025835, 1);
          }
      };
    };
    Label4: {
      var i_1979711551 = 0;
      var i_2936025841 = 1;
      Label5: {
          Label6: while (true) {
          if (!(i_2936025841 < rows_1979711496)) break Label6;
            i_1979711551 = i_2936025841;
            Label7: {
              var k_1979711556 = 0;
              var i_2936025839 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(i_2936025839 < cols_1979711497)) break Label9;
                    k_1979711556 = i_2936025839;
                    distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)][chckIndx(0, 0, (distance_1979711498[chckIndx(i_1979711551, 0, (distance_1979711498).length - 1)]).length - 1)] = i_1979711551;
                    distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)][chckIndx(k_1979711556, 0, (distance_1979711498[chckIndx(0, 0, (distance_1979711498).length - 1)]).length - 1)] = k_1979711556;
                    i_2936025839 = addInt(i_2936025839, 1);
                  }
              };
            };
            i_2936025841 = addInt(i_2936025841, 1);
          }
      };
    };
    Label10: {
      var col_1979711561 = 0;
      var i_2936025847 = 1;
      Label11: {
          Label12: while (true) {
          if (!(i_2936025847 < cols_1979711497)) break Label12;
            col_1979711561 = i_2936025847;
            Label13: {
              var row_1979711566 = 0;
              var i_2936025845 = 1;
              Label14: {
                  Label15: while (true) {
                  if (!(i_2936025845 < rows_1979711496)) break Label15;
                    row_1979711566 = i_2936025845;
                    if ((s_1979711492[chckIndx(subInt(row_1979711566, 1), 0, (s_1979711492).length - 1)] == t_1979711493[chckIndx(subInt(col_1979711561, 1), 0, (t_1979711493).length - 1)])) {
                    cost_1979711499 = 0;
                    }
                    else {
                      if (ratio_calc_1979711494) {
                      cost_1979711499 = 2;
                      }
                      else {
                        cost_1979711499 = 1;
                      }
                      
                    }
                    
                    distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(col_1979711561, 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)] = nimMin(nimMin(addInt((Temporary16 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary16)[chckIndx(col_1979711561, 0, (Temporary16).length - 1)], 1), addInt(distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)][chckIndx(subInt(col_1979711561, 1), 0, (distance_1979711498[chckIndx(row_1979711566, 0, (distance_1979711498).length - 1)]).length - 1)], 1)), addInt((Temporary17 = distance_1979711498[chckIndx(subInt(row_1979711566, 1), 0, (distance_1979711498).length - 1)], Temporary17)[chckIndx(subInt(col_1979711561, 1), 0, (Temporary17).length - 1)], cost_1979711499));
                    i_2936025845 = addInt(i_2936025845, 1);
                  }
              };
            };
            i_2936025847 = addInt(i_2936025847, 1);
          }
      };
    };
    var dst_1979711567 = (Temporary18 = distance_1979711498[chckIndx(subInt(rows_1979711496, 1), 0, (distance_1979711498).length - 1)], Temporary18)[chckIndx(subInt(cols_1979711497, 1), 0, (Temporary18).length - 1)];
    if (ratio_calc_1979711494) {
    result_1979711495 = (subInt(addInt((s_1979711492).length, (t_1979711493).length), dst_1979711567) / addInt((s_1979711492).length, (t_1979711493).length));
    break BeforeRet;
    }
    else {
      result_1979711495 = dst_1979711567;
      break BeforeRet;
    }
    
  };

  return result_1979711495;

}

function fuzzyMatch_1979711568(s1_1979711569, s2_1979711570) {
  var result_1979711571 = 0.0;

  BeforeRet: {
    if (((s2_1979711570).length < (s1_1979711569).length)) {
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s2_1979711570, s1_1979711569, true);
    break BeforeRet;
    }
    
    result_1979711571 = levenshtein_ratio_and_distance_1979711491(s1_1979711569, s2_1979711570, true);
    break BeforeRet;
  };

  return result_1979711571;

}

function parseFloatNative_33557211(a_33557212) {
  var result_33557213 = 0.0;

    var str_33557214 = [];
    Label1: {
      var x_33557228 = 0;
      var i_2936025857 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936025857 < (a_33557212).length)) break Label3;
            x_33557228 = a_33557212[i_2936025857];
            addChar(str_33557214, x_33557228);;
            i_2936025857 += 1;
          }
      };
    };
    var cstr_33557229 = toJSStr(str_33557214);
      result_33557213 = Number(cstr_33557229);
  

  return result_33557213;

}

function npuParseFloat(s_771752466, number_771752467, number_771752467_Idx) {
  var result_771752468 = 0;

    var bf_771752469 = [0.0];
    result_771752468 = nimParseBiggestFloat(s_771752466, bf_771752469, 0);
    if (!((result_771752468 == 0))) {
    number_771752467[number_771752467_Idx] = bf_771752469[0];
    }
    

  return result_771752468;

}

function parseFloat_771752749(s_771752750, number_771752751, number_771752751_Idx, start_771752752) {
  var result_771752753 = 0;

    result_771752753 = npuParseFloat((s_771752750.slice(start_771752752, (s_771752750).length - 1 + 1)), number_771752751, number_771752751_Idx);

  return result_771752753;

}

function nsuParseFloat(s_855638889) {
  var result_855638890 = [0.0];

    result_855638890[0] = 0.0;
    var L_855638891 = parseFloat_771752749(s_855638889, result_855638890, 0, 0);
    if ((!((L_855638891 == (s_855638889).length)) || (L_855638891 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,108,111,97,116,58,32] || []).concat(s_855638889 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638890[0];

}

function newSeq_3154116712(len_3154116714) {
  var result_3154116715 = [];

    result_3154116715 = new Array(len_3154116714); for (var i = 0 ; i < len_3154116714 ; ++i) { result_3154116715[i] = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}); }
  return result_3154116715;

}

function mergeAlt_3154116751(a_3154116753, b_3154116754, lo_3154116755, m_3154116756, hi_3154116757, cmp_3154116760, order_3154116761) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_3154116760(a_3154116753[chckIndx(m_3154116756, 0, (a_3154116753).length - 1)], a_3154116753[chckIndx(addInt(m_3154116756, 1), 0, (a_3154116753).length - 1)]), order_3154116761) <= 0)) {
    break BeforeRet;
    }
    
    var j_3154116762 = lo_3154116755;
    if (!((j_3154116762 <= m_3154116756))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_3154116768 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_3154116762 <= m_3154116756)) break Label2;
          b_3154116754[chckIndx(bb_3154116768, 0, (b_3154116754).length - 1)] = nimCopy(b_3154116754[chckIndx(bb_3154116768, 0, (b_3154116754).length - 1)], a_3154116753[chckIndx(j_3154116762, 0, (a_3154116753).length - 1)], NTI2936014312);
          bb_3154116768 = addInt(bb_3154116768, 1);
          j_3154116762 = addInt(j_3154116762, 1);
        }
    };
    var i_3154116779 = 0;
    var k_3154116780 = lo_3154116755;
    Label3: {
        Label4: while (true) {
        if (!((k_3154116780 < j_3154116762) && (j_3154116762 <= hi_3154116757))) break Label4;
          if ((HEX2A_1023410184(cmp_3154116760(b_3154116754[chckIndx(i_3154116779, 0, (b_3154116754).length - 1)], a_3154116753[chckIndx(j_3154116762, 0, (a_3154116753).length - 1)]), order_3154116761) <= 0)) {
          a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)] = nimCopy(a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)], b_3154116754[chckIndx(i_3154116779, 0, (b_3154116754).length - 1)], NTI2936014312);
          i_3154116779 = addInt(i_3154116779, 1);
          }
          else {
            a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)] = nimCopy(a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)], a_3154116753[chckIndx(j_3154116762, 0, (a_3154116753).length - 1)], NTI2936014312);
            j_3154116762 = addInt(j_3154116762, 1);
          }
          
          k_3154116780 = addInt(k_3154116780, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_3154116780 < j_3154116762)) break Label6;
          a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)] = nimCopy(a_3154116753[chckIndx(k_3154116780, 0, (a_3154116753).length - 1)], b_3154116754[chckIndx(i_3154116779, 0, (b_3154116754).length - 1)], NTI2936014312);
          k_3154116780 = addInt(k_3154116780, 1);
          i_3154116779 = addInt(i_3154116779, 1);
        }
    };
  };

  
}

function sort_3154116700(a_3154116702, cmp_3154116705, order_3154116706) {
    var n_3154116711 = (a_3154116702).length;
    var b_3154116748 = newSeq_3154116712(chckRange(divInt(n_3154116711, 2), 0, 2147483647));
    var s_3154116749 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_3154116749 < n_3154116711)) break Label2;
          var m_3154116750 = subInt(subInt(n_3154116711, 1), s_3154116749);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_3154116750)) break Label4;
                mergeAlt_3154116751(a_3154116702, b_3154116748, nimMax(addInt(subInt(m_3154116750, s_3154116749), 1), 0), m_3154116750, addInt(m_3154116750, s_3154116749), cmp_3154116705, order_3154116706);
                m_3154116750 = subInt(m_3154116750, mulInt(s_3154116749, 2));
              }
          };
          s_3154116749 = mulInt(s_3154116749, 2);
        }
    };

  
}

function cmp_3154116680(x_3154116682, y_3154116683) {
  var result_3154116684 = 0;

  BeforeRet: {
    if ((x_3154116682 == y_3154116683)) {
    result_3154116684 = 0;
    break BeforeRet;
    }
    
    if ((x_3154116682 < y_3154116683)) {
    result_3154116684 = -1;
    break BeforeRet;
    }
    
    result_3154116684 = 1;
    break BeforeRet;
  };

  return result_3154116684;

}

function getCompletions_2936021211(editor_2936021212, text_2936021213, contextNode_2936021217) {
      var Temporary5;
      var Temporary6;
    var Temporary7;
    
function HEX3Aanonymous_2936021361(a_2936021379, b_2936021380) {
      var result_2936021385 = 0;

        result_2936021385 = cmp_3154116680(a_2936021379.score, b_2936021380.score);

      return result_2936021385;

    }

  var result_2936021218 = [];

  BeforeRet: {
    result_2936021218 = nimCopy(null, [], NTI3154116626);
    if (((isNone_2969569142(contextNode_2936021217) || (get_2969569134(contextNode_2936021217).kind == 1)) || (get_2969569134(contextNode_2936021217).kind == 0))) {
    var symbols_2936021283 = computeSymbols_2986427564(ctx_2936012853, get_2969569134(contextNode_2936021217), true);
    Label1: {
      var key_2936021288 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_2936021289 = null;
      var L_2936025826 = len_3070231826(symbols_2936021283);
      Label2: {
        var h_2936025828 = 0;
        var colontmp__2936025829 = 0;
        colontmp__2936025829 = (symbols_2936021283.data).length - 1;
        var res_2936025830 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936025830 <= colontmp__2936025829)) break Label4;
              h_2936025828 = res_2936025830;
              if (isFilled_1308622880(symbols_2936021283.data[chckIndx(h_2936025828, 0, (symbols_2936021283.data).length - 1)].Field0)) {
              var colontmp__2936025833 = nimCopy(null, {Field0: nimCopy(null, symbols_2936021283.data[chckIndx(h_2936025828, 0, (symbols_2936021283.data).length - 1)].Field1, NTI2181038083), Field1: symbols_2936021283.data[chckIndx(h_2936025828, 0, (symbols_2936021283.data).length - 1)].Field2}, NTI3070231514);
              key_2936021288 = nimCopy(key_2936021288, colontmp__2936025833["Field0"], NTI2181038083);
              symbol_2936021289 = colontmp__2936025833["Field1"];
              var score_2936021290 = fuzzyMatch_1979711568(text_2936021213, symbol_2936021289.name);
              result_2936021218.push({kind: 0, score: score_2936021290, id: nimCopy(null, symbol_2936021289.id, NTI2181038083), nodeKind: 0, name: []});;
              if (!((len_3070231826(symbols_2936021283) == L_2936025826))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936025830 = addInt(res_2936025830, 1);
            }
        };
      };
    };
    }
    
      var oHEX60gensym121_2936021297 = nimCopy(null, contextNode_2936021217, NTI2969567351);
      if (!isSome_2969569114(oHEX60gensym121_2936021297)) Temporary6 = false; else {        var node_2936021320 = get_2969569134(oHEX60gensym121_2936021297);
        Temporary6 = true;      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (node_2936021320.kind == 0);      }    if (Temporary5) {
    result_2936021218.push({kind: 1, nodeKind: 9, name: [105,102], score: fuzzyMatch_1979711568(text_2936021213, [105,102]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936021218.push({kind: 1, nodeKind: 10, name: [119,104,105,108,101], score: fuzzyMatch_1979711568(text_2936021213, [119,104,105,108,101]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936021218.push({kind: 1, nodeKind: 4, name: [99,111,110,115,116], score: fuzzyMatch_1979711568(text_2936021213, [99,111,110,115,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936021218.push({kind: 1, nodeKind: 5, name: [108,101,116], score: fuzzyMatch_1979711568(text_2936021213, [108,101,116]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936021218.push({kind: 1, nodeKind: 6, name: [118,97,114], score: fuzzyMatch_1979711568(text_2936021213, [118,97,114]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    if (nsuStartsWith(text_2936021213, [34])) {
    Temporary7 = 1.1;
    }
    else {
    Temporary7 = 0.0;
    }
    
    result_2936021218.push({kind: 1, nodeKind: 3, name: [115,116,114,105,110,103,32,108,105,116,101,114,97,108], score: Temporary7, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936021218.push({kind: 1, nodeKind: 7, name: [98,108,111,99,107], score: fuzzyMatch_1979711568(text_2936021213, [123]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
    result_2936021218.push({kind: 1, nodeKind: 11, name: [102,110], score: fuzzyMatch_1979711568(text_2936021213, [102,110]), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
++excHandler;
    try {
    var _ = nsuParseFloat(text_2936021213);
    result_2936021218.push({kind: 1, nodeKind: 2, name: [110,117,109,98,101,114,32,108,105,116,101,114,97,108], score: 1.1, id: ({padding: 0, time: 0, fuzz: 0, count: 0})});;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    sort_3154116700(result_2936021218, HEX3Aanonymous_2936021361, 0);
    break BeforeRet;
  };

  return result_2936021218;

}

function updateCompletions_2936015467(editor_2936015468) {
  BeforeRet: {
    if ((editor_2936015468.textDocument == null)) {
    editor_2936015468.completions = nimCopy(null, [], NTI3154116626);
    editor_2936015468.selectedCompletion = 0;
    break BeforeRet;
    }
    
    var text_2936021409 = nsuJoinSep(content_2801796219(editor_2936015468.textDocument), []);
    editor_2936015468.completions = nimCopy(null, getCompletions_2936021211(editor_2936015468, text_2936021409, some_2969567458(node_2936015479(editor_2936015468))), NTI2936017298);
    editor_2936015468.completionText = nimCopy(null, text_2936021409, NTI33554449);
    if ((0 < (editor_2936015468.completions).length)) {
    editor_2936015468.selectedCompletion = clamp_1660945119(editor_2936015468.selectedCompletion, 0, subInt((editor_2936015468.completions).length, 1));
    }
    else {
      editor_2936015468.selectedCompletion = 0;
    }
    
  };

  
}

function finishEdit_2936021424(self_2936021425, apply_2936021426) {
      var Temporary1;
    var Temporary2;
    var Temporary3;

  BeforeRet: {
    if (!(isEditing_2936021000(self_2936021425))) {
    break BeforeRet;
    }
    
    if (apply_2936021426) {
    if (!(HEX3DHEX3D_2181038320(self_2936021425.currentlyEditedSymbol, null_2181038340))) {
      var oHEX60gensym644_2936025735 = getSymbol_2986407235(ctx_2936012853, self_2936021425.currentlyEditedSymbol);
      if (!isSome_3070232117(oHEX60gensym644_2936025735)) Temporary1 = false; else {        var sym_2936025758 = get_3070232137(oHEX60gensym644_2936025735);
        Temporary1 = true;      }    if (Temporary1) {
    self_2936021425.document.undoOps.push({kind: 4, id: nimCopy(null, self_2936021425.currentlyEditedSymbol, NTI2181038083), text: nimCopy(null, sym_2936025758.name, NTI33554449), parent: null, idx: 0, node: null});;
    sym_2936025758.name = nimCopy(null, nsuJoinSep(content_2801796219(self_2936021425.textDocument), []), NTI33554449);
    if ((sym_2936025758.kind == 0)) {
    var Temporary2 = sym_2936025758;
    if (ConstSet166[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
    Temporary2.node.text = nimCopy(null, sym_2936025758.name, NTI33554449);
    var Temporary3 = sym_2936025758;
    if (ConstSet167[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
    updateNode_2986456560(ctx_2936012853, Temporary3.node);
    }
    
    notifySymbolChanged_2986455992(ctx_2936012853, sym_2936025758);
    }
    
    }
    else {
    if (!((self_2936021425.currentlyEditedNode == null))) {
    self_2936021425.document.undoOps.push({kind: 3, node: self_2936021425.currentlyEditedNode, text: nimCopy(null, self_2936021425.currentlyEditedNode.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
    self_2936021425.currentlyEditedNode.text = nimCopy(null, nsuJoinSep(content_2801796219(self_2936021425.textDocument), [10]), NTI33554449);
    updateNode_2986456560(ctx_2936012853, self_2936021425.currentlyEditedNode);
    }
    }
    }
    
    unregister_2147483811(self_2936021425.textEditor);
    self_2936021425.textEditor = null;
    self_2936021425.textDocument = null;
    self_2936021425.currentlyEditedSymbol = nimCopy(self_2936021425.currentlyEditedSymbol, null_2181038340, NTI2181038083);
    self_2936021425.currentlyEditedNode = null;
    updateCompletions_2936015467(self_2936021425);
  };

  
}

function finishEditJsWrapper_2936025726(self_2936025803, apply_2936025804) {
    finishEdit_2936021424(self_2936025803, apply_2936025804);

  
}
editor_ast_prototype.finishEdit = function(apply_ /* : bool */) { return (finishEditJsWrapper_2936025726(this, apply_));};

function pop_2936022129(s_2936022131, s_2936022131_Idx) {
  var result_2936022132 = null;

    var L_2936022136 = subInt((s_2936022131[s_2936022131_Idx]).length, 1);
    result_2936022132 = s_2936022131[s_2936022131_Idx][chckIndx(L_2936022136, 0, (s_2936022131[s_2936022131_Idx]).length - 1)];
    if (s_2936022131[s_2936022131_Idx].length < chckRange(L_2936022136, 0, 2147483647)) { for (var i = s_2936022131[s_2936022131_Idx].length ; i < chckRange(L_2936022136, 0, 2147483647) ; ++i) s_2936022131[s_2936022131_Idx].push(null); }
               else { s_2936022131[s_2936022131_Idx].length = chckRange(L_2936022136, 0, 2147483647); };

  return result_2936022132;

}

function formatValue_2936015341(result_2936015343, result_2936015343_Idx, value_2936015344, specifier_2936015345) {
    formatValue_721420459(result_2936015343, result_2936015343_Idx, reprEnum(value_2936015344, NTI2936014155), specifier_2936015345);

  
}

function HEX24_2936015333(op_2936015334) {
  var result_2936015335 = [];

    var fmtRes_2936015340 = [mnewString(0)];
    formatValue_2936015341(fmtRes_2936015340, 0, op_2936015334.kind, []);
    fmtRes_2936015340[0].push.apply(fmtRes_2936015340[0], [44,32,39]);;
    formatValue_721420459(fmtRes_2936015340, 0, op_2936015334.text, []);
    fmtRes_2936015340[0].push.apply(fmtRes_2936015340[0], [39]);;
    result_2936015335 = nimCopy(null, fmtRes_2936015340[0], NTI33554449);
    if (!(HEX3DHEX3D_2181038320(op_2936015334.id, null_2181038340))) {
    var fmtRes_2936015353 = [mnewString(0)];
    fmtRes_2936015353[0].push.apply(fmtRes_2936015353[0], [44,32,105,100,32,61,32]);;
    formatValue_3003121884(fmtRes_2936015353, 0, op_2936015334.id, []);
    result_2936015335.push.apply(result_2936015335, fmtRes_2936015353[0]);;
    }
    
    if (!((op_2936015334.node == null))) {
    var fmtRes_2936015367 = [mnewString(0)];
    fmtRes_2936015367[0].push.apply(fmtRes_2936015367[0], [44,32,110,111,100,101,32,61,32]);;
    formatValue_3070231363(fmtRes_2936015367, 0, op_2936015334.node, []);
    result_2936015335.push.apply(result_2936015335, fmtRes_2936015367[0]);;
    }
    
    if (!((op_2936015334.parent == null))) {
    var fmtRes_2936015381 = [mnewString(0)];
    fmtRes_2936015381[0].push.apply(fmtRes_2936015381[0], [44,32,112,97,114,101,110,116,32,61,32]);;
    formatValue_3070231363(fmtRes_2936015381, 0, op_2936015334.parent, []);
    fmtRes_2936015381[0].push.apply(fmtRes_2936015381[0], [44,32,105,110,100,101,120,32,61,32]);;
    formatValue_2332033544(fmtRes_2936015381, 0, op_2936015334.idx, []);
    result_2936015335.push.apply(result_2936015335, fmtRes_2936015381[0]);;
    }
    

  return result_2936015335;

}

function formatValue_2936022147(result_2936022149, result_2936022149_Idx, value_2936022150, specifier_2936022151) {
    formatValue_721420459(result_2936022149, result_2936022149_Idx, HEX24_2936015333(value_2936022150), specifier_2936022151);

  
}

function insert_2969567290(x_2969567292, x_2969567292_Idx, item_2969567293, i_2969567294) {
    var it_2969567315 = null;
    x_2969567292[x_2969567292_Idx] = x_2969567292[x_2969567292_Idx] || []; x_2969567292[x_2969567292_Idx].splice(i_2969567294, 0, it_2969567315);
    x_2969567292[x_2969567292_Idx][chckIndx(i_2969567294, 0, (x_2969567292[x_2969567292_Idx]).length - 1)] = item_2969567293;

  
}

function insert_2969567286(node_2969567287, child_2969567288, idx_2969567289) {
    if (HEX3DHEX3D_2181038320(node_2969567287.id, null_2181038340)) {
    node_2969567287.id = nimCopy(node_2969567287.id, newId_2181038297(), NTI2181038083);
    }
    
    if (HEX3DHEX3D_2181038320(child_2969567288.id, null_2181038340)) {
    child_2969567288.id = nimCopy(child_2969567288.id, newId_2181038297(), NTI2181038083);
    }
    
    child_2969567288.parent = node_2969567287;
    insert_2969567290(node_2969567287, "children", child_2969567288, chckRange(idx_2969567289, 0, 2147483647));

  
}

function undo_2936022119(document_2936022120) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2936022122 = ({val: null});

  BeforeRet: {
    if (((document_2936022120.undoOps).length == 0)) {
    result_2936022122 = nimCopy(result_2936022122, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var undoOp_2936022141 = pop_2936022129(document_2936022120, "undoOps");
    var fmtRes_2936022146 = [mnewString(0)];
    fmtRes_2936022146[0].push.apply(fmtRes_2936022146[0], [85,110,100,111,105,110,103,32]);;
    formatValue_2936022147(fmtRes_2936022146, 0, undoOp_2936022141, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936022146[0], NTI33554449)]);
    switch (undoOp_2936022141.kind) {
    case 0:
      insert_2969567286(undoOp_2936022141.parent, undoOp_2936022141.node, undoOp_2936022141.idx);
      handleNodeInserted_2936018151(document_2936022120, undoOp_2936022141.node);
      document_2936022120.redoOps.push(undoOp_2936022141);;
      result_2936022122 = nimCopy(result_2936022122, some_2969567458(undoOp_2936022141.node), NTI2969567351);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2936022159 = HEX5BHEX5D_2969567316(undoOp_2936022141.parent, undoOp_2936022141.idx);
      handleNodeDelete_2936019726(document_2936022120, HEX5BHEX5D_2969567316(undoOp_2936022141.parent, undoOp_2936022141.idx));
      HEX5BHEX5DHEX3D_2969567496(undoOp_2936022141.parent, undoOp_2936022141.idx, undoOp_2936022141.node);
      handleNodeInserted_2936018151(document_2936022120, undoOp_2936022141.node);
      document_2936022120.redoOps.push({kind: 1, parent: undoOp_2936022141.parent, idx: undoOp_2936022141.idx, node: oldNode_2936022159, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2936022122 = nimCopy(result_2936022122, some_2969567458(undoOp_2936022141.node), NTI2969567351);
      break BeforeRet;
      break;
    case 2:
      handleNodeDelete_2936019726(document_2936022120, HEX5BHEX5D_2969567316(undoOp_2936022141.parent, undoOp_2936022141.idx));
      var _ = delete_2969567500(undoOp_2936022141.parent, undoOp_2936022141.idx);
      document_2936022120.redoOps.push(undoOp_2936022141);;
      if ((undoOp_2936022141.idx < len_2969567320(undoOp_2936022141.parent))) {
      result_2936022122 = nimCopy(result_2936022122, some_2969567458(HEX5BHEX5D_2969567316(undoOp_2936022141.parent, undoOp_2936022141.idx)), NTI2969567351);
      break BeforeRet;
      }
      else {
      if ((0 < undoOp_2936022141.idx)) {
      result_2936022122 = nimCopy(result_2936022122, some_2969567458(HEX5BHEX5D_2969567316(undoOp_2936022141.parent, subInt(undoOp_2936022141.idx, 1))), NTI2969567351);
      break BeforeRet;
      }
      }
      result_2936022122 = nimCopy(result_2936022122, some_2969567458(undoOp_2936022141.parent), NTI2969567351);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym151_2936022182 = getSymbol_2986407235(ctx_2936012853, undoOp_2936022141.id);
        if (!isSome_3070232117(oHEX60gensym151_2936022182)) Temporary1 = false; else {          var symbol_2936022205 = get_3070232137(oHEX60gensym151_2936022182);
          Temporary1 = true;        }      if (Temporary1) {
      document_2936022120.redoOps.push({kind: 4, id: nimCopy(null, undoOp_2936022141.id, NTI2181038083), text: nimCopy(null, symbol_2936022205.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2936022205.name = nimCopy(null, undoOp_2936022141.text, NTI33554449);
      if ((symbol_2936022205.kind == 0)) {
      var Temporary2 = symbol_2936022205;
      if (ConstSet175[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      Temporary2.node.text = nimCopy(null, symbol_2936022205.name, NTI33554449);
      var Temporary3 = symbol_2936022205;
      if (ConstSet176[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      updateNode_2986456560(ctx_2936012853, Temporary3.node);
      }
      
      notifySymbolChanged_2986455992(ctx_2936012853, symbol_2936022205);
      }
      
      break;
    case 3:
      document_2936022120.redoOps.push({kind: 3, node: undoOp_2936022141.node, text: nimCopy(null, undoOp_2936022141.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      undoOp_2936022141.node.text = nimCopy(null, undoOp_2936022141.text, NTI33554449);
      updateNode_2986456560(ctx_2936012853, undoOp_2936022141.node);
      break;
    }
    result_2936022122 = nimCopy(result_2936022122, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936022122;

}

function undo_2936025870(self_2936025871) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025871)) {
    break BeforeRet;
    }
    
    finishEdit_2936021424(self_2936025871, false);
      var oHEX60gensym654_2936025874 = undo_2936022119(self_2936025871.document);
      if (!isSome_2969569114(oHEX60gensym654_2936025874)) Temporary1 = false; else {        var node_2936025897 = get_2969569134(oHEX60gensym654_2936025874);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936017358(self_2936025871, node_2936025897);
    }
    
  };

  
}

function undoJsWrapper2_2936025866(self_2936025925) {
    undo_2936025870(self_2936025925);

  
}
editor_ast_prototype.undo2 = function() { return (undoJsWrapper2_2936025866(this));};

function redo_2936022220(document_2936022221) {
        var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2936022223 = ({val: null});

  BeforeRet: {
    if (((document_2936022221.redoOps).length == 0)) {
    result_2936022223 = nimCopy(result_2936022223, none_2969567436(), NTI2969567351);
    break BeforeRet;
    }
    
    var redoOp_2936022232 = pop_2936022129(document_2936022221, "redoOps");
    var fmtRes_2936022237 = [mnewString(0)];
    fmtRes_2936022237[0].push.apply(fmtRes_2936022237[0], [82,101,100,111,105,110,103,32]);;
    formatValue_2936022147(fmtRes_2936022237, 0, redoOp_2936022232, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936022237[0], NTI33554449)]);
    switch (redoOp_2936022232.kind) {
    case 0:
      document_2936022221.undoOps.push({kind: 0, parent: redoOp_2936022232.parent, idx: redoOp_2936022232.idx, node: redoOp_2936022232.node, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      handleNodeDelete_2936019726(document_2936022221, HEX5BHEX5D_2969567316(redoOp_2936022232.parent, redoOp_2936022232.idx));
      var _ = delete_2969567500(redoOp_2936022232.parent, redoOp_2936022232.idx);
      if ((redoOp_2936022232.idx < len_2969567320(redoOp_2936022232.parent))) {
      result_2936022223 = nimCopy(result_2936022223, some_2969567458(HEX5BHEX5D_2969567316(redoOp_2936022232.parent, redoOp_2936022232.idx)), NTI2969567351);
      break BeforeRet;
      }
      else {
      if ((0 < redoOp_2936022232.idx)) {
      result_2936022223 = nimCopy(result_2936022223, some_2969567458(HEX5BHEX5D_2969567316(redoOp_2936022232.parent, subInt(redoOp_2936022232.idx, 1))), NTI2969567351);
      break BeforeRet;
      }
      }
      result_2936022223 = nimCopy(result_2936022223, some_2969567458(redoOp_2936022232.parent), NTI2969567351);
      break BeforeRet;
      break;
    case 1:
      var oldNode_2936022256 = HEX5BHEX5D_2969567316(redoOp_2936022232.parent, redoOp_2936022232.idx);
      handleNodeDelete_2936019726(document_2936022221, HEX5BHEX5D_2969567316(redoOp_2936022232.parent, redoOp_2936022232.idx));
      HEX5BHEX5DHEX3D_2969567496(redoOp_2936022232.parent, redoOp_2936022232.idx, redoOp_2936022232.node);
      handleNodeInserted_2936018151(document_2936022221, redoOp_2936022232.node);
      document_2936022221.undoOps.push({kind: 1, parent: redoOp_2936022232.parent, idx: redoOp_2936022232.idx, node: oldNode_2936022256, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
      result_2936022223 = nimCopy(result_2936022223, some_2969567458(redoOp_2936022232.node), NTI2969567351);
      break BeforeRet;
      break;
    case 2:
      insert_2969567286(redoOp_2936022232.parent, redoOp_2936022232.node, redoOp_2936022232.idx);
      handleNodeInserted_2936018151(document_2936022221, redoOp_2936022232.node);
      document_2936022221.undoOps.push(redoOp_2936022232);;
      result_2936022223 = nimCopy(result_2936022223, some_2969567458(redoOp_2936022232.node), NTI2969567351);
      break BeforeRet;
      break;
    case 4:
        var oHEX60gensym154_2936022273 = getSymbol_2986407235(ctx_2936012853, redoOp_2936022232.id);
        if (!isSome_3070232117(oHEX60gensym154_2936022273)) Temporary1 = false; else {          var symbol_2936022296 = get_3070232137(oHEX60gensym154_2936022273);
          Temporary1 = true;        }      if (Temporary1) {
      document_2936022221.undoOps.push({kind: 4, id: nimCopy(null, redoOp_2936022232.id, NTI2181038083), text: nimCopy(null, symbol_2936022296.name, NTI33554449), parent: null, idx: 0, node: null});;
      symbol_2936022296.name = nimCopy(null, redoOp_2936022232.text, NTI33554449);
      if ((symbol_2936022296.kind == 0)) {
      var Temporary2 = symbol_2936022296;
      if (ConstSet177[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      Temporary2.node.text = nimCopy(null, symbol_2936022296.name, NTI33554449);
      var Temporary3 = symbol_2936022296;
      if (ConstSet178[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI3070230537)); }
      updateNode_2986456560(ctx_2936012853, Temporary3.node);
      }
      
      notifySymbolChanged_2986455992(ctx_2936012853, symbol_2936022296);
      }
      
      break;
    case 3:
      document_2936022221.undoOps.push({kind: 3, node: redoOp_2936022232.node, text: nimCopy(null, redoOp_2936022232.node.text, NTI33554449), id: ({padding: 0, time: 0, fuzz: 0, count: 0}), parent: null, idx: 0});;
      redoOp_2936022232.node.text = nimCopy(null, redoOp_2936022232.text, NTI33554449);
      updateNode_2986456560(ctx_2936012853, redoOp_2936022232.node);
      break;
    }
    result_2936022223 = nimCopy(result_2936022223, none_2969567436(), NTI2969567351);
    break BeforeRet;
  };

  return result_2936022223;

}

function redo_2936025947(self_2936025948) {
      var Temporary1;

  BeforeRet: {
    if (isEditing_2936021000(self_2936025948)) {
    break BeforeRet;
    }
    
    finishEdit_2936021424(self_2936025948, false);
      var oHEX60gensym663_2936025951 = redo_2936022220(self_2936025948.document);
      if (!isSome_2969569114(oHEX60gensym663_2936025951)) Temporary1 = false; else {        var node_2936025974 = get_2969569134(oHEX60gensym663_2936025951);
        Temporary1 = true;      }    if (Temporary1) {
    nodeHEX3D_2936017358(self_2936025948, node_2936025974);
    }
    
  };

  
}

function redoJsWrapper2_2936025943(self_2936026002) {
    redo_2936025947(self_2936026002);

  
}
editor_ast_prototype.redo2 = function() { return (redoJsWrapper2_2936025943(this));};

function canInsertInto_2936024604(self_2936024605, parent_2936024606) {
        var Temporary1;
      var Temporary2;
        var Temporary3;
        var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
      var Temporary8;

  var result_2936024607 = false;

  BeforeRet: {
    switch (parent_2936024606.kind) {
    case 0:
    case 1:
    case 2:
    case 3:
      result_2936024607 = false;
      break BeforeRet;
      break;
    case 4:
      result_2936024607 = (len_2969567320(parent_2936024606) < 1);
      break BeforeRet;
      break;
    case 5:
    case 6:
    case 10:
    case 13:
      result_2936024607 = (len_2969567320(parent_2936024606) < 2);
      break BeforeRet;
      break;
    case 11:
      result_2936024607 = (len_2969567320(parent_2936024606) < 3);
      break BeforeRet;
      break;
    case 7:
    case 9:
    case 12:
      result_2936024607 = true;
      break BeforeRet;
      break;
    case 8:
      if ((len_2969567320(parent_2936024606) == 0)) {
      result_2936024607 = true;
      break BeforeRet;
      }
      
        var oHEX60gensym530_2936024610 = computeSymbol_2986424064(ctx_2936012853, HEX5BHEX5D_2969567316(parent_2936024606, 0), true);
        if (!isSome_3070232117(oHEX60gensym530_2936024610)) Temporary1 = false; else {          var sym_2936024633 = get_3070232137(oHEX60gensym530_2936024610);
          Temporary1 = true;        }      if (Temporary1) {
      if ((sym_2936024633.kind == 1)) {
      var Temporary2 = sym_2936024633;
      if (ConstSet179[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      switch (Temporary2.operatorNotation) {
      case 1:
      case 2:
        result_2936024607 = (len_2969567320(parent_2936024606) < 2);
        break BeforeRet;
        break;
      case 3:
        result_2936024607 = (len_2969567320(parent_2936024606) < 3);
        break BeforeRet;
        break;
      default: 
        break;
      }
      }
      
      }
      
      var typ_2936024638 = computeType_2986417458(ctx_2936012853, HEX5BHEX5D_2969567316(parent_2936024606, 0), true);
      if ((typ_2936024638.kind == 4)) {
        var Temporary4 = typ_2936024638;
        if (ConstSet180[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
        if (!(0 < (Temporary4.paramTypes).length)) Temporary3 = false; else {          var Temporary5 = typ_2936024638;
          if (ConstSet181[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI3070230531)); }
          var Temporary6 = typ_2936024638;
          if (ConstSet182[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI3070230531)); }
          Temporary3 = HEX3DHEX3D_3070231086((Temporary7 = Temporary5.paramTypes, Temporary7)[chckIndx((Temporary6.paramTypes).length - 1, 0, (Temporary7).length - 1)], anyType_3070230961(true));        }      if (Temporary3) {
      result_2936024607 = true;
      break BeforeRet;
      }
      
      var Temporary8 = typ_2936024638;
      if (ConstSet183[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI3070230531)); }
      result_2936024607 = (len_2969567320(parent_2936024606) < addInt((Temporary8.paramTypes).length, 1));
      break BeforeRet;
      }
      
      result_2936024607 = true;
      break BeforeRet;
      break;
    }
  };

  return result_2936024607;

}

function some_2936022351(val_2936022353) {
  var result_2936022354 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2936022354.has = true;
    result_2936022354.val = nimCopy(result_2936022354.val, val_2936022353, NTI2936018200);

  return result_2936022354;

}

function none_2936022365() {
  var result_2936022372 = ({val: {Field0: null, Field1: 0}, has: false});

  return result_2936022372;

}

function none_2936022852() {
  var result_2936022854 = ({val: {Field0: null, Field1: 0}, has: false});

    result_2936022854 = nimCopy(result_2936022854, none_2936022365(), NTI2936018205);

  return result_2936022854;

}

function createNodeFromAction_2936022311(editor_2936022312, arg_2936022313, node_2936022314, typ_2936022315) {
        var Temporary1;
      var Temporary24;
        var Temporary25;
        var Temporary26;
      var Temporary27;
      var Temporary28;
        var Temporary47;
            var Temporary71;
      var Temporary85;

  var result_2936022321 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (toJSStr(arg_2936022313)) {
    case "deleted":
        var oHEX60gensym155_2936022324 = nimCopy(null, editor_2936022312.deletedNode, NTI2969567351);
        if (!isSome_2969569114(oHEX60gensym155_2936022324)) Temporary1 = false; else {          var node_2936022347 = get_2969569134(oHEX60gensym155_2936022324);
          Temporary1 = true;        }      if (Temporary1) {
      editor_2936022312.deletedNode = nimCopy(editor_2936022312.deletedNode, some_2969567458(cloneAndMapIds_2969569065(node_2936022347)), NTI2969567351);
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022347, Field1: 0}), NTI2936018205);
      break BeforeRet;
      }
      
      result_2936022321 = nimCopy(result_2936022321, none_2936022365(), NTI2936018205);
      break BeforeRet;
      break;
    case "empty":
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: {kind: 0, id: newId_2181038297(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "identifier":
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: {kind: 1, parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "number-literal":
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "const-decl":
      Label2: {
        var tmpHEX60gensym156_2936022386 = null;
        Label3: {
          var res_2936022456 = null;
          res_2936022456 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022456.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936022456.id = nimCopy(res_2936022456.id, newId_2181038297(), NTI2181038083);
          Label5: {
            Label6: {
              var res_2936022459 = null;
              res_2936022459 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022459.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936022456, res_2936022459);
        };
      };
      var node_2936022478 = res_2936022456;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022478, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "let-decl":
      Label8: {
        var tmpHEX60gensym163_2936022486 = null;
        Label9: {
          var res_2936022492 = null;
          res_2936022492 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022492.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936022492.id = nimCopy(res_2936022492.id, newId_2181038297(), NTI2181038083);
          Label11: {
            Label12: {
              var res_2936022495 = null;
              res_2936022495 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022495.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022492, res_2936022495);
            Label14: {
              var res_2936022497 = null;
              res_2936022497 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022497.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022492, res_2936022497);
          };
        };
      };
      var node_2936022525 = res_2936022492;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022525, Field1: 1}), NTI2936018205);
      break BeforeRet;
      break;
    case "var-decl":
      Label16: {
        var tmpHEX60gensym173_2936022533 = null;
        Label17: {
          var res_2936022539 = null;
          res_2936022539 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022539.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936022539.id = nimCopy(res_2936022539.id, newId_2181038297(), NTI2181038083);
          Label19: {
            Label20: {
              var res_2936022542 = null;
              res_2936022542 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022542.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022539, res_2936022542);
            Label22: {
              var res_2936022544 = null;
              res_2936022544 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022544.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022539, res_2936022544);
          };
        };
      };
      var node_2936022572 = res_2936022539;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022572, Field1: 1}), NTI2936018205);
      break BeforeRet;
      break;
    case "call-func":
      var sym_2936022576 = computeSymbol_2986424064(ctx_2936012853, node_2936022314, true);
        var oHEX60gensym183_2936022579 = nimCopy(null, sym_2936022576, NTI3070231688);
        if (!isSome_3070232117(oHEX60gensym183_2936022579)) Temporary26 = false; else {          var sym_2936022602 = get_3070232137(oHEX60gensym183_2936022579);
          Temporary26 = true;        }        if (!Temporary26) Temporary25 = false; else {          Temporary25 = (sym_2936022602.kind == 1);        }      if (Temporary25) {
      var Temporary27 = sym_2936022602;
      if (ConstSet184[Temporary27.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'operatorNotation\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary27.kind, NTI3070230537)); }
      Temporary24 = Temporary27.operatorNotation;
      }
      else {
      Temporary24 = 0;
      }
      
      var kind_2936022607 = Temporary24;
      switch (kind_2936022607) {
      case 1:
      case 2:
        Label29: {
          var tmpHEX60gensym184_2936022612 = null;
          Label30: {
            var res_2936022618 = null;
            res_2936022618 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936022618.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label32: {
              Label33: {
                var res_2936022620 = null;
                res_2936022620 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022620.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022618, res_2936022620);
              Label35: {
                var res_2936022622 = null;
                res_2936022622 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022622.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022618, res_2936022622);
            };
          };
        };
        Temporary28 = res_2936022618;
        break;
      case 3:
        Label37: {
          var tmpHEX60gensym194_2936022654 = null;
          Label38: {
            var res_2936022660 = null;
            res_2936022660 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936022660.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label40: {
              Label41: {
                var res_2936022662 = null;
                res_2936022662 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022662.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022660, res_2936022662);
              Label43: {
                var res_2936022664 = null;
                res_2936022664 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022664.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022660, res_2936022664);
              Label45: {
                var res_2936022666 = null;
                res_2936022666 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022666.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022660, res_2936022666);
            };
          };
        };
        Temporary28 = res_2936022660;
        break;
      case 0:
        var typ_2936022703 = computeType_2986417458(ctx_2936012853, node_2936022314, true);
        if ((typ_2936022703.kind == 0)) {
        Label48: {
          var tmpHEX60gensym207_2936022712 = null;
          Label49: {
            var res_2936022718 = null;
            res_2936022718 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936022718.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label51: {
              Label52: {
                var res_2936022720 = null;
                res_2936022720 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022720.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022718, res_2936022720);
              Label54: {
                var res_2936022722 = null;
                res_2936022722 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022722.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022718, res_2936022722);
              Label56: {
                var res_2936022724 = null;
                res_2936022724 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022724.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936022718, res_2936022724);
            };
          };
        };
        Temporary47 = res_2936022718;
        }
        else {
        if (!((typ_2936022703.kind == 4))) {
        Label58: {
          var tmpHEX60gensym221_2936022769 = null;
          Label59: {
            var res_2936022775 = null;
            res_2936022775 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936022775.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label61: {
              Label62: {
                var res_2936022777 = null;
                res_2936022777 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936022777.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
            };
            add_2969567270(res_2936022775, res_2936022777);
          };
        };
        Temporary47 = res_2936022775;
        }
        else {
          Label64: {
            var tmpHEX60gensym228_2936022800 = null;
            Label65: {
              var res_2936022806 = null;
              res_2936022806 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022806.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label67: {
                Label68: {
                  var res_2936022808 = null;
                  res_2936022808 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2936022808.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2969567270(res_2936022806, res_2936022808);
            };
          };
          var newNode_2936022827 = res_2936022806;
          Label70: {
            var __2936022831 = null;
            var colontmp__2936026257 = [];
            var Temporary71 = typ_2936022703;
            if (ConstSet185[Temporary71.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary71.kind, NTI3070230531)); }
            colontmp__2936026257 = Temporary71.paramTypes;
            var i_2936026258 = 0;
            var L_2936026259 = (colontmp__2936026257).length;
            Label72: {
                Label73: while (true) {
                if (!(i_2936026258 < L_2936026259)) break Label73;
                  __2936022831 = colontmp__2936026257[chckIndx(i_2936026258, 0, (colontmp__2936026257).length - 1)];
                  Label74: {
                    var tmpHEX60gensym235_2936022836 = null;
                    Label75: {
                      var res_2936022842 = null;
                      res_2936022842 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                      try {
                      res_2936022842.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                      if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                      raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                      }
                      else {
                      	reraiseException();
                      }
                      lastJSError = prevJSError;
                      } finally {
                      }
                    };
                  };
                  add_2969567270(newNode_2936022827, res_2936022842);
                  i_2936026258 = addInt(i_2936026258, 1);
                  if (!(((colontmp__2936026257).length == L_2936026259))) {
                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                  }
                  
                }
            };
          };
        Temporary47 = newNode_2936022827;
        }
        }
        Temporary28 = Temporary47;
        break;
      default: 
        result_2936022321 = nimCopy(result_2936022321, none_2936022852(), NTI2936018205);
        break BeforeRet;
        break;
      }
      var node_2936022871 = Temporary28;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022871, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "call-arg":
      Label77: {
        var tmpHEX60gensym239_2936022879 = null;
        Label78: {
          var res_2936022885 = null;
          res_2936022885 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022885.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label80: {
            Label81: {
              var res_2936022887 = null;
              res_2936022887 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022887.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022885, res_2936022887);
            Label83: {
              var res_2936022889 = null;
              res_2936022889 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022889.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022885, res_2936022889);
          };
        };
      };
      var node_2936022917 = res_2936022885;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022917, Field1: 1}), NTI2936018205);
      break BeforeRet;
      break;
    case "+":
      if ((typ_2936022315.kind == 2)) {
      Temporary85 = IdAppendString_2952790027;
      }
      else {
      Temporary85 = IdAdd_2952790019;
      }
      
      var operator_2936022925 = nimCopy(null, Temporary85, NTI2181038083);
      Label86: {
        var tmpHEX60gensym249_2936022930 = null;
        Label87: {
          var res_2936022936 = null;
          res_2936022936 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022936.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label89: {
            Label90: {
              var res_2936022938 = null;
              res_2936022938 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022938.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022938.reff = nimCopy(res_2936022938.reff, operator_2936022925, NTI2181038083);
            };
            add_2969567270(res_2936022936, res_2936022938);
            Label92: {
              var res_2936022941 = null;
              res_2936022941 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022941.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022936, res_2936022941);
            Label94: {
              var res_2936022943 = null;
              res_2936022943 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022943.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022936, res_2936022943);
          };
        };
      };
      var node_2936022980 = res_2936022936;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936022980, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "-":
      Label96: {
        var tmpHEX60gensym262_2936022988 = null;
        Label97: {
          var res_2936022994 = null;
          res_2936022994 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936022994.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label99: {
            Label100: {
              var res_2936022996 = null;
              res_2936022996 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022996.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936022996.reff = nimCopy(res_2936022996.reff, IdSub_2952790020, NTI2181038083);
            };
            add_2969567270(res_2936022994, res_2936022996);
            Label102: {
              var res_2936022999 = null;
              res_2936022999 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936022999.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022994, res_2936022999);
            Label104: {
              var res_2936023001 = null;
              res_2936023001 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023001.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936022994, res_2936023001);
          };
        };
      };
      var node_2936023038 = res_2936022994;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023038, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "*":
      Label106: {
        var tmpHEX60gensym275_2936023046 = null;
        Label107: {
          var res_2936023052 = null;
          res_2936023052 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023052.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label109: {
            Label110: {
              var res_2936023054 = null;
              res_2936023054 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023054.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023054.reff = nimCopy(res_2936023054.reff, IdMul_2952790021, NTI2181038083);
            };
            add_2969567270(res_2936023052, res_2936023054);
            Label112: {
              var res_2936023057 = null;
              res_2936023057 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023057.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023052, res_2936023057);
            Label114: {
              var res_2936023059 = null;
              res_2936023059 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023059.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023052, res_2936023059);
          };
        };
      };
      var node_2936023096 = res_2936023052;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023096, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "/":
      Label116: {
        var tmpHEX60gensym288_2936023104 = null;
        Label117: {
          var res_2936023110 = null;
          res_2936023110 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023110.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label119: {
            Label120: {
              var res_2936023112 = null;
              res_2936023112 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023112.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023112.reff = nimCopy(res_2936023112.reff, IdDiv_2952790022, NTI2181038083);
            };
            add_2969567270(res_2936023110, res_2936023112);
            Label122: {
              var res_2936023115 = null;
              res_2936023115 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023115.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023110, res_2936023115);
            Label124: {
              var res_2936023117 = null;
              res_2936023117 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023117.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023110, res_2936023117);
          };
        };
      };
      var node_2936023154 = res_2936023110;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023154, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "%":
      Label126: {
        var tmpHEX60gensym301_2936023162 = null;
        Label127: {
          var res_2936023168 = null;
          res_2936023168 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023168.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label129: {
            Label130: {
              var res_2936023170 = null;
              res_2936023170 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023170.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023170.reff = nimCopy(res_2936023170.reff, IdMod_2952790023, NTI2181038083);
            };
            add_2969567270(res_2936023168, res_2936023170);
            Label132: {
              var res_2936023173 = null;
              res_2936023173 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023173.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023168, res_2936023173);
            Label134: {
              var res_2936023175 = null;
              res_2936023175 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023175.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023168, res_2936023175);
          };
        };
      };
      var node_2936023212 = res_2936023168;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023212, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "\"":
      Label136: {
        var tmpHEX60gensym314_2936023220 = null;
        Label137: {
          var res_2936023226 = null;
          res_2936023226 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023226.kind = 3;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023226.text = nimCopy(null, [], NTI33554449);
        };
      };
      var node_2936023237 = res_2936023226;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023237, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "{":
      Label139: {
        var tmpHEX60gensym318_2936023245 = null;
        Label140: {
          var res_2936023251 = null;
          res_2936023251 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023251.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label142: {
            Label143: {
              var res_2936023253 = null;
              res_2936023253 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023253.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936023251, res_2936023253);
        };
      };
      var node_2936023272 = res_2936023251;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023272, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "=":
      Label145: {
        var tmpHEX60gensym325_2936023280 = null;
        Label146: {
          var res_2936023286 = null;
          res_2936023286 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023286.kind = 13;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label148: {
            Label149: {
              var res_2936023288 = null;
              res_2936023288 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023288.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023286, res_2936023288);
            Label151: {
              var res_2936023290 = null;
              res_2936023290 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023290.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023286, res_2936023290);
          };
        };
      };
      var node_2936023318 = res_2936023286;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023318, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "==":
      Label153: {
        var tmpHEX60gensym335_2936023326 = null;
        Label154: {
          var res_2936023332 = null;
          res_2936023332 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023332.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label156: {
            Label157: {
              var res_2936023334 = null;
              res_2936023334 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023334.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023334.reff = nimCopy(res_2936023334.reff, IdEqual_2952790035, NTI2181038083);
            };
            add_2969567270(res_2936023332, res_2936023334);
            Label159: {
              var res_2936023337 = null;
              res_2936023337 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023337.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023332, res_2936023337);
            Label161: {
              var res_2936023339 = null;
              res_2936023339 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023339.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023332, res_2936023339);
          };
        };
      };
      var node_2936023376 = res_2936023332;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023376, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "!=":
      Label163: {
        var tmpHEX60gensym348_2936023384 = null;
        Label164: {
          var res_2936023390 = null;
          res_2936023390 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023390.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label166: {
            Label167: {
              var res_2936023392 = null;
              res_2936023392 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023392.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023392.reff = nimCopy(res_2936023392.reff, IdNotEqual_2952790036, NTI2181038083);
            };
            add_2969567270(res_2936023390, res_2936023392);
            Label169: {
              var res_2936023395 = null;
              res_2936023395 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023395.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023390, res_2936023395);
            Label171: {
              var res_2936023397 = null;
              res_2936023397 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023397.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023390, res_2936023397);
          };
        };
      };
      var node_2936023434 = res_2936023390;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023434, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "<=":
      Label173: {
        var tmpHEX60gensym361_2936023442 = null;
        Label174: {
          var res_2936023448 = null;
          res_2936023448 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023448.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label176: {
            Label177: {
              var res_2936023450 = null;
              res_2936023450 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023450.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023450.reff = nimCopy(res_2936023450.reff, IdLessEqual_2952790032, NTI2181038083);
            };
            add_2969567270(res_2936023448, res_2936023450);
            Label179: {
              var res_2936023453 = null;
              res_2936023453 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023453.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023448, res_2936023453);
            Label181: {
              var res_2936023455 = null;
              res_2936023455 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023455.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023448, res_2936023455);
          };
        };
      };
      var node_2936023492 = res_2936023448;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023492, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case ">=":
      Label183: {
        var tmpHEX60gensym374_2936023500 = null;
        Label184: {
          var res_2936023506 = null;
          res_2936023506 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023506.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label186: {
            Label187: {
              var res_2936023508 = null;
              res_2936023508 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023508.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023508.reff = nimCopy(res_2936023508.reff, IdGreaterEqual_2952790034, NTI2181038083);
            };
            add_2969567270(res_2936023506, res_2936023508);
            Label189: {
              var res_2936023511 = null;
              res_2936023511 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023511.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023506, res_2936023511);
            Label191: {
              var res_2936023513 = null;
              res_2936023513 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023513.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023506, res_2936023513);
          };
        };
      };
      var node_2936023550 = res_2936023506;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023550, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "<":
      Label193: {
        var tmpHEX60gensym387_2936023558 = null;
        Label194: {
          var res_2936023564 = null;
          res_2936023564 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023564.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label196: {
            Label197: {
              var res_2936023566 = null;
              res_2936023566 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023566.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023566.reff = nimCopy(res_2936023566.reff, IdLess_2952790031, NTI2181038083);
            };
            add_2969567270(res_2936023564, res_2936023566);
            Label199: {
              var res_2936023569 = null;
              res_2936023569 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023569.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023564, res_2936023569);
            Label201: {
              var res_2936023571 = null;
              res_2936023571 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023571.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023564, res_2936023571);
          };
        };
      };
      var node_2936023608 = res_2936023564;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023608, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case ">":
      Label203: {
        var tmpHEX60gensym400_2936023616 = null;
        Label204: {
          var res_2936023622 = null;
          res_2936023622 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023622.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label206: {
            Label207: {
              var res_2936023624 = null;
              res_2936023624 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023624.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023624.reff = nimCopy(res_2936023624.reff, IdGreater_2952790033, NTI2181038083);
            };
            add_2969567270(res_2936023622, res_2936023624);
            Label209: {
              var res_2936023627 = null;
              res_2936023627 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023627.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023622, res_2936023627);
            Label211: {
              var res_2936023629 = null;
              res_2936023629 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023629.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023622, res_2936023629);
          };
        };
      };
      var node_2936023666 = res_2936023622;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023666, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "<>":
      Label213: {
        var tmpHEX60gensym413_2936023674 = null;
        Label214: {
          var res_2936023680 = null;
          res_2936023680 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023680.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label216: {
            Label217: {
              var res_2936023682 = null;
              res_2936023682 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023682.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023682.reff = nimCopy(res_2936023682.reff, IdOrder_2952790039, NTI2181038083);
            };
            add_2969567270(res_2936023680, res_2936023682);
            Label219: {
              var res_2936023685 = null;
              res_2936023685 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023685.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023680, res_2936023685);
            Label221: {
              var res_2936023687 = null;
              res_2936023687 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023687.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023680, res_2936023687);
          };
        };
      };
      var node_2936023724 = res_2936023680;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023724, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "and":
      Label223: {
        var tmpHEX60gensym426_2936023732 = null;
        Label224: {
          var res_2936023738 = null;
          res_2936023738 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023738.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label226: {
            Label227: {
              var res_2936023740 = null;
              res_2936023740 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023740.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023740.reff = nimCopy(res_2936023740.reff, IdAnd_2952790037, NTI2181038083);
            };
            add_2969567270(res_2936023738, res_2936023740);
            Label229: {
              var res_2936023743 = null;
              res_2936023743 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023743.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023738, res_2936023743);
            Label231: {
              var res_2936023745 = null;
              res_2936023745 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023745.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023738, res_2936023745);
          };
        };
      };
      var node_2936023782 = res_2936023738;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023782, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case "or":
      Label233: {
        var tmpHEX60gensym439_2936023790 = null;
        Label234: {
          var res_2936023796 = null;
          res_2936023796 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023796.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label236: {
            Label237: {
              var res_2936023798 = null;
              res_2936023798 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023798.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              res_2936023798.reff = nimCopy(res_2936023798.reff, IdOr_2952790038, NTI2181038083);
            };
            add_2969567270(res_2936023796, res_2936023798);
            Label239: {
              var res_2936023801 = null;
              res_2936023801 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023801.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023796, res_2936023801);
            Label241: {
              var res_2936023803 = null;
              res_2936023803 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023803.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023796, res_2936023803);
          };
        };
      };
      var node_2936023840 = res_2936023796;
      result_2936022321 = nimCopy(result_2936022321, some_2936022351({Field0: node_2936023840, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    default: 
      result_2936022321 = nimCopy(result_2936022321, none_2936022852(), NTI2936018205);
      break BeforeRet;
      break;
    }
  };

  return result_2936022321;

}

function isSome_2936026036(self_2936026038) {
  var result_2936026039 = false;

    result_2936026039 = self_2936026038.has;

  return result_2936026039;

}

function isNone_2936026061(self_2936026063) {
  var result_2936026064 = false;

    result_2936026064 = !(self_2936026063.has);

  return result_2936026064;

}

function get_2936026053(self_2936026055) {
  var result_2936026056 = {Field0: null, Field1: 0};

    if (isNone_2936026061(self_2936026055)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2936026056 = self_2936026055.val;

  return result_2936026056;

}

function insertNode_2936019720(document_2936019721, node_2936019722, index_2936019723, newNode_2936019724) {
  var result_2936022083 = ({val: null});

  BeforeRet: {
    var node_2936022084 = node_2936019722;
    var index_2936022085 = index_2936019723;
    if ((node_2936022084 == null)) {
    node_2936022084 = document_2936019721.rootNode;
    index_2936022085 = 0;
    }
    
    document_2936019721.undoOps.push({kind: 2, parent: node_2936022084, idx: index_2936022085, node: newNode_2936019724, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: []});;
    document_2936019721.redoOps = nimCopy(null, [], NTI2936017906);
    insert_2969567286(node_2936022084, newNode_2936019724, index_2936022085);
    handleNodeInserted_2936018151(document_2936019721, newNode_2936019724);
    result_2936022083 = nimCopy(result_2936022083, some_2969567458(newNode_2936019724), NTI2969567351);
    break BeforeRet;
  };

  return result_2936022083;

}

function shouldEditNode_2936024190(doc_2936024191, node_2936024192) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
    var Temporary4;
    var Temporary5;
    var Temporary6;

  var result_2936024193 = false;

  BeforeRet: {
    if (((node_2936024192.kind == 0) && eqStrings(node_2936024192.text, []))) {
    result_2936024193 = true;
    break BeforeRet;
    }
    
    if (((node_2936024192.kind == 2) && eqStrings(node_2936024192.text, []))) {
    result_2936024193 = true;
    break BeforeRet;
    }
    
    if ((node_2936024192.kind == 4)) {
    var oHEX60gensym522_2936024208 = computeSymbol_2986424064(ctx_2936012853, node_2936024192, true);
    if (!isSome_3070232117(oHEX60gensym522_2936024208)) Temporary2 = false; else {      var symbol_2936024231 = get_3070232137(oHEX60gensym522_2936024208);
      Temporary2 = true;    }    if (!Temporary2) Temporary1 = false; else {      Temporary1 = eqStrings(symbol_2936024231.name, []);    }    result_2936024193 = Temporary1;
    break BeforeRet;
    }
    
    if ((node_2936024192.kind == 5)) {
    var oHEX60gensym523_2936024238 = computeSymbol_2986424064(ctx_2936012853, node_2936024192, true);
    if (!isSome_3070232117(oHEX60gensym523_2936024238)) Temporary4 = false; else {      var symbol_2936024261 = get_3070232137(oHEX60gensym523_2936024238);
      Temporary4 = true;    }    if (!Temporary4) Temporary3 = false; else {      Temporary3 = eqStrings(symbol_2936024261.name, []);    }    result_2936024193 = Temporary3;
    break BeforeRet;
    }
    
    if ((node_2936024192.kind == 6)) {
    var oHEX60gensym524_2936024268 = computeSymbol_2986424064(ctx_2936012853, node_2936024192, true);
    if (!isSome_3070232117(oHEX60gensym524_2936024268)) Temporary6 = false; else {      var symbol_2936024291 = get_3070232137(oHEX60gensym524_2936024268);
      Temporary6 = true;    }    if (!Temporary6) Temporary5 = false; else {      Temporary5 = eqStrings(symbol_2936024291.name, []);    }    result_2936024193 = Temporary5;
    break BeforeRet;
    }
    
    result_2936024193 = false;
    break BeforeRet;
  };

  return result_2936024193;

}

function formatValue_2936021015(result_2936021017, result_2936021017_Idx, value_2936021018, specifier_2936021019) {
    formatValue_721420459(result_2936021017, result_2936021017_Idx, reprEnum(value_2936021018, NTI3070230537), specifier_2936021019);

  
}

function nsuSplitLines(s_855638695, keepEol_855638696) {
            var Temporary6;

  var result_855638697 = [];

    result_855638697 = nimCopy(null, [], NTI855638541);
    Label1: {
      var xHEX60gensym75_855638703 = [];
      var first_2936026362 = 0;
      var last_2936026363 = 0;
      var eolpos_2936026364 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2936026363 < (s_855638695).length) && !((ConstSet187[s_855638695[chckIndx(last_2936026363, 0, (s_855638695).length - 1)]] != undefined)))) break Label5;
                  last_2936026363 = addInt(last_2936026363, 1);
                }
            };
            eolpos_2936026364 = last_2936026363;
            if ((last_2936026363 < (s_855638695).length)) {
            if ((s_855638695[chckIndx(last_2936026363, 0, (s_855638695).length - 1)] == 10)) {
            last_2936026363 = addInt(last_2936026363, 1);
            }
            else {
            if ((s_855638695[chckIndx(last_2936026363, 0, (s_855638695).length - 1)] == 13)) {
            last_2936026363 = addInt(last_2936026363, 1);
            if (((last_2936026363 < (s_855638695).length) && (s_855638695[chckIndx(last_2936026363, 0, (s_855638695).length - 1)] == 10))) {
            last_2936026363 = addInt(last_2936026363, 1);
            }
            
            }
            }
            }
            
            if (keepEol_855638696) {
            Temporary6 = subInt(last_2936026363, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2936026364, 1);
            }
            
            xHEX60gensym75_855638703 = substr_33557821(s_855638695, first_2936026362, Temporary6);
            var Temporary7 = nimCopy(null, xHEX60gensym75_855638703, NTI33554449);
            result_855638697.push(Temporary7);;
            if ((eolpos_2936026364 == last_2936026363)) {
            break Label2;
            }
            
            first_2936026362 = last_2936026363;
          }
      };
    };

  return result_855638697;

}

function contentHEX3D_2801795987(self_2801795988, value_2801795989) {
    if (self_2801795988.singleLine) {
    self_2801795988.lines = nimCopy(null, [nsuReplaceStr(value_2801795989, [10], [])], NTI1560281203);
    if (((self_2801795988.lines).length == 0)) {
    self_2801795988.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    if (!((self_2801795988.tsParser == null))) {
    self_2801795988.currentTree = parseString_2868903995(self_2801795988.tsParser, self_2801795988.lines[chckIndx(0, 0, (self_2801795988.lines).length - 1)], none_2868904002());
    }
    
    }
    else {
      self_2801795988.lines = nimCopy(null, nsuSplitLines(value_2801795989, false), NTI855638530);
      if (((self_2801795988.lines).length == 0)) {
      self_2801795988.lines = nimCopy(null, [[]], NTI1560281203);
      }
      
      if (!((self_2801795988.tsParser == null))) {
      self_2801795988.currentTree = parseString_2868903995(self_2801795988.tsParser, value_2801795989, none_2868904002());
      }
      
    }
    
    self_2801795988.version = addInt(self_2801795988.version, 1);
    invoke_2801796041(self_2801795988.textChanged, self_2801795988);

  
}

function newTextDocument_3154117191(filename_3154117193, content_3154117194) {
  var result_3154117195 = null;

    result_3154117195 = ({m_type: NTI2801795207, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0});
    var self_3154117199 = result_3154117195;
    self_3154117199.filename = nimCopy(null, filename_3154117193, NTI33554449);
    self_3154117199.currentTree = null;
    var _ = initTreesitter_2801798801(self_3154117199);
    var language_3154117200 = getLanguageForFile_2885681156(filename_3154117193);
    if (isSome_2768240699(language_3154117200)) {
    self_3154117199.languageId = nimCopy(null, get_2801798838(language_3154117200), NTI33554449);
    }
    
    contentHEX3D_2801795987(self_3154117199, content_3154117194);

  return result_3154117195;

}

function newSeq_503316959(len_503316961) {
  var result_503316962 = [];

    result_503316962 = new Array(len_503316961); for (var i = 0 ; i < len_503316961 ; ++i) { result_503316962[i] = []; }
  return result_503316962;

}

function contentHEX3D_2801796097(self_2801796098, value_2801796099) {
    if (self_2801796098.singleLine) {
    self_2801796098.lines = nimCopy(null, [nsuJoinSep(value_2801796099, [])], NTI1560281203);
    }
    else {
      Label1: {
        var iHEX60gensym21_2801796161 = 0;
        var resultHEX60gensym21_2801796168 = newSeq_503316959(chckRange((value_2801796099).length, 0, 2147483647));
        Label2: {
          var itHEX60gensym21_2801796172 = [];
          var i_2936026369 = 0;
          var L_2936026370 = (value_2801796099).length;
          Label3: {
              Label4: while (true) {
              if (!(i_2936026369 < L_2936026370)) break Label4;
                itHEX60gensym21_2801796172 = value_2801796099[chckIndx(i_2936026369, 0, (value_2801796099).length - 1)];
                resultHEX60gensym21_2801796168[chckIndx(iHEX60gensym21_2801796161, 0, (resultHEX60gensym21_2801796168).length - 1)] = nimCopy(null, itHEX60gensym21_2801796172, NTI33554449);
                iHEX60gensym21_2801796161 = addInt(iHEX60gensym21_2801796161, 1);
                i_2936026369 = addInt(i_2936026369, 1);
                if (!(((value_2801796099).length == L_2936026370))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
      };
      self_2801796098.lines = nimCopy(null, resultHEX60gensym21_2801796168, NTI503316776);
    }
    
    if (((self_2801796098.lines).length == 0)) {
    self_2801796098.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var strValue_2801796184 = nsuJoinSep(value_2801796099, [10]);
    if (!((self_2801796098.tsParser == null))) {
    self_2801796098.currentTree = parseString_2868903995(self_2801796098.tsParser, strValue_2801796184, none_2868904002());
    }
    
    self_2801796098.version = addInt(self_2801796098.version, 1);
    invoke_2801796041(self_2801796098.textChanged, self_2801796098);

  
}

function createTextEditorInstance_2801811296() {
  var result_2801811297 = null;

  BeforeRet: {
    var editor_2801811302 = {eventHandler: null, selectionsInternal: [nimCopy(null, toSelection_2231370221({Field0: 0, Field1: 0}), NTI2231369739)], m_type: NTI2801795279, editor: null, document: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2801811302 = createWithPrototype(editor_text_prototype, editor_2801811302);
    result_2801811297 = editor_2801811302;
    break BeforeRet;
  };

  return result_2801811297;

}

function newEditorId_2231370043() {
  var result_2231370044 = 0;

    result_2231370044 = nextEditorId_2231370042[0];
    nextEditorId_2231370042[0] = addInt(nextEditorId_2231370042[0], 1);

  return result_2231370044;

}

function init_2147483681(self_2147483682) {
    self_2147483682.id = newEditorId_2231370043();
    self_2147483682.renderHeader = true;
    self_2147483682.fillAvailableSpace = true;

  
}

function subscribe_2801811360(event_2801811362, callback_2801811364) {
  var result_2801811365 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_2801811365 = nimCopy(result_2801811365, newId_2181038297(), NTI2181038083);
    event_2801811362.handlers.push({Field0: nimCopy(null, result_2801811365, NTI2181038083), Field1: callback_2801811364});;

  return result_2801811365;

}

function clampSelection_2801795985(self_2801795986) {
    selectionsHEX3D_2801795824(self_2801795986, clampAndMergeSelections_2801795561(self_2801795986, self_2801795986.selectionsInternal));
    markDirty_2147483686(self_2801795986);

  
}

function handleTextDocumentTextChanged_2801811294(self_2801811295) {
    clampSelection_2801795985(self_2801811295);
    updateSearchResults_2801800117(self_2801811295);
    markDirty_2147483686(self_2801811295);

  
}

function newTextEditor_2801811312(document_2801811313, ed_2801811314) {
    
function HEX3Aanonymous_2801811335(__2801811336) {
        handleTextDocumentTextChanged_2801811294(editor_2801811316);

      
    }

  var result_2801811315 = null;

  BeforeRet: {
    var editor_2801811316 = createTextEditorInstance_2801811296();
    editor_2801811316.document = document_2801811313;
    init_2147483681(editor_2801811316);
    if (((editor_2801811316.document.lines).length == 0)) {
    editor_2801811316.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    injectDependencies_1291847744(editor_2801811316, ed_2801811314);
    var _ = subscribe_2801811360(document_2801811313.textChanged, HEX3Aanonymous_2801811335);
    result_2801811315 = editor_2801811316;
    break BeforeRet;
  };

  return result_2801811315;

}

function some_3154117232(val_3154117234) {
  var result_3154117235 = ({val: 0, has: false});

    result_3154117235.has = true;
    result_3154117235.val = val_3154117234;

  return result_3154117235;

}

function handleTextDocumentChanged_2936020998(self_2936020999) {
    updateCompletions_2936015467(self_2936020999);

  
}

function editSymbol_2936021007(self_2936021008, symbol_2936021009) {
    var Temporary1;
    
function HEX3Aanonymous_2936021064(doc_2936021065) {
        handleTextDocumentChanged_2936020998(self_2936021008);

      
    }

    var fmtRes_2936021014 = [mnewString(0)];
    fmtRes_2936021014[0].push.apply(fmtRes_2936021014[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32]);;
    formatValue_721420459(fmtRes_2936021014, 0, symbol_2936021009.name, []);
    fmtRes_2936021014[0].push.apply(fmtRes_2936021014[0], [32,40]);;
    formatValue_2936021015(fmtRes_2936021014, 0, symbol_2936021009.kind, []);
    fmtRes_2936021014[0].push.apply(fmtRes_2936021014[0], [44,32]);;
    formatValue_3003121884(fmtRes_2936021014, 0, symbol_2936021009.id, []);
    fmtRes_2936021014[0].push.apply(fmtRes_2936021014[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936021014[0], NTI33554449)]);
    if ((symbol_2936021009.kind == 0)) {
    var fmtRes_2936021036 = [mnewString(0)];
    fmtRes_2936021036[0].push.apply(fmtRes_2936021036[0], [69,100,105,116,105,110,103,32,115,121,109,98,111,108,32,110,111,100,101,32]);;
    var Temporary1 = symbol_2936021009;
    if (ConstSet186[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI3070230537)); }
    formatValue_3070231363(fmtRes_2936021036, 0, Temporary1.node, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936021036[0], NTI33554449)]);
    }
    
    self_2936021008.currentlyEditedNode = null;
    self_2936021008.currentlyEditedSymbol = nimCopy(self_2936021008.currentlyEditedSymbol, symbol_2936021009.id, NTI2181038083);
    self_2936021008.textDocument = newTextDocument_3154117191([], []);
    contentHEX3D_2801796097(self_2936021008.textDocument, [nimCopy(null, symbol_2936021009.name, NTI33554449)]);
    self_2936021008.textEditor = newTextEditor_2801811312(self_2936021008.textDocument, self_2936021008.editor);
    setMode_2801803857(self_2936021008.textEditor, [105,110,115,101,114,116]);
    self_2936021008.textEditor.renderHeader = false;
    self_2936021008.textEditor.fillAvailableSpace = false;
    self_2936021008.textEditor.lineNumbers = nimCopy(self_2936021008.textEditor.lineNumbers, some_3154117232(0), NTI2801795323);
    var _ = subscribe_2801811360(self_2936021008.textDocument.textChanged, HEX3Aanonymous_2936021064);
    updateCompletions_2936015467(self_2936021008);

  
}

function editNode_2936021094(self_2936021095, node_2936021096) {
    
function HEX3Aanonymous_2936021125(doc_2936021126) {
        handleTextDocumentChanged_2936020998(self_2936021095);

      
    }

    var fmtRes_2936021101 = [mnewString(0)];
    fmtRes_2936021101[0].push.apply(fmtRes_2936021101[0], [69,100,105,116,105,110,103,32,110,111,100,101,32]);;
    formatValue_3070231363(fmtRes_2936021101, 0, node_2936021096, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936021101[0], NTI33554449)]);
    self_2936021095.currentlyEditedNode = node_2936021096;
    self_2936021095.currentlyEditedSymbol = nimCopy(self_2936021095.currentlyEditedSymbol, null_2181038340, NTI2181038083);
    self_2936021095.textDocument = newTextDocument_3154117191([], []);
    contentHEX3D_2801796097(self_2936021095.textDocument, nsuSplitLines(node_2936021096.text, false));
    self_2936021095.textEditor = newTextEditor_2801811312(self_2936021095.textDocument, self_2936021095.editor);
    setMode_2801803857(self_2936021095.textEditor, [105,110,115,101,114,116]);
    self_2936021095.textEditor.renderHeader = false;
    self_2936021095.textEditor.fillAvailableSpace = false;
    self_2936021095.textEditor.lineNumbers = nimCopy(self_2936021095.textEditor.lineNumbers, some_3154117232(0), NTI2801795323);
    var _ = subscribe_2801811360(self_2936021095.textDocument.textChanged, HEX3Aanonymous_2936021125);
    updateCompletions_2936015467(self_2936021095);

  
}

function tryEdit_2936021155(self_2936021156, node_2936021157) {
      var Temporary1;
      var Temporary2;

  var result_2936021158 = false;

  BeforeRet: {
      var oHEX60gensym119_2936021161 = getSymbol_2986407235(ctx_2936012853, node_2936021157.id);
      if (!isSome_3070232117(oHEX60gensym119_2936021161)) Temporary1 = false; else {        var sym_2936021184 = get_3070232137(oHEX60gensym119_2936021161);
        Temporary1 = true;      }    if (Temporary1) {
    editSymbol_2936021007(self_2936021156, sym_2936021184);
    result_2936021158 = true;
    break BeforeRet;
    }
    else {
      var oHEX60gensym120_2936021187 = getSymbol_2986407235(ctx_2936012853, node_2936021157.reff);
      if (!isSome_3070232117(oHEX60gensym120_2936021187)) Temporary2 = false; else {        var sym_2936021210 = get_3070232137(oHEX60gensym120_2936021187);
        Temporary2 = true;      }    if (Temporary2) {
    editSymbol_2936021007(self_2936021156, sym_2936021210);
    result_2936021158 = true;
    break BeforeRet;
    }
    else {
      switch (node_2936021157.kind) {
      case 0:
      case 2:
      case 3:
        editNode_2936021094(self_2936021156, node_2936021157);
        result_2936021158 = true;
        break BeforeRet;
        break;
      default: 
        result_2936021158 = false;
        break BeforeRet;
        break;
      }
    }
    }
  };

  return result_2936021158;

}

function insertAfterSmart_2936026023(self_2936026024, nodeTemplate_2936026025) {
      var Temporary2;
      var Temporary5;
      var Temporary6;
      
function HEX3Aanonymous_2936026105(n_2936026108) {
        var result_2936026111 = false;

          result_2936026111 = shouldEditNode_2936024190(self_2936026024.document, n_2936026108);

        return result_2936026111;

      }
                var Temporary12;
                var Temporary13;

  BeforeRet: {
    if (isEditing_2936021000(self_2936026024)) {
    break BeforeRet;
    }
    
    var node_2936026026 = node_2936015479(self_2936026024);
    Label1: {
      var next_2936026027 = null;
      if (true) {
      Temporary2 = node_2936026026;
      }
      else {
      Temporary2 = node_2936026026.parent;
      }
      
      var node_2936026194 = Temporary2;
      Label3: {
          Label4: while (true) {
          if (!!((node_2936026194 == null))) break Label4;
            next_2936026027 = node_2936026194;
            if (canInsertInto_2936024604(self_2936026024, next_2936026027.parent)) {
            node_2936026026 = next_2936026027;
            break Label1;
            }
            
            node_2936026194 = node_2936026194.parent;
          }
      };
    };
    var index_2936026028 = index_2969567340(node_2936026026);
      var oHEX60gensym673_2936026031 = createNodeFromAction_2936022311(self_2936026024, nodeTemplate_2936026025, node_2936026026, errorType_3070230904());
      if (!isSome_2936026036(oHEX60gensym673_2936026031)) Temporary5 = false; else {        var newNodeIndex_2936026076 = nimCopy(null, get_2936026053(oHEX60gensym673_2936026031), NTI2936018200);
        Temporary5 = true;      }    if (Temporary5) {
    var newNode_2936026077 = newNodeIndex_2936026076["Field0"];
    var __2936026078 = newNodeIndex_2936026076["Field1"];
      var oHEX60gensym675_2936026081 = insertNode_2936019720(self_2936026024.document, node_2936026026.parent, addInt(index_2936026028, 1), newNode_2936026077);
      if (!isSome_2969569114(oHEX60gensym675_2936026081)) Temporary6 = false; else {        var node_2936026104 = get_2969569134(oHEX60gensym675_2936026081);
        Temporary6 = true;      }    if (Temporary6) {
    nodeHEX3D_2936017358(self_2936026024, node_2936026104);
    Label7: {
      var __2936026112 = 0;
      var emptyNode_2936026113 = null;
      var colontmp__2936026197 = null;
      colontmp__2936026197 = HEX3Aanonymous_2936026105;
      var i_2936026205 = 0;
      Label8: {
        var __2936026207 = 0;
        var child_2936026208 = null;
        var n_2936026209 = newNode_2936026077;
        var idx_2936026210 = -1;
        var i_2936026211 = 0;
        Label9: {
            Label10: while (true) {
            if (!true) break Label10;
              try {
              if ((idx_2936026210 == -1)) {
              __2936026207 = i_2936026211;
              child_2936026208 = n_2936026209;
              if (colontmp__2936026197(child_2936026208)) {
              __2936026112 = i_2936026205;
              emptyNode_2936026113 = child_2936026208;
              nodeHEX3D_2936017358(self_2936026024, emptyNode_2936026113);
              var _ = tryEdit_2936021155(self_2936026024, node_2936015479(self_2936026024));
              break Label7;
              i_2936026205 = addInt(i_2936026205, 1);
              }
              
              }
              
              if ((addInt(idx_2936026210, 1) < len_2969567320(n_2936026209))) {
              n_2936026209 = HEX5BHEX5D_2969567316(n_2936026209, addInt(idx_2936026210, 1));
              idx_2936026210 = -1;
              }
              else {
                var oHEX60gensym74_2936026213 = next_2969567425(n_2936026209);
                if (!isSome_2969569114(oHEX60gensym74_2936026213)) Temporary13 = false; else {                  var ne_2936026214 = get_2969569134(oHEX60gensym74_2936026213);
                  Temporary13 = true;                }                if (!Temporary13) Temporary12 = false; else {                  Temporary12 = !((n_2936026209 == newNode_2936026077));                }              if (Temporary12) {
              n_2936026209 = ne_2936026214;
              idx_2936026210 = -1;
              }
              else {
              if (((!((n_2936026209.parent == null)) && !((n_2936026209 == newNode_2936026077))) && !((n_2936026209.parent == newNode_2936026077)))) {
              idx_2936026210 = index_2969567340(n_2936026209);
              n_2936026209 = n_2936026209.parent;
              }
              else {
                break Label9;
              }
              }}
              } finally {
              i_2936026211 = addInt(i_2936026211, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936026118 = [mnewString(0)];
      fmtRes_2936026118[0].push.apply(fmtRes_2936026118[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936026118, 0, newNode_2936026077, []);
      fmtRes_2936026118[0].push.apply(fmtRes_2936026118[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936026118, 0, node_2936015479(self_2936026024).parent, []);
      fmtRes_2936026118[0].push.apply(fmtRes_2936026118[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2936026118, 0, addInt(index_2936026028, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936026118[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterSmartJsWrapper_2936026019(self_2936026171, nodeTemplate_2936026172) {
    insertAfterSmart_2936026023(self_2936026171, nodeTemplate_2936026172);

  
}
editor_ast_prototype.insertAfterSmart = function(nodeTemplate_ /* : string */) { return (insertAfterSmartJsWrapper_2936026019(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertAfter_2936026378(self_2936026379, nodeTemplate_2936026380) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2936026437(n_2936026440) {
        var result_2936026443 = false;

          result_2936026443 = shouldEditNode_2936024190(self_2936026379.document, n_2936026440);

        return result_2936026443;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936021000(self_2936026379)) {
    break BeforeRet;
    }
    
    var node_2936026381 = node_2936015479(self_2936026379);
    var index_2936026382 = index_2969567340(node_2936026381);
      var oHEX60gensym686_2936026385 = createNodeFromAction_2936022311(self_2936026379, nodeTemplate_2936026380, node_2936026381, errorType_3070230904());
      if (!isSome_2936026036(oHEX60gensym686_2936026385)) Temporary1 = false; else {        var newNodeIndex_2936026408 = nimCopy(null, get_2936026053(oHEX60gensym686_2936026385), NTI2936018200);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936026409 = newNodeIndex_2936026408["Field0"];
    var __2936026410 = newNodeIndex_2936026408["Field1"];
      var oHEX60gensym687_2936026413 = insertNode_2936019720(self_2936026379.document, node_2936026381.parent, addInt(index_2936026382, 1), newNode_2936026409);
      if (!isSome_2969569114(oHEX60gensym687_2936026413)) Temporary2 = false; else {        var node_2936026436 = get_2969569134(oHEX60gensym687_2936026413);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2936017358(self_2936026379, node_2936026436);
    Label3: {
      var __2936026444 = 0;
      var emptyNode_2936026445 = null;
      var colontmp__2936026516 = null;
      colontmp__2936026516 = HEX3Aanonymous_2936026437;
      var i_2936026517 = 0;
      Label4: {
        var __2936026519 = 0;
        var child_2936026520 = null;
        var n_2936026521 = newNode_2936026409;
        var idx_2936026522 = -1;
        var i_2936026523 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936026522 == -1)) {
              __2936026519 = i_2936026523;
              child_2936026520 = n_2936026521;
              if (colontmp__2936026516(child_2936026520)) {
              __2936026444 = i_2936026517;
              emptyNode_2936026445 = child_2936026520;
              nodeHEX3D_2936017358(self_2936026379, emptyNode_2936026445);
              var _ = tryEdit_2936021155(self_2936026379, node_2936015479(self_2936026379));
              break Label3;
              i_2936026517 = addInt(i_2936026517, 1);
              }
              
              }
              
              if ((addInt(idx_2936026522, 1) < len_2969567320(n_2936026521))) {
              n_2936026521 = HEX5BHEX5D_2969567316(n_2936026521, addInt(idx_2936026522, 1));
              idx_2936026522 = -1;
              }
              else {
                var oHEX60gensym74_2936026525 = next_2969567425(n_2936026521);
                if (!isSome_2969569114(oHEX60gensym74_2936026525)) Temporary9 = false; else {                  var ne_2936026526 = get_2969569134(oHEX60gensym74_2936026525);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936026521 == newNode_2936026409));                }              if (Temporary8) {
              n_2936026521 = ne_2936026526;
              idx_2936026522 = -1;
              }
              else {
              if (((!((n_2936026521.parent == null)) && !((n_2936026521 == newNode_2936026409))) && !((n_2936026521.parent == newNode_2936026409)))) {
              idx_2936026522 = index_2969567340(n_2936026521);
              n_2936026521 = n_2936026521.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936026523 = addInt(i_2936026523, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936026450 = [mnewString(0)];
      fmtRes_2936026450[0].push.apply(fmtRes_2936026450[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936026450, 0, newNode_2936026409, []);
      fmtRes_2936026450[0].push.apply(fmtRes_2936026450[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936026450, 0, node_2936015479(self_2936026379).parent, []);
      fmtRes_2936026450[0].push.apply(fmtRes_2936026450[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2936026450, 0, addInt(index_2936026382, 1), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936026450[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertAfterJsWrapper_2936026374(self_2936026494, nodeTemplate_2936026495) {
    insertAfter_2936026378(self_2936026494, nodeTemplate_2936026495);

  
}
editor_ast_prototype.insertAfter = function(nodeTemplate_ /* : string */) { return (insertAfterJsWrapper_2936026374(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertBefore_2936026533(self_2936026534, nodeTemplate_2936026535) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2936026591(n_2936026594) {
        var result_2936026597 = false;

          result_2936026597 = shouldEditNode_2936024190(self_2936026534.document, n_2936026594);

        return result_2936026597;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936021000(self_2936026534)) {
    break BeforeRet;
    }
    
    var index_2936026536 = index_2969567340(node_2936015479(self_2936026534));
      var oHEX60gensym698_2936026539 = createNodeFromAction_2936022311(self_2936026534, nodeTemplate_2936026535, node_2936015479(self_2936026534), errorType_3070230904());
      if (!isSome_2936026036(oHEX60gensym698_2936026539)) Temporary1 = false; else {        var newNodeIndex_2936026562 = nimCopy(null, get_2936026053(oHEX60gensym698_2936026539), NTI2936018200);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936026563 = newNodeIndex_2936026562["Field0"];
    var __2936026564 = newNodeIndex_2936026562["Field1"];
      var oHEX60gensym699_2936026567 = insertNode_2936019720(self_2936026534.document, node_2936015479(self_2936026534).parent, index_2936026536, newNode_2936026563);
      if (!isSome_2969569114(oHEX60gensym699_2936026567)) Temporary2 = false; else {        var node_2936026590 = get_2969569134(oHEX60gensym699_2936026567);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2936017358(self_2936026534, node_2936026590);
    Label3: {
      var __2936026598 = 0;
      var emptyNode_2936026599 = null;
      var colontmp__2936026670 = null;
      colontmp__2936026670 = HEX3Aanonymous_2936026591;
      var i_2936026671 = 0;
      Label4: {
        var __2936026673 = 0;
        var child_2936026674 = null;
        var n_2936026675 = newNode_2936026563;
        var idx_2936026676 = -1;
        var i_2936026677 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936026676 == -1)) {
              __2936026673 = i_2936026677;
              child_2936026674 = n_2936026675;
              if (colontmp__2936026670(child_2936026674)) {
              __2936026598 = i_2936026671;
              emptyNode_2936026599 = child_2936026674;
              nodeHEX3D_2936017358(self_2936026534, emptyNode_2936026599);
              var _ = tryEdit_2936021155(self_2936026534, node_2936015479(self_2936026534));
              break Label3;
              i_2936026671 = addInt(i_2936026671, 1);
              }
              
              }
              
              if ((addInt(idx_2936026676, 1) < len_2969567320(n_2936026675))) {
              n_2936026675 = HEX5BHEX5D_2969567316(n_2936026675, addInt(idx_2936026676, 1));
              idx_2936026676 = -1;
              }
              else {
                var oHEX60gensym74_2936026679 = next_2969567425(n_2936026675);
                if (!isSome_2969569114(oHEX60gensym74_2936026679)) Temporary9 = false; else {                  var ne_2936026680 = get_2969569134(oHEX60gensym74_2936026679);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936026675 == newNode_2936026563));                }              if (Temporary8) {
              n_2936026675 = ne_2936026680;
              idx_2936026676 = -1;
              }
              else {
              if (((!((n_2936026675.parent == null)) && !((n_2936026675 == newNode_2936026563))) && !((n_2936026675.parent == newNode_2936026563)))) {
              idx_2936026676 = index_2969567340(n_2936026675);
              n_2936026675 = n_2936026675.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936026677 = addInt(i_2936026677, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936026604 = [mnewString(0)];
      fmtRes_2936026604[0].push.apply(fmtRes_2936026604[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936026604, 0, newNode_2936026563, []);
      fmtRes_2936026604[0].push.apply(fmtRes_2936026604[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936026604, 0, node_2936015479(self_2936026534).parent, []);
      fmtRes_2936026604[0].push.apply(fmtRes_2936026604[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2936026604, 0, index_2936026536, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936026604[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertBeforeJsWrapper_2936026529(self_2936026648, nodeTemplate_2936026649) {
    insertBefore_2936026533(self_2936026648, nodeTemplate_2936026649);

  
}
editor_ast_prototype.insertBefore = function(nodeTemplate_ /* : string */) { return (insertBeforeJsWrapper_2936026529(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function insertChild_2936026687(self_2936026688, nodeTemplate_2936026689) {
      var Temporary1;
      var Temporary2;
      
function HEX3Aanonymous_2936026744(n_2936026747) {
        var result_2936026750 = false;

          result_2936026750 = shouldEditNode_2936024190(self_2936026688.document, n_2936026747);

        return result_2936026750;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936021000(self_2936026688)) {
    break BeforeRet;
    }
    
      var oHEX60gensym710_2936026692 = createNodeFromAction_2936022311(self_2936026688, nodeTemplate_2936026689, node_2936015479(self_2936026688), errorType_3070230904());
      if (!isSome_2936026036(oHEX60gensym710_2936026692)) Temporary1 = false; else {        var newNodeIndex_2936026715 = nimCopy(null, get_2936026053(oHEX60gensym710_2936026692), NTI2936018200);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936026716 = newNodeIndex_2936026715["Field0"];
    var __2936026717 = newNodeIndex_2936026715["Field1"];
      var oHEX60gensym711_2936026720 = insertNode_2936019720(self_2936026688.document, node_2936015479(self_2936026688), len_2969567320(node_2936015479(self_2936026688)), newNode_2936026716);
      if (!isSome_2969569114(oHEX60gensym711_2936026720)) Temporary2 = false; else {        var node_2936026743 = get_2969569134(oHEX60gensym711_2936026720);
        Temporary2 = true;      }    if (Temporary2) {
    nodeHEX3D_2936017358(self_2936026688, node_2936026743);
    Label3: {
      var __2936026751 = 0;
      var emptyNode_2936026752 = null;
      var colontmp__2936026823 = null;
      colontmp__2936026823 = HEX3Aanonymous_2936026744;
      var i_2936026824 = 0;
      Label4: {
        var __2936026826 = 0;
        var child_2936026827 = null;
        var n_2936026828 = newNode_2936026716;
        var idx_2936026829 = -1;
        var i_2936026830 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936026829 == -1)) {
              __2936026826 = i_2936026830;
              child_2936026827 = n_2936026828;
              if (colontmp__2936026823(child_2936026827)) {
              __2936026751 = i_2936026824;
              emptyNode_2936026752 = child_2936026827;
              nodeHEX3D_2936017358(self_2936026688, emptyNode_2936026752);
              var _ = tryEdit_2936021155(self_2936026688, node_2936015479(self_2936026688));
              break Label3;
              i_2936026824 = addInt(i_2936026824, 1);
              }
              
              }
              
              if ((addInt(idx_2936026829, 1) < len_2969567320(n_2936026828))) {
              n_2936026828 = HEX5BHEX5D_2969567316(n_2936026828, addInt(idx_2936026829, 1));
              idx_2936026829 = -1;
              }
              else {
                var oHEX60gensym74_2936026832 = next_2969567425(n_2936026828);
                if (!isSome_2969569114(oHEX60gensym74_2936026832)) Temporary9 = false; else {                  var ne_2936026833 = get_2969569134(oHEX60gensym74_2936026832);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936026828 == newNode_2936026716));                }              if (Temporary8) {
              n_2936026828 = ne_2936026833;
              idx_2936026829 = -1;
              }
              else {
              if (((!((n_2936026828.parent == null)) && !((n_2936026828 == newNode_2936026716))) && !((n_2936026828.parent == newNode_2936026716)))) {
              idx_2936026829 = index_2969567340(n_2936026828);
              n_2936026828 = n_2936026828.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936026830 = addInt(i_2936026830, 1);
              }
            }
        };
      };
    };
    }
    else {
      var fmtRes_2936026757 = [mnewString(0)];
      fmtRes_2936026757[0].push.apply(fmtRes_2936026757[0], [91,97,115,116,101,100,105,116,93,32,70,97,105,108,101,100,32,116,111,32,105,110,115,101,114,116,32,110,111,100,101,32]);;
      formatValue_3070231363(fmtRes_2936026757, 0, newNode_2936026716, []);
      fmtRes_2936026757[0].push.apply(fmtRes_2936026757[0], [32,105,110,116,111,32]);;
      formatValue_3070231363(fmtRes_2936026757, 0, node_2936015479(self_2936026688), []);
      fmtRes_2936026757[0].push.apply(fmtRes_2936026757[0], [32,97,116,32]);;
      formatValue_2332033544(fmtRes_2936026757, 0, len_2969567320(node_2936015479(self_2936026688)), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936026757[0], NTI33554449)]);
    }
    
    }
    
  };

  
}

function insertChildJsWrapper_2936026683(self_2936026801, nodeTemplate_2936026802) {
    insertChild_2936026687(self_2936026801, nodeTemplate_2936026802);

  
}
editor_ast_prototype.insertChild = function(nodeTemplate_ /* : string */) { return (insertChildJsWrapper_2936026683(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replace_2936026840(self_2936026841, nodeTemplate_2936026842) {
      var Temporary1;
      
function HEX3Aanonymous_2936026871(n_2936026874) {
        var result_2936026877 = false;

          result_2936026877 = shouldEditNode_2936024190(self_2936026841.document, n_2936026874);

        return result_2936026877;

      }
                var Temporary7;
                var Temporary8;

  BeforeRet: {
    if (isEditing_2936021000(self_2936026841)) {
    break BeforeRet;
    }
    
      var oHEX60gensym722_2936026845 = createNodeFromAction_2936022311(self_2936026841, nodeTemplate_2936026842, node_2936015479(self_2936026841), errorType_3070230904());
      if (!isSome_2936026036(oHEX60gensym722_2936026845)) Temporary1 = false; else {        var newNodeIndex_2936026868 = nimCopy(null, get_2936026053(oHEX60gensym722_2936026845), NTI2936018200);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936026869 = newNodeIndex_2936026868["Field0"];
    var __2936026870 = newNodeIndex_2936026868["Field1"];
    nodeHEX3D_2936017358(self_2936026841, replaceNode_2936021992(self_2936026841.document, node_2936015479(self_2936026841), newNode_2936026869));
    Label2: {
      var __2936026878 = 0;
      var emptyNode_2936026879 = null;
      var colontmp__2936026930 = null;
      colontmp__2936026930 = HEX3Aanonymous_2936026871;
      var i_2936026931 = 0;
      Label3: {
        var __2936026933 = 0;
        var child_2936026934 = null;
        var n_2936026935 = newNode_2936026869;
        var idx_2936026936 = -1;
        var i_2936026937 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2936026936 == -1)) {
              __2936026933 = i_2936026937;
              child_2936026934 = n_2936026935;
              if (colontmp__2936026930(child_2936026934)) {
              __2936026878 = i_2936026931;
              emptyNode_2936026879 = child_2936026934;
              nodeHEX3D_2936017358(self_2936026841, emptyNode_2936026879);
              var _ = tryEdit_2936021155(self_2936026841, node_2936015479(self_2936026841));
              break Label2;
              i_2936026931 = addInt(i_2936026931, 1);
              }
              
              }
              
              if ((addInt(idx_2936026936, 1) < len_2969567320(n_2936026935))) {
              n_2936026935 = HEX5BHEX5D_2969567316(n_2936026935, addInt(idx_2936026936, 1));
              idx_2936026936 = -1;
              }
              else {
                var oHEX60gensym74_2936026939 = next_2969567425(n_2936026935);
                if (!isSome_2969569114(oHEX60gensym74_2936026939)) Temporary8 = false; else {                  var ne_2936026940 = get_2969569134(oHEX60gensym74_2936026939);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2936026935 == newNode_2936026869));                }              if (Temporary7) {
              n_2936026935 = ne_2936026940;
              idx_2936026936 = -1;
              }
              else {
              if (((!((n_2936026935.parent == null)) && !((n_2936026935 == newNode_2936026869))) && !((n_2936026935.parent == newNode_2936026869)))) {
              idx_2936026936 = index_2969567340(n_2936026935);
              n_2936026935 = n_2936026935.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2936026937 = addInt(i_2936026937, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceJsWrapper_2936026836(self_2936026908, nodeTemplate_2936026909) {
    replace_2936026840(self_2936026908, nodeTemplate_2936026909);

  
}
editor_ast_prototype.replace = function(nodeTemplate_ /* : string */) { return (replaceJsWrapper_2936026836(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceEmpty_2936026947(self_2936026948, nodeTemplate_2936026949) {
      var Temporary1;
        var Temporary2;
      
function HEX3Aanonymous_2936026982(n_2936026985) {
        var result_2936026988 = false;

          result_2936026988 = shouldEditNode_2936024190(self_2936026948.document, n_2936026985);

        return result_2936026988;

      }
                var Temporary8;
                var Temporary9;

  BeforeRet: {
    if (isEditing_2936021000(self_2936026948)) {
    break BeforeRet;
    }
    
      if (!(node_2936015479(self_2936026948).kind == 0)) Temporary1 = false; else {        var oHEX60gensym732_2936026956 = createNodeFromAction_2936022311(self_2936026948, nodeTemplate_2936026949, node_2936015479(self_2936026948), errorType_3070230904());
        if (!isSome_2936026036(oHEX60gensym732_2936026956)) Temporary2 = false; else {          var newNodeIndex_2936026979 = nimCopy(null, get_2936026053(oHEX60gensym732_2936026956), NTI2936018200);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    var newNode_2936026980 = newNodeIndex_2936026979["Field0"];
    var __2936026981 = newNodeIndex_2936026979["Field1"];
    nodeHEX3D_2936017358(self_2936026948, replaceNode_2936021992(self_2936026948.document, node_2936015479(self_2936026948), newNode_2936026980));
    Label3: {
      var __2936026989 = 0;
      var emptyNode_2936026990 = null;
      var colontmp__2936027041 = null;
      colontmp__2936027041 = HEX3Aanonymous_2936026982;
      var i_2936027042 = 0;
      Label4: {
        var __2936027044 = 0;
        var child_2936027045 = null;
        var n_2936027046 = newNode_2936026980;
        var idx_2936027047 = -1;
        var i_2936027048 = 0;
        Label5: {
            Label6: while (true) {
            if (!true) break Label6;
              try {
              if ((idx_2936027047 == -1)) {
              __2936027044 = i_2936027048;
              child_2936027045 = n_2936027046;
              if (colontmp__2936027041(child_2936027045)) {
              __2936026989 = i_2936027042;
              emptyNode_2936026990 = child_2936027045;
              nodeHEX3D_2936017358(self_2936026948, emptyNode_2936026990);
              var _ = tryEdit_2936021155(self_2936026948, node_2936015479(self_2936026948));
              break Label3;
              i_2936027042 = addInt(i_2936027042, 1);
              }
              
              }
              
              if ((addInt(idx_2936027047, 1) < len_2969567320(n_2936027046))) {
              n_2936027046 = HEX5BHEX5D_2969567316(n_2936027046, addInt(idx_2936027047, 1));
              idx_2936027047 = -1;
              }
              else {
                var oHEX60gensym74_2936027050 = next_2969567425(n_2936027046);
                if (!isSome_2969569114(oHEX60gensym74_2936027050)) Temporary9 = false; else {                  var ne_2936027051 = get_2969569134(oHEX60gensym74_2936027050);
                  Temporary9 = true;                }                if (!Temporary9) Temporary8 = false; else {                  Temporary8 = !((n_2936027046 == newNode_2936026980));                }              if (Temporary8) {
              n_2936027046 = ne_2936027051;
              idx_2936027047 = -1;
              }
              else {
              if (((!((n_2936027046.parent == null)) && !((n_2936027046 == newNode_2936026980))) && !((n_2936027046.parent == newNode_2936026980)))) {
              idx_2936027047 = index_2969567340(n_2936027046);
              n_2936027046 = n_2936027046.parent;
              }
              else {
                break Label5;
              }
              }}
              } finally {
              i_2936027048 = addInt(i_2936027048, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function replaceEmptyJsWrapper_2936026943(self_2936027019, nodeTemplate_2936027020) {
    replaceEmpty_2936026947(self_2936027019, nodeTemplate_2936027020);

  
}
editor_ast_prototype.replaceEmpty = function(nodeTemplate_ /* : string */) { return (replaceEmptyJsWrapper_2936026943(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function replaceParent_2936027058(self_2936027059) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936027059)) {
    break BeforeRet;
    }
    
    var node_2936027060 = node_2936015479(self_2936027059);
    if (((node_2936027060.parent == null) || (node_2936027060.parent == self_2936027059.document.rootNode))) {
    break BeforeRet;
    }
    
    var parent_2936027069 = node_2936027060.parent;
    var _ = deleteNode_2936022056(self_2936027059.document, node_2936015479(self_2936027059));
    nodeHEX3D_2936017358(self_2936027059, replaceNode_2936021992(self_2936027059.document, parent_2936027069, node_2936027060));
  };

  
}

function replaceParentJsWrapper_2936027054(self_2936027097) {
    replaceParent_2936027058(self_2936027097);

  
}
editor_ast_prototype.replaceParent = function() { return (replaceParentJsWrapper_2936027054(this));};

function wrap_2936027118(self_2936027119, nodeTemplate_2936027120) {
      var Temporary1;
      
function HEX3Aanonymous_2936027151(n_2936027154) {
        var result_2936027157 = false;

          result_2936027157 = (n_2936027154.kind == 0);

        return result_2936027157;

      }
                var Temporary7;
                var Temporary8;
      
function HEX3Aanonymous_2936027164(n_2936027167) {
        var result_2936027170 = false;

          result_2936027170 = shouldEditNode_2936024190(self_2936027119.document, n_2936027167);

        return result_2936027170;

      }
                var Temporary14;
                var Temporary15;

  BeforeRet: {
    if (isEditing_2936021000(self_2936027119)) {
    break BeforeRet;
    }
    
    var typ_2936027121 = computeType_2986417458(ctx_2936012853, node_2936015479(self_2936027119), true);
      var oHEX60gensym750_2936027124 = createNodeFromAction_2936022311(self_2936027119, nodeTemplate_2936027120, node_2936015479(self_2936027119), typ_2936027121);
      if (!isSome_2936026036(oHEX60gensym750_2936027124)) Temporary1 = false; else {        var newNodeIndex_2936027147 = nimCopy(null, get_2936026053(oHEX60gensym750_2936027124), NTI2936018200);
        Temporary1 = true;      }    if (Temporary1) {
    var newNode_2936027148 = newNodeIndex_2936027147["Field0"];
    var index_2936027149 = newNodeIndex_2936027147["Field1"];
    var oldNode_2936027150 = node_2936015479(self_2936027119);
    nodeHEX3D_2936017358(self_2936027119, replaceNode_2936021992(self_2936027119.document, node_2936015479(self_2936027119), newNode_2936027148));
    Label2: {
      var i_2936027162 = 0;
      var emptyNode_2936027163 = null;
      var colontmp__2936027232 = null;
      colontmp__2936027232 = HEX3Aanonymous_2936027151;
      var i_2936027233 = 0;
      Label3: {
        var __2936027235 = 0;
        var child_2936027236 = null;
        var n_2936027237 = newNode_2936027148;
        var idx_2936027238 = -1;
        var i_2936027239 = 0;
        Label4: {
            Label5: while (true) {
            if (!true) break Label5;
              try {
              if ((idx_2936027238 == -1)) {
              __2936027235 = i_2936027239;
              child_2936027236 = n_2936027237;
              if (colontmp__2936027232(child_2936027236)) {
              i_2936027162 = i_2936027233;
              emptyNode_2936027163 = child_2936027236;
              if ((i_2936027162 == index_2936027149)) {
              nodeHEX3D_2936017358(self_2936027119, replaceNode_2936021992(self_2936027119.document, emptyNode_2936027163, oldNode_2936027150));
              break Label2;
              }
              
              i_2936027233 = addInt(i_2936027233, 1);
              }
              
              }
              
              if ((addInt(idx_2936027238, 1) < len_2969567320(n_2936027237))) {
              n_2936027237 = HEX5BHEX5D_2969567316(n_2936027237, addInt(idx_2936027238, 1));
              idx_2936027238 = -1;
              }
              else {
                var oHEX60gensym74_2936027241 = next_2969567425(n_2936027237);
                if (!isSome_2969569114(oHEX60gensym74_2936027241)) Temporary8 = false; else {                  var ne_2936027242 = get_2969569134(oHEX60gensym74_2936027241);
                  Temporary8 = true;                }                if (!Temporary8) Temporary7 = false; else {                  Temporary7 = !((n_2936027237 == newNode_2936027148));                }              if (Temporary7) {
              n_2936027237 = ne_2936027242;
              idx_2936027238 = -1;
              }
              else {
              if (((!((n_2936027237.parent == null)) && !((n_2936027237 == newNode_2936027148))) && !((n_2936027237.parent == newNode_2936027148)))) {
              idx_2936027238 = index_2969567340(n_2936027237);
              n_2936027237 = n_2936027237.parent;
              }
              else {
                break Label4;
              }
              }}
              } finally {
              i_2936027239 = addInt(i_2936027239, 1);
              }
            }
        };
      };
    };
    Label9: {
      var __2936027171 = 0;
      var emptyNode_2936027172 = null;
      var colontmp__2936027244 = null;
      colontmp__2936027244 = HEX3Aanonymous_2936027164;
      var i_2936027245 = 0;
      Label10: {
        var __2936027247 = 0;
        var child_2936027248 = null;
        var n_2936027249 = newNode_2936027148;
        var idx_2936027250 = -1;
        var i_2936027251 = 0;
        Label11: {
            Label12: while (true) {
            if (!true) break Label12;
              try {
              if ((idx_2936027250 == -1)) {
              __2936027247 = i_2936027251;
              child_2936027248 = n_2936027249;
              if (colontmp__2936027244(child_2936027248)) {
              __2936027171 = i_2936027245;
              emptyNode_2936027172 = child_2936027248;
              nodeHEX3D_2936017358(self_2936027119, emptyNode_2936027172);
              var _ = tryEdit_2936021155(self_2936027119, node_2936015479(self_2936027119));
              break Label9;
              i_2936027245 = addInt(i_2936027245, 1);
              }
              
              }
              
              if ((addInt(idx_2936027250, 1) < len_2969567320(n_2936027249))) {
              n_2936027249 = HEX5BHEX5D_2969567316(n_2936027249, addInt(idx_2936027250, 1));
              idx_2936027250 = -1;
              }
              else {
                var oHEX60gensym74_2936027253 = next_2969567425(n_2936027249);
                if (!isSome_2969569114(oHEX60gensym74_2936027253)) Temporary15 = false; else {                  var ne_2936027254 = get_2969569134(oHEX60gensym74_2936027253);
                  Temporary15 = true;                }                if (!Temporary15) Temporary14 = false; else {                  Temporary14 = !((n_2936027249 == newNode_2936027148));                }              if (Temporary14) {
              n_2936027249 = ne_2936027254;
              idx_2936027250 = -1;
              }
              else {
              if (((!((n_2936027249.parent == null)) && !((n_2936027249 == newNode_2936027148))) && !((n_2936027249.parent == newNode_2936027148)))) {
              idx_2936027250 = index_2969567340(n_2936027249);
              n_2936027249 = n_2936027249.parent;
              }
              else {
                break Label11;
              }
              }}
              } finally {
              i_2936027251 = addInt(i_2936027251, 1);
              }
            }
        };
      };
    };
    }
    
  };

  
}

function wrapJsWrapper_2936027114(self_2936027210, nodeTemplate_2936027211) {
    wrap_2936027118(self_2936027210, nodeTemplate_2936027211);

  
}
editor_ast_prototype.wrap = function(nodeTemplate_ /* : string */) { return (wrapJsWrapper_2936027114(this, nodeTemplate_ == undefined ? undefined : cstrToNimstr(nodeTemplate_)));};

function editPrevEmpty_2936027261(self_2936027262) {
              var Temporary4;

  BeforeRet: {
    if (isEditing_2936021000(self_2936027262)) {
    break BeforeRet;
    }
    
    var current_2936027263 = node_2936015479(self_2936027262);
    Label1: {
      var emptyNode_2936027264 = null;
      var colontmp__2936027312 = null;
      colontmp__2936027312 = node_2936015479(self_2936027262);
      var idx_2936027313 = 0;
      var n_2936027314 = colontmp__2936027312;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936027314 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936027314), 1)), subInt(idx_2936027313, 1))) {
            n_2936027314 = HEX5BHEX5D_2969567316(n_2936027314, subInt(idx_2936027313, 1));
            idx_2936027313 = len_2969567320(n_2936027314);
            }
            else {
              var oHEX60gensym93_2936027316 = prev_2969567471(n_2936027314);
              if (!isSome_2969569114(oHEX60gensym93_2936027316)) Temporary4 = false; else {                var ne_2936027317 = get_2969569134(oHEX60gensym93_2936027316);
                Temporary4 = true;              }            if (Temporary4) {
            emptyNode_2936027264 = n_2936027314;
            if ((!((emptyNode_2936027264 == current_2936027263)) && shouldEditNode_2936024190(self_2936027262.document, emptyNode_2936027264))) {
            nodeHEX3D_2936017358(self_2936027262, emptyNode_2936027264);
            var _ = tryEdit_2936021155(self_2936027262, node_2936015479(self_2936027262));
            break Label1;
            }
            
            n_2936027314 = ne_2936027317;
            idx_2936027313 = len_2969567320(n_2936027314);
            }
            else {
              emptyNode_2936027264 = n_2936027314;
              if ((!((emptyNode_2936027264 == current_2936027263)) && shouldEditNode_2936024190(self_2936027262.document, emptyNode_2936027264))) {
              nodeHEX3D_2936017358(self_2936027262, emptyNode_2936027264);
              var _ = tryEdit_2936021155(self_2936027262, node_2936015479(self_2936027262));
              break Label1;
              }
              
              idx_2936027313 = index_2969567340(n_2936027314);
              n_2936027314 = n_2936027314.parent;
            }
            }
          }
      };
    };
  };

  
}

function editPrevEmptyJsWrapper_2936027257(self_2936027296) {
    editPrevEmpty_2936027261(self_2936027296);

  
}
editor_ast_prototype.editPrevEmpty = function() { return (editPrevEmptyJsWrapper_2936027257(this));};

function editNextEmpty_2936027324(self_2936027325) {
      
function HEX3Aanonymous_2936027327(n_2936027330) {
        var result_2936027333 = false;

          result_2936027333 = (!((n_2936027330 == current_2936027326)) && shouldEditNode_2936024190(self_2936027325.document, n_2936027330));

        return result_2936027333;

      }
                var Temporary6;
                var Temporary7;

  BeforeRet: {
    if (isEditing_2936021000(self_2936027325)) {
    break BeforeRet;
    }
    
    var current_2936027326 = node_2936015479(self_2936027325);
    Label1: {
      var __2936027338 = 0;
      var emptyNode_2936027339 = null;
      var colontmp__2936027383 = null;
      var colontmp__2936027384 = null;
      colontmp__2936027383 = node_2936015479(self_2936027325);
      colontmp__2936027384 = HEX3Aanonymous_2936027327;
      var i_2936027385 = 0;
      Label2: {
        var __2936027387 = 0;
        var child_2936027388 = null;
        var n_2936027389 = colontmp__2936027383;
        var idx_2936027390 = -1;
        var i_2936027391 = 0;
        Label3: {
            Label4: while (true) {
            if (!true) break Label4;
              try {
              if ((idx_2936027390 == -1)) {
              __2936027387 = i_2936027391;
              child_2936027388 = n_2936027389;
              if (colontmp__2936027384(child_2936027388)) {
              __2936027338 = i_2936027385;
              emptyNode_2936027339 = child_2936027388;
              nodeHEX3D_2936017358(self_2936027325, emptyNode_2936027339);
              var _ = tryEdit_2936021155(self_2936027325, node_2936015479(self_2936027325));
              break Label1;
              i_2936027385 = addInt(i_2936027385, 1);
              }
              
              }
              
              if ((addInt(idx_2936027390, 1) < len_2969567320(n_2936027389))) {
              n_2936027389 = HEX5BHEX5D_2969567316(n_2936027389, addInt(idx_2936027390, 1));
              idx_2936027390 = -1;
              }
              else {
                var oHEX60gensym74_2936027393 = next_2969567425(n_2936027389);
                if (!isSome_2969569114(oHEX60gensym74_2936027393)) Temporary7 = false; else {                  var ne_2936027394 = get_2969569134(oHEX60gensym74_2936027393);
                  Temporary7 = true;                }                if (!Temporary7) Temporary6 = false; else {                  Temporary6 = !((n_2936027389 == null));                }              if (Temporary6) {
              n_2936027389 = ne_2936027394;
              idx_2936027390 = -1;
              }
              else {
              if (((!((n_2936027389.parent == null)) && !((n_2936027389 == null))) && !((n_2936027389.parent == null)))) {
              idx_2936027390 = index_2969567340(n_2936027389);
              n_2936027389 = n_2936027389.parent;
              }
              else {
                break Label3;
              }
              }}
              } finally {
              i_2936027391 = addInt(i_2936027391, 1);
              }
            }
        };
      };
    };
  };

  
}

function editNextEmptyJsWrapper_2936027320(self_2936027367) {
    editNextEmpty_2936027324(self_2936027367);

  
}
editor_ast_prototype.editNextEmpty = function() { return (editNextEmptyJsWrapper_2936027320(this));};

function rename_2936027401(self_2936027402) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936027402)) {
    break BeforeRet;
    }
    
    var _ = tryEdit_2936021155(self_2936027402, node_2936015479(self_2936027402));
  };

  
}

function renameJsWrapper_2936027397(self_2936027430) {
    rename_2936027401(self_2936027430);

  
}
editor_ast_prototype.rename = function() { return (renameJsWrapper_2936027397(this));};

function selectPrevCompletion_2936027451(self_2936027452) {
    if ((0 < (self_2936027452.completions).length)) {
    self_2936027452.selectedCompletion = clamp_1660945119(subInt(self_2936027452.selectedCompletion, 1), 0, subInt((self_2936027452.completions).length, 1));
    }
    else {
      self_2936027452.selectedCompletion = 0;
    }
    

  
}

function selectPrevCompletionJsWrapper2_2936027447(self_2936027491) {
    selectPrevCompletion_2936027451(self_2936027491);

  
}
editor_ast_prototype.selectPrevCompletion2 = function() { return (selectPrevCompletionJsWrapper2_2936027447(this));};

function selectNextCompletion_2936027512(editor_2936027513) {
    if ((0 < (editor_2936027513.completions).length)) {
    editor_2936027513.selectedCompletion = clamp_1660945119(addInt(editor_2936027513.selectedCompletion, 1), 0, subInt((editor_2936027513.completions).length, 1));
    }
    else {
      editor_2936027513.selectedCompletion = 0;
    }
    

  
}

function selectNextCompletionJsWrapper2_2936027508(editor_2936027552) {
    selectNextCompletion_2936027512(editor_2936027552);

  
}
editor_ast_prototype.selectNextCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (selectNextCompletionJsWrapper2_2936027508(editor_));};

function createDefaultNode_2936023846(editor_2936023847, kind_2936023848) {
  var result_2936023850 = ({val: {Field0: null, Field1: 0}, has: false});

  BeforeRet: {
    switch (kind_2936023848) {
    case 0:
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: {kind: 0, id: newId_2181038297(), text: [], parent: null, reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 1:
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: {kind: 1, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 2:
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: {kind: 2, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 3:
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: {kind: 3, text: [], parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), children: []}, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 4:
      Label1: {
        var tmpHEX60gensym452_2936023867 = null;
        Label2: {
          var res_2936023873 = null;
          res_2936023873 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023873.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023873.id = nimCopy(res_2936023873.id, newId_2181038297(), NTI2181038083);
          Label4: {
            Label5: {
              var res_2936023876 = null;
              res_2936023876 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023876.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936023873, res_2936023876);
        };
      };
      var node_2936023895 = res_2936023873;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936023895, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 5:
      Label7: {
        var tmpHEX60gensym459_2936023903 = null;
        Label8: {
          var res_2936023909 = null;
          res_2936023909 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023909.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023909.id = nimCopy(res_2936023909.id, newId_2181038297(), NTI2181038083);
          Label10: {
            Label11: {
              var res_2936023912 = null;
              res_2936023912 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023912.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023909, res_2936023912);
            Label13: {
              var res_2936023914 = null;
              res_2936023914 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023914.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023909, res_2936023914);
          };
        };
      };
      var node_2936023942 = res_2936023909;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936023942, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 6:
      Label15: {
        var tmpHEX60gensym469_2936023950 = null;
        Label16: {
          var res_2936023956 = null;
          res_2936023956 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936023956.kind = 6;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          res_2936023956.id = nimCopy(res_2936023956.id, newId_2181038297(), NTI2181038083);
          Label18: {
            Label19: {
              var res_2936023959 = null;
              res_2936023959 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023959.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023956, res_2936023959);
            Label21: {
              var res_2936023961 = null;
              res_2936023961 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936023961.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936023956, res_2936023961);
          };
        };
      };
      var node_2936023989 = res_2936023956;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936023989, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 11:
      Label23: {
        var tmpHEX60gensym479_2936023997 = null;
        Label24: {
          var res_2936024003 = null;
          res_2936024003 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936024003.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label26: {
            Label27: {
              var res_2936024005 = null;
              res_2936024005 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024005.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936024003, res_2936024005);
            Label29: {
              var res_2936024007 = null;
              res_2936024007 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024007.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936024003, res_2936024007);
            Label31: {
              var res_2936024009 = null;
              res_2936024009 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024009.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
              Label33: {
                Label34: {
                  var res_2936024011 = null;
                  res_2936024011 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                  try {
                  res_2936024011.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                  if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                  raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                  }
                  else {
                  	reraiseException();
                  }
                  lastJSError = prevJSError;
                  } finally {
                  }
                };
              };
              add_2969567270(res_2936024009, res_2936024011);
            };
            add_2969567270(res_2936024003, res_2936024009);
          };
        };
      };
      var node_2936024057 = res_2936024003;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936024057, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 9:
      Label36: {
        var tmpHEX60gensym495_2936024065 = null;
        Label37: {
          var res_2936024071 = null;
          res_2936024071 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936024071.kind = 9;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label39: {
            Label40: {
              var res_2936024073 = null;
              res_2936024073 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024073.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936024071, res_2936024073);
            Label42: {
              var res_2936024075 = null;
              res_2936024075 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024075.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936024071, res_2936024075);
          };
        };
      };
      var node_2936024103 = res_2936024071;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936024103, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 10:
      Label44: {
        var tmpHEX60gensym505_2936024111 = null;
        Label45: {
          var res_2936024117 = null;
          res_2936024117 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936024117.kind = 10;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label47: {
            Label48: {
              var res_2936024119 = null;
              res_2936024119 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024119.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936024117, res_2936024119);
            Label50: {
              var res_2936024121 = null;
              res_2936024121 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024121.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
            add_2969567270(res_2936024117, res_2936024121);
          };
        };
      };
      var node_2936024149 = res_2936024117;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936024149, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    case 7:
      Label52: {
        var tmpHEX60gensym515_2936024157 = null;
        Label53: {
          var res_2936024163 = null;
          res_2936024163 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
          try {
          res_2936024163.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
          if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
          raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
          }
          else {
          	reraiseException();
          }
          lastJSError = prevJSError;
          } finally {
          }
          Label55: {
            Label56: {
              var res_2936024165 = null;
              res_2936024165 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
              try {
              res_2936024165.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
              if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
              raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
              }
              else {
              	reraiseException();
              }
              lastJSError = prevJSError;
              } finally {
              }
            };
          };
          add_2969567270(res_2936024163, res_2936024165);
        };
      };
      var node_2936024184 = res_2936024163;
      result_2936023850 = nimCopy(result_2936023850, some_2936022351({Field0: node_2936024184, Field1: 0}), NTI2936018205);
      break BeforeRet;
      break;
    default: 
      result_2936023850 = nimCopy(result_2936023850, none_2936022852(), NTI2936018205);
      break BeforeRet;
      break;
    }
  };

  return result_2936023850;

}

function applySelectedCompletion_2936027573(editor_2936027574) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        
function HEX3Aanonymous_2936027679(n_2936027682) {
          var result_2936027685 = false;

            result_2936027685 = shouldEditNode_2936024190(editor_2936027574.document, n_2936027682);

          return result_2936027685;

        }
                  var Temporary10;
                  var Temporary11;

  BeforeRet: {
    if ((editor_2936027574.textDocument == null)) {
    break BeforeRet;
    }
    
    if (((editor_2936027574.completions).length == 0)) {
    break BeforeRet;
    }
    
    var com_2936027582 = nimCopy(null, editor_2936027574.completions[chckIndx(editor_2936027574.selectedCompletion, 0, (editor_2936027574.completions).length - 1)], NTI2936014312);
    var completionText_2936027583 = nimCopy(null, editor_2936027574.completionText, NTI33554449);
    var fmtRes_2936027588 = [mnewString(0)];
    fmtRes_2936027588[0].push.apply(fmtRes_2936027588[0], [91,97,115,116,101,100,105,116,93,32,65,112,112,108,121,105,110,103,32,99,111,109,112,108,101,116,105,111,110,32]);;
    formatValue_2332033544(fmtRes_2936027588, 0, editor_2936027574.selectedCompletion, []);
    fmtRes_2936027588[0].push.apply(fmtRes_2936027588[0], [32,40]);;
    formatValue_721420459(fmtRes_2936027588, 0, completionText_2936027583, []);
    fmtRes_2936027588[0].push.apply(fmtRes_2936027588[0], [41]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936027588[0], NTI33554449)]);
    finishEdit_2936021424(editor_2936027574, false);
    switch (com_2936027582.kind) {
    case 0:
        var Temporary2 = com_2936027582;
        if (ConstSet188[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2936014311)); }
        var oHEX60gensym804_2936027596 = getSymbol_2986407235(ctx_2936012853, Temporary2.id);
        if (!isSome_3070232117(oHEX60gensym804_2936027596)) Temporary1 = false; else {          var symbol_2936027619 = get_3070232137(oHEX60gensym804_2936027596);
          Temporary1 = true;        }      if (Temporary1) {
      nodeHEX3D_2936017358(editor_2936027574, replaceNode_2936021992(editor_2936027574.document, node_2936015479(editor_2936027574), {kind: 1, reff: nimCopy(null, symbol_2936027619.id, NTI2181038083), parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []}));
      }
      
      break;
    case 1:
        var Temporary4 = com_2936027582;
        if (ConstSet189[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'nodeKind\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI2936014311)); }
        var oHEX60gensym805_2936027622 = createDefaultNode_2936023846(editor_2936027574, Temporary4.nodeKind);
        if (!isSome_2936026036(oHEX60gensym805_2936027622)) Temporary3 = false; else {          var nodeIndex_2936027645 = nimCopy(null, get_2936026053(oHEX60gensym805_2936027622), NTI2936018200);
          Temporary3 = true;        }      if (Temporary3) {
      var newNode_2936027646 = nodeIndex_2936027645["Field0"];
      var __2936027647 = nodeIndex_2936027645["Field1"];
      var _ = replaceNode_2936021992(editor_2936027574.document, node_2936015479(editor_2936027574), newNode_2936027646);
      if ((newNode_2936027646.kind == 2)) {
      newNode_2936027646.text = nimCopy(null, completionText_2936027583, NTI33554449);
      updateNode_2986456560(ctx_2936012853, newNode_2936027646);
      }
      else {
      if ((newNode_2936027646.kind == 3)) {
      if (!((completionText_2936027583[chckIndx(0, 0, (completionText_2936027583).length - 1)] == 34))) {
      failedAssertImpl_268435515([97,115,116,95,100,111,99,117,109,101,110,116,46,110,105,109,40,49,53,57,50,44,32,57,41,32,96,99,111,109,112,108,101,116,105,111,110,84,101,120,116,91,48,93,32,61,61,32,39,92,34,39,96,32]);
      }
      
      newNode_2936027646.text = nimCopy(null, HEX5BHEX5D_855639319(completionText_2936027583, HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
      updateNode_2986456560(ctx_2936012853, newNode_2936027646);
      }
      }
      nodeHEX3D_2936017358(editor_2936027574, newNode_2936027646);
      Label5: {
        var __2936027686 = 0;
        var emptyNode_2936027687 = null;
        var colontmp__2936027731 = null;
        colontmp__2936027731 = HEX3Aanonymous_2936027679;
        var i_2936027732 = 0;
        Label6: {
          var __2936027734 = 0;
          var child_2936027735 = null;
          var n_2936027736 = newNode_2936027646;
          var idx_2936027737 = -1;
          var i_2936027738 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2936027737 == -1)) {
                __2936027734 = i_2936027738;
                child_2936027735 = n_2936027736;
                if (colontmp__2936027731(child_2936027735)) {
                __2936027686 = i_2936027732;
                emptyNode_2936027687 = child_2936027735;
                nodeHEX3D_2936017358(editor_2936027574, emptyNode_2936027687);
                var _ = tryEdit_2936021155(editor_2936027574, node_2936015479(editor_2936027574));
                break Label5;
                i_2936027732 = addInt(i_2936027732, 1);
                }
                
                }
                
                if ((addInt(idx_2936027737, 1) < len_2969567320(n_2936027736))) {
                n_2936027736 = HEX5BHEX5D_2969567316(n_2936027736, addInt(idx_2936027737, 1));
                idx_2936027737 = -1;
                }
                else {
                  var oHEX60gensym74_2936027740 = next_2969567425(n_2936027736);
                  if (!isSome_2969569114(oHEX60gensym74_2936027740)) Temporary11 = false; else {                    var ne_2936027741 = get_2969569134(oHEX60gensym74_2936027740);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2936027736 == newNode_2936027646));                  }                if (Temporary10) {
                n_2936027736 = ne_2936027741;
                idx_2936027737 = -1;
                }
                else {
                if (((!((n_2936027736.parent == null)) && !((n_2936027736 == newNode_2936027646))) && !((n_2936027736.parent == newNode_2936027646)))) {
                idx_2936027737 = index_2969567340(n_2936027736);
                n_2936027736 = n_2936027736.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2936027738 = addInt(i_2936027738, 1);
                }
              }
          };
        };
      };
      }
      
      break;
    }
  };

  
}

function applySelectedCompletionJsWrapper2_2936027569(editor_2936027715) {
    applySelectedCompletion_2936027573(editor_2936027715);

  
}
editor_ast_prototype.applySelectedCompletion2 = function(editor_ /* : AstDocumentEditor */) { return (applySelectedCompletionJsWrapper2_2936027569(editor_));};

function cancelAndNextCompletion_2936027784(self_2936027785) {
    finishEdit_2936021424(self_2936027785, false);
    editNextEmpty_2936027324(self_2936027785);

  
}

function cancelAndNextCompletionJsWrapper_2936027780(self_2936027813) {
    cancelAndNextCompletion_2936027784(self_2936027813);

  
}
editor_ast_prototype.cancelAndNextCompletion = function() { return (cancelAndNextCompletionJsWrapper_2936027780(this));};

function cancelAndPrevCompletion_2936027834(self_2936027835) {
    finishEdit_2936021424(self_2936027835, false);
    editPrevEmpty_2936027261(self_2936027835);

  
}

function cancelAndPrevCompletionJsWrapper_2936027830(self_2936027863) {
    cancelAndPrevCompletion_2936027834(self_2936027863);

  
}
editor_ast_prototype.cancelAndPrevCompletion = function() { return (cancelAndPrevCompletionJsWrapper_2936027830(this));};

function cancelAndDelete_2936027884(self_2936027885) {
    finishEdit_2936021424(self_2936027885, false);
    self_2936027885.deletedNode = nimCopy(self_2936027885.deletedNode, some_2969567458(node_2936015479(self_2936027885)), NTI2969567351);
    nodeHEX3D_2936017358(self_2936027885, deleteNode_2936022056(self_2936027885.document, node_2936015479(self_2936027885)));

  
}

function cancelAndDeleteJsWrapper_2936027880(self_2936027916) {
    cancelAndDelete_2936027884(self_2936027916);

  
}
editor_ast_prototype.cancelAndDelete = function() { return (cancelAndDeleteJsWrapper_2936027880(this));};

function none_2969567410() {
  var result_2969567417 = ({val: 0, has: false});

  return result_2969567417;

}

function some_1191184367(val_1191184369) {
  var result_1191184370 = ({val: 0, has: false});

    result_1191184370.has = true;
    result_1191184370.val = val_1191184369;

  return result_1191184370;

}

function index_2969567402(node_2969567403, parent_2969567404) {
  var result_2969567406 = ({val: 0, has: false});

  BeforeRet: {
    if ((node_2969567403.parent == null)) {
    result_2969567406 = nimCopy(result_2969567406, none_2969567410(), NTI1191183280);
    break BeforeRet;
    }
    
    if ((node_2969567403.parent == parent_2969567404)) {
    result_2969567406 = nimCopy(result_2969567406, some_1191184367(index_2969567340(node_2969567403)), NTI1191183280);
    break BeforeRet;
    }
    
    result_2969567406 = nimCopy(result_2969567406, index_2969567402(node_2969567403.parent, parent_2969567404), NTI1191183280);
    break BeforeRet;
  };

  return result_2969567406;

}

function get_1191185211(self_1191185213) {
  var result_1191185214 = 0;

    if (isNone_1191185194(self_1191185213)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1191185214 = self_1191185213["val"];

  return result_1191185214;

}

function moveNodeToPrevSpace_2936027937(self_2936027938) {
              var Temporary4;
      var Temporary7;
    var Temporary8;
      var Temporary9;
      var Temporary10;

    var wasEditing_2936027939 = isEditing_2936021000(self_2936027938);
    finishEdit_2936021424(self_2936027938, false);
    var targetNode_2936027946 = none_2969567439();
    Label1: {
      var next_2936027947 = null;
      var colontmp__2936028087 = null;
      colontmp__2936028087 = node_2936015479(self_2936027938);
      var idx_2936028088 = 0;
      var n_2936028089 = colontmp__2936028087;
      Label2: {
          Label3: while (true) {
          if (!!((n_2936028089 == null))) break Label3;
            if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936028089), 1)), subInt(idx_2936028088, 1))) {
            n_2936028089 = HEX5BHEX5D_2969567316(n_2936028089, subInt(idx_2936028088, 1));
            idx_2936028088 = len_2969567320(n_2936028089);
            }
            else {
              var oHEX60gensym93_2936028091 = prev_2969567471(n_2936028089);
              if (!isSome_2969569114(oHEX60gensym93_2936028091)) Temporary4 = false; else {                var ne_2936028092 = get_2969569134(oHEX60gensym93_2936028091);
                Temporary4 = true;              }            if (Temporary4) {
            next_2936027947 = n_2936028089;
            Label5: {
              if ((next_2936027947 == node_2936015479(self_2936027938))) {
              break Label5;
              }
              
              if ((canInsertInto_2936024604(self_2936027938, next_2936027947) && (!((next_2936027947 == node_2936015479(self_2936027938).parent)) || (0 < index_2969567340(node_2936015479(self_2936027938)))))) {
              targetNode_2936027946 = nimCopy(targetNode_2936027946, some_2969567458(next_2936027947), NTI2969567372);
              break Label1;
              }
              
            };
            n_2936028089 = ne_2936028092;
            idx_2936028088 = len_2969567320(n_2936028089);
            }
            else {
              next_2936027947 = n_2936028089;
              Label6: {
                if ((next_2936027947 == node_2936015479(self_2936027938))) {
                break Label6;
                }
                
                if ((canInsertInto_2936024604(self_2936027938, next_2936027947) && (!((next_2936027947 == node_2936015479(self_2936027938).parent)) || (0 < index_2969567340(node_2936015479(self_2936027938)))))) {
                targetNode_2936027946 = nimCopy(targetNode_2936027946, some_2969567458(next_2936027947), NTI2969567372);
                break Label1;
                }
                
              };
              idx_2936028088 = index_2969567340(n_2936028089);
              n_2936028089 = n_2936028089.parent;
            }
            }
          }
      };
    };
      var oHEX60gensym844_2936027961 = nimCopy(null, targetNode_2936027946, NTI2969567372);
      if (!isSome_2969569114(oHEX60gensym844_2936027961)) Temporary7 = false; else {        var newParent_2936027984 = get_2969569134(oHEX60gensym844_2936027961);
        Temporary7 = true;      }    if (Temporary7) {
    var nodeToMove_2936027985 = node_2936015479(self_2936027938);
    if ((nodeToMove_2936027985.parent == newParent_2936027984)) {
    Temporary8 = subInt(index_2969567340(nodeToMove_2936027985), 1);
    }
    else {
      var oHEX60gensym845_2936027992 = index_2969567402(nodeToMove_2936027985, newParent_2936027984);
      if (!isSome_1191185117(oHEX60gensym845_2936027992)) Temporary9 = false; else {        var index_2936028015 = get_1191185211(oHEX60gensym845_2936027992);
        Temporary9 = true;      }    if (Temporary9) {
    Temporary8 = index_2936028015;
    }
    else {
    Temporary8 = len_2969567320(newParent_2936027984);
    }
    }
    var index_2936028016 = Temporary8;
    nodeHEX3D_2936017358(self_2936027938, deleteNode_2936022056(self_2936027938.document, nodeToMove_2936027985));
      var oHEX60gensym846_2936028019 = insertNode_2936019720(self_2936027938.document, newParent_2936027984, index_2936028016, nodeToMove_2936027985);
      if (!isSome_2969569114(oHEX60gensym846_2936028019)) Temporary10 = false; else {        var newNode_2936028042 = get_2969569134(oHEX60gensym846_2936028019);
        Temporary10 = true;      }    if (Temporary10) {
    nodeHEX3D_2936017358(self_2936027938, newNode_2936028042);
    if (wasEditing_2936027939) {
    var _ = tryEdit_2936021155(self_2936027938, node_2936015479(self_2936027938));
    }
    
    }
    
    }
    

  
}

function moveNodeToPrevSpaceJsWrapper_2936027933(self_2936028070) {
    moveNodeToPrevSpace_2936027937(self_2936028070);

  
}
editor_ast_prototype.moveNodeToPrevSpace = function() { return (moveNodeToPrevSpaceJsWrapper_2936027933(this));};

function moveNodeToNextSpace_2936028099(self_2936028100) {
      var Temporary6;
    var Temporary7;
      var Temporary8;
      var Temporary9;

    var wasEditing_2936028101 = isEditing_2936021000(self_2936028100);
    finishEdit_2936021424(self_2936028100, false);
    var targetNode_2936028108 = none_2969567439();
    Label1: {
      var __2936028109 = 0;
      var next_2936028110 = null;
      var colontmp__2936028250 = null;
      var colontmp__2936028251 = 0;
      colontmp__2936028250 = node_2936015479(self_2936028100).parent;
      colontmp__2936028251 = index_2969567340(node_2936015479(self_2936028100));
      var n_2936028253 = colontmp__2936028250;
      var idx_2936028254 = colontmp__2936028251;
      var i_2936028255 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            try {
            if ((idx_2936028254 == subInt(len_2969567320(n_2936028253), 1))) {
            var colontmp__2936028258 = nimCopy(null, {Field0: i_2936028255, Field1: n_2936028253}, NTI2936015605);
            __2936028109 = colontmp__2936028258["Field0"];
            next_2936028110 = colontmp__2936028258["Field1"];
            Label5: {
              if ((next_2936028110 == node_2936015479(self_2936028100))) {
              break Label5;
              }
              
              if ((canInsertInto_2936024604(self_2936028100, next_2936028110) && (!((next_2936028110 == node_2936015479(self_2936028100).parent)) || (addInt(index_2969567340(node_2936015479(self_2936028100)), 1) < len_2969567320(node_2936015479(self_2936028100).parent))))) {
              targetNode_2936028108 = nimCopy(targetNode_2936028108, some_2969567458(next_2936028110), NTI2969567372);
              break Label1;
              }
              
            };
            if (((!((n_2936028253.parent == null)) && !((n_2936028253 == null))) && !((n_2936028253.parent == null)))) {
            idx_2936028254 = index_2969567340(n_2936028253);
            n_2936028253 = n_2936028253.parent;
            }
            else {
              break Label2;
            }
            
            }
            else {
            if ((addInt(idx_2936028254, 1) < len_2969567320(colontmp__2936028250))) {
            n_2936028253 = HEX5BHEX5D_2969567316(n_2936028253, addInt(idx_2936028254, 1));
            idx_2936028254 = -1;
            }
            else {
              break Label2;
            }
            }
            } finally {
            i_2936028255 = addInt(i_2936028255, 1);
            }
          }
      };
    };
      var oHEX60gensym856_2936028124 = nimCopy(null, targetNode_2936028108, NTI2969567372);
      if (!isSome_2969569114(oHEX60gensym856_2936028124)) Temporary6 = false; else {        var newParent_2936028147 = get_2969569134(oHEX60gensym856_2936028124);
        Temporary6 = true;      }    if (Temporary6) {
    var nodeToMove_2936028148 = node_2936015479(self_2936028100);
    if ((nodeToMove_2936028148.parent == newParent_2936028147)) {
    Temporary7 = addInt(index_2969567340(nodeToMove_2936028148), 1);
    }
    else {
      var oHEX60gensym857_2936028155 = index_2969567402(nodeToMove_2936028148, newParent_2936028147);
      if (!isSome_1191185117(oHEX60gensym857_2936028155)) Temporary8 = false; else {        var index_2936028178 = get_1191185211(oHEX60gensym857_2936028155);
        Temporary8 = true;      }    if (Temporary8) {
    Temporary7 = addInt(index_2936028178, 1);
    }
    else {
    Temporary7 = 0;
    }
    }
    var index_2936028179 = Temporary7;
    nodeHEX3D_2936017358(self_2936028100, deleteNode_2936022056(self_2936028100.document, nodeToMove_2936028148));
      var oHEX60gensym858_2936028182 = insertNode_2936019720(self_2936028100.document, newParent_2936028147, index_2936028179, nodeToMove_2936028148);
      if (!isSome_2969569114(oHEX60gensym858_2936028182)) Temporary9 = false; else {        var newNode_2936028205 = get_2969569134(oHEX60gensym858_2936028182);
        Temporary9 = true;      }    if (Temporary9) {
    nodeHEX3D_2936017358(self_2936028100, newNode_2936028205);
    if (wasEditing_2936028101) {
    var _ = tryEdit_2936021155(self_2936028100, node_2936015479(self_2936028100));
    }
    
    }
    
    }
    

  
}

function moveNodeToNextSpaceJsWrapper_2936028095(self_2936028233) {
    moveNodeToNextSpace_2936028099(self_2936028233);

  
}
editor_ast_prototype.moveNodeToNextSpace = function() { return (moveNodeToNextSpaceJsWrapper_2936028095(this));};

function popLast_2936017615(deq_2936017617) {
    var Temporary1;

  var result_2936017618 = null;

    if ((deq_2936017617.count < 1)) {
    raiseException({message: [69,109,112,116,121,32,100,101,113,117,101,46], parent: null, m_type: NTI134217749, name: null, trace: [], up: null}, "IndexDefect");
    }
    
    deq_2936017617.count = subInt(deq_2936017617.count, 1);
    deq_2936017617.tail = (subInt(deq_2936017617.tail, 1) & deq_2936017617.mask);
    Temporary1 = deq_2936017617.data[chckIndx(deq_2936017617.tail, 0, (deq_2936017617.data).length - 1)];
    deq_2936017617.data[chckIndx(deq_2936017617.tail, 0, (deq_2936017617.data).length - 1)] = genericReset(deq_2936017617.data[chckIndx(deq_2936017617.tail, 0, (deq_2936017617.data).length - 1)], NTI2969567236);
    result_2936017618 = Temporary1;

  return result_2936017618;

}

function addFirst_2936017646(deq_2936017648, item_2936017649) {
    expandIfNeeded_2936017391(deq_2936017648);
    deq_2936017648.count = addInt(deq_2936017648.count, 1);
    deq_2936017648.head = (subInt(deq_2936017648.head, 1) & deq_2936017648.mask);
    deq_2936017648.data[chckIndx(deq_2936017648.head, 0, (deq_2936017648.data).length - 1)] = item_2936017649;

  
}

function selectPrevNode_2936017545(editor_2936017546) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2936017523(editor_2936017546.selectionHistory))) break Label2;
          var node_2936017628 = popLast_2936017615(editor_2936017546.selectionHistory);
          if (((!((node_2936017628 == null)) && !((node_2936017628.parent == null))) && (base_2969567326(node_2936017628) == editor_2936017546.document.rootNode))) {
          addFirst_2936017646(editor_2936017546.selectionHistory, editor_2936017546.selectedNode);
          editor_2936017546.selectedNode = node_2936017628;
          handleSelectedNodeChanged_2936015482(editor_2936017546);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectPrev_2936028265(self_2936028266) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936028266)) {
    break BeforeRet;
    }
    
    selectPrevNode_2936017545(self_2936028266);
  };

  
}

function selectPrevJsWrapper2_2936028261(self_2936028294) {
    selectPrev_2936028265(self_2936028294);

  
}
editor_ast_prototype.selectPrev2 = function() { return (selectPrevJsWrapper2_2936028261(this));};

function selectNextNode_2936017663(editor_2936017664) {
  BeforeRet: {
    Label1: {
        Label2: while (true) {
        if (!(0 < len_2936017523(editor_2936017664.selectionHistory))) break Label2;
          var node_2936017736 = popFirst_2936017532(editor_2936017664.selectionHistory);
          if (((!((node_2936017736 == null)) && !((node_2936017736.parent == null))) && (base_2969567326(node_2936017736) == editor_2936017664.document.rootNode))) {
          addLast_2936017382(editor_2936017664.selectionHistory, editor_2936017664.selectedNode);
          editor_2936017664.selectedNode = node_2936017736;
          handleSelectedNodeChanged_2936015482(editor_2936017664);
          break BeforeRet;
          }
          
        }
    };
  };

  
}

function selectNext_2936028316(self_2936028317) {
  BeforeRet: {
    if (isEditing_2936021000(self_2936028317)) {
    break BeforeRet;
    }
    
    selectNextNode_2936017663(self_2936028317);
  };

  
}

function selectNextJsWrapper2_2936028312(self_2936028345) {
    selectNext_2936028316(self_2936028345);

  
}
editor_ast_prototype.selectNext2 = function() { return (selectNextJsWrapper2_2936028312(this));};

function len_2936028689(t_2936028692) {
  var result_2936028693 = 0;

    result_2936028693 = t_2936028692.counter;

  return result_2936028693;

}

function nuctoLowerStr(s_788531346) {
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;
          var Temporary8;

  var result_788531347 = [];

    result_788531347 = nimCopy(null, mnewString(chckRange((s_788531346).length, 0, 2147483647)), NTI33554449);
    var iHEX60gensym252_788531354 = 0;
    var resultIndexHEX60gensym252_788531355 = 0;
    var runeHEX60gensym252_788531356 = 0;
    Label1: {
        Label2: while (true) {
        if (!(iHEX60gensym252_788531354 < (s_788531346).length)) break Label2;
          if ((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] <= 127)) {
          runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 5) == 6)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 2))) {
          runeHEX60gensym252_788531356 = chckRange((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 31) << 6) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 2);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 4) == 14)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 3))) {
          runeHEX60gensym252_788531356 = chckRange(((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 15) << 12) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 3);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 3) == 30)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 4))) {
          runeHEX60gensym252_788531356 = chckRange((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 7) << 18) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 4);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 2) == 62)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 5))) {
          runeHEX60gensym252_788531356 = chckRange(((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 3) << 24) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 5);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
          if (((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] >>> 1) == 126)) {
          if ((iHEX60gensym252_788531354 <= subInt((s_788531346).length, 6))) {
          runeHEX60gensym252_788531356 = chckRange((((((((s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)] & 1) << 30) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 1), 0, (s_788531346).length - 1)] & 63) << 24)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 2), 0, (s_788531346).length - 1)] & 63) << 18)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 3), 0, (s_788531346).length - 1)] & 63) << 12)) | ((s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 4), 0, (s_788531346).length - 1)] & 63) << 6)) | (s_788531346[chckIndx(addInt(iHEX60gensym252_788531354, 5), 0, (s_788531346).length - 1)] & 63)), -2147483648, 2147483647);
          iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 6);
          }
          else {
            runeHEX60gensym252_788531356 = 65533;
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          
          }
          else {
            runeHEX60gensym252_788531356 = chckRange(s_788531346[chckIndx(iHEX60gensym252_788531354, 0, (s_788531346).length - 1)], -2147483648, 2147483647);
            iHEX60gensym252_788531354 = addInt(iHEX60gensym252_788531354, 1);
          }
          }}}}}
          runeHEX60gensym252_788531356 = nuctoLower(runeHEX60gensym252_788531356);
          var iHEX60gensym274_788531597 = runeHEX60gensym252_788531356;
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 127)) {
          if (result_788531347.length < (Temporary3 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 1), 0, 2147483647), Temporary3)) { for (var i = result_788531347.length; i < Temporary3; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary3; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(iHEX60gensym274_788531597, 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 1);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2047)) {
          if (result_788531347.length < (Temporary4 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 2), 0, 2147483647), Temporary4)) { for (var i = result_788531347.length; i < Temporary4; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary4; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 6) | 192), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 2);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 65535)) {
          if (result_788531347.length < (Temporary5 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 3), 0, 2147483647), Temporary5)) { for (var i = result_788531347.length; i < Temporary5; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary5; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 12) | 224), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 3);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2097151)) {
          if (result_788531347.length < (Temporary6 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 4), 0, 2147483647), Temporary6)) { for (var i = result_788531347.length; i < Temporary6; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary6; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 18) | 240), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 4);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 67108863)) {
          if (result_788531347.length < (Temporary7 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 5), 0, 2147483647), Temporary7)) { for (var i = result_788531347.length; i < Temporary7; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary7; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 24) | 248), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 5);
          }
          else {
          if (HEX3CHEX3DHEX25_33555522(iHEX60gensym274_788531597, 2147483647)) {
          if (result_788531347.length < (Temporary8 = chckRange(addInt(resultIndexHEX60gensym252_788531355, 6), 0, 2147483647), Temporary8)) { for (var i = result_788531347.length; i < Temporary8; ++i) result_788531347.push(0); }
         else {result_788531347.length = Temporary8; };
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 0), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 >> 30) | 252), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 1), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 24) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 2), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 18) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 3), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 12) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 4), 0, (result_788531347).length - 1)] = chckRange((((iHEX60gensym274_788531597 >> 6) & 63) | 128), 0, 255);
          result_788531347[chckIndx(addInt(resultIndexHEX60gensym252_788531355, 5), 0, (result_788531347).length - 1)] = chckRange(((iHEX60gensym274_788531597 & 63) | 128), 0, 255);
          resultIndexHEX60gensym252_788531355 = addInt(resultIndexHEX60gensym252_788531355, 6);
          }
          else {
          }
          }}}}}
        }
    };

  return result_788531347;

}

function toLower_788536559(s_788536560) {
  var result_788536561 = [];

    result_788536561 = nimCopy(null, nuctoLowerStr((s_788536560.slice(0, (s_788536560).length - 1 + 1))), NTI33554449);

  return result_788536561;

}

function mergeAlt_1979711630(a_1979711632, b_1979711633, lo_1979711634, m_1979711635, hi_1979711636, cmp_1979711639, order_1979711640) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1979711639(a_1979711632[chckIndx(m_1979711635, 0, (a_1979711632).length - 1)], a_1979711632[chckIndx(addInt(m_1979711635, 1), 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
    break BeforeRet;
    }
    
    var j_1979711641 = lo_1979711634;
    if (!((j_1979711641 <= m_1979711635))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1979711647 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1979711641 <= m_1979711635)) break Label2;
          b_1979711633[chckIndx(bb_1979711647, 0, (b_1979711633).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
          bb_1979711647 = addInt(bb_1979711647, 1);
          j_1979711641 = addInt(j_1979711641, 1);
        }
    };
    var i_1979711658 = 0;
    var k_1979711659 = lo_1979711634;
    Label3: {
        Label4: while (true) {
        if (!((k_1979711659 < j_1979711641) && (j_1979711641 <= hi_1979711636))) break Label4;
          if ((HEX2A_1023410184(cmp_1979711639(b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)], a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)]), order_1979711640) <= 0)) {
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          i_1979711658 = addInt(i_1979711658, 1);
          }
          else {
            a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = a_1979711632[chckIndx(j_1979711641, 0, (a_1979711632).length - 1)];
            j_1979711641 = addInt(j_1979711641, 1);
          }
          
          k_1979711659 = addInt(k_1979711659, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1979711659 < j_1979711641)) break Label6;
          a_1979711632[chckIndx(k_1979711659, 0, (a_1979711632).length - 1)] = b_1979711633[chckIndx(i_1979711658, 0, (b_1979711633).length - 1)];
          k_1979711659 = addInt(k_1979711659, 1);
          i_1979711658 = addInt(i_1979711658, 1);
        }
    };
  };

  
}

function sort_1979711613(a_1979711615, cmp_1979711618, order_1979711619) {
    var n_1979711623 = (a_1979711615).length;
    var b_1979711627 = newSeq_503316959(chckRange(divInt(n_1979711623, 2), 0, 2147483647));
    var s_1979711628 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1979711628 < n_1979711623)) break Label2;
          var m_1979711629 = subInt(subInt(n_1979711623, 1), s_1979711628);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1979711629)) break Label4;
                mergeAlt_1979711630(a_1979711615, b_1979711627, nimMax(addInt(subInt(m_1979711629, s_1979711628), 1), 0), m_1979711629, addInt(m_1979711629, s_1979711628), cmp_1979711618, order_1979711619);
                m_1979711629 = subInt(m_1979711629, mulInt(s_1979711628, 2));
              }
          };
          s_1979711628 = mulInt(s_1979711628, 2);
        }
    };

  
}

function sorted_1979711591(a_1979711593, cmp_1979711596, order_1979711597) {
  var result_1979711598 = [];

    result_1979711598 = nimCopy(null, newSeq_503316959(chckRange((a_1979711593).length, 0, 2147483647)), NTI503316776);
    Label1: {
      var i_1979711612 = 0;
      var colontmp__2583691902 = 0;
      colontmp__2583691902 = (a_1979711593).length - 1;
      var res_2583691903 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2583691903 <= colontmp__2583691902)) break Label3;
            i_1979711612 = res_2583691903;
            result_1979711598[chckIndx(i_1979711612, 0, (result_1979711598).length - 1)] = nimCopy(null, a_1979711593[chckIndx(i_1979711612, 0, (a_1979711593).length - 1)], NTI33554449);
            res_2583691903 = addInt(res_2583691903, 1);
          }
      };
    };
    sort_1979711613(result_1979711598, cmp_1979711596, order_1979711597);

  return result_1979711598;

}

function cmp_1979711584(x_1979711586, y_1979711587) {
  var result_1979711588 = 0;

  BeforeRet: {
    if (eqStrings(x_1979711586, y_1979711587)) {
    result_1979711588 = 0;
    break BeforeRet;
    }
    
    if ((cmpStrings(x_1979711586, y_1979711587) < 0)) {
    result_1979711588 = -1;
    break BeforeRet;
    }
    
    result_1979711588 = 1;
    break BeforeRet;
  };

  return result_1979711588;

}

function sorted_1979711579(a_1979711581, order_1979711582) {
  var result_1979711583 = [];

    result_1979711583 = nimCopy(null, sorted_1979711591(a_1979711581, cmp_1979711584, order_1979711582), NTI1979711564);

  return result_1979711583;

}

function max_33555646(x_33555647, y_33555648) {
    var Temporary1;

  var result_33555649 = 0.0;

    if (((y_33555648 <= x_33555647) || !((y_33555648 == y_33555648)))) {
    Temporary1 = x_33555647;
    }
    else {
    Temporary1 = y_33555648;
    }
    
    result_33555649 = Temporary1;

  return result_33555649;

}

function fuzzyMatchSmart_1979711572(s1_1979711573, s2_1979711574, withSubstring_1979711575) {
  var result_1979711576 = 0.0;

  BeforeRet: {
    var str1_1979711577 = [];
    var str2_1979711578 = [];
    str1_1979711577 = nimCopy(null, toLower_788536559(s1_1979711573), NTI33554449);
    str2_1979711578 = nimCopy(null, toLower_788536559(s2_1979711574), NTI33554449);
    str1_1979711577 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str1_1979711577, [32], -1), 1), [32]), NTI33554449);
    str2_1979711578 = nimCopy(null, nsuJoinSep(sorted_1979711579(nsuSplitString(str2_1979711578, [32], -1), 1), [32]), NTI33554449);
    if (eqStrings(str1_1979711577, str2_1979711578)) {
    result_1979711576 = 1.0;
    break BeforeRet;
    }
    
    if (((str1_1979711577).length == (str2_1979711578).length)) {
    result_1979711576 = fuzzyMatch_1979711568(str1_1979711577, str2_1979711578);
    break BeforeRet;
    }
    
    var shorter_1979711712 = [];
    var longer_1979711713 = [];
    if (((str1_1979711577).length < (str2_1979711578).length)) {
    shorter_1979711712 = nimCopy(null, str1_1979711577, NTI33554449);
    longer_1979711713 = nimCopy(null, str2_1979711578, NTI33554449);
    }
    else {
      shorter_1979711712 = nimCopy(null, str2_1979711578, NTI33554449);
      longer_1979711713 = nimCopy(null, str1_1979711577, NTI33554449);
    }
    
    var tmpRes_1979711714 = fuzzyMatch_1979711568(shorter_1979711712, longer_1979711713);
    if (withSubstring_1979711575) {
    var lengthDiff_1979711715 = subInt((longer_1979711713).length, (shorter_1979711712).length);
    var subMatch_1979711716 = 0.0;
    Label1: {
      var i_1979711721 = 0;
      var res_2936029300 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936029300 <= lengthDiff_1979711715)) break Label3;
            i_1979711721 = res_2936029300;
            subMatch_1979711716 = fuzzyMatch_1979711568(shorter_1979711712, HEX5BHEX5D_855639291(longer_1979711713, HEX2EHEX2E_805306418(i_1979711721, subInt(addInt(i_1979711721, (shorter_1979711712).length), 1))));
            tmpRes_1979711714 = max_33555646(tmpRes_1979711714, subMatch_1979711716);
            res_2936029300 = addInt(res_2936029300, 1);
          }
      };
    };
    }
    
    result_1979711576 = tmpRes_1979711714;
    break BeforeRet;
  };

  return result_1979711576;

}

function getCompletions_3154116644(self_3154116645, text_3154116646) {
    
function HEX3Aanonymous_3154116668(a_3154116687, b_3154116688) {
      var result_3154116693 = 0;

        result_3154116693 = cmp_3154116680(a_3154116687.score, b_3154116688.score);

      return result_3154116693;

    }

  var result_3154116647 = [];

  BeforeRet: {
    result_3154116647 = nimCopy(null, [], NTI3154116626);
    var symbols_3154116652 = computeSymbols_2986427564(ctx_2936012853, self_3154116645.document.rootNode, true);
    Label1: {
      var key_3154116657 = ({padding: 0, time: 0, fuzz: 0, count: 0});
      var symbol_3154116658 = null;
      var L_2936029291 = len_3070231826(symbols_3154116652);
      Label2: {
        var h_2936029293 = 0;
        var colontmp__2936029294 = 0;
        colontmp__2936029294 = (symbols_3154116652.data).length - 1;
        var res_2936029295 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_2936029295 <= colontmp__2936029294)) break Label4;
              h_2936029293 = res_2936029295;
              if (isFilled_1308622880(symbols_3154116652.data[chckIndx(h_2936029293, 0, (symbols_3154116652.data).length - 1)].Field0)) {
              var colontmp__2936029298 = nimCopy(null, {Field0: nimCopy(null, symbols_3154116652.data[chckIndx(h_2936029293, 0, (symbols_3154116652.data).length - 1)].Field1, NTI2181038083), Field1: symbols_3154116652.data[chckIndx(h_2936029293, 0, (symbols_3154116652.data).length - 1)].Field2}, NTI3070231514);
              key_3154116657 = nimCopy(key_3154116657, colontmp__2936029298["Field0"], NTI2181038083);
              symbol_3154116658 = colontmp__2936029298["Field1"];
              Label5: {
                if (!((symbol_3154116658.kind == 0))) {
                break Label5;
                }
                
                var score_3154116663 = fuzzyMatchSmart_1979711572(text_3154116646, symbol_3154116658.name, true);
                result_3154116647.push({kind: 0, score: score_3154116663, id: nimCopy(null, symbol_3154116658.id, NTI2181038083), nodeKind: 0, name: []});;
              };
              if (!((len_3070231826(symbols_3154116652) == L_2936029291))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1147, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_2936029295 = addInt(res_2936029295, 1);
            }
        };
      };
    };
    sort_3154116700(result_3154116647, HEX3Aanonymous_3154116668, 0);
    break BeforeRet;
  };

  return result_3154116647;

}

function updateCompletions_3154116856(self_3154116857) {
    var text_3154116858 = nsuJoinSep(content_2801796219(self_3154116857.textEditor.document), []);
    self_3154116857.completions = nimCopy(null, getCompletions_3154116644(self_3154116857, text_3154116858), NTI3154116618);
    if ((0 < (self_3154116857.completions).length)) {
    self_3154116857.selected = clamp_1660945119(self_3154116857.selected, 0, subInt((self_3154116857.completions).length, 1));
    }
    else {
      self_3154116857.selected = 0;
    }
    

  
}

function handleTextChanged_3154117050(self_3154117051) {
    updateCompletions_3154116856(self_3154117051);
    self_3154117051.selected = 0;

  
}

function pop_1291849123(s_1291849125, s_1291849125_Idx) {
  var result_1291849126 = null;

    var L_1291849130 = subInt((s_1291849125[s_1291849125_Idx]).length, 1);
    result_1291849126 = s_1291849125[s_1291849125_Idx][chckIndx(L_1291849130, 0, (s_1291849125[s_1291849125_Idx]).length - 1)];
    if (s_1291849125[s_1291849125_Idx].length < chckRange(L_1291849130, 0, 2147483647)) { for (var i = s_1291849125[s_1291849125_Idx].length ; i < chckRange(L_1291849130, 0, 2147483647) ; ++i) s_1291849125[s_1291849125_Idx].push(null); }
               else { s_1291849125[s_1291849125_Idx].length = chckRange(L_1291849130, 0, 2147483647); };

  return result_1291849126;

}

function popPopup_1291849106(self_1291849107, popup_1291849108) {
    if (((0 < (self_1291849107.popups).length) && (self_1291849107.popups[chckIndx((self_1291849107.popups).length - 1, 0, (self_1291849107.popups).length - 1)] == popup_1291849108))) {
    var _ = pop_1291849123(self_1291849107, "popups");
    }
    
    requestRender_2315255899(self_1291849107.platform, false);

  
}

function getStackTrace_33556599(e_33556600) {
  var result_33556601 = [];

    result_33556601 = nimCopy(null, e_33556600.trace, NTI33554449);

  return result_33556601;

}

function getCurrentException() {
  var result_33556459 = null;

    if (isNimException_33556456()) {
    result_33556459 = lastJSError;
    }
    

  return result_33556459;

}

function handleUnknownPopupAction_1291848824(self_1291848825, popup_1291848826, action_1291848827, arg_1291848828) {
  var result_1291848829 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848829 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848839 = [mnewString(0)];
    fmtRes_1291848839[0].push.apply(fmtRes_1291848839[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,80,111,112,117,112,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848839, 0, action_1291848827, []);
    fmtRes_1291848839[0].push.apply(fmtRes_1291848839[0], [32]);;
    formatValue_721420459(fmtRes_1291848839, 0, arg_1291848828, []);
    fmtRes_1291848839[0].push.apply(fmtRes_1291848839[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848839, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848839[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848829 = 0;
    break BeforeRet;
  };

  return result_1291848829;

}

function handleAction_3154117016(self_3154117017, action_3154117018, arg_3154117019) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_3154117020 = 0;

  BeforeRet: {
    switch (toJSStr(action_3154117018)) {
    case "accept":
      if ((self_3154117017.selected < (self_3154117017.completions).length)) {
      var Temporary1 = self_3154117017.completions[chckIndx(self_3154117017.selected, 0, (self_3154117017.completions).length - 1)];
      if (ConstSet191[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2936014311)); }
      self_3154117017.handleSymbolSelected(Temporary1.id);
      }
      
      popPopup_1291849106(self_3154117017.editor, self_3154117017);
      break;
    case "cancel":
      popPopup_1291849106(self_3154117017.editor, self_3154117017);
      break;
    case "prev":
      if (((self_3154117017.completions).length == 0)) {
      Temporary2 = 0;
      }
      else {
      Temporary2 = modInt(subInt(addInt(self_3154117017.selected, (self_3154117017.completions).length), 1), (self_3154117017.completions).length);
      }
      
      self_3154117017.selected = Temporary2;
      break;
    case "next":
      if (((self_3154117017.completions).length == 0)) {
      Temporary3 = 0;
      }
      else {
      Temporary3 = modInt(addInt(self_3154117017.selected, 1), (self_3154117017.completions).length);
      }
      
      self_3154117017.selected = Temporary3;
      break;
    default: 
      result_3154117020 = handleUnknownPopupAction_1291848824(self_3154117017.editor, self_3154117017, action_3154117018, arg_3154117019);
      break BeforeRet;
      break;
    }
    result_3154117020 = 3;
    break BeforeRet;
  };

  return result_3154117020;

}

function newGotoPopup_3154117186(editor_3154117187, document_3154117188) {
    
function HEX3Aanonymous_3154117257(doc_3154117258) {
        handleTextChanged_3154117050(popup_3154117190);

      
    }
      
function HEX3Aanonymous_3154117306(actionHEX60gensym10HEX60gensym11_3154117307, argHEX60gensym10HEX60gensym11_3154117308) {
        var result_3154117309 = 0;

        BeforeRet: {
          if (handlerHEX60gensym10_3154117294.config.handleActions) {
          var action_3154117310 = nimCopy(null, actionHEX60gensym10HEX60gensym11_3154117307, NTI33554449);
          var arg_3154117311 = nimCopy(null, argHEX60gensym10HEX60gensym11_3154117308, NTI33554449);
          var responseHEX60gensym10HEX60gensym11_3154117312 = handleAction_3154117016(popup_3154117190, action_3154117310, arg_3154117311);
          if (handlerHEX60gensym10_3154117294.config.consumeAllActions) {
          result_3154117309 = 3;
          break BeforeRet;
          }
          
          result_3154117309 = responseHEX60gensym10HEX60gensym11_3154117312;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym10_3154117294.config.consumeAllActions) {
          result_3154117309 = 3;
          break BeforeRet;
          }
          else {
            result_3154117309 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3154117309;

      }
      
function HEX3Aanonymous_3154117314(inputHEX60gensym10HEX60gensym12_3154117315) {
        var result_3154117316 = 0;

        BeforeRet: {
          if (handlerHEX60gensym10_3154117294.config.handleInputs) {
          var input_3154117317 = nimCopy(null, inputHEX60gensym10HEX60gensym12_3154117315, NTI33554449);
          result_3154117316 = 1;
          break BeforeRet;
          }
          else {
            result_3154117316 = 1;
            break BeforeRet;
          }
          
        };

        return result_3154117316;

      }

  var result_3154117189 = null;

  BeforeRet: {
    var popup_3154117190 = {editor: editor_3154117187, document: document_3154117188, m_type: NTI3154116612, textEditor: null, selected: 0, completions: [], handleSymbolSelected: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3154117190.textEditor = newTextEditor_2801811312(newTextDocument_3154117191([], []), editor_3154117187);
    setMode_2801803857(popup_3154117190.textEditor, [105,110,115,101,114,116]);
    popup_3154117190.textEditor.renderHeader = false;
    popup_3154117190.textEditor.lineNumbers = nimCopy(popup_3154117190.textEditor.lineNumbers, some_3154117232(0), NTI2801795323);
    popup_3154117190.textEditor.document.singleLine = true;
    var _ = subscribe_2801811360(popup_3154117190.textEditor.document.textChanged, HEX3Aanonymous_3154117257);
    Label1: {
      var handlerHEX60gensym10_3154117294 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym10_3154117294.config = getEventHandlerConfig_1291849153(editor_3154117187, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]);
      handlerHEX60gensym10_3154117294.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(editor_3154117187, [101,100,105,116,111,114,46,97,115,116,46,103,111,116,111]));
      handlerHEX60gensym10_3154117294.handleAction = HEX3Aanonymous_3154117306;
      handlerHEX60gensym10_3154117294.handleInput = HEX3Aanonymous_3154117314;
    };
    popup_3154117190.eventHandler = handlerHEX60gensym10_3154117294;
    updateCompletions_3154116856(popup_3154117190);
    result_3154117189 = popup_3154117190;
    break BeforeRet;
  };

  return result_3154117189;

}

function init_2264924210(self_2264924211) {
    self_2264924211.id = newEditorId_2231370043();

  
}

function subscribe_1291848988(event_1291848990, callback_1291848991) {
  var result_1291848992 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291848992 = nimCopy(result_1291848992, newId_2181038297(), NTI2181038083);
    event_1291848990.handlers.push({Field0: nimCopy(null, result_1291848992, NTI2181038083), Field1: callback_1291848991});;

  return result_1291848992;

}

function pushPopup_1291849051(self_1291849052, popup_1291849053) {
    
function HEX3Aanonymous_1291849069() {
        requestRender_2315255899(self_1291849052.platform, false);

      
    }

    init_2264924210(popup_1291849053);
    self_1291849052.popups.push(popup_1291849053);;
    var _ = subscribe_1291848988(popup_1291849053.onMarkedDirty, HEX3Aanonymous_1291849069);
    requestRender_2315255899(self_1291849052.platform, false);

  
}

function goto_2936028367(self_2936028368, where_2936028369) {
        var Temporary1;
      var Temporary2;
        var Temporary4;
        
function HEX3Aanonymous_2936028413(n_2936028416) {
          var result_2936028419 = false;

            result_2936028419 = (!((n_2936028416 == node_2936015479(self_2936028368))) && (HEX3DHEX3D_2181038320(n_2936028416.id, id_2936028412) || HEX3DHEX3D_2181038320(n_2936028416.reff, id_2936028412)));

          return result_2936028419;

        }
                  var Temporary10;
                  var Temporary11;
        var Temporary13;
                var Temporary17;
        
function HEX3Aanonymous_2936028440(n_2936028443) {
          var result_2936028446 = false;

            result_2936028446 = (!((n_2936028443 == node_2936015479(self_2936028368))) && (computeType_2986417458(ctx_2936012853, n_2936028443, true).kind == 0));

          return result_2936028446;

        }
                  var Temporary23;
                  var Temporary24;
                var Temporary28;
        
function HEX3Aanonymous_2936028466(n_2936028469) {
          var result_2936028472 = false;

            result_2936028472 = !((n_2936028469 == node_2936015479(self_2936028368)));

          return result_2936028472;

        }
                  var Temporary38;
                  var Temporary39;
                var Temporary43;
      
function HEX3Aanonymous_2936029090(id_2936029091) {
            var Temporary1;
            var Temporary2;

            var oHEX60gensym901_2936029094 = getAstNode_2986397984(ctx_2936012853, id_2936029091);
            if (!isSome_2969569114(oHEX60gensym901_2936029094)) Temporary2 = false; else {              var node_2936029117 = get_2969569134(oHEX60gensym901_2936029094);
              Temporary2 = true;            }            if (!Temporary2) Temporary1 = false; else {              Temporary1 = (base_2969567326(node_2936029117) == self_2936028368.document.rootNode);            }          if (Temporary1) {
          nodeHEX3D_2936017358(self_2936028368, node_2936029117);
          }
          

        
      }

  BeforeRet: {
    if (isEditing_2936021000(self_2936028368)) {
    break BeforeRet;
    }
    
    switch (toJSStr(where_2936028369)) {
    case "definition":
        var oHEX60gensym884_2936028372 = computeSymbol_2986424064(ctx_2936012853, node_2936015479(self_2936028368), true);
        if (!isSome_3070232117(oHEX60gensym884_2936028372)) Temporary1 = false; else {          var sym_2936028395 = get_3070232137(oHEX60gensym884_2936028372);
          Temporary1 = true;        }      if (Temporary1) {
      if (((sym_2936028395.kind == 0) && !((sym_2936028395.node == self_2936028368.document.rootNode)))) {
      var Temporary2 = sym_2936028395;
      if (ConstSet190[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'node\' is not accessible for type \'Symbol\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI3070230537)); }
      nodeHEX3D_2936017358(self_2936028368, Temporary2.node);
      }
      
      }
      
      break;
    case "next-usage":
      Label3: {
        var expr_2936028404 = node_2936015479(self_2936028368);
        var pos_2936028405 = 0;
        var _ = pos_2936028405;
        if ((expr_2936028404.kind == 1)) {
        Temporary4 = node_2936015479(self_2936028368).reff;
        }
        else {
        Temporary4 = node_2936015479(self_2936028368).id;
        }
        
      };
      var id_2936028412 = nimCopy(null, Temporary4, NTI2181038083);
      Label5: {
        var __2936028424 = 0;
        var n_2936028425 = null;
        var colontmp__2936029200 = null;
        var colontmp__2936029201 = null;
        colontmp__2936029200 = node_2936015479(self_2936028368);
        colontmp__2936029201 = HEX3Aanonymous_2936028413;
        var i_2936029202 = 0;
        Label6: {
          var __2936029204 = 0;
          var child_2936029205 = null;
          var n_2936029206 = colontmp__2936029200;
          var idx_2936029207 = -1;
          var i_2936029208 = 0;
          Label7: {
              Label8: while (true) {
              if (!true) break Label8;
                try {
                if ((idx_2936029207 == -1)) {
                __2936029204 = i_2936029208;
                child_2936029205 = n_2936029206;
                if (colontmp__2936029201(child_2936029205)) {
                __2936028424 = i_2936029202;
                n_2936028425 = child_2936029205;
                nodeHEX3D_2936017358(self_2936028368, n_2936028425);
                break Label5;
                i_2936029202 = addInt(i_2936029202, 1);
                }
                
                }
                
                if ((addInt(idx_2936029207, 1) < len_2969567320(n_2936029206))) {
                n_2936029206 = HEX5BHEX5D_2969567316(n_2936029206, addInt(idx_2936029207, 1));
                idx_2936029207 = -1;
                }
                else {
                  var oHEX60gensym74_2936029210 = next_2969567425(n_2936029206);
                  if (!isSome_2969569114(oHEX60gensym74_2936029210)) Temporary11 = false; else {                    var ne_2936029211 = get_2969569134(oHEX60gensym74_2936029210);
                    Temporary11 = true;                  }                  if (!Temporary11) Temporary10 = false; else {                    Temporary10 = !((n_2936029206 == null));                  }                if (Temporary10) {
                n_2936029206 = ne_2936029211;
                idx_2936029207 = -1;
                }
                else {
                if (((!((n_2936029206.parent == null)) && !((n_2936029206 == null))) && !((n_2936029206.parent == null)))) {
                idx_2936029207 = index_2969567340(n_2936029206);
                n_2936029206 = n_2936029206.parent;
                }
                else {
                  break Label7;
                }
                }}
                } finally {
                i_2936029208 = addInt(i_2936029208, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-usage":
      Label12: {
        var expr_2936028426 = node_2936015479(self_2936028368);
        var pos_2936028427 = 0;
        var _ = pos_2936028427;
        if ((expr_2936028426.kind == 1)) {
        Temporary13 = node_2936015479(self_2936028368).reff;
        }
        else {
        Temporary13 = node_2936015479(self_2936028368).id;
        }
        
      };
      var id_2936028434 = nimCopy(null, Temporary13, NTI2181038083);
      Label14: {
        var n_2936028435 = null;
        var colontmp__2936029214 = null;
        colontmp__2936029214 = node_2936015479(self_2936028368);
        var idx_2936029215 = 0;
        var n_2936029216 = colontmp__2936029214;
        Label15: {
            Label16: while (true) {
            if (!!((n_2936029216 == null))) break Label16;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936029216), 1)), subInt(idx_2936029215, 1))) {
              n_2936029216 = HEX5BHEX5D_2969567316(n_2936029216, subInt(idx_2936029215, 1));
              idx_2936029215 = len_2969567320(n_2936029216);
              }
              else {
                var oHEX60gensym93_2936029218 = prev_2969567471(n_2936029216);
                if (!isSome_2969569114(oHEX60gensym93_2936029218)) Temporary17 = false; else {                  var ne_2936029219 = get_2969569134(oHEX60gensym93_2936029218);
                  Temporary17 = true;                }              if (Temporary17) {
              n_2936028435 = n_2936029216;
              if ((!((n_2936028435 == node_2936015479(self_2936028368))) && (HEX3DHEX3D_2181038320(n_2936028435.id, id_2936028434) || HEX3DHEX3D_2181038320(n_2936028435.reff, id_2936028434)))) {
              nodeHEX3D_2936017358(self_2936028368, n_2936028435);
              break Label14;
              }
              
              n_2936029216 = ne_2936029219;
              idx_2936029215 = len_2969567320(n_2936029216);
              }
              else {
                n_2936028435 = n_2936029216;
                if ((!((n_2936028435 == node_2936015479(self_2936028368))) && (HEX3DHEX3D_2181038320(n_2936028435.id, id_2936028434) || HEX3DHEX3D_2181038320(n_2936028435.reff, id_2936028434)))) {
                nodeHEX3D_2936017358(self_2936028368, n_2936028435);
                break Label14;
                }
                
                idx_2936029215 = index_2969567340(n_2936029216);
                n_2936029216 = n_2936029216.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error":
      Label18: {
        var __2936028455 = 0;
        var n_2936028456 = null;
        var colontmp__2936029221 = null;
        var colontmp__2936029222 = null;
        colontmp__2936029221 = node_2936015479(self_2936028368);
        colontmp__2936029222 = HEX3Aanonymous_2936028440;
        var i_2936029223 = 0;
        Label19: {
          var __2936029225 = 0;
          var child_2936029226 = null;
          var n_2936029227 = colontmp__2936029221;
          var idx_2936029228 = -1;
          var i_2936029229 = 0;
          Label20: {
              Label21: while (true) {
              if (!true) break Label21;
                try {
                if ((idx_2936029228 == -1)) {
                __2936029225 = i_2936029229;
                child_2936029226 = n_2936029227;
                if (colontmp__2936029222(child_2936029226)) {
                __2936028455 = i_2936029223;
                n_2936028456 = child_2936029226;
                nodeHEX3D_2936017358(self_2936028368, n_2936028456);
                break Label18;
                i_2936029223 = addInt(i_2936029223, 1);
                }
                
                }
                
                if ((addInt(idx_2936029228, 1) < len_2969567320(n_2936029227))) {
                n_2936029227 = HEX5BHEX5D_2969567316(n_2936029227, addInt(idx_2936029228, 1));
                idx_2936029228 = -1;
                }
                else {
                  var oHEX60gensym74_2936029231 = next_2969567425(n_2936029227);
                  if (!isSome_2969569114(oHEX60gensym74_2936029231)) Temporary24 = false; else {                    var ne_2936029232 = get_2969569134(oHEX60gensym74_2936029231);
                    Temporary24 = true;                  }                  if (!Temporary24) Temporary23 = false; else {                    Temporary23 = !((n_2936029227 == null));                  }                if (Temporary23) {
                n_2936029227 = ne_2936029232;
                idx_2936029228 = -1;
                }
                else {
                if (((!((n_2936029227.parent == null)) && !((n_2936029227 == null))) && !((n_2936029227.parent == null)))) {
                idx_2936029228 = index_2969567340(n_2936029227);
                n_2936029227 = n_2936029227.parent;
                }
                else {
                  break Label20;
                }
                }}
                } finally {
                i_2936029229 = addInt(i_2936029229, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error":
      Label25: {
        var n_2936028457 = null;
        var colontmp__2936029234 = null;
        colontmp__2936029234 = node_2936015479(self_2936028368);
        var idx_2936029235 = 0;
        var n_2936029236 = colontmp__2936029234;
        Label26: {
            Label27: while (true) {
            if (!!((n_2936029236 == null))) break Label27;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936029236), 1)), subInt(idx_2936029235, 1))) {
              n_2936029236 = HEX5BHEX5D_2969567316(n_2936029236, subInt(idx_2936029235, 1));
              idx_2936029235 = len_2969567320(n_2936029236);
              }
              else {
                var oHEX60gensym93_2936029238 = prev_2969567471(n_2936029236);
                if (!isSome_2969569114(oHEX60gensym93_2936029238)) Temporary28 = false; else {                  var ne_2936029239 = get_2969569134(oHEX60gensym93_2936029238);
                  Temporary28 = true;                }              if (Temporary28) {
              n_2936028457 = n_2936029236;
              if ((!((n_2936028457 == node_2936015479(self_2936028368))) && (computeType_2986417458(ctx_2936012853, n_2936028457, true).kind == 0))) {
              nodeHEX3D_2936017358(self_2936028368, n_2936028457);
              break Label25;
              }
              
              n_2936029236 = ne_2936029239;
              idx_2936029235 = len_2969567320(n_2936029236);
              }
              else {
                n_2936028457 = n_2936029236;
                if ((!((n_2936028457 == node_2936015479(self_2936028368))) && (computeType_2986417458(ctx_2936012853, n_2936028457, true).kind == 0))) {
                nodeHEX3D_2936017358(self_2936028368, n_2936028457);
                break Label25;
                }
                
                idx_2936029235 = index_2969567340(n_2936029236);
                n_2936029236 = n_2936029236.parent;
              }
              }
            }
        };
      };
      break;
    case "next-error-diagnostic":
      Label29: {
        var __2936028477 = 0;
        var n_2936028478 = null;
        var colontmp__2936029253 = null;
        var colontmp__2936029254 = null;
        colontmp__2936029253 = node_2936015479(self_2936028368);
        colontmp__2936029254 = HEX3Aanonymous_2936028466;
        var i_2936029255 = 0;
        Label30: {
          var __2936029257 = 0;
          var child_2936029258 = null;
          var n_2936029259 = colontmp__2936029253;
          var idx_2936029260 = -1;
          var i_2936029261 = 0;
          Label31: {
              Label32: while (true) {
              if (!true) break Label32;
                try {
                if ((idx_2936029260 == -1)) {
                __2936029257 = i_2936029261;
                child_2936029258 = n_2936029259;
                if (colontmp__2936029254(child_2936029258)) {
                __2936028477 = i_2936029255;
                n_2936028478 = child_2936029258;
                if (contains_2986447827(ctx_2936012853.diagnosticsPerNode, n_2936028478.id)) {
                var found_2936028542 = false;
                Label34: {
                  var diags_2936028926 = [];
                  var colontmp__2936029242 = ({data: [], counter: 0});
                  colontmp__2936029242 = nimCopy(colontmp__2936029242, HEX5BHEX5D_2986444469(ctx_2936012853.diagnosticsPerNode, n_2936028478.id).queries, NTI2986344462);
                  var L_2936029247 = len_2936028689(colontmp__2936029242);
                  Label35: {
                    var h_2936029249 = 0;
                    var colontmp__2936029250 = 0;
                    colontmp__2936029250 = (colontmp__2936029242.data).length - 1;
                    var res_2936029251 = 0;
                    Label36: {
                        Label37: while (true) {
                        if (!(res_2936029251 <= colontmp__2936029250)) break Label37;
                          h_2936029249 = res_2936029251;
                          if (isFilled_1308622880(colontmp__2936029242.data[chckIndx(h_2936029249, 0, (colontmp__2936029242.data).length - 1)].Field0)) {
                          diags_2936028926 = colontmp__2936029242.data[chckIndx(h_2936029249, 0, (colontmp__2936029242.data).length - 1)]["Field2"];
                          if ((0 < (diags_2936028926).length)) {
                          found_2936028542 = true;
                          }
                          
                          if (!((len_2936028689(colontmp__2936029242) == L_2936029247))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2936029251 = addInt(res_2936029251, 1);
                        }
                    };
                  };
                };
                if (found_2936028542) {
                nodeHEX3D_2936017358(self_2936028368, n_2936028478);
                }
                
                break Label29;
                }
                
                i_2936029255 = addInt(i_2936029255, 1);
                }
                
                }
                
                if ((addInt(idx_2936029260, 1) < len_2969567320(n_2936029259))) {
                n_2936029259 = HEX5BHEX5D_2969567316(n_2936029259, addInt(idx_2936029260, 1));
                idx_2936029260 = -1;
                }
                else {
                  var oHEX60gensym74_2936029263 = next_2969567425(n_2936029259);
                  if (!isSome_2969569114(oHEX60gensym74_2936029263)) Temporary39 = false; else {                    var ne_2936029264 = get_2969569134(oHEX60gensym74_2936029263);
                    Temporary39 = true;                  }                  if (!Temporary39) Temporary38 = false; else {                    Temporary38 = !((n_2936029259 == null));                  }                if (Temporary38) {
                n_2936029259 = ne_2936029264;
                idx_2936029260 = -1;
                }
                else {
                if (((!((n_2936029259.parent == null)) && !((n_2936029259 == null))) && !((n_2936029259.parent == null)))) {
                idx_2936029260 = index_2969567340(n_2936029259);
                n_2936029259 = n_2936029259.parent;
                }
                else {
                  break Label31;
                }
                }}
                } finally {
                i_2936029261 = addInt(i_2936029261, 1);
                }
              }
          };
        };
      };
      break;
    case "prev-error-diagnostic":
      Label40: {
        var n_2936028930 = null;
        var colontmp__2936029275 = null;
        colontmp__2936029275 = node_2936015479(self_2936028368);
        var idx_2936029276 = 0;
        var n_2936029277 = colontmp__2936029275;
        Label41: {
            Label42: while (true) {
            if (!!((n_2936029277 == null))) break Label42;
              if (contains_1191183809(HEX2EHEX2E_805306418(0, subInt(len_2969567320(n_2936029277), 1)), subInt(idx_2936029276, 1))) {
              n_2936029277 = HEX5BHEX5D_2969567316(n_2936029277, subInt(idx_2936029276, 1));
              idx_2936029276 = len_2969567320(n_2936029277);
              }
              else {
                var oHEX60gensym93_2936029279 = prev_2969567471(n_2936029277);
                if (!isSome_2969569114(oHEX60gensym93_2936029279)) Temporary43 = false; else {                  var ne_2936029280 = get_2969569134(oHEX60gensym93_2936029279);
                  Temporary43 = true;                }              if (Temporary43) {
              n_2936028930 = n_2936029277;
              Label44: {
                if ((n_2936028930 == node_2936015479(self_2936028368))) {
                break Label44;
                }
                
                if (contains_2986447827(ctx_2936012853.diagnosticsPerNode, n_2936028930.id)) {
                var found_2936028998 = false;
                Label45: {
                  var diags_2936029085 = [];
                  var colontmp__2936029268 = ({data: [], counter: 0});
                  colontmp__2936029268 = nimCopy(colontmp__2936029268, HEX5BHEX5D_2986444469(ctx_2936012853.diagnosticsPerNode, n_2936028930.id).queries, NTI2986344462);
                  var L_2936029269 = len_2936028689(colontmp__2936029268);
                  Label46: {
                    var h_2936029271 = 0;
                    var colontmp__2936029272 = 0;
                    colontmp__2936029272 = (colontmp__2936029268.data).length - 1;
                    var res_2936029273 = 0;
                    Label47: {
                        Label48: while (true) {
                        if (!(res_2936029273 <= colontmp__2936029272)) break Label48;
                          h_2936029271 = res_2936029273;
                          if (isFilled_1308622880(colontmp__2936029268.data[chckIndx(h_2936029271, 0, (colontmp__2936029268.data).length - 1)].Field0)) {
                          diags_2936029085 = colontmp__2936029268.data[chckIndx(h_2936029271, 0, (colontmp__2936029268.data).length - 1)]["Field2"];
                          if ((0 < (diags_2936029085).length)) {
                          found_2936028998 = true;
                          }
                          
                          if (!((len_2936028689(colontmp__2936029268) == L_2936029269))) {
                          failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                          }
                          
                          }
                          
                          res_2936029273 = addInt(res_2936029273, 1);
                        }
                    };
                  };
                };
                if (found_2936028998) {
                nodeHEX3D_2936017358(self_2936028368, n_2936028930);
                break Label40;
                }
                
                }
                
              };
              n_2936029277 = ne_2936029280;
              idx_2936029276 = len_2969567320(n_2936029277);
              }
              else {
                n_2936028930 = n_2936029277;
                Label49: {
                  if ((n_2936028930 == node_2936015479(self_2936028368))) {
                  break Label49;
                  }
                  
                  if (contains_2986447827(ctx_2936012853.diagnosticsPerNode, n_2936028930.id)) {
                  var found_2936029281 = false;
                  Label50: {
                    var diags_2936029282 = [];
                    var colontmp__2936029283 = ({data: [], counter: 0});
                    colontmp__2936029283 = nimCopy(colontmp__2936029283, HEX5BHEX5D_2986444469(ctx_2936012853.diagnosticsPerNode, n_2936028930.id).queries, NTI2986344462);
                    var L_2936029284 = len_2936028689(colontmp__2936029283);
                    Label51: {
                      var h_2936029285 = 0;
                      var colontmp__2936029286 = 0;
                      colontmp__2936029286 = (colontmp__2936029283.data).length - 1;
                      var res_2936029287 = 0;
                      Label52: {
                          Label53: while (true) {
                          if (!(res_2936029287 <= colontmp__2936029286)) break Label53;
                            h_2936029285 = res_2936029287;
                            if (isFilled_1308622880(colontmp__2936029283.data[chckIndx(h_2936029285, 0, (colontmp__2936029283.data).length - 1)].Field0)) {
                            diags_2936029282 = colontmp__2936029283.data[chckIndx(h_2936029285, 0, (colontmp__2936029283.data).length - 1)]["Field2"];
                            if ((0 < (diags_2936029282).length)) {
                            found_2936029281 = true;
                            }
                            
                            if (!((len_2936028689(colontmp__2936029283) == L_2936029284))) {
                            failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
                            }
                            
                            }
                            
                            res_2936029287 = addInt(res_2936029287, 1);
                          }
                      };
                    };
                  };
                  if (found_2936029281) {
                  nodeHEX3D_2936017358(self_2936028368, n_2936028930);
                  break Label40;
                  }
                  
                  }
                  
                };
                idx_2936029276 = index_2969567340(n_2936029277);
                n_2936029277 = n_2936029277.parent;
              }
              }
            }
        };
      };
      break;
    case "symbol":
      var popup_2936029089 = newGotoPopup_3154117186(self_2936028368.editor, self_2936028368.document);
      popup_2936029089.handleSymbolSelected = HEX3Aanonymous_2936029090;
      pushPopup_1291849051(self_2936028368.editor, popup_2936029089);
      break;
    default: 
      break;
    }
  };

  
}

function gotoJsWrapper_2936028363(self_2936029177, where_2936029178) {
    goto_2936028367(self_2936029177, where_2936029178);

  
}
editor_ast_prototype.goto = function(where_ /* : string */) { return (gotoJsWrapper_2936028363(this, where_ == undefined ? undefined : cstrToNimstr(where_)));};

function color_2449473569(c_2449473570) {
  var result_2449473571 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473571.r = (c_2449473570.r / 255.0);
    result_2449473571.g = (c_2449473570.g / 255.0);
    result_2449473571.b = (c_2449473570.b / 255.0);
    result_2449473571.a = 1.0;

  return result_2449473571;

}

function addOutput_2936029344(self_2936029346, line_2936029347, color_2936029348) {
    if ((1500 <= (self_2936029346.lines).length)) {
    delete_2936013613(self_2936029346, "lines", HEX2EHEX2E_805306418(0, subInt((self_2936029346.lines).length, 1000)));
    }
    
    if ((0 < self_2936029346.scroll)) {
    self_2936029346.scroll = addInt(self_2936029346.scroll, 1);
    }
    
    self_2936029346.lines.push({Field0: nimCopy(null, line_2936029347, NTI33554449), Field1: color_2449473569(color_2936029348)});;

  
}

function rgb_2365587543(r_2365587544, g_2365587545, b_2365587546) {
  var result_2365587547 = ({r: 0, g: 0, b: 0});

    result_2365587547 = nimCopy(result_2365587547, {r: r_2365587544, g: g_2365587545, b: b_2365587546}, NTI2365587460);

  return result_2365587547;

}

function addFloat_33557340(result_33557342, result_33557342_Idx, x_33557343) {
    add_33556386(result_33557342, result_33557342_Idx, nimFloatToString_385876087(x_33557343));

  
}

function HEX24_33557336(x_33557338) {
  var result_33557339 = [[]];

    addFloat_33557340(result_33557339, 0, x_33557338);

  return result_33557339[0];

}

function nsuformatBiggestFloat(f_855640114, format_855640115, precision_855640116, decimalSep_855640117) {
  var result_855640118 = [];

    var precision_855640119 = precision_855640116;
    if ((precision_855640119 == -1)) {
    precision_855640119 = 6;
    }
    
    var res_855640120 = null;
    switch (format_855640115) {
    case 0:
      res_855640120 = f_855640114.toString();
      break;
    case 1:
      res_855640120 = f_855640114.toFixed(precision_855640119);
      break;
    case 2:
      res_855640120 = f_855640114.toExponential(precision_855640119);
      break;
    }
    result_855640118 = nimCopy(null, cstrToNimstr(res_855640120), NTI33554449);
    if (((1.0 / f_855640114) == -Infinity)) {
    result_855640118 = nimCopy(null, ([45] || []).concat(cstrToNimstr(res_855640120) || []), NTI33554449);
    }
    
    Label1: {
      var i_855640125 = 0;
      var colontmp__2936029574 = 0;
      colontmp__2936029574 = (result_855640118).length;
      var i_2936029575 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_2936029575 < colontmp__2936029574)) break Label3;
            i_855640125 = i_2936029575;
            if ((ConstSet192[result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)]] != undefined)) {
            result_855640118[chckIndx(i_855640125, 0, (result_855640118).length - 1)] = decimalSep_855640117;
            }
            
            i_2936029575 = addInt(i_2936029575, 1);
          }
      };
    };

  return result_855640118;

}

function nsuToUpperAsciiChar(c_855638119) {
  var result_855638120 = 0;

    if ((ConstSet194[c_855638119] != undefined)) {
    result_855638120 = (c_855638119 ^ 32);
    }
    else {
      result_855638120 = c_855638119;
    }
    

  return result_855638120;

}

function nsuToUpperAsciiStr(s_855638126) {
  var result_855638127 = [];

    result_855638127 = nimCopy(null, mnewString(chckRange((s_855638126).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym11_855638133 = 0;
      var colontmp__2936029578 = 0;
      colontmp__2936029578 = subInt((s_855638126).length, 1);
      var res_2936029579 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_2936029579 <= colontmp__2936029578)) break Label3;
            iHEX60gensym11_855638133 = res_2936029579;
            result_855638127[chckIndx(iHEX60gensym11_855638133, 0, (result_855638127).length - 1)] = nsuToUpperAsciiChar(s_855638126[chckIndx(iHEX60gensym11_855638133, 0, (s_855638126).length - 1)]);
            res_2936029579 = addInt(res_2936029579, 1);
          }
      };
    };

  return result_855638127;

}

function formatValue_2332033664(result_2332033666, result_2332033666_Idx, value_2332033667, specifier_2332033668) {
    var Temporary1;

  BeforeRet: {
    if (((specifier_2332033668).length == 0)) {
    result_2332033666[result_2332033666_Idx].push.apply(result_2332033666[result_2332033666_Idx], HEX24_33557336(value_2332033667));;
    break BeforeRet;
    }
    
    var spec_2332033672 = parseStandardFormatSpecifier_721420346(specifier_2332033668, 0, false);
    var fmode_2332033673 = 0;
    switch (spec_2332033672.typ) {
    case 101:
    case 69:
      fmode_2332033673 = 2;
      break;
    case 102:
    case 70:
      fmode_2332033673 = 1;
      break;
    case 103:
    case 71:
      fmode_2332033673 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_2332033672.typ]), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_2332033675 = [nsuformatBiggestFloat(value_2332033667, fmode_2332033673, chckRange(spec_2332033672.precision, -1, 32), 46)];
    var sign_2332033676 = false;
    if ((0.0 <= value_2332033667)) {
    if (!((spec_2332033672.sign == 45))) {
    sign_2332033676 = true;
    if ((value_2332033667 == 0.0)) {
    if (((1.0 / value_2332033667) == Infinity)) {
    insert_33557745(f_2332033675, 0, nimCharToStr(spec_2332033672.sign), 0);
    }
    
    }
    else {
    insert_33557745(f_2332033675, 0, nimCharToStr(spec_2332033672.sign), 0);
    }
    
    }
    
    }
    else {
      sign_2332033676 = true;
    }
    
    if (spec_2332033672.padWithZero) {
    var signStr_2332033677 = [];
    if (sign_2332033676) {
    signStr_2332033677 = nimCopy(null, nimCharToStr(f_2332033675[0][chckIndx(0, 0, (f_2332033675[0]).length - 1)]), NTI33554449);
    f_2332033675[0] = nimCopy(null, HEX5BHEX5D_855639319(f_2332033675[0], HEX2EHEX2E_1040187488(1, 1)), NTI33554449);
    }
    
    var toFill_2332033699 = subInt(subInt(spec_2332033672.minimumWidth, (f_2332033675[0]).length), (sign_2332033676 ? 1 : 0));
    if ((0 < toFill_2332033699)) {
    f_2332033675[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_2332033699, 0, 2147483647)) || []).concat(f_2332033675[0] || []), NTI33554449);
    }
    
    if (sign_2332033676) {
    f_2332033675[0] = nimCopy(null, (signStr_2332033677 || []).concat(f_2332033675[0] || []), NTI33554449);
    }
    
    }
    
    if ((spec_2332033672.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_2332033672.align;
    }
    
    var align_2332033700 = Temporary1;
    var res_2332033701 = alignString_721420308(f_2332033675[0], spec_2332033672.minimumWidth, align_2332033700, spec_2332033672.fill);
    if ((ConstSet193[spec_2332033672.typ] != undefined)) {
    result_2332033666[result_2332033666_Idx].push.apply(result_2332033666[result_2332033666_Idx], nsuToUpperAsciiStr(res_2332033701));;
    }
    else {
    result_2332033666[result_2332033666_Idx].push.apply(result_2332033666[result_2332033666_Idx], res_2332033701);;
    }
    
  };

  
}

function ms_2281701425(nanos_2281701426) {
  var result_2281701427 = 0.0;

    result_2281701427 = (nanos_2281701426 / 1000000.0);

  return result_2281701427;

}

function runSelectedFunction_2936029309(self_2936029310) {
          var Temporary3;
            var Temporary4;
          var Temporary5;

  BeforeRet: {
    if (isEditing_2936021000(self_2936029310)) {
    break BeforeRet;
    }
    
    var node_2936029311 = node_2936015479(self_2936029310);
    Label1: {
        Label2: while (true) {
        if (!!((node_2936029311.parent == null))) break Label2;
          if (((node_2936029311.parent == self_2936029310.document.rootNode) && (node_2936029311.kind == 8))) {
          var timer_2936029324 = startTimer_2281701428();
          var fmtRes_2936029329 = [mnewString(0)];
          fmtRes_2936029329[0].push.apply(fmtRes_2936029329[0], [91,97,115,116,101,100,105,116,111,114,93,32,69,120,101,99,117,116,105,110,103,32,99,97,108,108,32]);;
          formatValue_3070231363(fmtRes_2936029329, 0, node_2936029311, []);
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936029329[0], NTI33554449)]);
          updateNode_2986456560(ctx_2936012853, node_2936029311);
          var result_2936029335 = computeValue_2986420934(ctx_2936012853, node_2936029311, true);
          if (!((result_2936029335.kind == 1))) {
          if ((result_2936029335.kind == 0)) {
          Temporary3 = rgb_2365587543(255, 50, 50);
          }
          else {
          Temporary3 = rgb_2365587543(50, 255, 50);
          }
          
          addOutput_2936029344(executionOutput_2936012852[0], HEX24_3070231271(result_2936029335), Temporary3);
          }
          
          var fmtRes_2936029376 = [mnewString(0)];
          fmtRes_2936029376[0].push.apply(fmtRes_2936029376[0], [91,97,115,116,101,100,105,116,111,114,93,32]);;
          formatValue_3070231363(fmtRes_2936029376, 0, node_2936029311, []);
          fmtRes_2936029376[0].push.apply(fmtRes_2936029376[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3120563615(fmtRes_2936029376, 0, result_2936029335, []);
          fmtRes_2936029376[0].push.apply(fmtRes_2936029376[0], [32,40,84,111,111,107,32]);;
          formatValue_2332033664(fmtRes_2936029376, 0, ms_2281701425(elapsed_2281701439(timer_2936029324)), []);
          fmtRes_2936029376[0].push.apply(fmtRes_2936029376[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936029376[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if ((((node_2936029311.kind == 4) && (0 < len_2969567320(node_2936029311))) && (HEX5BHEX5D_2969567316(node_2936029311, 0).kind == 11))) {
          var functionType_2936029400 = computeType_2986417458(ctx_2936012853, node_2936029311, true);
          if ((functionType_2936029400.kind == 0)) {
          var fmtRes_2936029409 = [mnewString(0)];
          fmtRes_2936029409[0].push.apply(fmtRes_2936029409[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,102,97,105,108,101,100,32,116,111,32,99,111,109,112,105,108,101,58,32]);;
          formatValue_3070231363(fmtRes_2936029409, 0, node_2936029311, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936029409[0], NTI33554449)]);
          break BeforeRet;
          }
          
          if (!((functionType_2936029400.kind == 4))) {
          var fmtRes_2936029423 = [mnewString(0)];
          fmtRes_2936029423[0].push.apply(fmtRes_2936029423[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32,104,97,115,32,119,114,111,110,103,32,116,121,112,101,58,32]);;
          formatValue_3070231363(fmtRes_2936029423, 0, node_2936029311, []);
          fmtRes_2936029423[0].push.apply(fmtRes_2936029423[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2986452532(fmtRes_2936029423, 0, functionType_2936029400, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936029423[0], NTI33554449)]);
          break BeforeRet;
          }
          
            var Temporary4 = functionType_2936029400;
            if (ConstSet195[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'paramTypes\' is not accessible for type \'Type\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI3070230531)); }
          if ((0 < (Temporary4.paramTypes).length)) {
          var fmtRes_2936029441 = [mnewString(0)];
          fmtRes_2936029441[0].push.apply(fmtRes_2936029441[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,110,39,116,32,99,97,108,108,32,102,117,110,99,116,105,111,110,32,119,105,116,104,32,97,114,103,117,109,101,110,116,115,32,100,105,114,101,99,116,108,121,32]);;
          formatValue_3070231363(fmtRes_2936029441, 0, node_2936029311, []);
          fmtRes_2936029441[0].push.apply(fmtRes_2936029441[0], [44,32,116,121,112,101,32,105,115,32]);;
          formatValue_2986452532(fmtRes_2936029441, 0, functionType_2936029400, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936029441[0], NTI33554449)]);
          break BeforeRet;
          }
          
          var fmtRes_2936029456 = [mnewString(0)];
          fmtRes_2936029456[0].push.apply(fmtRes_2936029456[0], [91,97,115,116,101,100,105,116,111,114,93,32,67,97,108,108,105,110,103,32,102,117,110,99,116,105,111,110,32]);;
          formatValue_3070231363(fmtRes_2936029456, 0, node_2936029311, []);
          fmtRes_2936029456[0].push.apply(fmtRes_2936029456[0], [32,40]);;
          formatValue_2986452532(fmtRes_2936029456, 0, functionType_2936029400, []);
          fmtRes_2936029456[0].push.apply(fmtRes_2936029456[0], [41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936029456[0], NTI33554449)]);
          var timer_2936029467 = startTimer_2281701428();
          var maxLoopIterations_2936029477 = getOption_2801809148(self_2936029310.editor, [97,115,116,46,109,97,120,45,108,111,111,112,45,105,116,101,114,97,116,105,111,110,115], 1000);
          var fec_2936029485 = newFunctionExecutionContext_2986414175(ctx_2936012853, {node: HEX5BHEX5D_2969567316(node_2936029311, 0), arguments: [], maxLoopIterations: some_1191184367(maxLoopIterations_2936029477), id: ({padding: 0, time: 0, fuzz: 0, count: 0})});
          var result_2936029486 = computeFunctionExecution_2986437243(ctx_2936012853, fec_2936029485);
          if (!((result_2936029486.kind == 1))) {
          if ((result_2936029486.kind == 0)) {
          Temporary5 = rgb_2365587543(255, 50, 50);
          }
          else {
          Temporary5 = rgb_2365587543(50, 255, 50);
          }
          
          addOutput_2936029344(executionOutput_2936012852[0], HEX24_3070231271(result_2936029486), Temporary5);
          }
          
          var fmtRes_2936029504 = [mnewString(0)];
          fmtRes_2936029504[0].push.apply(fmtRes_2936029504[0], [91,97,115,116,101,100,105,116,111,114,93,32,70,117,110,99,116,105,111,110,32]);;
          formatValue_3070231363(fmtRes_2936029504, 0, node_2936029311, []);
          fmtRes_2936029504[0].push.apply(fmtRes_2936029504[0], [32,114,101,116,117,114,110,101,100,32]);;
          formatValue_3120563615(fmtRes_2936029504, 0, result_2936029486, []);
          fmtRes_2936029504[0].push.apply(fmtRes_2936029504[0], [32,40,84,111,111,107,32]);;
          formatValue_2332033664(fmtRes_2936029504, 0, ms_2281701425(elapsed_2281701439(timer_2936029467)), []);
          fmtRes_2936029504[0].push.apply(fmtRes_2936029504[0], [109,115,41]);;
          log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936029504[0], NTI33554449)]);
          break BeforeRet;
          }
          
          node_2936029311 = node_2936029311.parent;
        }
    };
    var fmtRes_2936029524 = [mnewString(0)];
    fmtRes_2936029524[0].push.apply(fmtRes_2936029524[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,32,102,117,110,99,116,105,111,110,32,111,114,32,99,97,108,108,32,102,111,117,110,100,32,116,111,32,101,120,101,99,117,116,101,32,102,111,114,32]);;
    formatValue_3070231363(fmtRes_2936029524, 0, node_2936015479(self_2936029310), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936029524[0], NTI33554449)]);
  };

  
}

function runSelectedFunctionJsWrapper_2936029305(self_2936029557) {
    runSelectedFunction_2936029309(self_2936029557);

  
}
editor_ast_prototype.runSelectedFunction = function() { return (runSelectedFunctionJsWrapper_2936029305(this));};

function toggleOption_2936029587(self_2936029588, name_2936029589) {
    switch (toJSStr(name_2936029589)) {
    case "logging":
      ctx_2936012853.enableLogging = !(ctx_2936012853.enableLogging);
      break;
    default: 
      break;
    }

  
}

function toggleOptionJsWrapper_2936029583(self_2936029618, name_2936029619) {
    toggleOption_2936029587(self_2936029618, name_2936029619);

  
}
editor_ast_prototype.toggleOption = function(name_ /* : string */) { return (toggleOptionJsWrapper_2936029583(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function runLastCommand_2936029649(self_2936029650, which_2936029651) {
    switch (toJSStr(which_2936029651)) {
    case "":
      var _ = handleAction_2936029639(self_2936029650, self_2936029650.lastCommand["Field0"], self_2936029650.lastCommand["Field1"]);
      break;
    case "move":
      var _ = handleAction_2936029639(self_2936029650, self_2936029650.lastMoveCommand["Field0"], self_2936029650.lastMoveCommand["Field1"]);
      break;
    case "edit":
      var _ = handleAction_2936029639(self_2936029650, self_2936029650.lastEditCommand["Field0"], self_2936029650.lastEditCommand["Field1"]);
      break;
    case "other":
      var _ = handleAction_2936029639(self_2936029650, self_2936029650.lastOtherCommand["Field0"], self_2936029650.lastOtherCommand["Field1"]);
      break;
    default: 
      break;
    }

  
}

function runLastCommandJsWrapper_2936029645(self_2936029680, which_2936029681) {
    runLastCommand_2936029649(self_2936029680, which_2936029681);

  
}
editor_ast_prototype.runLastCommand = function(which_ /* : string */) { return (runLastCommandJsWrapper_2936029645(this, which_ == undefined ? undefined : cstrToNimstr(which_)));};

function HEX5BHEX5D_3070230740(node_3070230741, index_3070230742) {
  var result_3070230743 = null;

  BeforeRet: {
    result_3070230743 = node_3070230741.children[chckIndx(index_3070230742, 0, (node_3070230741.children).length - 1)];
    break BeforeRet;
  };

  return result_3070230743;

}

function none_3070230773() {
  var result_3070230779 = ({val: null});

  return result_3070230779;

}

function none_3070230770() {
  var result_3070230772 = ({val: null});

    result_3070230772 = nimCopy(result_3070230772, none_3070230773(), NTI3070230680);

  return result_3070230772;

}

function index_3070230687(node_3070230688) {
  var result_3070230689 = 0;

  BeforeRet: {
    if ((node_3070230688.parent == null)) {
    result_3070230689 = -1;
    break BeforeRet;
    }
    
    result_3070230689 = 0;
    Label1: {
      var i_3070230716 = null;
      var i_2936030179 = 0;
      var L_2936030180 = (node_3070230688.parent.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936030179 < L_2936030180)) break Label3;
            i_3070230716 = node_3070230688.parent.children[chckIndx(i_2936030179, 0, (node_3070230688.parent.children).length - 1)];
            if (HEX3DHEX3D_2181038320(i_3070230716.id, node_3070230688.id)) {
            break BeforeRet;
            }
            
            result_3070230689 = addInt(result_3070230689, 1);
            i_2936030179 = addInt(i_2936030179, 1);
            if (!(((node_3070230688.parent.children).length == L_2936030180))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3070230689;

}

function some_3070230792(val_3070230794) {
  var result_3070230795 = ({val: null});

    if (!(!((val_3070230794 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3070230795.val = val_3070230794;

  return result_3070230795;

}

function next_3070230759(node_3070230760) {
  var result_3070230765 = ({val: null});

  BeforeRet: {
    if ((node_3070230760.parent == null)) {
    result_3070230765 = nimCopy(result_3070230765, none_3070230770(), NTI3070230680);
    break BeforeRet;
    }
    
    var i_3070230789 = index_3070230687(node_3070230760);
    if ((subInt(len_3070230753(node_3070230760.parent), 1) <= i_3070230789)) {
    result_3070230765 = nimCopy(result_3070230765, none_3070230770(), NTI3070230680);
    break BeforeRet;
    }
    
    result_3070230765 = nimCopy(result_3070230765, some_3070230792(HEX5BHEX5D_3070230740(node_3070230760.parent, addInt(i_3070230789, 1))), NTI3070230680);
    break BeforeRet;
  };

  return result_3070230765;

}

function isSome_3070230841(self_3070230843) {
  var result_3070230844 = false;

    result_3070230844 = !((self_3070230843.val == null));

  return result_3070230844;

}

function isNone_3070230869(self_3070230871) {
  var result_3070230872 = false;

    result_3070230872 = (self_3070230871.val == null);

  return result_3070230872;

}

function get_3070230861(self_3070230863) {
  var result_3070230864 = null;

    if (isNone_3070230869(self_3070230863)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3070230864 = self_3070230863["val"];

  return result_3070230864;

}

function newSeq_2936029934(len_2936029936) {
  var result_2936029937 = [];

    result_2936029937 = new Array(len_2936029936); for (var i = 0 ; i < len_2936029936 ; ++i) { result_2936029937[i] = {Field0: 0.0, Field1: null}; }
  return result_2936029937;

}

function mergeAlt_2936029963(a_2936029965, b_2936029966, lo_2936029967, m_2936029968, hi_2936029969, cmp_2936029972, order_2936029973) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_2936029972(a_2936029965[chckIndx(m_2936029968, 0, (a_2936029965).length - 1)], a_2936029965[chckIndx(addInt(m_2936029968, 1), 0, (a_2936029965).length - 1)]), order_2936029973) <= 0)) {
    break BeforeRet;
    }
    
    var j_2936029974 = lo_2936029967;
    if (!((j_2936029974 <= m_2936029968))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_2936029980 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_2936029974 <= m_2936029968)) break Label2;
          b_2936029966[chckIndx(bb_2936029980, 0, (b_2936029966).length - 1)] = nimCopy(b_2936029966[chckIndx(bb_2936029980, 0, (b_2936029966).length - 1)], a_2936029965[chckIndx(j_2936029974, 0, (a_2936029965).length - 1)], NTI2936023918);
          bb_2936029980 = addInt(bb_2936029980, 1);
          j_2936029974 = addInt(j_2936029974, 1);
        }
    };
    var i_2936029991 = 0;
    var k_2936029992 = lo_2936029967;
    Label3: {
        Label4: while (true) {
        if (!((k_2936029992 < j_2936029974) && (j_2936029974 <= hi_2936029969))) break Label4;
          if ((HEX2A_1023410184(cmp_2936029972(b_2936029966[chckIndx(i_2936029991, 0, (b_2936029966).length - 1)], a_2936029965[chckIndx(j_2936029974, 0, (a_2936029965).length - 1)]), order_2936029973) <= 0)) {
          a_2936029965[chckIndx(k_2936029992, 0, (a_2936029965).length - 1)] = nimCopy(a_2936029965[chckIndx(k_2936029992, 0, (a_2936029965).length - 1)], b_2936029966[chckIndx(i_2936029991, 0, (b_2936029966).length - 1)], NTI2936023918);
          i_2936029991 = addInt(i_2936029991, 1);
          }
          else {
            a_2936029965[chckIndx(k_2936029992, 0, (a_2936029965).length - 1)] = nimCopy(a_2936029965[chckIndx(k_2936029992, 0, (a_2936029965).length - 1)], a_2936029965[chckIndx(j_2936029974, 0, (a_2936029965).length - 1)], NTI2936023918);
            j_2936029974 = addInt(j_2936029974, 1);
          }
          
          k_2936029992 = addInt(k_2936029992, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_2936029992 < j_2936029974)) break Label6;
          a_2936029965[chckIndx(k_2936029992, 0, (a_2936029965).length - 1)] = nimCopy(a_2936029965[chckIndx(k_2936029992, 0, (a_2936029965).length - 1)], b_2936029966[chckIndx(i_2936029991, 0, (b_2936029966).length - 1)], NTI2936023918);
          k_2936029992 = addInt(k_2936029992, 1);
          i_2936029991 = addInt(i_2936029991, 1);
        }
    };
  };

  
}

function sort_2936029922(a_2936029924, cmp_2936029927, order_2936029928) {
    var n_2936029933 = (a_2936029924).length;
    var b_2936029960 = newSeq_2936029934(chckRange(divInt(n_2936029933, 2), 0, 2147483647));
    var s_2936029961 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_2936029961 < n_2936029933)) break Label2;
          var m_2936029962 = subInt(subInt(n_2936029933, 1), s_2936029961);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_2936029962)) break Label4;
                mergeAlt_2936029963(a_2936029924, b_2936029960, nimMax(addInt(subInt(m_2936029962, s_2936029961), 1), 0), m_2936029962, addInt(m_2936029962, s_2936029961), cmp_2936029927, order_2936029928);
                m_2936029962 = subInt(m_2936029962, mulInt(s_2936029961, 2));
              }
          };
          s_2936029961 = mulInt(s_2936029961, 2);
        }
    };

  
}

function cmp_2936029902(x_2936029904, y_2936029905) {
  var result_2936029906 = 0;

  BeforeRet: {
    if ((x_2936029904 == y_2936029905)) {
    result_2936029906 = 0;
    break BeforeRet;
    }
    
    if ((x_2936029904 < y_2936029905)) {
    result_2936029906 = -1;
    break BeforeRet;
    }
    
    result_2936029906 = 1;
    break BeforeRet;
  };

  return result_2936029906;

}

function selectCenterNode_2936029707(self_2936029708) {
                      var Temporary8;
                      var Temporary9;
    
function HEX3Aanonymous_2936029890(a_2936029909, b_2936029910) {
      var result_2936029915 = 0;

        result_2936029915 = cmp_2936029902(a_2936029909.Field0, b_2936029910.Field0);

      return result_2936029915;

    }

    var nodes_2936029715 = [];
    Label1: {
      var layout_2936029719 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2936029720 = ({arr: new Float32Array(2)});
      var i_2936030170 = 0;
      var L_2936030171 = (self_2936029708.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_2936030170 < L_2936030171)) break Label3;
            layout_2936029719 = self_2936029708.lastLayouts[chckIndx(i_2936030170, 0, (self_2936029708.lastLayouts).length - 1)]["Field0"];
            offset_2936029720 = self_2936029708.lastLayouts[chckIndx(i_2936030170, 0, (self_2936029708.lastLayouts).length - 1)]["Field1"];
            Label4: {
              var i_2936029721 = 0;
              var node_2936029722 = null;
              var n_2936030161 = layout_2936029719.root;
              var idx_2936030162 = -1;
              var i_2936030163 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_2936030162 == -1)) {
                    var colontmp__2936030166 = nimCopy(null, {Field0: i_2936030163, Field1: n_2936030161}, NTI3070230751);
                    i_2936029721 = colontmp__2936030166["Field0"];
                    node_2936029722 = colontmp__2936030166["Field1"];
                    if ((!((node_2936029722.node == null)) && (0 < len_3070230753(node_2936029722)))) {
                    var bounds_2936029726 = absoluteBounds_3070232288(node_2936029722);
                    if (intersects_2063597753(rect_2080374802(0.0, 0.0, self_2936029708.lastBounds.w, self_2936029708.lastBounds.h), HEX2B_2063597727(bounds_2936029726, vec2_2097152992(0.0, offset_2936029720.arr[chckIndx(1, 0, (offset_2936029720.arr).length - 1)])))) {
                    nodes_2936029715.push({Field0: (bounds_2936029726.y + offset_2936029720.arr[chckIndx(1, 0, (offset_2936029720.arr).length - 1)]), Field1: node_2936029722});;
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_2936030162, 1) < len_3070230753(n_2936030161))) {
                    n_2936030161 = HEX5BHEX5D_3070230740(n_2936030161, addInt(idx_2936030162, 1));
                    idx_2936030162 = -1;
                    }
                    else {
                      var oHEX60gensym5_2936030167 = next_3070230759(n_2936030161);
                      if (!isSome_3070230841(oHEX60gensym5_2936030167)) Temporary9 = false; else {                        var ne_2936030168 = get_3070230861(oHEX60gensym5_2936030167);
                        Temporary9 = true;                      }                      if (!Temporary9) Temporary8 = false; else {                        Temporary8 = !((n_2936030161 == null));                      }                    if (Temporary8) {
                    n_2936030161 = ne_2936030168;
                    idx_2936030162 = -1;
                    }
                    else {
                    if (((!((n_2936030161.parent == null)) && !((n_2936030161 == null))) && !((n_2936030161.parent == null)))) {
                    idx_2936030162 = index_3070230687(n_2936030161);
                    n_2936030161 = n_2936030161.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_2936030163 = addInt(i_2936030163, 1);
                    }
                  }
              };
            };
            i_2936030170 = addInt(i_2936030170, 1);
            if (!(((self_2936029708.lastLayouts).length == L_2936030171))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    sort_2936029922(nodes_2936029715, HEX3Aanonymous_2936029890, 1);
    if ((0 < (nodes_2936029715).length)) {
    var firstY_2936030036 = nodes_2936029715[chckIndx(0, 0, (nodes_2936029715).length - 1)].Field0;
    var lastY_2936030040 = nodes_2936029715[chckIndx((nodes_2936029715).length - 1, 0, (nodes_2936029715).length - 1)].Field0;
    var middleY_2936030041 = ((firstY_2936030036 + lastY_2936030040) * 0.5);
    Label10: {
      var i_2936030074 = 0;
      var y_2936030075 = 0.0;
      var node_2936030076 = null;
      var i_2936030175 = 0;
      var L_2936030176 = (nodes_2936029715).length;
      Label11: {
          Label12: while (true) {
          if (!(i_2936030175 < L_2936030176)) break Label12;
            i_2936030074 = i_2936030175;
            y_2936030075 = nodes_2936029715[chckIndx(i_2936030175, 0, (nodes_2936029715).length - 1)]["Field0"];
            node_2936030076 = nodes_2936029715[chckIndx(i_2936030175, 0, (nodes_2936029715).length - 1)]["Field1"];
            if (((i_2936030074 == (nodes_2936029715).length - 1) || (middleY_2936030041 < nodes_2936029715[chckIndx(addInt(i_2936030074, 1), 0, (nodes_2936029715).length - 1)].Field0))) {
            nodeHEX3D_2936017358(self_2936029708, node_2936030076.node);
            break Label10;
            }
            
            i_2936030175 = addInt(i_2936030175, 1);
            if (!(((nodes_2936029715).length == L_2936030176))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function selectCenterNodeJsWrapper_2936029703(self_2936030143) {
    selectCenterNode_2936029707(self_2936030143);

  
}
editor_ast_prototype.selectCenterNode = function() { return (selectCenterNodeJsWrapper_2936029703(this));};

function scroll_2936030193(self_2936030194, amount_2936030195) {
    HEX2BHEX3D_855640304(self_2936030194, "scrollOffset", amount_2936030195);

  
}

function scrollJsWrapper_2936030189(self_2936030228, amount_2936030229) {
    scroll_2936030193(self_2936030228, amount_2936030229);

  
}
editor_ast_prototype.scroll = function(amount_ /* : float32 */) { return (scrollJsWrapper_2936030189(this, amount_));};

function scrollOutput_2936030255(self_2936030256, arg_2936030257) {
    switch (toJSStr(arg_2936030257)) {
    case "home":
      executionOutput_2936012852[0].scroll = (executionOutput_2936012852[0].lines).length;
      break;
    case "end":
      executionOutput_2936012852[0].scroll = 0;
      break;
    default: 
      executionOutput_2936012852[0].scroll = clamp_1660945119(addInt(executionOutput_2936012852[0].scroll, nsuParseInt(arg_2936030257)), 0, (executionOutput_2936012852[0].lines).length);
      break;
    }

  
}

function scrollOutputJsWrapper_2936030251(self_2936030297, arg_2936030298) {
    scrollOutput_2936030255(self_2936030297, arg_2936030298);

  
}
editor_ast_prototype.scrollOutput = function(arg_ /* : string */) { return (scrollOutputJsWrapper_2936030251(this, arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function nsuIndent(s_855639240, count_855639241, padding_855639242) {
            var Temporary6;

  var result_855639243 = [];

    result_855639243 = nimCopy(null, [], NTI33554449);
    var i_855639244 = 0;
    Label1: {
      var line_855639245 = [];
      var first_2936030503 = 0;
      var last_2936030504 = 0;
      var eolpos_2936030505 = 0;
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            Label4: {
                Label5: while (true) {
                if (!((last_2936030504 < (s_855639240).length) && !((ConstSet196[s_855639240[chckIndx(last_2936030504, 0, (s_855639240).length - 1)]] != undefined)))) break Label5;
                  last_2936030504 = addInt(last_2936030504, 1);
                }
            };
            eolpos_2936030505 = last_2936030504;
            if ((last_2936030504 < (s_855639240).length)) {
            if ((s_855639240[chckIndx(last_2936030504, 0, (s_855639240).length - 1)] == 10)) {
            last_2936030504 = addInt(last_2936030504, 1);
            }
            else {
            if ((s_855639240[chckIndx(last_2936030504, 0, (s_855639240).length - 1)] == 13)) {
            last_2936030504 = addInt(last_2936030504, 1);
            if (((last_2936030504 < (s_855639240).length) && (s_855639240[chckIndx(last_2936030504, 0, (s_855639240).length - 1)] == 10))) {
            last_2936030504 = addInt(last_2936030504, 1);
            }
            
            }
            }
            }
            
            if (false) {
            Temporary6 = subInt(last_2936030504, 1);
            }
            else {
            Temporary6 = subInt(eolpos_2936030505, 1);
            }
            
            line_855639245 = substr_33557821(s_855639240, first_2936030503, Temporary6);
            if (!((i_855639244 == 0))) {
            result_855639243.push.apply(result_855639243, [10]);;
            }
            
            Label7: {
              var j_855639250 = 0;
              var colontmp__2936030500 = 0;
              colontmp__2936030500 = count_855639241;
              var res_2936030501 = 1;
              Label8: {
                  Label9: while (true) {
                  if (!(res_2936030501 <= colontmp__2936030500)) break Label9;
                    j_855639250 = res_2936030501;
                    result_855639243.push.apply(result_855639243, padding_855639242);;
                    res_2936030501 = addInt(res_2936030501, 1);
                  }
              };
            };
            result_855639243.push.apply(result_855639243, line_855639245);;
            i_855639244 = addInt(i_855639244, 1);
            if ((eolpos_2936030505 == last_2936030504)) {
            break Label2;
            }
            
            first_2936030503 = last_2936030504;
          }
      };
    };

  return result_855639243;

}

function HEX24_3003139756(graph_3003139757) {
  var result_3003139758 = [];

    result_3003139758 = nimCopy(null, [68,101,112,101,110,100,101,110,99,121,32,71,114,97,112,104,10], NTI33554449);
    result_3003139758.push.apply(result_3003139758, (nsuIndent(([114,101,118,105,115,105,111,110,58,32] || []).concat(HEX24_369098760(graph_3003139757.revision) || []), 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([99,111,108,111,114,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([118,101,114,105,102,105,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([99,104,97,110,103,101,100,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([102,105,110,103,101,114,112,114,105,110,116,115,58], 1, [124,32]) || []).concat([10] || []));;
    result_3003139758.push.apply(result_3003139758, (nsuIndent([100,101,112,101,110,100,101,110,99,105,101,115,58], 1, [124,32]) || []).concat([10] || []));;

  return result_3003139758;

}

function toString_2986396660(HEX3Atmp_2986344661) {
  var result_2986396661 = [];

  BeforeRet: {
    var HEX3Atmp_2986344662 = [67,111,110,116,101,120,116,10];
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,65,115,116,78,111,100,101,10] || []));;
    Label1: {
      var keyHEX60gensym50_2986396751 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym50_2986396752 = null;
      Label2: {
        var node_2936030374 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936030375 = HEX3Atmp_2986344661.itemsAstNode.list.head;
        Label3: {
            Label4: while (true) {
            if (!!((it_2936030375 == null))) break Label4;
              node_2936030374 = nimCopy(node_2936030374, it_2936030375.value, NTI2986344510);
              var colontmp__2936030378 = nimCopy(null, {Field0: nimCopy(null, node_2936030374.key, NTI3003121689), Field1: node_2936030374.val}, NTI2986375446);
              keyHEX60gensym50_2986396751 = nimCopy(keyHEX60gensym50_2986396751, colontmp__2936030378["Field0"], NTI3003121689);
              valueHEX60gensym50_2986396752 = colontmp__2936030378["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym50_2986396751) || [],[32,45,62,32] || [],HEX24_2969569239(valueHEX60gensym50_2986396752) || [],[10] || []));;
              it_2936030375 = it_2936030375.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,78,111,100,101,76,97,121,111,117,116,73,110,112,117,116,10] || []));;
    Label5: {
      var keyHEX60gensym51_2986396842 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym51_2986396843 = null;
      Label6: {
        var node_2936030384 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936030385 = HEX3Atmp_2986344661.itemsNodeLayoutInput.list.head;
        Label7: {
            Label8: while (true) {
            if (!!((it_2936030385 == null))) break Label8;
              node_2936030384 = nimCopy(node_2936030384, it_2936030385.value, NTI2986344583);
              var colontmp__2936030388 = nimCopy(null, {Field0: nimCopy(null, node_2936030384.key, NTI3003121689), Field1: node_2936030384.val}, NTI2986375499);
              keyHEX60gensym51_2986396842 = nimCopy(keyHEX60gensym51_2986396842, colontmp__2936030388["Field0"], NTI3003121689);
              valueHEX60gensym51_2986396843 = colontmp__2936030388["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym51_2986396842) || [],[32,45,62,32] || [],HEX24_3070232668(valueHEX60gensym51_2986396843) || [],[10] || []));;
              it_2936030385 = it_2936030385.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,83,121,109,98,111,108,10] || []));;
    Label9: {
      var keyHEX60gensym52_2986396933 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym52_2986396934 = null;
      Label10: {
        var node_2936030395 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936030396 = HEX3Atmp_2986344661.itemsSymbol.list.head;
        Label11: {
            Label12: while (true) {
            if (!!((it_2936030396 == null))) break Label12;
              node_2936030395 = nimCopy(node_2936030395, it_2936030396.value, NTI2986344647);
              var colontmp__2936030399 = nimCopy(null, {Field0: nimCopy(null, node_2936030395.key, NTI3003121689), Field1: node_2936030395.val}, NTI2986375552);
              keyHEX60gensym52_2986396933 = nimCopy(keyHEX60gensym52_2986396933, colontmp__2936030399["Field0"], NTI3003121689);
              valueHEX60gensym52_2986396934 = colontmp__2936030399["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym52_2986396933) || [],[32,45,62,32] || [],HEX24_3070231676(valueHEX60gensym52_2986396934) || [],[10] || []));;
              it_2936030396 = it_2936030396.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([73,116,101,109,115,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,67,111,110,116,101,120,116,10] || []));;
    Label13: {
      var keyHEX60gensym53_2986397024 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0};
      var valueHEX60gensym53_2986397025 = null;
      Label14: {
        var node_2936030405 = ({key: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, val: null});
        var it_2936030406 = HEX3Atmp_2986344661.itemsFunctionExecutionContext.list.head;
        Label15: {
            Label16: while (true) {
            if (!!((it_2936030406 == null))) break Label16;
              node_2936030405 = nimCopy(node_2936030405, it_2936030406.value, NTI2986344711);
              var colontmp__2936030409 = nimCopy(null, {Field0: nimCopy(null, node_2936030405.key, NTI3003121689), Field1: node_2936030405.val}, NTI2986375605);
              keyHEX60gensym53_2986397024 = nimCopy(keyHEX60gensym53_2986397024, colontmp__2936030409["Field0"], NTI3003121689);
              valueHEX60gensym53_2986397025 = colontmp__2936030409["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3003121876(keyHEX60gensym53_2986397024) || [],[32,45,62,32] || [],HEX24_3070231355(valueHEX60gensym53_2986397025) || [],[10] || []));;
              it_2936030406 = it_2936030406.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,84,121,112,101,10] || []));;
    Label17: {
      var keyHEX60gensym54_2986397106 = null;
      var valueHEX60gensym54_2986397107 = null;
      Label18: {
        var node_2936030416 = ({key: null, val: null});
        var it_2936030417 = HEX3Atmp_2986344661.queryCacheType.list.head;
        Label19: {
            Label20: while (true) {
            if (!!((it_2936030417 == null))) break Label20;
              node_2936030416 = nimCopy(node_2936030416, it_2936030417.value, NTI2986344813);
              var colontmp__2936030420 = nimCopy(null, {Field0: node_2936030416.key, Field1: node_2936030416.val}, NTI2986375658);
              keyHEX60gensym54_2986397106 = colontmp__2936030420["Field0"];
              valueHEX60gensym54_2986397107 = colontmp__2936030420["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym54_2986397106) || [],[32,45,62,32] || [],HEX24_3070230964(valueHEX60gensym54_2986397107) || [],[10] || []));;
              it_2936030417 = it_2936030417.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,86,97,108,117,101,10] || []));;
    Label21: {
      var keyHEX60gensym55_2986397197 = null;
      var valueHEX60gensym55_2986397198 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label22: {
        var node_2936030427 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2936030428 = HEX3Atmp_2986344661.queryCacheValue.list.head;
        Label23: {
            Label24: while (true) {
            if (!!((it_2936030428 == null))) break Label24;
              node_2936030427 = nimCopy(node_2936030427, it_2936030428.value, NTI2986344888);
              var colontmp__2936030431 = nimCopy(null, {Field0: node_2936030427.key, Field1: nimCopy(null, node_2936030427.val, NTI3070230535)}, NTI2986375705);
              keyHEX60gensym55_2986397197 = colontmp__2936030431["Field0"];
              valueHEX60gensym55_2986397198 = nimCopy(valueHEX60gensym55_2986397198, colontmp__2936030431["Field1"], NTI3070230535);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym55_2986397197) || [],[32,45,62,32] || [],HEX24_3070231271(valueHEX60gensym55_2986397198) || [],[10] || []));;
              it_2936030428 = it_2936030428.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,10] || []));;
    Label25: {
      var keyHEX60gensym56_2986397279 = null;
      var valueHEX60gensym56_2986397280 = ({val: null});
      Label26: {
        var node_2936030438 = ({key: null, val: ({val: null})});
        var it_2936030439 = HEX3Atmp_2986344661.queryCacheSymbol.list.head;
        Label27: {
            Label28: while (true) {
            if (!!((it_2936030439 == null))) break Label28;
              node_2936030438 = nimCopy(node_2936030438, it_2936030439.value, NTI2986344959);
              var colontmp__2936030442 = nimCopy(null, {Field0: node_2936030438.key, Field1: nimCopy(null, node_2936030438.val, NTI3070231688)}, NTI2986375752);
              keyHEX60gensym56_2986397279 = colontmp__2936030442["Field0"];
              valueHEX60gensym56_2986397280 = nimCopy(valueHEX60gensym56_2986397280, colontmp__2936030442["Field1"], NTI3070231688);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym56_2986397279) || [],[32,45,62,32] || [],HEX24_2986397338(valueHEX60gensym56_2986397280) || [],[10] || []));;
              it_2936030439 = it_2936030439.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,115,10] || []));;
    Label29: {
      var keyHEX60gensym57_2986397439 = null;
      var valueHEX60gensym57_2986397440 = null;
      Label30: {
        var node_2936030449 = ({key: null, val: null});
        var it_2936030450 = HEX3Atmp_2986344661.queryCacheSymbols.list.head;
        Label31: {
            Label32: while (true) {
            if (!!((it_2936030450 == null))) break Label32;
              node_2936030449 = nimCopy(node_2936030449, it_2936030450.value, NTI2986345032);
              var colontmp__2936030453 = nimCopy(null, {Field0: node_2936030449.key, Field1: node_2936030449.val}, NTI2986375846);
              keyHEX60gensym57_2986397439 = colontmp__2936030453["Field0"];
              valueHEX60gensym57_2986397440 = colontmp__2936030453["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_2969569239(keyHEX60gensym57_2986397439) || [],[32,45,62,32] || [],HEX24_2986397498(valueHEX60gensym57_2986397440) || [],[10] || []));;
              it_2936030450 = it_2936030450.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,84,121,112,101,10] || []));;
    Label33: {
      var keyHEX60gensym58_2986397681 = null;
      var valueHEX60gensym58_2986397682 = null;
      Label34: {
        var node_2936030460 = ({key: null, val: null});
        var it_2936030461 = HEX3Atmp_2986344661.queryCacheSymbolType.list.head;
        Label35: {
            Label36: while (true) {
            if (!!((it_2936030461 == null))) break Label36;
              node_2936030460 = nimCopy(node_2936030460, it_2936030461.value, NTI2986345098);
              var colontmp__2936030464 = nimCopy(null, {Field0: node_2936030460.key, Field1: node_2936030460.val}, NTI2986375979);
              keyHEX60gensym58_2986397681 = colontmp__2936030464["Field0"];
              valueHEX60gensym58_2986397682 = colontmp__2936030464["Field1"];
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070231676(keyHEX60gensym58_2986397681) || [],[32,45,62,32] || [],HEX24_3070230964(valueHEX60gensym58_2986397682) || [],[10] || []));;
              it_2936030461 = it_2936030461.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,83,121,109,98,111,108,86,97,108,117,101,10] || []));;
    Label37: {
      var keyHEX60gensym59_2986397772 = null;
      var valueHEX60gensym59_2986397773 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label38: {
        var node_2936030471 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2936030472 = HEX3Atmp_2986344661.queryCacheSymbolValue.list.head;
        Label39: {
            Label40: while (true) {
            if (!!((it_2936030472 == null))) break Label40;
              node_2936030471 = nimCopy(node_2936030471, it_2936030472.value, NTI2986345173);
              var colontmp__2936030475 = nimCopy(null, {Field0: node_2936030471.key, Field1: nimCopy(null, node_2936030471.val, NTI3070230535)}, NTI2986376026);
              keyHEX60gensym59_2986397772 = colontmp__2936030475["Field0"];
              valueHEX60gensym59_2986397773 = nimCopy(valueHEX60gensym59_2986397773, colontmp__2936030475["Field1"], NTI3070230535);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070231676(keyHEX60gensym59_2986397772) || [],[32,45,62,32] || [],HEX24_3070231271(valueHEX60gensym59_2986397773) || [],[10] || []));;
              it_2936030472 = it_2936030472.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,70,117,110,99,116,105,111,110,69,120,101,99,117,116,105,111,110,10] || []));;
    Label41: {
      var keyHEX60gensym60_2986397863 = null;
      var valueHEX60gensym60_2986397864 = ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null});
      Label42: {
        var node_2936030482 = ({key: null, val: ({kind: 0, stringValue: [], intValue: 0, impl: null, node: null, rev: 0, typ: null})});
        var it_2936030483 = HEX3Atmp_2986344661.queryCacheFunctionExecution.list.head;
        Label43: {
            Label44: while (true) {
            if (!!((it_2936030483 == null))) break Label44;
              node_2936030482 = nimCopy(node_2936030482, it_2936030483.value, NTI2986345239);
              var colontmp__2936030486 = nimCopy(null, {Field0: node_2936030482.key, Field1: nimCopy(null, node_2936030482.val, NTI3070230535)}, NTI2986376073);
              keyHEX60gensym60_2986397863 = colontmp__2936030486["Field0"];
              valueHEX60gensym60_2986397864 = nimCopy(valueHEX60gensym60_2986397864, colontmp__2936030486["Field1"], NTI3070230535);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070231355(keyHEX60gensym60_2986397863) || [],[32,45,62,32] || [],HEX24_3070231271(valueHEX60gensym60_2986397864) || [],[10] || []));;
              it_2936030483 = it_2936030483.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 1) || []).concat([67,97,99,104,101,58,32,78,111,100,101,76,97,121,111,117,116,10] || []));;
    Label45: {
      var keyHEX60gensym61_2986397945 = null;
      var valueHEX60gensym61_2986397946 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      Label46: {
        var node_2936030493 = ({key: null, val: ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null})});
        var it_2936030494 = HEX3Atmp_2986344661.queryCacheNodeLayout.list.head;
        Label47: {
            Label48: while (true) {
            if (!!((it_2936030494 == null))) break Label48;
              node_2936030493 = nimCopy(node_2936030493, it_2936030494.value, NTI2986345314);
              var colontmp__2936030497 = nimCopy(null, {Field0: node_2936030493.key, Field1: nimCopy(null, node_2936030493.val, NTI3070230559)}, NTI2986376120);
              keyHEX60gensym61_2986397945 = colontmp__2936030497["Field0"];
              valueHEX60gensym61_2986397946 = nimCopy(valueHEX60gensym61_2986397946, colontmp__2936030497["Field1"], NTI3070230559);
              HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, (repeat2_3003121679([124,32], 2) || []).concat(HEX24_3070232668(keyHEX60gensym61_2986397945) || [],[32,45,62,32] || [],HEX24_3070232631(valueHEX60gensym61_2986397946) || [],[10] || []));;
              it_2936030494 = it_2936030494.next;
            }
        };
      };
    };
    HEX3Atmp_2986344662.push.apply(HEX3Atmp_2986344662, nsuIndent(HEX24_3003139756(HEX3Atmp_2986344661.depGraph), 1, [124,32]));;
    result_2986396661 = nimCopy(null, HEX3Atmp_2986344662, NTI33554449);
    break BeforeRet;
  };

  return result_2986396661;

}

function dumpContext_2936030324(self_2936030325) {
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);
    log_1174405220(logger_704643272[0], 2, [toString_2986396660(ctx_2936012853)]);
    log_1174405220(logger_704643272[0], 2, [[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61]]);

  
}

function dumpContextJsWrapper_2936030320(self_2936030353) {
    dumpContext_2936030324(self_2936030353);

  
}
editor_ast_prototype.dumpContext = function() { return (dumpContextJsWrapper_2936030320(this));};

function getModeConfig_2936030508(self_2936030509, mode_2936030510) {
  var result_2936030511 = null;

  BeforeRet: {
    result_2936030511 = getEventHandlerConfig_1291849153(self_2936030509.editor, ([101,100,105,116,111,114,46,97,115,116,46] || []).concat(mode_2936030510 || []));
    break BeforeRet;
  };

  return result_2936030511;

}

function setMode_2936030518(self_2936030519, mode_2936030520) {
        
function HEX3Aanonymous_2936030541(actionHEX60gensym995HEX60gensym996_2936030542, argHEX60gensym995HEX60gensym996_2936030543) {
          var result_2936030544 = 0;

          BeforeRet: {
            if (handlerHEX60gensym995_2936030529.config.handleActions) {
            var action_2936030545 = nimCopy(null, actionHEX60gensym995HEX60gensym996_2936030542, NTI33554449);
            var arg_2936030546 = nimCopy(null, argHEX60gensym995HEX60gensym996_2936030543, NTI33554449);
            var responseHEX60gensym995HEX60gensym996_2936030547 = handleAction_2936029639(self_2936030519, action_2936030545, arg_2936030546);
            if (handlerHEX60gensym995_2936030529.config.consumeAllActions) {
            result_2936030544 = 3;
            break BeforeRet;
            }
            
            result_2936030544 = responseHEX60gensym995HEX60gensym996_2936030547;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym995_2936030529.config.consumeAllActions) {
            result_2936030544 = 3;
            break BeforeRet;
            }
            else {
              result_2936030544 = 1;
              break BeforeRet;
            }
            }
          };

          return result_2936030544;

        }
        
function HEX3Aanonymous_2936030549(inputHEX60gensym995HEX60gensym997_2936030550) {
          var result_2936030551 = 0;

          BeforeRet: {
            if (handlerHEX60gensym995_2936030529.config.handleInputs) {
            var input_2936030552 = nimCopy(null, inputHEX60gensym995HEX60gensym997_2936030550, NTI33554449);
            result_2936030551 = 1;
            break BeforeRet;
            }
            else {
              result_2936030551 = 1;
              break BeforeRet;
            }
            
          };

          return result_2936030551;

        }

    if (((mode_2936030520).length == 0)) {
    self_2936030519.modeEventHandler = null;
    }
    else {
      var config_2936030521 = getModeConfig_2936030508(self_2936030519, mode_2936030520);
      Label1: {
        var handlerHEX60gensym995_2936030529 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym995_2936030529.config = config_2936030521;
        handlerHEX60gensym995_2936030529.dfaInternal = buildDFA_2046820415(config_2936030521);
        handlerHEX60gensym995_2936030529.handleAction = HEX3Aanonymous_2936030541;
        handlerHEX60gensym995_2936030529.handleInput = HEX3Aanonymous_2936030549;
      };
      self_2936030519.modeEventHandler = handlerHEX60gensym995_2936030529;
    }
    
    self_2936030519.currentMode = nimCopy(null, mode_2936030520, NTI33554449);

  
}

function setModeJsWrapper2_2936030514(self_2936030581, mode_2936030582) {
    setMode_2936030518(self_2936030581, mode_2936030582);

  
}
editor_ast_prototype.setMode2 = function(mode_ /* : string */) { return (setModeJsWrapper2_2936030514(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_2936030609(self_2936030610) {
  var result_2936030611 = [];

  BeforeRet: {
    result_2936030611 = nimCopy(null, self_2936030610.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_2936030611;

}

function modeJsWrapper2_2936030605(self_2936030640) {
  var result_2936030641 = [];

    result_2936030641 = nimCopy(null, mode_2936030609(self_2936030640), NTI33554449);

  return result_2936030641;

}
editor_ast_prototype.mode2 = function() { return toJSStr(modeJsWrapper2_2936030605(this));};

function getContextWithMode_2936030666(self_2936030667, context_2936030668) {
  var result_2936030669 = [];

  BeforeRet: {
    result_2936030669 = nimCopy(null, (context_2936030668 || []).concat([46] || [],self_2936030667.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_2936030669;

}

function getContextWithModeJsWrapper2_2936030662(self_2936030699, context_2936030700) {
  var result_2936030701 = [];

    result_2936030701 = nimCopy(null, getContextWithMode_2936030666(self_2936030699, context_2936030700), NTI33554449);

  return result_2936030701;

}
editor_ast_prototype.getContextWithMode2 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper2_2936030662(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function markDirty_2264924181(self_2264924182) {
    if (!(self_2264924182.mDirty)) {
    invoke_2147483710(self_2264924182.onMarkedDirty);
    }
    
    self_2264924182.mDirty = true;

  
}

function accept_3204448608(self_3204448609) {
    if ((self_3204448609.selected < (self_3204448609.completions).length)) {
    self_3204448609.handleItemConfirmed(self_3204448609.completions[chckIndx(self_3204448609.selected, 0, (self_3204448609.completions).length - 1)]);
    }
    
    popPopup_1291849106(self_3204448609.editor, self_3204448609);
    markDirty_2264924181(self_3204448609);

  
}

function acceptJsWrapper_3204448604(self_3204448665) {
    accept_3204448608(self_3204448665);

  
}
popup_selector_prototype.accept = function() { return (acceptJsWrapper_3204448604(this));};

function cancel_3204448707(self_3204448708) {
    if (!((self_3204448708.handleCanceled == null))) {
    self_3204448708.handleCanceled();
    }
    
    popPopup_1291849106(self_3204448708.editor, self_3204448708);
    markDirty_2264924181(self_3204448708);

  
}

function cancelJsWrapper_3204448703(self_3204448742) {
    cancel_3204448707(self_3204448742);

  
}
popup_selector_prototype.cancel = function() { return (cancelJsWrapper_3204448703(this));};

function prev_3204448763(self_3204448764) {
    var Temporary1;

    if (((self_3204448764.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_3204448764.selected, (self_3204448764.completions).length), 1), (self_3204448764.completions).length);
    }
    
    self_3204448764.selected = Temporary1;
    if (((0 < (self_3204448764.completions).length) && !((self_3204448764.handleItemSelected == null)))) {
    self_3204448764.handleItemSelected(self_3204448764.completions[chckIndx(self_3204448764.selected, 0, (self_3204448764.completions).length - 1)]);
    }
    
    markDirty_2264924181(self_3204448764);

  
}

function prevJsWrapper_3204448759(self_3204448810) {
    prev_3204448763(self_3204448810);

  
}
popup_selector_prototype.prev = function() { return (prevJsWrapper_3204448759(this));};

function next_3204448831(self_3204448832) {
    var Temporary1;

    if (((self_3204448832.completions).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_3204448832.selected, 1), (self_3204448832.completions).length);
    }
    
    self_3204448832.selected = Temporary1;
    if (((0 < (self_3204448832.completions).length) && !((self_3204448832.handleItemSelected == null)))) {
    self_3204448832.handleItemSelected(self_3204448832.completions[chckIndx(self_3204448832.selected, 0, (self_3204448832.completions).length - 1)]);
    }
    
    markDirty_2264924181(self_3204448832);

  
}

function nextJsWrapper_3204448827(self_3204448875) {
    next_3204448831(self_3204448875);

  
}
popup_selector_prototype.next = function() { return (nextJsWrapper_3204448827(this));};

function getBackend_1291853859(self_1291853860) {
  var result_1291853861 = 0;

  BeforeRet: {
    result_1291853861 = self_1291853860.backend;
    break BeforeRet;
  };

  return result_1291853861;

}

function getBackendJsWrapper_1291853855(self_1291853912) {
  var result_1291853913 = 0;

    result_1291853913 = getBackend_1291853859(self_1291853912);

  return result_1291853913;

}
editor_prototype.getBackend = function() { return (getBackendJsWrapper_1291853855(this));};

function requestRender_1291854026(self_1291854027, redrawEverything_1291854028) {
    requestRender_2315255899(self_1291854027.platform, redrawEverything_1291854028);

  
}

function requestRenderJsWrapper_1291854022(self_1291854056, redrawEverything_1291854057) {
    requestRender_1291854026(self_1291854056, redrawEverything_1291854057);

  
}
editor_prototype.requestRender = function(redrawEverything_ /* : bool */) { return (requestRenderJsWrapper_1291854022(this, redrawEverything_));};

function setHandleInputs_2046820706(config_2046820707, value_2046820708) {
    config_2046820707.handleInputs = value_2046820708;
    config_2046820707.revision = addInt(config_2046820707.revision, 1);

  
}

function setHandleInputs_1291854078(self_1291854079, context_1291854080, value_1291854081) {
    setHandleInputs_2046820706(getEventHandlerConfig_1291849153(self_1291854079, context_1291854080), value_1291854081);

  
}

function setHandleInputsJsWrapper_1291854074(self_1291854110, context_1291854111, value_1291854112) {
    setHandleInputs_1291854078(self_1291854110, context_1291854111, value_1291854112);

  
}
editor_prototype.setHandleInputs = function(context_ /* : string */, value_ /* : bool */) { return (setHandleInputsJsWrapper_1291854074(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setHandleActions_2046820713(config_2046820714, value_2046820715) {
    config_2046820714.handleActions = value_2046820715;
    config_2046820714.revision = addInt(config_2046820714.revision, 1);

  
}

function setHandleActions_1291854138(self_1291854139, context_1291854140, value_1291854141) {
    setHandleActions_2046820713(getEventHandlerConfig_1291849153(self_1291854139, context_1291854140), value_1291854141);

  
}

function setHandleActionsJsWrapper_1291854134(self_1291854170, context_1291854171, value_1291854172) {
    setHandleActions_1291854138(self_1291854170, context_1291854171, value_1291854172);

  
}
editor_prototype.setHandleActions = function(context_ /* : string */, value_ /* : bool */) { return (setHandleActionsJsWrapper_1291854134(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllActions_2046820720(config_2046820721, value_2046820722) {
    config_2046820721.consumeAllActions = value_2046820722;
    config_2046820721.revision = addInt(config_2046820721.revision, 1);

  
}

function setConsumeAllActions_1291854198(self_1291854199, context_1291854200, value_1291854201) {
    setConsumeAllActions_2046820720(getEventHandlerConfig_1291849153(self_1291854199, context_1291854200), value_1291854201);

  
}

function setConsumeAllActionsJsWrapper_1291854194(self_1291854230, context_1291854231, value_1291854232) {
    setConsumeAllActions_1291854198(self_1291854230, context_1291854231, value_1291854232);

  
}
editor_prototype.setConsumeAllActions = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllActionsJsWrapper_1291854194(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function setConsumeAllInput_2046820727(config_2046820728, value_2046820729) {
    config_2046820728.consumeAllInput = value_2046820729;
    config_2046820728.revision = addInt(config_2046820728.revision, 1);

  
}

function setConsumeAllInput_1291854258(self_1291854259, context_1291854260, value_1291854261) {
    setConsumeAllInput_2046820727(getEventHandlerConfig_1291849153(self_1291854259, context_1291854260), value_1291854261);

  
}

function setConsumeAllInputJsWrapper_1291854254(self_1291854290, context_1291854291, value_1291854292) {
    setConsumeAllInput_1291854258(self_1291854290, context_1291854291, value_1291854292);

  
}
editor_prototype.setConsumeAllInput = function(context_ /* : string */, value_ /* : bool */) { return (setConsumeAllInputJsWrapper_1291854254(this, context_ == undefined ? undefined : cstrToNimstr(context_), value_));};

function initTable_2701133671(initialSize_2701133674) {
  var result_2701133675 = ({data: [], counter: 0});

    var correctSizeHEX60gensym36_2701133677 = slotsNeeded_1308622891(chckRange(initialSize_2701133674, 0, 2147483647));
    result_2701133675.counter = 0;
    result_2701133675.data = new Array(chckRange(correctSizeHEX60gensym36_2701133677, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym36_2701133677, 0, 2147483647) ; ++i) { result_2701133675.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }
  return result_2701133675;

}

function initTable_1795162117(initialSize_1795162120) {
  var result_1795162126 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_1795162128 = slotsNeeded_1308622891(chckRange(initialSize_1795162120, 0, 2147483647));
    result_1795162126.counter = 0;
    result_1795162126.data = new Array(chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_1795162128, 0, 2147483647) ; ++i) { result_1795162126.data[i] = {Field0: 0, Field1: [], Field2: []}; }
  return result_1795162126;

}

function newWorkspaceFolderGithub_2701133652(user_2701133653, repository_2701133654, branchOrHash_2701133655) {
  var result_2701133656 = null;

    result_2701133656 = ({m_type: NTI2701131780, baseUrl: [], user: [], repository: [], branchOrHash: [], cachedDirectoryListings: ({data: [], counter: 0}), pathToSha: ({data: [], counter: 0}), name: []});
    var fmtRes_2701133664 = [mnewString(0)];
    fmtRes_2701133664[0].push.apply(fmtRes_2701133664[0], [104,116,116,112,115,58,47,47,97,112,105,46,103,105,116,104,117,98,46,99,111,109,47,114,101,112,111,115,47]);;
    formatValue_721420459(fmtRes_2701133664, 0, user_2701133653, []);
    fmtRes_2701133664[0].push.apply(fmtRes_2701133664[0], [47]);;
    formatValue_721420459(fmtRes_2701133664, 0, repository_2701133654, []);
    result_2701133656.baseUrl = nimCopy(null, fmtRes_2701133664[0], NTI33554449);
    var fmtRes_2701133670 = [mnewString(0)];
    fmtRes_2701133670[0].push.apply(fmtRes_2701133670[0], [79,112,101,110,105,110,103,32,110,101,119,32,103,105,116,104,117,98,32,119,111,114,107,115,112,97,99,101,32,102,111,108,100,101,114,32,97,116,32]);;
    formatValue_721420459(fmtRes_2701133670, 0, result_2701133656.baseUrl, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2701133670[0], NTI33554449)]);
    result_2701133656.user = nimCopy(null, user_2701133653, NTI33554449);
    result_2701133656.repository = nimCopy(null, repository_2701133654, NTI33554449);
    result_2701133656.branchOrHash = nimCopy(null, branchOrHash_2701133655, NTI33554449);
    result_2701133656.cachedDirectoryListings = nimCopy(result_2701133656.cachedDirectoryListings, initTable_2701133671(32), NTI2701131788);
    result_2701133656.pathToSha = nimCopy(result_2701133656.pathToSha, initTable_1795162117(32), NTI1795162120);

  return result_2701133656;

}

function openGithubWorkspace_1291854318(self_1291854319, user_1291854320, repository_1291854321, branchOrHash_1291854322) {
    self_1291854319.workspace.folders.push(newWorkspaceFolderGithub_2701133652(user_1291854320, repository_1291854321, branchOrHash_1291854322));;

  
}

function openGithubWorkspaceJsWrapper_1291854314(self_1291854365, user_1291854366, repository_1291854367, branchOrHash_1291854368) {
    openGithubWorkspace_1291854318(self_1291854365, user_1291854366, repository_1291854367, branchOrHash_1291854368);

  
}
editor_prototype.openGithubWorkspace = function(user_ /* : string */, repository_ /* : string */, branchOrHash_ /* : string */) { return (openGithubWorkspaceJsWrapper_1291854314(this, user_ == undefined ? undefined : cstrToNimstr(user_), repository_ == undefined ? undefined : cstrToNimstr(repository_), branchOrHash_ == undefined ? undefined : cstrToNimstr(branchOrHash_)));};

function getBool_1627390147(n_1627390148, default_1627390149) {
      var Temporary1;

  var result_1627390150 = false;

  BeforeRet: {
    if (((n_1627390148 == null) || !((n_1627390148.kind == 1)))) {
    result_1627390150 = default_1627390149;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390148;
      if (ConstSet197[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390150 = Temporary1.bval;
      break BeforeRet;
    }
    
  };

  return result_1627390150;

}

function getOption_2801803228(editor_2801803230, path_2801803231, default_2801803232) {
  var result_2801803237 = false;

  BeforeRet: {
    Label1: {
      if ((editor_2801803230 == null)) {
      result_2801803237 = default_2801803232;
      break BeforeRet;
      }
      
      var nodeHEX60gensym141_2801803248 = HEX7BHEX7D_1627393316(editor_2801803230.options, nsuSplitString(path_2801803231, [46], -1));
      if ((nodeHEX60gensym141_2801803248 == null)) {
      result_2801803237 = default_2801803232;
      break BeforeRet;
      }
      
    };
    result_2801803237 = getBool_1627390147(nodeHEX60gensym141_2801803248, default_2801803232);
    break BeforeRet;
  };

  return result_2801803237;

}

function getFlag_1291848865(self_1291848866, flag_1291848867, default_1291848868) {
  var result_1291854403 = false;

  BeforeRet: {
    result_1291854403 = getOption_2801803228(self_1291848866, flag_1291848867, default_1291848868);
    break BeforeRet;
  };

  return result_1291854403;

}

function getFlagJsWrapper2_1291854395(self_1291854442, flag_1291854443, default_1291854444) {
  var result_1291854445 = false;

    result_1291854445 = getFlag_1291848865(self_1291854442, flag_1291854443, default_1291854444);

  return result_1291854445;

}
editor_prototype.getFlag2 = function(flag_ /* : string */, default_ /* : bool */) { return (getFlagJsWrapper2_1291854395(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), default_));};

function newJBool_1627390046(b_1627390047) {
  var result_1627390048 = null;

    result_1627390048 = {kind: 1, bval: b_1627390047, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390048;

}

function setOption_1291854480(editor_1291854482, path_1291854483, value_1291854484) {
  BeforeRet: {
    Label1: {
      if ((editor_1291854482 == null)) {
      break BeforeRet;
      }
      
      var pathItemsHEX60gensym214_1291854499 = nsuSplitString(path_1291854483, [46], -1);
      var nodeHEX60gensym214_1291854500 = editor_1291854482.options;
      Label2: {
        var keyHEX60gensym214_1291854519 = [];
        var colontmp__1291854587 = [];
        colontmp__1291854587 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym214_1291854499, HEX2EHEX2E_1040187488(0, 2));
        var i_1291854588 = 0;
        var L_1291854589 = (colontmp__1291854587).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291854588 < L_1291854589)) break Label4;
              keyHEX60gensym214_1291854519 = colontmp__1291854587[chckIndx(i_1291854588, 0, (colontmp__1291854587).length - 1)];
              if (!((nodeHEX60gensym214_1291854500.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym214_1291854500, keyHEX60gensym214_1291854519))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym214_1291854500, keyHEX60gensym214_1291854519, newJObject_1627390051());
              }
              
              nodeHEX60gensym214_1291854500 = HEX5BHEX5D_1627393037(nodeHEX60gensym214_1291854500, keyHEX60gensym214_1291854519);
              i_1291854588 = addInt(i_1291854588, 1);
              if (!(((colontmp__1291854587).length == L_1291854589))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym214_1291854500 == null) || !((nodeHEX60gensym214_1291854500.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym214_1291854500, HEX5BHEX5D_2600469248(pathItemsHEX60gensym214_1291854499, 1), newJBool_1627390046(value_1291854484));
    };
  };

  
}

function setFlag_1291848942(self_1291848943, flag_1291848944, value_1291848945) {
    setOption_1291854480(self_1291848943, flag_1291848944, value_1291848945);

  
}

function setFlagJsWrapper2_1291854472(self_1291854563, flag_1291854564, value_1291854565) {
    setFlag_1291848942(self_1291854563, flag_1291854564, value_1291854565);

  
}
editor_prototype.setFlag2 = function(flag_ /* : string */, value_ /* : bool */) { return (setFlagJsWrapper2_1291854472(this, flag_ == undefined ? undefined : cstrToNimstr(flag_), value_));};

function toggleFlag_1291848946(self_1291848947, flag_1291848948) {
    setFlag_1291848942(self_1291848947, flag_1291848948, !(getFlag_1291848865(self_1291848947, flag_1291848948, false)));

  
}

function toggleFlagJsWrapper_1291854593(self_1291854627, flag_1291854628) {
    toggleFlag_1291848946(self_1291854627, flag_1291854628);

  
}
editor_prototype.toggleFlag = function(flag_ /* : string */) { return (toggleFlagJsWrapper_1291854593(this, flag_ == undefined ? undefined : cstrToNimstr(flag_)));};

function setOption_1291854649(self_1291854650, option_1291854651, value_1291854652) {
  BeforeRet: {
    if ((self_1291854650 == null)) {
    break BeforeRet;
    }
    
    var pathItems_1291854656 = nsuSplitString(option_1291854651, [46], -1);
    var node_1291854657 = self_1291854650.options;
    Label1: {
      var key_1291854676 = [];
      var colontmp__1291854738 = [];
      colontmp__1291854738 = HEX5BHEX5D_2801809080(pathItems_1291854656, HEX2EHEX2E_1040187488(0, 2));
      var i_1291854739 = 0;
      var L_1291854740 = (colontmp__1291854738).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291854739 < L_1291854740)) break Label3;
            key_1291854676 = colontmp__1291854738[chckIndx(i_1291854739, 0, (colontmp__1291854738).length - 1)];
            if (!((node_1291854657.kind == 5))) {
            break BeforeRet;
            }
            
            if (!(contains_1627393212(node_1291854657, key_1291854676))) {
            HEX5BHEX5DHEX3D_1627391903(node_1291854657, key_1291854676, newJObject_1627390051());
            }
            
            node_1291854657 = HEX5BHEX5D_1627393037(node_1291854657, key_1291854676);
            i_1291854739 = addInt(i_1291854739, 1);
            if (!(((colontmp__1291854738).length == L_1291854740))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    if (((node_1291854657 == null) || !((node_1291854657.kind == 5)))) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_1627391903(node_1291854657, HEX5BHEX5D_2600469248(pathItems_1291854656, 1), value_1291854652);
  };

  
}

function setOptionJsWrapper_1291854645(self_1291854720, option_1291854721, value_1291854722) {
    setOption_1291854649(self_1291854720, option_1291854721, value_1291854722);

  
}
editor_prototype.setOption = function(option_ /* : string */, value_ /* : JsonNode */) { return (setOptionJsWrapper_1291854645(this, option_ == undefined ? undefined : cstrToNimstr(option_), value_));};

function quit_1291854748(self_1291854749) {
    self_1291854749.closeRequested = true;

  
}

function quitJsWrapper_1291854744(self_1291854776) {
    quit_1291854748(self_1291854776);

  
}
editor_prototype.quit = function() { return (quitJsWrapper_1291854744(this));};

function changeFontSize_1291854792(self_1291854793, amount_1291854794) {
    fontSizeHEX3D_2315255929(self_1291854793.platform, (fontSize_2315255937(self_1291854793.platform) + amount_1291854794));
    requestRender_2315255899(self_1291854793.platform, true);

  
}

function changeFontSizeJsWrapper_1291854788(self_1291854822, amount_1291854823) {
    changeFontSize_1291854792(self_1291854822, amount_1291854823);

  
}
editor_prototype.changeFontSize = function(amount_ /* : float32 */) { return (changeFontSizeJsWrapper_1291854788(this, amount_));};

function rawGet_1291848303(t_1291848306, key_1291848307, hc_1291848308, hc_1291848308_Idx) {
  var result_1291848309 = 0;

  BeforeRet: {
    hc_1291848308[hc_1291848308_Idx] = hash_1325400491(key_1291848307);
    if ((hc_1291848308[hc_1291848308_Idx] == 0)) {
    hc_1291848308[hc_1291848308_Idx] = 314159265;
    }
    
    if (((t_1291848306.data).length == 0)) {
    result_1291848309 = -1;
    break BeforeRet;
    }
    
    var h_1291848361 = (hc_1291848308[hc_1291848308_Idx] & (t_1291848306.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291848306.data[chckIndx(h_1291848361, 0, (t_1291848306.data).length - 1)].Field0)) break Label2;
          if (((t_1291848306.data[chckIndx(h_1291848361, 0, (t_1291848306.data).length - 1)].Field0 == hc_1291848308[hc_1291848308_Idx]) && eqStrings(t_1291848306.data[chckIndx(h_1291848361, 0, (t_1291848306.data).length - 1)].Field1, key_1291848307))) {
          result_1291848309 = h_1291848361;
          break BeforeRet;
          }
          
          h_1291848361 = nextTry_1308622883(h_1291848361, (t_1291848306.data).length - 1);
        }
    };
    result_1291848309 = subInt(-1, h_1291848361);
  };

  return result_1291848309;

}

function mustRehash_1291851831(t_1291851833) {
  var result_1291851834 = false;

    if (!((t_1291851833.counter < (t_1291851833.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291851834 = ((mulInt((t_1291851833.data).length, 2) < mulInt(t_1291851833.counter, 3)) || (subInt((t_1291851833.data).length, t_1291851833.counter) < 4));

  return result_1291851834;

}

function rawInsert_1291852280(t_1291852284, data_1291852285, data_1291852285_Idx, key_1291852286, val_1291852287, hc_1291852288, h_1291852289) {
    data_1291852285[data_1291852285_Idx][chckIndx(h_1291852289, 0, (data_1291852285[data_1291852285_Idx]).length - 1)].Field1 = nimCopy(null, key_1291852286, NTI33554449);
    data_1291852285[data_1291852285_Idx][chckIndx(h_1291852289, 0, (data_1291852285[data_1291852285_Idx]).length - 1)].Field2 = val_1291852287;
    data_1291852285[data_1291852285_Idx][chckIndx(h_1291852289, 0, (data_1291852285[data_1291852285_Idx]).length - 1)].Field0 = hc_1291852288;

  
}

function enlarge_1291851986(t_1291851989) {
    var n_1291851992 = [];
    n_1291851992 = new Array(chckRange(mulInt((t_1291851989.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291851989.data).length, 2), 0, 2147483647) ; ++i) { n_1291851992[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    var Temporary1 = t_1291851989.data; t_1291851989.data = n_1291851992; n_1291851992 = Temporary1;    Label2: {
      var i_1291852056 = 0;
      var colontmp__1291855150 = 0;
      colontmp__1291855150 = (n_1291851992).length - 1;
      var res_1291855151 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291855151 <= colontmp__1291855150)) break Label4;
            i_1291852056 = res_1291855151;
            var eh_1291852110 = n_1291851992[chckIndx(i_1291852056, 0, (n_1291851992).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291852110)) {
            var j_1291852114 = (eh_1291852110 & (t_1291851989.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291851989.data[chckIndx(j_1291852114, 0, (t_1291851989.data).length - 1)].Field0)) break Label6;
                  j_1291852114 = nextTry_1308622883(j_1291852114, (t_1291851989.data).length - 1);
                }
            };
            rawInsert_1291852280(t_1291851989, t_1291851989, "data", n_1291851992[chckIndx(i_1291852056, 0, (n_1291851992).length - 1)].Field1, n_1291851992[chckIndx(i_1291852056, 0, (n_1291851992).length - 1)].Field2, eh_1291852110, j_1291852114);
            }
            
            res_1291855151 = addInt(res_1291855151, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291852458(t_1291852461, key_1291852462, hc_1291852463) {
  var result_1291852464 = 0;

  BeforeRet: {
    if (((t_1291852461.data).length == 0)) {
    result_1291852464 = -1;
    break BeforeRet;
    }
    
    var h_1291852515 = (hc_1291852463 & (t_1291852461.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291852461.data[chckIndx(h_1291852515, 0, (t_1291852461.data).length - 1)].Field0)) break Label2;
          if (((t_1291852461.data[chckIndx(h_1291852515, 0, (t_1291852461.data).length - 1)].Field0 == hc_1291852463) && eqStrings(t_1291852461.data[chckIndx(h_1291852515, 0, (t_1291852461.data).length - 1)].Field1, key_1291852462))) {
          result_1291852464 = h_1291852515;
          break BeforeRet;
          }
          
          h_1291852515 = nextTry_1308622883(h_1291852515, (t_1291852461.data).length - 1);
        }
    };
    result_1291852464 = subInt(-1, h_1291852515);
  };

  return result_1291852464;

}

function mgetOrPut_1291854874(t_1291854877, key_1291854878, val_1291854879) {
  var result_1291854880 = null;
  var result_1291854880_Idx = 0;

    if (((t_1291854877.data).length == 0)) {
    var correctSizeHEX60gensym271_1291854929 = slotsNeeded_1308622891(32);
    t_1291854877.counter = 0;
    t_1291854877.data = new Array(chckRange(correctSizeHEX60gensym271_1291854929, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym271_1291854929, 0, 2147483647) ; ++i) { t_1291854877.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291854934 = [0];
    var index_1291854941 = rawGet_1291848303(t_1291854877, key_1291854878, hc_1291854934, 0);
    if ((index_1291854941 < 0)) {
    if (((t_1291854877.data).length == 0)) {
    var correctSizeHEX60gensym274_1291854990 = slotsNeeded_1308622891(32);
    t_1291854877.counter = 0;
    t_1291854877.data = new Array(chckRange(correctSizeHEX60gensym274_1291854990, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym274_1291854990, 0, 2147483647) ; ++i) { t_1291854877.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    if (mustRehash_1291851831(t_1291854877)) {
    enlarge_1291851986(t_1291854877);
    index_1291854941 = rawGetKnownHC_1291852458(t_1291854877, key_1291854878, hc_1291854934[0]);
    }
    
    index_1291854941 = subInt(-1, index_1291854941);
    rawInsert_1291852280(t_1291854877, t_1291854877, "data", key_1291854878, val_1291854879, hc_1291854934[0], index_1291854941);
    t_1291854877.counter = addInt(t_1291854877.counter, 1);
    }
    
    result_1291854880 = t_1291854877.data[chckIndx(index_1291854941, 0, (t_1291854877.data).length - 1)]; result_1291854880_Idx = "Field2";

  return [result_1291854880, result_1291854880_Idx];

}

function changeLayoutProp_1291854844(self_1291854845, prop_1291854846, change_1291854847) {
    var Temporary1;

    HEX2BHEX3D_2080374895((Temporary1 = mgetOrPut_1291854874(self_1291854845.layout_props.props, prop_1291854846, 0.0), Temporary1)[0], Temporary1[1], change_1291854847);
    requestRender_2315255899(self_1291854845.platform, true);

  
}

function changeLayoutPropJsWrapper_1291854840(self_1291855125, prop_1291855126, change_1291855127) {
    changeLayoutProp_1291854844(self_1291855125, prop_1291855126, change_1291855127);

  
}
editor_prototype.changeLayoutProp = function(prop_ /* : string */, change_ /* : float32 */) { return (changeLayoutPropJsWrapper_1291854840(this, prop_ == undefined ? undefined : cstrToNimstr(prop_), change_));};

function toggleStatusBarLocation_1291855160(self_1291855161) {
    self_1291855161.statusBarOnTop = !(self_1291855161.statusBarOnTop);
    requestRender_2315255899(self_1291855161.platform, true);

  
}

function toggleStatusBarLocationJsWrapper_1291855156(self_1291855188) {
    toggleStatusBarLocation_1291855160(self_1291855188);

  
}
editor_prototype.toggleStatusBarLocation = function() { return (toggleStatusBarLocationJsWrapper_1291855156(this));};

function createEditorForDocument_1291848869(self_1291848870, document_1291848871) {
  var result_1291848872 = null;

  BeforeRet: {
    Label1: {
      var editor_1291848895 = null;
      var i_1291855248 = 0;
      var L_1291855249 = (self_1291848870.editor_defaults).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855248 < L_1291855249)) break Label3;
            editor_1291848895 = self_1291848870.editor_defaults[chckIndx(i_1291855248, 0, (self_1291848870.editor_defaults).length - 1)];
            if (canEdit_2147483771(editor_1291848895, document_1291848871)) {
            result_1291848872 = createWithDocument_2147483786(editor_1291848895, document_1291848871);
            break BeforeRet;
            }
            
            i_1291855248 = addInt(i_1291855248, 1);
            if (!(((self_1291848870.editor_defaults).length == L_1291855249))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    log_1174405220(logger_704643272[0], 5, [([78,111,32,101,100,105,116,111,114,32,102,111,117,110,100,32,119,104,105,99,104,32,99,97,110,32,101,100,105,116,32] || []).concat(HEX24_2130706438(document_1291848871) || [])]);
    result_1291848872 = null;
    break BeforeRet;
  };

  return result_1291848872;

}

function createView_1291848949(self_1291848950, document_1291848951) {
    
function HEX3Aanonymous_1291848964() {
        requestRender_2315255899(self_1291848950.platform, false);

      
    }

    var editor_1291848952 = createEditorForDocument_1291848869(self_1291848950, document_1291848951);
    injectDependencies_1291847744(editor_1291848952, self_1291848950);
    var _ = subscribe_1291848988(editor_1291848952.onMarkedDirty, HEX3Aanonymous_1291848964);
    var view_1291849015 = {document: document_1291848951, editor: editor_1291848952};
    self_1291848950.views.push(view_1291849015);;
    self_1291848950.currentView = subInt((self_1291848950.views).length, 1);
    requestRender_2315255899(self_1291848950.platform, false);

  
}

function createView_1291855204(self_1291855205) {
    createView_1291848949(self_1291855205, newTextDocument_3154117191([], []));

  
}

function createViewJsWrapper_1291855200(self_1291855236) {
    createView_1291855204(self_1291855236);

  
}
editor_prototype.createView = function() { return (createViewJsWrapper_1291855200(this));};

function delete_1291855259(x_1291855261, x_1291855261_Idx, i_1291855262) {
    x_1291855261[x_1291855261_Idx].splice(i_1291855262, 1);

  
}

function closeCurrentView_1291855257(self_1291855258) {
    unregister_2147483811(self_1291855258.views[chckIndx(self_1291855258.currentView, 0, (self_1291855258.views).length - 1)].editor);
    delete_1291855259(self_1291855258, "views", chckRange(self_1291855258.currentView, 0, 2147483647));
    self_1291855258.currentView = clamp_1660945119(self_1291855258.currentView, 0, subInt((self_1291855258.views).length, 1));
    requestRender_2315255899(self_1291855258.platform, false);

  
}

function closeCurrentViewJsWrapper_1291855253(self_1291855315) {
    closeCurrentView_1291855257(self_1291855315);

  
}
editor_prototype.closeCurrentView = function() { return (closeCurrentViewJsWrapper_1291855253(this));};

function insert_1291855349(x_1291855351, x_1291855351_Idx, item_1291855352, i_1291855353) {
    var it_1291855373 = null;
    x_1291855351[x_1291855351_Idx] = x_1291855351[x_1291855351_Idx] || []; x_1291855351[x_1291855351_Idx].splice(i_1291855353, 0, it_1291855373);
    x_1291855351[x_1291855351_Idx][chckIndx(i_1291855353, 0, (x_1291855351[x_1291855351_Idx]).length - 1)] = item_1291855352;

  
}

function moveCurrentViewToTop_1291855336(self_1291855337) {
    if ((0 < (self_1291855337.views).length)) {
    var view_1291855344 = self_1291855337.views[chckIndx(self_1291855337.currentView, 0, (self_1291855337.views).length - 1)];
    delete_1291855259(self_1291855337, "views", chckRange(self_1291855337.currentView, 0, 2147483647));
    insert_1291855349(self_1291855337, "views", view_1291855344, 0);
    }
    
    self_1291855337.currentView = 0;
    requestRender_2315255899(self_1291855337.platform, false);

  
}

function moveCurrentViewToTopJsWrapper_1291855332(self_1291855400) {
    moveCurrentViewToTop_1291855336(self_1291855400);

  
}
editor_prototype.moveCurrentViewToTop = function() { return (moveCurrentViewToTopJsWrapper_1291855332(this));};

function nextView_1291855417(self_1291855418) {
    var Temporary1;

    if (((self_1291855418.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(addInt(self_1291855418.currentView, 1), (self_1291855418.views).length);
    }
    
    self_1291855418.currentView = Temporary1;
    requestRender_2315255899(self_1291855418.platform, false);

  
}

function nextViewJsWrapper_1291855413(self_1291855451) {
    nextView_1291855417(self_1291855451);

  
}
editor_prototype.nextView = function() { return (nextViewJsWrapper_1291855413(this));};

function prevView_1291855467(self_1291855468) {
    var Temporary1;

    if (((self_1291855468.views).length == 0)) {
    Temporary1 = 0;
    }
    else {
    Temporary1 = modInt(subInt(addInt(self_1291855468.currentView, (self_1291855468.views).length), 1), (self_1291855468.views).length);
    }
    
    self_1291855468.currentView = Temporary1;
    requestRender_2315255899(self_1291855468.platform, false);

  
}

function prevViewJsWrapper_1291855463(self_1291855504) {
    prevView_1291855467(self_1291855504);

  
}
editor_prototype.prevView = function() { return (prevViewJsWrapper_1291855463(this));};

function moveCurrentViewPrev_1291855520(self_1291855521) {
    if ((0 < (self_1291855521.views).length)) {
    var view_1291855528 = self_1291855521.views[chckIndx(self_1291855521.currentView, 0, (self_1291855521.views).length - 1)];
    var index_1291855535 = modInt(subInt(addInt(self_1291855521.currentView, (self_1291855521.views).length), 1), (self_1291855521.views).length);
    delete_1291855259(self_1291855521, "views", chckRange(self_1291855521.currentView, 0, 2147483647));
    insert_1291855349(self_1291855521, "views", view_1291855528, chckRange(index_1291855535, 0, 2147483647));
    self_1291855521.currentView = index_1291855535;
    }
    
    requestRender_2315255899(self_1291855521.platform, false);

  
}

function moveCurrentViewPrevJsWrapper_1291855516(self_1291855571) {
    moveCurrentViewPrev_1291855520(self_1291855571);

  
}
editor_prototype.moveCurrentViewPrev = function() { return (moveCurrentViewPrevJsWrapper_1291855516(this));};

function moveCurrentViewNext_1291855587(self_1291855588) {
    if ((0 < (self_1291855588.views).length)) {
    var view_1291855595 = self_1291855588.views[chckIndx(self_1291855588.currentView, 0, (self_1291855588.views).length - 1)];
    var index_1291855599 = modInt(addInt(self_1291855588.currentView, 1), (self_1291855588.views).length);
    delete_1291855259(self_1291855588, "views", chckRange(self_1291855588.currentView, 0, 2147483647));
    insert_1291855349(self_1291855588, "views", view_1291855595, chckRange(index_1291855599, 0, 2147483647));
    self_1291855588.currentView = index_1291855599;
    }
    
    requestRender_2315255899(self_1291855588.platform, false);

  
}

function moveCurrentViewNextJsWrapper_1291855583(self_1291855635) {
    moveCurrentViewNext_1291855587(self_1291855635);

  
}
editor_prototype.moveCurrentViewNext = function() { return (moveCurrentViewNextJsWrapper_1291855583(this));};

function setLayout_1291855651(self_1291855652, layout_1291855653) {
    var Temporary1;

    switch (toJSStr(layout_1291855653)) {
    case "horizontal":
      Temporary1 = {m_type: NTI1291845643};
      break;
    case "vertical":
      Temporary1 = {m_type: NTI1291845644};
      break;
    case "fibonacci":
      Temporary1 = {m_type: NTI1291845645};
      break;
    default: 
      Temporary1 = {m_type: NTI1291845643};
      break;
    }
    self_1291855652.layout = Temporary1;
    requestRender_2315255899(self_1291855652.platform, false);

  
}

function setLayoutJsWrapper_1291855647(self_1291855717, layout_1291855718) {
    setLayout_1291855651(self_1291855717, layout_1291855718);

  
}
editor_prototype.setLayout = function(layout_ /* : string */) { return (setLayoutJsWrapper_1291855647(this, layout_ == undefined ? undefined : cstrToNimstr(layout_)));};

function getCommandLineTextEditor_1291851054(self_1291851055) {
  var result_1291851056 = null;

    result_1291851056 = self_1291851055.commandLineTextEditor;

  return result_1291851056;

}

function commandLine_1291855739(self_1291855740, initialValue_1291855741) {
    contentHEX3D_2801796097(getCommandLineTextEditor_1291851054(self_1291855740).document, [nimCopy(null, initialValue_1291855741, NTI33554449)]);
    self_1291855740.commandLineMode = true;
    requestRender_2315255899(self_1291855740.platform, false);

  
}

function commandLineJsWrapper_1291855735(self_1291855773, initialValue_1291855774) {
    commandLine_1291855739(self_1291855773, initialValue_1291855774);

  
}
editor_prototype.commandLine = function(initialValue_ /* : string */) { return (commandLineJsWrapper_1291855735(this, initialValue_ == undefined ? undefined : cstrToNimstr(initialValue_)));};

function exitCommandLine_1291855795(self_1291855796) {
    contentHEX3D_2801796097(getCommandLineTextEditor_1291851054(self_1291855796).document, [[]]);
    self_1291855796.commandLineMode = false;
    requestRender_2315255899(self_1291855796.platform, false);

  
}

function exitCommandLineJsWrapper_1291855791(self_1291855827) {
    exitCommandLine_1291855795(self_1291855827);

  
}
editor_prototype.exitCommandLine = function() { return (exitCommandLineJsWrapper_1291855791(this));};

function find_1593835603(a_1593835606, item_1593835607) {
  var result_1593835608 = 0;

  BeforeRet: {
    result_1593835608 = 0;
    Label1: {
      var i_1593835609 = 0;
      var i_1291855900 = 0;
      var L_1291855901 = (a_1593835606).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291855900 < L_1291855901)) break Label3;
            i_1593835609 = a_1593835606[chckIndx(i_1291855900, 0, (a_1593835606).length - 1)];
            if ((i_1593835609 == item_1593835607)) {
            break BeforeRet;
            }
            
            result_1593835608 = addInt(result_1593835608, 1);
            i_1291855900 = addInt(i_1291855900, 1);
            if (!(((a_1593835606).length == L_1291855901))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };
    result_1593835608 = -1;
  };

  return result_1593835608;

}

function parseAction_2046821786(action_2046821787) {
  var result_2046821790 = {Field0: [], Field1: []};

  BeforeRet: {
    var spaceIndex_2046821796 = find_1593835603(action_2046821787, 32);
    if ((spaceIndex_2046821796 == -1)) {
    var colontmp__1291855895 = nimCopy(null, action_2046821787, NTI33554449);
    var colontmp__1291855896 = [];
    result_2046821790 = nimCopy(result_2046821790, {Field0: nimCopy(null, colontmp__1291855895, NTI33554449), Field1: nimCopy(null, colontmp__1291855896, NTI33554449)}, NTI2046821074);
    break BeforeRet;
    }
    else {
      var colontmp__1291855897 = HEX5BHEX5D_855639291(action_2046821787, HEX2EHEX2E_805306418(0, subInt(spaceIndex_2046821796, 1)));
      var colontmp__1291855898 = HEX5BHEX5D_855639319(action_2046821787, HEX2EHEX2E_1040187488(addInt(spaceIndex_2046821796, 1), 1));
      result_2046821790 = nimCopy(result_2046821790, {Field0: nimCopy(null, colontmp__1291855897, NTI33554449), Field1: nimCopy(null, colontmp__1291855898, NTI33554449)}, NTI2046821074);
      break BeforeRet;
    }
    
  };

  return result_2046821790;

}

function executeCommandLine_1291855843(self_1291855844) {
  var result_1291855845 = false;

  BeforeRet: {
    try {
    self_1291855844.commandLineMode = false;
    var colontmp__1291855894 = parseAction_2046821786(nsuJoinSep(content_2801796219(getCommandLineTextEditor_1291851054(self_1291855844).document), []));
    var action_1291855846 = nimCopy(null, colontmp__1291855894["Field0"], NTI33554449);
    var arg_1291855847 = nimCopy(null, colontmp__1291855894["Field1"], NTI33554449);
    contentHEX3D_2801796097(getCommandLineTextEditor_1291851054(self_1291855844).document, [[]]);
    result_1291855845 = handleAction_1291848861(self_1291855844, action_1291855846, arg_1291855847);
    break BeforeRet;
    } finally {
    requestRender_2315255899(self_1291855844.platform, false);
    }
  };

  return result_1291855845;

}

function executeCommandLineJsWrapper_1291855839(self_1291855879) {
  var result_1291855880 = false;

    result_1291855880 = executeCommandLine_1291855843(self_1291855879);

  return result_1291855880;

}
editor_prototype.executeCommandLine = function() { return (executeCommandLineJsWrapper_1291855839(this));};

function nsuEndsWith(s_855639486, suffix_855639487) {
  var result_855639488 = false;

  BeforeRet: {
    var suffixLenHEX60gensym153_855639494 = (suffix_855639487).length;
    var sLenHEX60gensym153_855639495 = (s_855639486).length;
    var iHEX60gensym153_855639496 = 0;
    var jHEX60gensym153_855639497 = subInt(sLenHEX60gensym153_855639495, suffixLenHEX60gensym153_855639494);
    Label1: {
        Label2: while (true) {
        if (!((0 <= addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497)) && (addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497) < sLenHEX60gensym153_855639495))) break Label2;
          if (!((s_855639486[chckIndx(addInt(iHEX60gensym153_855639496, jHEX60gensym153_855639497), 0, (s_855639486).length - 1)] == suffix_855639487[chckIndx(iHEX60gensym153_855639496, 0, (suffix_855639487).length - 1)]))) {
          result_855639488 = false;
          break BeforeRet;
          }
          
          iHEX60gensym153_855639496 = addInt(iHEX60gensym153_855639496, 1);
        }
    };
    if ((suffixLenHEX60gensym153_855639494 <= iHEX60gensym153_855639496)) {
    result_855639488 = true;
    break BeforeRet;
    }
    
  };

  return result_855639488;

}

function getVarType_1627395261(x_1627395262, isRawNumber_1627395263, isRawNumber_1627395263_Idx) {
        var Temporary1;

  var result_1627395264 = 0;

  BeforeRet: {
    result_1627395264 = 0;
    switch (toJSStr(cstrToNimstr(Object.prototype.toString.call(x_1627395262)))) {
    case "[object Array]":
      result_1627395264 = 6;
      break BeforeRet;
      break;
    case "[object Object]":
      result_1627395264 = 5;
      break BeforeRet;
      break;
    case "[object Number]":
        if (!Number.isInteger(x_1627395262)) Temporary1 = false; else {          Temporary1 = !(((1.0 / x_1627395262) == -Infinity));        }      if (Temporary1) {
      if (Number.isSafeInteger(x_1627395262)) {
      result_1627395264 = 2;
      break BeforeRet;
      }
      else {
        isRawNumber_1627395263[isRawNumber_1627395263_Idx] = true;
        result_1627395264 = 4;
        break BeforeRet;
      }
      
      }
      else {
        result_1627395264 = 3;
        break BeforeRet;
      }
      
      break;
    case "[object Boolean]":
      result_1627395264 = 1;
      break BeforeRet;
      break;
    case "[object Null]":
      result_1627395264 = 0;
      break BeforeRet;
      break;
    case "[object String]":
      result_1627395264 = 4;
      break BeforeRet;
      break;
    default: 
      if (true) {
      failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,57,56,51,44,32,49,49,41,32,96,102,97,108,115,101,96,32]);
      }
      
      break;
    }
  };

  return result_1627395264;

}

function newJArray_1627390082() {
  var result_1627390083 = null;

    result_1627390083 = {kind: 6, elems: [], isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1627390083;

}

function len_1627395282(x_1627395283) {
  var result_1627395284 = 0;

          result_1627395284 = x_1627395283.length;
    

  return result_1627395284;

}

function add_1627390190(father_1627390191, child_1627390192) {
    var Temporary1;

    if (!((father_1627390191.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,51,48,49,44,32,51,41,32,96,102,97,116,104,101,114,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = father_1627390191;
    if (ConstSet198[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    Temporary1.elems.push(child_1627390192);;

  
}

function newJFloat_1627390043(n_1627390044) {
  var result_1627390045 = null;

    result_1627390045 = {kind: 3, fnum: n_1627390044, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390045;

}

function newJRawNumber_1627390037(s_1627390038) {
  var result_1627390039 = null;

    result_1627390039 = {kind: 4, str: nimCopy(null, s_1627390038, NTI33554449), isUnquoted: true, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390039;

}

function newJNull_1627390049() {
  var result_1627390050 = null;

    result_1627390050 = {kind: 0, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627390050;

}

function convertObject_1627395285(x_1627395286) {
  var result_1627395287 = null;

    var isRawNumber_1627395288 = [false];
    switch (getVarType_1627395261(x_1627395286, isRawNumber_1627395288, 0)) {
    case 6:
      result_1627395287 = newJArray_1627390082();
      Label1: {
        var i_1627395293 = 0;
        var colontmp__1291855995 = 0;
        colontmp__1291855995 = len_1627395282(x_1627395286);
        var i_1291855996 = 0;
        Label2: {
            Label3: while (true) {
            if (!(i_1291855996 < colontmp__1291855995)) break Label3;
              i_1627395293 = i_1291855996;
              add_1627390190(result_1627395287, convertObject_1627395285(x_1627395286[i_1627395293]));
              i_1291855996 = addInt(i_1291855996, 1);
            }
        };
      };
      break;
    case 5:
      result_1627395287 = newJObject_1627390051();
      for (var property in x_1627395286) {
        if (x_1627395286.hasOwnProperty(property)) {
      
      var nimProperty_1627395294 = null;
      var nimValue_1627395295 = null;
      nimProperty_1627395294 = property; nimValue_1627395295 = x_1627395286[property];
      HEX5BHEX5DHEX3D_1627391903(result_1627395287, cstrToNimstr(nimProperty_1627395294), convertObject_1627395285(nimValue_1627395295));
      }}
      break;
    case 2:
      result_1627395287 = newJInt_1627390040((x_1627395286));
      break;
    case 3:
      result_1627395287 = newJFloat_1627390043((x_1627395286));
      break;
    case 4:
      if (isRawNumber_1627395288[0]) {
      var value_1627395304 = null;
      value_1627395304 = x_1627395286.toString();
      result_1627395287 = newJRawNumber_1627390037(cstrToNimstr(value_1627395304));
      }
      else {
        result_1627395287 = newJString_1627389994(cstrToNimstr((x_1627395286)));
      }
      
      break;
    case 1:
      result_1627395287 = newJBool_1627390046((x_1627395286));
      break;
    case 0:
      result_1627395287 = newJNull_1627390049();
      break;
    }

  return result_1627395287;

}

function parseJson_1627395313(buffer_1627395314) {
  var result_1627395315 = null;

  BeforeRet: {
    result_1627395315 = convertObject_1627395285(JSON.parse(toJSStr(buffer_1627395314)));
    break BeforeRet;
  };

  return result_1627395315;

}

function HEX3DHEX3D_1627392043(x_1627392045, y_1627392046) {
  var result_1627392047 = false;

  BeforeRet: {
    var sameObject_1627392055 = false;
    sameObject_1627392055 = x_1627392045 === y_1627392046
    if (sameObject_1627392055) {
    result_1627392047 = true;
    break BeforeRet;
    }
    
    if (!(((x_1627392045).length == (y_1627392046).length))) {
    result_1627392047 = false;
    break BeforeRet;
    }
    
    Label1: {
      var i_1627392069 = 0;
      var colontmp__1291856020 = 0;
      colontmp__1291856020 = subInt((x_1627392045).length, 1);
      var res_1291856021 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291856021 <= colontmp__1291856020)) break Label3;
            i_1627392069 = res_1291856021;
            if (!(HEX3DHEX3D_1627392026(x_1627392045[chckIndx(i_1627392069, 0, (x_1627392045).length - 1)], y_1627392046[chckIndx(i_1627392069, 0, (y_1627392046).length - 1)]))) {
            result_1627392047 = false;
            break BeforeRet;
            }
            
            res_1291856021 = addInt(res_1291856021, 1);
          }
      };
    };
    result_1627392047 = true;
    break BeforeRet;
  };

  return result_1627392047;

}

function len_1627392114(t_1627392117) {
  var result_1627392118 = 0;

    result_1627392118 = t_1627392117.counter;

  return result_1627392118;

}

function HEX3DHEX3D_1627392026(a_1627392027, b_1627392028) {
        var Temporary1;
        var Temporary2;
        var Temporary3;
        var Temporary4;
        var Temporary5;
        var Temporary6;
        var Temporary7;
        var Temporary8;
        var Temporary9;
        var Temporary10;
          var Temporary11;
          var Temporary12;
          var Temporary14;
                  var Temporary17;
                  var Temporary18;
                  var Temporary19;

  var result_1627392029 = false;

  BeforeRet: {
    if ((a_1627392027 == null)) {
    if ((b_1627392028 == null)) {
    result_1627392029 = true;
    break BeforeRet;
    }
    
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
    if (((b_1627392028 == null) || !((a_1627392027.kind == b_1627392028.kind)))) {
    result_1627392029 = false;
    break BeforeRet;
    }
    else {
      switch (a_1627392027.kind) {
      case 4:
        var Temporary1 = a_1627392027;
        if (ConstSet199[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
        var Temporary2 = b_1627392028;
        if (ConstSet200[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        result_1627392029 = eqStrings(Temporary1.str, Temporary2.str);
        break;
      case 2:
        var Temporary3 = a_1627392027;
        if (ConstSet201[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        var Temporary4 = b_1627392028;
        if (ConstSet202[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        result_1627392029 = (Temporary3.num == Temporary4.num);
        break;
      case 3:
        var Temporary5 = a_1627392027;
        if (ConstSet203[Temporary5.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary5.kind, NTI1627389955)); }
        var Temporary6 = b_1627392028;
        if (ConstSet204[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        result_1627392029 = (Temporary5.fnum == Temporary6.fnum);
        break;
      case 1:
        var Temporary7 = a_1627392027;
        if (ConstSet205[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        var Temporary8 = b_1627392028;
        if (ConstSet206[Temporary8.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary8.kind, NTI1627389955)); }
        result_1627392029 = (Temporary7.bval == Temporary8.bval);
        break;
      case 0:
        result_1627392029 = true;
        break;
      case 6:
        var Temporary9 = a_1627392027;
        if (ConstSet207[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
        var Temporary10 = b_1627392028;
        if (ConstSet208[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
        result_1627392029 = HEX3DHEX3D_1627392043(Temporary9.elems, Temporary10.elems);
        break;
      case 5:
          var Temporary11 = a_1627392027;
          if (ConstSet209[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
          var Temporary12 = b_1627392028;
          if (ConstSet210[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        if (!((len_1627392114(Temporary11.fields) == len_1627392114(Temporary12.fields)))) {
        result_1627392029 = false;
        break BeforeRet;
        }
        
        Label13: {
          var key_1627392496 = [];
          var val_1627392497 = null;
          var colontmp__1291856013 = ({data: [], counter: 0, first: 0, last: 0});
          var Temporary14 = a_1627392027;
          if (ConstSet211[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
          colontmp__1291856013 = nimCopy(colontmp__1291856013, Temporary14.fields, NTI1627389966);
          var L_1291856015 = len_1627392114(colontmp__1291856013);
          if ((0 < colontmp__1291856013.counter)) {
          var h_1291856016 = colontmp__1291856013.first;
          Label15: {
              Label16: while (true) {
              if (!(0 <= h_1291856016)) break Label16;
                var nxt_1291856018 = colontmp__1291856013.data[chckIndx(h_1291856016, 0, (colontmp__1291856013.data).length - 1)].Field1;
                if (isFilled_1308622880(colontmp__1291856013.data[chckIndx(h_1291856016, 0, (colontmp__1291856013.data).length - 1)].Field0)) {
                key_1627392496 = colontmp__1291856013.data[chckIndx(h_1291856016, 0, (colontmp__1291856013.data).length - 1)].Field2;
                val_1627392497 = colontmp__1291856013.data[chckIndx(h_1291856016, 0, (colontmp__1291856013.data).length - 1)].Field3;
                  var Temporary17 = b_1627392028;
                  if (ConstSet212[Temporary17.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary17.kind, NTI1627389955)); }
                if (!(hasKey_1627392538(Temporary17.fields, key_1627392496))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                  var Temporary18 = b_1627392028;
                  if (ConstSet213[Temporary18.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary18.kind, NTI1627389955)); }
                if (!(HEX3DHEX3D_1627392026((Temporary19 = HEX5BHEX5D_1627392612(Temporary18.fields, key_1627392496), Temporary19)[0][Temporary19[1]], val_1627392497))) {
                result_1627392029 = false;
                break BeforeRet;
                }
                
                if (!((len_1627392114(colontmp__1291856013) == L_1291856015))) {
                failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
                }
                
                }
                
                h_1291856016 = nxt_1291856018;
              }
          };
          }
          
        };
        result_1627392029 = true;
        break;
      }
    }
    }
  };

  return result_1627392029;

}

function raiseJsonException_1811939497(condStr_1811939498, msg_1811939499) {
    raiseException({message: (condStr_1811939498 || []).concat([32,102,97,105,108,101,100,58,32] || [],msg_1811939499 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function len_1627392983(n_1627392984) {
      var Temporary1;
      var Temporary2;

  var result_1627392985 = 0;

    switch (n_1627392984.kind) {
    case 6:
      var Temporary1 = n_1627392984;
      if (ConstSet214[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627392985 = (Temporary1.elems).length;
      break;
    case 5:
      var Temporary2 = n_1627392984;
      if (ConstSet215[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      result_1627392985 = len_1627392114(Temporary2.fields);
      break;
    default: 
      break;
    }

  return result_1627392985;

}

function toHexImpl_855638788(x_855638789, len_855638790, handleNegative_855638791) {
  var result_855638792 = [];

    var n_855638794 = x_855638789;
    result_855638792 = nimCopy(null, mnewString(len_855638790), NTI33554449);
    Label1: {
      var j_855638800 = 0;
      var colontmp__1291856039 = 0;
      colontmp__1291856039 = subInt(len_855638790, 1);
      var res_1291856040 = colontmp__1291856039;
      Label2: {
          Label3: while (true) {
          if (!(0 <= res_1291856040)) break Label3;
            j_855638800 = res_1291856040;
            result_855638792[chckIndx(j_855638800, 0, (result_855638792).length - 1)] = [48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70][chckIndx((n_855638794 & 15), 0, ([48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70]).length - 1)];
            n_855638794 = (n_855638794 >>> 4);
            if (((n_855638794 == 0) && handleNegative_855638791)) {
            n_855638794 = 4294967295;
            }
            
            res_1291856040 = subInt(res_1291856040, 1);
          }
      };
    };

  return result_855638792;

}

function toHex_855640046(x_855640048, len_855640049) {
  var result_855640050 = [];

    result_855640050 = nimCopy(null, toHexImpl_855638788((x_855640048 >>> 0), len_855640049, (x_855640048 < 0)), NTI33554449);

  return result_855640050;

}

function escapeJsonUnquoted_1627394346(s_1627394347, result_1627394348, result_1627394348_Idx) {
    Label1: {
      var c_1627394349 = 0;
      var i_1291856035 = 0;
      var L_1291856036 = (s_1627394347).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856035 < L_1291856036)) break Label3;
            c_1627394349 = s_1627394347[chckIndx(i_1291856035, 0, (s_1627394347).length - 1)];
            switch (c_1627394349) {
            case 10:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,110]);;
              break;
            case 8:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,98]);;
              break;
            case 12:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,102]);;
              break;
            case 9:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,116]);;
              break;
            case 11:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,117,48,48,48,98]);;
              break;
            case 13:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,114]);;
              break;
            case 34:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,34]);;
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48,48] || []).concat(HEX24_369098760(c_1627394349) || []));;
              break;
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], ([92,117,48,48] || []).concat(toHex_855640046(c_1627394349, 2) || []));;
              break;
            case 92:
              result_1627394348[result_1627394348_Idx].push.apply(result_1627394348[result_1627394348_Idx], [92,92]);;
              break;
            default: 
              addChar(result_1627394348[result_1627394348_Idx], c_1627394349);;
              break;
            }
            i_1291856035 = addInt(i_1291856035, 1);
            if (!(((s_1627394347).length == L_1291856036))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(264, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function escapeJson_1627394367(s_1627394368, result_1627394369, result_1627394369_Idx) {
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;
    escapeJsonUnquoted_1627394346(s_1627394368, result_1627394369, result_1627394369_Idx);
    result_1627394369[result_1627394369_Idx].push.apply(result_1627394369[result_1627394369_Idx], [34]);;

  
}

function toUgly_1627394377(result_1627394378, result_1627394378_Idx, node_1627394379) {
        var Temporary2;
        var Temporary6;
      var Temporary9;
        var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
        var Temporary14;

    var comma_1627394380 = false;
    switch (node_1627394379.kind) {
    case 6:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [91]);;
      Label1: {
        var child_1627394384 = null;
        var colontmp__1291856024 = [];
        var Temporary2 = node_1627394379;
        if (ConstSet216[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
        colontmp__1291856024 = Temporary2.elems;
        var i_1291856025 = 0;
        var L_1291856026 = (colontmp__1291856024).length;
        Label3: {
            Label4: while (true) {
            if (!(i_1291856025 < L_1291856026)) break Label4;
              child_1627394384 = colontmp__1291856024[chckIndx(i_1291856025, 0, (colontmp__1291856024).length - 1)];
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, child_1627394384);
              i_1291856025 = addInt(i_1291856025, 1);
              if (!(((colontmp__1291856024).length == L_1291856026))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [93]);;
      break;
    case 5:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [123]);;
      Label5: {
        var key_1627394389 = [];
        var value_1627394390 = null;
        var colontmp__1291856029 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary6 = node_1627394379;
        if (ConstSet217[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
        colontmp__1291856029 = nimCopy(colontmp__1291856029, Temporary6.fields, NTI1627389966);
        var L_1291856030 = len_1627392114(colontmp__1291856029);
        if ((0 < colontmp__1291856029.counter)) {
        var h_1291856031 = colontmp__1291856029.first;
        Label7: {
            Label8: while (true) {
            if (!(0 <= h_1291856031)) break Label8;
              var nxt_1291856033 = colontmp__1291856029.data[chckIndx(h_1291856031, 0, (colontmp__1291856029.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291856029.data[chckIndx(h_1291856031, 0, (colontmp__1291856029.data).length - 1)].Field0)) {
              key_1627394389 = colontmp__1291856029.data[chckIndx(h_1291856031, 0, (colontmp__1291856029.data).length - 1)].Field2;
              value_1627394390 = colontmp__1291856029.data[chckIndx(h_1291856031, 0, (colontmp__1291856029.data).length - 1)].Field3;
              if (comma_1627394380) {
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [44]);;
              }
              else {
                comma_1627394380 = true;
              }
              
              escapeJson_1627394367(key_1627394389, result_1627394378, result_1627394378_Idx);
              result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [58]);;
              toUgly_1627394377(result_1627394378, result_1627394378_Idx, value_1627394390);
              if (!((len_1627392114(colontmp__1291856029) == L_1291856030))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291856031 = nxt_1291856033;
            }
        };
        }
        
      };
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [125]);;
      break;
    case 4:
      if (node_1627394379.isUnquoted) {
      var Temporary9 = node_1627394379;
      if (ConstSet218[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary9.str);;
      }
      else {
        var Temporary10 = node_1627394379;
        if (ConstSet219[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      escapeJson_1627394367(Temporary10.str, result_1627394378, result_1627394378_Idx);
      }
      
      break;
    case 2:
      var Temporary11 = node_1627394379;
      if (ConstSet220[Temporary11.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary11.kind, NTI1627389955)); }
      addInt_301990087(result_1627394378, result_1627394378_Idx, Temporary11.num);
      break;
    case 3:
      var Temporary12 = node_1627394379;
      if (ConstSet221[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394378, result_1627394378_Idx, Temporary12.fnum);
      break;
    case 1:
        var Temporary14 = node_1627394379;
        if (ConstSet222[Temporary14.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary14.kind, NTI1627389955)); }
      if (Temporary14.bval) {
      Temporary13 = [116,114,117,101];
      }
      else {
      Temporary13 = [102,97,108,115,101];
      }
      
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], Temporary13);;
      break;
    case 0:
      result_1627394378[result_1627394378_Idx].push.apply(result_1627394378[result_1627394378_Idx], [110,117,108,108]);;
      break;
    }

  
}

function HEX24_1627394481(node_1627394482) {
  var result_1627394483 = [[]];

    result_1627394483[0] = nimCopy(null, mnewString(0), NTI33554449);
    toUgly_1627394377(result_1627394483, 0, node_1627394482);

  return result_1627394483[0];

}

function addQuoted_1811939807(s_1811939809, s_1811939809_Idx, x_1811939810) {
    s_1811939809[s_1811939809_Idx].push.apply(s_1811939809[s_1811939809_Idx], HEX24_1627394481(x_1811939810));;

  
}

function HEX24_1811939763(x_1811939765) {
  var result_1811939766 = [[]];

    result_1811939766[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym29_1811939777 = 0;
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    addQuoted_1593835572(result_1811939766, 0, x_1811939765["Field0"]);
    if ((0 < countHEX60gensym29_1811939777)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44,32]);;
    }
    
    countHEX60gensym29_1811939777 += 1;
    if ((x_1811939765["Field1"] == null)) {
    result_1811939766[0].push.apply(result_1811939766[0], [110,105,108]);;
    }
    else {
    addQuoted_1811939807(result_1811939766, 0, x_1811939765["Field1"]);
    }
    
    if ((countHEX60gensym29_1811939777 == 1)) {
    result_1811939766[0].push.apply(result_1811939766[0], [44]);;
    }
    
    result_1811939766[0].push.apply(result_1811939766[0], [41]);;

  return result_1811939766[0];

}

function parseEnum_2969569477(s_2969569479, default_2969569480) {
    var Temporary1;

  var result_2969569481 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2969569479))) {
    case "Empty":
      Temporary1 = 0;
      break;
    case "Identifier":
      Temporary1 = 1;
      break;
    case "Numberliteral":
      Temporary1 = 2;
      break;
    case "Stringliteral":
      Temporary1 = 3;
      break;
    case "Constdecl":
      Temporary1 = 4;
      break;
    case "Letdecl":
      Temporary1 = 5;
      break;
    case "Vardecl":
      Temporary1 = 6;
      break;
    case "Nodelist":
      Temporary1 = 7;
      break;
    case "Call":
      Temporary1 = 8;
      break;
    case "If":
      Temporary1 = 9;
      break;
    case "While":
      Temporary1 = 10;
      break;
    case "Functiondefinition":
      Temporary1 = 11;
      break;
    case "Params":
      Temporary1 = 12;
      break;
    case "Assignment":
      Temporary1 = 13;
      break;
    default: 
      Temporary1 = default_2969569480;
      break;
    }
    result_2969569481 = Temporary1;

  return result_2969569481;

}

function fromJsonHook_2969569474(t_2969569475, t_2969569475_Idx, jsonNode_2969569476) {
    var Temporary1;

    var Temporary1 = jsonNode_2969569476;
    if (ConstSet223[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    t_2969569475[t_2969569475_Idx] = parseEnum_2969569477(Temporary1.str, 0);

  
}

function fromJson_2969569545(a_2969569547, a_2969569547_Idx, b_2969569548, opt_2969569549) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969569548, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,78,111,100,101,75,105,110,100], Field1: b_2969569548}));
    }
    
    fromJsonHook_2969569474(a_2969569547, a_2969569547_Idx, b_2969569548);

  
}

function jsonTo_2969569539(b_2969569541, opt_2969569543) {
  var result_2969569544 = [0];

    fromJson_2969569545(result_2969569544, 0, b_2969569541, opt_2969569543);

  return result_2969569544[0];

}

function fromJsonHook_2181038341(id_2181038342, json_2181038343) {
    var Temporary1;

    if ((json_2181038343.kind == 4)) {
    var Temporary1 = json_2181038343;
    if (ConstSet224[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    id_2181038342 = nimCopy(id_2181038342, parseId_2181038327(Temporary1.str), NTI2181038083);
    }
    else {
      id_2181038342 = nimCopy(id_2181038342, null_2181038340, NTI2181038083);
    }
    

  
}

function fromJson_2969569562(a_2969569564, b_2969569565, opt_2969569566) {
    if (!(!(HEX3DHEX3D_1627392026(b_2969569565, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [73,100], Field1: b_2969569565}));
    }
    
    fromJsonHook_2181038341(a_2969569564, b_2969569565);

  
}

function jsonTo_2969569556(b_2969569558, opt_2969569560) {
  var result_2969569561 = [({padding: 0, time: 0, fuzz: 0, count: 0})];

    fromJson_2969569562(result_2969569561[0], b_2969569558, opt_2969569560);

  return result_2969569561[0];

}

function invalidFormatString_855640335(formatstr_855640336) {
    raiseException({message: ([105,110,118,97,108,105,100,32,102,111,114,109,97,116,32,115,116,114,105,110,103,58,32] || []).concat(formatstr_855640336 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_1107296257(c_1107296258) {
  var result_1107296259 = 0;

    if ((ConstSet229[c_1107296258] != undefined)) {
    result_1107296259 = chckRange(addInt(c_1107296258, 32), 0, 255);
    }
    else {
      result_1107296259 = c_1107296258;
    }
    

  return result_1107296259;

}

function nsuCmpIgnoreStyle(a_855638227, b_855638228) {
          var Temporary7;
          var Temporary8;

  var result_855638229 = 0;

  BeforeRet: {
    var aLenHEX60gensym24_855638238 = (a_855638227).length;
    var bLenHEX60gensym24_855638239 = (b_855638228).length;
    var iHEX60gensym24_855638240 = 0;
    var jHEX60gensym24_855638241 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: {
              Label4: while (true) {
              if (!((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238) && (a_855638227[iHEX60gensym24_855638240] == 95))) break Label4;
                iHEX60gensym24_855638240 += 1;
              }
          };
          Label5: {
              Label6: while (true) {
              if (!((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239) && (b_855638228[jHEX60gensym24_855638241] == 95))) break Label6;
                jHEX60gensym24_855638241 += 1;
              }
          };
          if ((iHEX60gensym24_855638240 < aLenHEX60gensym24_855638238)) {
          Temporary7 = toLowerAscii_1107296257(a_855638227[iHEX60gensym24_855638240]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym24_855638252 = Temporary7;
          if ((jHEX60gensym24_855638241 < bLenHEX60gensym24_855638239)) {
          Temporary8 = toLowerAscii_1107296257(b_855638228[jHEX60gensym24_855638241]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym24_855638253 = Temporary8;
          result_855638229 = (aaHEX60gensym24_855638252 - bbHEX60gensym24_855638253);
          if (!((result_855638229 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym24_855638238 <= iHEX60gensym24_855638240)) {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 0;
          break BeforeRet;
          }
          
          result_855638229 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym24_855638239 <= jHEX60gensym24_855638241)) {
          result_855638229 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym24_855638240 += 1;
          jHEX60gensym24_855638241 += 1;
        }
    };
  };

  return result_855638229;

}

function findNormalized_855640322(x_855640323, inArray_855640324) {
  var result_855640325 = 0;

  BeforeRet: {
    var i_855640326 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640326 < (inArray_855640324).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_855640323, inArray_855640324[chckIndx(i_855640326, 0, (inArray_855640324).length - 1)]) == 0)) {
          result_855640325 = i_855640326;
          break BeforeRet;
          }
          
          i_855640326 = addInt(i_855640326, 2);
        }
    };
    result_855640325 = -1;
    break BeforeRet;
  };

  return result_855640325;

}

function nsuAddf(s_855640339, s_855640339_Idx, formatstr_855640340, a_855640341) {
                  var Temporary5;
            var Temporary6;
            var Temporary9;
                  var Temporary12;

    var i_855640343 = 0;
    var num_855640344 = 0;
    Label1: {
        Label2: while (true) {
        if (!(i_855640343 < (formatstr_855640340).length)) break Label2;
          if (((formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 36) && (addInt(i_855640343, 1) < (formatstr_855640340).length))) {
          switch (formatstr_855640340[chckIndx(addInt(i_855640343, 1), 0, (formatstr_855640340).length - 1)]) {
          case 35:
            if (((a_855640341).length - 1 < num_855640344)) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(num_855640344, 0, (a_855640341).length - 1)]);;
            i_855640343 = addInt(i_855640343, 2);
            num_855640344 = addInt(num_855640344, 1);
            break;
          case 36:
            addChar(s_855640339[s_855640339_Idx], 36);;
            i_855640343 = addInt(i_855640343, 2);
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_855640363 = 0;
            i_855640343 = addInt(i_855640343, 1);
            var negative_855640369 = (formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640369) {
            i_855640343 = addInt(i_855640343, 1);
            }
            
            Label3: {
                Label4: while (true) {
                  if (!(i_855640343 < (formatstr_855640340).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet226[formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_855640363 = subInt(addInt(mulInt(j_855640363, 10), formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]), 48);
                  i_855640343 = addInt(i_855640343, 1);
                }
            };
            if (!(negative_855640369)) {
            Temporary6 = subInt(j_855640363, 1);
            }
            else {
            Temporary6 = subInt((a_855640341).length, j_855640363);
            }
            
            var idx_855640394 = Temporary6;
            if (((idx_855640394 < 0) || ((a_855640341).length - 1 < idx_855640394))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640394, 0, (a_855640341).length - 1)]);;
            break;
          case 123:
            var j_855640398 = addInt(i_855640343, 2);
            var k_855640399 = 0;
            var negative_855640400 = (formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)] == 45);
            if (negative_855640400) {
            j_855640398 = addInt(j_855640398, 1);
            }
            
            var isNumber_855640406 = 0;
            Label7: {
                Label8: while (true) {
                if (!((j_855640398 < (formatstr_855640340).length) && !((ConstSet227[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)))) break Label8;
                  if ((ConstSet228[formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]] != undefined)) {
                  k_855640399 = subInt(addInt(mulInt(k_855640399, 10), formatstr_855640340[chckIndx(j_855640398, 0, (formatstr_855640340).length - 1)]), 48);
                  if ((isNumber_855640406 == 0)) {
                  isNumber_855640406 = 1;
                  }
                  
                  }
                  else {
                    isNumber_855640406 = -1;
                  }
                  
                  j_855640398 = addInt(j_855640398, 1);
                }
            };
            if ((isNumber_855640406 == 1)) {
            if (!(negative_855640400)) {
            Temporary9 = subInt(k_855640399, 1);
            }
            else {
            Temporary9 = subInt((a_855640341).length, k_855640399);
            }
            
            var idx_855640429 = Temporary9;
            if (((idx_855640429 < 0) || ((a_855640341).length - 1 < idx_855640429))) {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(idx_855640429, 0, (a_855640341).length - 1)]);;
            }
            else {
              var x_855640433 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 2), subInt(j_855640398, 1)), a_855640341);
              if (((0 <= x_855640433) && (x_855640433 < (a_855640341).length - 1))) {
              s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640433, 1), 0, (a_855640341).length - 1)]);;
              }
              else {
              invalidFormatString_855640335(formatstr_855640340);
              }
              
            }
            
            i_855640343 = addInt(j_855640398, 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_855640437 = addInt(i_855640343, 1);
            Label10: {
                Label11: while (true) {
                  if (!(j_855640437 < (formatstr_855640340).length)) Temporary12 = false; else {                    Temporary12 = (ConstSet230[formatstr_855640340[chckIndx(j_855640437, 0, (formatstr_855640340).length - 1)]] != undefined);                  }                if (!Temporary12) break Label11;
                  j_855640437 = addInt(j_855640437, 1);
                }
            };
            var x_855640447 = findNormalized_855640322(substr_33557821(formatstr_855640340, addInt(i_855640343, 1), subInt(j_855640437, 1)), a_855640341);
            if (((0 <= x_855640447) && (x_855640447 < (a_855640341).length - 1))) {
            s_855640339[s_855640339_Idx].push.apply(s_855640339[s_855640339_Idx], a_855640341[chckIndx(addInt(x_855640447, 1), 0, (a_855640341).length - 1)]);;
            }
            else {
            invalidFormatString_855640335(formatstr_855640340);
            }
            
            i_855640343 = j_855640437;
            break;
          default: 
            invalidFormatString_855640335(formatstr_855640340);
            break;
          }
          }
          else {
            addChar(s_855640339[s_855640339_Idx], formatstr_855640340[chckIndx(i_855640343, 0, (formatstr_855640340).length - 1)]);;
            i_855640343 = addInt(i_855640343, 1);
          }
          
        }
    };

  
}

function nsuFormatOpenArray(formatstr_855640457, a_855640458) {
  var result_855640459 = [[]];

    result_855640459[0] = nimCopy(null, mnewString(0), NTI33554449);
    nsuAddf(result_855640459, 0, formatstr_855640457, a_855640458);

  return result_855640459[0];

}

function addQuoted_1627395455(s_1627395457, s_1627395457_Idx, x_1627395458) {
    s_1627395457[s_1627395457_Idx].push.apply(s_1627395457[s_1627395457_Idx], reprEnum(x_1627395458, NTI1627389955));;

  
}

function collectionToString_1627395422(x_1627395424, prefix_1627395425, separator_1627395426, suffix_1627395427) {
  var result_1627395428 = [[]];

    result_1627395428[0] = nimCopy(null, prefix_1627395425, NTI33554449);
    var firstElement_1627395429 = true;
    Label1: {
      var value_1627395451 = 0;
      var i_1291856052 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856052 <= 6)) break Label3;
            if ((x_1627395424[i_1291856052] != undefined)) {
            value_1627395451 = i_1291856052;
            if (firstElement_1627395429) {
            firstElement_1627395429 = false;
            }
            else {
            result_1627395428[0].push.apply(result_1627395428[0], separator_1627395426);;
            }
            
            addQuoted_1627395455(result_1627395428, 0, value_1627395451);
            }
            
            i_1291856052 += 1;
          }
      };
    };
    result_1627395428[0].push.apply(result_1627395428[0], suffix_1627395427);;

  return result_1627395428[0];

}

function HEX24_1627395418(x_1627395420) {
  var result_1627395421 = [];

    result_1627395421 = nimCopy(null, collectionToString_1627395422(x_1627395420, [123], [44,32], [125]), NTI33554449);

  return result_1627395421;

}

function initFromJson_1627395339(dst_1627395340, dst_1627395340_Idx, jsonNode_1627395341, jsonPath_1627395342, jsonPath_1627395342_Idx) {
      var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395341, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395342[jsonPath_1627395342_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet225[jsonNode_1627395341.kind] != undefined))) {
    var msgHEX60gensym99_1627395476 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet231), nimCopy(null, jsonPath_1627395342[jsonPath_1627395342_Idx], NTI33554449), reprEnum(jsonNode_1627395341.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym99_1627395476, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    if ((jsonNode_1627395341.kind == 0)) {
    dst_1627395340[dst_1627395340_Idx] = nimCopy(null, [], NTI33554449);
    }
    else {
      var Temporary1 = jsonNode_1627395341;
      if (ConstSet232[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      dst_1627395340[dst_1627395340_Idx] = nimCopy(null, Temporary1.str, NTI33554449);
    }
    

  
}

function to_1811939905(node_1811939908) {
  var result_1811939910 = [[]];

    var jsonPath_1811939911 = [[]];
    result_1811939910[0] = nimCopy(null, [], NTI33554449);
    initFromJson_1627395339(result_1811939910, 0, node_1811939908, jsonPath_1811939911, 0);

  return result_1811939910[0];

}

function fromJson_1811939890(a_1811939892, a_1811939892_Idx, b_1811939893, opt_1811939894) {
    if (!(!(HEX3DHEX3D_1627392026(b_1811939893, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,116,114,105,110,103], Field1: b_1811939893}));
    }
    
    a_1811939892[a_1811939892_Idx] = nimCopy(null, to_1811939905(b_1811939893), NTI33554449);

  
}

function jsonTo_1811939884(b_1811939886, opt_1811939888) {
  var result_1811939889 = [[]];

    fromJson_1811939890(result_1811939889, 0, b_1811939886, opt_1811939888);

  return result_1811939889[0];

}

function jsonToAstNode_2969569535(json_2969569536, opt_2969569537) {
        var Temporary3;

  var result_2969569538 = null;

    result_2969569538 = {parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []};
    result_2969569538.kind = jsonTo_2969569539(HEX5BHEX5D_1627393037(json_2969569536, [107,105,110,100]), {allowExtraKeys: false, allowMissingKeys: false});
    result_2969569538.id = nimCopy(result_2969569538.id, jsonTo_2969569556(HEX5BHEX5D_1627393037(json_2969569536, [105,100]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2181038083);
    if (hasKey_1627393154(json_2969569536, [114,101,102,102])) {
    result_2969569538.reff = nimCopy(result_2969569538.reff, jsonTo_2969569556(HEX5BHEX5D_1627393037(json_2969569536, [114,101,102,102]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2181038083);
    }
    
    if (hasKey_1627393154(json_2969569536, [116,101,120,116])) {
    result_2969569538.text = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2969569536, [116,101,120,116]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2969569536, [99,104,105,108,100,114,101,110])) {
    Label1: {
      var child_2969569583 = null;
      var colontmp__1291855999 = null;
      colontmp__1291855999 = HEX5BHEX5D_1627393037(json_2969569536, [99,104,105,108,100,114,101,110]);
      if (!((colontmp__1291855999.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(colontmp__1291855999.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_1291856007 = null;
        var colontmp__1291856008 = [];
        var Temporary3 = colontmp__1291855999;
        if (ConstSet233[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291856008 = Temporary3.elems;
        var i_1291856009 = 0;
        var L_1291856010 = (colontmp__1291856008).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291856009 < L_1291856010)) break Label5;
              i_1291856007 = colontmp__1291856008[chckIndx(i_1291856009, 0, (colontmp__1291856008).length - 1)];
              child_2969569583 = i_1291856007;
              add_2969567270(result_2969569538, jsonToAstNode_2969569535(child_2969569583, {allowExtraKeys: false, allowMissingKeys: false}));
              i_1291856009 = addInt(i_1291856009, 1);
              if (!(((colontmp__1291856008).length == L_1291856010))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2969569538;

}

function newAstDocument_2936017761(filename_2936017762) {
  var result_2936017763 = null;

    result_2936017763 = ({m_type: NTI2936014286, filename: [], symbols: ({data: [], counter: 0}), rootNode: null, nodes: ({data: [], counter: 0}), onNodeInserted: [], undoOps: [], redoOps: []});
    result_2936017763.filename = nimCopy(null, filename_2936017762, NTI33554449);
    result_2936017763.rootNode = {kind: 7, parent: null, id: newId_2181038297(), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), text: [], children: []};
    result_2936017763.symbols = nimCopy(result_2936017763.symbols, initTable_2986396528(32), NTI3070231496);
    if ((0 < (filename_2936017762).length)) {
    var fmtRes_2936017775 = [mnewString(0)];
    fmtRes_2936017775[0].push.apply(fmtRes_2936017775[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017775, 0, result_2936017763.filename, []);
    fmtRes_2936017775[0].push.apply(fmtRes_2936017775[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936017775[0], NTI33554449)]);
++excHandler;
    try {
    var file_2936017776 = loadFile_2499805191(fs_2499805237, result_2936017763.filename);
    var jsn_2936017777 = parseJson_1627395313(file_2936017776);
    result_2936017763.rootNode = jsonToAstNode_2969569535(jsn_2936017777, {allowExtraKeys: false, allowMissingKeys: false});
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2936017782 = [mnewString(0)];
    fmtRes_2936017782[0].push.apply(fmtRes_2936017782[0], [91,97,115,116,100,111,99,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017782, 0, result_2936017763.filename, []);
    fmtRes_2936017782[0].push.apply(fmtRes_2936017782[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2936017782[0], NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    

  return result_2936017763;

}

function newTextDocument_1291855913(filename_1291855915, content_1291855916) {
  var result_1291855917 = null;

    result_1291855917 = ({m_type: NTI2801795207, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0});
    var self_1291855921 = result_1291855917;
    self_1291855921.filename = nimCopy(null, filename_1291855915, NTI33554449);
    self_1291855921.currentTree = null;
    var _ = initTreesitter_2801798801(self_1291855921);
    var language_1291855922 = getLanguageForFile_2885681156(filename_1291855915);
    if (isSome_2768240699(language_1291855922)) {
    self_1291855921.languageId = nimCopy(null, get_2801798838(language_1291855922), NTI33554449);
    }
    
    contentHEX3D_2801796097(self_1291855921, content_1291855916);

  return result_1291855917;

}

function openFile_1291855909(self_1291855910, path_1291855911) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291855911, [46,97,115,116])) {
    createView_1291848949(self_1291855910, newAstDocument_2936017761(path_1291855911));
    }
    else {
      var file_1291855912 = loadFile_2499805191(fs_2499805237, path_1291855911);
      createView_1291848949(self_1291855910, newTextDocument_1291855913(path_1291855911, nsuSplitLines(file_1291855912, false)));
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291855949 = [mnewString(0)];
    fmtRes_1291855949[0].push.apply(fmtRes_1291855949[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291855949, 0, path_1291855911, []);
    fmtRes_1291855949[0].push.apply(fmtRes_1291855949[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291855949, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291855949[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2315255899(self_1291855910.platform, false);
    }

  
}

function openFileJsWrapper_1291855905(self_1291855977, path_1291855978) {
    openFile_1291855909(self_1291855977, path_1291855978);

  
}
editor_prototype.openFile = function(path_ /* : string */) { return (openFileJsWrapper_1291855905(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function writeFile_1291856130(self_1291856131, path_1291856132) {
    try {
    if ((((0 <= self_1291856131.currentView) && (self_1291856131.currentView < (self_1291856131.views).length)) && !((self_1291856131.views[chckIndx(self_1291856131.currentView, 0, (self_1291856131.views).length - 1)].document == null)))) {
++excHandler;
    try {
    save_2130706443(self_1291856131.views[chckIndx(self_1291856131.currentView, 0, (self_1291856131.views).length - 1)].document, path_1291856132);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856144 = [mnewString(0)];
    fmtRes_1291856144[0].push.apply(fmtRes_1291856144[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,119,114,105,116,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856144, 0, path_1291856132, []);
    fmtRes_1291856144[0].push.apply(fmtRes_1291856144[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856144, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856144[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255899(self_1291856131.platform, false);
    }

  
}

function writeFileJsWrapper_1291856126(self_1291856172, path_1291856173) {
    writeFile_1291856130(self_1291856172, path_1291856173);

  
}
editor_prototype.writeFile = function(path_ /* : string */) { return (writeFileJsWrapper_1291856126(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function loadFile_1291856194(self_1291856195, path_1291856196) {
    try {
    if ((((0 <= self_1291856195.currentView) && (self_1291856195.currentView < (self_1291856195.views).length)) && !((self_1291856195.views[chckIndx(self_1291856195.currentView, 0, (self_1291856195.views).length - 1)].document == null)))) {
++excHandler;
    try {
    load_2130706447(self_1291856195.views[chckIndx(self_1291856195.currentView, 0, (self_1291856195.views).length - 1)].document, path_1291856196);
    handleDocumentChanged_2147483808(self_1291856195.views[chckIndx(self_1291856195.currentView, 0, (self_1291856195.views).length - 1)].editor);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856208 = [mnewString(0)];
    fmtRes_1291856208[0].push.apply(fmtRes_1291856208[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856208, 0, path_1291856196, []);
    fmtRes_1291856208[0].push.apply(fmtRes_1291856208[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856208, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856208[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255899(self_1291856195.platform, false);
    }

  
}

function loadFileJsWrapper_1291856190(self_1291856236, path_1291856237) {
    loadFile_1291856194(self_1291856236, path_1291856237);

  
}
editor_prototype.loadFile = function(path_ /* : string */) { return (loadFileJsWrapper_1291856190(this, path_ == undefined ? undefined : cstrToNimstr(path_)));};

function loadFromFile_2483031627(path_2483031628) {
  var result_2483031630 = ({val: null});

  return result_2483031630;

}

function isSome_1291851007(self_1291851009) {
  var result_1291851010 = false;

    result_1291851010 = !((self_1291851009.val == null));

  return result_1291851010;

}

function isNone_1291851035(self_1291851037) {
  var result_1291851038 = false;

    result_1291851038 = (self_1291851037.val == null);

  return result_1291851038;

}

function get_1291851027(self_1291851029) {
  var result_1291851030 = null;

    if (isNone_1291851035(self_1291851029)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291851030 = self_1291851029["val"];

  return result_1291851030;

}

function loadTheme_1291856258(self_1291856259, name_1291856260) {
      var Temporary2;

    try {
      var fmtRes_1291856265 = [mnewString(0)];
      fmtRes_1291856265[0].push.apply(fmtRes_1291856265[0], [46,47,116,104,101,109,101,115,47]);;
      formatValue_721420459(fmtRes_1291856265, 0, name_1291856260, []);
      fmtRes_1291856265[0].push.apply(fmtRes_1291856265[0], [46,106,115,111,110]);;
      var oHEX60gensym435_1291856268 = loadFromFile_2483031627(fmtRes_1291856265[0]);
      if (!isSome_1291851007(oHEX60gensym435_1291856268)) Temporary2 = false; else {        var theme_1291856291 = get_1291851027(oHEX60gensym435_1291856268);
        Temporary2 = true;      }    if (Temporary2) {
    self_1291856259.theme = theme_1291856291;
    }
    else {
      var fmtRes_1291856296 = [mnewString(0)];
      fmtRes_1291856296[0].push.apply(fmtRes_1291856296[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32]);;
      formatValue_721420459(fmtRes_1291856296, 0, name_1291856260, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856296[0], NTI33554449)]);
    }
    
    } finally {
    requestRender_2315255899(self_1291856259.platform, false);
    }

  
}

function loadThemeJsWrapper_1291856254(self_1291856324, name_1291856325) {
    loadTheme_1291856258(self_1291856324, name_1291856325);

  
}
editor_prototype.loadTheme = function(name_ /* : string */) { return (loadThemeJsWrapper_1291856254(this, name_ == undefined ? undefined : cstrToNimstr(name_)));};

function setCompletions_3204448320(self_3204448321, newCompletions_3204448322) {
    if (!(((newCompletions_3204448322).length == (self_3204448321.completions).length))) {
    markDirty_2264924181(self_3204448321);
    }
    else {
      Label1: {
        var i_3204448340 = 0;
        var colontmp__1291856664 = 0;
        colontmp__1291856664 = (newCompletions_3204448322).length - 1;
        var res_1291856665 = 0;
        Label2: {
            Label3: while (true) {
            if (!(res_1291856665 <= colontmp__1291856664)) break Label3;
              i_3204448340 = res_1291856665;
              if (changed_3204448318(self_3204448321.completions[chckIndx(i_3204448340, 0, (self_3204448321.completions).length - 1)], newCompletions_3204448322[chckIndx(i_3204448340, 0, (newCompletions_3204448322).length - 1)])) {
              markDirty_2264924181(self_3204448321);
              break Label1;
              }
              
              res_1291856665 = addInt(res_1291856665, 1);
            }
        };
      };
    }
    
    self_3204448321.completions = nimCopy(null, newCompletions_3204448322, NTI3204448289);
    if ((0 < (self_3204448321.completions).length)) {
    self_3204448321.selected = clamp_1660945119(self_3204448321.selected, 0, subInt((self_3204448321.completions).length, 1));
    }
    else {
      self_3204448321.selected = 0;
    }
    

  
}
async function updateCompletionsAsync_3204448380(self_3204448381) {
  var result_3204448383 = null;

  BeforeRet: {
    var text_3204448389 = nsuJoinSep(content_2801796219(self_3204448381.textEditor.document), []);
    var newCompletions_3204448394 = (await self_3204448381.getCompletionsAsync(self_3204448381, text_3204448389));
    setCompletions_3204448320(self_3204448381, newCompletions_3204448394);
    result_3204448383 = undefined;
    break BeforeRet;
  };

  return result_3204448383;

}

function updateCompletions_3204448406(self_3204448407) {
    var text_3204448408 = nsuJoinSep(content_2801796219(self_3204448407.textEditor.document), []);
    if (!((self_3204448407.getCompletions == null))) {
    var newCompletions_3204448412 = self_3204448407.getCompletions(self_3204448407, text_3204448408);
    setCompletions_3204448320(self_3204448407, newCompletions_3204448412);
    }
    else {
    if (!((self_3204448407.getCompletionsAsync == null))) {
    var _ = updateCompletionsAsync_3204448380(self_3204448407);
    }
    else {
      var fmtRes_3204448420 = [mnewString(0)];
      fmtRes_3204448420[0].push.apply(fmtRes_3204448420[0], [78,111,32,99,111,109,112,108,101,116,105,111,110,32,112,114,111,118,105,100,101,114,32,115,101,116,32,111,110,32,112,111,112,117,112,32]);;
      formatValue_2332033544(fmtRes_3204448420, 0, self_3204448407.id, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_3204448420[0], NTI33554449)]);
    }
    }

  
}

function handleTextChanged_3204448932(self_3204448933) {
    updateCompletions_3204448406(self_3204448933);
    self_3204448933.selected = 0;

  
}

function toJson_3204448590(self_3204448591, opt_3204448592) {
  var result_3204448593 = null;

    result_3204448593 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_3204448593, [116,121,112,101], newJString_1627389994([112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
    HEX5BHEX5DHEX3D_1627391903(result_3204448593, [105,100], newJInt_1627390040(self_3204448591.id));

  return result_3204448593;

}

function initToJsonOptions_1811939362() {
  var result_1811939363 = ({enumMode: 0, jsonNodeMode: 0});

    result_1811939363 = nimCopy(result_1811939363, {enumMode: 0, jsonNodeMode: 0}, NTI1811939336);

  return result_1811939363;

}

function ssClose_1660945414(s_1660945415) {
    var s_1660945416 = s_1660945415;
    s_1660945416.data = nimCopy(null, [], NTI33554449);

  
}

function ssAtEnd_1660945093(s_1660945094) {
  var result_1660945095 = false;

  BeforeRet: {
    var s_1660945096 = s_1660945094;
    result_1660945095 = ((s_1660945096.data).length <= s_1660945096.pos);
    break BeforeRet;
  };

  return result_1660945095;

}

function ssSetPosition_1660945115(s_1660945116, pos_1660945117) {
    var s_1660945118 = s_1660945116;
    s_1660945118.pos = clamp_1660945119(pos_1660945117, 0, (s_1660945118.data).length);

  
}

function ssGetPosition_1660945125(s_1660945126) {
  var result_1660945127 = 0;

  BeforeRet: {
    var s_1660945128 = s_1660945126;
    result_1660945127 = s_1660945128.pos;
    break BeforeRet;
  };

  return result_1660945127;

}

function HEX5BHEX5DHEX3D_855639183(s_855639186, s_855639186_Idx, x_855639187, b_855639188) {
    var a_855639190 = x_855639187.a;
    var L_855639192 = addInt(subInt(x_855639187.b, a_855639190), 1);
    if ((L_855639192 == (b_855639188).length)) {
    Label1: {
      var i_855639197 = 0;
      var i_1291856675 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856675 < L_855639192)) break Label3;
            i_855639197 = i_1291856675;
            s_855639186[s_855639186_Idx][chckIndx(addInt(i_855639197, a_855639190), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(i_855639197, 0, (b_855639188).length - 1)];
            i_1291856675 = addInt(i_1291856675, 1);
          }
      };
    };
    }
    else {
      var shiftHEX60gensym109_855639203 = subInt((b_855639188).length, nimMax(0, L_855639192));
      var newLenHEX60gensym109_855639204 = addInt((s_855639186[s_855639186_Idx]).length, shiftHEX60gensym109_855639203);
      if ((0 < shiftHEX60gensym109_855639203)) {
      if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      Label4: {
        var iHEX60gensym109_855639210 = 0;
        var colontmp__1291856678 = 0;
        var colontmp__1291856679 = 0;
        colontmp__1291856678 = subInt(newLenHEX60gensym109_855639204, 1);
        colontmp__1291856679 = addInt(a_855639190, (b_855639188).length);
        var res_1291856680 = colontmp__1291856678;
        Label5: {
            Label6: while (true) {
            if (!(colontmp__1291856679 <= res_1291856680)) break Label6;
              iHEX60gensym109_855639210 = res_1291856680;
              s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639210, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639210, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
              res_1291856680 = subInt(res_1291856680, 1);
            }
        };
      };
      }
      else {
        Label7: {
          var iHEX60gensym109_855639216 = 0;
          var colontmp__1291856683 = 0;
          var colontmp__1291856684 = 0;
          colontmp__1291856683 = addInt(a_855639190, (b_855639188).length);
          colontmp__1291856684 = subInt(newLenHEX60gensym109_855639204, 1);
          var res_1291856685 = colontmp__1291856683;
          Label8: {
              Label9: while (true) {
              if (!(res_1291856685 <= colontmp__1291856684)) break Label9;
                iHEX60gensym109_855639216 = res_1291856685;
                s_855639186[s_855639186_Idx][chckIndx(iHEX60gensym109_855639216, 0, (s_855639186[s_855639186_Idx]).length - 1)] = s_855639186[s_855639186_Idx][chckIndx(subInt(iHEX60gensym109_855639216, shiftHEX60gensym109_855639203), 0, (s_855639186[s_855639186_Idx]).length - 1)];
                res_1291856685 = addInt(res_1291856685, 1);
              }
          };
        };
        if (s_855639186[s_855639186_Idx].length < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647)) { for (var i = s_855639186[s_855639186_Idx].length; i < chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); ++i) s_855639186[s_855639186_Idx].push(0); }
         else {s_855639186[s_855639186_Idx].length = chckRange(newLenHEX60gensym109_855639204, 0, 2147483647); };
      }
      
      Label10: {
        var iHEX60gensym109_855639221 = 0;
        var colontmp__1291856688 = 0;
        colontmp__1291856688 = (b_855639188).length;
        var i_1291856689 = 0;
        Label11: {
            Label12: while (true) {
            if (!(i_1291856689 < colontmp__1291856688)) break Label12;
              iHEX60gensym109_855639221 = i_1291856689;
              s_855639186[s_855639186_Idx][chckIndx(addInt(a_855639190, iHEX60gensym109_855639221), 0, (s_855639186[s_855639186_Idx]).length - 1)] = b_855639188[chckIndx(iHEX60gensym109_855639221, 0, (b_855639188).length - 1)];
              i_1291856689 = addInt(i_1291856689, 1);
            }
        };
      };
    }
    

  
}

function ssReadDataStr_1660945129(s_1660945130, buffer_1660945131, buffer_1660945131_Idx, slice_1660945133) {
  var result_1660945134 = 0;

    var s_1660945135 = s_1660945130;
    result_1660945134 = nimMin(subInt(addInt(slice_1660945133.b, 1), slice_1660945133.a), subInt((s_1660945135.data).length, s_1660945135.pos));
    if ((0 < result_1660945134)) {
    Label1: {
    };
    HEX5BHEX5DHEX3D_855639183(buffer_1660945131, buffer_1660945131_Idx, HEX2EHEX2E_805306418(slice_1660945133.a, subInt(addInt(slice_1660945133.a, result_1660945134), 1)), HEX5BHEX5D_855639291(s_1660945135.data, HEX2EHEX2E_805306418(s_1660945135.pos, subInt(addInt(s_1660945135.pos, result_1660945134), 1))));
    s_1660945135.pos = addInt(s_1660945135.pos, result_1660945134);
    }
    else {
      result_1660945134 = 0;
    }
    

  return result_1660945134;

}

function ssReadData_1660945231(s_1660945232, buffer_1660945233, buffer_1660945233_Idx, bufLen_1660945234) {
  var result_1660945235 = 0;

    var s_1660945236 = s_1660945232;
    result_1660945235 = nimMin(bufLen_1660945234, subInt((s_1660945236.data).length, s_1660945236.pos));
    if ((0 < result_1660945235)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945233, buffer_1660945233_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945235, 1)), HEX5BHEX5D_855639291(s_1660945236.data, HEX2EHEX2E_805306418(s_1660945236.pos, subInt(addInt(s_1660945236.pos, result_1660945235), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945236.pos = addInt(s_1660945236.pos, result_1660945235);
    }
    else {
      result_1660945235 = 0;
    }
    

  return result_1660945235;

}

function ssPeekData_1660945306(s_1660945307, buffer_1660945308, buffer_1660945308_Idx, bufLen_1660945309) {
  var result_1660945310 = 0;

    var s_1660945311 = s_1660945307;
    result_1660945310 = nimMin(bufLen_1660945309, subInt((s_1660945311.data).length, s_1660945311.pos));
    if ((0 < result_1660945310)) {
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(buffer_1660945308, buffer_1660945308_Idx, HEX2EHEX2E_805306418(0, subInt(result_1660945310, 1)), HEX5BHEX5D_855639291(s_1660945311.data, HEX2EHEX2E_805306418(s_1660945311.pos, subInt(addInt(s_1660945311.pos, result_1660945310), 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    }
    else {
      result_1660945310 = 0;
    }
    

  return result_1660945310;

}

function ssWriteData_1660945358(s_1660945359, buffer_1660945360, buffer_1660945360_Idx, bufLen_1660945361) {
    var Temporary1;

  BeforeRet: {
    var s_1660945362 = s_1660945359;
    if ((bufLen_1660945361 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1660945362.data).length < addInt(s_1660945362.pos, bufLen_1660945361))) {
    if (s_1660945362.data.length < (Temporary1 = chckRange(addInt(s_1660945362.pos, bufLen_1660945361), 0, 2147483647), Temporary1)) { for (var i = s_1660945362.data.length; i < Temporary1; ++i) s_1660945362.data.push(0); }
         else {s_1660945362.data.length = Temporary1; };
    }
    
++excHandler;
    try {
    HEX5BHEX5DHEX3D_855639183(s_1660945362, "data", HEX2EHEX2E_805306418(s_1660945362.pos, subInt(addInt(s_1660945362.pos, bufLen_1660945361), 1)), HEX5BHEX5D_855639291(buffer_1660945360[buffer_1660945360_Idx], HEX2EHEX2E_805306418(0, subInt(bufLen_1660945361, 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555176, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    }
    s_1660945362.pos = addInt(s_1660945362.pos, bufLen_1660945361);
  };

  
}

function newStringStream_1660945417(s_1660945418) {
  var result_1660945419 = null;

    result_1660945419 = ({m_type: NTI1660944862, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1660945419.data = nimCopy(null, s_1660945418, NTI33554449);
    result_1660945419.pos = 0;
    result_1660945419.closeImpl = ssClose_1660945414;
    result_1660945419.atEndImpl = ssAtEnd_1660945093;
    result_1660945419.setPositionImpl = ssSetPosition_1660945115;
    result_1660945419.getPositionImpl = ssGetPosition_1660945125;
    result_1660945419.readDataStrImpl = ssReadDataStr_1660945129;
    result_1660945419.readDataImpl = ssReadData_1660945231;
    result_1660945419.peekDataImpl = ssPeekData_1660945306;
    result_1660945419.writeDataImpl = ssWriteData_1660945358;

  return result_1660945419;

}

function readData_1660944462(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465) {
  var result_1660944466 = 0;

    result_1660944466 = s_1660944463.readDataImpl(s_1660944463, buffer_1660944464, buffer_1660944464_Idx, bufLen_1660944465);

  return result_1660944466;

}

function readDataStr_1660944468(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472) {
  var result_1660944473 = 0;

    if (!((s_1660944469.readDataStrImpl == null))) {
    result_1660944473 = s_1660944469.readDataStrImpl(s_1660944469, buffer_1660944470, buffer_1660944470_Idx, slice_1660944472);
    }
    else {
      result_1660944473 = readData_1660944462(s_1660944469, buffer_1660944470[buffer_1660944470_Idx], chckIndx(slice_1660944472.a, 0, (buffer_1660944470[buffer_1660944470_Idx]).length - 1), subInt(addInt(slice_1660944472.b, 1), slice_1660944472.a));
    }
    

  return result_1660944473;

}

function fillBuffer_1644167184(L_1644167185) {
              var Temporary8;

    var charsRead_1644167186 = 0;
    var toCopy_1644167187 = 0;
    var s_1644167188 = 0;
    var oldBufLen_1644167189 = 0;
    if (!((addInt(L_1644167185.sentinel, 1) <= (L_1644167185.buf).length))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,52,44,32,57,41,32,96,76,46,115,101,110,116,105,110,101,108,32,43,32,49,32,60,61,32,76,46,98,117,102,46,108,101,110,96,32]);
    }
    
    toCopy_1644167187 = subInt((L_1644167185.buf).length, addInt(L_1644167185.sentinel, 1));
    if (!((0 <= toCopy_1644167187))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,53,54,44,32,57,41,32,96,116,111,67,111,112,121,32,62,61,32,48,96,32]);
    }
    
    if ((0 < toCopy_1644167187)) {
    Label1: {
      var i_1644167204 = 0;
      var i_1291856692 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856692 < toCopy_1644167187)) break Label3;
            i_1644167204 = i_1291856692;
            L_1644167185.buf[chckIndx(i_1644167204, 0, (L_1644167185.buf).length - 1)] = L_1644167185.buf[chckIndx(addInt(addInt(L_1644167185.sentinel, 1), i_1644167204), 0, (L_1644167185.buf).length - 1)];
            i_1291856692 = addInt(i_1291856692, 1);
          }
      };
    };
    }
    
    charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(toCopy_1644167187, subInt(addInt(addInt(toCopy_1644167187, L_1644167185.sentinel), 1), 1)));
    s_1644167188 = addInt(toCopy_1644167187, charsRead_1644167186);
    if ((charsRead_1644167186 < addInt(L_1644167185.sentinel, 1))) {
    L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)] = 0;
    L_1644167185.sentinel = s_1644167188;
    }
    else {
      s_1644167188 = subInt(s_1644167188, 1);
      Label4: {
          Label5: while (true) {
          if (!true) break Label5;
            if (!((s_1644167188 < (L_1644167185.buf).length))) {
            failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,55,56,44,32,49,51,41,32,96,115,32,60,32,76,46,98,117,102,46,108,101,110,96,32]);
            }
            
            Label6: {
                Label7: while (true) {
                if (!((0 <= s_1644167188) && !((L_1644167185.refillChars[L_1644167185.buf[chckIndx(s_1644167188, 0, (L_1644167185.buf).length - 1)]] != undefined)))) break Label7;
                  s_1644167188 = subInt(s_1644167188, 1);
                }
            };
            if ((0 <= s_1644167188)) {
            L_1644167185.sentinel = s_1644167188;
            break Label4;
            }
            else {
              oldBufLen_1644167189 = (L_1644167185.buf).length;
              if (L_1644167185.buf.length < (Temporary8 = chckRange(mulInt((L_1644167185.buf).length, 2), 0, 2147483647), Temporary8)) { for (var i = L_1644167185.buf.length; i < Temporary8; ++i) L_1644167185.buf.push(0); }
         else {L_1644167185.buf.length = Temporary8; };
              charsRead_1644167186 = readDataStr_1660944468(L_1644167185.input, L_1644167185, "buf", HEX2EHEX2E_805306418(oldBufLen_1644167189, subInt((L_1644167185.buf).length, 1)));
              if ((charsRead_1644167186 < oldBufLen_1644167189)) {
              L_1644167185.buf[chckIndx(addInt(oldBufLen_1644167189, charsRead_1644167186), 0, (L_1644167185.buf).length - 1)] = 0;
              L_1644167185.sentinel = addInt(oldBufLen_1644167189, charsRead_1644167186);
              break Label4;
              }
              
              s_1644167188 = subInt((L_1644167185.buf).length, 1);
            }
            
          }
      };
    }
    

  
}

function skipUtf8Bom_1644167300(L_1644167301) {
    if ((((L_1644167301.buf[chckIndx(0, 0, (L_1644167301.buf).length - 1)] == 239) && (L_1644167301.buf[chckIndx(1, 0, (L_1644167301.buf).length - 1)] == 187)) && (L_1644167301.buf[chckIndx(2, 0, (L_1644167301.buf).length - 1)] == 191))) {
    L_1644167301.bufpos = addInt(L_1644167301.bufpos, 3);
    L_1644167301.lineStart = addInt(L_1644167301.lineStart, 3);
    }
    

  
}

function open_1644167312(L_1644167313, input_1644167314, bufLen_1644167315, refillChars_1644167316) {
    if (!((0 < bufLen_1644167315))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,48,44,32,57,41,32,96,98,117,102,76,101,110,32,62,32,48,96,32]);
    }
    
    if (!(!((input_1644167314 == null)))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,52,49,44,32,57,41,32,96,105,110,112,117,116,32,33,61,32,110,105,108,96,32]);
    }
    
    L_1644167313.input = input_1644167314;
    L_1644167313.bufpos = 0;
    L_1644167313.offsetBase = 0;
    L_1644167313.refillChars = nimCopy(L_1644167313.refillChars, refillChars_1644167316, NTI1644167173);
    L_1644167313.buf = nimCopy(null, mnewString(chckRange(bufLen_1644167315, 0, 2147483647)), NTI33554449);
    L_1644167313.sentinel = subInt(bufLen_1644167315, 1);
    L_1644167313.lineStart = 0;
    L_1644167313.lineNumber = 1;
    fillBuffer_1644167184(L_1644167313);
    skipUtf8Bom_1644167300(L_1644167313);

  
}

function open_1694498913(my_1694498914, input_1694498915, filename_1694498916, rawStringLiterals_1694498917) {
    open_1644167312(my_1694498914, input_1694498915, 8192, ConstSet234);
    my_1694498914.filename = nimCopy(null, filename_1694498916, NTI33554449);
    my_1694498914.state = nimCopy(null, [1], NTI1694498863);
    my_1694498914.kind = 0;
    my_1694498914.a = nimCopy(null, [], NTI33554449);
    my_1694498914.rawStringLiterals = rawStringLiterals_1694498917;

  
}

function fillBaseLexer_1644167246(L_1644167247, pos_1644167248) {
  var result_1644167249 = 0;

    if (!((pos_1644167248 <= L_1644167247.sentinel))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,57,55,44,32,57,41,32,96,112,111,115,32,60,61,32,76,46,115,101,110,116,105,110,101,108,96,32]);
    }
    
    if ((pos_1644167248 < L_1644167247.sentinel)) {
    result_1644167249 = addInt(pos_1644167248, 1);
    }
    else {
      fillBuffer_1644167184(L_1644167247);
      L_1644167247.offsetBase = addInt(L_1644167247.offsetBase, pos_1644167248);
      L_1644167247.bufpos = 0;
      result_1644167249 = 0;
    }
    

  return result_1644167249;

}

function handleCR_1644167259(L_1644167260, pos_1644167261) {
  var result_1644167262 = 0;

    if (!((L_1644167260.buf[chckIndx(pos_1644167261, 0, (L_1644167260.buf).length - 1)] == 13))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,49,48,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,114,39,96,32]);
    }
    
    L_1644167260.lineNumber = addInt(L_1644167260.lineNumber, 1);
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, pos_1644167261);
    if ((L_1644167260.buf[chckIndx(result_1644167262, 0, (L_1644167260.buf).length - 1)] == 10)) {
    result_1644167262 = fillBaseLexer_1644167246(L_1644167260, result_1644167262);
    }
    
    L_1644167260.lineStart = result_1644167262;

  return result_1644167262;

}

function handleLF_1644167273(L_1644167274, pos_1644167275) {
  var result_1644167276 = 0;

    if (!((L_1644167274.buf[chckIndx(pos_1644167275, 0, (L_1644167274.buf).length - 1)] == 10))) {
    failedAssertImpl_268435515([108,101,120,98,97,115,101,46,110,105,109,40,49,50,49,44,32,57,41,32,96,76,46,98,117,102,91,112,111,115,93,32,61,61,32,39,92,110,39,96,32]);
    }
    
    L_1644167274.lineNumber = addInt(L_1644167274.lineNumber, 1);
    result_1644167276 = fillBaseLexer_1644167246(L_1644167274, pos_1644167275);
    L_1644167274.lineStart = result_1644167276;

  return result_1644167276;

}

function skip_1694499153(my_1694499154) {
    var pos_1694499155 = my_1694499154.bufpos;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
          case 47:
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 47)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label3: {
                Label4: while (true) {
                if (!true) break Label4;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    break Label3;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break Label3;
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
            if ((my_1694499154.buf[chckIndx(addInt(pos_1694499155, 1), 0, (my_1694499154.buf).length - 1)] == 42)) {
            pos_1694499155 = addInt(pos_1694499155, 2);
            Label5: {
                Label6: while (true) {
                if (!true) break Label6;
                  switch (my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)]) {
                  case 0:
                    my_1694499154.err = 8;
                    break Label5;
                    break;
                  case 13:
                    pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
                    break;
                  case 10:
                    pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
                    break;
                  case 42:
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    if ((my_1694499154.buf[chckIndx(pos_1694499155, 0, (my_1694499154.buf).length - 1)] == 47)) {
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break Label5;
                    }
                    
                    break;
                  default: 
                    pos_1694499155 = addInt(pos_1694499155, 1);
                    break;
                  }
                }
            };
            }
            else {
              break Label1;
            }
            }
            break;
          case 32:
          case 9:
            pos_1694499155 = addInt(pos_1694499155, 1);
            break;
          case 13:
            pos_1694499155 = handleCR_1644167259(my_1694499154, pos_1694499155);
            break;
          case 10:
            pos_1694499155 = handleLF_1644167273(my_1694499154, pos_1694499155);
            break;
          default: 
            break Label1;
            break;
          }
        }
    };
    my_1694499154.bufpos = pos_1694499155;

  
}

function parseNumber_1694499191(my_1694499192) {
    var pos_1694499193 = my_1694499192.bufpos;
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 45)) {
    addChar(my_1694499192.a, 45);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
    my_1694499192.a.push.apply(my_1694499192.a, [48,46]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!(ConstSet235[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label2;
            addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
            pos_1694499193 = addInt(pos_1694499193, 1);
          }
      };
      if ((my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)] == 46)) {
      addChar(my_1694499192.a, 46);;
      pos_1694499193 = addInt(pos_1694499193, 1);
      }
      
    }
    
    Label3: {
        Label4: while (true) {
        if (!(ConstSet236[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label4;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    if ((ConstSet237[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    if ((ConstSet238[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) {
    addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
    pos_1694499193 = addInt(pos_1694499193, 1);
    }
    
    Label5: {
        Label6: while (true) {
        if (!(ConstSet239[my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]] != undefined)) break Label6;
          addChar(my_1694499192.a, my_1694499192.buf[chckIndx(pos_1694499193, 0, (my_1694499192.buf).length - 1)]);;
          pos_1694499193 = addInt(pos_1694499193, 1);
        }
    };
    }
    
    my_1694499192.bufpos = pos_1694499193;

  
}

function nsuFindCharSet(s_855639719, chars_855639720, start_855639721, last_855639722) {
    var Temporary1;

  var result_855639723 = 0;

  BeforeRet: {
    result_855639723 = -1;
    if ((last_855639722 < 0)) {
    Temporary1 = (s_855639719).length - 1;
    }
    else {
    Temporary1 = last_855639722;
    }
    
    var last_855639724 = Temporary1;
    Label2: {
      var i_855639729 = 0;
      var colontmp__1291856703 = 0;
      colontmp__1291856703 = start_855639721;
      var res_1291856704 = colontmp__1291856703;
      Label3: {
          Label4: while (true) {
          if (!(res_1291856704 <= last_855639724)) break Label4;
            i_855639729 = res_1291856704;
            if ((chars_855639720[s_855639719[chckIndx(i_855639729, 0, (s_855639719).length - 1)]] != undefined)) {
            result_855639723 = i_855639729;
            break BeforeRet;
            }
            
            res_1291856704 = addInt(res_1291856704, 1);
          }
      };
    };
  };

  return result_855639723;

}

function contains_855639881(s_855639882, chars_855639883) {
  var result_855639884 = false;

  BeforeRet: {
    result_855639884 = (0 <= nsuFindCharSet(s_855639882, chars_855639883, 0, -1));
    break BeforeRet;
  };

  return result_855639884;

}

function handleHexChar_1711276033(c_1711276034, x_1711276035, x_1711276035_Idx) {
  var result_1711276036 = false;

    result_1711276036 = true;
    switch (c_1711276034) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | subInt(c_1711276034, 48));
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 97), 10));
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
      x_1711276035[x_1711276035_Idx] = ((x_1711276035[x_1711276035_Idx] << 4) | addInt(subInt(c_1711276034, 65), 10));
      break;
    default: 
      result_1711276036 = false;
      break;
    }

  return result_1711276036;

}

function parseEscapedUTF16_1694499035(buf_1694499036, pos_1694499037, pos_1694499037_Idx) {
  var result_1694499038 = [0];

  BeforeRet: {
    result_1694499038[0] = 0;
    Label1: {
      var __1694499043 = 0;
      var res_1291856711 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_1291856711 <= 3)) break Label3;
            __1694499043 = res_1291856711;
            if (handleHexChar_1711276033(buf_1694499036.charCodeAt(chckIndx(pos_1694499037[pos_1694499037_Idx], 0, (buf_1694499036).length - 1)), result_1694499038, 0)) {
            pos_1694499037[pos_1694499037_Idx] = addInt(pos_1694499037[pos_1694499037_Idx], 1);
            }
            else {
              result_1694499038[0] = -1;
              break BeforeRet;
            }
            
            res_1291856711 = addInt(res_1291856711, 1);
          }
      };
    };
  };

  return result_1694499038[0];

}

function nuctoUTF8(c_788529546) {
  var result_788529547 = [];

    result_788529547 = nimCopy(null, [], NTI33554449);
    var iHEX60gensym21_788529549 = c_788529546;
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 127)) {
    if (result_788529547.length < 1) { for (var i = result_788529547.length; i < 1; ++i) result_788529547.push(0); }
         else {result_788529547.length = 1; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(iHEX60gensym21_788529549, 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2047)) {
    if (result_788529547.length < 2) { for (var i = result_788529547.length; i < 2; ++i) result_788529547.push(0); }
         else {result_788529547.length = 2; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 6) | 192), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 65535)) {
    if (result_788529547.length < 3) { for (var i = result_788529547.length; i < 3; ++i) result_788529547.push(0); }
         else {result_788529547.length = 3; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 12) | 224), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2097151)) {
    if (result_788529547.length < 4) { for (var i = result_788529547.length; i < 4; ++i) result_788529547.push(0); }
         else {result_788529547.length = 4; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 18) | 240), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 67108863)) {
    if (result_788529547.length < 5) { for (var i = result_788529547.length; i < 5; ++i) result_788529547.push(0); }
         else {result_788529547.length = 5; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 24) | 248), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    if (HEX3CHEX3DHEX25_33555522(iHEX60gensym21_788529549, 2147483647)) {
    if (result_788529547.length < 6) { for (var i = result_788529547.length; i < 6; ++i) result_788529547.push(0); }
         else {result_788529547.length = 6; };
    result_788529547[chckIndx(0, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 >> 30) | 252), 0, 255);
    result_788529547[chckIndx(1, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 24) & 63) | 128), 0, 255);
    result_788529547[chckIndx(2, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 18) & 63) | 128), 0, 255);
    result_788529547[chckIndx(3, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 12) & 63) | 128), 0, 255);
    result_788529547[chckIndx(4, 0, (result_788529547).length - 1)] = chckRange((((iHEX60gensym21_788529549 >> 6) & 63) | 128), 0, 255);
    result_788529547[chckIndx(5, 0, (result_788529547).length - 1)] = chckRange(((iHEX60gensym21_788529549 & 63) | 128), 0, 255);
    }
    else {
    }
    }}}}}

  return result_788529547;

}

function parseString_1694499049(my_1694499050) {
  var result_1694499051 = 0;

    result_1694499051 = 2;
    var pos_1694499052 = [addInt(my_1694499050.bufpos, 1)];
    if (my_1694499050.rawStringLiterals) {
    addChar(my_1694499050.a, 34);;
    }
    
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]) {
          case 0:
            my_1694499050.err = 7;
            result_1694499051 = 0;
            break Label1;
            break;
          case 34:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 34);;
            }
            
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break Label1;
            break;
          case 92:
            if (my_1694499050.rawStringLiterals) {
            addChar(my_1694499050.a, 92);;
            }
            
            switch (my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]) {
            case 92:
            case 34:
            case 39:
            case 47:
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 98:
              addChar(my_1694499050.a, 8);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 102:
              addChar(my_1694499050.a, 12);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 110:
              addChar(my_1694499050.a, 10);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 114:
              addChar(my_1694499050.a, 13);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 116:
              addChar(my_1694499050.a, 9);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 118:
              addChar(my_1694499050.a, 11);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              break;
            case 117:
              if (my_1694499050.rawStringLiterals) {
              addChar(my_1694499050.a, 117);;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var pos2_1694499098 = pos_1694499052[0];
              var r_1694499099 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((r_1694499099 < 0)) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              if (((r_1694499099 & 64512) == 55296)) {
              if ((!((my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)] == 92)) || !((my_1694499050.buf[chckIndx(addInt(pos_1694499052[0], 1), 0, (my_1694499050.buf).length - 1)] == 117)))) {
              my_1694499050.err = 1;
              break Label1;
              }
              
              pos_1694499052[0] = addInt(pos_1694499052[0], 2);
              var s_1694499105 = parseEscapedUTF16_1694499035(toJSStr(my_1694499050.buf), pos_1694499052, 0);
              if ((((s_1694499105 & 64512) == 56320) && (0 < s_1694499105))) {
              r_1694499099 = addInt(65536, ((subInt(r_1694499099, 55296) << 10) | subInt(s_1694499105, 56320)));
              }
              else {
                my_1694499050.err = 1;
                break Label1;
              }
              
              }
              
              if (my_1694499050.rawStringLiterals) {
              var length_1694499110 = subInt(pos_1694499052[0], pos2_1694499098);
              Label3: {
                var i_1694499115 = 0;
                var res_1291856708 = 1;
                Label4: {
                    Label5: while (true) {
                    if (!(res_1291856708 <= length_1694499110)) break Label5;
                      i_1694499115 = res_1291856708;
                      if ((ConstSet241[my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]] != undefined)) {
                      addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos2_1694499098, 0, (my_1694499050.buf).length - 1)]);;
                      pos2_1694499098 = addInt(pos2_1694499098, 1);
                      }
                      else {
                        break Label3;
                      }
                      
                      res_1291856708 = addInt(res_1291856708, 1);
                    }
                };
              };
              }
              else {
              my_1694499050.a.push.apply(my_1694499050.a, nuctoUTF8(((r_1694499099) | 0)));;
              }
              
              break;
            default: 
              addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
              pos_1694499052[0] = addInt(pos_1694499052[0], 1);
              break;
            }
            break;
          case 13:
            pos_1694499052[0] = handleCR_1644167259(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 13);;
            break;
          case 10:
            pos_1694499052[0] = handleLF_1644167273(my_1694499050, pos_1694499052[0]);
            addChar(my_1694499050.a, 10);;
            break;
          default: 
            addChar(my_1694499050.a, my_1694499050.buf[chckIndx(pos_1694499052[0], 0, (my_1694499050.buf).length - 1)]);;
            pos_1694499052[0] = addInt(pos_1694499052[0], 1);
            break;
          }
        }
    };
    my_1694499050.bufpos = pos_1694499052[0];

  return result_1694499051;

}

function parseName_1694499254(my_1694499255) {
    var pos_1694499256 = my_1694499255.bufpos;
    if ((ConstSet242[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) {
    Label1: {
        Label2: while (true) {
        if (!(ConstSet243[my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]] != undefined)) break Label2;
          addChar(my_1694499255.a, my_1694499255.buf[chckIndx(pos_1694499256, 0, (my_1694499255.buf).length - 1)]);;
          pos_1694499256 = addInt(pos_1694499256, 1);
        }
    };
    }
    
    my_1694499255.bufpos = pos_1694499256;

  
}

function getTok_1694499270(my_1694499271) {
  var result_1694499272 = 0;

    if (my_1694499271.a.length < 0) { for (var i = my_1694499271.a.length; i < 0; ++i) my_1694499271.a.push(0); }
         else {my_1694499271.a.length = 0; };
    skip_1694499153(my_1694499271);
    switch (my_1694499271.buf[chckIndx(my_1694499271.bufpos, 0, (my_1694499271.buf).length - 1)]) {
    case 45:
    case 46:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      parseNumber_1694499191(my_1694499271);
      if (contains_855639881(my_1694499271.a, ConstSet240)) {
      result_1694499272 = 4;
      }
      else {
        result_1694499272 = 3;
      }
      
      break;
    case 34:
      result_1694499272 = parseString_1694499049(my_1694499271);
      break;
    case 91:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 10;
      break;
    case 123:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 8;
      break;
    case 93:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 11;
      break;
    case 125:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 9;
      break;
    case 44:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 13;
      break;
    case 58:
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 12;
      break;
    case 0:
      result_1694499272 = 1;
      break;
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 95:
      parseName_1694499254(my_1694499271);
      switch (toJSStr(my_1694499271.a)) {
      case "null":
        result_1694499272 = 7;
        break;
      case "true":
        result_1694499272 = 5;
        break;
      case "false":
        result_1694499272 = 6;
        break;
      default: 
        result_1694499272 = 0;
        break;
      }
      break;
    default: 
      my_1694499271.bufpos = addInt(my_1694499271.bufpos, 1);
      result_1694499272 = 0;
      break;
    }
    my_1694499271.tok = result_1694499272;

  return result_1694499272;

}

function parseBiggestInt_771752719(s_771752720, number_771752721, number_771752721_Idx, start_771752722) {
  var result_771752723 = 0;

    result_771752723 = npuParseBiggestInt((s_771752720.slice(start_771752722, (s_771752720).length - 1 + 1)), number_771752721, number_771752721_Idx);

  return result_771752723;

}

function nsuParseBiggestInt(s_855638874) {
  var result_855638875 = [0];

    result_855638875[0] = 0;
    var L_855638876 = parseBiggestInt_771752719(s_855638874, result_855638875, 0, 0);
    if ((!((L_855638876 == (s_855638874).length)) || (L_855638876 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638874 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638875[0];

}

function getLine_1694499013(my_1694499014) {
  var result_1694499015 = 0;

    result_1694499015 = my_1694499014.lineNumber;

  return result_1694499015;

}

function getColNumber_1644167331(L_1644167332, pos_1644167333) {
  var result_1644167334 = 0;

    result_1644167334 = absInt(subInt(pos_1644167333, L_1644167332.lineStart));

  return result_1644167334;

}

function getColumn_1694499010(my_1694499011) {
  var result_1694499012 = 0;

    result_1694499012 = getColNumber_1644167331(my_1694499011, my_1694499011.bufpos);

  return result_1694499012;

}

function errorMsgExpected_1694499031(my_1694499032, e_1694499033) {
  var result_1694499034 = [];

    result_1694499034 = nimCopy(null, nsuFormatOpenArray([36,49,40,36,50,44,32,36,51,41,32,69,114,114,111,114,58,32,36,52], [nimCopy(null, my_1694499032.filename, NTI33554449), HEX24_369098760(getLine_1694499013(my_1694499032)), HEX24_369098760(getColumn_1694499010(my_1694499032)), (e_1694499033 || []).concat([32,101,120,112,101,99,116,101,100] || [])]), NTI33554449);

  return result_1694499034;

}

function raiseParseErr_1694499432(p_1694499433, msg_1694499434) {
    raiseException({message: errorMsgExpected_1694499031(p_1694499433, msg_1694499434), parent: null, m_type: NTI1694498825, name: null, trace: [], up: null}, "JsonParsingError");

  
}

function eat_1694499454(p_1694499455, tok_1694499456) {
    if ((p_1694499455.tok == tok_1694499456)) {
    var _ = getTok_1694499270(p_1694499455);
    }
    else {
    raiseParseErr_1694499432(p_1694499455, tokToStr_1694498894[chckIndx(tok_1694499456, 0, (tokToStr_1694498894).length - 1)]);
    }
    

  
}

function parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, depth_1627395215) {
      var Temporary1;

  var result_1627395216 = null;

    switch (p_1627395212.tok) {
    case 2:
      result_1627395216 = {kind: 4, isUnquoted: false, str: [], num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
      var Temporary1 = result_1627395216;
      if (ConstSet244[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      Temporary1.str = p_1627395212.a;
      p_1627395212.a = nimCopy(null, [], NTI33554449);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 3:
      if (rawIntegers_1627395213) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJInt_1627390040(nsuParseBiggestInt(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 4:
      if (rawFloats_1627395214) {
      result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
      }
      else {
++excHandler;
        try {
        result_1627395216 = newJFloat_1627390043(nsuParseFloat(p_1627395212.a));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217746))) {
        result_1627395216 = newJRawNumber_1627390037(p_1627395212.a);
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
      }
      
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 5:
      result_1627395216 = newJBool_1627390046(true);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 6:
      result_1627395216 = newJBool_1627390046(false);
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 7:
      result_1627395216 = newJNull_1627390049();
      var _ = getTok_1694499270(p_1627395212);
      break;
    case 8:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [125]);
      }
      
      result_1627395216 = newJObject_1627390051();
      var _ = getTok_1694499270(p_1627395212);
      Label4: {
          Label5: while (true) {
          if (!!((p_1627395212.tok == 9))) break Label5;
            if (!((p_1627395212.tok == 2))) {
            raiseParseErr_1694499432(p_1627395212, [115,116,114,105,110,103,32,108,105,116,101,114,97,108,32,97,115,32,107,101,121]);
            }
            
            var key_1627395225 = nimCopy(null, p_1627395212.a, NTI33554449);
            var _ = getTok_1694499270(p_1627395212);
            eat_1694499454(p_1627395212, 12);
            var val_1627395226 = parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1));
            HEX5BHEX5DHEX3D_1627391903(result_1627395216, key_1627395225, val_1627395226);
            if (!((p_1627395212.tok == 13))) {
            break Label4;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 9);
      break;
    case 10:
      if ((1000 < depth_1627395215)) {
      raiseParseErr_1694499432(p_1627395212, [93]);
      }
      
      result_1627395216 = newJArray_1627390082();
      var _ = getTok_1694499270(p_1627395212);
      Label6: {
          Label7: while (true) {
          if (!!((p_1627395212.tok == 11))) break Label7;
            add_1627390190(result_1627395216, parseJson_1627395211(p_1627395212, rawIntegers_1627395213, rawFloats_1627395214, addInt(depth_1627395215, 1)));
            if (!((p_1627395212.tok == 13))) {
            break Label6;
            }
            
            var _ = getTok_1694499270(p_1627395212);
          }
      };
      eat_1694499454(p_1627395212, 11);
      break;
    case 0:
    case 9:
    case 11:
    case 12:
    case 13:
    case 1:
      raiseParseErr_1694499432(p_1627395212, [123]);
      break;
    }

  return result_1627395216;

}

function close_1660944441(s_1660944442) {
    if ((!((s_1660944442 == null)) && !((s_1660944442.closeImpl == null)))) {
    s_1660944442.closeImpl(s_1660944442);
    }
    

  
}

function close_1644167182(L_1644167183) {
    close_1660944441(L_1644167183.input);

  
}

function close_1694498967(my_1694498968) {
    close_1644167182(my_1694498968);

  
}

function isSome_2801811182(self_2801811184) {
  var result_2801811185 = false;

    result_2801811185 = !((self_2801811184.val == null));

  return result_2801811185;

}

function some_2801810918(val_2801810920) {
  var result_2801810921 = ({val: null});

    if (!(!((val_2801810920 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2801810921.val = val_2801810920;

  return result_2801810921;

}

function none_3204448503() {
  var result_3204448509 = ({val: null});

  return result_3204448509;

}

function some_1291850916(val_1291850918) {
  var result_1291850919 = ({val: null});

    if (!(!((val_1291850918 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850919.val = val_1291850918;

  return result_1291850919;

}

function none_1291850929() {
  var result_1291850935 = ({val: null});

  return result_1291850935;

}

function getPopupForId_1291850886(self_1291850887, id_1291850888) {
  var result_1291850893 = ({val: null});

  BeforeRet: {
    Label1: {
      var popup_1291850915 = null;
      var i_1291856720 = 0;
      var L_1291856721 = (self_1291850887.popups).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291856720 < L_1291856721)) break Label3;
            popup_1291850915 = self_1291850887.popups[chckIndx(i_1291856720, 0, (self_1291850887.popups).length - 1)];
            if ((popup_1291850915.id == id_1291850888)) {
            result_1291850893 = nimCopy(result_1291850893, some_1291850916(popup_1291850915), NTI1291848455);
            break BeforeRet;
            }
            
            i_1291856720 = addInt(i_1291856720, 1);
            if (!(((self_1291850887.popups).length == L_1291856721))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291850893 = nimCopy(result_1291850893, none_1291850929(), NTI1291848455);
    break BeforeRet;
  };

  return result_1291850893;

}

function isSome_3204448517(self_3204448519) {
  var result_3204448520 = false;

    result_3204448520 = !((self_3204448519.val == null));

  return result_3204448520;

}

function isNone_3204448545(self_3204448547) {
  var result_3204448548 = false;

    result_3204448548 = (self_3204448547.val == null);

  return result_3204448548;

}

function get_3204448537(self_3204448539) {
  var result_3204448540 = null;

    if (isNone_3204448545(self_3204448539)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448540 = self_3204448539["val"];

  return result_3204448540;

}

function some_3204448562(val_3204448564) {
  var result_3204448565 = ({val: null});

    if (!(!((val_3204448564 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3204448565.val = val_3204448564;

  return result_3204448565;

}

function getSelectorPopup_3204448493(wrapper_3204448494) {
      var Temporary1;

  var result_3204448499 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_3204448499 = nimCopy(result_3204448499, none_3204448503(), NTI3204448440);
    break BeforeRet;
    }
    
      var oHEX60gensym11_3204448512 = getPopupForId_1291850886(gEditor, wrapper_3204448494.id);
      if (!isSome_3204448517(oHEX60gensym11_3204448512)) Temporary1 = false; else {        var editor_3204448554 = get_3204448537(oHEX60gensym11_3204448512);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_3204448554.m_type, NTI3204448274)) {
    result_3204448499 = nimCopy(result_3204448499, some_3204448562(editor_3204448554), NTI3204448440);
    break BeforeRet;
    }
    
    }
    
    result_3204448499 = nimCopy(result_3204448499, none_3204448503(), NTI3204448440);
    break BeforeRet;
  };

  return result_3204448499;

}

function isNone_3204448622(self_3204448624) {
  var result_3204448625 = false;

    result_3204448625 = (self_3204448624.val == null);

  return result_3204448625;

}

function get_3204448642(self_3204448644) {
  var result_3204448645 = null;

    if (isNone_3204448622(self_3204448644)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448645 = self_3204448644["val"];

  return result_3204448645;

}

function acceptScript_3204448603_3204448615(self_3204448616) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym16_3204448617 = getSelectorPopup_3204448493(self_3204448616);
      if (isNone_3204448622(rHEX60gensym16_3204448617)) {
      break BeforeRet;
      }
      
    };
    accept_3204448608(get_3204448642(rHEX60gensym16_3204448617));
  };

  
}

function initFromJson_2801803712(dst_2801803714, dst_2801803714_Idx, jsonNode_2801803715, jsonPath_2801803716, jsonPath_2801803716_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_2801803715, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2801803716[jsonPath_2801803716_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet245[jsonNode_2801803715.kind] != undefined))) {
    var msgHEX60gensym151_2801803733 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet246), nimCopy(null, jsonPath_2801803716[jsonPath_2801803716_Idx], NTI33554449), reprEnum(jsonNode_2801803715.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym151_2801803733, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_2801803715;
    if (ConstSet247[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_2801803714[dst_2801803714_Idx] = Temporary1.num;

  
}

function to_2801803701(node_2801803704) {
  var result_2801803706 = [0];

    var jsonPath_2801803707 = [[]];
    result_2801803706[0] = 0;
    initFromJson_2801803712(result_2801803706, 0, node_2801803704, jsonPath_2801803707, 0);

  return result_2801803706[0];

}

function fromJson_2801803688(a_2801803690, a_2801803690_Idx, b_2801803691, opt_2801803692) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801803691, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [105,110,116], Field1: b_2801803691}));
    }
    
    a_2801803690[a_2801803690_Idx] = to_2801803701(b_2801803691);

  
}

function jsonTo_2801803682(b_2801803684, opt_2801803686) {
  var result_2801803687 = [0];

    fromJson_2801803688(result_2801803687, 0, b_2801803684, opt_2801803686);

  return result_2801803687[0];

}

function fromJsonHook_3204448594(t_3204448595, jsonNode_3204448596) {
    t_3204448595.id = jsonTo_2801803682(HEX5BHEX5D_1627393037(jsonNode_3204448596, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_3204448674(a_3204448676, b_3204448677, opt_3204448678) {
    if (!(!(HEX3DHEX3D_1627392026(b_3204448677, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,111,114,80,111,112,117,112], Field1: b_3204448677}));
    }
    
    fromJsonHook_3204448594(a_3204448676, b_3204448677);

  
}

function jsonTo_3204448668(b_3204448670, opt_3204448672) {
  var result_3204448673 = [({id: 0})];

    fromJson_3204448674(result_3204448673[0], b_3204448670, opt_3204448672);

  return result_3204448673[0];

}

function HEX5BHEX5D_1627393116(node_1627393117, index_1627393118) {
    var Temporary1;
    var Temporary2;

  var result_1627393119 = null;

  BeforeRet: {
    if (!(!((node_1627393117 == null)))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,50,44,32,57,41,32,96,110,111,116,32,105,115,78,105,108,40,110,111,100,101,41,96,32]);
    }
    
    if (!((node_1627393117.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,50,51,44,32,57,41,32,96,110,111,100,101,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    var Temporary1 = node_1627393117;
    if (ConstSet248[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    result_1627393119 = (Temporary2 = Temporary1.elems, Temporary2)[chckIndx(index_1627393118, 0, (Temporary2).length - 1)];
    break BeforeRet;
  };

  return result_1627393119;

}

function acceptApi_3204448666(HEX3Atmp_3204448605) {
  var result_3204448667 = null;

    result_3204448667 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    acceptScript_3204448603_3204448615(jsonTo_3204448668(HEX5BHEX5D_1627393116(HEX3Atmp_3204448605, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym21_3204448685 = [97,99,99,101,112,116];
    var fmtRes_3204448690 = [mnewString(0)];
    fmtRes_3204448690[0].push.apply(fmtRes_3204448690[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448690, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym21_3204448685 || [],fmtRes_3204448690[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448667;

}

function cancelScript_3204448702_3204448715(self_3204448716) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym26_3204448717 = getSelectorPopup_3204448493(self_3204448716);
      if (isNone_3204448622(rHEX60gensym26_3204448717)) {
      break BeforeRet;
      }
      
    };
    cancel_3204448707(get_3204448642(rHEX60gensym26_3204448717));
  };

  
}

function cancelApi_3204448743(HEX3Atmp_3204448704) {
  var result_3204448744 = null;

    result_3204448744 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelScript_3204448702_3204448715(jsonTo_3204448668(HEX5BHEX5D_1627393116(HEX3Atmp_3204448704, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym31_3204448750 = [99,97,110,99,101,108];
    var fmtRes_3204448755 = [mnewString(0)];
    fmtRes_3204448755[0].push.apply(fmtRes_3204448755[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448755, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym31_3204448750 || [],fmtRes_3204448755[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448744;

}

function prevScript_3204448758_3204448783(self_3204448784) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym35_3204448785 = getSelectorPopup_3204448493(self_3204448784);
      if (isNone_3204448622(rHEX60gensym35_3204448785)) {
      break BeforeRet;
      }
      
    };
    prev_3204448763(get_3204448642(rHEX60gensym35_3204448785));
  };

  
}

function prevApi_3204448811(HEX3Atmp_3204448760) {
  var result_3204448812 = null;

    result_3204448812 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    prevScript_3204448758_3204448783(jsonTo_3204448668(HEX5BHEX5D_1627393116(HEX3Atmp_3204448760, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym40_3204448818 = [112,114,101,118];
    var fmtRes_3204448823 = [mnewString(0)];
    fmtRes_3204448823[0].push.apply(fmtRes_3204448823[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448823, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym40_3204448818 || [],fmtRes_3204448823[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448812;

}

function nextScript_3204448826_3204448848(self_3204448849) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym45_3204448850 = getSelectorPopup_3204448493(self_3204448849);
      if (isNone_3204448622(rHEX60gensym45_3204448850)) {
      break BeforeRet;
      }
      
    };
    next_3204448831(get_3204448642(rHEX60gensym45_3204448850));
  };

  
}

function nextApi_3204448876(HEX3Atmp_3204448828) {
  var result_3204448877 = null;

    result_3204448877 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    nextScript_3204448826_3204448848(jsonTo_3204448668(HEX5BHEX5D_1627393116(HEX3Atmp_3204448828, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym50_3204448883 = [110,101,120,116];
    var fmtRes_3204448888 = [mnewString(0)];
    fmtRes_3204448888[0].push.apply(fmtRes_3204448888[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_3204448888, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym50_3204448883 || [],fmtRes_3204448888[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_3204448877;

}

function none_2801811114() {
  var result_2801811120 = ({val: null});

  return result_2801811120;

}

function dispatch_3204448893(command_3204448892, arg_3204448891) {
    var Temporary1;

  var result_3204448895 = ({val: null});

    switch (toJSStr(command_3204448892)) {
    case "accept":
      Temporary1 = some_2801810918(acceptApi_3204448666(arg_3204448891));
      break;
    case "cancel":
      Temporary1 = some_2801810918(cancelApi_3204448743(arg_3204448891));
      break;
    case "prev":
      Temporary1 = some_2801810918(prevApi_3204448811(arg_3204448891));
      break;
    case "next":
      Temporary1 = some_2801810918(nextApi_3204448876(arg_3204448891));
      break;
    default: 
      Temporary1 = none_2801811114();
      break;
    }
    result_3204448895 = nimCopy(result_3204448895, Temporary1, NTI2801805821);

  return result_3204448895;

}

function handleAction_3204448914(self_3204448915, action_3204448916, arg_3204448917) {
  var result_3204448918 = 0;

  BeforeRet: {
    if ((handleUnknownPopupAction_1291848824(self_3204448915.editor, self_3204448915, action_3204448916, arg_3204448917) == 3)) {
    result_3204448918 = 3;
    break BeforeRet;
    }
    
    var args_3204448923 = newJArray_1627390082();
    add_1627390190(args_3204448923, toJson_3204448590({id: self_3204448915.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_3204448924 = null;
      var colontmp__1291856668 = null;
      colontmp__1291856668 = newStringStream_1660945417(arg_3204448917);
      var p_1291856670 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_1291856670[0], colontmp__1291856668, [], false);
      try {
      var _ = getTok_1694499270(p_1291856670[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_1291856670[0].tok == 1))) break Label4;
            a_3204448924 = parseJson_1627395211(p_1291856670[0], false, false, 0);
            add_1627390190(args_3204448923, a_3204448924);
          }
      };
      } finally {
      close_1694498967(p_1291856670[0]);
      }
    };
    if (isSome_2801811182(dispatch_3204448893(action_3204448916, args_3204448923))) {
    result_3204448918 = 3;
    break BeforeRet;
    }
    
    result_3204448918 = 1;
    break BeforeRet;
  };

  return result_3204448918;

}

function newSelectorPopup_3204449021(editor_3204449022) {
    
function HEX3Aanonymous_3204449043(doc_3204449044) {
        handleTextChanged_3204448932(popup_3204449024);

      
    }
      
function HEX3Aanonymous_3204449092(actionHEX60gensym63HEX60gensym64_3204449093, argHEX60gensym63HEX60gensym64_3204449094) {
        var result_3204449095 = 0;

        BeforeRet: {
          if (handlerHEX60gensym63_3204449080.config.handleActions) {
          var action_3204449096 = nimCopy(null, actionHEX60gensym63HEX60gensym64_3204449093, NTI33554449);
          var arg_3204449097 = nimCopy(null, argHEX60gensym63HEX60gensym64_3204449094, NTI33554449);
          var responseHEX60gensym63HEX60gensym64_3204449098 = handleAction_3204448914(popup_3204449024, action_3204449096, arg_3204449097);
          if (handlerHEX60gensym63_3204449080.config.consumeAllActions) {
          result_3204449095 = 3;
          break BeforeRet;
          }
          
          result_3204449095 = responseHEX60gensym63HEX60gensym64_3204449098;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym63_3204449080.config.consumeAllActions) {
          result_3204449095 = 3;
          break BeforeRet;
          }
          else {
            result_3204449095 = 1;
            break BeforeRet;
          }
          }
        };

        return result_3204449095;

      }
      
function HEX3Aanonymous_3204449100(inputHEX60gensym63HEX60gensym65_3204449101) {
        var result_3204449102 = 0;

        BeforeRet: {
          if (handlerHEX60gensym63_3204449080.config.handleInputs) {
          var input_3204449103 = nimCopy(null, inputHEX60gensym63HEX60gensym65_3204449101, NTI33554449);
          result_3204449102 = 1;
          break BeforeRet;
          }
          else {
            result_3204449102 = 1;
            break BeforeRet;
          }
          
        };

        return result_3204449102;

      }

  var result_3204449023 = null;

  BeforeRet: {
    var popup_3204449024 = {editor: editor_3204449022, m_type: NTI3204448274, textEditor: null, selected: 0, scrollOffset: 0, completions: [], handleItemConfirmed: null, handleItemSelected: null, handleCanceled: null, getCompletions: null, getCompletionsAsync: null, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastItems: [], id: 0, eventHandler: null, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false};
    popup_3204449024.textEditor = newTextEditor_2801811312(newTextDocument_3154117191([], []), editor_3204449022);
    setMode_2801803857(popup_3204449024.textEditor, [105,110,115,101,114,116]);
    popup_3204449024.textEditor.renderHeader = false;
    popup_3204449024.textEditor.lineNumbers = nimCopy(popup_3204449024.textEditor.lineNumbers, some_3154117232(0), NTI2801795323);
    popup_3204449024.textEditor.document.singleLine = true;
    var _ = subscribe_2801811360(popup_3204449024.textEditor.document.textChanged, HEX3Aanonymous_3204449043);
    Label1: {
      var handlerHEX60gensym63_3204449080 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym63_3204449080.config = getEventHandlerConfig_1291849153(editor_3204449022, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]);
      handlerHEX60gensym63_3204449080.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(editor_3204449022, [112,111,112,117,112,46,115,101,108,101,99,116,111,114]));
      handlerHEX60gensym63_3204449080.handleAction = HEX3Aanonymous_3204449092;
      handlerHEX60gensym63_3204449080.handleInput = HEX3Aanonymous_3204449100;
    };
    popup_3204449024.eventHandler = handlerHEX60gensym63_3204449080;
    result_3204449023 = popup_3204449024;
    break BeforeRet;
  };

  return result_3204449023;

}

function pop_1560281227(s_1560281229, s_1560281229_Idx) {
  var result_1560281230 = [];

    var L_1560281234 = subInt((s_1560281229[s_1560281229_Idx]).length, 1);
    result_1560281230 = nimCopy(null, s_1560281229[s_1560281229_Idx][chckIndx(L_1560281234, 0, (s_1560281229[s_1560281229_Idx]).length - 1)], NTI33554449);
    if (s_1560281229[s_1560281229_Idx].length < chckRange(L_1560281234, 0, 2147483647)) { for (var i = s_1560281229[s_1560281229_Idx].length ; i < chckRange(L_1560281234, 0, 2147483647) ; ++i) s_1560281229[s_1560281229_Idx].push([]); }
               else { s_1560281229[s_1560281229_Idx].length = chckRange(L_1560281234, 0, 2147483647); };

  return result_1560281230;

}

function HEX5BHEX5D_33557562(s_33557563, i_33557564) {
  var result_33557565 = 0;

    result_33557565 = s_33557563[chckIndx(subInt((s_33557563).length, i_33557564), 0, (s_33557563).length - 1)];

  return result_33557565;

}

function HEX5BHEX5D_33557595(s_33557596, s_33557596_Idx, i_33557597) {
  var result_33557598 = null;
  var result_33557598_Idx = 0;

    result_33557598 = s_33557596[s_33557596_Idx]; result_33557598_Idx = chckIndx(subInt((s_33557596[s_33557596_Idx]).length, i_33557597), 0, (s_33557596[s_33557596_Idx]).length - 1);

  return [result_33557598, result_33557598_Idx];

}

function normalizePathEnd_1426063378(path_1426063379, path_1426063379_Idx, trailingSep_1426063380) {
  BeforeRet: {
    if (((path_1426063379[path_1426063379_Idx]).length == 0)) {
    break BeforeRet;
    }
    
    var i_1426063381 = (path_1426063379[path_1426063379_Idx]).length;
    Label1: {
        Label2: while (true) {
        if (!(1 <= i_1426063381)) break Label2;
          if ((ConstSet251[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined)) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
          if ((((path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 1), 0, (path_1426063379[path_1426063379_Idx]).length - 1)] == 46) && (2 <= i_1426063381)) && (ConstSet252[path_1426063379[path_1426063379_Idx][chckIndx(subInt(i_1426063381, 2), 0, (path_1426063379[path_1426063379_Idx]).length - 1)]] != undefined))) {
          i_1426063381 = subInt(i_1426063381, 1);
          }
          else {
            break Label1;
          }
          }
        }
    };
    if (trailingSep_1426063380) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    addChar(path_1426063379[path_1426063379_Idx], 47);;
    }
    else {
    if ((0 < i_1426063381)) {
    if (path_1426063379[path_1426063379_Idx].length < chckRange(i_1426063381, 0, 2147483647)) { for (var i = path_1426063379[path_1426063379_Idx].length; i < chckRange(i_1426063381, 0, 2147483647); ++i) path_1426063379[path_1426063379_Idx].push(0); }
         else {path_1426063379[path_1426063379_Idx].length = chckRange(i_1426063381, 0, 2147483647); };
    }
    else {
      path_1426063379[path_1426063379_Idx] = nimCopy(null, [47], NTI33554449);
    }
    }
  };

  
}

function hasNext_1442840582(it_1442840583, x_1442840584) {
  var result_1442840585 = false;

    result_1442840585 = (it_1442840583.i < (x_1442840584).length);

  return result_1442840585;

}

function next_1442840586(it_1442840587, x_1442840588) {
  var result_1442840589 = {Field0: 0, Field1: 0};

    it_1442840587.prev = it_1442840587.i;
    if ((!(it_1442840587.notFirst) && (ConstSet254[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) {
    it_1442840587.i = addInt(it_1442840587.i, 1);
    }
    else {
      Label1: {
          Label2: while (true) {
          if (!((it_1442840587.i < (x_1442840588).length) && !((ConstSet255[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined)))) break Label2;
            it_1442840587.i = addInt(it_1442840587.i, 1);
          }
      };
    }
    
    if ((it_1442840587.prev < it_1442840587.i)) {
    var colontmp__1291856791 = it_1442840587.prev;
    var colontmp__1291856792 = subInt(it_1442840587.i, 1);
    result_1442840589 = nimCopy(result_1442840589, {Field0: colontmp__1291856791, Field1: colontmp__1291856792}, NTI1442840583);
    }
    else {
    if (hasNext_1442840582(it_1442840587, x_1442840588)) {
    result_1442840589 = nimCopy(result_1442840589, next_1442840586(it_1442840587, x_1442840588), NTI1442840583);
    }
    }
    Label3: {
        Label4: while (true) {
        if (!((it_1442840587.i < (x_1442840588).length) && (ConstSet256[x_1442840588[chckIndx(it_1442840587.i, 0, (x_1442840588).length - 1)]] != undefined))) break Label4;
          it_1442840587.i = addInt(it_1442840587.i, 1);
        }
    };
    it_1442840587.notFirst = true;

  return result_1442840589;

}

function isSlash_1442840642(x_1442840643, bounds_1442840644) {
  var result_1442840645 = false;

    result_1442840645 = ((bounds_1442840644["Field1"] == bounds_1442840644["Field0"]) && (ConstSet257[x_1442840643[chckIndx(bounds_1442840644["Field0"], 0, (x_1442840643).length - 1)]] != undefined));

  return result_1442840645;

}

function isDotDot_1442840638(x_1442840639, bounds_1442840640) {
  var result_1442840641 = false;

    result_1442840641 = (((bounds_1442840640["Field1"] == addInt(bounds_1442840640["Field0"], 1)) && (x_1442840639[chckIndx(bounds_1442840640["Field0"], 0, (x_1442840639).length - 1)] == 46)) && (x_1442840639[chckIndx(addInt(bounds_1442840640["Field0"], 1), 0, (x_1442840639).length - 1)] == 46));

  return result_1442840641;

}

function isDot_1442840634(x_1442840635, bounds_1442840636) {
  var result_1442840637 = false;

    result_1442840637 = ((bounds_1442840636["Field1"] == bounds_1442840636["Field0"]) && (x_1442840635[chckIndx(bounds_1442840636["Field0"], 0, (x_1442840635).length - 1)] == 46));

  return result_1442840637;

}

function addNormalizePath_1442840650(x_1442840651, result_1442840652, result_1442840652_Idx, state_1442840653, state_1442840653_Idx, dirSep_1442840654) {
          var Temporary7;

    var it_1442840655 = [({i: 0, prev: 0, notFirst: false})];
    it_1442840655[0].notFirst = (0 < (state_1442840653[state_1442840653_Idx] >> 1));
    if (it_1442840655[0].notFirst) {
    Label1: {
        Label2: while (true) {
        if (!((it_1442840655[0].i < (x_1442840651).length) && (ConstSet253[x_1442840651[chckIndx(it_1442840655[0].i, 0, (x_1442840651).length - 1)]] != undefined))) break Label2;
          it_1442840655[0].i = addInt(it_1442840655[0].i, 1);
        }
    };
    }
    
    Label3: {
        Label4: while (true) {
        if (!hasNext_1442840582(it_1442840655[0], x_1442840651)) break Label4;
          var b_1442840669 = next_1442840586(it_1442840655[0], x_1442840651);
          if ((((state_1442840653[state_1442840653_Idx] >> 1) == 0) && isSlash_1442840642(x_1442840651, b_1442840669))) {
          if ((((result_1442840652[result_1442840652_Idx]).length == 0) || !((ConstSet258[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          state_1442840653[state_1442840653_Idx] = (state_1442840653[state_1442840653_Idx] | 1);
          }
          else {
          if (isDotDot_1442840638(x_1442840651, b_1442840669)) {
          if ((1 <= (state_1442840653[state_1442840653_Idx] >> 1))) {
          var d_1442840682 = (result_1442840652[result_1442840652_Idx]).length;
          Label5: {
              Label6: while (true) {
              if (!(((state_1442840653[state_1442840653_Idx] & 1) < subInt(d_1442840682, 1)) && !((ConstSet259[result_1442840652[result_1442840652_Idx][chckIndx(subInt(d_1442840682, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) break Label6;
                d_1442840682 = subInt(d_1442840682, 1);
              }
          };
          if ((0 < d_1442840682)) {
          if (result_1442840652[result_1442840652_Idx].length < (Temporary7 = chckRange(subInt(d_1442840682, 1), 0, 2147483647), Temporary7)) { for (var i = result_1442840652[result_1442840652_Idx].length; i < Temporary7; ++i) result_1442840652[result_1442840652_Idx].push(0); }
         else {result_1442840652[result_1442840652_Idx].length = Temporary7; };
          state_1442840653[state_1442840653_Idx] = subInt(state_1442840653[state_1442840653_Idx], 2);
          }
          
          }
          else {
            if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet260[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
            addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
            }
            
            result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          }
          
          }
          else {
          if (isDot_1442840634(x_1442840651, b_1442840669)) {
          }
          else {
          if ((b_1442840669["Field0"] <= b_1442840669["Field1"])) {
          if (((0 < (result_1442840652[result_1442840652_Idx]).length) && !((ConstSet261[result_1442840652[result_1442840652_Idx][chckIndx(subInt((result_1442840652[result_1442840652_Idx]).length, 1), 0, (result_1442840652[result_1442840652_Idx]).length - 1)]] != undefined)))) {
          addChar(result_1442840652[result_1442840652_Idx], dirSep_1442840654);;
          }
          
          result_1442840652[result_1442840652_Idx].push.apply(result_1442840652[result_1442840652_Idx], substr_33557821(x_1442840651, b_1442840669["Field0"], b_1442840669["Field1"]));;
          state_1442840653[state_1442840653_Idx] = addInt(state_1442840653[state_1442840653_Idx], 2);
          }
          }}}
        }
    };
    if ((eqStrings(result_1442840652[result_1442840652_Idx], []) && !(eqStrings(x_1442840651, [])))) {
    result_1442840652[result_1442840652_Idx] = nimCopy(null, [46], NTI33554449);
    }
    

  
}

function joinPathImpl_1426063407(result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, tail_1426063410) {
    var Temporary1;

    var trailingSep_1426063419 = (((0 < (tail_1426063410).length) && (ConstSet249[HEX5BHEX5D_33557562(tail_1426063410, 1)] != undefined)) || (((tail_1426063410).length == 0) && ((0 < (result_1426063408[result_1426063408_Idx]).length) && (ConstSet250[(Temporary1 = HEX5BHEX5D_33557595(result_1426063408, result_1426063408_Idx, 1), Temporary1)[0][Temporary1[1]]] != undefined))));
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, false);
    addNormalizePath_1442840650(tail_1426063410, result_1426063408, result_1426063408_Idx, state_1426063409, state_1426063409_Idx, 47);
    normalizePathEnd_1426063378(result_1426063408, result_1426063408_Idx, trailingSep_1426063419);

  
}

function nosjoinPath(head_1426063421, tail_1426063422) {
  var result_1426063423 = [[]];

    result_1426063423[0] = nimCopy(null, mnewString(0), NTI33554449);
    var state_1426063424 = [0];
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, head_1426063421);
    joinPathImpl_1426063407(result_1426063423, 0, state_1426063424, 0, tail_1426063422);

  return result_1426063423[0];

}

function HEX2F_1426063446(head_1426063447, tail_1426063448) {
  var result_1426063449 = [];

    result_1426063449 = nimCopy(null, nosjoinPath(head_1426063447, tail_1426063448), NTI33554449);

  return result_1426063449;

}

function staticWalkDir_1560281124(dir_1560281125, relative_1560281126) {
  var result_1560281129 = [];

  return result_1560281129;

}

function newSeq_1291856409(len_1291856411) {
  var result_1291856412 = [];

    result_1291856412 = new Array(len_1291856411); for (var i = 0 ; i < len_1291856411 ; ++i) { result_1291856412[i] = null; }
  return result_1291856412;

}

function mergeAlt_1291856420(a_1291856422, b_1291856423, lo_1291856424, m_1291856425, hi_1291856426, cmp_1291856429, order_1291856430) {
  BeforeRet: {
    if ((HEX2A_1023410184(cmp_1291856429(a_1291856422[chckIndx(m_1291856425, 0, (a_1291856422).length - 1)], a_1291856422[chckIndx(addInt(m_1291856425, 1), 0, (a_1291856422).length - 1)]), order_1291856430) <= 0)) {
    break BeforeRet;
    }
    
    var j_1291856431 = lo_1291856424;
    if (!((j_1291856431 <= m_1291856425))) {
    failedAssertImpl_268435515([97,108,103,111,114,105,116,104,109,46,110,105,109,40,51,51,56,44,32,51,41,32,96,106,32,60,61,32,109,96,32]);
    }
    
    var bb_1291856437 = 0;
    Label1: {
        Label2: while (true) {
        if (!(j_1291856431 <= m_1291856425)) break Label2;
          b_1291856423[chckIndx(bb_1291856437, 0, (b_1291856423).length - 1)] = a_1291856422[chckIndx(j_1291856431, 0, (a_1291856422).length - 1)];
          bb_1291856437 = addInt(bb_1291856437, 1);
          j_1291856431 = addInt(j_1291856431, 1);
        }
    };
    var i_1291856448 = 0;
    var k_1291856449 = lo_1291856424;
    Label3: {
        Label4: while (true) {
        if (!((k_1291856449 < j_1291856431) && (j_1291856431 <= hi_1291856426))) break Label4;
          if ((HEX2A_1023410184(cmp_1291856429(b_1291856423[chckIndx(i_1291856448, 0, (b_1291856423).length - 1)], a_1291856422[chckIndx(j_1291856431, 0, (a_1291856422).length - 1)]), order_1291856430) <= 0)) {
          a_1291856422[chckIndx(k_1291856449, 0, (a_1291856422).length - 1)] = b_1291856423[chckIndx(i_1291856448, 0, (b_1291856423).length - 1)];
          i_1291856448 = addInt(i_1291856448, 1);
          }
          else {
            a_1291856422[chckIndx(k_1291856449, 0, (a_1291856422).length - 1)] = a_1291856422[chckIndx(j_1291856431, 0, (a_1291856422).length - 1)];
            j_1291856431 = addInt(j_1291856431, 1);
          }
          
          k_1291856449 = addInt(k_1291856449, 1);
        }
    };
    Label5: {
        Label6: while (true) {
        if (!(k_1291856449 < j_1291856431)) break Label6;
          a_1291856422[chckIndx(k_1291856449, 0, (a_1291856422).length - 1)] = b_1291856423[chckIndx(i_1291856448, 0, (b_1291856423).length - 1)];
          k_1291856449 = addInt(k_1291856449, 1);
          i_1291856448 = addInt(i_1291856448, 1);
        }
    };
  };

  
}

function sort_1291856397(a_1291856399, cmp_1291856402, order_1291856403) {
    var n_1291856408 = (a_1291856399).length;
    var b_1291856417 = newSeq_1291856409(chckRange(divInt(n_1291856408, 2), 0, 2147483647));
    var s_1291856418 = 1;
    Label1: {
        Label2: while (true) {
        if (!(s_1291856418 < n_1291856408)) break Label2;
          var m_1291856419 = subInt(subInt(n_1291856408, 1), s_1291856418);
          Label3: {
              Label4: while (true) {
              if (!(0 <= m_1291856419)) break Label4;
                mergeAlt_1291856420(a_1291856399, b_1291856417, nimMax(addInt(subInt(m_1291856419, s_1291856418), 1), 0), m_1291856419, addInt(m_1291856419, s_1291856418), cmp_1291856402, order_1291856403);
                m_1291856419 = subInt(m_1291856419, mulInt(s_1291856418, 2));
              }
          };
          s_1291856418 = mulInt(s_1291856418, 2);
        }
    };

  
}

function chooseTheme_1291856346(self_1291856347) {
    
function HEX3Aanonymous_1291856350(popup_1291856351, text_1291856352) {
                          var Temporary9;
        
function HEX3Aanonymous_1291856366(a_1291856384, b_1291856385) {
          var result_1291856390 = 0;

            result_1291856390 = cmp_2936029902(a_1291856384.score, b_1291856385.score);

          return result_1291856390;

        }

      var result_1291856353 = [];

        Label1: {
          var file_1291856354 = [];
          var stack_1291856759 = [[[]]];
          var checkDir_1291856760 = false;
          Label2: {
              Label3: while (true) {
              if (!(0 < (stack_1291856759[0]).length)) break Label3;
                var d_1291856762 = pop_1560281227(stack_1291856759, 0);
                Label4: {
                  var k_1291856764 = 0;
                  var p_1291856765 = [];
                  var colontmp__1291856766 = [];
                  colontmp__1291856766 = HEX2F_1426063446([46,47,116,104,101,109,101,115], d_1291856762);
                  Label5: {
                    var k_1291856776 = 0;
                    var v_1291856777 = [];
                    var colontmp__1291856778 = [];
                    colontmp__1291856778 = staticWalkDir_1560281124(colontmp__1291856766, true);
                    var i_1291856779 = 0;
                    var L_1291856780 = (colontmp__1291856778).length;
                    Label6: {
                        Label7: while (true) {
                        if (!(i_1291856779 < L_1291856780)) break Label7;
                          k_1291856776 = colontmp__1291856778[chckIndx(i_1291856779, 0, (colontmp__1291856778).length - 1)]["Field0"];
                          v_1291856777 = colontmp__1291856778[chckIndx(i_1291856779, 0, (colontmp__1291856778).length - 1)]["Field1"];
                          k_1291856764 = k_1291856776;
                          p_1291856765 = v_1291856777;
                          var rel_1291856782 = HEX2F_1426063446(d_1291856762, p_1291856765);
                          if (((ConstSet262[k_1291856764] != undefined) && (ConstSet263[k_1291856764] != undefined))) {
                          var Temporary8 = nimCopy(null, rel_1291856782, NTI33554449);
                          stack_1291856759[0].push(Temporary8);;
                          }
                          
                          if ((ConstSet264[k_1291856764] != undefined)) {
                          if (true) {
                          Temporary9 = rel_1291856782;
                          }
                          else {
                          Temporary9 = HEX2F_1426063446([46,47,116,104,101,109,101,115], rel_1291856782);
                          }
                          
                          file_1291856354 = Temporary9;
                          if (nsuEndsWith(file_1291856354, [46,106,115,111,110])) {
                          var name_1291856783 = nimCopy(null, nossplitFile(file_1291856354).Field1, NTI33554449);
                          var score_1291856784 = fuzzyMatchSmart_1979711572(text_1291856352, name_1291856783, true);
                          var fmtRes_1291856785 = [mnewString(0)];
                          fmtRes_1291856785[0].push.apply(fmtRes_1291856785[0], [46,47,116,104,101,109,101,115,47]);;
                          formatValue_721420459(fmtRes_1291856785, 0, file_1291856354, []);
                          result_1291856353.push({name: nimCopy(null, name_1291856783, NTI33554449), path: nimCopy(null, fmtRes_1291856785[0], NTI33554449), score: score_1291856784, m_type: NTI1291848510});;
                          }
                          
                          }
                          
                          i_1291856779 = addInt(i_1291856779, 1);
                          if (!(((colontmp__1291856778).length == L_1291856780))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                };
                checkDir_1291856760 = false;
              }
          };
        };
        sort_1291856397(result_1291856353, HEX3Aanonymous_1291856366, 0);

      return result_1291856353;

    }
    
function HEX3Aanonymous_1291856516(item_1291856517) {
          var Temporary1;

          var oHEX60gensym448_1291856520 = loadFromFile_2483031627(item_1291856517.path);
          if (!isSome_1291851007(oHEX60gensym448_1291856520)) Temporary1 = false; else {            var theme_1291856543 = get_1291851027(oHEX60gensym448_1291856520);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856347.theme = theme_1291856543;
        }
        

      
    }
    
function HEX3Aanonymous_1291856544(item_1291856545) {
          var Temporary1;

          var oHEX60gensym449_1291856548 = loadFromFile_2483031627(item_1291856545.path);
          if (!isSome_1291851007(oHEX60gensym449_1291856548)) Temporary1 = false; else {            var theme_1291856571 = get_1291851027(oHEX60gensym449_1291856548);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856347.theme = theme_1291856571;
        }
        

      
    }
    
function HEX3Aanonymous_1291856572() {
          var Temporary1;

          var oHEX60gensym450_1291856575 = loadFromFile_2483031627(originalTheme_1291856348);
          if (!isSome_1291851007(oHEX60gensym450_1291856575)) Temporary1 = false; else {            var theme_1291856598 = get_1291851027(oHEX60gensym450_1291856575);
            Temporary1 = true;          }        if (Temporary1) {
        self_1291856347.theme = theme_1291856598;
        }
        

      
    }

    try {
    var originalTheme_1291856348 = nimCopy(null, self_1291856347.theme.path, NTI33554449);
    var popup_1291856349 = newSelectorPopup_3204449021(self_1291856347);
    popup_1291856349.getCompletions = HEX3Aanonymous_1291856350;
    popup_1291856349.handleItemSelected = HEX3Aanonymous_1291856516;
    popup_1291856349.handleItemConfirmed = HEX3Aanonymous_1291856544;
    popup_1291856349.handleCanceled = HEX3Aanonymous_1291856572;
    updateCompletions_3204448406(popup_1291856349);
    pushPopup_1291849051(self_1291856347, popup_1291856349);
    } finally {
    requestRender_2315255899(self_1291856347.platform, false);
    }

  
}

function chooseThemeJsWrapper_1291856342(self_1291856652) {
    chooseTheme_1291856346(self_1291856652);

  
}
editor_prototype.chooseTheme = function() { return (chooseThemeJsWrapper_1291856342(this));};

function add_2600468752(x_2600468754, x_2600468754_Idx, y_2600468755) {
    var Temporary1;

    var xl_2600468759 = (x_2600468754[x_2600468754_Idx]).length;
    if (x_2600468754[x_2600468754_Idx].length < (Temporary1 = chckRange(addInt(xl_2600468759, (y_2600468755).length), 0, 2147483647), Temporary1)) { for (var i = x_2600468754[x_2600468754_Idx].length ; i < Temporary1 ; ++i) x_2600468754[x_2600468754_Idx].push([]); }
               else { x_2600468754[x_2600468754_Idx].length = Temporary1; };
    Label2: {
      var i_2600468774 = 0;
      var colontmp__2583691703 = 0;
      colontmp__2583691703 = (y_2600468755).length - 1;
      var res_2583691704 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_2583691704 <= colontmp__2583691703)) break Label4;
            i_2600468774 = res_2583691704;
            x_2600468754[x_2600468754_Idx][chckIndx(addInt(xl_2600468759, i_2600468774), 0, (x_2600468754[x_2600468754_Idx]).length - 1)] = nimCopy(null, y_2600468755[chckIndx(i_2600468774, 0, (y_2600468755).length - 1)], NTI33554449);
            res_2583691704 = addInt(res_2583691704, 1);
          }
      };
    };

  
}
async function getDirectoryListingRec_1291856802(self_1291856803, folder_1291856804, path_1291856805) {
  var result_1291856808 = null;

  BeforeRet: {
    rawEcho([103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,82,101,99,58,32], path_1291856805);
    var resultItems_1291856818 = [[]];
    var items_1291856823 = (await getDirectoryListing_2667577382(folder_1291856804, path_1291856805));
    Label1: {
      var file_1291856827 = [];
      var i_1291857137 = 0;
      var L_1291857138 = (items_1291856823.files).length;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857137 < L_1291857138)) break Label3;
            file_1291856827 = items_1291856823.files[chckIndx(i_1291857137, 0, (items_1291856823.files).length - 1)];
            resultItems_1291856818[0].push(HEX2F_1426063446(path_1291856805, file_1291856827));;
            i_1291857137 = addInt(i_1291857137, 1);
            if (!(((items_1291856823.files).length == L_1291857138))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label4: {
      var dir_1291856835 = [];
      var i_1291857141 = 0;
      var L_1291857142 = (items_1291856823.folders).length;
      Label5: {
          Label6: while (true) {
          if (!(i_1291857141 < L_1291857142)) break Label6;
            dir_1291856835 = items_1291856823.folders[chckIndx(i_1291857141, 0, (items_1291856823.folders).length - 1)];
            var children_1291856840 = (await getDirectoryListingRec_1291856802(self_1291856803, folder_1291856804, HEX2F_1426063446(path_1291856805, dir_1291856835)));
            add_2600468752(resultItems_1291856818, 0, children_1291856840);
            i_1291857141 = addInt(i_1291857141, 1);
            if (!(((items_1291856823.folders).length == L_1291857142))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_1291856808 = resultItems_1291856818[0];
    break BeforeRet;
  };

  return result_1291856808;

}

function some_1291856924(val_1291856926) {
  var result_1291856927 = ({val: null});

    if (!(!((val_1291856926 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291856927.val = val_1291856926;

  return result_1291856927;

}

function isSome_1291857024(self_1291857026) {
  var result_1291857027 = false;

    result_1291857027 = !((self_1291857026.val == null));

  return result_1291857027;

}

function newTextDocument_1291856086(filename_1291856088, content_1291856089) {
  var result_1291856090 = null;

    result_1291856090 = ({m_type: NTI2801795207, filename: [], lines: [], languageId: [], version: 0, textChanged: ({handlers: []}), textInserted: ({handlers: []}), textDeleted: ({handlers: []}), singleLine: false, undoOps: [], redoOps: [], tsParser: null, tsLanguage: null, currentTree: null, highlightQuery: null, languageServer: ({val: null}), onRequestSaveHandle: 0});
    var self_1291856094 = result_1291856090;
    self_1291856094.filename = nimCopy(null, filename_1291856088, NTI33554449);
    self_1291856094.currentTree = null;
    var _ = initTreesitter_2801798801(self_1291856094);
    var language_1291856095 = getLanguageForFile_2885681156(filename_1291856088);
    if (isSome_2768240699(language_1291856095)) {
    self_1291856094.languageId = nimCopy(null, get_2801798838(language_1291856095), NTI33554449);
    }
    
    contentHEX3D_2801796097(self_1291856094, content_1291856089);

  return result_1291856090;

}
async function updateDocumentContent_1291856055(self_1291856056, document_1291856057, path_1291856058, folder_1291856059) {
  var result_1291856061 = null;

  BeforeRet: {
    var content_1291856071 = (await loadFile_2667577366(folder_1291856059, path_1291856058));
    if (isObj(document_1291856057.m_type, NTI2801795207)) {
    contentHEX3D_2801795987(document_1291856057, content_1291856071);
    }
    
    result_1291856061 = undefined;
    break BeforeRet;
  };

  return result_1291856061;

}

function openWorkspaceFile_1291856078(self_1291856079, path_1291856080, folder_1291856081) {
    try {
++excHandler;
    try {
    if (nsuEndsWith(path_1291856080, [46,97,115,116])) {
    createView_1291848949(self_1291856079, newAstDocument_2936017761(path_1291856080));
    }
    else {
      var document_1291856118 = newTextDocument_1291856086(path_1291856080, []);
      var _ = updateDocumentContent_1291856055(self_1291856079, document_1291856118, path_1291856080, folder_1291856081);
      createView_1291848949(self_1291856079, document_1291856118);
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291856123 = [mnewString(0)];
    fmtRes_1291856123[0].push.apply(fmtRes_1291856123[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_1291856123, 0, path_1291856080, []);
    fmtRes_1291856123[0].push.apply(fmtRes_1291856123[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291856123, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291856123[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    } finally {
    requestRender_2315255899(self_1291856079.platform, false);
    }

  
}

function isNone_1291857052(self_1291857054) {
  var result_1291857055 = false;

    result_1291857055 = (self_1291857054.val == null);

  return result_1291857055;

}

function get_1291857044(self_1291857046) {
  var result_1291857047 = null;
  var result_1291857047_Idx = 0;

  BeforeRet: {
    if (isNone_1291857052(self_1291857046)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291857047 = self_1291857046; result_1291857047_Idx = "val";
    break BeforeRet;
  };

  return [result_1291857047, result_1291857047_Idx];

}

function chooseFile_1291856863(self_1291856864, view_1291856865) {
    async function HEX3Aanonymous_1291856870(popup_1291856871, text_1291856872) {
        
function HEX3Aanonymous_1291856941(a_1291856959, b_1291856960) {
          var result_1291856965 = 0;

            result_1291856965 = cmp_2936029902(a_1291856959.score, b_1291856960.score);

          return result_1291856965;

        }

      var result_1291856874 = null;

      BeforeRet: {
        var resultItems_1291856884 = [];
        Label1: {
          var folder_1291856907 = null;
          var i_1291857133 = 0;
          var L_1291857134 = (self_1291856864.workspace.folders).length;
          Label2: {
              Label3: while (true) {
              if (!(i_1291857133 < L_1291857134)) break Label3;
                folder_1291856907 = self_1291856864.workspace.folders[chckIndx(i_1291857133, 0, (self_1291856864.workspace.folders).length - 1)];
                var files_1291856912 = (await getDirectoryListingRec_1291856802(self_1291856864, folder_1291856907, []));
                Label4: {
                  var file_1291856916 = [];
                  var i_1291857129 = 0;
                  var L_1291857130 = (files_1291856912).length;
                  Label5: {
                      Label6: while (true) {
                      if (!(i_1291857129 < L_1291857130)) break Label6;
                        file_1291856916 = files_1291856912[chckIndx(i_1291857129, 0, (files_1291856912).length - 1)];
                        var name_1291856917 = nimCopy(null, nossplitFile(file_1291856916).Field1, NTI33554449);
                        var score_1291856918 = fuzzyMatchSmart_1979711572(text_1291856872, name_1291856917, true);
                        var fmtRes_1291856923 = [mnewString(0)];
                        formatValue_721420459(fmtRes_1291856923, 0, file_1291856916, []);
                        resultItems_1291856884.push({path: nimCopy(null, fmtRes_1291856923[0], NTI33554449), score: score_1291856918, workspaceFolder: some_1291856924(folder_1291856907), m_type: NTI1291848512});;
                        i_1291857129 = addInt(i_1291857129, 1);
                        if (!(((files_1291856912).length == L_1291857130))) {
                        failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                        }
                        
                      }
                  };
                };
                i_1291857133 = addInt(i_1291857133, 1);
                if (!(((self_1291856864.workspace.folders).length == L_1291857134))) {
                failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                }
                
              }
          };
        };
        sort_1291856397(resultItems_1291856884, HEX3Aanonymous_1291856941, 0);
        result_1291856874 = resultItems_1291856884;
        break BeforeRet;
      };

      return result_1291856874;

    }
    view_1291856865 = nimCopy(null, view_1291856865, NTI33554449);
    
function HEX3Aanonymous_1291857018(item_1291857019) {
          var Temporary1;

        switch (toJSStr(view_1291856865)) {
        case "current":
          loadFile_1291856194(self_1291856864, item_1291857019.path);
          break;
        case "new":
          if (isSome_1291857024(item_1291857019.workspaceFolder)) {
          openWorkspaceFile_1291856078(self_1291856864, item_1291857019.path, (Temporary1 = get_1291857044(item_1291857019.workspaceFolder), Temporary1)[0][Temporary1[1]]);
          }
          else {
          openFile_1291855909(self_1291856864, item_1291857019.path);
          }
          
          break;
        default: 
          var fmtRes_1291857074 = [mnewString(0)];
          fmtRes_1291857074[0].push.apply(fmtRes_1291857074[0], [85,110,107,110,111,119,110,32,97,114,103,117,109,101,110,116,32]);;
          formatValue_721420459(fmtRes_1291857074, 0, view_1291856865, []);
          log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857074[0], NTI33554449)]);
          break;
        }

      
    }

    try {
    var popup_1291856866 = newSelectorPopup_3204449021(self_1291856864);
    popup_1291856866.getCompletionsAsync = HEX3Aanonymous_1291856870;
    popup_1291856866.handleItemConfirmed = HEX3Aanonymous_1291857018;
    updateCompletions_3204448406(popup_1291856866);
    pushPopup_1291849051(self_1291856864, popup_1291856866);
    } finally {
    requestRender_2315255899(self_1291856864.platform, false);
    }

  
}

function chooseFileJsWrapper_1291856859(self_1291857111, view_1291857112) {
    chooseFile_1291856863(self_1291857111, view_1291857112);

  
}
editor_prototype.chooseFile = function(view_ /* : string */) { return (chooseFileJsWrapper_1291856859(this, view_ == undefined ? undefined : cstrToNimstr(view_)));};

function setGithubAccessToken_1291857150(self_1291857151, token_1291857152) {
    saveApplicationFile_2499805208(fs_2499805237, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110], token_1291857152);

  
}

function setGithubAccessTokenJsWrapper_1291857146(self_1291857180, token_1291857181) {
    setGithubAccessToken_1291857150(self_1291857180, token_1291857181);

  
}
editor_prototype.setGithubAccessToken = function(token_ /* : string */) { return (setGithubAccessTokenJsWrapper_1291857146(this, token_ == undefined ? undefined : cstrToNimstr(token_)));};

function reloadConfig_1291857202(self_1291857203) {
    try {
    if (!((self_1291857203.scriptContext == null))) {
++excHandler;
    try {
    reload_2650800143(self_1291857203.scriptContext);
    if (!(self_1291857203.initializeCalled)) {
    var _ = false;
    self_1291857203.initializeCalled = true;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291857216 = mnewString(0);
    fmtRes_1291857216.push.apply(fmtRes_1291857216, [70,97,105,108,101,100,32,116,111,32,114,101,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291857216, NTI33554449)]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    }
    
    } finally {
    requestRender_2315255899(self_1291857203.platform, false);
    }

  
}

function reloadConfigJsWrapper_1291857198(self_1291857243) {
    reloadConfig_1291857202(self_1291857243);

  
}
editor_prototype.reloadConfig = function() { return (reloadConfigJsWrapper_1291857198(this));};

function spaces_855639150(n_855639151) {
  var result_855639152 = [];

    result_855639152 = nimCopy(null, nsuRepeatChar(32, n_855639151), NTI33554449);

  return result_855639152;

}

function indent_1627394335(s_1627394336, s_1627394336_Idx, i_1627394337) {
    s_1627394336[s_1627394336_Idx].push.apply(s_1627394336[s_1627394336_Idx], spaces_855639150(chckRange(i_1627394337, 0, 2147483647)));;

  
}

function nl_1627394343(s_1627394344, s_1627394344_Idx, ml_1627394345) {
    var Temporary1;

    if (ml_1627394345) {
    Temporary1 = [10];
    }
    else {
    Temporary1 = [32];
    }
    
    s_1627394344[s_1627394344_Idx].push.apply(s_1627394344[s_1627394344_Idx], Temporary1);;

  
}

function newIndent_1627394338(curr_1627394339, indent_1627394340, ml_1627394341) {
  var result_1627394342 = 0;

  BeforeRet: {
    if (ml_1627394341) {
    result_1627394342 = addInt(curr_1627394339, indent_1627394340);
    break BeforeRet;
    }
    else {
      result_1627394342 = indent_1627394340;
      break BeforeRet;
    }
    
  };

  return result_1627394342;

}

function toPretty_1627394395(result_1627394396, result_1627394396_Idx, node_1627394397, indent_1627394398, ml_1627394399, lstArr_1627394400, currIndent_1627394401) {
        var Temporary1;
        var Temporary3;
      var Temporary6;
      var Temporary7;
      var Temporary8;
        var Temporary9;
        var Temporary10;
        var Temporary12;
              var Temporary15;
              var Temporary16;

    switch (node_1627394397.kind) {
    case 5:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary1 = node_1627394397;
        if (ConstSet265[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      if ((0 < len_1627392114(Temporary1.fields))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      var i_1627394450 = 0;
      Label2: {
        var key_1627394455 = [];
        var val_1627394456 = null;
        var colontmp__1291857298 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary3 = node_1627394397;
        if (ConstSet266[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__1291857298 = nimCopy(colontmp__1291857298, Temporary3.fields, NTI1627389966);
        var L_1291857299 = len_1627392114(colontmp__1291857298);
        if ((0 < colontmp__1291857298.counter)) {
        var h_1291857300 = colontmp__1291857298.first;
        Label4: {
            Label5: while (true) {
            if (!(0 <= h_1291857300)) break Label5;
              var nxt_1291857302 = colontmp__1291857298.data[chckIndx(h_1291857300, 0, (colontmp__1291857298.data).length - 1)].Field1;
              if (isFilled_1308622880(colontmp__1291857298.data[chckIndx(h_1291857300, 0, (colontmp__1291857298.data).length - 1)].Field0)) {
              key_1627394455 = colontmp__1291857298.data[chckIndx(h_1291857300, 0, (colontmp__1291857298.data).length - 1)].Field2;
              val_1627394456 = colontmp__1291857298.data[chckIndx(h_1291857300, 0, (colontmp__1291857298.data).length - 1)].Field3;
              if ((0 < i_1627394450)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              i_1627394450 = addInt(i_1627394450, 1);
              indent_1627394335(result_1627394396, result_1627394396_Idx, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              escapeJson_1627394367(key_1627394455, result_1627394396, result_1627394396_Idx);
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [58,32]);;
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, val_1627394456, indent_1627394398, ml_1627394399, false, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              if (!((len_1627392114(colontmp__1291857298) == L_1291857299))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              h_1291857300 = nxt_1291857302;
            }
        };
        }
        
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [125]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [123,125]);;
      }
      
      break;
    case 4:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      toUgly_1627394377(result_1627394396, result_1627394396_Idx, node_1627394397);
      break;
    case 2:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary6 = node_1627394397;
      if (ConstSet267[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      addInt_301990087(result_1627394396, result_1627394396_Idx, Temporary6.num);
      break;
    case 3:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      var Temporary7 = node_1627394397;
      if (ConstSet268[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
      addFloat_33557340(result_1627394396, result_1627394396_Idx, Temporary7.fnum);
      break;
    case 1:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary9 = node_1627394397;
        if (ConstSet269[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
      if (Temporary9.bval) {
      Temporary8 = [116,114,117,101];
      }
      else {
      Temporary8 = [102,97,108,115,101];
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], Temporary8);;
      break;
    case 6:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
        var Temporary10 = node_1627394397;
        if (ConstSet270[Temporary10.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary10.kind, NTI1627389955)); }
      if (!(((Temporary10.elems).length == 0))) {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91]);;
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      Label11: {
        var i_1627394476 = 0;
        var colontmp__1291857304 = 0;
        var Temporary12 = node_1627394397;
        if (ConstSet271[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
        colontmp__1291857304 = subInt((Temporary12.elems).length, 1);
        var res_1291857305 = 0;
        Label13: {
            Label14: while (true) {
            if (!(res_1291857305 <= colontmp__1291857304)) break Label14;
              i_1627394476 = res_1291857305;
              if ((0 < i_1627394476)) {
              result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [44]);;
              nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
              }
              
              var Temporary15 = node_1627394397;
              if (ConstSet272[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
              toPretty_1627394395(result_1627394396, result_1627394396_Idx, (Temporary16 = Temporary15.elems, Temporary16)[chckIndx(i_1627394476, 0, (Temporary16).length - 1)], indent_1627394398, ml_1627394399, true, newIndent_1627394338(currIndent_1627394401, indent_1627394398, ml_1627394399));
              res_1291857305 = addInt(res_1291857305, 1);
            }
        };
      };
      nl_1627394343(result_1627394396, result_1627394396_Idx, ml_1627394399);
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [93]);;
      }
      else {
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [91,93]);;
      }
      
      break;
    case 0:
      if (lstArr_1627394400) {
      indent_1627394335(result_1627394396, result_1627394396_Idx, currIndent_1627394401);
      }
      
      result_1627394396[result_1627394396_Idx].push.apply(result_1627394396[result_1627394396_Idx], [110,117,108,108]);;
      break;
    }

  
}

function pretty_1627394477(node_1627394478, indent_1627394479) {
  var result_1627394480 = [[]];

    result_1627394480[0] = nimCopy(null, [], NTI33554449);
    toPretty_1627394395(result_1627394480, 0, node_1627394478, indent_1627394479, true, false, 0);

  return result_1627394480[0];

}

function logOptions_1291857259(self_1291857260) {
    log_1174405220(logger_704643272[0], 2, [pretty_1627394477(self_1291857260.options, 2)]);

  
}

function logOptionsJsWrapper_1291857255(self_1291857287) {
    logOptions_1291857259(self_1291857287);

  
}
editor_prototype.logOptions = function() { return (logOptionsJsWrapper_1291857255(this));};

function clear_2046821383(t_2046821386) {
    Label1: {
      var i_2046821438 = 0;
      var colontmp__1291857360 = 0;
      colontmp__1291857360 = (t_2046821386.data).length;
      var i_1291857361 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_1291857361 < colontmp__1291857360)) break Label3;
            i_2046821438 = i_1291857361;
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field0 = 0;
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2046821386.data[chckIndx(i_2046821438, 0, (t_2046821386.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            i_1291857361 = addInt(i_1291857361, 1);
          }
      };
    };
    t_2046821386.counter = 0;

  
}

function clearCommands_2046821341(config_2046821342) {
    clear_2046821383(config_2046821342.commands);
    config_2046821342.revision = addInt(config_2046821342.revision, 1);

  
}

function clearCommands_1291857313(self_1291857314, context_1291857315) {
    clearCommands_2046821341(getEventHandlerConfig_1291849153(self_1291857314, context_1291857315));

  
}

function clearCommandsJsWrapper_1291857309(self_1291857343, context_1291857344) {
    clearCommands_1291857313(self_1291857343, context_1291857344);

  
}
editor_prototype.clearCommands = function(context_ /* : string */) { return (clearCommandsJsWrapper_1291857309(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function len_1291853605(t_1291853608) {
  var result_1291853609 = 0;

    result_1291853609 = t_1291853608.counter;

  return result_1291853609;

}

function getAllEditors_1291857369(self_1291857370) {
  var result_1291857371 = [];

    Label1: {
      var id_1291857592 = 0;
      var L_1291857656 = len_1291853605(self_1291857370.editors);
      Label2: {
        var h_1291857658 = 0;
        var colontmp__1291857659 = 0;
        colontmp__1291857659 = (self_1291857370.editors.data).length - 1;
        var res_1291857660 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_1291857660 <= colontmp__1291857659)) break Label4;
              h_1291857658 = res_1291857660;
              if (isFilled_1308622880(self_1291857370.editors.data[chckIndx(h_1291857658, 0, (self_1291857370.editors.data).length - 1)].Field0)) {
              id_1291857592 = self_1291857370.editors.data[chckIndx(h_1291857658, 0, (self_1291857370.editors.data).length - 1)]["Field1"];
              result_1291857371.push(id_1291857592);;
              if (!((len_1291853605(self_1291857370.editors) == L_1291857656))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(744, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_1291857660 = addInt(res_1291857660, 1);
            }
        };
      };
    };

  return result_1291857371;

}

function getAllEditorsJsWrapper_1291857365(self_1291857624) {
  var result_1291857625 = [];

    result_1291857625 = nimCopy(null, getAllEditors_1291857369(self_1291857624), NTI1291853337);

  return result_1291857625;

}
editor_prototype.getAllEditors = function() { return (getAllEditorsJsWrapper_1291857365(this));};

function getModeConfig_1291857662(self_1291857663, mode_1291857664) {
  var result_1291857665 = null;

  BeforeRet: {
    result_1291857665 = getEventHandlerConfig_1291849153(self_1291857663, ([101,100,105,116,111,114,46] || []).concat(mode_1291857664 || []));
    break BeforeRet;
  };

  return result_1291857665;

}

function setMode_1291857672(self_1291857673, mode_1291857674) {
        
function HEX3Aanonymous_1291857695(actionHEX60gensym530HEX60gensym531_1291857696, argHEX60gensym530HEX60gensym531_1291857697) {
            var Temporary1;

          var result_1291857698 = 0;

          BeforeRet: {
            if (handlerHEX60gensym530_1291857683.config.handleActions) {
            var action_1291857699 = nimCopy(null, actionHEX60gensym530HEX60gensym531_1291857696, NTI33554449);
            var arg_1291857700 = nimCopy(null, argHEX60gensym530HEX60gensym531_1291857697, NTI33554449);
            if (handleAction_1291848861(self_1291857673, action_1291857699, arg_1291857700)) {
            Temporary1 = 3;
            }
            else {
            Temporary1 = 1;
            }
            
            var responseHEX60gensym530HEX60gensym531_1291857701 = Temporary1;
            if (handlerHEX60gensym530_1291857683.config.consumeAllActions) {
            result_1291857698 = 3;
            break BeforeRet;
            }
            
            result_1291857698 = responseHEX60gensym530HEX60gensym531_1291857701;
            break BeforeRet;
            }
            else {
            if (handlerHEX60gensym530_1291857683.config.consumeAllActions) {
            result_1291857698 = 3;
            break BeforeRet;
            }
            else {
              result_1291857698 = 1;
              break BeforeRet;
            }
            }
          };

          return result_1291857698;

        }
        
function HEX3Aanonymous_1291857703(inputHEX60gensym530HEX60gensym532_1291857704) {
          var result_1291857705 = 0;

          BeforeRet: {
            if (handlerHEX60gensym530_1291857683.config.handleInputs) {
            var input_1291857706 = nimCopy(null, inputHEX60gensym530HEX60gensym532_1291857704, NTI33554449);
            result_1291857705 = 1;
            break BeforeRet;
            }
            else {
              result_1291857705 = 1;
              break BeforeRet;
            }
            
          };

          return result_1291857705;

        }

    try {
    if (((mode_1291857674).length == 0)) {
    self_1291857673.modeEventHandler = null;
    }
    else {
      var config_1291857675 = getModeConfig_1291857662(self_1291857673, mode_1291857674);
      Label2: {
        var handlerHEX60gensym530_1291857683 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
        handlerHEX60gensym530_1291857683.config = config_1291857675;
        handlerHEX60gensym530_1291857683.dfaInternal = buildDFA_2046820415(config_1291857675);
        handlerHEX60gensym530_1291857683.handleAction = HEX3Aanonymous_1291857695;
        handlerHEX60gensym530_1291857683.handleInput = HEX3Aanonymous_1291857703;
      };
      self_1291857673.modeEventHandler = handlerHEX60gensym530_1291857683;
    }
    
    self_1291857673.currentMode = nimCopy(null, mode_1291857674, NTI33554449);
    } finally {
    requestRender_2315255899(self_1291857673.platform, false);
    }

  
}

function setModeJsWrapper22_1291857668(self_1291857734, mode_1291857735) {
    setMode_1291857672(self_1291857734, mode_1291857735);

  
}
editor_prototype.setMode22 = function(mode_ /* : string */) { return (setModeJsWrapper22_1291857668(this, mode_ == undefined ? undefined : cstrToNimstr(mode_)));};

function mode_1291857757(self_1291857758) {
  var result_1291857759 = [];

  BeforeRet: {
    result_1291857759 = nimCopy(null, self_1291857758.currentMode, NTI33554449);
    break BeforeRet;
  };

  return result_1291857759;

}

function modeJsWrapper22_1291857753(self_1291857787) {
  var result_1291857788 = [];

    result_1291857788 = nimCopy(null, mode_1291857757(self_1291857787), NTI33554449);

  return result_1291857788;

}
editor_prototype.mode22 = function() { return toJSStr(modeJsWrapper22_1291857753(this));};

function getContextWithMode_1291857808(self_1291857809, context_1291857810) {
  var result_1291857811 = [];

  BeforeRet: {
    result_1291857811 = nimCopy(null, (context_1291857810 || []).concat([46] || [],self_1291857809.currentMode || []), NTI33554449);
    break BeforeRet;
  };

  return result_1291857811;

}

function getContextWithModeJsWrapper22_1291857804(self_1291857840, context_1291857841) {
  var result_1291857842 = [];

    result_1291857842 = nimCopy(null, getContextWithMode_1291857808(self_1291857840, context_1291857841), NTI33554449);

  return result_1291857842;

}
editor_prototype.getContextWithMode22 = function(context_ /* : string */) { return toJSStr(getContextWithModeJsWrapper22_1291857804(this, context_ == undefined ? undefined : cstrToNimstr(context_)));};

function scriptRunAction_1291858084(action_1291858085, arg_1291858086) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    var _ = handleAction_1291848861(gEditor, action_1291858085, arg_1291858086);
  };

  
}

function scriptRunActionJsWrapper_1291858081(action_1291858095, arg_1291858096) {
    scriptRunAction_1291858084(action_1291858095, arg_1291858096);

  
}
editor_prototype.scriptRunAction = function(action_ /* : string */, arg_ /* : string */) { return (scriptRunActionJsWrapper_1291858081(action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptLog_1291858121(message_1291858122) {
    var fmtRes_1291858127 = [mnewString(0)];
    fmtRes_1291858127[0].push.apply(fmtRes_1291858127[0], [91,115,99,114,105,112,116,93,32]);;
    formatValue_721420459(fmtRes_1291858127, 0, message_1291858122, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291858127[0], NTI33554449)]);

  
}

function scriptLogJsWrapper_1291858118(message_1291858132) {
    scriptLog_1291858121(message_1291858132);

  
}
editor_prototype.scriptLog = function(message_ /* : string */) { return (scriptLogJsWrapper_1291858118(message_ == undefined ? undefined : cstrToNimstr(message_)));};

function rawGet_1795162457(t_1795162460, key_1795162461, hc_1795162462, hc_1795162462_Idx) {
  var result_1795162463 = 0;

  BeforeRet: {
    hc_1795162462[hc_1795162462_Idx] = hash_1325400491(key_1795162461);
    if ((hc_1795162462[hc_1795162462_Idx] == 0)) {
    hc_1795162462[hc_1795162462_Idx] = 314159265;
    }
    
    if (((t_1795162460.data).length == 0)) {
    result_1795162463 = -1;
    break BeforeRet;
    }
    
    var h_1795162515 = (hc_1795162462[hc_1795162462_Idx] & (t_1795162460.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0)) break Label2;
          if (((t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field0 == hc_1795162462[hc_1795162462_Idx]) && eqStrings(t_1795162460.data[chckIndx(h_1795162515, 0, (t_1795162460.data).length - 1)].Field1, key_1795162461))) {
          result_1795162463 = h_1795162515;
          break BeforeRet;
          }
          
          h_1795162515 = nextTry_1308622883(h_1795162515, (t_1795162460.data).length - 1);
        }
    };
    result_1795162463 = subInt(-1, h_1795162515);
  };

  return result_1795162463;

}

function mustRehash_1795162905(t_1795162907) {
  var result_1795162908 = false;

    if (!((t_1795162907.counter < (t_1795162907.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1795162908 = ((mulInt((t_1795162907.data).length, 2) < mulInt(t_1795162907.counter, 3)) || (subInt((t_1795162907.data).length, t_1795162907.counter) < 4));

  return result_1795162908;

}

function rawInsert_1795163354(t_1795163358, data_1795163359, data_1795163359_Idx, key_1795163360, val_1795163361, hc_1795163362, h_1795163363) {
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field1 = nimCopy(null, key_1795163360, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field2 = nimCopy(null, val_1795163361, NTI33554449);
    data_1795163359[data_1795163359_Idx][chckIndx(h_1795163363, 0, (data_1795163359[data_1795163359_Idx]).length - 1)].Field0 = hc_1795163362;

  
}

function enlarge_1795163060(t_1795163063) {
    var n_1795163066 = [];
    n_1795163066 = new Array(chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1795163063.data).length, 2), 0, 2147483647) ; ++i) { n_1795163066[i] = {Field0: 0, Field1: [], Field2: []}; }    var Temporary1 = t_1795163063.data; t_1795163063.data = n_1795163066; n_1795163066 = Temporary1;    Label2: {
      var i_1795163130 = 0;
      var colontmp__1291858226 = 0;
      colontmp__1291858226 = (n_1795163066).length - 1;
      var res_1291858227 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291858227 <= colontmp__1291858226)) break Label4;
            i_1795163130 = res_1291858227;
            var eh_1795163184 = n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field0;
            if (isFilled_1308622880(eh_1795163184)) {
            var j_1795163188 = (eh_1795163184 & (t_1795163063.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1795163063.data[chckIndx(j_1795163188, 0, (t_1795163063.data).length - 1)].Field0)) break Label6;
                  j_1795163188 = nextTry_1308622883(j_1795163188, (t_1795163063.data).length - 1);
                }
            };
            rawInsert_1795163354(t_1795163063, t_1795163063, "data", n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field1, n_1795163066[chckIndx(i_1795163130, 0, (n_1795163066).length - 1)].Field2, eh_1795163184, j_1795163188);
            }
            
            res_1291858227 = addInt(res_1291858227, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1795163523(t_1795163526, key_1795163527, hc_1795163528) {
  var result_1795163529 = 0;

  BeforeRet: {
    if (((t_1795163526.data).length == 0)) {
    result_1795163529 = -1;
    break BeforeRet;
    }
    
    var h_1795163580 = (hc_1795163528 & (t_1795163526.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0)) break Label2;
          if (((t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field0 == hc_1795163528) && eqStrings(t_1795163526.data[chckIndx(h_1795163580, 0, (t_1795163526.data).length - 1)].Field1, key_1795163527))) {
          result_1795163529 = h_1795163580;
          break BeforeRet;
          }
          
          h_1795163580 = nextTry_1308622883(h_1795163580, (t_1795163526.data).length - 1);
        }
    };
    result_1795163529 = subInt(-1, h_1795163580);
  };

  return result_1795163529;

}

function HEX5BHEX5DHEX3D_1795162732(t_1795162735, key_1795162736, val_1795162737) {
    if (((t_1795162735.data).length == 0)) {
    var correctSizeHEX60gensym8_1795162786 = slotsNeeded_1308622891(32);
    t_1795162735.counter = 0;
    t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_1795162786, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }    }
    
    var hc_1795162791 = [0];
    var index_1795162798 = rawGet_1795162457(t_1795162735, key_1795162736, hc_1795162791, 0);
    if ((0 <= index_1795162798)) {
    t_1795162735.data[chckIndx(index_1795162798, 0, (t_1795162735.data).length - 1)].Field2 = nimCopy(null, val_1795162737, NTI33554449);
    }
    else {
      if (((t_1795162735.data).length == 0)) {
      var correctSizeHEX60gensym11_1795162900 = slotsNeeded_1308622891(32);
      t_1795162735.counter = 0;
      t_1795162735.data = new Array(chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym11_1795162900, 0, 2147483647) ; ++i) { t_1795162735.data[i] = {Field0: 0, Field1: [], Field2: []}; }      }
      
      if (mustRehash_1795162905(t_1795162735)) {
      enlarge_1795163060(t_1795162735);
      index_1795162798 = rawGetKnownHC_1795163523(t_1795162735, key_1795162736, hc_1795162791[0]);
      }
      
      index_1795162798 = subInt(-1, index_1795162798);
      rawInsert_1795163354(t_1795162735, t_1795162735, "data", key_1795162736, val_1795162737, hc_1795162791[0], index_1795162798);
      t_1795162735.counter = addInt(t_1795162735.counter, 1);
    }
    

  
}

function addCommand_2046820734(config_2046820735, keys_2046820736, action_2046820737) {
    HEX5BHEX5DHEX3D_1795162732(config_2046820735.commands, keys_2046820736, action_2046820737);
    config_2046820735.revision = addInt(config_2046820735.revision, 1);

  
}

function addCommandScript_1291858153(self_1291858154, context_1291858155, keys_1291858156, action_1291858157, arg_1291858158) {
    var Temporary1;

    if (((arg_1291858158).length == 0)) {
    Temporary1 = action_1291858157;
    }
    else {
    Temporary1 = (action_1291858157 || []).concat([32] || [],arg_1291858158 || []);
    }
    
    var command_1291858159 = nimCopy(null, Temporary1, NTI33554449);
    addCommand_2046820734(getEventHandlerConfig_1291849153(self_1291858154, context_1291858155), keys_1291858156, command_1291858159);

  
}

function addCommandScriptJsWrapper_1291858149(self_1291858190, context_1291858191, keys_1291858192, action_1291858193, arg_1291858194) {
    addCommandScript_1291858153(self_1291858190, context_1291858191, keys_1291858192, action_1291858193, arg_1291858194);

  
}
editor_prototype.addCommandScript = function(context_ /* : string */, keys_ /* : string */, action_ /* : string */, arg_ /* : string */) { return (addCommandScriptJsWrapper_1291858149(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_), action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function del_2046820831(t_2046820834, key_2046820835) {
    var hc_2046820836 = [0];
    var i_2046820843 = rawGet_1795162457(t_2046820834, key_2046820835, hc_2046820836, 0);
    var mskHEX60gensym36_2046820847 = (t_2046820834.data).length - 1;
    if ((0 <= i_2046820843)) {
    t_2046820834.counter = subInt(t_2046820834.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2046820854 = i_2046820843;
            var rHEX60gensym36_2046820855 = jHEX60gensym36_2046820854;
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0 = 0;
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field2 = nimCopy(null, [], NTI33554449);
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2046820843 = (addInt(i_2046820843, 1) & mskHEX60gensym36_2046820847);
                  if (isEmpty_1308622877(t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2046820855 = (t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)].Field0 & mskHEX60gensym36_2046820847);
                  if (!(((((rHEX60gensym36_2046820855 <= i_2046820843) && (jHEX60gensym36_2046820854 < rHEX60gensym36_2046820855)) || ((jHEX60gensym36_2046820854 < rHEX60gensym36_2046820855) && (i_2046820843 < jHEX60gensym36_2046820854))) || ((i_2046820843 < jHEX60gensym36_2046820854) && (rHEX60gensym36_2046820855 <= i_2046820843))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2046820834.data[chckIndx(jHEX60gensym36_2046820854, 0, (t_2046820834.data).length - 1)] = nimCopy(t_2046820834.data[chckIndx(jHEX60gensym36_2046820854, 0, (t_2046820834.data).length - 1)], t_2046820834.data[chckIndx(i_2046820843, 0, (t_2046820834.data).length - 1)], NTI1795162126);
          }
      };
    };
    }
    

  
}

function removeCommand_2046820788(config_2046820789, keys_2046820790) {
    del_2046820831(config_2046820789.commands, keys_2046820790);
    config_2046820789.revision = addInt(config_2046820789.revision, 1);

  
}

function removeCommand_1291858236(self_1291858237, context_1291858238, keys_1291858239) {
    removeCommand_2046820788(getEventHandlerConfig_1291849153(self_1291858237, context_1291858238), keys_1291858239);

  
}

function removeCommandJsWrapper_1291858232(self_1291858268, context_1291858269, keys_1291858270) {
    removeCommand_1291858236(self_1291858268, context_1291858269, keys_1291858270);

  
}
editor_prototype.removeCommand = function(context_ /* : string */, keys_ /* : string */) { return (removeCommandJsWrapper_1291858232(this, context_ == undefined ? undefined : cstrToNimstr(context_), keys_ == undefined ? undefined : cstrToNimstr(keys_)));};

function getActivePopup_1291858297() {
  var result_1291858298 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858298 = -1;
    break BeforeRet;
    }
    
    if ((0 < (gEditor.popups).length)) {
    result_1291858298 = gEditor.popups[chckIndx((gEditor.popups).length - 1, 0, (gEditor.popups).length - 1)].id;
    break BeforeRet;
    }
    
    result_1291858298 = -1;
    break BeforeRet;
  };

  return result_1291858298;

}

function getActivePopupJsWrapper_1291858294() {
  var result_1291858315 = 0;

    result_1291858315 = getActivePopup_1291858297();

  return result_1291858315;

}
editor_prototype.getActivePopup = function() { return (getActivePopupJsWrapper_1291858294());};

function getActiveEditor_1291858334() {
  var result_1291858335 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858335 = -1;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291858335 = gEditor.commandLineTextEditor.id;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291858335 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291858335 = -1;
    break BeforeRet;
  };

  return result_1291858335;

}

function getActiveEditorJsWrapper_1291858331() {
  var result_1291858346 = 0;

    result_1291858346 = getActiveEditor_1291858334();

  return result_1291858346;

}
editor_prototype.getActiveEditor = function() { return (getActiveEditorJsWrapper_1291858331());};

function getActiveEditor2_1291858365(self_1291858366) {
  var result_1291858367 = null;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858367 = null;
    break BeforeRet;
    }
    
    if (gEditor.commandLineMode) {
    result_1291858367 = gEditor.commandLineTextEditor;
    break BeforeRet;
    }
    
    if (((0 <= gEditor.currentView) && (gEditor.currentView < (gEditor.views).length))) {
    result_1291858367 = gEditor.views[chckIndx(gEditor.currentView, 0, (gEditor.views).length - 1)].editor;
    break BeforeRet;
    }
    
    result_1291858367 = null;
    break BeforeRet;
  };

  return result_1291858367;

}

function getActiveEditor2JsWrapper_1291858362(self_1291858401) {
  var result_1291858402 = null;

    result_1291858402 = getActiveEditor2_1291858365(self_1291858401);

  return result_1291858402;

}
editor_prototype.getActiveEditor2 = function() { return (getActiveEditor2JsWrapper_1291858362(this));};

function loadCurrentConfig_1291858409(self_1291858410) {
    createView_1291848949(self_1291858410, newTextDocument_3154117191([99,111,110,102,105,103,46,106,115], [99,111,110,115,111,108,101,46,108,111,103,40,39,104,105,39,41]));

  
}

function loadCurrentConfigJsWrapper_1291858405(self_1291858441) {
    loadCurrentConfig_1291858409(self_1291858441);

  
}
editor_prototype.loadCurrentConfig = function() { return (loadCurrentConfigJsWrapper_1291858405(this));};

function sourceCurrentDocument_1291858457(self_1291858458) {
    var editor_1291858461 = getActiveEditor2_1291858365(self_1291858458);
    if (isObj(editor_1291858461.m_type, NTI2801795279)) {
    var document_1291858468 = editor_1291858461.document;
    var contentStrict_1291858469 = ([34,117,115,101,32,115,116,114,105,99,116,34,59,10] || []).concat(contentString_2801796222(document_1291858468) || []);
    rawEcho(contentStrict_1291858469);
    eval(toJSStr(contentStrict_1291858469));
    }
    

  
}

function sourceCurrentDocumentJsWrapper_1291858453(self_1291858496) {
    sourceCurrentDocument_1291858457(self_1291858496);

  
}
editor_prototype.sourceCurrentDocument = function() { return (sourceCurrentDocumentJsWrapper_1291858453(this));};

function getEditor_1291858511(index_1291858512) {
  var result_1291858513 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858513 = -1;
    break BeforeRet;
    }
    
    if (((0 <= index_1291858512) && (index_1291858512 < (gEditor.views).length))) {
    result_1291858513 = gEditor.views[chckIndx(index_1291858512, 0, (gEditor.views).length - 1)].editor.id;
    break BeforeRet;
    }
    
    result_1291858513 = -1;
    break BeforeRet;
  };

  return result_1291858513;

}

function getEditorJsWrapper_1291858508(index_1291858525) {
  var result_1291858526 = 0;

    result_1291858526 = getEditor_1291858511(index_1291858525);

  return result_1291858526;

}
editor_prototype.getEditor = function(index_ /* : int */) { return (getEditorJsWrapper_1291858508(index_));};

function rawGet_1291845891(t_1291845894, key_1291845895, hc_1291845896, hc_1291845896_Idx) {
  var result_1291845897 = 0;

  BeforeRet: {
    hc_1291845896[hc_1291845896_Idx] = hash_1325400236(key_1291845895);
    if ((hc_1291845896[hc_1291845896_Idx] == 0)) {
    hc_1291845896[hc_1291845896_Idx] = 314159265;
    }
    
    if (((t_1291845894.data).length == 0)) {
    result_1291845897 = -1;
    break BeforeRet;
    }
    
    var h_1291845951 = (hc_1291845896[hc_1291845896_Idx] & (t_1291845894.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291845894.data[chckIndx(h_1291845951, 0, (t_1291845894.data).length - 1)].Field0)) break Label2;
          if (((t_1291845894.data[chckIndx(h_1291845951, 0, (t_1291845894.data).length - 1)].Field0 == hc_1291845896[hc_1291845896_Idx]) && (t_1291845894.data[chckIndx(h_1291845951, 0, (t_1291845894.data).length - 1)].Field1 == key_1291845895))) {
          result_1291845897 = h_1291845951;
          break BeforeRet;
          }
          
          h_1291845951 = nextTry_1308622883(h_1291845951, (t_1291845894.data).length - 1);
        }
    };
    result_1291845897 = subInt(-1, h_1291845951);
  };

  return result_1291845897;

}

function hasKey_1291850708(t_1291850711, key_1291850712) {
  var result_1291850713 = false;

    var hc_1291850714 = [0];
    result_1291850713 = (0 <= rawGet_1291845891(t_1291850711, key_1291850712, hc_1291850714, 0));

  return result_1291850713;

}

function contains_1291850702(t_1291850705, key_1291850706) {
  var result_1291850707 = false;

  BeforeRet: {
    result_1291850707 = hasKey_1291850708(t_1291850705, key_1291850706);
    break BeforeRet;
  };

  return result_1291850707;

}

function some_1291850854(val_1291850856) {
  var result_1291850857 = ({val: null});

    if (!(!((val_1291850856 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291850857.val = val_1291850856;

  return result_1291850857;

}

function HEX5BHEX5D_1291850774(t_1291850777, key_1291850778) {
  var result_1291850779 = null;
  var result_1291850779_Idx = 0;

    var hcHEX60gensym22_1291850780 = [0];
    var indexHEX60gensym22_1291850787 = rawGet_1291845891(t_1291850777, key_1291850778, hcHEX60gensym22_1291850780, 0);
    if ((0 <= indexHEX60gensym22_1291850787)) {
    result_1291850779 = t_1291850777.data[chckIndx(indexHEX60gensym22_1291850787, 0, (t_1291850777.data).length - 1)]; result_1291850779_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850841(key_1291850778);
    }
    

  return [result_1291850779, result_1291850779_Idx];

}

function none_1291850870() {
  var result_1291850876 = ({val: null});

  return result_1291850876;

}

function getEditorForId_1291850652(self_1291850653, id_1291850654) {
    var Temporary1;

  var result_1291850659 = ({val: null});

  BeforeRet: {
    if (contains_1291850702(self_1291850653.editors, id_1291850654)) {
    result_1291850659 = nimCopy(result_1291850659, some_1291850854((Temporary1 = HEX5BHEX5D_1291850774(self_1291850653.editors, id_1291850654), Temporary1)[0][Temporary1[1]]), NTI1291848323);
    break BeforeRet;
    }
    
    if ((self_1291850653.commandLineTextEditor.id == id_1291850654)) {
    result_1291850659 = nimCopy(result_1291850659, some_1291850854(self_1291850653.commandLineTextEditor), NTI1291848323);
    break BeforeRet;
    }
    
    result_1291850659 = nimCopy(result_1291850659, none_1291850870(), NTI1291848323);
    break BeforeRet;
  };

  return result_1291850659;

}

function isSome_2801803595(self_2801803597) {
  var result_2801803598 = false;

    result_2801803598 = !((self_2801803597.val == null));

  return result_2801803598;

}

function isNone_2801803623(self_2801803625) {
  var result_2801803626 = false;

    result_2801803626 = (self_2801803625.val == null);

  return result_2801803626;

}

function get_2801803615(self_2801803617) {
  var result_2801803618 = null;

    if (isNone_2801803623(self_2801803617)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801803618 = self_2801803617["val"];

  return result_2801803618;

}

function scriptIsTextEditor_1291858550(editorId_1291858551) {
      var Temporary1;

  var result_1291858552 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858552 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym655_1291858558 = getEditorForId_1291850652(gEditor, editorId_1291858551);
      if (!isSome_2801803595(oHEX60gensym655_1291858558)) Temporary1 = false; else {        var editor_1291858581 = get_2801803615(oHEX60gensym655_1291858558);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291858552 = isObj(editor_1291858581.m_type, NTI2801795279);
    break BeforeRet;
    }
    
    result_1291858552 = false;
    break BeforeRet;
  };

  return result_1291858552;

}

function scriptIsTextEditorJsWrapper_1291858547(editorId_1291858593) {
  var result_1291858594 = false;

    result_1291858594 = scriptIsTextEditor_1291858550(editorId_1291858593);

  return result_1291858594;

}
editor_prototype.scriptIsTextEditor = function(editorId_ /* : EditorId */) { return (scriptIsTextEditorJsWrapper_1291858547(editorId_));};

function scriptIsAstEditor_1291858619(editorId_1291858620) {
      var Temporary1;

  var result_1291858621 = false;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858621 = false;
    break BeforeRet;
    }
    
      var oHEX60gensym664_1291858627 = getEditorForId_1291850652(gEditor, editorId_1291858620);
      if (!isSome_2801803595(oHEX60gensym664_1291858627)) Temporary1 = false; else {        var editor_1291858650 = get_2801803615(oHEX60gensym664_1291858627);
        Temporary1 = true;      }    if (Temporary1) {
    result_1291858621 = isObj(editor_1291858650.m_type, NTI2936014315);
    break BeforeRet;
    }
    
    result_1291858621 = false;
    break BeforeRet;
  };

  return result_1291858621;

}

function scriptIsAstEditorJsWrapper_1291858616(editorId_1291858662) {
  var result_1291858663 = false;

    result_1291858663 = scriptIsAstEditor_1291858619(editorId_1291858662);

  return result_1291858663;

}
editor_prototype.scriptIsAstEditor = function(editorId_ /* : EditorId */) { return (scriptIsAstEditorJsWrapper_1291858616(editorId_));};

function scriptRunActionFor_1291858687(editorId_1291858688, action_1291858689, arg_1291858690) {
      var Temporary2;
      var Temporary3;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym674_1291858696 = getEditorForId_1291850652(gEditor, editorId_1291858688);
      if (!isSome_2801803595(oHEX60gensym674_1291858696)) Temporary2 = false; else {        var editor_1291858719 = get_2801803615(oHEX60gensym674_1291858696);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291858719.eventHandler.handleAction(action_1291858689, arg_1291858690);
    }
    else {
      var oHEX60gensym675_1291858722 = getPopupForId_1291850886(gEditor, editorId_1291858688);
      if (!isSome_3204448517(oHEX60gensym675_1291858722)) Temporary3 = false; else {        var popup_1291858745 = get_3204448537(oHEX60gensym675_1291858722);
        Temporary3 = true;      }    if (Temporary3) {
    var _ = popup_1291858745.eventHandler.handleAction(action_1291858689, arg_1291858690);
    }
    }
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptRunActionForJsWrapper_1291858684(editorId_1291858756, action_1291858757, arg_1291858758) {
    scriptRunActionFor_1291858687(editorId_1291858756, action_1291858757, arg_1291858758);

  
}
editor_prototype.scriptRunActionFor = function(editorId_ /* : EditorId */, action_ /* : string */, arg_ /* : string */) { return (scriptRunActionForJsWrapper_1291858684(editorId_, action_ == undefined ? undefined : cstrToNimstr(action_), arg_ == undefined ? undefined : cstrToNimstr(arg_)));};

function scriptInsertTextInto_1291858788(editorId_1291858789, text_1291858790) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym684_1291858796 = getEditorForId_1291850652(gEditor, editorId_1291858789);
      if (!isSome_2801803595(oHEX60gensym684_1291858796)) Temporary2 = false; else {        var editor_1291858819 = get_2801803615(oHEX60gensym684_1291858796);
        Temporary2 = true;      }    if (Temporary2) {
    var _ = editor_1291858819.eventHandler.handleInput(text_1291858790);
    }
    
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptInsertTextIntoJsWrapper_1291858785(editorId_1291858827, text_1291858828) {
    scriptInsertTextInto_1291858788(editorId_1291858827, text_1291858828);

  
}
editor_prototype.scriptInsertTextInto = function(editorId_ /* : EditorId */, text_ /* : string */) { return (scriptInsertTextIntoJsWrapper_1291858785(editorId_, text_ == undefined ? undefined : cstrToNimstr(text_)));};

function scriptTextEditorSelection_1291858853(editorId_1291858854) {
      var Temporary2;

  var result_1291858855 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    if ((gEditor == null)) {
    var colontmp__1291858917 = {Field0: 0, Field1: 0};
    var colontmp__1291858918 = {Field0: 0, Field1: 0};
    result_1291858855 = nimCopy(result_1291858855, {Field0: nimCopy(null, colontmp__1291858917, NTI2231369737), Field1: nimCopy(null, colontmp__1291858918, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym693_1291858861 = getEditorForId_1291850652(gEditor, editorId_1291858854);
      if (!isSome_2801803595(oHEX60gensym693_1291858861)) Temporary2 = false; else {        var editor_1291858884 = get_2801803615(oHEX60gensym693_1291858861);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291858884.m_type, NTI2801795279)) {
    var editor_1291858891 = editor_1291858884;
    result_1291858855 = nimCopy(result_1291858855, selection_2801795568(editor_1291858891), NTI2231369739);
    break BeforeRet;
    }
    
    }
    
    var colontmp__1291858919 = {Field0: 0, Field1: 0};
    var colontmp__1291858920 = {Field0: 0, Field1: 0};
    result_1291858855 = nimCopy(result_1291858855, {Field0: nimCopy(null, colontmp__1291858919, NTI2231369737), Field1: nimCopy(null, colontmp__1291858920, NTI2231369737)}, NTI2231369739);
    break BeforeRet;
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  return result_1291858855;

}

function scriptTextEditorSelectionJsWrapper_1291858850(editorId_1291858897) {
  var result_1291858898 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291858898 = nimCopy(result_1291858898, scriptTextEditorSelection_1291858853(editorId_1291858897), NTI2231369739);

  return result_1291858898;

}
editor_prototype.scriptTextEditorSelection = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionJsWrapper_1291858850(editorId_));};

function scriptSetTextEditorSelection_1291858926(editorId_1291858927, selection_1291858928) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym702_1291858934 = getEditorForId_1291850652(gEditor, editorId_1291858927);
      if (!isSome_2801803595(oHEX60gensym702_1291858934)) Temporary2 = false; else {        var editor_1291858957 = get_2801803615(oHEX60gensym702_1291858934);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291858957.m_type, NTI2801795279)) {
    selectionHEX3D_2801795574(editor_1291858957, selection_1291858928);
    }
    
    }
    
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionJsWrapper_1291858923(editorId_1291858969, selection_1291858970) {
    scriptSetTextEditorSelection_1291858926(editorId_1291858969, selection_1291858970);

  
}
editor_prototype.scriptSetTextEditorSelection = function(editorId_ /* : EditorId */, selection_ /* : Selection */) { return (scriptSetTextEditorSelectionJsWrapper_1291858923(editorId_, selection_));};

function scriptTextEditorSelections_1291858995(editorId_1291858996) {
      var Temporary1;

  var result_1291858997 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291858997 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291854643);
    break BeforeRet;
    }
    
      var oHEX60gensym711_1291859007 = getEditorForId_1291850652(gEditor, editorId_1291858996);
      if (!isSome_2801803595(oHEX60gensym711_1291859007)) Temporary1 = false; else {        var editor_1291859030 = get_2801803615(oHEX60gensym711_1291859007);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291859030.m_type, NTI2801795279)) {
    var editor_1291859037 = editor_1291859030;
    result_1291858997 = nimCopy(null, selections_2801795565(editor_1291859037), NTI2231369747);
    break BeforeRet;
    }
    
    }
    
    result_1291858997 = nimCopy(null, [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}], NTI1291854643);
    break BeforeRet;
  };

  return result_1291858997;

}

function scriptTextEditorSelectionsJsWrapper_1291858992(editorId_1291859047) {
  var result_1291859048 = [];

    result_1291859048 = nimCopy(null, scriptTextEditorSelections_1291858995(editorId_1291859047), NTI1291854630);

  return result_1291859048;

}
editor_prototype.scriptTextEditorSelections = function(editorId_ /* : EditorId */) { return (scriptTextEditorSelectionsJsWrapper_1291858992(editorId_));};

function scriptSetTextEditorSelections_1291859072(editorId_1291859073, selections_1291859074) {
      var Temporary2;

  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    try {
      var oHEX60gensym720_1291859080 = getEditorForId_1291850652(gEditor, editorId_1291859073);
      if (!isSome_2801803595(oHEX60gensym720_1291859080)) Temporary2 = false; else {        var editor_1291859103 = get_2801803615(oHEX60gensym720_1291859080);
        Temporary2 = true;      }    if (Temporary2) {
    if (isObj(editor_1291859103.m_type, NTI2801795279)) {
    selectionsHEX3D_2801795824(editor_1291859103, selections_1291859074);
    }
    
    }
    
    } finally {
    requestRender_2315255899(gEditor.platform, false);
    }
  };

  
}

function scriptSetTextEditorSelectionsJsWrapper_1291859069(editorId_1291859115, selections_1291859116) {
    scriptSetTextEditorSelections_1291859072(editorId_1291859115, selections_1291859116);

  
}
editor_prototype.scriptSetTextEditorSelections = function(editorId_ /* : EditorId */, selections_ /* : seq[Selection] */) { return (scriptSetTextEditorSelectionsJsWrapper_1291859069(editorId_, selections_));};

function scriptGetTextEditorLine_1291859141(editorId_1291859142, line_1291859143) {
      var Temporary1;
    var Temporary2;

  var result_1291859144 = [];

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859144 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
    }
    
      var oHEX60gensym730_1291859150 = getEditorForId_1291850652(gEditor, editorId_1291859142);
      if (!isSome_2801803595(oHEX60gensym730_1291859150)) Temporary1 = false; else {        var editor_1291859173 = get_2801803615(oHEX60gensym730_1291859150);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291859173.m_type, NTI2801795279)) {
    var editor_1291859180 = editor_1291859173;
    if (((0 <= line_1291859143) && (line_1291859143 < (content_2801796219(editor_1291859180.document)).length))) {
    result_1291859144 = nimCopy(null, (Temporary2 = content_2801796219(editor_1291859180.document), Temporary2)[chckIndx(line_1291859143, 0, (Temporary2).length - 1)], NTI33554449);
    break BeforeRet;
    }
    
    }
    
    }
    
    result_1291859144 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_1291859144;

}

function scriptGetTextEditorLineJsWrapper_1291859138(editorId_1291859190, line_1291859191) {
  var result_1291859192 = [];

    result_1291859192 = nimCopy(null, scriptGetTextEditorLine_1291859141(editorId_1291859190, line_1291859191), NTI33554449);

  return result_1291859192;

}
editor_prototype.scriptGetTextEditorLine = function(editorId_ /* : EditorId */, line_ /* : int */) { return toJSStr(scriptGetTextEditorLineJsWrapper_1291859138(editorId_, line_));};

function scriptGetTextEditorLineCount_1291859221(editorId_1291859222) {
      var Temporary1;

  var result_1291859223 = 0;

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291859223 = 0;
    break BeforeRet;
    }
    
      var oHEX60gensym740_1291859229 = getEditorForId_1291850652(gEditor, editorId_1291859222);
      if (!isSome_2801803595(oHEX60gensym740_1291859229)) Temporary1 = false; else {        var editor_1291859252 = get_2801803615(oHEX60gensym740_1291859229);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_1291859252.m_type, NTI2801795279)) {
    var editor_1291859259 = editor_1291859252;
    result_1291859223 = (content_2801796219(editor_1291859259.document)).length;
    break BeforeRet;
    }
    
    }
    
    result_1291859223 = 0;
    break BeforeRet;
  };

  return result_1291859223;

}

function scriptGetTextEditorLineCountJsWrapper_1291859218(editorId_1291859268) {
  var result_1291859269 = 0;

    result_1291859269 = scriptGetTextEditorLineCount_1291859221(editorId_1291859268);

  return result_1291859269;

}
editor_prototype.scriptGetTextEditorLineCount = function(editorId_ /* : EditorId */) { return (scriptGetTextEditorLineCountJsWrapper_1291859218(editorId_));};

function scriptGetOptionInt_1291859304(path_1291859305, default_1291859306) {
  var result_1291859307 = 0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859307 = default_1291859306;
      break BeforeRet;
      }
      
      var nodeHEX60gensym750_1291859312 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859305, [46], -1));
      if ((nodeHEX60gensym750_1291859312 == null)) {
      result_1291859307 = default_1291859306;
      break BeforeRet;
      }
      
    };
    result_1291859307 = getInt_1627390118(nodeHEX60gensym750_1291859312, default_1291859306);
  };

  return result_1291859307;

}

function scriptGetOptionIntJsWrapper_1291859301(path_1291859322, default_1291859323) {
  var result_1291859324 = 0;

    result_1291859324 = scriptGetOptionInt_1291859304(path_1291859322, default_1291859323);

  return result_1291859324;

}
editor_prototype.scriptGetOptionInt = function(path_ /* : string */, default_ /* : int */) { return (scriptGetOptionIntJsWrapper_1291859301(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionFloat_1291859354(path_1291859355, default_1291859356) {
  var result_1291859357 = 0.0;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859357 = default_1291859356;
      break BeforeRet;
      }
      
      var nodeHEX60gensym760_1291859362 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859355, [46], -1));
      if ((nodeHEX60gensym760_1291859362 == null)) {
      result_1291859357 = default_1291859356;
      break BeforeRet;
      }
      
    };
    result_1291859357 = getFloat_1627390140(nodeHEX60gensym760_1291859362, default_1291859356);
  };

  return result_1291859357;

}

function scriptGetOptionFloatJsWrapper_1291859351(path_1291859372, default_1291859373) {
  var result_1291859374 = 0.0;

    result_1291859374 = scriptGetOptionFloat_1291859354(path_1291859372, default_1291859373);

  return result_1291859374;

}
editor_prototype.scriptGetOptionFloat = function(path_ /* : string */, default_ /* : float */) { return (scriptGetOptionFloatJsWrapper_1291859351(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionBool_1291859469(path_1291859470, default_1291859471) {
  var result_1291859472 = false;

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859472 = default_1291859471;
      break BeforeRet;
      }
      
      var nodeHEX60gensym776_1291859477 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859470, [46], -1));
      if ((nodeHEX60gensym776_1291859477 == null)) {
      result_1291859472 = default_1291859471;
      break BeforeRet;
      }
      
    };
    result_1291859472 = getBool_1627390147(nodeHEX60gensym776_1291859477, default_1291859471);
  };

  return result_1291859472;

}

function scriptGetOptionBoolJsWrapper_1291859466(path_1291859487, default_1291859488) {
  var result_1291859489 = false;

    result_1291859489 = scriptGetOptionBool_1291859469(path_1291859487, default_1291859488);

  return result_1291859489;

}
editor_prototype.scriptGetOptionBool = function(path_ /* : string */, default_ /* : bool */) { return (scriptGetOptionBoolJsWrapper_1291859466(path_ == undefined ? undefined : cstrToNimstr(path_), default_));};

function scriptGetOptionString_1291859519(path_1291859520, default_1291859521) {
  var result_1291859522 = [];

  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      result_1291859522 = nimCopy(null, default_1291859521, NTI33554449);
      break BeforeRet;
      }
      
      var nodeHEX60gensym786_1291859527 = HEX7BHEX7D_1627393316(gEditor.options, nsuSplitString(path_1291859520, [46], -1));
      if ((nodeHEX60gensym786_1291859527 == null)) {
      result_1291859522 = nimCopy(null, default_1291859521, NTI33554449);
      break BeforeRet;
      }
      
    };
    result_1291859522 = nimCopy(null, getStr_1627390106(nodeHEX60gensym786_1291859527, default_1291859521), NTI33554449);
  };

  return result_1291859522;

}

function scriptGetOptionStringJsWrapper_1291859516(path_1291859537, default_1291859538) {
  var result_1291859539 = [];

    result_1291859539 = nimCopy(null, scriptGetOptionString_1291859519(path_1291859537, default_1291859538), NTI33554449);

  return result_1291859539;

}
editor_prototype.scriptGetOptionString = function(path_ /* : string */, default_ /* : string */) { return toJSStr(scriptGetOptionStringJsWrapper_1291859516(path_ == undefined ? undefined : cstrToNimstr(path_), default_ == undefined ? undefined : cstrToNimstr(default_)));};

function scriptSetOptionInt_1291859569(path_1291859570, value_1291859571) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym795_1291859578 = nsuSplitString(path_1291859570, [46], -1);
      var nodeHEX60gensym795_1291859579 = gEditor.options;
      Label3: {
        var keyHEX60gensym795_1291859598 = [];
        var colontmp__1291859642 = [];
        colontmp__1291859642 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym795_1291859578, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859643 = 0;
        var L_1291859644 = (colontmp__1291859642).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859643 < L_1291859644)) break Label5;
              keyHEX60gensym795_1291859598 = colontmp__1291859642[chckIndx(i_1291859643, 0, (colontmp__1291859642).length - 1)];
              if (!((nodeHEX60gensym795_1291859579.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym795_1291859579, keyHEX60gensym795_1291859598))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym795_1291859579, keyHEX60gensym795_1291859598, newJObject_1627390051());
              }
              
              nodeHEX60gensym795_1291859579 = HEX5BHEX5D_1627393037(nodeHEX60gensym795_1291859579, keyHEX60gensym795_1291859598);
              i_1291859643 = addInt(i_1291859643, 1);
              if (!(((colontmp__1291859642).length == L_1291859644))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym795_1291859579 == null) || !((nodeHEX60gensym795_1291859579.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym795_1291859579, HEX5BHEX5D_2600469248(pathItemsHEX60gensym795_1291859578, 1), newJInt_1627390040(value_1291859571));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionIntJsWrapper_1291859566(path_1291859619, value_1291859620) {
    scriptSetOptionInt_1291859569(path_1291859619, value_1291859620);

  
}
editor_prototype.scriptSetOptionInt = function(path_ /* : string */, value_ /* : int */) { return (scriptSetOptionIntJsWrapper_1291859566(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionFloat_1291859651(path_1291859652, value_1291859653) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym809_1291859660 = nsuSplitString(path_1291859652, [46], -1);
      var nodeHEX60gensym809_1291859661 = gEditor.options;
      Label3: {
        var keyHEX60gensym809_1291859680 = [];
        var colontmp__1291859724 = [];
        colontmp__1291859724 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym809_1291859660, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859725 = 0;
        var L_1291859726 = (colontmp__1291859724).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859725 < L_1291859726)) break Label5;
              keyHEX60gensym809_1291859680 = colontmp__1291859724[chckIndx(i_1291859725, 0, (colontmp__1291859724).length - 1)];
              if (!((nodeHEX60gensym809_1291859661.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym809_1291859661, keyHEX60gensym809_1291859680))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym809_1291859661, keyHEX60gensym809_1291859680, newJObject_1627390051());
              }
              
              nodeHEX60gensym809_1291859661 = HEX5BHEX5D_1627393037(nodeHEX60gensym809_1291859661, keyHEX60gensym809_1291859680);
              i_1291859725 = addInt(i_1291859725, 1);
              if (!(((colontmp__1291859724).length == L_1291859726))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym809_1291859661 == null) || !((nodeHEX60gensym809_1291859661.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym809_1291859661, HEX5BHEX5D_2600469248(pathItemsHEX60gensym809_1291859660, 1), newJFloat_1627390043(value_1291859653));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionFloatJsWrapper_1291859648(path_1291859701, value_1291859702) {
    scriptSetOptionFloat_1291859651(path_1291859701, value_1291859702);

  
}
editor_prototype.scriptSetOptionFloat = function(path_ /* : string */, value_ /* : float */) { return (scriptSetOptionFloatJsWrapper_1291859648(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionBool_1291859733(path_1291859734, value_1291859735) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym823_1291859742 = nsuSplitString(path_1291859734, [46], -1);
      var nodeHEX60gensym823_1291859743 = gEditor.options;
      Label3: {
        var keyHEX60gensym823_1291859762 = [];
        var colontmp__1291859806 = [];
        colontmp__1291859806 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym823_1291859742, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859807 = 0;
        var L_1291859808 = (colontmp__1291859806).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859807 < L_1291859808)) break Label5;
              keyHEX60gensym823_1291859762 = colontmp__1291859806[chckIndx(i_1291859807, 0, (colontmp__1291859806).length - 1)];
              if (!((nodeHEX60gensym823_1291859743.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym823_1291859743, keyHEX60gensym823_1291859762))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym823_1291859743, keyHEX60gensym823_1291859762, newJObject_1627390051());
              }
              
              nodeHEX60gensym823_1291859743 = HEX5BHEX5D_1627393037(nodeHEX60gensym823_1291859743, keyHEX60gensym823_1291859762);
              i_1291859807 = addInt(i_1291859807, 1);
              if (!(((colontmp__1291859806).length == L_1291859808))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym823_1291859743 == null) || !((nodeHEX60gensym823_1291859743.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym823_1291859743, HEX5BHEX5D_2600469248(pathItemsHEX60gensym823_1291859742, 1), newJBool_1627390046(value_1291859735));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionBoolJsWrapper_1291859730(path_1291859783, value_1291859784) {
    scriptSetOptionBool_1291859733(path_1291859783, value_1291859784);

  
}
editor_prototype.scriptSetOptionBool = function(path_ /* : string */, value_ /* : bool */) { return (scriptSetOptionBoolJsWrapper_1291859730(path_ == undefined ? undefined : cstrToNimstr(path_), value_));};

function scriptSetOptionString_1291859815(path_1291859816, value_1291859817) {
  BeforeRet: {
    Label1: {
      if ((gEditor == null)) {
      break BeforeRet;
      }
      
      try {
      var pathItemsHEX60gensym837_1291859824 = nsuSplitString(path_1291859816, [46], -1);
      var nodeHEX60gensym837_1291859825 = gEditor.options;
      Label3: {
        var keyHEX60gensym837_1291859844 = [];
        var colontmp__1291859888 = [];
        colontmp__1291859888 = HEX5BHEX5D_2801809080(pathItemsHEX60gensym837_1291859824, HEX2EHEX2E_1040187488(0, 2));
        var i_1291859889 = 0;
        var L_1291859890 = (colontmp__1291859888).length;
        Label4: {
            Label5: while (true) {
            if (!(i_1291859889 < L_1291859890)) break Label5;
              keyHEX60gensym837_1291859844 = colontmp__1291859888[chckIndx(i_1291859889, 0, (colontmp__1291859888).length - 1)];
              if (!((nodeHEX60gensym837_1291859825.kind == 5))) {
              break BeforeRet;
              }
              
              if (!(contains_1627393212(nodeHEX60gensym837_1291859825, keyHEX60gensym837_1291859844))) {
              HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym837_1291859825, keyHEX60gensym837_1291859844, newJObject_1627390051());
              }
              
              nodeHEX60gensym837_1291859825 = HEX5BHEX5D_1627393037(nodeHEX60gensym837_1291859825, keyHEX60gensym837_1291859844);
              i_1291859889 = addInt(i_1291859889, 1);
              if (!(((colontmp__1291859888).length == L_1291859890))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
      if (((nodeHEX60gensym837_1291859825 == null) || !((nodeHEX60gensym837_1291859825.kind == 5)))) {
      break BeforeRet;
      }
      
      HEX5BHEX5DHEX3D_1627391903(nodeHEX60gensym837_1291859825, HEX5BHEX5D_2600469248(pathItemsHEX60gensym837_1291859824, 1), newJString_1627389994(value_1291859817));
      } finally {
      requestRender_2315255899(gEditor.platform, false);
      }
    };
  };

  
}

function scriptSetOptionStringJsWrapper_1291859812(path_1291859865, value_1291859866) {
    scriptSetOptionString_1291859815(path_1291859865, value_1291859866);

  
}
editor_prototype.scriptSetOptionString = function(path_ /* : string */, value_ /* : string */) { return (scriptSetOptionStringJsWrapper_1291859812(path_ == undefined ? undefined : cstrToNimstr(path_), value_ == undefined ? undefined : cstrToNimstr(value_)));};

function rawGet_1291847805(t_1291847808, key_1291847809, hc_1291847810, hc_1291847810_Idx) {
  var result_1291847811 = 0;

  BeforeRet: {
    hc_1291847810[hc_1291847810_Idx] = hash_1325400491(key_1291847809);
    if ((hc_1291847810[hc_1291847810_Idx] == 0)) {
    hc_1291847810[hc_1291847810_Idx] = 314159265;
    }
    
    if (((t_1291847808.data).length == 0)) {
    result_1291847811 = -1;
    break BeforeRet;
    }
    
    var h_1291847863 = (hc_1291847810[hc_1291847810_Idx] & (t_1291847808.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291847808.data[chckIndx(h_1291847863, 0, (t_1291847808.data).length - 1)].Field0)) break Label2;
          if (((t_1291847808.data[chckIndx(h_1291847863, 0, (t_1291847808.data).length - 1)].Field0 == hc_1291847810[hc_1291847810_Idx]) && eqStrings(t_1291847808.data[chckIndx(h_1291847863, 0, (t_1291847808.data).length - 1)].Field1, key_1291847809))) {
          result_1291847811 = h_1291847863;
          break BeforeRet;
          }
          
          h_1291847863 = nextTry_1308622883(h_1291847863, (t_1291847808.data).length - 1);
        }
    };
    result_1291847811 = subInt(-1, h_1291847863);
  };

  return result_1291847811;

}

function mustRehash_3003140405(t_3003140407) {
  var result_3003140408 = false;

    if (!((t_3003140407.counter < (t_3003140407.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3003140408 = ((mulInt((t_3003140407.data).length, 2) < mulInt(t_3003140407.counter, 3)) || (subInt((t_3003140407.data).length, t_3003140407.counter) < 4));

  return result_3003140408;

}

function rawInsert_3003141098(t_3003141102, data_3003141103, data_3003141103_Idx, key_3003141104, val_3003141105, hc_3003141106, h_3003141107) {
    data_3003141103[data_3003141103_Idx][chckIndx(h_3003141107, 0, (data_3003141103[data_3003141103_Idx]).length - 1)].Field1 = nimCopy(null, key_3003141104, NTI33554449);
    data_3003141103[data_3003141103_Idx][chckIndx(h_3003141107, 0, (data_3003141103[data_3003141103_Idx]).length - 1)].Field2 = val_3003141105;
    data_3003141103[data_3003141103_Idx][chckIndx(h_3003141107, 0, (data_3003141103[data_3003141103_Idx]).length - 1)].Field0 = hc_3003141106;

  
}

function enlarge_3003140662(t_3003140665) {
    var n_3003140668 = [];
    n_3003140668 = new Array(chckRange(mulInt((t_3003140665.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3003140665.data).length, 2), 0, 2147483647) ; ++i) { n_3003140668[i] = {Field0: 0, Field1: [], Field2: 0}; }    var Temporary1 = t_3003140665.data; t_3003140665.data = n_3003140668; n_3003140668 = Temporary1;    Label2: {
      var i_3003140766 = 0;
      var colontmp__1291859977 = 0;
      colontmp__1291859977 = (n_3003140668).length - 1;
      var res_1291859978 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_1291859978 <= colontmp__1291859977)) break Label4;
            i_3003140766 = res_1291859978;
            var eh_3003140847 = n_3003140668[chckIndx(i_3003140766, 0, (n_3003140668).length - 1)].Field0;
            if (isFilled_1308622880(eh_3003140847)) {
            var j_3003140851 = (eh_3003140847 & (t_3003140665.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3003140665.data[chckIndx(j_3003140851, 0, (t_3003140665.data).length - 1)].Field0)) break Label6;
                  j_3003140851 = nextTry_1308622883(j_3003140851, (t_3003140665.data).length - 1);
                }
            };
            rawInsert_3003141098(t_3003140665, t_3003140665, "data", n_3003140668[chckIndx(i_3003140766, 0, (n_3003140668).length - 1)].Field1, n_3003140668[chckIndx(i_3003140766, 0, (n_3003140668).length - 1)].Field2, eh_3003140847, j_3003140851);
            }
            
            res_1291859978 = addInt(res_1291859978, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3003141348(t_3003141351, key_3003141352, hc_3003141353) {
  var result_3003141354 = 0;

  BeforeRet: {
    if (((t_3003141351.data).length == 0)) {
    result_3003141354 = -1;
    break BeforeRet;
    }
    
    var h_3003141439 = (hc_3003141353 & (t_3003141351.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3003141351.data[chckIndx(h_3003141439, 0, (t_3003141351.data).length - 1)].Field0)) break Label2;
          if (((t_3003141351.data[chckIndx(h_3003141439, 0, (t_3003141351.data).length - 1)].Field0 == hc_3003141353) && eqStrings(t_3003141351.data[chckIndx(h_3003141439, 0, (t_3003141351.data).length - 1)].Field1, key_3003141352))) {
          result_3003141354 = h_3003141439;
          break BeforeRet;
          }
          
          h_3003141439 = nextTry_1308622883(h_3003141439, (t_3003141351.data).length - 1);
        }
    };
    result_3003141354 = subInt(-1, h_3003141439);
  };

  return result_3003141354;

}

function HEX5BHEX5DHEX3D_3003140137(t_3003140140, key_3003140141, val_3003140142) {
    if (((t_3003140140.data).length == 0)) {
    var correctSizeHEX60gensym115_3003140225 = slotsNeeded_1308622891(32);
    t_3003140140.counter = 0;
    t_3003140140.data = new Array(chckRange(correctSizeHEX60gensym115_3003140225, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym115_3003140225, 0, 2147483647) ; ++i) { t_3003140140.data[i] = {Field0: 0, Field1: [], Field2: 0}; }    }
    
    var hc_3003140230 = [0];
    var index_3003140237 = rawGet_1291847805(t_3003140140, key_3003140141, hc_3003140230, 0);
    if ((0 <= index_3003140237)) {
    t_3003140140.data[chckIndx(index_3003140237, 0, (t_3003140140.data).length - 1)].Field2 = val_3003140142;
    }
    else {
      if (((t_3003140140.data).length == 0)) {
      var correctSizeHEX60gensym118_3003140400 = slotsNeeded_1308622891(32);
      t_3003140140.counter = 0;
      t_3003140140.data = new Array(chckRange(correctSizeHEX60gensym118_3003140400, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym118_3003140400, 0, 2147483647) ; ++i) { t_3003140140.data[i] = {Field0: 0, Field1: [], Field2: 0}; }      }
      
      if (mustRehash_3003140405(t_3003140140)) {
      enlarge_3003140662(t_3003140140);
      index_3003140237 = rawGetKnownHC_3003141348(t_3003140140, key_3003140141, hc_3003140230[0]);
      }
      
      index_3003140237 = subInt(-1, index_3003140237);
      rawInsert_3003141098(t_3003140140, t_3003140140, "data", key_3003140141, val_3003140142, hc_3003140230[0], index_3003140237);
      t_3003140140.counter = addInt(t_3003140140.counter, 1);
    }
    

  
}

function scriptSetCallback_1291859897(path_1291859898, id_1291859899) {
  BeforeRet: {
    if ((gEditor == null)) {
    break BeforeRet;
    }
    
    HEX5BHEX5DHEX3D_3003140137(gEditor.callbacks, path_1291859898, id_1291859899);
  };

  
}

function scriptSetCallbackJsWrapper_1291859894(path_1291859954, id_1291859955) {
    scriptSetCallback_1291859897(path_1291859954, id_1291859955);

  
}
editor_prototype.scriptSetCallback = function(path_ /* : string */, id_ /* : int */) { return (scriptSetCallbackJsWrapper_1291859894(path_ == undefined ? undefined : cstrToNimstr(path_), id_));};

function initTable_3221225515(initialSize_3221225518) {
  var result_3221225524 = ({data: [], counter: 0});

    var correctSizeHEX60gensym0_3221225526 = slotsNeeded_1308622891(chckRange(initialSize_3221225518, 0, 2147483647));
    result_3221225524.counter = 0;
    result_3221225524.data = new Array(chckRange(correctSizeHEX60gensym0_3221225526, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym0_3221225526, 0, 2147483647) ; ++i) { result_3221225524.data[i] = {Field0: 0, Field1: 0, Field2: null}; }
  return result_3221225524;

}
var commandLineWidget_3221225511 = [null];
var mainStack_3221225512 = [null];
var viewPanel_3221225513 = [null];
var mainPanel_3221225514 = [null];
var widgetsPerEditor_3221225540 = [initTable_3221225515(32)];

function new_536870928() {
  var result_536870931 = null;

  BeforeRet: {
    var r_536870933 = null;
    r_536870933 = ({m_type: NTI3288334342, content: null, boundsStack: [], onResized: ({handlers: []}), mFontSize: 0.0, mLineHeight: 0.0, mLineDistance: 0.0, mCharWidth: 0.0, escapedText: null, redrawEverything: false, onKeyPress: ({handlers: []}), onKeyRelease: ({handlers: []}), onRune: ({handlers: []}), onMousePress: ({handlers: []}), onMouseRelease: ({handlers: []}), onMouseMove: ({handlers: []}), onScroll: ({handlers: []}), onCloseRequested: ({handlers: []}), layoutOptions: ({getTextBounds: null})});
    result_536870931 = r_536870933;
    break BeforeRet;
  };

  return result_536870931;

}

function subscribe_1291851139(event_1291851141, callback_1291851143) {
  var result_1291851144 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851144 = nimCopy(result_1291851144, newId_2181038297(), NTI2181038083);
    event_1291851141.handlers.push({Field0: nimCopy(null, result_1291851144, NTI2181038083), Field1: callback_1291851143});;

  return result_1291851144;

}

function anyInProgress_2046821873(handlers_2046821874) {
  var result_2046821875 = false;

  BeforeRet: {
    Label1: {
      var h_2046821889 = null;
      var i_536871005 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871005 < (handlers_2046821874).length)) break Label3;
            h_2046821889 = handlers_2046821874[chckIndx(i_536871005, 0, (handlers_2046821874).length - 1)];
            if (!((h_2046821889.state.current == 0))) {
            result_2046821875 = true;
            break BeforeRet;
            }
            
            i_536871005 = addInt(i_536871005, 1);
          }
      };
    };
    result_2046821875 = false;
    break BeforeRet;
  };

  return result_2046821875;

}

function step_2013266020(dfa_2013266021, state_2013266022, currentInput_2013266023, mods_2013266024) {
    var Temporary1;

  var result_2013266025 = ({current: 0, persistent: 0});

  BeforeRet: {
    if ((currentInput_2013266023 == 0)) {
    log_1174405220(logger_704643272[0], 5, [[73,110,112,117,116,32,48,32,105,115,32,105,110,118,97,108,105,100]]);
    break BeforeRet;
    }
    
    if (!(contains_2013266068(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    if (!(contains_2013266498(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024))) {
    result_2013266025 = nimCopy(result_2013266025, {current: 0, persistent: 0}, NTI2013265955);
    break BeforeRet;
    }
    
    result_2013266025.current = (Temporary1 = HEX5BHEX5D_2013266922(HEX5BHEX5D_2013266376(dfa_2013266021.states[chckIndx(state_2013266022.current, 0, (dfa_2013266021.states).length - 1)].inputs, currentInput_2013266023).next, mods_2013266024), Temporary1)[0][Temporary1[1]];
    if (dfa_2013266021.states[chckIndx(result_2013266025.current, 0, (dfa_2013266021.states).length - 1)].persistent) {
    result_2013266025.persistent = result_2013266025.current;
    }
    else {
      result_2013266025.persistent = state_2013266022.persistent;
    }
    
  };

  return result_2013266025;

}

function dfa_2046820703(handler_2046820704) {
  var result_2046820705 = null;

  BeforeRet: {
    if ((handler_2046820704.revision < handler_2046820704.config.revision)) {
    handler_2046820704.dfaInternal = buildDFA_2046820415(handler_2046820704.config);
    handler_2046820704.revision = handler_2046820704.config.revision;
    }
    
    result_2046820705 = handler_2046820704.dfaInternal;
    break BeforeRet;
  };

  return result_2046820705;

}

function HEX24_788529796(rune_788529797) {
  var result_788529798 = [];

    result_788529798 = nimCopy(null, nuctoUTF8(rune_788529797), NTI33554449);

  return result_788529798;

}

function inputAsString_2013267079(input_2013267080) {
    var Temporary1;

  var result_2013267081 = [];

    if (    input_2013267080 == -1    ){      Temporary1 = [69,78,84,69,82];
      }
    else if (    input_2013267080 == -2    ){      Temporary1 = [69,83,67,65,80,69];
      }
    else if (    input_2013267080 == -3    ){      Temporary1 = [66,65,67,75,83,80,65,67,69];
      }
    else if (    input_2013267080 == -4    ){      Temporary1 = [83,80,65,67,69];
      }
    else if (    input_2013267080 == -5    ){      Temporary1 = [68,69,76,69,84,69];
      }
    else if (    input_2013267080 == -6    ){      Temporary1 = [84,65,66];
      }
    else if (    input_2013267080 == -7    ){      Temporary1 = [76,69,70,84];
      }
    else if (    input_2013267080 == -8    ){      Temporary1 = [82,73,71,72,84];
      }
    else if (    input_2013267080 == -9    ){      Temporary1 = [85,80];
      }
    else if (    input_2013267080 == -10    ){      Temporary1 = [68,79,87,78];
      }
    else if (    input_2013267080 == -11    ){      Temporary1 = [72,79,77,69];
      }
    else if (    input_2013267080 == -12    ){      Temporary1 = [69,78,68];
      }
    else if (    input_2013267080 == -13    ){      Temporary1 = [80,65,71,69,95,85,80];
      }
    else if (    input_2013267080 == -14    ){      Temporary1 = [80,65,71,69,95,68,79,87,78];
      }
    else if (    input_2013267080 == -20    ){      Temporary1 = [70,49];
      }
    else if (    input_2013267080 == -21    ){      Temporary1 = [70,50];
      }
    else if (    input_2013267080 == -22    ){      Temporary1 = [70,51];
      }
    else if (    input_2013267080 == -23    ){      Temporary1 = [70,52];
      }
    else if (    input_2013267080 == -24    ){      Temporary1 = [70,53];
      }
    else if (    input_2013267080 == -25    ){      Temporary1 = [70,54];
      }
    else if (    input_2013267080 == -26    ){      Temporary1 = [70,55];
      }
    else if (    input_2013267080 == -27    ){      Temporary1 = [70,56];
      }
    else if (    input_2013267080 == -28    ){      Temporary1 = [70,57];
      }
    else if (    input_2013267080 == -29    ){      Temporary1 = [70,49,48];
      }
    else if (    input_2013267080 == -30    ){      Temporary1 = [70,49,49];
      }
    else if (    input_2013267080 == -31    ){      Temporary1 = [70,49,50];
      }
    else{
      Temporary1 = ([60] || []).concat(HEX24_369098763(input_2013267080) || [],[62] || []);
      }
    result_2013267081 = nimCopy(null, Temporary1, NTI33554449);

  return result_2013267081;

}

function inputToString_2013267082(input_2013267083, modifiers_2013267084) {
  var result_2013267085 = [];

    if ((!(SetEq(modifiers_2013267084, ConstSet275)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [60]);;
    }
    
    if ((modifiers_2013267084[0] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [67]);;
    }
    
    if ((modifiers_2013267084[1] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [83]);;
    }
    
    if ((modifiers_2013267084[2] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [65]);;
    }
    
    if ((modifiers_2013267084[3] != undefined)) {
    result_2013267085.push.apply(result_2013267085, [77]);;
    }
    
    if (!(SetEq(modifiers_2013267084, ConstSet276))) {
    result_2013267085.push.apply(result_2013267085, [45]);;
    }
    
    if (((0 < input_2013267083) && (input_2013267083 <= 2147483647))) {
    var ch_2013267114 = chckRange(input_2013267083, -2147483648, 2147483647);
    result_2013267085.push.apply(result_2013267085, HEX24_788529796(ch_2013267114));;
    }
    else {
    result_2013267085.push.apply(result_2013267085, inputAsString_2013267079(input_2013267083));;
    }
    
    if ((!(SetEq(modifiers_2013267084, ConstSet277)) || (input_2013267083 < 0))) {
    result_2013267085.push.apply(result_2013267085, [62]);;
    }
    

  return result_2013267085;

}

function isTerminal_2013267067(dfa_2013267068, state_2013267069) {
  var result_2013267070 = false;

  BeforeRet: {
    result_2013267070 = dfa_2013267068.states[chckIndx(state_2013267069, 0, (dfa_2013267068.states).length - 1)].isTerminal;
    break BeforeRet;
  };

  return result_2013267070;

}

function getAction_2013267075(dfa_2013267076, state_2013267077) {
  var result_2013267078 = [];

  BeforeRet: {
    result_2013267078 = nimCopy(null, dfa_2013267076.states[chckIndx(state_2013267077, 0, (dfa_2013267076.states).length - 1)].function, NTI33554449);
    break BeforeRet;
  };

  return result_2013267078;

}

function getDefaultState_2013267071(dfa_2013267072, state_2013267073) {
  var result_2013267074 = 0;

  BeforeRet: {
    result_2013267074 = dfa_2013267072.states[chckIndx(state_2013267073, 0, (dfa_2013267072.states).length - 1)].nextState;
    break BeforeRet;
  };

  return result_2013267074;

}

function handleEvent_2046821839(handler_2046821840, handler_2046821840_Idx, input_2046821841, modifiers_2046821842, handleUnknownAsInput_2046821843) {
  var result_2046821844 = 0;

  BeforeRet: {
    if (!((input_2046821841 == 0))) {
    var prevState_2046821845 = nimCopy(null, handler_2046821840[handler_2046821840_Idx].state, NTI2013265955);
    handler_2046821840[handler_2046821840_Idx].state = nimCopy(handler_2046821840[handler_2046821840_Idx].state, step_2013266020(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state, input_2046821841, modifiers_2046821842), NTI2013265955);
    if ((handler_2046821840[handler_2046821840_Idx].state.current == 0)) {
    if ((prevState_2046821845.current == 0)) {
    if ((((handleUnknownAsInput_2046821843 && (0 < input_2046821841)) && SetEq(SetPlus(modifiers_2046821842, ConstSet273), ConstSet274)) && !((handler_2046821840[handler_2046821840_Idx].handleInput == null)))) {
    result_2046821844 = handler_2046821840[handler_2046821840_Idx].handleInput(inputToString_2013267082(input_2046821841, ConstSet278));
    break BeforeRet;
    }
    
    result_2046821844 = 1;
    break BeforeRet;
    }
    else {
      result_2046821844 = 2;
      break BeforeRet;
    }
    
    }
    else {
    if (isTerminal_2013267067(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current)) {
    var colontmp__536871007 = parseAction_2046821786(getAction_2013267075(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current));
    var action_2046821858 = nimCopy(null, colontmp__536871007["Field0"], NTI33554449);
    var arg_2046821859 = nimCopy(null, colontmp__536871007["Field1"], NTI33554449);
    handler_2046821840[handler_2046821840_Idx].state.current = getDefaultState_2013267071(dfa_2046820703(handler_2046821840[handler_2046821840_Idx]), handler_2046821840[handler_2046821840_Idx].state.current);
    result_2046821844 = handler_2046821840[handler_2046821840_Idx].handleAction(action_2046821858, arg_2046821859);
    break BeforeRet;
    }
    else {
      result_2046821844 = 4;
      break BeforeRet;
    }
    }
    }
    else {
      result_2046821844 = 0;
      break BeforeRet;
    }
    
  };

  return result_2046821844;

}

function reset_2046821779(handler_2046821780, handler_2046821780_Idx) {
    handler_2046821780[handler_2046821780_Idx].state = nimCopy(handler_2046821780[handler_2046821780_Idx].state, ({current: 0, persistent: 0}), NTI2013265955);

  
}

function handleEvent_2046821899(handlers_2046821900, input_2046821901, modifiers_2046821902) {
            var Temporary4;

    var anyInProgress_2046821903 = anyInProgress_2046821873(handlers_2046821900);
    var allowHandlingUnknownAsInput_2046821904 = true;
    Label1: {
      var i_2046821913 = 0;
      var colontmp__536871000 = 0;
      colontmp__536871000 = (handlers_2046821900).length;
      var i_536871001 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871001 < colontmp__536871000)) break Label3;
            i_2046821913 = i_536871001;
            var handlerIndex_2046821917 = subInt(subInt((handlers_2046821900).length, i_2046821913), 1);
            var handler_2046821918 = [handlers_2046821900[chckIndx(handlerIndex_2046821917, 0, (handlers_2046821900).length - 1)]];
            if (((anyInProgress_2046821903 && !((handler_2046821918[0].state.current == 0))) || (!(anyInProgress_2046821903) && (handler_2046821918[0].state.current == 0)))) {
            Temporary4 = handleEvent_2046821839(handler_2046821918, 0, input_2046821901, modifiers_2046821902, allowHandlingUnknownAsInput_2046821904);
            }
            else {
            Temporary4 = 1;
            }
            
            var response_2046821919 = Temporary4;
            switch (response_2046821919) {
            case 3:
              allowHandlingUnknownAsInput_2046821904 = false;
              Label5: {
                var k_2046821961 = 0;
                var h_2046821962 = null;
                var i_536870997 = 0;
                var L_536870998 = (handlers_2046821900).length;
                Label6: {
                    Label7: while (true) {
                    if (!(i_536870997 < L_536870998)) break Label7;
                      k_2046821961 = i_536870997;
                      h_2046821962 = handlers_2046821900[chckIndx(i_536870997, 0, (handlers_2046821900).length - 1)];
                      if (!((k_2046821961 == handlerIndex_2046821917))) {
                      var h_2046821963 = [h_2046821962];
                      reset_2046821779(h_2046821963, 0);
                      }
                      
                      i_536870997 = addInt(i_536870997, 1);
                      if (!(((handlers_2046821900).length == L_536870998))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
              break Label1;
              break;
            case 4:
              allowHandlingUnknownAsInput_2046821904 = false;
              break;
            case 0:
            case 2:
            case 1:
              break;
            }
            if (handler_2046821918[0].config.consumeAllInput) {
            break Label1;
            }
            
            i_536871001 = addInt(i_536871001, 1);
          }
      };
    };

  
}

function add_2936021461(x_2936021463, x_2936021463_Idx, y_2936021464) {
    var Temporary1;

    var xl_2936021468 = (x_2936021463[x_2936021463_Idx]).length;
    if (x_2936021463[x_2936021463_Idx].length < (Temporary1 = chckRange(addInt(xl_2936021468, (y_2936021464).length), 0, 2147483647), Temporary1)) { for (var i = x_2936021463[x_2936021463_Idx].length ; i < Temporary1 ; ++i) x_2936021463[x_2936021463_Idx].push(null); }
               else { x_2936021463[x_2936021463_Idx].length = Temporary1; };
    Label2: {
      var i_2936021483 = 0;
      var colontmp__536871009 = 0;
      colontmp__536871009 = (y_2936021464).length - 1;
      var res_536871010 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871010 <= colontmp__536871009)) break Label4;
            i_2936021483 = res_536871010;
            x_2936021463[x_2936021463_Idx][chckIndx(addInt(xl_2936021468, i_2936021483), 0, (x_2936021463[x_2936021463_Idx]).length - 1)] = y_2936021464[chckIndx(i_2936021483, 0, (y_2936021464).length - 1)];
            res_536871010 = addInt(res_536871010, 1);
          }
      };
    };

  
}

function currentEventHandlers_1291857861(self_1291857862) {
  var result_1291857863 = [[]];

    result_1291857863[0] = nimCopy(null, [self_1291857862.eventHandler], NTI2248146958);
    var modeOnTop_1291857877 = getOption_2801803228(self_1291857862, getContextWithMode_1291857808(self_1291857862, [101,100,105,116,111,114,46,99,117,115,116,111,109,45,109,111,100,101,45,111,110,45,116,111,112]), true);
    if ((!((self_1291857862.modeEventHandler == null)) && !(modeOnTop_1291857877))) {
    result_1291857863[0].push(self_1291857862.modeEventHandler);;
    }
    
    if (self_1291857862.commandLineMode) {
    add_2936021461(result_1291857863, 0, getEventHandlers_2147483804(getCommandLineTextEditor_1291851054(self_1291857862)));
    result_1291857863[0].push(self_1291857862.commandLineEventHandler);;
    }
    else {
    if ((0 < (self_1291857862.popups).length)) {
    add_2936021461(result_1291857863, 0, getEventHandlers_2264924219(self_1291857862.popups[chckIndx((self_1291857862.popups).length - 1, 0, (self_1291857862.popups).length - 1)]));
    }
    else {
    if (((0 <= self_1291857862.currentView) && (self_1291857862.currentView < (self_1291857862.views).length))) {
    add_2936021461(result_1291857863, 0, getEventHandlers_2147483804(self_1291857862.views[chckIndx(self_1291857862.currentView, 0, (self_1291857862.views).length - 1)].editor));
    }
    }}
    if ((!((self_1291857862.modeEventHandler == null)) && modeOnTop_1291857877)) {
    result_1291857863[0].push(self_1291857862.modeEventHandler);;
    }
    

  return result_1291857863[0];

}

function handleKeyPress_1291851057(self_1291851058, input_1291851059, modifiers_1291851060) {
    handleEvent_2046821899(currentEventHandlers_1291857861(self_1291851058), input_1291851059, modifiers_1291851060);

  
}

function handleKeyRelease_1291851061(self_1291851062, input_1291851063, modifiers_1291851064) {
  
}

function handleRune_1291851065(self_1291851066, input_1291851067, modifiers_1291851068) {
    var Temporary1;
      var Temporary2;

      if (!isAscii_2013266003(input_1291851067)) Temporary2 = false; else {        Temporary2 = nsuIsAlphaNumericChar(chckRange(input_1291851067, 0, 255));      }    if (Temporary2) {
    Temporary1 = modifiers_1291851068;
    }
    else {
    Temporary1 = ConstSet279;
    }
    
    var modifiers_1291858078 = nimCopy(null, Temporary1, NTI2013265950);
    handleEvent_2046821899(currentEventHandlers_1291857861(self_1291851066), input_1291851067, modifiers_1291858078);

  
}

function subscribe_1291851309(event_1291851311, callback_1291851313) {
  var result_1291851314 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851314 = nimCopy(result_1291851314, newId_2181038297(), NTI2181038083);
    event_1291851311.handlers.push({Field0: nimCopy(null, result_1291851314, NTI2181038083), Field1: callback_1291851313});;

  return result_1291851314;

}

function contains_2063597758(a_2063597759, b_2063597760) {
  var result_2063597761 = false;

  BeforeRet: {
    result_2063597761 = ((((a_2063597759.x <= b_2063597760.arr[chckIndx(0, 0, (b_2063597760.arr).length - 1)]) && (b_2063597760.arr[chckIndx(0, 0, (b_2063597760.arr).length - 1)] <= (a_2063597759.x + a_2063597759.w))) && (a_2063597759.y <= b_2063597760.arr[chckIndx(1, 0, (b_2063597760.arr).length - 1)])) && (b_2063597760.arr[chckIndx(1, 0, (b_2063597760.arr).length - 1)] <= (a_2063597759.y + a_2063597759.h)));
    break BeforeRet;
  };

  return result_2063597761;

}

function handleMousePress_1291851069(self_1291851070, button_1291851071, modifiers_1291851072, mousePosWindow_1291851073) {
  BeforeRet: {
    Label1: {
      var i_1291857932 = 0;
      var colontmp__536871013 = 0;
      colontmp__536871013 = (self_1291851070.popups).length - 1;
      var res_536871014 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871014 <= colontmp__536871013)) break Label3;
            i_1291857932 = res_536871014;
            var popup_1291857936 = self_1291851070.popups[chckIndx(subInt((self_1291851070.popups).length - 1, i_1291857932), 0, (self_1291851070.popups).length - 1)];
            if (contains_2063597758(popup_1291857936.lastBounds, mousePosWindow_1291851073)) {
            handleMousePress_2264924230(popup_1291857936, button_1291851071, mousePosWindow_1291851073);
            break BeforeRet;
            }
            
            res_536871014 = addInt(res_536871014, 1);
          }
      };
    };
    var rects_1291857940 = layoutViews_1291848219(self_1291851070.layout, self_1291851070.layout_props, self_1291851070.lastBounds, (self_1291851070.views).length);
    Label4: {
      var i_1291857973 = 0;
      var view_1291857974 = null;
      var i_536871018 = 0;
      var L_536871019 = (self_1291851070.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871018 < L_536871019)) break Label6;
            i_1291857973 = i_536871018;
            view_1291857974 = self_1291851070.views[chckIndx(i_536871018, 0, (self_1291851070.views).length - 1)];
            if (((rects_1291857940).length <= i_1291857973)) {
            break BeforeRet;
            }
            
            if (contains_2063597758(rects_1291857940[chckIndx(i_1291857973, 0, (rects_1291857940).length - 1)], mousePosWindow_1291851073)) {
            self_1291851070.currentView = i_1291857973;
            handleMousePress_2147483821(view_1291857974.editor, button_1291851071, mousePosWindow_1291851073);
            break BeforeRet;
            }
            
            i_536871018 = addInt(i_536871018, 1);
            if (!(((self_1291851070.views).length == L_536871019))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function handleMouseRelease_1291851074(self_1291851075, button_1291851076, modifiers_1291851077, mousePosWindow_1291851078) {
  BeforeRet: {
    Label1: {
      var i_1291857991 = 0;
      var colontmp__536871022 = 0;
      colontmp__536871022 = (self_1291851075.popups).length - 1;
      var res_536871023 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871023 <= colontmp__536871022)) break Label3;
            i_1291857991 = res_536871023;
            var popup_1291857995 = self_1291851075.popups[chckIndx(subInt((self_1291851075.popups).length - 1, i_1291857991), 0, (self_1291851075.popups).length - 1)];
            if (contains_2063597758(popup_1291857995.lastBounds, mousePosWindow_1291851078)) {
            handleMouseRelease_2264924235(popup_1291857995, button_1291851076, mousePosWindow_1291851078);
            break BeforeRet;
            }
            
            res_536871023 = addInt(res_536871023, 1);
          }
      };
    };
    var rects_1291857999 = layoutViews_1291848219(self_1291851075.layout, self_1291851075.layout_props, self_1291851075.lastBounds, (self_1291851075.views).length);
    Label4: {
      var i_1291858005 = 0;
      var view_1291858006 = null;
      var i_536871026 = 0;
      var L_536871027 = (self_1291851075.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871026 < L_536871027)) break Label6;
            i_1291858005 = i_536871026;
            view_1291858006 = self_1291851075.views[chckIndx(i_536871026, 0, (self_1291851075.views).length - 1)];
            if (((rects_1291857999).length <= i_1291858005)) {
            break BeforeRet;
            }
            
            if (((self_1291851075.currentView == i_1291858005) && contains_2063597758(rects_1291857999[chckIndx(i_1291858005, 0, (rects_1291857999).length - 1)], mousePosWindow_1291851078))) {
            handleMouseRelease_2147483826(view_1291858006.editor, button_1291851076, mousePosWindow_1291851078);
            break BeforeRet;
            }
            
            i_536871026 = addInt(i_536871026, 1);
            if (!(((self_1291851075.views).length == L_536871027))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851430(event_1291851432, callback_1291851434) {
  var result_1291851435 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851435 = nimCopy(result_1291851435, newId_2181038297(), NTI2181038083);
    event_1291851432.handlers.push({Field0: nimCopy(null, result_1291851435, NTI2181038083), Field1: callback_1291851434});;

  return result_1291851435;

}

function handleMouseMove_1291851079(self_1291851080, mousePosWindow_1291851081, mousePosDelta_1291851082, modifiers_1291851083, buttons_1291851084) {
  BeforeRet: {
    Label1: {
      var i_1291858023 = 0;
      var colontmp__536871030 = 0;
      colontmp__536871030 = (self_1291851080.popups).length - 1;
      var res_536871031 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871031 <= colontmp__536871030)) break Label3;
            i_1291858023 = res_536871031;
            var popup_1291858027 = self_1291851080.popups[chckIndx(subInt((self_1291851080.popups).length - 1, i_1291858023), 0, (self_1291851080.popups).length - 1)];
            if (contains_2063597758(popup_1291858027.lastBounds, mousePosWindow_1291851081)) {
            handleMouseMove_2264924242(popup_1291858027, mousePosWindow_1291851081, mousePosDelta_1291851082, modifiers_1291851083, buttons_1291851084);
            break BeforeRet;
            }
            
            res_536871031 = addInt(res_536871031, 1);
          }
      };
    };
    var rects_1291858031 = layoutViews_1291848219(self_1291851080.layout, self_1291851080.layout_props, self_1291851080.lastBounds, (self_1291851080.views).length);
    Label4: {
      var i_1291858037 = 0;
      var view_1291858038 = null;
      var i_536871034 = 0;
      var L_536871035 = (self_1291851080.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871034 < L_536871035)) break Label6;
            i_1291858037 = i_536871034;
            view_1291858038 = self_1291851080.views[chckIndx(i_536871034, 0, (self_1291851080.views).length - 1)];
            if (((rects_1291858031).length <= i_1291858037)) {
            break BeforeRet;
            }
            
            if (((self_1291851080.currentView == i_1291858037) && contains_2063597758(rects_1291858031[chckIndx(i_1291858037, 0, (rects_1291858031).length - 1)], mousePosWindow_1291851081))) {
            handleMouseMove_2147483833(view_1291858038.editor, mousePosWindow_1291851081, mousePosDelta_1291851082, modifiers_1291851083, buttons_1291851084);
            break BeforeRet;
            }
            
            i_536871034 = addInt(i_536871034, 1);
            if (!(((self_1291851080.views).length == L_536871035))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851502(event_1291851504, callback_1291851506) {
  var result_1291851507 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851507 = nimCopy(result_1291851507, newId_2181038297(), NTI2181038083);
    event_1291851504.handlers.push({Field0: nimCopy(null, result_1291851507, NTI2181038083), Field1: callback_1291851506});;

  return result_1291851507;

}

function handleScroll_1291851085(self_1291851086, scroll_1291851087, mousePosWindow_1291851088, modifiers_1291851089) {
  BeforeRet: {
    Label1: {
      var i_1291858054 = 0;
      var colontmp__536871038 = 0;
      colontmp__536871038 = (self_1291851086.popups).length - 1;
      var res_536871039 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536871039 <= colontmp__536871038)) break Label3;
            i_1291858054 = res_536871039;
            var popup_1291858058 = self_1291851086.popups[chckIndx(subInt((self_1291851086.popups).length - 1, i_1291858054), 0, (self_1291851086.popups).length - 1)];
            if (contains_2063597758(popup_1291858058.lastBounds, mousePosWindow_1291851088)) {
            handleScroll_2264924225(popup_1291858058, scroll_1291851087, mousePosWindow_1291851088);
            break BeforeRet;
            }
            
            res_536871039 = addInt(res_536871039, 1);
          }
      };
    };
    Label4: {
      var i_1291858064 = 0;
      var view_1291858065 = null;
      var i_536871042 = 0;
      var L_536871043 = (self_1291851086.views).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871042 < L_536871043)) break Label6;
            i_1291858064 = i_536871042;
            view_1291858065 = self_1291851086.views[chckIndx(i_536871042, 0, (self_1291851086.views).length - 1)];
            if (contains_2063597758(view_1291858065.editor.lastContentBounds, mousePosWindow_1291851088)) {
            handleScroll_2147483816(view_1291858065.editor, scroll_1291851087, mousePosWindow_1291851088);
            break BeforeRet;
            }
            
            i_536871042 = addInt(i_536871042, 1);
            if (!(((self_1291851086.views).length == L_536871043))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  
}

function subscribe_1291851574(event_1291851576, callback_1291851578) {
  var result_1291851579 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_1291851579 = nimCopy(result_1291851579, newId_2181038297(), NTI2181038083);
    event_1291851576.handlers.push({Field0: nimCopy(null, result_1291851579, NTI2181038083), Field1: callback_1291851578});;

  return result_1291851579;

}

function initTable_1291851589(initialSize_1291851592) {
  var result_1291851593 = ({data: [], counter: 0});

    var correctSizeHEX60gensym61_1291851595 = slotsNeeded_1308622891(chckRange(initialSize_1291851592, 0, 2147483647));
    result_1291851593.counter = 0;
    result_1291851593.data = new Array(chckRange(correctSizeHEX60gensym61_1291851595, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym61_1291851595, 0, 2147483647) ; ++i) { result_1291851593.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }
  return result_1291851593;

}

function HEX5BHEX5DHEX3D_1291851658(t_1291851661, key_1291851662, val_1291851663) {
    if (((t_1291851661.data).length == 0)) {
    var correctSizeHEX60gensym64_1291851712 = slotsNeeded_1308622891(32);
    t_1291851661.counter = 0;
    t_1291851661.data = new Array(chckRange(correctSizeHEX60gensym64_1291851712, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym64_1291851712, 0, 2147483647) ; ++i) { t_1291851661.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }    }
    
    var hc_1291851717 = [0];
    var index_1291851724 = rawGet_1291848303(t_1291851661, key_1291851662, hc_1291851717, 0);
    if ((0 <= index_1291851724)) {
    t_1291851661.data[chckIndx(index_1291851724, 0, (t_1291851661.data).length - 1)].Field2 = val_1291851663;
    }
    else {
      if (((t_1291851661.data).length == 0)) {
      var correctSizeHEX60gensym67_1291851826 = slotsNeeded_1308622891(32);
      t_1291851661.counter = 0;
      t_1291851661.data = new Array(chckRange(correctSizeHEX60gensym67_1291851826, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym67_1291851826, 0, 2147483647) ; ++i) { t_1291851661.data[i] = {Field0: 0, Field1: [], Field2: 0.0}; }      }
      
      if (mustRehash_1291851831(t_1291851661)) {
      enlarge_1291851986(t_1291851661);
      index_1291851724 = rawGetKnownHC_1291852458(t_1291851661, key_1291851662, hc_1291851717[0]);
      }
      
      index_1291851724 = subInt(-1, index_1291851724);
      rawInsert_1291852280(t_1291851661, t_1291851661, "data", key_1291851662, val_1291851663, hc_1291851717[0], index_1291851724);
      t_1291851661.counter = addInt(t_1291851661.counter, 1);
    }
    

  
}

function toTable_1291851584(pairs_1291851587) {
  var result_1291851588 = [({data: [], counter: 0})];

    result_1291851588[0] = nimCopy(result_1291851588[0], initTable_1291851589((pairs_1291851587).length), NTI1291845654);
    Label1: {
      var key_1291851616 = [];
      var val_1291851617 = 0.0;
      var i_536871047 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871047 < (pairs_1291851587).length)) break Label3;
            key_1291851616 = pairs_1291851587[chckIndx(i_536871047, 0, (pairs_1291851587).length - 1)]["Field0"];
            val_1291851617 = pairs_1291851587[chckIndx(i_536871047, 0, (pairs_1291851587).length - 1)]["Field1"];
            HEX5BHEX5DHEX3D_1291851658(result_1291851588[0], key_1291851616, val_1291851617);
            i_536871047 = addInt(i_536871047, 1);
          }
      };
    };

  return result_1291851588[0];

}

function rawGet_2483028997(t_2483029000, key_2483029001, hc_2483029002, hc_2483029002_Idx) {
  var result_2483029003 = 0;

  BeforeRet: {
    hc_2483029002[hc_2483029002_Idx] = hash_1325400491(key_2483029001);
    if ((hc_2483029002[hc_2483029002_Idx] == 0)) {
    hc_2483029002[hc_2483029002_Idx] = 314159265;
    }
    
    if (((t_2483029000.data).length == 0)) {
    result_2483029003 = -1;
    break BeforeRet;
    }
    
    var h_2483029054 = (hc_2483029002[hc_2483029002_Idx] & (t_2483029000.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field0)) break Label2;
          if (((t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field0 == hc_2483029002[hc_2483029002_Idx]) && eqStrings(t_2483029000.data[chckIndx(h_2483029054, 0, (t_2483029000.data).length - 1)].Field1, key_2483029001))) {
          result_2483029003 = h_2483029054;
          break BeforeRet;
          }
          
          h_2483029054 = nextTry_1308622883(h_2483029054, (t_2483029000.data).length - 1);
        }
    };
    result_2483029003 = subInt(-1, h_2483029054);
  };

  return result_2483029003;

}

function mustRehash_2483029342(t_2483029344) {
  var result_2483029345 = false;

    if (!((t_2483029344.counter < (t_2483029344.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2483029345 = ((mulInt((t_2483029344.data).length, 2) < mulInt(t_2483029344.counter, 3)) || (subInt((t_2483029344.data).length, t_2483029344.counter) < 4));

  return result_2483029345;

}

function rawInsert_2483029791(t_2483029795, data_2483029796, data_2483029796_Idx, key_2483029797, val_2483029798, hc_2483029799, h_2483029800) {
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field1 = nimCopy(null, key_2483029797, NTI33554449);
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field2 = nimCopy(data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field2, val_2483029798, NTI2365587459);
    data_2483029796[data_2483029796_Idx][chckIndx(h_2483029800, 0, (data_2483029796[data_2483029796_Idx]).length - 1)].Field0 = hc_2483029799;

  
}

function enlarge_2483029497(t_2483029500) {
    var n_2483029503 = [];
    n_2483029503 = new Array(chckRange(mulInt((t_2483029500.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2483029500.data).length, 2), 0, 2147483647) ; ++i) { n_2483029503[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    var Temporary1 = t_2483029500.data; t_2483029500.data = n_2483029503; n_2483029503 = Temporary1;    Label2: {
      var i_2483029567 = 0;
      var colontmp__536871052 = 0;
      colontmp__536871052 = (n_2483029503).length - 1;
      var res_536871053 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871053 <= colontmp__536871052)) break Label4;
            i_2483029567 = res_536871053;
            var eh_2483029621 = n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field0;
            if (isFilled_1308622880(eh_2483029621)) {
            var j_2483029625 = (eh_2483029621 & (t_2483029500.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2483029500.data[chckIndx(j_2483029625, 0, (t_2483029500.data).length - 1)].Field0)) break Label6;
                  j_2483029625 = nextTry_1308622883(j_2483029625, (t_2483029500.data).length - 1);
                }
            };
            rawInsert_2483029791(t_2483029500, t_2483029500, "data", n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field1, n_2483029503[chckIndx(i_2483029567, 0, (n_2483029503).length - 1)].Field2, eh_2483029621, j_2483029625);
            }
            
            res_536871053 = addInt(res_536871053, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2483029960(t_2483029963, key_2483029964, hc_2483029965) {
  var result_2483029966 = 0;

  BeforeRet: {
    if (((t_2483029963.data).length == 0)) {
    result_2483029966 = -1;
    break BeforeRet;
    }
    
    var h_2483030017 = (hc_2483029965 & (t_2483029963.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field0)) break Label2;
          if (((t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field0 == hc_2483029965) && eqStrings(t_2483029963.data[chckIndx(h_2483030017, 0, (t_2483029963.data).length - 1)].Field1, key_2483029964))) {
          result_2483029966 = h_2483030017;
          break BeforeRet;
          }
          
          h_2483030017 = nextTry_1308622883(h_2483030017, (t_2483029963.data).length - 1);
        }
    };
    result_2483029966 = subInt(-1, h_2483030017);
  };

  return result_2483029966;

}

function HEX5BHEX5DHEX3D_2483028936(t_2483028939, key_2483028940, val_2483028941) {
    if (((t_2483028939.data).length == 0)) {
    var correctSizeHEX60gensym23_2483028991 = slotsNeeded_1308622891(32);
    t_2483028939.counter = 0;
    t_2483028939.data = new Array(chckRange(correctSizeHEX60gensym23_2483028991, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym23_2483028991, 0, 2147483647) ; ++i) { t_2483028939.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }    }
    
    var hc_2483028996 = [0];
    var index_2483029235 = rawGet_2483028997(t_2483028939, key_2483028940, hc_2483028996, 0);
    if ((0 <= index_2483029235)) {
    t_2483028939.data[chckIndx(index_2483029235, 0, (t_2483028939.data).length - 1)].Field2 = nimCopy(t_2483028939.data[chckIndx(index_2483029235, 0, (t_2483028939.data).length - 1)].Field2, val_2483028941, NTI2365587459);
    }
    else {
      if (((t_2483028939.data).length == 0)) {
      var correctSizeHEX60gensym28_2483029337 = slotsNeeded_1308622891(32);
      t_2483028939.counter = 0;
      t_2483028939.data = new Array(chckRange(correctSizeHEX60gensym28_2483029337, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym28_2483029337, 0, 2147483647) ; ++i) { t_2483028939.data[i] = {Field0: 0, Field1: [], Field2: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0})}; }      }
      
      if (mustRehash_2483029342(t_2483028939)) {
      enlarge_2483029497(t_2483028939);
      index_2483029235 = rawGetKnownHC_2483029960(t_2483028939, key_2483028940, hc_2483028996[0]);
      }
      
      index_2483029235 = subInt(-1, index_2483029235);
      rawInsert_2483029791(t_2483028939, t_2483028939, "data", key_2483028940, val_2483028941, hc_2483028996[0], index_2483029235);
      t_2483028939.counter = addInt(t_2483028939.counter, 1);
    }
    

  
}

function c2n_2348810428(hex_2348810429, i_2348810430) {
  var result_2348810431 = 0;

  BeforeRet: {
    var c_2348810435 = hex_2348810429[chckIndx(i_2348810430, 0, (hex_2348810429).length - 1)];
    if (    c_2348810435 >= 48 && c_2348810435 <= 57    ){      result_2348810431 = subInt(c_2348810435, 48);
      break BeforeRet;
      }
    else if (    c_2348810435 >= 97 && c_2348810435 <= 102    ){      result_2348810431 = subInt(addInt(10, c_2348810435), 97);
      break BeforeRet;
      }
    else if (    c_2348810435 >= 65 && c_2348810435 <= 70    ){      result_2348810431 = subInt(addInt(10, c_2348810435), 65);
      break BeforeRet;
      }
    else{
      raiseException({message: [102,111,114,109,97,116,32,105,115,32,110,111,116,32,104,101,120], parent: null, m_type: NTI2365587477, name: null, trace: [], up: null}, "InvalidColor");
      }
  };

  return result_2348810431;

}

function parseHex_2348810482(hex_2348810483) {
  var result_2348810484 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2348810483).length == 6))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,57,57,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,54,96,32]);
    }
    
    result_2348810484.r = (addInt(mulInt(c2n_2348810428(hex_2348810483, 0), 16), c2n_2348810428(hex_2348810483, 1)) / 255.0);
    result_2348810484.g = (addInt(mulInt(c2n_2348810428(hex_2348810483, 2), 16), c2n_2348810428(hex_2348810483, 3)) / 255.0);
    result_2348810484.b = (addInt(mulInt(c2n_2348810428(hex_2348810483, 4), 16), c2n_2348810428(hex_2348810483, 5)) / 255.0);
    result_2348810484.a = 1.0;

  return result_2348810484;

}

function parseHexAlpha_2348810573(hex_2348810574) {
  var result_2348810575 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!(((hex_2348810574).length == 8))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,50,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,56,96,32]);
    }
    
    result_2348810575.r = (addInt(mulInt(c2n_2348810428(hex_2348810574, 0), 16), c2n_2348810428(hex_2348810574, 1)) / 255.0);
    result_2348810575.g = (addInt(mulInt(c2n_2348810428(hex_2348810574, 2), 16), c2n_2348810428(hex_2348810574, 3)) / 255.0);
    result_2348810575.b = (addInt(mulInt(c2n_2348810428(hex_2348810574, 4), 16), c2n_2348810428(hex_2348810574, 5)) / 255.0);
    result_2348810575.a = (addInt(mulInt(c2n_2348810428(hex_2348810574, 6), 16), c2n_2348810428(hex_2348810574, 7)) / 255.0);

  return result_2348810575;

}

function parseHtmlHexTiny_2348810683(hex_2348810684) {
  var result_2348810685 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (!((hex_2348810684[chckIndx(0, 0, (hex_2348810684).length - 1)] == 35))) {
    raiseException({message: [69,120,112,101,99,116,101,100,32,39,35,39], parent: null, m_type: NTI2365587477, name: null, trace: [], up: null}, "InvalidColor");
    }
    
    if (!(((hex_2348810684).length == 4))) {
    failedAssertImpl_268435515([99,104,114,111,109,97,46,110,105,109,40,49,54,49,44,32,51,41,32,96,104,101,120,46,108,101,110,32,61,61,32,52,96,32]);
    }
    
    result_2348810685.r = (c2n_2348810428(hex_2348810684, 1) / 15.0);
    result_2348810685.g = (c2n_2348810428(hex_2348810684, 2) / 15.0);
    result_2348810685.b = (c2n_2348810428(hex_2348810684, 3) / 15.0);
    result_2348810685.a = 1.0;

  return result_2348810685;

}

function parseHex_855639007(s_855639009, number_855639010, number_855639010_Idx, maxLen_855639011) {
    var Temporary1;

  var result_855639012 = 0;

    var i_855639013 = 0;
    var output_855639014 = 0;
    var foundDigit_855639015 = false;
    if ((maxLen_855639011 == 0)) {
    Temporary1 = (s_855639009).length;
    }
    else {
    Temporary1 = addInt(i_855639013, maxLen_855639011);
    }
    
    var last_855639022 = nimMin((s_855639009).length, Temporary1);
    if ((((addInt(i_855639013, 1) < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 48)) && (ConstSet280[s_855639009[chckIndx(addInt(i_855639013, 1), 0, (s_855639009).length - 1)]] != undefined))) {
    i_855639013 = addInt(i_855639013, 2);
    }
    else {
    if (((i_855639013 < last_855639022) && (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)] == 35))) {
    i_855639013 = addInt(i_855639013, 1);
    }
    }
    Label2: {
        Label3: while (true) {
        if (!(i_855639013 < last_855639022)) break Label3;
          switch (s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)]) {
          case 95:
            break;
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            output_855639014 = ((output_855639014 << 4) | subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 48));
            foundDigit_855639015 = true;
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 97), 10));
            foundDigit_855639015 = true;
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            output_855639014 = ((output_855639014 << 4) | addInt(subInt(s_855639009[chckIndx(i_855639013, 0, (s_855639009).length - 1)], 65), 10));
            foundDigit_855639015 = true;
            break;
          default: 
            break Label2;
            break;
          }
          i_855639013 = addInt(i_855639013, 1);
        }
    };
    if (foundDigit_855639015) {
    number_855639010[number_855639010_Idx] = output_855639014;
    result_855639012 = i_855639013;
    }
    

  return result_855639012;

}

function parseHex_855639000(s_855639002, number_855639003, number_855639003_Idx, start_855639004, maxLen_855639005) {
  var result_855639006 = 0;

    result_855639006 = parseHex_855639007((s_855639002.slice(start_855639004, (s_855639002).length - 1 + 1)), number_855639003, number_855639003_Idx, maxLen_855639005);

  return result_855639006;

}

function nsuParseHexInt(s_855638998) {
  var result_855638999 = [0];

    result_855638999[0] = 0;
    var L_855639072 = parseHex_855639000(s_855638998, result_855638999, 0, 0, 0);
    if ((!((L_855639072 == (s_855638998).length)) || (L_855639072 == 0))) {
    raiseException({message: ([105,110,118,97,108,105,100,32,104,101,120,32,105,110,116,101,103,101,114,58,32] || []).concat(s_855638998 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_855638999[0];

}

function HEX5BHEX5D_2348810522(s_2348810525, x_2348810526) {
  var result_2348810527 = [];

    var a_2348810529 = subInt((s_2348810525).length, x_2348810526.a);
    var L_2348810531 = addInt(subInt(subInt((s_2348810525).length, x_2348810526.b), a_2348810529), 1);
    result_2348810527 = nimCopy(null, mnewString(chckRange(L_2348810531, 0, 2147483647)), NTI33554449);
    Label1: {
      var i_2348810536 = 0;
      var i_536871058 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871058 < L_2348810531)) break Label3;
            i_2348810536 = i_536871058;
            result_2348810527[chckIndx(i_2348810536, 0, (result_2348810527).length - 1)] = s_2348810525[chckIndx(addInt(i_2348810536, a_2348810529), 0, (s_2348810525).length - 1)];
            i_536871058 = addInt(i_536871058, 1);
          }
      };
    };

  return result_2348810527;

}

function HEX2EHEX2E_2348810495(a_2348810498, b_2348810499) {
  var result_2348810502 = ({a: 0, b: 0});

    result_2348810502 = nimCopy(result_2348810502, {a: a_2348810498, b: b_2348810499}, NTI2348810397);

  return result_2348810502;

}

function parseHexVar_2483028016(text_2483028017) {
    var Temporary1;

  var result_2483028018 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (nsuStartsWith(text_2483028017, [35])) {
    Temporary1 = 1;
    }
    else {
    Temporary1 = 0;
    }
    
    var offset_2483028019 = Temporary1;
    if (((text_2483028017).length == addInt(6, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHex_2348810482(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1))), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(8, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHexAlpha_2348810573(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1))), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(3, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHtmlHexTiny_2348810683(([35] || []).concat(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 1)) || [])), NTI2365587459);
    break BeforeRet;
    }
    else {
    if (((text_2483028017).length == addInt(4, offset_2483028019))) {
    result_2483028018 = nimCopy(result_2483028018, parseHtmlHexTiny_2348810683(([35] || []).concat(HEX5BHEX5D_855639319(text_2483028017, HEX2EHEX2E_1040187488(offset_2483028019, 2)) || [])), NTI2365587459);
    result_2483028018.a = (nsuParseHexInt(HEX5BHEX5D_2348810522(text_2483028017, HEX2EHEX2E_2348810495(1, 1))) / 255.0);
    break BeforeRet;
    }
    }}}
    rawEcho([70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,104,101,120,32,99,111,108,111,114,32,39], text_2483028017, [39]);
    if (true) {
    failedAssertImpl_268435515([116,104,101,109,101,46,110,105,109,40,51,51,44,32,51,41,32,96,102,97,108,115,101,96,32]);
    }
    
    result_2483028018 = nimCopy(result_2483028018, {r: 0.0, g: 0.0, b: 0.0, a: 0.0}, NTI2365587459);
    break BeforeRet;
  };

  return result_2483028018;

}

function rawGet_2483028233(t_2483028236, key_2483028237, hc_2483028238, hc_2483028238_Idx) {
  var result_2483028239 = 0;

  BeforeRet: {
    hc_2483028238[hc_2483028238_Idx] = hash_1325400491(key_2483028237);
    if ((hc_2483028238[hc_2483028238_Idx] == 0)) {
    hc_2483028238[hc_2483028238_Idx] = 314159265;
    }
    
    if (((t_2483028236.data).length == 0)) {
    result_2483028239 = -1;
    break BeforeRet;
    }
    
    var h_2483028291 = (hc_2483028238[hc_2483028238_Idx] & (t_2483028236.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field0)) break Label2;
          if (((t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field0 == hc_2483028238[hc_2483028238_Idx]) && eqStrings(t_2483028236.data[chckIndx(h_2483028291, 0, (t_2483028236.data).length - 1)].Field1, key_2483028237))) {
          result_2483028239 = h_2483028291;
          break BeforeRet;
          }
          
          h_2483028291 = nextTry_1308622883(h_2483028291, (t_2483028236.data).length - 1);
        }
    };
    result_2483028239 = subInt(-1, h_2483028291);
  };

  return result_2483028239;

}

function mustRehash_2483030507(t_2483030509) {
  var result_2483030510 = false;

    if (!((t_2483030509.counter < (t_2483030509.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2483030510 = ((mulInt((t_2483030509.data).length, 2) < mulInt(t_2483030509.counter, 3)) || (subInt((t_2483030509.data).length, t_2483030509.counter) < 4));

  return result_2483030510;

}

function rawInsert_2483030956(t_2483030960, data_2483030961, data_2483030961_Idx, key_2483030962, val_2483030963, hc_2483030964, h_2483030965) {
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field1 = nimCopy(null, key_2483030962, NTI33554449);
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field2 = nimCopy(data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field2, val_2483030963, NTI2483027972);
    data_2483030961[data_2483030961_Idx][chckIndx(h_2483030965, 0, (data_2483030961[data_2483030961_Idx]).length - 1)].Field0 = hc_2483030964;

  
}

function enlarge_2483030662(t_2483030665) {
    var n_2483030668 = [];
    n_2483030668 = new Array(chckRange(mulInt((t_2483030665.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2483030665.data).length, 2), 0, 2147483647) ; ++i) { n_2483030668[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    var Temporary1 = t_2483030665.data; t_2483030665.data = n_2483030668; n_2483030668 = Temporary1;    Label2: {
      var i_2483030732 = 0;
      var colontmp__536871063 = 0;
      colontmp__536871063 = (n_2483030668).length - 1;
      var res_536871064 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871064 <= colontmp__536871063)) break Label4;
            i_2483030732 = res_536871064;
            var eh_2483030786 = n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field0;
            if (isFilled_1308622880(eh_2483030786)) {
            var j_2483030790 = (eh_2483030786 & (t_2483030665.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2483030665.data[chckIndx(j_2483030790, 0, (t_2483030665.data).length - 1)].Field0)) break Label6;
                  j_2483030790 = nextTry_1308622883(j_2483030790, (t_2483030665.data).length - 1);
                }
            };
            rawInsert_2483030956(t_2483030665, t_2483030665, "data", n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field1, n_2483030668[chckIndx(i_2483030732, 0, (n_2483030668).length - 1)].Field2, eh_2483030786, j_2483030790);
            }
            
            res_536871064 = addInt(res_536871064, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2483031125(t_2483031128, key_2483031129, hc_2483031130) {
  var result_2483031131 = 0;

  BeforeRet: {
    if (((t_2483031128.data).length == 0)) {
    result_2483031131 = -1;
    break BeforeRet;
    }
    
    var h_2483031182 = (hc_2483031130 & (t_2483031128.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field0)) break Label2;
          if (((t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field0 == hc_2483031130) && eqStrings(t_2483031128.data[chckIndx(h_2483031182, 0, (t_2483031128.data).length - 1)].Field1, key_2483031129))) {
          result_2483031131 = h_2483031182;
          break BeforeRet;
          }
          
          h_2483031182 = nextTry_1308622883(h_2483031182, (t_2483031128.data).length - 1);
        }
    };
    result_2483031131 = subInt(-1, h_2483031182);
  };

  return result_2483031131;

}

function HEX5BHEX5DHEX3D_2483030334(t_2483030337, key_2483030338, val_2483030339) {
    if (((t_2483030337.data).length == 0)) {
    var correctSizeHEX60gensym37_2483030388 = slotsNeeded_1308622891(32);
    t_2483030337.counter = 0;
    t_2483030337.data = new Array(chckRange(correctSizeHEX60gensym37_2483030388, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym37_2483030388, 0, 2147483647) ; ++i) { t_2483030337.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }    }
    
    var hc_2483030393 = [0];
    var index_2483030400 = rawGet_2483028233(t_2483030337, key_2483030338, hc_2483030393, 0);
    if ((0 <= index_2483030400)) {
    t_2483030337.data[chckIndx(index_2483030400, 0, (t_2483030337.data).length - 1)].Field2 = nimCopy(t_2483030337.data[chckIndx(index_2483030400, 0, (t_2483030337.data).length - 1)].Field2, val_2483030339, NTI2483027972);
    }
    else {
      if (((t_2483030337.data).length == 0)) {
      var correctSizeHEX60gensym40_2483030502 = slotsNeeded_1308622891(32);
      t_2483030337.counter = 0;
      t_2483030337.data = new Array(chckRange(correctSizeHEX60gensym40_2483030502, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym40_2483030502, 0, 2147483647) ; ++i) { t_2483030337.data[i] = {Field0: 0, Field1: [], Field2: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}})}; }      }
      
      if (mustRehash_2483030507(t_2483030337)) {
      enlarge_2483030662(t_2483030337);
      index_2483030400 = rawGetKnownHC_2483031125(t_2483030337, key_2483030338, hc_2483030393[0]);
      }
      
      index_2483030400 = subInt(-1, index_2483030400);
      rawInsert_2483030956(t_2483030337, t_2483030337, "data", key_2483030338, val_2483030339, hc_2483030393[0], index_2483030400);
      t_2483030337.counter = addInt(t_2483030337.counter, 1);
    }
    

  
}

function some_2483028819(val_2483028821) {
  var result_2483028822 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

    result_2483028822.has = true;
    result_2483028822.val = nimCopy(result_2483028822.val, val_2483028821, NTI2365587459);

  return result_2483028822;

}

function defaultTheme_2483031631() {
  var result_2483031632 = null;

    result_2483031632 = ({path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})});
    result_2483031632.name = nimCopy(null, [100,101,102,97,117,108,116], NTI33554449);
    result_2483031632.typ = nimCopy(null, [100,97,114,107], NTI33554449);
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,97,99,116,105,118,101,70,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [97,99,116,105,118,105,116,121,66,97,114,66,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,100,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,100,103,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,97,110,110,101,114,46,105,99,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,114,101,97,100,99,114,117,109,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,99,111,110,100,97,114,121,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [98,117,116,116,111,110,46,115,101,112,97,114,97,116,111,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,98,108,117,101], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,103,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,108,105,110,101,115], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,111,114,97,110,103,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,112,117,114,112,108,101], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,114,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,97,114,116,115,46,121,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,104,101,99,107,98,111,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [99,111,109,109,97,110,100,67,101,110,116,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,67,111,110,115,111,108,101,73,110,112,117,116,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,69,120,99,101,112,116,105,111,110,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,67,117,114,114,101,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,68,105,115,97,98,108,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,83,116,97,99,107,102,114,97,109,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,98,114,101,97,107,112,111,105,110,116,85,110,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,99,111,110,116,105,110,117,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,100,105,115,99,111,110,110,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,112,97,117,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,114,101,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,97,114,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,66,97,99,107,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,73,110,116,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,101,112,79,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,73,99,111,110,46,115,116,111,112,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,98,111,111,108,101,97,110], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,101,114,114,111,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,97,109,101], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,110,117,109,98,101,114], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,115,116,114,105,110,103], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,107,101,110,69,120,112,114,101,115,115,105,111,110,46,118,97,108,117,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,84,111,111,108,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,101,120,99,101,112,116,105,111,110,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,115,116,97,116,101,76,97,98,101,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,98,117,103,86,105,101,119,46,118,97,108,117,101,67,104,97,110,103,101,100,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,101,115,99,114,105,112,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,100,105,97,103,111,110,97,108,70,105,108,108], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,105,110,115,101,114,116,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,46,114,101,109,111,118,101,100,84,101,120,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,105,110,115,101,114,116,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,71,117,116,116,101,114,46,114,101,109,111,118,101,100,76,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,105,110,115,101,114,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,105,102,102,69,100,105,116,111,114,79,118,101,114,118,105,101,119,46,114,101,109,111,118,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [100,114,111,112,100,111,119,110,46,108,105,115,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,105,110,100,82,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,99,117,115,101,100,83,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,108,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,104,111,118,101,114,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,105,110,108,105,110,101,86,97,108,117,101,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,108,105,110,107,101,100,69,100,105,116,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,115,116,97,99,107,70,114,97,109,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,66,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,49], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,50], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,51], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,52], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,53], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,72,105,103,104,108,105,103,104,116,46,102,111,114,101,103,114,111,117,110,100,54], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,66,114,97,99,107,101,116,77,97,116,99,104,46,98,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,111,100,101,76,101,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,98,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,69,114,114,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,101,109,112,116,121,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,46,102,111,99,117,115,101,100,69,109,112,116,121,66,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,110,111,84,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,114,111,117,112,72,101,97,100,101,114,46,116,97,98,115,66,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,102,111,108,100,105,110,103,67,111,110,116,114,111,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,105,110,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,105,110,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,72,111,118,101,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,100,101,110,116,71,117,105,100,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,73,110,102,111,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,103,104,116,66,117,108,98,65,117,116,111,70,105,120,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,101,78,117,109,98,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,69,114,114,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,73,110,102,111,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,77,97,114,107,101,114,78,97,118,105,103,97,116,105,111,110,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,97,100,100,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,100,101,108,101,116,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,102,105,110,100,77,97,116,99,104,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,109,111,100,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,79,118,101,114,118,105,101,119,82,117,108,101,114,46,119,111,114,100,72,105,103,104,108,105,103,104,116,83,116,114,111,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,80,97,110,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,82,117,108,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,83,117,103,103,101,115,116,87,105,100,103,101,116,46,115,101,108,101,99,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,85,110,110,101,99,101,115,115,97,114,121,67,111,100,101,46,111,112,97,99,105,116,121], parseHexVar_2483028016([48,48,48,48,48,48,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,98,111,114,100,101,114], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,97,114,110,105,110,103,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,104,105,116,101,115,112,97,99,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,100,105,116,111,114,87,105,100,103,101,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,97,100,103,101,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,66,117,116,116,111,110,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,112,114,101,82,101,108,101,97,115,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,112,111,110,115,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,115,116,97,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [101,120,116,101,110,115,105,111,110,73,99,111,110,46,118,101,114,105,102,105,101,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,97,100,100,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,99,111,110,102,108,105,99,116,105,110,103,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,100,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,105,103,110,111,114,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,109,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,68,101,108,101,116,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,115,116,97,103,101,77,111,100,105,102,105,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [103,105,116,68,101,99,111,114,97,116,105,111,110,46,117,110,116,114,97,99,107,101,100,82,101,115,111,117,114,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,46,112,108,97,99,101,104,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,79,112,116,105,111,110,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,66,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,66,111,114,100,101,114], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,105,110,102,111,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,66,111,114,100,101,114], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [105,110,112,117,116,86,97,108,105,100,97,116,105,111,110,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,98,111,116,116,111,109,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [107,101,121,98,105,110,100,105,110,103,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,102,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,102,111,99,117,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,105,103,104,108,105,103,104,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,70,111,99,117,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,105,110,118,97,108,105,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,110,111,77,97,116,99,104,101,115,79,117,116,108,105,110,101], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [108,105,115,116,70,105,108,116,101,114,87,105,100,103,101,116,46,111,117,116,108,105,110,101], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,98,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,46,115,101,112,97,114,97,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,110,117,98,97,114,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,111,109,109,111,110,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,111,109,109,111,110,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,99,117,114,114,101,110,116,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,67,111,110,116,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,46,105,110,99,111,109,105,110,103,72,101,97,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,104,97,110,103,101,46,119,111,114,100,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,46,109,105,110,105,109,97,112,79,118,101,114,86,105,101,119,82,117,108,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,70,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,101,114,103,101,69,100,105,116,111,114,46,99,111,110,102,108,105,99,116,46,117,110,104,97,110,100,108,101,100,85,110,102,111,99,117,115,101,100,46,98,111,114,100,101,114], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,101,114,114,111,114,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,102,54,49,56,56,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,102,105,110,100,77,97,116,99,104,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([57,51,57,50,57,51,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,115,101,108,101,99,116,105,111,110,79,99,99,117,114,114,101,110,99,101,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([55,50,55,48,55,50,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,46,119,97,114,110,105,110,103,72,105,103,104,108,105,103,104,116], parseHexVar_2483028016([102,99,57,56,54,55,97,53]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,97,100,100,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,100,101,108,101,116,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [109,105,110,105,109,97,112,71,117,116,116,101,114,46,109,111,100,105,102,105,101,100,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,66,111,114,100,101,114,67,111,108,111,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,55,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,73,110,115,101,114,116,105,111,110,73,110,100,105,99,97,116,111,114], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,83,116,97,116,117,115,66,97,114,73,116,101,109,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,99,101,108,108,84,111,111,108,98,97,114,83,101,112,97,114,97,116,111,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,101,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,46,102,111,99,117,115,101,100,69,100,105,116,111,114,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,82,117,110,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,101,98,111,111,107,83,116,97,116,117,115,83,117,99,99,101,115,115,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,67,101,110,116,101,114,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [110,111,116,105,102,105,99,97,116,105,111,110,84,111,97,115,116,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,97,110,101,108,84,105,116,108,101,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,69,100,105,116,111,114,71,117,116,116,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,108,105,110,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,109,97,116,99,104,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,82,101,115,117,108,116,46,115,101,108,101,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,68,101,115,99,114,105,112,116,105,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,101,101,107,86,105,101,119,84,105,116,108,101,76,97,98,101,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,105,99,107,101,114,71,114,111,117,112,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,105,99,107,101,114,71,114,111,117,112,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,111,114,116,115,46,105,99,111,110,82,117,110,110,105,110,103,80,114,111,99,101,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,69,114,114,111,114,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,73,110,102,111,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,98,108,101,109,115,87,97,114,110,105,110,103,73,99,111,110,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [112,114,111,103,114,101,115,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,97,115,104,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,46,115,104,97,100,111,119], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,99,114,111,108,108,98,97,114,83,108,105,100,101,114,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,99,104,101,99,107,98,111,120,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,100,114,111,112,100,111,119,110,76,105,115,116,66,111,114,100,101,114], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,104,101,97,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,109,111,100,105,102,105,101,100,73,116,101,109,73,110,100,105,99,97,116,111,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,110,117,109,98,101,114,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,114,111,119,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,101,116,116,105,110,103,115,46,116,101,120,116,73,110,112,117,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,100,114,111,112,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50,98,102]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,83,101,99,116,105,111,110,72,101,97,100,101,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,105,100,101,66,97,114,84,105,116,108,101,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,66,111,114,100,101,114], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,100,101,98,117,103,103,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,66,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,46,110,111,70,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,101,114,114,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,102,111,99,117,115,66,111,114,100,101,114], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,48,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,112,114,111,109,105,110,101,110,116,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,114,101,109,111,116,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,116,97,116,117,115,66,97,114,73,116,101,109,46,119,97,114,110,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,97,114,114,97,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,98,111,111,108,101,97,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,108,97,115,115,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,108,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,97,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,99,111,110,115,116,114,117,99,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,110,117,109,101,114,97,116,111,114,77,101,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,101,118,101,110,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,101,108,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,105,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,111,108,100,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,102,117,110,99,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,105,110,116,101,114,102,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,107,101,121,119,111,114,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,109,101,116,104,111,100,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,109,111,100,117,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,97,109,101,115,112,97,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,108,108,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,110,117,109,98,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,111,98,106,101,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,111,112,101,114,97,116,111,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,112,97,99,107,97,103,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,112,114,111,112,101,114,116,121,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,114,101,102,101,114,101,110,99,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,110,105,112,112,101,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,105,110,103,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,115,116,114,117,99,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,116,101,120,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,116,121,112,101,80,97,114,97,109,101,116,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,117,110,105,116,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [115,121,109,98,111,108,73,99,111,110,46,118,97,114,105,97,98,108,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,98,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,104,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,105,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,108,97,115,116,80,105,110,110,101,100,66,111,114,100,101,114], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,66,111,114,100,101,114], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,65,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,66,111,114,100,101,114], parseHexVar_2483028016([50,100,50,97,50,101]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,72,111,118,101,114,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([99,49,99,48,99,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,97,98,46,117,110,102,111,99,117,115,101,100,73,110,97,99,116,105,118,101,77,111,100,105,102,105,101,100,66,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,97,99,107], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,108,117,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,97,99,107], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,66,108,117,101], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,67,121,97,110], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,71,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,77,97,103,101,110,116,97], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,82,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,87,104,105,116,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,66,114,105,103,104,116,89,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,67,121,97,110], parseHexVar_2483028016([55,56,100,99,101,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,71,114,101,101,110], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,77,97,103,101,110,116,97], parseHexVar_2483028016([97,98,57,100,102,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,82,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,87,104,105,116,101], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,97,110,115,105,89,101,108,108,111,119], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,46,115,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,50,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,100,101,102,97,117,108,116,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,101,114,114,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,111,109,109,97,110,100,68,101,99,111,114,97,116,105,111,110,46,115,117,99,99,101,115,115,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([48,48,48,48,48,48,48,48]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,114,109,105,110,97,108,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,69,114,114,111,114,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,70,97,105,108,101,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,80,97,115,115,101,100], parseHexVar_2483028016([97,57,100,99,55,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,81,117,101,117,101,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,83,107,105,112,112,101,100], parseHexVar_2483028016([102,99,57,56,54,55]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,105,99,111,110,85,110,115,101,116], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,101,114,114,111,114,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,102,54,49,56,56,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,100,101,99,111,114,97,116,105,111,110,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,109,101,115,115,97,103,101,46,105,110,102,111,46,108,105,110,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97,49,57]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,115,116,105,110,103,46,114,117,110,65,99,116,105,111,110], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,66,108,111,99,107,81,117,111,116,101,46,98,111,114,100,101,114], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,67,111,100,101,66,108,111,99,107,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,76,105,110,107,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,76,105,110,107,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,102,100,56,54,54]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,80,114,101,102,111,114,109,97,116,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([102,99,102,99,102,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,101,120,116,83,101,112,97,114,97,116,111,114,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,98,111,114,100,101,114], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [116,105,116,108,101,66,97,114,46,105,110,97,99,116,105,118,101,70,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,97,108,107,84,104,114,111,117,103,104,46,101,109,98,101,100,100,101,100,69,100,105,116,111,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([50,50,49,102,50,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,98,117,116,116,111,110,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,98,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([55,50,55,48,55,50]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,112,114,111,103,114,101,115,115,46,102,111,114,101,103,114,111,117,110,100], parseHexVar_2483028016([57,51,57,50,57,51]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([52,48,51,101,52,49]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,72,111,118,101,114,66,97,99,107,103,114,111,117,110,100], parseHexVar_2483028016([53,98,53,57,53,99]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,101,108,99,111,109,101,80,97,103,101,46,116,105,108,101,83,104,97,100,111,119], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483028936(result_2483031632.colors, [119,105,100,103,101,116,46,115,104,97,100,111,119], parseHexVar_2483028016([49,57,49,56,49,97]));
    HEX5BHEX5DHEX3D_2483030334(result_2483031632.tokenColors, [99,111,109,109,101,110,116], {foreground: some_2483028819(parseHexVar_2483028016([55,50,55,48,55,50])), fontStyle: nimCopy(null, ConstSet281, NTI2483027991), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false})});

  return result_2483031632;

}

function setTheme_1291850997(self_1291850998, path_1291850999) {
      var Temporary1;

      var oHEX60gensym59_1291851002 = loadFromFile_2483031627(path_1291850999);
      if (!isSome_1291851007(oHEX60gensym59_1291851002)) Temporary1 = false; else {        var theme_1291851053 = get_1291851027(oHEX60gensym59_1291851002);
        Temporary1 = true;      }    if (Temporary1) {
    self_1291850998.theme = theme_1291851053;
    }
    
    requestRender_2315255899(self_1291850998.platform, false);

  
}

function HEX25_1627391779(n_1627391780) {
  var result_1627391781 = null;

    result_1627391781 = {kind: 2, num: n_1627391780, isUnquoted: false, str: [], fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391781;

}

function HEX25_1627391769(s_1627391770) {
  var result_1627391771 = null;

    result_1627391771 = {kind: 4, str: nimCopy(null, s_1627391770, NTI33554449), isUnquoted: false, num: 0, fnum: 0.0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391771;

}

function toJson_1811939932(a_1811939934, opt_1811939935) {
  var result_1811939936 = null;

    result_1811939936 = HEX25_1627391769(a_1811939934);

  return result_1811939936;

}

function symbolName_1291853932(a_1291853934) {
  var result_1291853935 = [];

    result_1291853935 = nimCopy(null, names_1291853937[chckIndx(subInt(a_1291853934, 0), 0, (names_1291853937).length - 1)], NTI33554449);

  return result_1291853935;

}

function toJson_1291853916(a_1291853918, opt_1291853919) {
    var Temporary1;

  var result_1291853920 = null;

    switch (opt_1291853919.enumMode) {
    case 0:
      Temporary1 = HEX25_1627391779(a_1291853918);
      break;
    case 1:
      Temporary1 = toJson_1811939932(symbolName_1291853932(a_1291853918), opt_1291853919);
      break;
    case 2:
      Temporary1 = toJson_1811939932(reprEnum(a_1291853918, NTI2231369745), opt_1291853919);
      break;
    }
    result_1291853920 = Temporary1;

  return result_1291853920;

}

function none_1291853824() {
  var result_1291853830 = ({val: null});

  return result_1291853830;

}

function some_1291853831(val_1291853833) {
  var result_1291853834 = ({val: null});

    if (!(!((val_1291853833 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_1291853834.val = val_1291853833;

  return result_1291853834;

}

function getEditor_1291853815() {
  var result_1291853820 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_1291853820 = nimCopy(result_1291853820, none_1291853824(), NTI1291850311);
    break BeforeRet;
    }
    
    result_1291853820 = nimCopy(result_1291853820, some_1291853831(gEditor), NTI1291850311);
    break BeforeRet;
  };

  return result_1291853820;

}

function isNone_1291853869(self_1291853871) {
  var result_1291853872 = false;

    result_1291853872 = (self_1291853871.val == null);

  return result_1291853872;

}

function get_1291853889(self_1291853891) {
  var result_1291853892 = null;

    if (isNone_1291853869(self_1291853891)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_1291853892 = self_1291853891["val"];

  return result_1291853892;

}

function getBackendScript_1291853854_1291853862() {
  var result_1291853863 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym122_1291853864 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym122_1291853864)) {
      break BeforeRet;
      }
      
    };
    result_1291853863 = getBackend_1291853859(get_1291853889(rHEX60gensym122_1291853864));
  };

  return result_1291853863;

}

function getBackendApi_1291853914(HEX3Atmp_1291853856) {
  var result_1291853915 = null;

  BeforeRet: {
    result_1291853915 = newJNull_1627390049();
++excHandler;
    try {
    result_1291853915 = toJson_1291853916(getBackendScript_1291853854_1291853862(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym128_1291854013 = [103,101,116,66,97,99,107,101,110,100];
    var fmtRes_1291854018 = [mnewString(0)];
    fmtRes_1291854018[0].push.apply(fmtRes_1291854018[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854018, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym128_1291854013 || [],fmtRes_1291854018[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291853915;

}

function requestRenderScript_1291854021_1291854029(redrawEverything_1291854030) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym134_1291854031 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym134_1291854031)) {
      break BeforeRet;
      }
      
    };
    requestRender_1291854026(get_1291853889(rHEX60gensym134_1291854031), redrawEverything_1291854030);
  };

  
}

function initFromJson_1627395343(dst_1627395344, dst_1627395344_Idx, jsonNode_1627395345, jsonPath_1627395346, jsonPath_1627395346_Idx) {
    var Temporary1;

    if (HEX3DHEX3D_1627392026(jsonNode_1627395345, null)) {
    raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1627395346[jsonPath_1627395346_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
    }
    else {
    if (!((ConstSet282[jsonNode_1627395345.kind] != undefined))) {
    var msgHEX60gensym103_1627395516 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet283), nimCopy(null, jsonPath_1627395346[jsonPath_1627395346_Idx], NTI33554449), reprEnum(jsonNode_1627395345.kind, NTI1627389955)]);
    raiseException({message: nimCopy(null, msgHEX60gensym103_1627395516, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
    }
    }
    var Temporary1 = jsonNode_1627395345;
    if (ConstSet284[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'bval\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    dst_1627395344[dst_1627395344_Idx] = Temporary1.bval;

  
}

function to_2801804741(node_2801804744) {
  var result_2801804746 = [false];

    var jsonPath_2801804747 = [[]];
    result_2801804746[0] = false;
    initFromJson_1627395343(result_2801804746, 0, node_2801804744, jsonPath_2801804747, 0);

  return result_2801804746[0];

}

function fromJson_2801804730(a_2801804732, a_2801804732_Idx, b_2801804733, opt_2801804734) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801804733, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [98,111,111,108], Field1: b_2801804733}));
    }
    
    a_2801804732[a_2801804732_Idx] = to_2801804741(b_2801804733);

  
}

function jsonTo_2801804724(b_2801804726, opt_2801804728) {
  var result_2801804729 = [false];

    fromJson_2801804730(result_2801804729, 0, b_2801804726, opt_2801804728);

  return result_2801804729[0];

}

function requestRenderApi_1291854058(HEX3Atmp_1291854023) {
      var Temporary3;

  var result_1291854059 = null;

    result_1291854059 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291854023))) {
      Temporary3 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854023, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = false;
      }
      
    };
    requestRenderScript_1291854021_1291854029(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym139_1291854065 = [114,101,113,117,101,115,116,82,101,110,100,101,114];
    var fmtRes_1291854070 = [mnewString(0)];
    fmtRes_1291854070[0].push.apply(fmtRes_1291854070[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854070, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym139_1291854065 || [],fmtRes_1291854070[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854059;

}

function setHandleInputsScript_1291854073_1291854082(context_1291854083, value_1291854084) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym145_1291854085 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym145_1291854085)) {
      break BeforeRet;
      }
      
    };
    setHandleInputs_1291854078(get_1291853889(rHEX60gensym145_1291854085), context_1291854083, value_1291854084);
  };

  
}

function setHandleInputsApi_1291854113(HEX3Atmp_1291854075) {
  var result_1291854114 = null;

    result_1291854114 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleInputsScript_1291854073_1291854082(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854075, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854075, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym150_1291854125 = [115,101,116,72,97,110,100,108,101,73,110,112,117,116,115];
    var fmtRes_1291854130 = [mnewString(0)];
    fmtRes_1291854130[0].push.apply(fmtRes_1291854130[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854130, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym150_1291854125 || [],fmtRes_1291854130[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854114;

}

function setHandleActionsScript_1291854133_1291854142(context_1291854143, value_1291854144) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym155_1291854145 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym155_1291854145)) {
      break BeforeRet;
      }
      
    };
    setHandleActions_1291854138(get_1291853889(rHEX60gensym155_1291854145), context_1291854143, value_1291854144);
  };

  
}

function setHandleActionsApi_1291854173(HEX3Atmp_1291854135) {
  var result_1291854174 = null;

    result_1291854174 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setHandleActionsScript_1291854133_1291854142(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854135, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854135, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym160_1291854185 = [115,101,116,72,97,110,100,108,101,65,99,116,105,111,110,115];
    var fmtRes_1291854190 = [mnewString(0)];
    fmtRes_1291854190[0].push.apply(fmtRes_1291854190[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854190, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym160_1291854185 || [],fmtRes_1291854190[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854174;

}

function setConsumeAllActionsScript_1291854193_1291854202(context_1291854203, value_1291854204) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym165_1291854205 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym165_1291854205)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllActions_1291854198(get_1291853889(rHEX60gensym165_1291854205), context_1291854203, value_1291854204);
  };

  
}

function setConsumeAllActionsApi_1291854233(HEX3Atmp_1291854195) {
  var result_1291854234 = null;

    result_1291854234 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllActionsScript_1291854193_1291854202(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854195, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854195, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym170_1291854245 = [115,101,116,67,111,110,115,117,109,101,65,108,108,65,99,116,105,111,110,115];
    var fmtRes_1291854250 = [mnewString(0)];
    fmtRes_1291854250[0].push.apply(fmtRes_1291854250[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854250, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym170_1291854245 || [],fmtRes_1291854250[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854234;

}

function setConsumeAllInputScript_1291854253_1291854262(context_1291854263, value_1291854264) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym175_1291854265 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym175_1291854265)) {
      break BeforeRet;
      }
      
    };
    setConsumeAllInput_1291854258(get_1291853889(rHEX60gensym175_1291854265), context_1291854263, value_1291854264);
  };

  
}

function setConsumeAllInputApi_1291854293(HEX3Atmp_1291854255) {
  var result_1291854294 = null;

    result_1291854294 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setConsumeAllInputScript_1291854253_1291854262(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854255, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854255, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym180_1291854305 = [115,101,116,67,111,110,115,117,109,101,65,108,108,73,110,112,117,116];
    var fmtRes_1291854310 = [mnewString(0)];
    fmtRes_1291854310[0].push.apply(fmtRes_1291854310[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854310, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym180_1291854305 || [],fmtRes_1291854310[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854294;

}

function openGithubWorkspaceScript_1291854313_1291854336(user_1291854337, repository_1291854338, branchOrHash_1291854339) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym186_1291854340 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym186_1291854340)) {
      break BeforeRet;
      }
      
    };
    openGithubWorkspace_1291854318(get_1291853889(rHEX60gensym186_1291854340), user_1291854337, repository_1291854338, branchOrHash_1291854339);
  };

  
}

function openGithubWorkspaceApi_1291854369(HEX3Atmp_1291854315) {
  var result_1291854370 = null;

    result_1291854370 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    openGithubWorkspaceScript_1291854313_1291854336(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854315, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854315, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854315, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym191_1291854386 = [111,112,101,110,71,105,116,104,117,98,87,111,114,107,115,112,97,99,101];
    var fmtRes_1291854391 = [mnewString(0)];
    fmtRes_1291854391[0].push.apply(fmtRes_1291854391[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854391, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym191_1291854386 || [],fmtRes_1291854391[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854370;

}

function HEX25_1627391795(b_1627391796) {
  var result_1627391797 = null;

    result_1627391797 = {kind: 1, bval: b_1627391796, isUnquoted: false, str: [], num: 0, fnum: 0.0, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};

  return result_1627391797;

}

function toJson_2801808610(a_2801808612, opt_2801808613) {
  var result_2801808614 = null;

    result_2801808614 = HEX25_1627391795(a_2801808612);

  return result_2801808614;

}

function getFlagScript2_1291854394_1291854413(flag_1291854414, default_1291854415) {
  var result_1291854416 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym196_1291854417 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym196_1291854417)) {
      break BeforeRet;
      }
      
    };
    result_1291854416 = getFlag_1291848865(get_1291853889(rHEX60gensym196_1291854417), flag_1291854414, default_1291854415);
  };

  return result_1291854416;

}

function getFlagApi2_1291854446(HEX3Atmp_1291854396) {
      var Temporary4;

  var result_1291854447 = null;

  BeforeRet: {
    result_1291854447 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_1291854396))) {
      Temporary4 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854396, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = false;
      }
      
    };
    result_1291854447 = toJson_2801808610(getFlagScript2_1291854394_1291854413(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854396, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym202_1291854462 = [103,101,116,70,108,97,103];
    var fmtRes_1291854467 = [mnewString(0)];
    fmtRes_1291854467[0].push.apply(fmtRes_1291854467[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854467, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym202_1291854462 || [],fmtRes_1291854467[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291854447;

}

function setFlagScript2_1291854471_1291854535(flag_1291854536, value_1291854537) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym208_1291854538 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym208_1291854538)) {
      break BeforeRet;
      }
      
    };
    setFlag_1291848942(get_1291853889(rHEX60gensym208_1291854538), flag_1291854536, value_1291854537);
  };

  
}

function setFlagApi2_1291854566(HEX3Atmp_1291854473) {
  var result_1291854567 = null;

    result_1291854567 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setFlagScript2_1291854471_1291854535(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854473, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291854473, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym213_1291854578 = [115,101,116,70,108,97,103];
    var fmtRes_1291854583 = [mnewString(0)];
    fmtRes_1291854583[0].push.apply(fmtRes_1291854583[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854583, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym213_1291854578 || [],fmtRes_1291854583[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854567;

}

function toggleFlagScript_1291854592_1291854600(flag_1291854601) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym222_1291854602 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym222_1291854602)) {
      break BeforeRet;
      }
      
    };
    toggleFlag_1291848946(get_1291853889(rHEX60gensym222_1291854602), flag_1291854601);
  };

  
}

function toggleFlagApi_1291854629(HEX3Atmp_1291854594) {
  var result_1291854630 = null;

    result_1291854630 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    toggleFlagScript_1291854592_1291854600(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854594, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym227_1291854636 = [116,111,103,103,108,101,70,108,97,103];
    var fmtRes_1291854641 = [mnewString(0)];
    fmtRes_1291854641[0].push.apply(fmtRes_1291854641[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854641, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym227_1291854636 || [],fmtRes_1291854641[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854630;

}

function setOptionScript_1291854644_1291854692(option_1291854693, value_1291854694) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym232_1291854695 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym232_1291854695)) {
      break BeforeRet;
      }
      
    };
    setOption_1291854649(get_1291853889(rHEX60gensym232_1291854695), option_1291854693, value_1291854694);
  };

  
}

function setOptionApi_1291854723(HEX3Atmp_1291854646) {
  var result_1291854724 = null;

    result_1291854724 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setOptionScript_1291854644_1291854692(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854646, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_1291854646, 1));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym237_1291854730 = [115,101,116,79,112,116,105,111,110];
    var fmtRes_1291854735 = [mnewString(0)];
    fmtRes_1291854735[0].push.apply(fmtRes_1291854735[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854735, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym237_1291854730 || [],fmtRes_1291854735[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854724;

}

function quitScript_1291854743_1291854750() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym245_1291854751 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym245_1291854751)) {
      break BeforeRet;
      }
      
    };
    quit_1291854748(get_1291853889(rHEX60gensym245_1291854751));
  };

  
}

function quitApi_1291854777(HEX3Atmp_1291854745) {
  var result_1291854778 = null;

    result_1291854778 = newJNull_1627390049();
++excHandler;
    try {
    quitScript_1291854743_1291854750();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym250_1291854779 = [113,117,105,116];
    var fmtRes_1291854784 = [mnewString(0)];
    fmtRes_1291854784[0].push.apply(fmtRes_1291854784[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854784, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym250_1291854779 || [],fmtRes_1291854784[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854778;

}

function changeFontSizeScript_1291854787_1291854795(amount_1291854796) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym254_1291854797 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym254_1291854797)) {
      break BeforeRet;
      }
      
    };
    changeFontSize_1291854792(get_1291853889(rHEX60gensym254_1291854797), amount_1291854796);
  };

  
}

function initFromJson_2801806097(dst_2801806099, dst_2801806099_Idx, jsonNode_2801806100, jsonPath_2801806101, jsonPath_2801806101_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_2801806100.kind == 4)) {
    var Temporary1 = jsonNode_2801806100;
    if (ConstSet285[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_2801806106 = NaN;
      dst_2801806099[dst_2801806099_Idx] = b_2801806106;
      break;
    case "inf":
      var b_2801806107 = Infinity;
      dst_2801806099[dst_2801806099_Idx] = b_2801806107;
      break;
    case "-inf":
      var b_2801806108 = -Infinity;
      dst_2801806099[dst_2801806099_Idx] = b_2801806108;
      break;
    default: 
      var Temporary2 = jsonNode_2801806100;
      if (ConstSet286[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_2801806100, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_2801806101[jsonPath_2801806101_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet287[jsonNode_2801806100.kind] != undefined))) {
      var msgHEX60gensym375_2801806122 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet288), nimCopy(null, jsonPath_2801806101[jsonPath_2801806101_Idx], NTI33554449), reprEnum(jsonNode_2801806100.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym375_2801806122, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_2801806100.kind == 3)) {
      var Temporary3 = jsonNode_2801806100;
      if (ConstSet289[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_2801806099[dst_2801806099_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_2801806100;
        if (ConstSet290[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_2801806099[dst_2801806099_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_2801806086(node_2801806089) {
  var result_2801806091 = [0.0];

    var jsonPath_2801806092 = [[]];
    result_2801806091[0] = 0.0;
    initFromJson_2801806097(result_2801806091, 0, node_2801806089, jsonPath_2801806092, 0);

  return result_2801806091[0];

}

function fromJson_2801806071(a_2801806073, a_2801806073_Idx, b_2801806074, opt_2801806075) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801806074, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116,51,50], Field1: b_2801806074}));
    }
    
    a_2801806073[a_2801806073_Idx] = to_2801806086(b_2801806074);

  
}

function jsonTo_2801806065(b_2801806067, opt_2801806069) {
  var result_2801806070 = [0.0];

    fromJson_2801806071(result_2801806070, 0, b_2801806067, opt_2801806069);

  return result_2801806070[0];

}

function changeFontSizeApi_1291854824(HEX3Atmp_1291854789) {
  var result_1291854825 = null;

    result_1291854825 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    changeFontSizeScript_1291854787_1291854795(jsonTo_2801806065(HEX5BHEX5D_1627393116(HEX3Atmp_1291854789, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym259_1291854831 = [99,104,97,110,103,101,70,111,110,116,83,105,122,101];
    var fmtRes_1291854836 = [mnewString(0)];
    fmtRes_1291854836[0].push.apply(fmtRes_1291854836[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291854836, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym259_1291854831 || [],fmtRes_1291854836[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291854825;

}

function changeLayoutPropScript_1291854839_1291855097(prop_1291855098, change_1291855099) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym264_1291855100 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym264_1291855100)) {
      break BeforeRet;
      }
      
    };
    changeLayoutProp_1291854844(get_1291853889(rHEX60gensym264_1291855100), prop_1291855098, change_1291855099);
  };

  
}

function changeLayoutPropApi_1291855128(HEX3Atmp_1291854841) {
  var result_1291855129 = null;

    result_1291855129 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    changeLayoutPropScript_1291854839_1291855097(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291854841, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806065(HEX5BHEX5D_1627393116(HEX3Atmp_1291854841, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym269_1291855140 = [99,104,97,110,103,101,76,97,121,111,117,116,80,114,111,112];
    var fmtRes_1291855145 = [mnewString(0)];
    fmtRes_1291855145[0].push.apply(fmtRes_1291855145[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855145, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym269_1291855140 || [],fmtRes_1291855145[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855129;

}

function toggleStatusBarLocationScript_1291855155_1291855162() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym278_1291855163 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym278_1291855163)) {
      break BeforeRet;
      }
      
    };
    toggleStatusBarLocation_1291855160(get_1291853889(rHEX60gensym278_1291855163));
  };

  
}

function toggleStatusBarLocationApi_1291855189(HEX3Atmp_1291855157) {
  var result_1291855190 = null;

    result_1291855190 = newJNull_1627390049();
++excHandler;
    try {
    toggleStatusBarLocationScript_1291855155_1291855162();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym283_1291855191 = [116,111,103,103,108,101,83,116,97,116,117,115,66,97,114,76,111,99,97,116,105,111,110];
    var fmtRes_1291855196 = [mnewString(0)];
    fmtRes_1291855196[0].push.apply(fmtRes_1291855196[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855196, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym283_1291855191 || [],fmtRes_1291855196[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855190;

}

function createViewScript_1291855199_1291855210() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym286_1291855211 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym286_1291855211)) {
      break BeforeRet;
      }
      
    };
    createView_1291855204(get_1291853889(rHEX60gensym286_1291855211));
  };

  
}

function createViewApi_1291855237(HEX3Atmp_1291855201) {
  var result_1291855238 = null;

    result_1291855238 = newJNull_1627390049();
++excHandler;
    try {
    createViewScript_1291855199_1291855210();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym291_1291855239 = [99,114,101,97,116,101,86,105,101,119];
    var fmtRes_1291855244 = [mnewString(0)];
    fmtRes_1291855244[0].push.apply(fmtRes_1291855244[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855244, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym291_1291855239 || [],fmtRes_1291855244[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855238;

}

function closeCurrentViewScript_1291855252_1291855289() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym294_1291855290 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym294_1291855290)) {
      break BeforeRet;
      }
      
    };
    closeCurrentView_1291855257(get_1291853889(rHEX60gensym294_1291855290));
  };

  
}

function closeCurrentViewApi_1291855316(HEX3Atmp_1291855254) {
  var result_1291855317 = null;

    result_1291855317 = newJNull_1627390049();
++excHandler;
    try {
    closeCurrentViewScript_1291855252_1291855289();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym299_1291855318 = [99,108,111,115,101,67,117,114,114,101,110,116,86,105,101,119];
    var fmtRes_1291855323 = [mnewString(0)];
    fmtRes_1291855323[0].push.apply(fmtRes_1291855323[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855323, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym299_1291855318 || [],fmtRes_1291855323[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855317;

}

function moveCurrentViewToTopScript_1291855331_1291855374() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym304_1291855375 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym304_1291855375)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewToTop_1291855336(get_1291853889(rHEX60gensym304_1291855375));
  };

  
}

function moveCurrentViewToTopApi_1291855401(HEX3Atmp_1291855333) {
  var result_1291855402 = null;

    result_1291855402 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewToTopScript_1291855331_1291855374();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym309_1291855403 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,84,111,84,111,112];
    var fmtRes_1291855408 = [mnewString(0)];
    fmtRes_1291855408[0].push.apply(fmtRes_1291855408[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855408, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym309_1291855403 || [],fmtRes_1291855408[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855402;

}

function nextViewScript_1291855412_1291855425() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym315_1291855426 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym315_1291855426)) {
      break BeforeRet;
      }
      
    };
    nextView_1291855417(get_1291853889(rHEX60gensym315_1291855426));
  };

  
}

function nextViewApi_1291855452(HEX3Atmp_1291855414) {
  var result_1291855453 = null;

    result_1291855453 = newJNull_1627390049();
++excHandler;
    try {
    nextViewScript_1291855412_1291855425();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym320_1291855454 = [110,101,120,116,86,105,101,119];
    var fmtRes_1291855459 = [mnewString(0)];
    fmtRes_1291855459[0].push.apply(fmtRes_1291855459[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855459, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym320_1291855454 || [],fmtRes_1291855459[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855453;

}

function prevViewScript_1291855462_1291855478() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym323_1291855479 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym323_1291855479)) {
      break BeforeRet;
      }
      
    };
    prevView_1291855467(get_1291853889(rHEX60gensym323_1291855479));
  };

  
}

function prevViewApi_1291855505(HEX3Atmp_1291855464) {
  var result_1291855506 = null;

    result_1291855506 = newJNull_1627390049();
++excHandler;
    try {
    prevViewScript_1291855462_1291855478();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym328_1291855507 = [112,114,101,118,86,105,101,119];
    var fmtRes_1291855512 = [mnewString(0)];
    fmtRes_1291855512[0].push.apply(fmtRes_1291855512[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855512, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym328_1291855507 || [],fmtRes_1291855512[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855506;

}

function moveCurrentViewPrevScript_1291855515_1291855545() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym331_1291855546 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym331_1291855546)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewPrev_1291855520(get_1291853889(rHEX60gensym331_1291855546));
  };

  
}

function moveCurrentViewPrevApi_1291855572(HEX3Atmp_1291855517) {
  var result_1291855573 = null;

    result_1291855573 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewPrevScript_1291855515_1291855545();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym336_1291855574 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,80,114,101,118];
    var fmtRes_1291855579 = [mnewString(0)];
    fmtRes_1291855579[0].push.apply(fmtRes_1291855579[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855579, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym336_1291855574 || [],fmtRes_1291855579[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855573;

}

function moveCurrentViewNextScript_1291855582_1291855609() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym340_1291855610 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym340_1291855610)) {
      break BeforeRet;
      }
      
    };
    moveCurrentViewNext_1291855587(get_1291853889(rHEX60gensym340_1291855610));
  };

  
}

function moveCurrentViewNextApi_1291855636(HEX3Atmp_1291855584) {
  var result_1291855637 = null;

    result_1291855637 = newJNull_1627390049();
++excHandler;
    try {
    moveCurrentViewNextScript_1291855582_1291855609();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym345_1291855638 = [109,111,118,101,67,117,114,114,101,110,116,86,105,101,119,78,101,120,116];
    var fmtRes_1291855643 = [mnewString(0)];
    fmtRes_1291855643[0].push.apply(fmtRes_1291855643[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855643, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym345_1291855638 || [],fmtRes_1291855643[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855637;

}

function setLayoutScript_1291855646_1291855690(layout_1291855691) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym350_1291855692 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym350_1291855692)) {
      break BeforeRet;
      }
      
    };
    setLayout_1291855651(get_1291853889(rHEX60gensym350_1291855692), layout_1291855691);
  };

  
}

function setLayoutApi_1291855719(HEX3Atmp_1291855648) {
  var result_1291855720 = null;

    result_1291855720 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setLayoutScript_1291855646_1291855690(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855648, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym355_1291855726 = [115,101,116,76,97,121,111,117,116];
    var fmtRes_1291855731 = [mnewString(0)];
    fmtRes_1291855731[0].push.apply(fmtRes_1291855731[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855731, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym355_1291855726 || [],fmtRes_1291855731[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855720;

}

function commandLineScript_1291855734_1291855746(initialValue_1291855747) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym359_1291855748 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym359_1291855748)) {
      break BeforeRet;
      }
      
    };
    commandLine_1291855739(get_1291853889(rHEX60gensym359_1291855748), initialValue_1291855747);
  };

  
}

function commandLineApi_1291855775(HEX3Atmp_1291855736) {
      var Temporary3;

  var result_1291855776 = null;

    result_1291855776 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291855736))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855736, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    commandLineScript_1291855734_1291855746(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym364_1291855782 = [99,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291855787 = [mnewString(0)];
    fmtRes_1291855787[0].push.apply(fmtRes_1291855787[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855787, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym364_1291855782 || [],fmtRes_1291855787[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855776;

}

function exitCommandLineScript_1291855790_1291855801() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym368_1291855802 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym368_1291855802)) {
      break BeforeRet;
      }
      
    };
    exitCommandLine_1291855795(get_1291853889(rHEX60gensym368_1291855802));
  };

  
}

function exitCommandLineApi_1291855828(HEX3Atmp_1291855792) {
  var result_1291855829 = null;

    result_1291855829 = newJNull_1627390049();
++excHandler;
    try {
    exitCommandLineScript_1291855790_1291855801();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym373_1291855830 = [101,120,105,116,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291855835 = [mnewString(0)];
    fmtRes_1291855835[0].push.apply(fmtRes_1291855835[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855835, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym373_1291855830 || [],fmtRes_1291855835[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855829;

}

function executeCommandLineScript_1291855838_1291855852() {
  var result_1291855853 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym376_1291855854 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym376_1291855854)) {
      break BeforeRet;
      }
      
    };
    result_1291855853 = executeCommandLine_1291855843(get_1291853889(rHEX60gensym376_1291855854));
  };

  return result_1291855853;

}

function executeCommandLineApi_1291855881(HEX3Atmp_1291855840) {
  var result_1291855882 = null;

  BeforeRet: {
    result_1291855882 = newJNull_1627390049();
++excHandler;
    try {
    result_1291855882 = toJson_2801808610(executeCommandLineScript_1291855838_1291855852(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym382_1291855887 = [101,120,101,99,117,116,101,67,111,109,109,97,110,100,76,105,110,101];
    var fmtRes_1291855892 = [mnewString(0)];
    fmtRes_1291855892[0].push.apply(fmtRes_1291855892[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855892, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym382_1291855887 || [],fmtRes_1291855892[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291855882;

}

function openFileScript_1291855904_1291855950(path_1291855951) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym386_1291855952 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym386_1291855952)) {
      break BeforeRet;
      }
      
    };
    openFile_1291855909(get_1291853889(rHEX60gensym386_1291855952), path_1291855951);
  };

  
}

function openFileApi_1291855979(HEX3Atmp_1291855906) {
  var result_1291855980 = null;

    result_1291855980 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    openFileScript_1291855904_1291855950(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291855906, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym391_1291855986 = [111,112,101,110,70,105,108,101];
    var fmtRes_1291855991 = [mnewString(0)];
    fmtRes_1291855991[0].push.apply(fmtRes_1291855991[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291855991, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym391_1291855986 || [],fmtRes_1291855991[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291855980;

}

function writeFileScript_1291856125_1291856145(path_1291856146) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym402_1291856147 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym402_1291856147)) {
      break BeforeRet;
      }
      
    };
    writeFile_1291856130(get_1291853889(rHEX60gensym402_1291856147), path_1291856146);
  };

  
}

function writeFileApi_1291856174(HEX3Atmp_1291856127) {
      var Temporary3;

  var result_1291856175 = null;

    result_1291856175 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291856127))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856127, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    writeFileScript_1291856125_1291856145(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym407_1291856181 = [119,114,105,116,101,70,105,108,101];
    var fmtRes_1291856186 = [mnewString(0)];
    fmtRes_1291856186[0].push.apply(fmtRes_1291856186[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856186, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym407_1291856181 || [],fmtRes_1291856186[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856175;

}

function loadFileScript_1291856189_1291856209(path_1291856210) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym415_1291856211 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym415_1291856211)) {
      break BeforeRet;
      }
      
    };
    loadFile_1291856194(get_1291853889(rHEX60gensym415_1291856211), path_1291856210);
  };

  
}

function loadFileApi_1291856238(HEX3Atmp_1291856191) {
      var Temporary3;

  var result_1291856239 = null;

    result_1291856239 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291856191))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856191, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [];
      }
      
    };
    loadFileScript_1291856189_1291856209(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym420_1291856245 = [108,111,97,100,70,105,108,101];
    var fmtRes_1291856250 = [mnewString(0)];
    fmtRes_1291856250[0].push.apply(fmtRes_1291856250[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856250, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym420_1291856245 || [],fmtRes_1291856250[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856239;

}

function loadThemeScript_1291856253_1291856297(name_1291856298) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym428_1291856299 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym428_1291856299)) {
      break BeforeRet;
      }
      
    };
    loadTheme_1291856258(get_1291853889(rHEX60gensym428_1291856299), name_1291856298);
  };

  
}

function loadThemeApi_1291856326(HEX3Atmp_1291856255) {
  var result_1291856327 = null;

    result_1291856327 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    loadThemeScript_1291856253_1291856297(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856255, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym433_1291856333 = [108,111,97,100,84,104,101,109,101];
    var fmtRes_1291856338 = [mnewString(0)];
    fmtRes_1291856338[0].push.apply(fmtRes_1291856338[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856338, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym433_1291856333 || [],fmtRes_1291856338[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856327;

}

function chooseThemeScript_1291856341_1291856626() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym439_1291856627 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym439_1291856627)) {
      break BeforeRet;
      }
      
    };
    chooseTheme_1291856346(get_1291853889(rHEX60gensym439_1291856627));
  };

  
}

function chooseThemeApi_1291856653(HEX3Atmp_1291856343) {
  var result_1291856654 = null;

    result_1291856654 = newJNull_1627390049();
++excHandler;
    try {
    chooseThemeScript_1291856341_1291856626();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym444_1291856655 = [99,104,111,111,115,101,84,104,101,109,101];
    var fmtRes_1291856660 = [mnewString(0)];
    fmtRes_1291856660[0].push.apply(fmtRes_1291856660[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291856660, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym444_1291856655 || [],fmtRes_1291856660[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291856654;

}

function chooseFileScript_1291856858_1291857084(view_1291857085) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym457_1291857086 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym457_1291857086)) {
      break BeforeRet;
      }
      
    };
    chooseFile_1291856863(get_1291853889(rHEX60gensym457_1291857086), view_1291857085);
  };

  
}

function chooseFileApi_1291857113(HEX3Atmp_1291856860) {
      var Temporary3;

  var result_1291857114 = null;

    result_1291857114 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
      if ((0 < len_1627392983(HEX3Atmp_1291856860))) {
      Temporary3 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291856860, 0), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary3 = [110,101,119];
      }
      
    };
    chooseFileScript_1291856858_1291857084(Temporary3);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym462_1291857120 = [99,104,111,111,115,101,70,105,108,101];
    var fmtRes_1291857125 = [mnewString(0)];
    fmtRes_1291857125[0].push.apply(fmtRes_1291857125[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857125, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym462_1291857120 || [],fmtRes_1291857125[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857114;

}

function setGithubAccessTokenScript_1291857145_1291857153(token_1291857154) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym477_1291857155 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym477_1291857155)) {
      break BeforeRet;
      }
      
    };
    setGithubAccessToken_1291857150(get_1291853889(rHEX60gensym477_1291857155), token_1291857154);
  };

  
}

function setGithubAccessTokenApi_1291857182(HEX3Atmp_1291857147) {
  var result_1291857183 = null;

    result_1291857183 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setGithubAccessTokenScript_1291857145_1291857153(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857147, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym482_1291857189 = [115,101,116,71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110];
    var fmtRes_1291857194 = [mnewString(0)];
    fmtRes_1291857194[0].push.apply(fmtRes_1291857194[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857194, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym482_1291857189 || [],fmtRes_1291857194[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857183;

}

function reloadConfigScript_1291857197_1291857217() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym485_1291857218 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym485_1291857218)) {
      break BeforeRet;
      }
      
    };
    reloadConfig_1291857202(get_1291853889(rHEX60gensym485_1291857218));
  };

  
}

function reloadConfigApi_1291857244(HEX3Atmp_1291857199) {
  var result_1291857245 = null;

    result_1291857245 = newJNull_1627390049();
++excHandler;
    try {
    reloadConfigScript_1291857197_1291857217();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym490_1291857246 = [114,101,108,111,97,100,67,111,110,102,105,103];
    var fmtRes_1291857251 = [mnewString(0)];
    fmtRes_1291857251[0].push.apply(fmtRes_1291857251[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857251, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym490_1291857246 || [],fmtRes_1291857251[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857245;

}

function logOptionsScript_1291857254_1291857261() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_1291857262 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym495_1291857262)) {
      break BeforeRet;
      }
      
    };
    logOptions_1291857259(get_1291853889(rHEX60gensym495_1291857262));
  };

  
}

function logOptionsApi_1291857288(HEX3Atmp_1291857256) {
  var result_1291857289 = null;

    result_1291857289 = newJNull_1627390049();
++excHandler;
    try {
    logOptionsScript_1291857254_1291857261();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_1291857290 = [108,111,103,79,112,116,105,111,110,115];
    var fmtRes_1291857295 = [mnewString(0)];
    fmtRes_1291857295[0].push.apply(fmtRes_1291857295[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857295, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_1291857290 || [],fmtRes_1291857295[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857289;

}

function clearCommandsScript_1291857308_1291857316(context_1291857317) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym504_1291857318 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym504_1291857318)) {
      break BeforeRet;
      }
      
    };
    clearCommands_1291857313(get_1291853889(rHEX60gensym504_1291857318), context_1291857317);
  };

  
}

function clearCommandsApi_1291857345(HEX3Atmp_1291857310) {
  var result_1291857346 = null;

    result_1291857346 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    clearCommandsScript_1291857308_1291857316(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857310, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym509_1291857352 = [99,108,101,97,114,67,111,109,109,97,110,100,115];
    var fmtRes_1291857357 = [mnewString(0)];
    fmtRes_1291857357[0].push.apply(fmtRes_1291857357[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857357, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym509_1291857352 || [],fmtRes_1291857357[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857346;

}

function toJson_2801804800(a_2801804802, opt_2801804803) {
  var result_2801804804 = null;

    result_2801804804 = HEX25_1627391779(a_2801804802);

  return result_2801804804;

}

function toJson_1291857628(a_1291857630, opt_1291857631) {
  var result_1291857632 = null;

    result_1291857632 = newJArray_1627390082();
    Label1: {
      var ai_1291857639 = 0;
      var i_536871139 = 0;
      var L_536871140 = (a_1291857630).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871139 < L_536871140)) break Label3;
            ai_1291857639 = a_1291857630[chckIndx(i_536871139, 0, (a_1291857630).length - 1)];
            add_1627390190(result_1291857632, toJson_2801804800(ai_1291857639, opt_1291857631));
            i_536871139 = addInt(i_536871139, 1);
            if (!(((a_1291857630).length == L_536871140))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_1291857632;

}

function getAllEditorsScript_1291857364_1291857597() {
  var result_1291857598 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym512_1291857599 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym512_1291857599)) {
      break BeforeRet;
      }
      
    };
    result_1291857598 = nimCopy(null, getAllEditors_1291857369(get_1291853889(rHEX60gensym512_1291857599)), NTI1291853337);
  };

  return result_1291857598;

}

function getAllEditorsApi_1291857626(HEX3Atmp_1291857366) {
  var result_1291857627 = null;

  BeforeRet: {
    result_1291857627 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857627 = toJson_1291857628(getAllEditorsScript_1291857364_1291857597(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym518_1291857644 = [103,101,116,65,108,108,69,100,105,116,111,114,115];
    var fmtRes_1291857649 = [mnewString(0)];
    fmtRes_1291857649[0].push.apply(fmtRes_1291857649[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857649, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym518_1291857644 || [],fmtRes_1291857649[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857627;

}

function setModeScript22_1291857667_1291857707(mode_1291857708) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym524_1291857709 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym524_1291857709)) {
      break BeforeRet;
      }
      
    };
    setMode_1291857672(get_1291853889(rHEX60gensym524_1291857709), mode_1291857708);
  };

  
}

function setModeApi22_1291857736(HEX3Atmp_1291857669) {
  var result_1291857737 = null;

    result_1291857737 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setModeScript22_1291857667_1291857707(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857669, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym529_1291857743 = [115,101,116,77,111,100,101];
    var fmtRes_1291857748 = [mnewString(0)];
    fmtRes_1291857748[0].push.apply(fmtRes_1291857748[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857748, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym529_1291857743 || [],fmtRes_1291857748[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291857737;

}

function modeScript22_1291857752_1291857760() {
  var result_1291857761 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym535_1291857762 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym535_1291857762)) {
      break BeforeRet;
      }
      
    };
    result_1291857761 = nimCopy(null, mode_1291857757(get_1291853889(rHEX60gensym535_1291857762)), NTI33554449);
  };

  return result_1291857761;

}

function modeApi22_1291857789(HEX3Atmp_1291857754) {
  var result_1291857790 = null;

  BeforeRet: {
    result_1291857790 = newJNull_1627390049();
++excHandler;
    try {
    result_1291857790 = toJson_1811939932(modeScript22_1291857752_1291857760(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym541_1291857795 = [109,111,100,101];
    var fmtRes_1291857800 = [mnewString(0)];
    fmtRes_1291857800[0].push.apply(fmtRes_1291857800[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857800, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym541_1291857795 || [],fmtRes_1291857800[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857790;

}

function getContextWithModeScript22_1291857803_1291857812(context_1291857813) {
  var result_1291857814 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym545_1291857815 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym545_1291857815)) {
      break BeforeRet;
      }
      
    };
    result_1291857814 = nimCopy(null, getContextWithMode_1291857808(get_1291853889(rHEX60gensym545_1291857815), context_1291857813), NTI33554449);
  };

  return result_1291857814;

}

function getContextWithModeApi22_1291857843(HEX3Atmp_1291857805) {
  var result_1291857844 = null;

  BeforeRet: {
    result_1291857844 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291857844 = toJson_1811939932(getContextWithModeScript22_1291857803_1291857812(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291857805, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym551_1291857854 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_1291857859 = [mnewString(0)];
    fmtRes_1291857859[0].push.apply(fmtRes_1291857859[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291857859, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym551_1291857854 || [],fmtRes_1291857859[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291857844;

}

function scriptRunActionScript_1291858080_1291858090(action_1291858091, arg_1291858092) {
    scriptRunAction_1291858084(action_1291858091, arg_1291858092);

  
}

function scriptRunActionApi_1291858097(HEX3Atmp_1291858082) {
  var result_1291858098 = null;

    result_1291858098 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptRunActionScript_1291858080_1291858090(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858082, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858082, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym566_1291858109 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110];
    var fmtRes_1291858114 = [mnewString(0)];
    fmtRes_1291858114[0].push.apply(fmtRes_1291858114[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858114, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym566_1291858109 || [],fmtRes_1291858114[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858098;

}

function scriptLogScript_1291858117_1291858128(message_1291858129) {
    scriptLog_1291858121(message_1291858129);

  
}

function scriptLogApi_1291858133(HEX3Atmp_1291858119) {
  var result_1291858134 = null;

    result_1291858134 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    scriptLogScript_1291858117_1291858128(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858119, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym573_1291858140 = [115,99,114,105,112,116,76,111,103];
    var fmtRes_1291858145 = [mnewString(0)];
    fmtRes_1291858145[0].push.apply(fmtRes_1291858145[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858145, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym573_1291858140 || [],fmtRes_1291858145[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858134;

}

function addCommandScriptScript_1291858148_1291858160(context_1291858161, keys_1291858162, action_1291858163, arg_1291858164) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym581_1291858165 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym581_1291858165)) {
      break BeforeRet;
      }
      
    };
    addCommandScript_1291858153(get_1291853889(rHEX60gensym581_1291858165), context_1291858161, keys_1291858162, action_1291858163, arg_1291858164);
  };

  
}

function addCommandScriptApi_1291858195(HEX3Atmp_1291858150) {
      var Temporary6;

  var result_1291858196 = null;

    result_1291858196 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_1291858150))) {
      Temporary6 = jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858150, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = [];
      }
      
    };
    addCommandScriptScript_1291858148_1291858160(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858150, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858150, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858150, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym586_1291858217 = [97,100,100,67,111,109,109,97,110,100,83,99,114,105,112,116];
    var fmtRes_1291858222 = [mnewString(0)];
    fmtRes_1291858222[0].push.apply(fmtRes_1291858222[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858222, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym586_1291858217 || [],fmtRes_1291858222[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858196;

}

function removeCommandScript_1291858231_1291858240(context_1291858241, keys_1291858242) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym592_1291858243 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym592_1291858243)) {
      break BeforeRet;
      }
      
    };
    removeCommand_1291858236(get_1291853889(rHEX60gensym592_1291858243), context_1291858241, keys_1291858242);
  };

  
}

function removeCommandApi_1291858271(HEX3Atmp_1291858233) {
  var result_1291858272 = null;

    result_1291858272 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    removeCommandScript_1291858231_1291858240(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858233, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858233, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym597_1291858283 = [114,101,109,111,118,101,67,111,109,109,97,110,100];
    var fmtRes_1291858288 = [mnewString(0)];
    fmtRes_1291858288[0].push.apply(fmtRes_1291858288[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858288, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym597_1291858283 || [],fmtRes_1291858288[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858272;

}

function getActivePopupScript_1291858293_1291858311() {
  var result_1291858312 = 0;

    result_1291858312 = getActivePopup_1291858297();

  return result_1291858312;

}

function getActivePopupApi_1291858316(HEX3Atmp_1291858295) {
  var result_1291858317 = null;

  BeforeRet: {
    result_1291858317 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858317 = toJson_2801804800(getActivePopupScript_1291858293_1291858311(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym604_1291858322 = [103,101,116,65,99,116,105,118,101,80,111,112,117,112];
    var fmtRes_1291858327 = [mnewString(0)];
    fmtRes_1291858327[0].push.apply(fmtRes_1291858327[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858327, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym604_1291858322 || [],fmtRes_1291858327[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858317;

}

function getActiveEditorScript_1291858330_1291858342() {
  var result_1291858343 = 0;

    result_1291858343 = getActiveEditor_1291858334();

  return result_1291858343;

}

function getActiveEditorApi_1291858347(HEX3Atmp_1291858332) {
  var result_1291858348 = null;

  BeforeRet: {
    result_1291858348 = newJNull_1627390049();
++excHandler;
    try {
    result_1291858348 = toJson_2801804800(getActiveEditorScript_1291858330_1291858342(), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym612_1291858353 = [103,101,116,65,99,116,105,118,101,69,100,105,116,111,114];
    var fmtRes_1291858358 = [mnewString(0)];
    fmtRes_1291858358[0].push.apply(fmtRes_1291858358[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858358, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym612_1291858353 || [],fmtRes_1291858358[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858348;

}

function loadCurrentConfigScript_1291858404_1291858415() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym624_1291858416 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym624_1291858416)) {
      break BeforeRet;
      }
      
    };
    loadCurrentConfig_1291858409(get_1291853889(rHEX60gensym624_1291858416));
  };

  
}

function loadCurrentConfigApi_1291858442(HEX3Atmp_1291858406) {
  var result_1291858443 = null;

    result_1291858443 = newJNull_1627390049();
++excHandler;
    try {
    loadCurrentConfigScript_1291858404_1291858415();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym629_1291858444 = [108,111,97,100,67,117,114,114,101,110,116,67,111,110,102,105,103];
    var fmtRes_1291858449 = [mnewString(0)];
    fmtRes_1291858449[0].push.apply(fmtRes_1291858449[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858449, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym629_1291858444 || [],fmtRes_1291858449[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858443;

}

function sourceCurrentDocumentScript_1291858452_1291858470() {
  BeforeRet: {
    Label1: {
      var rHEX60gensym632_1291858471 = getEditor_1291853815();
      if (isNone_1291853869(rHEX60gensym632_1291858471)) {
      break BeforeRet;
      }
      
    };
    sourceCurrentDocument_1291858457(get_1291853889(rHEX60gensym632_1291858471));
  };

  
}

function sourceCurrentDocumentApi_1291858497(HEX3Atmp_1291858454) {
  var result_1291858498 = null;

    result_1291858498 = newJNull_1627390049();
++excHandler;
    try {
    sourceCurrentDocumentScript_1291858452_1291858470();
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym637_1291858499 = [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116];
    var fmtRes_1291858504 = [mnewString(0)];
    fmtRes_1291858504[0].push.apply(fmtRes_1291858504[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858504, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym637_1291858499 || [],fmtRes_1291858504[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858498;

}

function getEditorScript_1291858507_1291858520(index_1291858521) {
  var result_1291858522 = 0;

    result_1291858522 = getEditor_1291858511(index_1291858521);

  return result_1291858522;

}

function getEditorApi_1291858527(HEX3Atmp_1291858509) {
  var result_1291858528 = null;

  BeforeRet: {
    result_1291858528 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858528 = toJson_2801804800(getEditorScript_1291858507_1291858520(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858509, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym645_1291858538 = [103,101,116,69,100,105,116,111,114];
    var fmtRes_1291858543 = [mnewString(0)];
    fmtRes_1291858543[0].push.apply(fmtRes_1291858543[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858543, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym645_1291858538 || [],fmtRes_1291858543[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858528;

}

function scriptIsTextEditorScript_1291858546_1291858588(editorId_1291858589) {
  var result_1291858590 = false;

    result_1291858590 = scriptIsTextEditor_1291858550(editorId_1291858589);

  return result_1291858590;

}

function scriptIsTextEditorApi_1291858595(HEX3Atmp_1291858548) {
  var result_1291858596 = null;

  BeforeRet: {
    result_1291858596 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858596 = toJson_2801808610(scriptIsTextEditorScript_1291858546_1291858588(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858548, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym654_1291858606 = [115,99,114,105,112,116,73,115,84,101,120,116,69,100,105,116,111,114];
    var fmtRes_1291858611 = [mnewString(0)];
    fmtRes_1291858611[0].push.apply(fmtRes_1291858611[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858611, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym654_1291858606 || [],fmtRes_1291858611[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858596;

}

function scriptIsAstEditorScript_1291858615_1291858657(editorId_1291858658) {
  var result_1291858659 = false;

    result_1291858659 = scriptIsAstEditor_1291858619(editorId_1291858658);

  return result_1291858659;

}

function scriptIsAstEditorApi_1291858664(HEX3Atmp_1291858617) {
  var result_1291858665 = null;

  BeforeRet: {
    result_1291858665 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858665 = toJson_2801808610(scriptIsAstEditorScript_1291858615_1291858657(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858617, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym663_1291858675 = [115,99,114,105,112,116,73,115,65,115,116,69,100,105,116,111,114];
    var fmtRes_1291858680 = [mnewString(0)];
    fmtRes_1291858680[0].push.apply(fmtRes_1291858680[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858680, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym663_1291858675 || [],fmtRes_1291858680[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858665;

}

function scriptRunActionForScript_1291858683_1291858750(editorId_1291858751, action_1291858752, arg_1291858753) {
    scriptRunActionFor_1291858687(editorId_1291858751, action_1291858752, arg_1291858753);

  
}

function scriptRunActionForApi_1291858759(HEX3Atmp_1291858685) {
  var result_1291858760 = null;

    result_1291858760 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    scriptRunActionForScript_1291858683_1291858750(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858685, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858685, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858685, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym673_1291858776 = [115,99,114,105,112,116,82,117,110,65,99,116,105,111,110,70,111,114];
    var fmtRes_1291858781 = [mnewString(0)];
    fmtRes_1291858781[0].push.apply(fmtRes_1291858781[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858781, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym673_1291858776 || [],fmtRes_1291858781[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858760;

}

function scriptInsertTextIntoScript_1291858784_1291858822(editorId_1291858823, text_1291858824) {
    scriptInsertTextInto_1291858788(editorId_1291858823, text_1291858824);

  
}

function scriptInsertTextIntoApi_1291858829(HEX3Atmp_1291858786) {
  var result_1291858830 = null;

    result_1291858830 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptInsertTextIntoScript_1291858784_1291858822(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858786, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291858786, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym683_1291858841 = [115,99,114,105,112,116,73,110,115,101,114,116,84,101,120,116,73,110,116,111];
    var fmtRes_1291858846 = [mnewString(0)];
    fmtRes_1291858846[0].push.apply(fmtRes_1291858846[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858846, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym683_1291858841 || [],fmtRes_1291858846[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858830;

}

function toJson_2801804787(a_2801804789, opt_2801804790) {
  var result_2801804791 = null;

    result_2801804791 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2801804791, [108,105,110,101], toJson_2801804800(a_2801804789["Field0"], opt_2801804790));
    HEX5BHEX5DHEX3D_1627391903(result_2801804791, [99,111,108,117,109,110], toJson_2801804800(a_2801804789["Field1"], opt_2801804790));

  return result_2801804791;

}

function toJson_2801804774(a_2801804776, opt_2801804777) {
  var result_2801804778 = null;

    result_2801804778 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2801804778, [102,105,114,115,116], toJson_2801804787(a_2801804776["Field0"], opt_2801804777));
    HEX5BHEX5DHEX3D_1627391903(result_2801804778, [108,97,115,116], toJson_2801804787(a_2801804776["Field1"], opt_2801804777));

  return result_2801804778;

}

function scriptTextEditorSelectionScript_1291858849_1291858892(editorId_1291858893) {
  var result_1291858894 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

    result_1291858894 = nimCopy(result_1291858894, scriptTextEditorSelection_1291858853(editorId_1291858893), NTI2231369739);

  return result_1291858894;

}

function scriptTextEditorSelectionApi_1291858899(HEX3Atmp_1291858851) {
  var result_1291858900 = null;

  BeforeRet: {
    result_1291858900 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291858900 = toJson_2801804774(scriptTextEditorSelectionScript_1291858849_1291858892(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858851, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym692_1291858910 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291858915 = [mnewString(0)];
    fmtRes_1291858915[0].push.apply(fmtRes_1291858915[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858915, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym692_1291858910 || [],fmtRes_1291858915[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291858900;

}

function scriptSetTextEditorSelectionScript_1291858922_1291858964(editorId_1291858965, selection_1291858966) {
    scriptSetTextEditorSelection_1291858926(editorId_1291858965, selection_1291858966);

  
}

function fromJson_2801804585(a_2801804587, b_2801804588, opt_2801804589) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2801804588, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,117,114,115,111,114], Field1: b_2801804588}));
    }
    
    if (!((b_2801804588.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2801804588.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2801804615 = 0;
    var numMatchedHEX60gensym25_2801804616 = 0;
    numHEX60gensym25_2801804615 = addInt(numHEX60gensym25_2801804615, 1);
    if (hasKey_1627393154(b_2801804588, [108,105,110,101])) {
    numMatchedHEX60gensym25_2801804616 = addInt(numMatchedHEX60gensym25_2801804616, 1);
    fromJson_2801803688(a_2801804587, "Field0", HEX5BHEX5D_1627393037(b_2801804588, [108,105,110,101]), opt_2801804589);
    }
    else {
    if (opt_2801804589.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,105,110,101], [67,117,114,115,111,114], pretty_1627394477(b_2801804588, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2801804615 = addInt(numHEX60gensym25_2801804615, 1);
    if (hasKey_1627393154(b_2801804588, [99,111,108,117,109,110])) {
    numMatchedHEX60gensym25_2801804616 = addInt(numMatchedHEX60gensym25_2801804616, 1);
    fromJson_2801803688(a_2801804587, "Field1", HEX5BHEX5D_1627393037(b_2801804588, [99,111,108,117,109,110]), opt_2801804589);
    }
    else {
    if (opt_2801804589.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[99,111,108,117,109,110], [67,117,114,115,111,114], pretty_1627394477(b_2801804588, 2)]));
      }
      
    }
    }
    if ((opt_2801804589.allowExtraKeys && opt_2801804589.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2801804589.allowExtraKeys) {
    if (!((numHEX60gensym25_2801804615 == numMatchedHEX60gensym25_2801804616))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2801804615 == numMatchedHEX60gensym25_2801804616);
    }
    else {
    if (opt_2801804589.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2801804588) == numMatchedHEX60gensym25_2801804616);
    }
    else {
    Temporary1 = ((len_1627392983(b_2801804588) == numHEX60gensym25_2801804615) && (numHEX60gensym25_2801804615 == numMatchedHEX60gensym25_2801804616));
    }
    }}
    var okHEX60gensym25_2801804677 = Temporary1;
    if (!(okHEX60gensym25_2801804677)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2801804588)), HEX24_369098760(numHEX60gensym25_2801804615), [67,117,114,115,111,114], pretty_1627394477(b_2801804588, 2)]));
    }
    

  
}

function fromJson_2801804531(a_2801804533, b_2801804534, opt_2801804535) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2801804534, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110], Field1: b_2801804534}));
    }
    
    if (!((b_2801804534.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_2801804534.kind, NTI1627389955));
    }
    
    var numHEX60gensym25_2801804561 = 0;
    var numMatchedHEX60gensym25_2801804562 = 0;
    numHEX60gensym25_2801804561 = addInt(numHEX60gensym25_2801804561, 1);
    if (hasKey_1627393154(b_2801804534, [102,105,114,115,116])) {
    numMatchedHEX60gensym25_2801804562 = addInt(numMatchedHEX60gensym25_2801804562, 1);
    fromJson_2801804585(a_2801804533["Field0"], HEX5BHEX5D_1627393037(b_2801804534, [102,105,114,115,116]), opt_2801804535);
    }
    else {
    if (opt_2801804535.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,114,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2801804534, 2)]));
      }
      
    }
    }
    numHEX60gensym25_2801804561 = addInt(numHEX60gensym25_2801804561, 1);
    if (hasKey_1627393154(b_2801804534, [108,97,115,116])) {
    numMatchedHEX60gensym25_2801804562 = addInt(numMatchedHEX60gensym25_2801804562, 1);
    fromJson_2801804585(a_2801804533["Field1"], HEX5BHEX5D_1627393037(b_2801804534, [108,97,115,116]), opt_2801804535);
    }
    else {
    if (opt_2801804535.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,115,116], [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2801804534, 2)]));
      }
      
    }
    }
    if ((opt_2801804535.allowExtraKeys && opt_2801804535.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_2801804535.allowExtraKeys) {
    if (!((numHEX60gensym25_2801804561 == numMatchedHEX60gensym25_2801804562))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,50,53,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,50,53,96,32]);
    }
    
    Temporary1 = (numHEX60gensym25_2801804561 == numMatchedHEX60gensym25_2801804562);
    }
    else {
    if (opt_2801804535.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_2801804534) == numMatchedHEX60gensym25_2801804562);
    }
    else {
    Temporary1 = ((len_1627392983(b_2801804534) == numHEX60gensym25_2801804561) && (numHEX60gensym25_2801804561 == numMatchedHEX60gensym25_2801804562));
    }
    }}
    var okHEX60gensym25_2801804715 = Temporary1;
    if (!(okHEX60gensym25_2801804715)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,50,53], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_2801804534)), HEX24_369098760(numHEX60gensym25_2801804561), [83,101,108,101,99,116,105,111,110], pretty_1627394477(b_2801804534, 2)]));
    }
    

  
}

function jsonTo_2801805683(b_2801805685, opt_2801805687) {
  var result_2801805688 = [{Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}];

    fromJson_2801804531(result_2801805688[0], b_2801805685, opt_2801805687);

  return result_2801805688[0];

}

function scriptSetTextEditorSelectionApi_1291858971(HEX3Atmp_1291858924) {
  var result_1291858972 = null;

    result_1291858972 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionScript_1291858922_1291858964(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858924, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805683(HEX5BHEX5D_1627393116(HEX3Atmp_1291858924, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym701_1291858983 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110];
    var fmtRes_1291858988 = [mnewString(0)];
    fmtRes_1291858988[0].push.apply(fmtRes_1291858988[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291858988, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym701_1291858983 || [],fmtRes_1291858988[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291858972;

}

function toJson_2801804762(a_2801804764, opt_2801804765) {
  var result_2801804766 = null;

    result_2801804766 = newJArray_1627390082();
    Label1: {
      var ai_2801804773 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var i_536871174 = 0;
      var L_536871175 = (a_2801804764).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871174 < L_536871175)) break Label3;
            ai_2801804773 = a_2801804764[chckIndx(i_536871174, 0, (a_2801804764).length - 1)];
            add_1627390190(result_2801804766, toJson_2801804774(ai_2801804773, opt_2801804765));
            i_536871174 = addInt(i_536871174, 1);
            if (!(((a_2801804764).length == L_536871175))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2801804766;

}

function scriptTextEditorSelectionsScript_1291858991_1291859042(editorId_1291859043) {
  var result_1291859044 = [];

    result_1291859044 = nimCopy(null, scriptTextEditorSelections_1291858995(editorId_1291859043), NTI1291854630);

  return result_1291859044;

}

function scriptTextEditorSelectionsApi_1291859049(HEX3Atmp_1291858993) {
  var result_1291859050 = null;

  BeforeRet: {
    result_1291859050 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859050 = toJson_2801804762(scriptTextEditorSelectionsScript_1291858991_1291859042(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291858993, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym710_1291859060 = [115,99,114,105,112,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291859065 = [mnewString(0)];
    fmtRes_1291859065[0].push.apply(fmtRes_1291859065[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859065, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym710_1291859060 || [],fmtRes_1291859065[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859050;

}

function scriptSetTextEditorSelectionsScript_1291859068_1291859110(editorId_1291859111, selections_1291859112) {
    scriptSetTextEditorSelections_1291859072(editorId_1291859111, selections_1291859112);

  
}

function getElems_1627390175(n_1627390176, default_1627390181) {
      var Temporary1;

  var result_1627390182 = [];

  BeforeRet: {
    if (((n_1627390176 == null) || !((n_1627390176.kind == 6)))) {
    result_1627390182 = nimCopy(null, default_1627390181, NTI1627390088);
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390176;
      if (ConstSet291[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390182 = nimCopy(null, Temporary1.elems, NTI1627389974);
      break BeforeRet;
    }
    
  };

  return result_1627390182;

}

function fromJson_2801804476(a_2801804478, a_2801804478_Idx, b_2801804479, opt_2801804480) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_2801804479, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,83,101,108,101,99,116,105,111,110,93], Field1: b_2801804479}));
    }
    
    if (a_2801804478[a_2801804478_Idx].length < (Temporary1 = chckRange(len_1627392983(b_2801804479), 0, 2147483647), Temporary1)) { for (var i = a_2801804478[a_2801804478_Idx].length ; i < Temporary1 ; ++i) a_2801804478[a_2801804478_Idx].push({Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}}); }
               else { a_2801804478[a_2801804478_Idx].length = Temporary1; };
    Label2: {
      var i_2801804529 = 0;
      var val_2801804530 = null;
      var colontmp__536871180 = [];
      colontmp__536871180 = getElems_1627390175(b_2801804479, []);
      var i_536871182 = 0;
      var L_536871183 = (colontmp__536871180).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871182 < L_536871183)) break Label4;
            i_2801804529 = i_536871182;
            val_2801804530 = colontmp__536871180[chckIndx(i_536871182, 0, (colontmp__536871180).length - 1)];
            fromJson_2801804531(a_2801804478[a_2801804478_Idx][chckIndx(i_2801804529, 0, (a_2801804478[a_2801804478_Idx]).length - 1)], val_2801804530, opt_2801804480);
            i_536871182 = addInt(i_536871182, 1);
            if (!(((colontmp__536871180).length == L_536871183))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function jsonTo_2801804470(b_2801804472, opt_2801804474) {
  var result_2801804475 = [[]];

    fromJson_2801804476(result_2801804475, 0, b_2801804472, opt_2801804474);

  return result_2801804475[0];

}

function scriptSetTextEditorSelectionsApi_1291859117(HEX3Atmp_1291859070) {
  var result_1291859118 = null;

    result_1291859118 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetTextEditorSelectionsScript_1291859068_1291859110(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859070, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804470(HEX5BHEX5D_1627393116(HEX3Atmp_1291859070, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym719_1291859129 = [115,99,114,105,112,116,83,101,116,84,101,120,116,69,100,105,116,111,114,83,101,108,101,99,116,105,111,110,115];
    var fmtRes_1291859134 = [mnewString(0)];
    fmtRes_1291859134[0].push.apply(fmtRes_1291859134[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859134, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym719_1291859129 || [],fmtRes_1291859134[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859118;

}

function scriptGetTextEditorLineScript_1291859137_1291859184(editorId_1291859185, line_1291859186) {
  var result_1291859187 = [];

    result_1291859187 = nimCopy(null, scriptGetTextEditorLine_1291859141(editorId_1291859185, line_1291859186), NTI33554449);

  return result_1291859187;

}

function scriptGetTextEditorLineApi_1291859193(HEX3Atmp_1291859139) {
  var result_1291859194 = null;

  BeforeRet: {
    result_1291859194 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859194 = toJson_1811939932(scriptGetTextEditorLineScript_1291859137_1291859184(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859139, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859139, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym729_1291859209 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101];
    var fmtRes_1291859214 = [mnewString(0)];
    fmtRes_1291859214[0].push.apply(fmtRes_1291859214[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859214, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym729_1291859209 || [],fmtRes_1291859214[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859194;

}

function scriptGetTextEditorLineCountScript_1291859217_1291859263(editorId_1291859264) {
  var result_1291859265 = 0;

    result_1291859265 = scriptGetTextEditorLineCount_1291859221(editorId_1291859264);

  return result_1291859265;

}

function scriptGetTextEditorLineCountApi_1291859270(HEX3Atmp_1291859219) {
  var result_1291859271 = null;

  BeforeRet: {
    result_1291859271 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_1291859271 = toJson_2801804800(scriptGetTextEditorLineCountScript_1291859217_1291859263(jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859219, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym739_1291859281 = [115,99,114,105,112,116,71,101,116,84,101,120,116,69,100,105,116,111,114,76,105,110,101,67,111,117,110,116];
    var fmtRes_1291859286 = [mnewString(0)];
    fmtRes_1291859286[0].push.apply(fmtRes_1291859286[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859286, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym739_1291859281 || [],fmtRes_1291859286[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859271;

}

function scriptGetOptionIntScript_1291859300_1291859316(path_1291859317, default_1291859318) {
  var result_1291859319 = 0;

    result_1291859319 = scriptGetOptionInt_1291859304(path_1291859317, default_1291859318);

  return result_1291859319;

}

function scriptGetOptionIntApi_1291859325(HEX3Atmp_1291859302) {
  var result_1291859326 = null;

  BeforeRet: {
    result_1291859326 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859326 = toJson_2801804800(scriptGetOptionIntScript_1291859300_1291859316(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859302, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859302, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym749_1291859341 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291859346 = [mnewString(0)];
    fmtRes_1291859346[0].push.apply(fmtRes_1291859346[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859346, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym749_1291859341 || [],fmtRes_1291859346[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859326;

}

function HEX25_1627391792(n_1627391793) {
    var Temporary1;

  var result_1627391794 = null;

    if (!((n_1627391793 == n_1627391793))) {
    Temporary1 = newJString_1627389994([110,97,110]);
    }
    else {
    if ((n_1627391793 == Infinity)) {
    Temporary1 = newJString_1627389994([105,110,102]);
    }
    else {
    if ((n_1627391793 == -Infinity)) {
    Temporary1 = newJString_1627389994([45,105,110,102]);
    }
    else {
    Temporary1 = {kind: 3, fnum: n_1627391793, isUnquoted: false, str: [], num: 0, bval: false, fields: ({data: [], counter: 0, first: 0, last: 0}), elems: []};
    }
    }}
    result_1627391794 = Temporary1;

  return result_1627391794;

}

function toJson_1291859445(a_1291859447, opt_1291859448) {
  var result_1291859449 = null;

    result_1291859449 = HEX25_1627391792(a_1291859447);

  return result_1291859449;

}

function scriptGetOptionFloatScript_1291859350_1291859366(path_1291859367, default_1291859368) {
  var result_1291859369 = 0.0;

    result_1291859369 = scriptGetOptionFloat_1291859354(path_1291859367, default_1291859368);

  return result_1291859369;

}

function initFromJson_1291859414(dst_1291859416, dst_1291859416_Idx, jsonNode_1291859417, jsonPath_1291859418, jsonPath_1291859418_Idx) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;

    if ((jsonNode_1291859417.kind == 4)) {
    var Temporary1 = jsonNode_1291859417;
    if (ConstSet292[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    switch (toJSStr(Temporary1.str)) {
    case "nan":
      var b_1291859423 = NaN;
      dst_1291859416[dst_1291859416_Idx] = b_1291859423;
      break;
    case "inf":
      var b_1291859424 = Infinity;
      dst_1291859416[dst_1291859416_Idx] = b_1291859424;
      break;
    case "-inf":
      var b_1291859425 = -Infinity;
      dst_1291859416[dst_1291859416_Idx] = b_1291859425;
      break;
    default: 
      var Temporary2 = jsonNode_1291859417;
      if (ConstSet293[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      raiseException({message: ([101,120,112,101,99,116,101,100,32,39,110,97,110,124,105,110,102,124,45,105,110,102,39,44,32,103,111,116,32] || []).concat(Temporary2.str || []), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      break;
    }
    }
    else {
      if (HEX3DHEX3D_1627392026(jsonNode_1291859417, null)) {
      raiseException({message: ([107,101,121,32,110,111,116,32,102,111,117,110,100,58,32] || []).concat(jsonPath_1291859418[jsonPath_1291859418_Idx] || []), parent: null, m_type: NTI134217747, name: null, trace: [], up: null}, "KeyError");
      }
      else {
      if (!((ConstSet294[jsonNode_1291859417.kind] != undefined))) {
      var msgHEX60gensym763_1291859439 = nsuFormatOpenArray([73,110,99,111,114,114,101,99,116,32,74,83,79,78,32,107,105,110,100,46,32,87,97,110,116,101,100,32,39,36,49,39,32,105,110,32,39,36,50,39,32,98,117,116,32,103,111,116,32,39,36,51,39,46], [HEX24_1627395418(ConstSet295), nimCopy(null, jsonPath_1291859418[jsonPath_1291859418_Idx], NTI33554449), reprEnum(jsonNode_1291859417.kind, NTI1627389955)]);
      raiseException({message: nimCopy(null, msgHEX60gensym763_1291859439, NTI33554449), parent: null, m_type: NTI1694498824, name: null, trace: [], up: null}, "JsonKindError");
      }
      }
      if ((jsonNode_1291859417.kind == 3)) {
      var Temporary3 = jsonNode_1291859417;
      if (ConstSet296[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fnum\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
      dst_1291859416[dst_1291859416_Idx] = Temporary3.fnum;
      }
      else {
        var Temporary4 = jsonNode_1291859417;
        if (ConstSet297[Temporary4.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary4.kind, NTI1627389955)); }
        dst_1291859416[dst_1291859416_Idx] = Temporary4.num;
      }
      
    }
    

  
}

function to_1291859403(node_1291859406) {
  var result_1291859408 = [0.0];

    var jsonPath_1291859409 = [[]];
    result_1291859408[0] = 0.0;
    initFromJson_1291859414(result_1291859408, 0, node_1291859406, jsonPath_1291859409, 0);

  return result_1291859408[0];

}

function fromJson_1291859388(a_1291859390, a_1291859390_Idx, b_1291859391, opt_1291859392) {
    if (!(!(HEX3DHEX3D_1627392026(b_1291859391, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [102,108,111,97,116], Field1: b_1291859391}));
    }
    
    a_1291859390[a_1291859390_Idx] = to_1291859403(b_1291859391);

  
}

function jsonTo_1291859382(b_1291859384, opt_1291859386) {
  var result_1291859387 = [0.0];

    fromJson_1291859388(result_1291859387, 0, b_1291859384, opt_1291859386);

  return result_1291859387[0];

}

function scriptGetOptionFloatApi_1291859375(HEX3Atmp_1291859352) {
  var result_1291859376 = null;

  BeforeRet: {
    result_1291859376 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859376 = toJson_1291859445(scriptGetOptionFloatScript_1291859350_1291859366(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859352, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291859382(HEX5BHEX5D_1627393116(HEX3Atmp_1291859352, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym759_1291859456 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291859461 = [mnewString(0)];
    fmtRes_1291859461[0].push.apply(fmtRes_1291859461[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859461, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym759_1291859456 || [],fmtRes_1291859461[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859376;

}

function scriptGetOptionBoolScript_1291859465_1291859481(path_1291859482, default_1291859483) {
  var result_1291859484 = false;

    result_1291859484 = scriptGetOptionBool_1291859469(path_1291859482, default_1291859483);

  return result_1291859484;

}

function scriptGetOptionBoolApi_1291859490(HEX3Atmp_1291859467) {
  var result_1291859491 = null;

  BeforeRet: {
    result_1291859491 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859491 = toJson_2801808610(scriptGetOptionBoolScript_1291859465_1291859481(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859467, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291859467, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym775_1291859506 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291859511 = [mnewString(0)];
    fmtRes_1291859511[0].push.apply(fmtRes_1291859511[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859511, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym775_1291859506 || [],fmtRes_1291859511[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859491;

}

function scriptGetOptionStringScript_1291859515_1291859531(path_1291859532, default_1291859533) {
  var result_1291859534 = [];

    result_1291859534 = nimCopy(null, scriptGetOptionString_1291859519(path_1291859532, default_1291859533), NTI33554449);

  return result_1291859534;

}

function scriptGetOptionStringApi_1291859540(HEX3Atmp_1291859517) {
  var result_1291859541 = null;

  BeforeRet: {
    result_1291859541 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_1291859541 = toJson_1811939932(scriptGetOptionStringScript_1291859515_1291859531(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859517, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859517, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym785_1291859556 = [115,99,114,105,112,116,71,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291859561 = [mnewString(0)];
    fmtRes_1291859561[0].push.apply(fmtRes_1291859561[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859561, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym785_1291859556 || [],fmtRes_1291859561[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291859541;

}

function scriptSetOptionIntScript_1291859565_1291859614(path_1291859615, value_1291859616) {
    scriptSetOptionInt_1291859569(path_1291859615, value_1291859616);

  
}

function scriptSetOptionIntApi_1291859621(HEX3Atmp_1291859567) {
  var result_1291859622 = null;

    result_1291859622 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionIntScript_1291859565_1291859614(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859567, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859567, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym794_1291859633 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,73,110,116];
    var fmtRes_1291859638 = [mnewString(0)];
    fmtRes_1291859638[0].push.apply(fmtRes_1291859638[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859638, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym794_1291859633 || [],fmtRes_1291859638[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859622;

}

function scriptSetOptionFloatScript_1291859647_1291859696(path_1291859697, value_1291859698) {
    scriptSetOptionFloat_1291859651(path_1291859697, value_1291859698);

  
}

function scriptSetOptionFloatApi_1291859703(HEX3Atmp_1291859649) {
  var result_1291859704 = null;

    result_1291859704 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionFloatScript_1291859647_1291859696(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859649, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1291859382(HEX5BHEX5D_1627393116(HEX3Atmp_1291859649, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym808_1291859715 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,70,108,111,97,116];
    var fmtRes_1291859720 = [mnewString(0)];
    fmtRes_1291859720[0].push.apply(fmtRes_1291859720[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859720, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym808_1291859715 || [],fmtRes_1291859720[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859704;

}

function scriptSetOptionBoolScript_1291859729_1291859778(path_1291859779, value_1291859780) {
    scriptSetOptionBool_1291859733(path_1291859779, value_1291859780);

  
}

function scriptSetOptionBoolApi_1291859785(HEX3Atmp_1291859731) {
  var result_1291859786 = null;

    result_1291859786 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionBoolScript_1291859729_1291859778(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859731, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_1291859731, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym822_1291859797 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,66,111,111,108];
    var fmtRes_1291859802 = [mnewString(0)];
    fmtRes_1291859802[0].push.apply(fmtRes_1291859802[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859802, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym822_1291859797 || [],fmtRes_1291859802[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859786;

}

function scriptSetOptionStringScript_1291859811_1291859860(path_1291859861, value_1291859862) {
    scriptSetOptionString_1291859815(path_1291859861, value_1291859862);

  
}

function scriptSetOptionStringApi_1291859867(HEX3Atmp_1291859813) {
  var result_1291859868 = null;

    result_1291859868 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetOptionStringScript_1291859811_1291859860(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859813, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859813, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym836_1291859879 = [115,99,114,105,112,116,83,101,116,79,112,116,105,111,110,83,116,114,105,110,103];
    var fmtRes_1291859884 = [mnewString(0)];
    fmtRes_1291859884[0].push.apply(fmtRes_1291859884[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859884, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym836_1291859879 || [],fmtRes_1291859884[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859868;

}

function scriptSetCallbackScript_1291859893_1291859949(path_1291859950, id_1291859951) {
    scriptSetCallback_1291859897(path_1291859950, id_1291859951);

  
}

function scriptSetCallbackApi_1291859956(HEX3Atmp_1291859895) {
  var result_1291859957 = null;

    result_1291859957 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scriptSetCallbackScript_1291859893_1291859949(jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_1291859895, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_1291859895, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym850_1291859968 = [115,99,114,105,112,116,83,101,116,67,97,108,108,98,97,99,107];
    var fmtRes_1291859973 = [mnewString(0)];
    fmtRes_1291859973[0].push.apply(fmtRes_1291859973[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_1291859973, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym850_1291859968 || [],fmtRes_1291859973[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_1291859957;

}

function dispatch_1291859984(command_1291859983, arg_1291859982) {
    var Temporary1;

  var result_1291859986 = ({val: null});

    switch (toJSStr(command_1291859983)) {
    case "getBackend":
    case "get-backend":
      Temporary1 = some_2801810918(getBackendApi_1291853914(arg_1291859982));
      break;
    case "requestRender":
    case "request-render":
      Temporary1 = some_2801810918(requestRenderApi_1291854058(arg_1291859982));
      break;
    case "setHandleInputs":
    case "set-handle-inputs":
      Temporary1 = some_2801810918(setHandleInputsApi_1291854113(arg_1291859982));
      break;
    case "setHandleActions":
    case "set-handle-actions":
      Temporary1 = some_2801810918(setHandleActionsApi_1291854173(arg_1291859982));
      break;
    case "setConsumeAllActions":
    case "set-consume-all-actions":
      Temporary1 = some_2801810918(setConsumeAllActionsApi_1291854233(arg_1291859982));
      break;
    case "setConsumeAllInput":
    case "set-consume-all-input":
      Temporary1 = some_2801810918(setConsumeAllInputApi_1291854293(arg_1291859982));
      break;
    case "openGithubWorkspace":
    case "open-github-workspace":
      Temporary1 = some_2801810918(openGithubWorkspaceApi_1291854369(arg_1291859982));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2801810918(getFlagApi2_1291854446(arg_1291859982));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2801810918(setFlagApi2_1291854566(arg_1291859982));
      break;
    case "toggleFlag":
    case "toggle-flag":
      Temporary1 = some_2801810918(toggleFlagApi_1291854629(arg_1291859982));
      break;
    case "setOption":
    case "set-option":
      Temporary1 = some_2801810918(setOptionApi_1291854723(arg_1291859982));
      break;
    case "quit":
      Temporary1 = some_2801810918(quitApi_1291854777(arg_1291859982));
      break;
    case "changeFontSize":
    case "change-font-size":
      Temporary1 = some_2801810918(changeFontSizeApi_1291854824(arg_1291859982));
      break;
    case "changeLayoutProp":
    case "change-layout-prop":
      Temporary1 = some_2801810918(changeLayoutPropApi_1291855128(arg_1291859982));
      break;
    case "toggleStatusBarLocation":
    case "toggle-status-bar-location":
      Temporary1 = some_2801810918(toggleStatusBarLocationApi_1291855189(arg_1291859982));
      break;
    case "createView":
    case "create-view":
      Temporary1 = some_2801810918(createViewApi_1291855237(arg_1291859982));
      break;
    case "closeCurrentView":
    case "close-current-view":
      Temporary1 = some_2801810918(closeCurrentViewApi_1291855316(arg_1291859982));
      break;
    case "moveCurrentViewToTop":
    case "move-current-view-to-top":
      Temporary1 = some_2801810918(moveCurrentViewToTopApi_1291855401(arg_1291859982));
      break;
    case "nextView":
    case "next-view":
      Temporary1 = some_2801810918(nextViewApi_1291855452(arg_1291859982));
      break;
    case "prevView":
    case "prev-view":
      Temporary1 = some_2801810918(prevViewApi_1291855505(arg_1291859982));
      break;
    case "moveCurrentViewPrev":
    case "move-current-view-prev":
      Temporary1 = some_2801810918(moveCurrentViewPrevApi_1291855572(arg_1291859982));
      break;
    case "moveCurrentViewNext":
    case "move-current-view-next":
      Temporary1 = some_2801810918(moveCurrentViewNextApi_1291855636(arg_1291859982));
      break;
    case "setLayout":
    case "set-layout":
      Temporary1 = some_2801810918(setLayoutApi_1291855719(arg_1291859982));
      break;
    case "commandLine":
    case "command-line":
      Temporary1 = some_2801810918(commandLineApi_1291855775(arg_1291859982));
      break;
    case "exitCommandLine":
    case "exit-command-line":
      Temporary1 = some_2801810918(exitCommandLineApi_1291855828(arg_1291859982));
      break;
    case "executeCommandLine":
    case "execute-command-line":
      Temporary1 = some_2801810918(executeCommandLineApi_1291855881(arg_1291859982));
      break;
    case "openFile":
    case "open-file":
      Temporary1 = some_2801810918(openFileApi_1291855979(arg_1291859982));
      break;
    case "writeFile":
    case "write-file":
      Temporary1 = some_2801810918(writeFileApi_1291856174(arg_1291859982));
      break;
    case "loadFile":
    case "load-file":
      Temporary1 = some_2801810918(loadFileApi_1291856238(arg_1291859982));
      break;
    case "loadTheme":
    case "load-theme":
      Temporary1 = some_2801810918(loadThemeApi_1291856326(arg_1291859982));
      break;
    case "chooseTheme":
    case "choose-theme":
      Temporary1 = some_2801810918(chooseThemeApi_1291856653(arg_1291859982));
      break;
    case "chooseFile":
    case "choose-file":
      Temporary1 = some_2801810918(chooseFileApi_1291857113(arg_1291859982));
      break;
    case "setGithubAccessToken":
    case "set-github-access-token":
      Temporary1 = some_2801810918(setGithubAccessTokenApi_1291857182(arg_1291859982));
      break;
    case "reloadConfig":
    case "reload-config":
      Temporary1 = some_2801810918(reloadConfigApi_1291857244(arg_1291859982));
      break;
    case "logOptions":
    case "log-options":
      Temporary1 = some_2801810918(logOptionsApi_1291857288(arg_1291859982));
      break;
    case "clearCommands":
    case "clear-commands":
      Temporary1 = some_2801810918(clearCommandsApi_1291857345(arg_1291859982));
      break;
    case "getAllEditors":
    case "get-all-editors":
      Temporary1 = some_2801810918(getAllEditorsApi_1291857626(arg_1291859982));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2801810918(setModeApi22_1291857736(arg_1291859982));
      break;
    case "mode":
      Temporary1 = some_2801810918(modeApi22_1291857789(arg_1291859982));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2801810918(getContextWithModeApi22_1291857843(arg_1291859982));
      break;
    case "scriptRunAction":
    case "script-run-action":
      Temporary1 = some_2801810918(scriptRunActionApi_1291858097(arg_1291859982));
      break;
    case "scriptLog":
    case "script-log":
      Temporary1 = some_2801810918(scriptLogApi_1291858133(arg_1291859982));
      break;
    case "addCommandScript":
    case "add-command-script":
      Temporary1 = some_2801810918(addCommandScriptApi_1291858195(arg_1291859982));
      break;
    case "removeCommand":
    case "remove-command":
      Temporary1 = some_2801810918(removeCommandApi_1291858271(arg_1291859982));
      break;
    case "getActivePopup":
    case "get-active-popup":
      Temporary1 = some_2801810918(getActivePopupApi_1291858316(arg_1291859982));
      break;
    case "getActiveEditor":
    case "get-active-editor":
      Temporary1 = some_2801810918(getActiveEditorApi_1291858347(arg_1291859982));
      break;
    case "loadCurrentConfig":
    case "load-current-config":
      Temporary1 = some_2801810918(loadCurrentConfigApi_1291858442(arg_1291859982));
      break;
    case "sourceCurrentDocument":
    case "source-current-document":
      Temporary1 = some_2801810918(sourceCurrentDocumentApi_1291858497(arg_1291859982));
      break;
    case "getEditor":
    case "get-editor":
      Temporary1 = some_2801810918(getEditorApi_1291858527(arg_1291859982));
      break;
    case "scriptIsTextEditor":
    case "script-is-text-editor":
      Temporary1 = some_2801810918(scriptIsTextEditorApi_1291858595(arg_1291859982));
      break;
    case "scriptIsAstEditor":
    case "script-is-ast-editor":
      Temporary1 = some_2801810918(scriptIsAstEditorApi_1291858664(arg_1291859982));
      break;
    case "scriptRunActionFor":
    case "script-run-action-for":
      Temporary1 = some_2801810918(scriptRunActionForApi_1291858759(arg_1291859982));
      break;
    case "scriptInsertTextInto":
    case "script-insert-text-into":
      Temporary1 = some_2801810918(scriptInsertTextIntoApi_1291858829(arg_1291859982));
      break;
    case "scriptTextEditorSelection":
    case "script-text-editor-selection":
      Temporary1 = some_2801810918(scriptTextEditorSelectionApi_1291858899(arg_1291859982));
      break;
    case "scriptSetTextEditorSelection":
    case "script-set-text-editor-selection":
      Temporary1 = some_2801810918(scriptSetTextEditorSelectionApi_1291858971(arg_1291859982));
      break;
    case "scriptTextEditorSelections":
    case "script-text-editor-selections":
      Temporary1 = some_2801810918(scriptTextEditorSelectionsApi_1291859049(arg_1291859982));
      break;
    case "scriptSetTextEditorSelections":
    case "script-set-text-editor-selections":
      Temporary1 = some_2801810918(scriptSetTextEditorSelectionsApi_1291859117(arg_1291859982));
      break;
    case "scriptGetTextEditorLine":
    case "script-get-text-editor-line":
      Temporary1 = some_2801810918(scriptGetTextEditorLineApi_1291859193(arg_1291859982));
      break;
    case "scriptGetTextEditorLineCount":
    case "script-get-text-editor-line-count":
      Temporary1 = some_2801810918(scriptGetTextEditorLineCountApi_1291859270(arg_1291859982));
      break;
    case "scriptGetOptionInt":
    case "script-get-option-int":
      Temporary1 = some_2801810918(scriptGetOptionIntApi_1291859325(arg_1291859982));
      break;
    case "scriptGetOptionFloat":
    case "script-get-option-float":
      Temporary1 = some_2801810918(scriptGetOptionFloatApi_1291859375(arg_1291859982));
      break;
    case "scriptGetOptionBool":
    case "script-get-option-bool":
      Temporary1 = some_2801810918(scriptGetOptionBoolApi_1291859490(arg_1291859982));
      break;
    case "scriptGetOptionString":
    case "script-get-option-string":
      Temporary1 = some_2801810918(scriptGetOptionStringApi_1291859540(arg_1291859982));
      break;
    case "scriptSetOptionInt":
    case "script-set-option-int":
      Temporary1 = some_2801810918(scriptSetOptionIntApi_1291859621(arg_1291859982));
      break;
    case "scriptSetOptionFloat":
    case "script-set-option-float":
      Temporary1 = some_2801810918(scriptSetOptionFloatApi_1291859703(arg_1291859982));
      break;
    case "scriptSetOptionBool":
    case "script-set-option-bool":
      Temporary1 = some_2801810918(scriptSetOptionBoolApi_1291859785(arg_1291859982));
      break;
    case "scriptSetOptionString":
    case "script-set-option-string":
      Temporary1 = some_2801810918(scriptSetOptionStringApi_1291859867(arg_1291859982));
      break;
    case "scriptSetCallback":
    case "script-set-callback":
      Temporary1 = some_2801810918(scriptSetCallbackApi_1291859956(arg_1291859982));
      break;
    default: 
      Temporary1 = none_2801811114();
      break;
    }
    result_1291859986 = nimCopy(result_1291859986, Temporary1, NTI2801805821);

  return result_1291859986;

}

function handleAction_1291848861(self_1291848862, action_1291848863, arg_1291848864) {
  var result_1291860201 = false;

  BeforeRet: {
    log_1174405220(logger_704643272[0], 2, [nsuFormatOpenArray([91,101,100,93,32,65,99,116,105,111,110,32,39,36,49,32,36,50,39], [nimCopy(null, action_1291848863, NTI33554449), nimCopy(null, arg_1291848864, NTI33554449)])]);
++excHandler;
    try {
    if (false) {
    result_1291860201 = true;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291860211 = [mnewString(0)];
    fmtRes_1291860211[0].push.apply(fmtRes_1291860211[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,71,108,111,98,97,108,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291860211, 0, action_1291848863, []);
    fmtRes_1291860211[0].push.apply(fmtRes_1291860211[0], [32]);;
    formatValue_721420459(fmtRes_1291860211, 0, arg_1291848864, []);
    fmtRes_1291860211[0].push.apply(fmtRes_1291860211[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291860211, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291860211[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291860201 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    var args_1291860212 = newJArray_1627390082();
    Label2: {
      var a_1291860213 = null;
      var colontmp__536871068 = null;
      colontmp__536871068 = newStringStream_1660945417(arg_1291848864);
      var p_536871069 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871069[0], colontmp__536871068, [], false);
      try {
      var _ = getTok_1694499270(p_536871069[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871069[0].tok == 1))) break Label5;
            a_1291860213 = parseJson_1627395211(p_536871069[0], false, false, 0);
            add_1627390190(args_1291860212, a_1291860213);
          }
      };
      } finally {
      close_1694498967(p_536871069[0]);
      }
    };
    result_1291860201 = isSome_2801811182(dispatch_1291859984(action_1291848863, args_1291860212));
    break BeforeRet;
  };

  return result_1291860201;

}

function fromJson_1291853031(a_1291853033, b_1291853034, opt_1291853035) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853034, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [79,112,101,110,69,100,105,116,111,114], Field1: b_1291853034}));
    }
    
    if (!((b_1291853034.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291853034.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291853070 = 0;
    var numMatchedHEX60gensym16_1291853071 = 0;
    numHEX60gensym16_1291853070 = addInt(numHEX60gensym16_1291853070, 1);
    if (hasKey_1627393154(b_1291853034, [102,105,108,101,110,97,109,101])) {
    numMatchedHEX60gensym16_1291853071 = addInt(numMatchedHEX60gensym16_1291853071, 1);
    fromJson_1811939890(a_1291853033, "filename", HEX5BHEX5D_1627393037(b_1291853034, [102,105,108,101,110,97,109,101]), opt_1291853035);
    }
    else {
    if (opt_1291853035.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,105,108,101,110,97,109,101], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853034, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853070 = addInt(numHEX60gensym16_1291853070, 1);
    if (hasKey_1627393154(b_1291853034, [97,115,116])) {
    numMatchedHEX60gensym16_1291853071 = addInt(numMatchedHEX60gensym16_1291853071, 1);
    fromJson_2801804730(a_1291853033, "ast", HEX5BHEX5D_1627393037(b_1291853034, [97,115,116]), opt_1291853035);
    }
    else {
    if (opt_1291853035.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[97,115,116], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853034, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291853070 = addInt(numHEX60gensym16_1291853070, 1);
    if (hasKey_1627393154(b_1291853034, [108,97,110,103,117,97,103,101,73,68])) {
    numMatchedHEX60gensym16_1291853071 = addInt(numMatchedHEX60gensym16_1291853071, 1);
    fromJson_1811939890(a_1291853033, "languageID", HEX5BHEX5D_1627393037(b_1291853034, [108,97,110,103,117,97,103,101,73,68]), opt_1291853035);
    }
    else {
    if (opt_1291853035.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[108,97,110,103,117,97,103,101,73,68], [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853034, 2)]));
      }
      
    }
    }
    if ((opt_1291853035.allowExtraKeys && opt_1291853035.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291853035.allowExtraKeys) {
    if (!((numHEX60gensym16_1291853070 == numMatchedHEX60gensym16_1291853071))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291853070 == numMatchedHEX60gensym16_1291853071);
    }
    else {
    if (opt_1291853035.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291853034) == numMatchedHEX60gensym16_1291853071);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291853034) == numHEX60gensym16_1291853070) && (numHEX60gensym16_1291853070 == numMatchedHEX60gensym16_1291853071));
    }
    }}
    var okHEX60gensym16_1291853146 = Temporary1;
    if (!(okHEX60gensym16_1291853146)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291853034)), HEX24_369098760(numHEX60gensym16_1291853070), [79,112,101,110,69,100,105,116,111,114], pretty_1627394477(b_1291853034, 2)]));
    }
    

  
}

function fromJson_1291853003(a_1291853005, a_1291853005_Idx, b_1291853006, opt_1291853007) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291853006, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,113,91,79,112,101,110,69,100,105,116,111,114,93], Field1: b_1291853006}));
    }
    
    if (a_1291853005[a_1291853005_Idx].length < (Temporary1 = chckRange(len_1627392983(b_1291853006), 0, 2147483647), Temporary1)) { for (var i = a_1291853005[a_1291853005_Idx].length ; i < Temporary1 ; ++i) a_1291853005[a_1291853005_Idx].push(({filename: [], ast: false, languageID: []})); }
               else { a_1291853005[a_1291853005_Idx].length = Temporary1; };
    Label2: {
      var i_1291853029 = 0;
      var val_1291853030 = null;
      var colontmp__536871207 = [];
      colontmp__536871207 = getElems_1627390175(b_1291853006, []);
      var i_536871208 = 0;
      var L_536871209 = (colontmp__536871207).length;
      Label3: {
          Label4: while (true) {
          if (!(i_536871208 < L_536871209)) break Label4;
            i_1291853029 = i_536871208;
            val_1291853030 = colontmp__536871207[chckIndx(i_536871208, 0, (colontmp__536871207).length - 1)];
            fromJson_1291853031(a_1291853005[a_1291853005_Idx][chckIndx(i_1291853029, 0, (a_1291853005[a_1291853005_Idx]).length - 1)], val_1291853030, opt_1291853007);
            i_536871208 = addInt(i_536871208, 1);
            if (!(((colontmp__536871207).length == L_536871209))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function fromJson_1291852806(a_1291852808, b_1291852809, opt_1291852810) {
    var Temporary1;

    if (!(!(HEX3DHEX3D_1627392026(b_1291852809, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [69,100,105,116,111,114,83,116,97,116,101], Field1: b_1291852809}));
    }
    
    if (!((b_1291852809.kind == 5))) {
    raiseJsonException_1811939497([98,46,107,105,110,100,32,61,61,32,74,79,98,106,101,99,116], reprEnum(b_1291852809.kind, NTI1627389955));
    }
    
    var numHEX60gensym16_1291852852 = 0;
    var numMatchedHEX60gensym16_1291852853 = 0;
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [116,104,101,109,101])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_1811939890(a_1291852808, "theme", HEX5BHEX5D_1627393037(b_1291852809, [116,104,101,109,101]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[116,104,101,109,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [102,111,110,116,83,105,122,101])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_2801806071(a_1291852808, "fontSize", HEX5BHEX5D_1627393037(b_1291852809, [102,111,110,116,83,105,122,101]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,83,105,122,101], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [102,111,110,116,82,101,103,117,108,97,114])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_1811939890(a_1291852808, "fontRegular", HEX5BHEX5D_1627393037(b_1291852809, [102,111,110,116,82,101,103,117,108,97,114]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,82,101,103,117,108,97,114], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [102,111,110,116,66,111,108,100])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_1811939890(a_1291852808, "fontBold", HEX5BHEX5D_1627393037(b_1291852809, [102,111,110,116,66,111,108,100]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [102,111,110,116,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_1811939890(a_1291852808, "fontItalic", HEX5BHEX5D_1627393037(b_1291852809, [102,111,110,116,73,116,97,108,105,99]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [102,111,110,116,66,111,108,100,73,116,97,108,105,99])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_1811939890(a_1291852808, "fontBoldItalic", HEX5BHEX5D_1627393037(b_1291852809, [102,111,110,116,66,111,108,100,73,116,97,108,105,99]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[102,111,110,116,66,111,108,100,73,116,97,108,105,99], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    numHEX60gensym16_1291852852 = addInt(numHEX60gensym16_1291852852, 1);
    if (hasKey_1627393154(b_1291852809, [111,112,101,110,69,100,105,116,111,114,115])) {
    numMatchedHEX60gensym16_1291852853 = addInt(numMatchedHEX60gensym16_1291852853, 1);
    fromJson_1291853003(a_1291852808, "openEditors", HEX5BHEX5D_1627393037(b_1291852809, [111,112,101,110,69,100,105,116,111,114,115]), opt_1291852810);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    }
    else {
      if (true) {
      raiseJsonException_1811939497([102,97,108,115,101], nsuFormatOpenArray([107,101,121,32,39,36,49,39,32,102,111,114,32,36,50,32,110,111,116,32,105,110,32,36,51], [[111,112,101,110,69,100,105,116,111,114,115], [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
      }
      
    }
    }
    if ((opt_1291852810.allowExtraKeys && opt_1291852810.allowMissingKeys)) {
    Temporary1 = true;
    }
    else {
    if (opt_1291852810.allowExtraKeys) {
    if (!((numHEX60gensym16_1291852852 == numMatchedHEX60gensym16_1291852853))) {
    failedAssertImpl_268435515([106,115,111,110,117,116,105,108,115,46,110,105,109,40,49,54,57,44,32,55,41,32,96,110,117,109,96,103,101,110,115,121,109,49,54,32,61,61,32,110,117,109,77,97,116,99,104,101,100,96,103,101,110,115,121,109,49,54,96,32]);
    }
    
    Temporary1 = (numHEX60gensym16_1291852852 == numMatchedHEX60gensym16_1291852853);
    }
    else {
    if (opt_1291852810.allowMissingKeys) {
    Temporary1 = (len_1627392983(b_1291852809) == numMatchedHEX60gensym16_1291852853);
    }
    else {
    Temporary1 = ((len_1627392983(b_1291852809) == numHEX60gensym16_1291852852) && (numHEX60gensym16_1291852852 == numMatchedHEX60gensym16_1291852853));
    }
    }}
    var okHEX60gensym16_1291853158 = Temporary1;
    if (!(okHEX60gensym16_1291853158)) {
    raiseJsonException_1811939497([111,107,96,103,101,110,115,121,109,49,54], nsuFormatOpenArray([84,104,101,114,101,32,119,101,114,101,32,36,49,32,107,101,121,115,32,40,101,120,112,101,99,116,105,110,103,32,36,50,41,32,102,111,114,32,36,51,32,119,105,116,104,32,36,52], [HEX24_369098760(len_1627392983(b_1291852809)), HEX24_369098760(numHEX60gensym16_1291852852), [69,100,105,116,111,114,83,116,97,116,101], pretty_1627394477(b_1291852809, 2)]));
    }
    

  
}

function jsonTo_1291852800(b_1291852802, opt_1291852804) {
  var result_1291852805 = [({theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []})];

    fromJson_1291852806(result_1291852805[0], b_1291852802, opt_1291852804);

  return result_1291852805[0];

}

function new_1291853190() {
  var result_1291853193 = null;

  BeforeRet: {
    var r_1291853195 = null;
    r_1291853195 = ({m_type: NTI2785017860});
    result_1291853193 = r_1291853195;
    break BeforeRet;
  };

  return result_1291853193;

}

function newEditor_1291851090(backend_1291851091, platform_1291851092) {
    
function HEX3Aanonymous_1291851106(event_1291851124) {
        handleKeyPress_1291851057(self_1291851094, event_1291851124.Field0, event_1291851124.Field1);

      
    }
    
function HEX3Aanonymous_1291851178(event_1291851196) {
        handleKeyRelease_1291851061(self_1291851094, event_1291851196.Field0, event_1291851196.Field1);

      
    }
    
function HEX3Aanonymous_1291851227(event_1291851245) {
        handleRune_1291851065(self_1291851094, event_1291851245.Field0, event_1291851245.Field1);

      
    }
    
function HEX3Aanonymous_1291851276(event_1291851294) {
        handleMousePress_1291851069(self_1291851094, event_1291851294.Field0, event_1291851294.Field1, event_1291851294.Field2);

      
    }
    
function HEX3Aanonymous_1291851348(event_1291851366) {
        handleMouseRelease_1291851074(self_1291851094, event_1291851366.Field0, event_1291851366.Field1, event_1291851366.Field2);

      
    }
    
function HEX3Aanonymous_1291851397(event_1291851415) {
        handleMouseMove_1291851079(self_1291851094, event_1291851415.Field0, event_1291851415.Field1, event_1291851415.Field2, event_1291851415.Field3);

      
    }
    
function HEX3Aanonymous_1291851469(event_1291851487) {
        handleScroll_1291851085(self_1291851094, event_1291851487.Field1, event_1291851487.Field0, event_1291851487.Field2);

      
    }
    
function HEX3Aanonymous_1291851541() {
        self_1291851094.closeRequested = true;

      
    }
      
function HEX3Aanonymous_1291852749(actionHEX60gensym75HEX60gensym76_1291852750, argHEX60gensym75HEX60gensym76_1291852751) {
          var Temporary1;

        var result_1291852752 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852737.config.handleActions) {
          var action_1291852753 = nimCopy(null, actionHEX60gensym75HEX60gensym76_1291852750, NTI33554449);
          var arg_1291852754 = nimCopy(null, argHEX60gensym75HEX60gensym76_1291852751, NTI33554449);
          if (handleAction_1291848861(self_1291851094, action_1291852753, arg_1291852754)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym75HEX60gensym76_1291852755 = Temporary1;
          if (handlerHEX60gensym75_1291852737.config.consumeAllActions) {
          result_1291852752 = 3;
          break BeforeRet;
          }
          
          result_1291852752 = responseHEX60gensym75HEX60gensym76_1291852755;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym75_1291852737.config.consumeAllActions) {
          result_1291852752 = 3;
          break BeforeRet;
          }
          else {
            result_1291852752 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852752;

      }
      
function HEX3Aanonymous_1291852757(inputHEX60gensym75HEX60gensym77_1291852758) {
        var result_1291852759 = 0;

        BeforeRet: {
          if (handlerHEX60gensym75_1291852737.config.handleInputs) {
          var input_1291852760 = nimCopy(null, inputHEX60gensym75HEX60gensym77_1291852758, NTI33554449);
          result_1291852759 = 1;
          break BeforeRet;
          }
          else {
            result_1291852759 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852759;

      }
      
function HEX3Aanonymous_1291852780(actionHEX60gensym78HEX60gensym79_1291852781, argHEX60gensym78HEX60gensym79_1291852782) {
          var Temporary1;

        var result_1291852783 = 0;

        BeforeRet: {
          if (handlerHEX60gensym78_1291852768.config.handleActions) {
          var action_1291852784 = nimCopy(null, actionHEX60gensym78HEX60gensym79_1291852781, NTI33554449);
          var arg_1291852785 = nimCopy(null, argHEX60gensym78HEX60gensym79_1291852782, NTI33554449);
          if (handleAction_1291848861(self_1291851094, action_1291852784, arg_1291852785)) {
          Temporary1 = 3;
          }
          else {
          Temporary1 = 1;
          }
          
          var responseHEX60gensym78HEX60gensym79_1291852786 = Temporary1;
          if (handlerHEX60gensym78_1291852768.config.consumeAllActions) {
          result_1291852783 = 3;
          break BeforeRet;
          }
          
          result_1291852783 = responseHEX60gensym78HEX60gensym79_1291852786;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym78_1291852768.config.consumeAllActions) {
          result_1291852783 = 3;
          break BeforeRet;
          }
          else {
            result_1291852783 = 1;
            break BeforeRet;
          }
          }
        };

        return result_1291852783;

      }
      
function HEX3Aanonymous_1291852788(inputHEX60gensym78HEX60gensym80_1291852789) {
        var result_1291852790 = 0;

        BeforeRet: {
          if (handlerHEX60gensym78_1291852768.config.handleInputs) {
          var input_1291852791 = nimCopy(null, inputHEX60gensym78HEX60gensym80_1291852789, NTI33554449);
          result_1291852790 = 1;
          break BeforeRet;
          }
          else {
            result_1291852790 = 1;
            break BeforeRet;
          }
          
        };

        return result_1291852790;

      }
        var Temporary7;
              var Temporary14;
                var Temporary15;

  var result_1291851093 = null;

  BeforeRet: {
    var self_1291851094 = {backend: 0, platform: null, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], clearAtlasTimer: ({start: 0}), timer: ({start: 0}), frameTimer: ({start: 0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), closeRequested: false, widget: null, eventHandlerConfigs: ({data: [], counter: 0}), options: null, callbacks: ({data: [], counter: 0}), logger: null, workspace: null, scriptContext: null, initializeCalled: false, statusBarOnTop: false, currentView: 0, views: [], layout: null, layout_props: null, theme: null, loadedFontSize: 0.0, editors: ({data: [], counter: 0}), popups: [], onEditorRegistered: ({handlers: []}), onEditorDeregistered: ({handlers: []}), commandLineTextEditor: null, eventHandler: null, commandLineEventHandler: null, commandLineMode: false, modeEventHandler: null, currentMode: [], editor_defaults: []};
    self_1291851094 = createWithPrototype(editor_prototype, self_1291851094);
    gEditor = self_1291851094;
    self_1291851094.platform = platform_1291851092;
    self_1291851094.backend = backend_1291851091;
    self_1291851094.statusBarOnTop = false;
    var _ = subscribe_1291851139(platform_1291851092.onKeyPress, HEX3Aanonymous_1291851106);
    var _ = subscribe_1291851139(platform_1291851092.onKeyRelease, HEX3Aanonymous_1291851178);
    var _ = subscribe_1291851139(platform_1291851092.onRune, HEX3Aanonymous_1291851227);
    var _ = subscribe_1291851309(platform_1291851092.onMousePress, HEX3Aanonymous_1291851276);
    var _ = subscribe_1291851309(platform_1291851092.onMouseRelease, HEX3Aanonymous_1291851348);
    var _ = subscribe_1291851430(platform_1291851092.onMouseMove, HEX3Aanonymous_1291851397);
    var _ = subscribe_1291851502(platform_1291851092.onScroll, HEX3Aanonymous_1291851469);
    var _ = subscribe_1291851574(platform_1291851092.onCloseRequested, HEX3Aanonymous_1291851541);
    self_1291851094.timer = nimCopy(self_1291851094.timer, startTimer_2281701428(), NTI2281701407);
    self_1291851094.frameTimer = nimCopy(self_1291851094.frameTimer, startTimer_2281701428(), NTI2281701407);
    self_1291851094.layout = {m_type: NTI1291845643};
    self_1291851094.layout_props = {props: toTable_1291851584([{Field0: [109,97,105,110,45,115,112,108,105,116], Field1: 0.5}])};
    fontSizeHEX3D_2315255929(self_1291851094.platform, 20.0);
    self_1291851094.fontRegular = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,46,116,116,102], NTI33554449);
    self_1291851094.fontBold = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,46,116,116,102], NTI33554449);
    self_1291851094.fontItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851094.fontBoldItalic = nimCopy(null, [46,47,102,111,110,116,115,47,68,101,106,97,86,117,83,97,110,115,77,111,110,111,45,66,111,108,100,79,98,108,105,113,117,101,46,116,116,102], NTI33554449);
    self_1291851094.editor_defaults = nimCopy(null, [{m_type: NTI2801795279, editor: null, document: null, selectionsInternal: [], selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), searchQuery: [], searchRegex: ({val: ({impl: null}), has: false}), searchResults: ({data: [], counter: 0}), targetColumn: 0, hideCursorWhenInactive: false, completionEventHandler: null, modeEventHandler: null, currentMode: [], commandCount: 0, commandCountRestore: 0, scrollOffset: 0.0, previousBaseIndex: 0, lineNumbers: ({val: 0, has: false}), lastRenderedLines: [], completions: [], selectedCompletion: 0, lastItems: [], showCompletions: false, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}, {m_type: NTI2936014315, editor: null, document: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditor: null, textDocument: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, eventHandler: null, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false}], NTI1291849399);
    self_1291851094.workspace = ({folders: []});
    self_1291851094.theme = defaultTheme_2483031631();
    setTheme_1291850997(self_1291851094, [46,47,116,104,101,109,101,115,47,116,111,107,121,111,45,110,105,103,104,116,45,99,111,108,111,114,45,116,104,101,109,101,46,106,115,111,110]);
    self_1291851094.currentView = 0;
    addCommand_2046820734(getEventHandlerConfig_1291849153(self_1291851094, [101,100,105,116,111,114]), [60,67,45,120,62,60,67,45,120,62], [113,117,105,116]);
    addCommand_2046820734(getEventHandlerConfig_1291849153(self_1291851094, [101,100,105,116,111,114]), [60,67,65,83,45,114,62], [114,101,108,111,97,100,45,99,111,110,102,105,103]);
    self_1291851094.options = newJObject_1627390051();
    Label1: {
      var handlerHEX60gensym75_1291852737 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym75_1291852737.config = getEventHandlerConfig_1291849153(self_1291851094, [101,100,105,116,111,114]);
      handlerHEX60gensym75_1291852737.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(self_1291851094, [101,100,105,116,111,114]));
      handlerHEX60gensym75_1291852737.handleAction = HEX3Aanonymous_1291852749;
      handlerHEX60gensym75_1291852737.handleInput = HEX3Aanonymous_1291852757;
    };
    self_1291851094.eventHandler = handlerHEX60gensym75_1291852737;
    Label2: {
      var handlerHEX60gensym78_1291852768 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym78_1291852768.config = getEventHandlerConfig_1291849153(self_1291851094, [99,111,109,109,97,110,100,76,105,110,101]);
      handlerHEX60gensym78_1291852768.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(self_1291851094, [99,111,109,109,97,110,100,76,105,110,101]));
      handlerHEX60gensym78_1291852768.handleAction = HEX3Aanonymous_1291852780;
      handlerHEX60gensym78_1291852768.handleInput = HEX3Aanonymous_1291852788;
    };
    self_1291851094.commandLineEventHandler = handlerHEX60gensym78_1291852768;
    self_1291851094.commandLineMode = false;
    self_1291851094.commandLineTextEditor = newTextEditor_2801811312(newTextDocument_3154117191([], []), self_1291851094);
    self_1291851094.commandLineTextEditor.renderHeader = false;
    self_1291851094.commandLineTextEditor.lineNumbers = nimCopy(self_1291851094.commandLineTextEditor.lineNumbers, some_3154117232(0), NTI2801795323);
    getCommandLineTextEditor_1291851054(self_1291851094).hideCursorWhenInactive = true;
    var state_1291852799 = {theme: [], fontSize: 0.0, fontRegular: [], fontBold: [], fontItalic: [], fontBoldItalic: [], openEditors: []};
++excHandler;
    try {
    state_1291852799 = nimCopy(state_1291852799, jsonTo_1291852800(parseJson_1627395313(loadApplicationFile_2499805202(fs_2499805237, [99,111,110,102,105,103,46,106,115,111,110])), {allowExtraKeys: false, allowMissingKeys: false}), NTI1291845663);
    setTheme_1291850997(self_1291851094, state_1291852799.theme);
    self_1291851094.loadedFontSize = state_1291852799.fontSize;
    fontSizeHEX3D_2315255929(self_1291851094.platform, state_1291852799.fontSize);
    if ((0 < (state_1291852799.fontRegular).length)) {
    self_1291851094.fontRegular = nimCopy(null, state_1291852799.fontRegular, NTI33554449);
    }
    
    if ((0 < (state_1291852799.fontBold).length)) {
    self_1291851094.fontBold = nimCopy(null, state_1291852799.fontBold, NTI33554449);
    }
    
    if ((0 < (state_1291852799.fontItalic).length)) {
    self_1291851094.fontItalic = nimCopy(null, state_1291852799.fontItalic, NTI33554449);
    }
    
    if ((0 < (state_1291852799.fontBoldItalic).length)) {
    self_1291851094.fontBoldItalic = nimCopy(null, state_1291852799.fontBoldItalic, NTI33554449);
    }
    
    self_1291851094.options = parseJson_1627395313(loadApplicationFile_2499805202(fs_2499805237, [111,112,116,105,111,110,115,46,106,115,111,110]));
    var fmtRes_1291853166 = [mnewString(0)];
    fmtRes_1291853166[0].push.apply(fmtRes_1291853166[0], [82,101,115,116,111,114,105,110,103,32,111,112,116,105,111,110,115,58,32]);;
    formatValue_721420459(fmtRes_1291853166, 0, pretty_1627394477(self_1291851094.options, 2), []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_1291853166[0], NTI33554449)]);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853171 = [mnewString(0)];
    fmtRes_1291853171[0].push.apply(fmtRes_1291853171[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,112,114,101,118,105,111,117,115,32,115,116,97,116,101,32,102,114,111,109,32,99,111,110,102,105,103,32,102,105,108,101,58,32]);;
    formatValue_721420459(fmtRes_1291853171, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853171[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
++excHandler;
    try {
    var searchPaths_1291853176 = [[115,114,99], [115,99,114,105,112,116,105,110,103]];
    var searchPathsJson_1291853181 = HEX7BHEX7D_1627393316(self_1291851094.options, [[115,99,114,105,112,116,105,110,103], [115,101,97,114,99,104,45,112,97,116,104,115]]);
    if (!((searchPathsJson_1291853181 == null))) {
    Label5: {
      var sp_1291853185 = null;
      if (!((searchPathsJson_1291853181.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(searchPathsJson_1291853181.kind, NTI1627389955) || []));
      }
      
      Label6: {
        var i_536870983 = null;
        var colontmp__536870984 = [];
        var Temporary7 = searchPathsJson_1291853181;
        if (ConstSet298[Temporary7.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary7.kind, NTI1627389955)); }
        colontmp__536870984 = Temporary7.elems;
        var i_536870985 = 0;
        var L_536870986 = (colontmp__536870984).length;
        Label8: {
            Label9: while (true) {
            if (!(i_536870985 < L_536870986)) break Label9;
              i_536870983 = colontmp__536870984[chckIndx(i_536870985, 0, (colontmp__536870984).length - 1)];
              sp_1291853185 = i_536870983;
              searchPaths_1291853176.push(getStr_1627390106(sp_1291853185, []));;
              i_536870985 = addInt(i_536870985, 1);
              if (!(((colontmp__536870984).length == L_536870986))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    
    self_1291851094.scriptContext = new_1291853190();
    init_2650800140(self_1291851094.scriptContext, []);
    var _ = false;
    self_1291851094.initializeCalled = true;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_1291853226 = mnewString(0);
    fmtRes_1291853226.push.apply(fmtRes_1291853226, [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,99,111,110,102,105,103]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853226, NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    if (getFlag_1291848865(self_1291851094, [101,100,105,116,111,114,46,114,101,115,116,111,114,101,45,111,112,101,110,45,101,100,105,116,111,114,115], false)) {
    Label10: {
      var editorState_1291853249 = ({filename: [], ast: false, languageID: []});
      var i_536870991 = 0;
      var L_536870992 = (state_1291852799.openEditors).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536870991 < L_536870992)) break Label12;
            editorState_1291853249 = state_1291852799.openEditors[chckIndx(i_536870991, 0, (state_1291852799.openEditors).length - 1)];
            Label13: {
              if (editorState_1291853249.ast) {
              Temporary14 = newAstDocument_2936017761(editorState_1291853249.filename);
              }
              else {
++excHandler;
                try {
                var fileContent_1291853250 = loadFile_2499805191(fs_2499805237, editorState_1291853249.filename);
                Temporary15 = newTextDocument_3154117191(editorState_1291853249.filename, fileContent_1291853250);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                var fmtRes_1291853259 = [mnewString(0)];
                fmtRes_1291853259[0].push.apply(fmtRes_1291853259[0], [70,97,105,108,101,100,32,116,111,32,114,101,115,116,111,114,101,32,102,105,108,101,32]);;
                formatValue_721420459(fmtRes_1291853259, 0, editorState_1291853249.filename, []);
                fmtRes_1291853259[0].push.apply(fmtRes_1291853259[0], [32,102,114,111,109,32,112,114,101,118,105,111,117,115,32,115,101,115,115,105,111,110,58,32]);;
                formatValue_721420459(fmtRes_1291853259, 0, getCurrentExceptionMsg_33556469(), []);
                log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291853259[0], NTI33554449)]);
                break Label13;
                lastJSError = prevJSError;
                } finally {
                }
              Temporary14 = Temporary15;
              }
              
              var document_1291853260 = Temporary14;
              createView_1291848949(self_1291851094, document_1291853260);
            };
            i_536870991 = addInt(i_536870991, 1);
            if (!(((state_1291852799.openEditors).length == L_536870992))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    
    result_1291851093 = self_1291851094;
    break BeforeRet;
  };

  return result_1291851093;

}

function fromJsonHook_2483028776(color_2483028777, jsonNode_2483028778) {
    var Temporary1;

  BeforeRet: {
    if ((jsonNode_2483028778.kind == 0)) {
    color_2483028777 = nimCopy(color_2483028777, parseHex_2348810482([48,48,48,48,48,48]), NTI2365587459);
    break BeforeRet;
    }
    
    var Temporary1 = jsonNode_2483028778;
    if (ConstSet300[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    color_2483028777 = nimCopy(color_2483028777, parseHexVar_2483028016(Temporary1.str), NTI2365587459);
  };

  
}

function fromJson_2483028808(a_2483028810, b_2483028811, opt_2483028812) {
    if (!(!(HEX3DHEX3D_1627392026(b_2483028811, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [67,111,108,111,114], Field1: b_2483028811}));
    }
    
    fromJsonHook_2483028776(a_2483028810, b_2483028811);

  
}

function jsonTo_2483028802(b_2483028804, opt_2483028806) {
  var result_2483028807 = [({r: 0.0, g: 0.0, b: 0.0, a: 0.0})];

    fromJson_2483028808(result_2483028807[0], b_2483028804, opt_2483028806);

  return result_2483028807[0];

}

function hasKey_2483028226(t_2483028229, key_2483028230) {
  var result_2483028231 = false;

    var hc_2483028232 = [0];
    result_2483028231 = (0 <= rawGet_2483028233(t_2483028229, key_2483028230, hc_2483028232, 0));

  return result_2483028231;

}

function contains_2483028220(t_2483028223, key_2483028224) {
  var result_2483028225 = false;

  BeforeRet: {
    result_2483028225 = hasKey_2483028226(t_2483028223, key_2483028224);
    break BeforeRet;
  };

  return result_2483028225;

}

function none_2483028832() {
  var result_2483028839 = ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false});

  return result_2483028839;

}

function HEX5BHEX5D_2483028525(t_2483028528, key_2483028529) {
  var result_2483028530 = null;

    var hcHEX60gensym22_2483028531 = [0];
    var indexHEX60gensym22_2483028538 = rawGet_2483028233(t_2483028528, key_2483028529, hcHEX60gensym22_2483028531, 0);
    if ((0 <= indexHEX60gensym22_2483028538)) {
    result_2483028530 = t_2483028528.data[chckIndx(indexHEX60gensym22_2483028538, 0, (t_2483028528.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2483028529);
    }
    

  return result_2483028530;

}

function contains_855639877(s_855639878, sub_855639879) {
  var result_855639880 = false;

  BeforeRet: {
    result_855639880 = (0 <= nsuFindStr(s_855639878, sub_855639879, 0, -1));
    break BeforeRet;
  };

  return result_855639880;

}

function fromJsonHook_2483028783(style_2483028784, jsonNode_2483028785) {
    var Temporary1;

    style_2483028784 = nimCopy(style_2483028784, ConstSet305, NTI2483028483);
    var Temporary1 = jsonNode_2483028785;
    if (ConstSet306[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
    var text_2483028786 = nimCopy(null, Temporary1.str, NTI33554449);
    if (contains_855639877(text_2483028786, [105,116,97,108,105,99])) {
    style_2483028784[0] = true;
    }
    
    if (contains_855639877(text_2483028786, [98,111,108,100])) {
    style_2483028784[2] = true;
    }
    
    if (contains_855639877(text_2483028786, [117,110,100,101,114,108,105,110,101])) {
    style_2483028784[1] = true;
    }
    

  
}

function fromJson_2483028846(a_2483028848, b_2483028849, opt_2483028850) {
    if (!(!(HEX3DHEX3D_1627392026(b_2483028849, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [115,101,116,91,70,111,110,116,83,116,121,108,101,93], Field1: b_2483028849}));
    }
    
    fromJsonHook_2483028783(a_2483028848, b_2483028849);

  
}

function jsonTo_2483028840(b_2483028842, opt_2483028844) {
  var result_2483028845 = [{}];

    fromJson_2483028846(result_2483028845[0], b_2483028842, opt_2483028844);

  return result_2483028845[0];

}

function jsonToTheme_2483028866(json_2483028867, opt_2483028868) {
      var Temporary2;
      var Temporary6;
            var Temporary9;
                var Temporary12;
                      var Temporary15;

  var result_2483028869 = null;

    result_2483028869 = {path: [], name: [], typ: [], colorSpace: [], colors: ({data: [], counter: 0}), tokenColors: ({data: [], counter: 0})};
    result_2483028869.name = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [110,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    if (hasKey_1627393154(json_2483028867, [116,121,112,101])) {
    result_2483028869.typ = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [116,121,112,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2483028867, [99,111,108,111,114,83,112,97,99,101,78,97,109,101])) {
    result_2483028869.colorSpace = nimCopy(null, jsonTo_1811939884(HEX5BHEX5D_1627393037(json_2483028867, [99,111,108,111,114,83,112,97,99,101,78,97,109,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI33554449);
    }
    
    if (hasKey_1627393154(json_2483028867, [99,111,108,111,114,115])) {
    Label1: {
      var key_2483028889 = [];
      var value_2483028890 = null;
      var colontmp__536871212 = ({data: [], counter: 0, first: 0, last: 0});
      var Temporary2 = HEX5BHEX5D_1627393037(json_2483028867, [99,111,108,111,114,115]);
      if (ConstSet299[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'fields\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI1627389955)); }
      colontmp__536871212 = nimCopy(colontmp__536871212, Temporary2.fields, NTI1627389966);
      var L_536871213 = len_1627392114(colontmp__536871212);
      if ((0 < colontmp__536871212.counter)) {
      var h_536871214 = colontmp__536871212.first;
      Label3: {
          Label4: while (true) {
          if (!(0 <= h_536871214)) break Label4;
            var nxt_536871216 = colontmp__536871212.data[chckIndx(h_536871214, 0, (colontmp__536871212.data).length - 1)].Field1;
            if (isFilled_1308622880(colontmp__536871212.data[chckIndx(h_536871214, 0, (colontmp__536871212.data).length - 1)].Field0)) {
            var colontmp__536871218 = nimCopy(null, {Field0: nimCopy(null, colontmp__536871212.data[chckIndx(h_536871214, 0, (colontmp__536871212.data).length - 1)].Field2, NTI33554449), Field1: colontmp__536871212.data[chckIndx(h_536871214, 0, (colontmp__536871212.data).length - 1)].Field3}, NTI1627391161);
            key_2483028889 = colontmp__536871218["Field0"];
            value_2483028890 = colontmp__536871218["Field1"];
            HEX5BHEX5DHEX3D_2483028936(result_2483028869.colors, key_2483028889, jsonTo_2483028802(value_2483028890, {allowExtraKeys: false, allowMissingKeys: false}));
            if (!((len_1627392114(colontmp__536871212) == L_536871213))) {
            failedAssertImpl_268435515(makeNimstrLit("tables.nim(1723, 11) `len(t) == L` the length of the table changed while iterating over it"));
            }
            
            }
            
            h_536871214 = nxt_536871216;
          }
      };
      }
      
    };
    }
    
    if (hasKey_1627393154(json_2483028867, [116,111,107,101,110,67,111,108,111,114,115])) {
    Label5: {
      var item_2483030201 = null;
      var colontmp__536871229 = [];
      var Temporary6 = HEX5BHEX5D_1627393037(json_2483028867, [116,111,107,101,110,67,111,108,111,114,115]);
      if (ConstSet301[Temporary6.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary6.kind, NTI1627389955)); }
      colontmp__536871229 = Temporary6.elems;
      var i_536871230 = 0;
      var L_536871231 = (colontmp__536871229).length;
      Label7: {
          Label8: while (true) {
          if (!(i_536871230 < L_536871231)) break Label8;
            item_2483030201 = colontmp__536871229[chckIndx(i_536871230, 0, (colontmp__536871229).length - 1)];
            var scopes_2483030206 = [];
            if (hasKey_1627393154(item_2483030201, [115,99,111,112,101])) {
            var scope_2483030207 = HEX5BHEX5D_1627393037(item_2483030201, [115,99,111,112,101]);
            if ((scope_2483030207.kind == 4)) {
            var Temporary9 = scope_2483030207;
            if (ConstSet302[Temporary9.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary9.kind, NTI1627389955)); }
            var Temporary10 = nimCopy(null, Temporary9.str, NTI33554449);
            scopes_2483030206.push(Temporary10);;
            }
            else {
              Label11: {
                var scopeName_2483030219 = null;
                var colontmp__536871221 = [];
                var Temporary12 = scope_2483030207;
                if (ConstSet303[Temporary12.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary12.kind, NTI1627389955)); }
                colontmp__536871221 = Temporary12.elems;
                var i_536871222 = 0;
                var L_536871223 = (colontmp__536871221).length;
                Label13: {
                    Label14: while (true) {
                    if (!(i_536871222 < L_536871223)) break Label14;
                      scopeName_2483030219 = colontmp__536871221[chckIndx(i_536871222, 0, (colontmp__536871221).length - 1)];
                      var Temporary15 = scopeName_2483030219;
                      if (ConstSet304[Temporary15.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary15.kind, NTI1627389955)); }
                      var Temporary16 = nimCopy(null, Temporary15.str, NTI33554449);
                      scopes_2483030206.push(Temporary16);;
                      i_536871222 = addInt(i_536871222, 1);
                      if (!(((colontmp__536871221).length == L_536871223))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            }
            
            }
            else {
            scopes_2483030206.push([46]);;
            }
            
            var settings_2483030228 = HEX5BHEX5D_1627393037(item_2483030201, [115,101,116,116,105,110,103,115]);
            Label17: {
              var scope_2483030232 = [];
              var i_536871226 = 0;
              var L_536871227 = (scopes_2483030206).length;
              Label18: {
                  Label19: while (true) {
                  if (!(i_536871226 < L_536871227)) break Label19;
                    scope_2483030232 = scopes_2483030206[chckIndx(i_536871226, 0, (scopes_2483030206).length - 1)];
                    if (!(contains_2483028220(result_2483028869.tokenColors, scope_2483030232))) {
                    HEX5BHEX5DHEX3D_2483030334(result_2483028869.tokenColors, scope_2483030232, {foreground: none_2483028832(), background: none_2483028832(), fontStyle: {}});
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [102,111,114,101,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).foreground = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).foreground, some_2483028819(jsonTo_2483028802(HEX5BHEX5D_1627393037(settings_2483030228, [102,111,114,101,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2483027980);
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [98,97,99,107,103,114,111,117,110,100])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).background = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).background, some_2483028819(jsonTo_2483028802(HEX5BHEX5D_1627393037(settings_2483030228, [98,97,99,107,103,114,111,117,110,100]), {allowExtraKeys: false, allowMissingKeys: false})), NTI2483027980);
                    }
                    
                    if (hasKey_1627393154(settings_2483030228, [102,111,110,116,83,116,121,108,101])) {
                    HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).fontStyle = nimCopy(HEX5BHEX5D_2483028525(result_2483028869.tokenColors, scope_2483030232).fontStyle, jsonTo_2483028840(HEX5BHEX5D_1627393037(settings_2483030228, [102,111,110,116,83,116,121,108,101]), {allowExtraKeys: false, allowMissingKeys: false}), NTI2483027991);
                    }
                    
                    i_536871226 = addInt(i_536871226, 1);
                    if (!(((scopes_2483030206).length == L_536871227))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536871230 = addInt(i_536871230, 1);
            if (!(((colontmp__536871229).length == L_536871231))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  return result_2483028869;

}

function some_2483031586(val_2483031588) {
  var result_2483031589 = ({val: null});

    if (!(!((val_2483031588 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2483031589.val = val_2483031588;

  return result_2483031589;

}

function none_2483031611() {
  var result_2483031617 = ({val: null});

  return result_2483031617;

}

function loadFromString_2483031576(input_2483031577, path_2483031578) {
  var result_2483031583 = ({val: null});

  BeforeRet: {
++excHandler;
    try {
    var json_2483031584 = parseJson_1627395313(input_2483031577);
    var newTheme_2483031585 = jsonToTheme_2483028866(json_2483031584, {allowExtraKeys: false, allowMissingKeys: false});
    newTheme_2483031585.path = nimCopy(null, path_2483031578, NTI33554449);
    result_2483031583 = nimCopy(result_2483031583, some_2483031586(newTheme_2483031585), NTI2483029956);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2483031604 = [mnewString(0)];
    fmtRes_2483031604[0].push.apply(fmtRes_2483031604[0], [70,97,105,108,101,100,32,116,111,32,108,111,97,100,32,116,104,101,109,101,32,102,114,111,109,32]);;
    formatValue_721420459(fmtRes_2483031604, 0, path_2483031578, []);
    fmtRes_2483031604[0].push.apply(fmtRes_2483031604[0], [58,32]);;
    formatValue_721420459(fmtRes_2483031604, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2483031604[0], NTI33554449)]);
    var fmtRes_2483031610 = [mnewString(0)];
    formatValue_721420459(fmtRes_2483031610, 0, getStackTrace_33556599(getCurrentException()), []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2483031610[0], NTI33554449)]);
    result_2483031583 = nimCopy(result_2483031583, none_2483031611(), NTI2483029956);
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2483031583;

}
  var Temporary273;
var rend_536870946 = [new_536870928()];
init_2315255917(rend_536870946[0]);
var initializedEditor_536870947 = [false];
var ed_536870948 = [newEditor_1291851090(2, rend_536870946[0])];
  var oHEX60gensym0_536870952 = loadFromString_2483031576(makeNimstrLit("{\x0A    \"name\": \"Tokyo Night Storm\",\x0A    \"author\": \"Enkia\",\x0A    \"maintainers\": [\"Enkia <enki77@gmail.com>\"],\x0A    \"type\": \"dark\",\x0A    \"semanticTokenColors\": {\x0A        \"parameter.declaration\": {\x0A            \"foreground\": \"#e0af68\"\x0A        },\x0A        \"parameter\": {\x0A            \"foreground\": \"#cfc9c2\"\x0A        },\x0A        \"property.declaration\": {\x0A            \"foreground\": \"#73daca\"\x0A        },\x0A        \"property.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"*.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.defaultLibrary\": {\x0A            \"foreground\": \"#2ac3de\"\x0A        },\x0A        \"variable.declaration\": {\x0A            \"foreground\": \"#bb9af7\"\x0A        },\x0A        \"variable\": {\x0A            \"foreground\": \"#c0caf5\"\x0A        }\x0A    },\x0A    \"semanticClass\": \"tokyo-night-storm\",\x0A    \"colors\": {\x0A        \"foreground\": \"#7982a9\",\x0A        \"descriptionForeground\": \"#545c7e\",\x0A        \"focusBorder\": \"#545c7e33\",\x0A        \"errorForeground\": \"#5a607d\",\x0A        \"widget.shadow\": \"#ffffff00\",\x0A        \"scrollbar.shadow\": \"#00000033\",\x0A        \"badge.background\": \"#7e83b233\",\x0A        \"badge.foreground\": \"#a9b1d6\",\x0A        \"icon.foreground\": \"#7982a9\",\x0A        \"settings.headerForeground\": \"#6183bb\",\x0A        \"window.activeBorder\": \"#0d0f17\",\x0A        \"window.inactiveBorder\": \"#0d0f17\",\x0A        \"sash.hoverBorder\": \"#29355a\",\x0A\x0A        \"toolbar.activeBackground\": \"#2c324a\",\x0A        \"toolbar.hoverBackground\": \"#2c324a\",\x0A\x0A        \"extensionButton.prominentBackground\": \"#3d59a1DD\",\x0A        \"extensionButton.prominentHoverBackground\": \"#3d59a1AA\",\x0A        \"extensionButton.prominentForeground\": \"#ffffff\",\x0A        \"extensionBadge.remoteBackground\": \"#3d59a1\",\x0A        \"extensionBadge.remoteForeground\": \"#ffffff\",\x0A\x0A        \"button.background\": \"#3d59a1dd\",\x0A        \"button.hoverBackground\": \"#3d59a1AA\",\x0A        \"button.secondaryBackground\": \"#41496b\",\x0A        \"button.foreground\": \"#ffffff\",\x0A        \"progressBar.background\": \"#3d59a1\",\x0A\x0A        \"input.background\": \"#1b1e2e\",\x0A        \"input.foreground\": \"#a9b1d6\",\x0A        \"input.border\": \"#282e44\",\x0A        \"input.placeholderForeground\": \"#4a5272\",\x0A        \"inputOption.activeForeground\": \"#c0caf5\",\x0A        \"inputOption.activeBackground\": \"#3d59a144\",\x0A\x0A        \"inputValidation.infoForeground\": \"#000000\",\x0A        \"inputValidation.infoBackground\": \"#0da0ba\",\x0A        \"inputValidation.infoBorder\": \"#0db9d7\",\x0A        \"inputValidation.warningForeground\": \"#000000\",\x0A        \"inputValidation.warningBackground\": \"#c2985b\",\x0A        \"inputValidation.warningBorder\": \"#e0af68\",\x0A        \"inputValidation.errorForeground\": \"#bbc2e0\",\x0A        \"inputValidation.errorBackground\": \"#85353e\",\x0A        \"inputValidation.errorBorder\": \"#963c47\",\x0A\x0A        \"dropdown.foreground\": \"#7982a9\",\x0A        \"dropdown.background\": \"#1b1e2e\",\x0A        \"dropdown.listBackground\": \"#1b1e2e\",\x0A\x0A        \"activityBar.background\": \"#1f2335\",\x0A        \"activityBar.foreground\": \"#7982a9\",\x0A        \"activityBar.inactiveForeground\": \"#41496b\",\x0A        \"activityBar.border\": \"#1f2335\",\x0A        \"activityBarBadge.background\": \"#3d59a1\",\x0A        \"activityBarBadge.foreground\": \"#fff\",\x0A\x0A        \"tree.indentGuidesStroke\": \"#2e344f\",\x0A        \"sideBar.foreground\": \"#7982a9\",\x0A        \"sideBar.background\": \"#1f2335\",\x0A        \"sideBar.border\": \"#1b1e2e\",\x0A        \"sideBarTitle.foreground\": \"#7982a9\",\x0A        \"sideBarSectionHeader.background\": \"#1f2335\",\x0A        \"sideBarSectionHeader.foreground\": \"#a9b1d6\",\x0A        \"sideBarSectionHeader.border\": \"#1b1e2e\",\x0A        \"sideBar.dropBackground\": \"#292e42\",\x0A\x0A        \"list.dropBackground\": \"#292e42\",\x0A        \"list.deemphasizedForeground\": \"#7982a9\",\x0A        \"list.activeSelectionBackground\": \"#2c324a\",\x0A\x0A        \"list.activeSelectionForeground\": \"#a9b1d6\",\x0A        \"list.inactiveSelectionBackground\": \"#292e42\",\x0A        \"list.inactiveSelectionForeground\": \"#a9b1d6\",\x0A        \"list.focusBackground\": \"#292e42\",\x0A        \"list.focusForeground\": \"#a9b1d6\",\x0A        \"list.hoverBackground\": \"#1b1e2e\",\x0A        \"list.hoverForeground\": \"#a9b1d6\",\x0A\x0A        \"list.highlightForeground\": \"#668ac4\",\x0A        \"list.invalidItemForeground\": \"#c97018\",\x0A        \"list.errorForeground\": \"#bb616b\",\x0A        \"list.warningForeground\": \"#c49a5a\",\x0A\x0A        \"listFilterWidget.background\": \"#1b1e2e\",\x0A        \"listFilterWidget.outline\": \"#3d59a1\",\x0A        \"listFilterWidget.noMatchesOutline\": \"#a6333f\",\x0A\x0A        \"pickerGroup.foreground\": \"#a9b1d6\",\x0A        \"pickerGroup.border\": \"#1b1e2e\",\x0A\x0A        \"scrollbarSlider.background\": \"#9cacff15\",\x0A        \"scrollbarSlider.hoverBackground\": \"#9cacff10\",\x0A        \"scrollbarSlider.activeBackground\": \"#9cacff22\",\x0A\x0A        \"editorBracketHighlight.foreground1\": \"#698cd6\",\x0A        \"editorBracketHighlight.foreground2\": \"#68b3de\",\x0A        \"editorBracketHighlight.foreground3\": \"#9a7ecc\",\x0A        \"editorBracketHighlight.foreground4\": \"#25aac2\",\x0A        \"editorBracketHighlight.foreground5\": \"#80a856\",\x0A        \"editorBracketHighlight.foreground6\": \"#cfa25f\",\x0A        \"editorBracketHighlight.unexpectedBracket.foreground\": \"#db4b4b\",\x0A\x0A        \"editorBracketPairGuide.activeBackground1\": \"#698cd6\",\x0A        \"editorBracketPairGuide.activeBackground2\": \"#68b3de\",\x0A        \"editorBracketPairGuide.activeBackground3\": \"#9a7ecc\",\x0A        \"editorBracketPairGuide.activeBackground4\": \"#25aac2\",\x0A        \"editorBracketPairGuide.activeBackground5\": \"#80a856\",\x0A        \"editorBracketPairGuide.activeBackground6\": \"#cfa25f\",\x0A\x0A        \"selection.background\": \"#7c89ca49\",\x0A        \"editor.background\": \"#24283b\",\x0A        \"editor.foreground\": \"#a9b1d6\",\x0A        \"editor.foldBackground\": \"#181b294a\",\x0A        \"editorLink.activeForeground\": \"#a9b1d6\",\x0A\x0A        \"editor.selectionBackground\": \"#6f7bb630\",\x0A        \"editor.inactiveSelectionBackground\": \"#6f7bb615\",\x0A\x0A        \"editor.findMatchBackground\": \"#3d59a166\",\x0A        \"editor.findMatchBorder\": \"#ffdb69aa\",\x0A        \"editor.findMatchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"editor.findRangeHighlightBackground\": \"#6f7bb625\",\x0A        \"editor.rangeHighlightBackground\": \"#aaa82c31\",\x0A        \"editor.wordHighlightBackground\": \"#6f7bb633\",\x0A        \"editor.wordHighlightStrongBackground\": \"#6f7bb644\",\x0A        \"editor.selectionHighlightBackground\": \"#6f7bb633\",\x0A\x0A        \"editorCursor.foreground\": \"#c0caf5\",\x0A        \"editorIndentGuide.background\": \"#292e42\",\x0A        \"editorIndentGuide.activeBackground\": \"#3b4261\",\x0A        \"editorLineNumber.foreground\": \"#3b4261\",\x0A        \"editorLineNumber.activeForeground\": \"#737aa2\",\x0A        \"editor.lineHighlightBackground\": \"#292e42\",\x0A        \"editorWhitespace.foreground\": \"#3b4261\",\x0A\x0A        \"editorMarkerNavigation.background\": \"#1f2335\",\x0A        \"editorHoverWidget.background\": \"#1f2335\",\x0A        \"editorHoverWidget.border\": \"#1b1e2e\",\x0A\x0A        \"editorBracketMatch.background\": \"#1f2335\",\x0A        \"editorBracketMatch.border\": \"#545c7e\",\x0A\x0A        \"editorOverviewRuler.border\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.errorForeground\": \"#db4b4b\",\x0A        \"editorOverviewRuler.warningForeground\": \"#e0af68\",\x0A        \"editorOverviewRuler.infoForeground\": \"#1abc9c\",\x0A        \"editorOverviewRuler.bracketMatchForeground\": \"#1b1e2e\",\x0A        \"editorOverviewRuler.findMatchForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.rangeHighlightForeground\": \"#a9b1d644\",\x0A        \"editorOverviewRuler.selectionHighlightForeground\": \"#a9b1d622\",\x0A        \"editorOverviewRuler.wordHighlightForeground\": \"#bb9af755\",\x0A        \"editorOverviewRuler.wordHighlightStrongForeground\": \"#bb9af766\",\x0A        \"editorOverviewRuler.modifiedForeground\": \"#3d547a\",\x0A        \"editorOverviewRuler.addedForeground\": \"#164846\",\x0A        \"editorOverviewRuler.deletedForeground\": \"#703438\",\x0A\x0A        \"editorRuler.foreground\": \"#1b1e2e\",\x0A        \"editorError.foreground\": \"#db4b4b\",\x0A        \"editorWarning.foreground\": \"#e0af68\",\x0A        \"editorInfo.foreground\": \"#0da0ba\",\x0A        \"editorHint.foreground\": \"#0da0ba\",\x0A\x0A        \"editorGutter.modifiedBackground\": \"#3d547a\",\x0A        \"editorGutter.addedBackground\": \"#164846\",\x0A        \"editorGutter.deletedBackground\": \"#823c41\",\x0A\x0A        \"editorGhostText.foreground\": \"#7582ba\",\x0A\x0A        \"minimapGutter.modifiedBackground\": \"#3d547a\",\x0A        \"minimapGutter.addedBackground\": \"#1C5957\",\x0A        \"minimapGutter.deletedBackground\": \"#944449\",\x0A\x0A        \"editorGroup.border\": \"#1b1e2e\",\x0A        \"editorGroup.dropBackground\": \"#292e42\",\x0A        \"editorGroupHeader.tabsBorder\": \"#1b1e2e\",\x0A        \"editorGroupHeader.tabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.noTabsBackground\": \"#1f2335\",\x0A        \"editorGroupHeader.border\": \"#1b1e2e\",\x0A\x0A        \"editorPane.background\": \"#1f2335\",\x0A\x0A        \"editorWidget.background\": \"#1f2335\",\x0A        \"editorWidget.resizeBorder\": \"#545c7e33\",\x0A\x0A        \"editorSuggestWidget.background\": \"#1f2335\",\x0A        \"editorSuggestWidget.border\": \"#1b1e2e\",\x0A        \"editorSuggestWidget.selectedBackground\": \"#282e44\",\x0A        \"editorSuggestWidget.highlightForeground\": \"#668ac4\",\x0A\x0A        \"editorCodeLens.foreground\": \"#565f89\",\x0A        \"editorLightBulb.foreground\": \"#e0af68\",\x0A        \"editorLightBulbAutoFix.foreground\": \"#e0af68\",\x0A\x0A        \"peekView.border\": \"#1b1e2e\",\x0A        \"peekViewEditor.background\": \"#1f2335\",\x0A        \"peekViewEditor.matchHighlightBackground\": \"#3d59a166\",\x0A        \"peekViewTitle.background\": \"#1b1e2e\",\x0A        \"peekViewTitleLabel.foreground\": \"#a9b1d6\",\x0A        \"peekViewTitleDescription.foreground\": \"#7982a9\",\x0A        \"peekViewResult.background\": \"#1b1e2e\",\x0A        \"peekViewResult.selectionForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.selectionBackground\": \"#3d59a133\",\x0A        \"peekViewResult.lineForeground\": \"#a9b1d6\",\x0A        \"peekViewResult.fileForeground\": \"#7982a9\",\x0A        \"peekViewResult.matchHighlightBackground\": \"#3d59a166\",\x0A\x0A        \"diffEditor.insertedTextBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedTextBackground\": \"#db4b4b22\",\x0A        \"diffEditor.insertedLineBackground\": \"#41a6b520\",\x0A        \"diffEditor.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorGutter.insertedLineBackground\": \"#41a6b525\",\x0A        \"diffEditorGutter.removedLineBackground\": \"#db4b4b22\",\x0A        \"diffEditorOverview.insertedForeground\": \"#41a6b525\",\x0A        \"diffEditorOverview.removedForeground\": \"#db4b4b22\",\x0A        \"diffEditor.diagonalFill\": \"#2c324a\",\x0A\x0A        \"breadcrumb.background\": \"#1f2335\",\x0A        \"breadcrumbPicker.background\": \"#1f2335\",\x0A        \"breadcrumb.foreground\": \"#545c7e\",\x0A        \"breadcrumb.focusForeground\": \"#a9b1d6\",\x0A        \"breadcrumb.activeSelectionForeground\": \"#a9b1d6\",\x0A\x0A        \"tab.activeBackground\": \"#1f2335\",\x0A        \"tab.inactiveBackground\": \"#1f2335\",\x0A        \"tab.activeForeground\": \"#a9b1d6\",\x0A        \"tab.hoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeBorder\": \"#3d59a1\",\x0A        \"tab.inactiveForeground\": \"#7982a9\",\x0A        \"tab.border\": \"#1b1e2e\",\x0A        \"tab.unfocusedActiveForeground\": \"#a9b1d6\",\x0A        \"tab.unfocusedInactiveForeground\": \"#7982a9\",\x0A        \"tab.unfocusedHoverForeground\": \"#a9b1d6\",\x0A        \"tab.activeModifiedBorder\": \"#282d42\",\x0A        \"tab.inactiveModifiedBorder\": \"#282d42\",\x0A        \"tab.unfocusedActiveBorder\": \"#3b4261\",\x0A        \"tab.lastPinnedBorder\": \"#2c3147\",\x0A\x0A        \"panel.background\": \"#1f2335\",\x0A        \"panel.border\": \"#1b1e2e\",\x0A        \"panelTitle.activeForeground\": \"#a9b1d6\",\x0A        \"panelTitle.inactiveForeground\": \"#7982a9\",\x0A        \"panelTitle.activeBorder\": \"#3d59a1\",\x0A        \"panelInput.border\": \"#1f2335\",\x0A\x0A        \"statusBar.foreground\": \"#7982a9\",\x0A        \"statusBar.background\": \"#1f2335\",\x0A        \"statusBar.border\": \"#1b1e2e\",\x0A        \"statusBar.noFolderBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingBackground\": \"#1f2335\",\x0A        \"statusBar.debuggingForeground\": \"#7982a9\",\x0A        \"statusBarItem.activeBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.hoverBackground\": \"#282e44\",\x0A        \"statusBarItem.prominentBackground\": \"#1b1e2e\",\x0A        \"statusBarItem.prominentHoverBackground\": \"#282e44\",\x0A\x0A        \"titleBar.activeForeground\": \"#7982a9\",\x0A        \"titleBar.inactiveForeground\": \"#7982a9\",\x0A        \"titleBar.activeBackground\": \"#1f2335\",\x0A        \"titleBar.inactiveBackground\": \"#1f2335\",\x0A        \"titleBar.border\": \"#1b1e2e\",\x0A\x0A        \"walkThrough.embeddedEditorBackground\": \"#1f2335\",\x0A        \"textLink.foreground\": \"#668ac4\",\x0A        \"textLink.activeForeground\": \"#7dcfff\",\x0A        \"textPreformat.foreground\": \"#73daca\",\x0A        \"textBlockQuote.background\": \"#1f2335\",\x0A        \"textCodeBlock.background\": \"#1f2335\",\x0A        \"textSeparator.foreground\": \"#545c7e\",\x0A\x0A        \"debugExceptionWidget.border\": \"#963c47\",\x0A        \"debugExceptionWidget.background\": \"#1b1e2e\",\x0A        \"debugToolBar.background\": \"#1b1e2e\",\x0A\x0A        \"debugConsole.infoForeground\": \"#7982a9\",\x0A        \"debugConsole.errorForeground\": \"#bb616b\",\x0A        \"debugConsole.sourceForeground\": \"#7982a9\",\x0A        \"debugConsole.warningForeground\": \"#c49a5a\",\x0A        \"debugConsoleInputIcon.foreground\": \"#73daca\",\x0A\x0A        \"editor.stackFrameHighlightBackground\": \"#e2bd3a20\",\x0A        \"editor.focusedStackFrameHighlightBackground\": \"#73daca20\",\x0A        \"debugView.stateLabelForeground\": \"#7982a9\",\x0A        \"debugView.stateLabelBackground\": \"#1b1e2e\",\x0A        \"debugView.valueChangedHighlight\": \"#3d59a1cc\",\x0A        \"debugTokenExpression.name\": \"#7dcfff\",\x0A        \"debugTokenExpression.value\": \"#9aa5ce\",\x0A        \"debugTokenExpression.string\": \"#9ece6a\",\x0A        \"debugTokenExpression.boolean\": \"#ff9e64\",\x0A        \"debugTokenExpression.number\": \"#ff9e64\",\x0A        \"debugTokenExpression.error\": \"#bb616b\",\x0A\x0A        \"debugIcon.breakpointForeground\": \"#db4b4b\",\x0A        \"debugIcon.breakpointDisabledForeground\": \"#545c7e\",\x0A        \"debugIcon.breakpointUnverifiedForeground\": \"#c24242\",\x0A\x0A        \"terminal.background\": \"#1f2335\",\x0A        \"terminal.foreground\": \"#7982a9\",\x0A        \"terminal.selectionBackground\": \"#6f7bb620\",\x0A\x0A        \"terminal.ansiBlack\": \"#414868\",\x0A        \"terminal.ansiRed\": \"#f7768e\",\x0A        \"terminal.ansiGreen\": \"#73daca\",\x0A        \"terminal.ansiYellow\": \"#e0af68\",\x0A        \"terminal.ansiBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiCyan\": \"#7dcfff\",\x0A        \"terminal.ansiWhite\": \"#7982a9\",\x0A        \"terminal.ansiBrightBlack\": \"#414868\",\x0A        \"terminal.ansiBrightRed\": \"#f7768e\",\x0A        \"terminal.ansiBrightGreen\": \"#73daca\",\x0A        \"terminal.ansiBrightYellow\": \"#e0af68\",\x0A        \"terminal.ansiBrightBlue\": \"#7aa2f7\",\x0A        \"terminal.ansiBrightMagenta\": \"#bb9af7\",\x0A        \"terminal.ansiBrightCyan\": \"#7dcfff\",\x0A        \"terminal.ansiBrightWhite\": \"#a9b1d6\",\x0A\x0A        \"gitDecoration.modifiedResourceForeground\": \"#6183bb\",\x0A        \"gitDecoration.ignoredResourceForeground\": \"#545c7e\",\x0A        \"gitDecoration.deletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.renamedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.addedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.untrackedResourceForeground\": \"#449dab\",\x0A        \"gitDecoration.conflictingResourceForeground\": \"#e0af68cc\",\x0A        \"gitDecoration.stageDeletedResourceForeground\": \"#914c54\",\x0A        \"gitDecoration.stageModifiedResourceForeground\": \"#6183bb\",\x0A\x0A        \"notebook.editorBackground\": \"#24283b\",\x0A        \"notebook.cellEditorBackground\": \"#1f2335\",\x0A        \"notebook.cellBorderColor\": \"#1b1e2e\",\x0A        \"notebook.focusedCellBorder\": \"#29355a\",\x0A        \"notebook.cellStatusBarItemHoverBackground\": \"#2c324a\",\x0A\x0A        \"charts.red\": \"#f7768e\",\x0A        \"charts.blue\": \"#7aa2f7\",\x0A        \"charts.yellow\": \"#e0af68\",\x0A        \"charts.orange\": \"#ff9e64\",\x0A        \"charts.green\": \"#73daca\",\x0A        \"charts.purple\": \"#9d7cd8\",\x0A        \"charts.foreground\": \"#9AA5CE\",\x0A        \"charts.lines\": \"#1f2335\",\x0A\x0A        \"merge.currentHeaderBackground\": \"#41a6b525\",\x0A        \"merge.currentContentBackground\": \"#007a7544\",\x0A        \"merge.incomingHeaderBackground\": \"#3d59a1aa\",\x0A        \"merge.incomingContentBackground\": \"#3d59a144\",\x0A        \"mergeEditor.change.background\": \"#41a6b525\",\x0A        \"mergeEditor.change.word.background\": \"#41a6b540\",\x0A        \"mergeEditor.conflict.unhandledUnfocused.border\": \"#e0af6888\",\x0A        \"mergeEditor.conflict.unhandledFocused.border\": \"#e0af68d9\",\x0A        \"mergeEditor.conflict.handledUnfocused.border\": \"#41a6b525\",\x0A        \"mergeEditor.conflict.handledFocused.border\": \"#41a6b565\",\x0A        \"mergeEditor.conflict.handled.minimapOverViewRuler\": \"#449dab\",\x0A        \"mergeEditor.conflict.unhandled.minimapOverViewRuler\": \"#e0af68\",\x0A\x0A        \"gitlens.trailingLineForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterUncommittedForegroundColor\": \"#565f89\",\x0A        \"gitlens.gutterForegroundColor\": \"#565f89\",\x0A\x0A        \"notificationCenterHeader.background\": \"#1b1e2e\",\x0A        \"notifications.background\": \"#1b1e2e\",\x0A        \"notificationLink.foreground\": \"#6183bb\",\x0A        \"notificationsErrorIcon.foreground\": \"#bb616b\",\x0A        \"notificationsWarningIcon.foreground\": \"#bba461\",\x0A        \"notificationsInfoIcon.foreground\": \"#0da0ba\",\x0A\x0A        \"menubar.selectionForeground\": \"#c0caf5\",\x0A        \"menubar.selectionBackground\": \"#2f3549\",\x0A        \"menubar.selectionBorder\": \"#1b1e2e\",\x0A        \"menu.foreground\": \"#7982a9\",\x0A        \"menu.background\": \"#1f2335\",\x0A        \"menu.selectionForeground\": \"#c0caf5\",\x0A        \"menu.selectionBackground\": \"#2f3549\",\x0A        \"menu.separatorBackground\": \"#1b1e2e\",\x0A        \"menu.border\": \"#1b1e2e\"\x0A    },\x0A    \"tokenColors\": [{\x0A            \"name\": \"Italics - Comments, Storage, Keyword Flow, Vue attributes, Decorators\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"meta.var.expr storage.type\",\x0A                \"keyword.control.flow\",\x0A                \"keyword.control.return\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\",\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Fix YAML block scalar\",\x0A            \"scope\": \"keyword.control.flow.block-scalar.literal\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment\",\x0A            \"scope\": [\x0A                \"comment\",\x0A                \"comment.block.documentation\",\x0A                \"punctuation.definition.comment\",\x0A                \"comment.block.documentation punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc\",\x0A            \"scope\": [\x0A                \"keyword.operator.assignment.jsdoc\",\x0A                \"comment.block.documentation variable\",\x0A                \"comment.block.documentation storage\",\x0A                \"comment.block.documentation keyword\",\x0A                \"comment.block.documentation support\",\x0A                \"comment.block.documentation markup\",\x0A                \"comment.block.documentation markup.inline.raw.string.markdown\",\x0A                \"meta.other.type.phpdoc.php keyword.other.type.php\",\x0A                \"meta.other.type.phpdoc.php support.other.namespace.php\",\x0A                \"meta.other.type.phpdoc.php punctuation.separator.inheritance.php\",\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"keyword.other.phpdoc.php\",\x0A                \"log.date\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#6a75a8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Comment Doc Emphasized\",\x0A            \"scope\": [\x0A                \"meta.other.type.phpdoc.php support.class\",\x0A                \"comment.block.documentation storage.type\",\x0A                \"comment.block.documentation punctuation.definition.block.tag\",\x0A                \"comment.block.documentation entity.name.type.instance\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7582ba\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Number, Boolean, Undefined, Null\",\x0A            \"scope\": [\x0A                \"variable.other.constant\",\x0A                \"punctuation.definition.constant\",\x0A                \"constant.language\",\x0A                \"constant.numeric\",\x0A                \"support.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"String, Symbols\",\x0A            \"scope\": [\x0A                \"string\",\x0A                \"constant.other.symbol\",\x0A                \"constant.other.key\",\x0A                \"meta.attribute-selector\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Colors\",\x0A            \"scope\": [\x0A                \"constant.other.color\",\x0A                \"constant.other.color.rgb-value.hex punctuation.definition.constant\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid\",\x0A            \"scope\": [\x0A                \"invalid\",\x0A                \"invalid.illegal\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff5370\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Invalid deprecated\",\x0A            \"scope\": \"invalid.deprecated\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage Type\",\x0A            \"scope\": \"storage.type\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Storage - modifier, var, const, let\",\x0A            \"scope\": [\x0A                \"meta.var.expr storage.type\",\x0A                \"storage.modifier\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Interpolation / PHP tags / Smarty tags\",\x0A            \"scope\": [\x0A                \"punctuation.definition.template-expression\",\x0A                \"punctuation.section.embedded\",\x0A                \"meta.embedded.line.tag.smarty\",\x0A                \"support.constant.handlebars\",\x0A                \"punctuation.section.tag.twig\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Twig, Smarty, Blade, Handlebars keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.smarty\",\x0A                \"keyword.control.twig\",\x0A                \"support.constant.handlebars keyword.control\",\x0A                \"keyword.operator.comparison.twig\",\x0A                \"keyword.blade\",\x0A                \"entity.name.function.blade\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Spread\",\x0A            \"scope\": [\x0A                \"keyword.operator.spread\",\x0A                \"keyword.operator.rest\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\",\x0A                \"fontStyle\": \"bold\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Operator, Misc\",\x0A            \"scope\": [\x0A                \"keyword.operator\",\x0A                \"keyword.control.as\",\x0A                \"keyword.other\",\x0A                \"keyword.operator.bitwise.shift\",\x0A                \"punctuation\",\x0A                \"expression.embbeded.vue punctuation.definition.tag\",\x0A                \"text.html.twig meta.tag.inline.any.html\",\x0A                \"meta.tag.template.value.twig meta.function.arguments.twig\",\x0A                \"meta.directive.vue punctuation.separator.key-value.html\",\x0A                \"punctuation.definition.constant.markdown\",\x0A                \"punctuation.definition.string\",\x0A                \"punctuation.support.type.property-name\",\x0A                \"text.html.vue-html meta.tag\",\x0A                \"punctuation.definition.keyword\",\x0A                \"punctuation.terminator.rule\",\x0A                \"punctuation.definition.entity\",\x0A                \"punctuation.separator.inheritance.php\",\x0A                \"keyword.other.template\",\x0A                \"keyword.other.substitution\",\x0A                \"entity.name.operator\",\x0A                \"meta.property-list punctuation.separator.key-value\",\x0A                \"meta.at-rule.mixin punctuation.separator.key-value\",\x0A                \"meta.at-rule.function variable.parameter.url\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Import, Export, From, Default\",\x0A            \"scope\": [\x0A                \"keyword.control.import\",\x0A                \"keyword.control.export\",\x0A                \"keyword.control.from\",\x0A                \"keyword.control.default\",\x0A                \"meta.import keyword.other\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword\",\x0A            \"scope\": [\x0A                \"keyword\",\x0A                \"keyword.control\",\x0A                \"keyword.other.important\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f79aeb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword SQL\",\x0A            \"scope\": \"keyword.other.DML\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword Operator Logical, Arrow, Ternary, Comparison\",\x0A            \"scope\": [\x0A                \"keyword.operator.logical\",\x0A                \"storage.type.function\",\x0A                \"keyword.operator.bitwise\",\x0A                \"keyword.operator.ternary\",\x0A                \"keyword.operator.comparison\",\x0A                \"keyword.operator.relational\",\x0A                \"keyword.operator.or.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag\",\x0A            \"scope\": \"entity.name.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Component\",\x0A            \"scope\": [\x0A                \"entity.name.tag support.class.component\",\x0A                \"meta.tag\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#de5971\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Tag Punctuation\",\x0A            \"scope\": \"punctuation.definition.tag\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ba3c97\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Globals, PHP Constants, etc\",\x0A            \"scope\": [\x0A                \"constant.other.php\",\x0A                \"variable.other.global.safer\",\x0A                \"variable.other.global.safer punctuation.definition.variable\",\x0A                \"variable.other.global\",\x0A                \"variable.other.global punctuation.definition.variable\",\x0A                \"constant.other.haskell\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variables\",\x0A            \"scope\": [\x0A                \"variable\",\x0A                \"support.variable\",\x0A                \"string constant.other.placeholder\",\x0A                \"variable.parameter.handlebars\",\x0A                \"variable.other.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \" Variable Array Key\",\x0A            \"scope\": \"meta.array.literal variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Key\",\x0A            \"scope\": [\x0A                \"meta.object-literal.key\",\x0A                \"entity.name.type.hcl\",\x0A                \"string.alias.graphql\",\x0A                \"string.unquoted.graphql\",\x0A                \"string.unquoted.alias.graphql\",\x0A                \"meta.group.braces.curly constant.other.object.key.js string.unquoted.label.js\",\x0A                \"meta.field.declaration.ts variable.object.property\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": [\x0A                \"variable.other.property\",\x0A                \"support.variable.property\",\x0A                \"support.variable.property.dom\",\x0A                \"meta.function-call variable.other.object.property\",\x0A                \"variable.other.object.property.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Property\",\x0A            \"scope\": \"variable.other.object.property\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Object Literal Member lvl 3 (Vue Prop Validation)\",\x0A            \"scope\": \"meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.objectliteral meta.object.member meta.object-literal.key\",\x0A            \"settings\": {\x0A                \"foreground\": \"#41a6b5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"C-related Block Level Variables\",\x0A            \"scope\": \"source.cpp meta.block variable.other\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Other Variable\",\x0A            \"scope\": \"support.other.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Methods\",\x0A            \"scope\": [\x0A                \"meta.class-method.js entity.name.function.js\",\x0A                \"entity.name.method.js\",\x0A                \"variable.function.constructor\",\x0A                \"keyword.other.special-method\",\x0A                \"storage.type.cs\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Definition\",\x0A            \"scope\": [\x0A                \"entity.name.function\",\x0A                \"variable.other.enummember\",\x0A                \"meta.function-call\",\x0A                \"meta.function-call entity.name.function\",\x0A                \"variable.function\",\x0A                \"meta.definition.method entity.name.function\",\x0A                \"meta.object-literal entity.name.function\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Function Argument\",\x0A            \"scope\": [\x0A                \"variable.parameter.function.language.special\",\x0A                \"variable.parameter\",\x0A                \"meta.function.parameters punctuation.definition.variable\",\x0A                \"meta.function.parameter variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0ce68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Constant, Tag Attribute\",\x0A            \"scope\": [\x0A                \"keyword.other.type.php\",\x0A                \"storage.type.php\",\x0A                \"constant.character\",\x0A                \"constant.escape\",\x0A                \"keyword.other.unit\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable Definition\",\x0A            \"scope\": [\x0A                \"meta.definition.variable variable.other.constant\",\x0A                \"meta.definition.variable variable.other.readwrite\",\x0A                \"variable.declaration.hcl variable.other.readwrite.hcl\",\x0A                \"meta.mapping.key.hcl variable.other.readwrite.hcl\",\x0A                \"variable.other.declaration\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inherited Class\",\x0A            \"scope\": \"entity.other.inherited-class\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"\",\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class, Support, DOM, etc\",\x0A            \"scope\": [\x0A                \"support.class\",\x0A                \"support.type\",\x0A                \"variable.other.readwrite.alias\",\x0A                \"support.orther.namespace.use.php\",\x0A                \"meta.use.php\",\x0A                \"support.other.namespace.php\",\x0A                \"support.type.sys-types\",\x0A                \"support.variable.dom\",\x0A                \"support.constant.math\",\x0A                \"support.type.object.module\",\x0A                \"support.constant.json\",\x0A                \"entity.name.namespace\",\x0A                \"meta.import.qualifier\",\x0A                \"variable.other.constant.object\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Class Name\",\x0A            \"scope\": \"entity.name\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Support Function\",\x0A            \"scope\": \"support.function\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class and Support\",\x0A            \"scope\": [\x0A                \"source.css support.type.property-name\",\x0A                \"source.sass support.type.property-name\",\x0A                \"source.scss support.type.property-name\",\x0A                \"source.less support.type.property-name\",\x0A                \"source.stylus support.type.property-name\",\x0A                \"source.postcss support.type.property-name\",\x0A                \"support.type.property-name.css\",\x0A                \"support.type.vendored.property-name\",\x0A                \"support.type.map.key\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Font\",\x0A            \"scope\": [\x0A                \"support.constant.font-name\",\x0A                \"meta.definition.variable\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Class\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.class\",\x0A                \"meta.at-rule.mixin.scss entity.name.function.scss\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\",\x0A            \"scope\": \"entity.other.attribute-name.id\",\x0A            \"settings\": {\x0A                \"foreground\": \"#fc7b7b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag\",\x0A            \"scope\": \"entity.name.tag.css\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Tag Reference, Pseudo & Class Punctuation\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.pseudo-element punctuation.definition.entity\",\x0A                \"entity.other.attribute-name.class punctuation.definition.entity\",\x0A                \"entity.name.tag.reference\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation\",\x0A            \"scope\": \"meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS at-rule fix\",\x0A            \"scope\": [\x0A                \"meta.property-list meta.at-rule.if\",\x0A                \"meta.at-rule.return variable.parameter.url\",\x0A                \"meta.property-list meta.at-rule.else\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Parent Selector Entity\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.parent-selector-suffix punctuation.definition.entity.css\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Punctuation comma fix\",\x0A            \"scope\": \"meta.property-list meta.property-list\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS @\",\x0A            \"scope\": [\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.include entity.name.function.scss\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Mixins, Extends, Include Keyword\",\x0A            \"scope\": [\x0A                \"keyword.control.at-rule.include punctuation.definition.keyword\",\x0A                \"keyword.control.at-rule.mixin punctuation.definition.keyword\",\x0A                \"meta.at-rule.include keyword.control.at-rule.include\",\x0A                \"keyword.control.at-rule.extend punctuation.definition.keyword\",\x0A                \"meta.at-rule.extend keyword.control.at-rule.extend\",\x0A                \"entity.other.attribute-name.placeholder.css punctuation.definition.entity.css\",\x0A                \"meta.at-rule.media keyword.control.at-rule.media\",\x0A                \"meta.at-rule.mixin keyword.control.at-rule.mixin\",\x0A                \"meta.at-rule.function keyword.control.at-rule.function\",\x0A                \"keyword.control punctuation.definition.keyword\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9d7cd8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"SCSS Include Mixin Argument\",\x0A            \"scope\": \"meta.property-list meta.at-rule.include\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS value\",\x0A            \"scope\": \"support.constant.property-value\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ff9e64\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Sub-methods\",\x0A            \"scope\": [\x0A                \"entity.name.module.js\",\x0A                \"variable.import.parameter.js\",\x0A                \"variable.other.class.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Language methods\",\x0A            \"scope\": \"variable.language\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Variable punctuation\",\x0A            \"scope\": \"variable.other punctuation.definition.variable\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Keyword this with Punctuation, ES7 Bind Operator\",\x0A            \"scope\": [\x0A                \"source.js constant.other.object.key.js string.unquoted.label.js\",\x0A                \"variable.language.this punctuation.definition.variable\",\x0A                \"keyword.other.this\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name\",\x0A                \"text.html.basic entity.other.attribute-name.html\",\x0A                \"text.html.basic entity.other.attribute-name\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML Character Entity\",\x0A            \"scope\": \"text.html constant.character.entity\",\x0A            \"settings\": {\x0A                \"foreground\": \"#2AC3DE\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Vue Template attributes\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.id.html\",\x0A                \"meta.directive.vue entity.other.attribute-name.html\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS ID\'s\",\x0A            \"scope\": \"source.sass keyword.control\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS psuedo selectors\",\x0A            \"scope\": [\x0A                \"entity.other.attribute-name.pseudo-class\",\x0A                \"entity.other.attribute-name.pseudo-element\",\x0A                \"entity.other.attribute-name.placeholder\",\x0A                \"meta.property-list meta.property-value\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Inserted\",\x0A            \"scope\": \"markup.inserted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#449dab\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Deleted\",\x0A            \"scope\": \"markup.deleted\",\x0A            \"settings\": {\x0A                \"foreground\": \"#914c54\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Changed\",\x0A            \"scope\": \"markup.changed\",\x0A            \"settings\": {\x0A                \"foreground\": \"#6183bb\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions\",\x0A            \"scope\": \"string.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b4f9f8\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Punctuation\",\x0A            \"scope\": \"punctuation.definition.group\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Character Class Set\",\x0A            \"scope\": [\x0A                \"constant.other.character-class.set.regexp\",\x0A                \"punctuation.definition.character-class.regexp\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Quantifier\",\x0A            \"scope\": \"keyword.operator.quantifier.regexp\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Regular Expressions - Backslash\",\x0A            \"scope\": \"constant.character.escape.backslash\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Escape Characters\",\x0A            \"scope\": \"constant.character.escape\",\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Decorators\",\x0A            \"scope\": [\x0A                \"tag.decorator.js entity.name.tag.js\",\x0A                \"tag.decorator.js punctuation.definition.tag.js\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"CSS Units\",\x0A            \"scope\": \"keyword.other.unit\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 0\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 1\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 2\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#7dcfff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 3\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 4\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#e0af68\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 5\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#2ac3de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 6\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 7\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"JSON Key - Level 8\",\x0A            \"scope\": [\x0A                \"source.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json meta.structure.dictionary.value.json meta.structure.dictionary.json support.type.property-name.json\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9ece6a\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Plain Punctuation\",\x0A            \"scope\": \"punctuation.definition.list_item.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Block Punctuation\",\x0A            \"scope\": [\x0A                \"meta.block\",\x0A                \"meta.brace\",\x0A                \"punctuation.definition.block\",\x0A                \"punctuation.definition.use\",\x0A                \"punctuation.definition.class\",\x0A                \"punctuation.definition.begin.bracket\",\x0A                \"punctuation.definition.end.bracket\",\x0A                \"punctuation.definition.switch-expression.begin.bracket\",\x0A                \"punctuation.definition.switch-expression.end.bracket\",\x0A                \"punctuation.definition.section.switch-block.begin.bracket\",\x0A                \"punctuation.definition.section.switch-block.end.bracket\",\x0A                \"punctuation.definition.group.shell\",\x0A                \"punctuation.definition.parameters\",\x0A                \"punctuation.definition.arguments\",\x0A                \"punctuation.definition.dictionary\",\x0A                \"punctuation.definition.array\",\x0A                \"punctuation.section\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#9abdf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Plain\",\x0A            \"scope\": [\x0A                \"meta.jsx.children\",\x0A                \"meta.embedded.block\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"HTML text\",\x0A            \"scope\": \"text.html\",\x0A            \"settings\": {\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#bb9af7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Markup Raw Inline Punctuation\",\x0A            \"scope\": \"text.html.markdown markup.inline.raw.markdown punctuation.definition.raw.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 1\",\x0A            \"scope\": [\x0A                \"heading.1.markdown entity.name\",\x0A                \"heading.1.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 2\",\x0A            \"scope\": [\x0A                \"heading.2.markdown entity.name\",\x0A                \"heading.2.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#61bdf2\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 3\",\x0A            \"scope\": [\x0A                \"heading.3.markdown entity.name\",\x0A                \"heading.3.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 4\",\x0A            \"scope\": [\x0A                \"heading.4.markdown entity.name\",\x0A                \"heading.4.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#6d91de\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 5\",\x0A            \"scope\": [\x0A                \"heading.5.markdown entity.name\",\x0A                \"heading.5.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#9aa5ce\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Heading 6\",\x0A            \"scope\": [\x0A                \"heading.6.markdown entity.name\",\x0A                \"heading.6.markdown punctuation.definition.heading.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#747ca1\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Italic\",\x0A            \"scope\": [\x0A                \"markup.italic\",\x0A                \"markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold\",\x0A            \"scope\": [\x0A                \"markup.bold\",\x0A                \"markup.bold punctuation\"\x0A\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Bold-Italic\",\x0A            \"scope\": [\x0A                \"markup.bold markup.italic\",\x0A                \"markup.bold markup.italic punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold italic\",\x0A                \"foreground\": \"#c0caf5\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Underline\",\x0A            \"scope\": [\x0A                \"markup.underline\",\x0A                \"markup.underline punctuation\"\x0A            ],\x0A            \"settings\": {\x0A                \"fontStyle\": \"underline\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Blockquote\",\x0A            \"scope\": \"markup.quote punctuation.definition.blockquote.markdown\",\x0A            \"settings\": {\x0A                \"foreground\": \"#4E5579\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Quote\",\x0A            \"scope\": \"markup.quote\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"italic\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Link\",\x0A            \"scope\": [\x0A                \"string.other.link\",\x0A                \"markup.underline.link\",\x0A                \"constant.other.reference.link.markdown\",\x0A                \"string.other.link.description.title.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Fenced Code Block\",\x0A            \"scope\": [\x0A                \"markup.fenced_code.block.markdown\",\x0A                \"markup.inline.raw.string.markdown\",\x0A                \"variable.language.fenced.markdown\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#89ddff\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markdown - Separator\",\x0A            \"scope\": \"meta.separator\",\x0A            \"settings\": {\x0A                \"fontStyle\": \"bold\",\x0A                \"foreground\": \"#565f89\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Markup - Table\",\x0A            \"scope\": \"markup.table\",\x0A            \"settings\": {\x0A                \"foreground\": \"#c0cefc\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Info\",\x0A            \"scope\": \"token.info-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#0db9d7\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Warn\",\x0A            \"scope\": \"token.warn-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#ffdb69\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Error\",\x0A            \"scope\": \"token.error-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#db4b4b\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Token - Debug\",\x0A            \"scope\": \"token.debug-token\",\x0A            \"settings\": {\x0A                \"foreground\": \"#b267e6\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Apache Tag\",\x0A            \"scope\": \"entity.tag.apacheconf\",\x0A            \"settings\": {\x0A                \"foreground\": \"#f7768e\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"Preprocessor\",\x0A            \"scope\": [\x0A                \"meta.preprocessor\"\x0A            ],\x0A            \"settings\": {\x0A                \"foreground\": \"#73daca\"\x0A            }\x0A        },\x0A        {\x0A            \"name\": \"ENV value\",\x0A            \"scope\": \"source.env\",\x0A            \"settings\": {\x0A                \"foreground\": \"#7aa2f7\"\x0A            }\x0A        }\x0A    ]\x0A}"), [115,116,114,105,110,103]);
  if (!isSome_1291851007(oHEX60gensym0_536870952)) Temporary273 = false; else {    var theme_536870975 = get_1291851027(oHEX60gensym0_536870952);
    Temporary273 = true;  }if (Temporary273) {
ed_536870948[0].theme = theme_536870975;
}

setLayout_1291855651(ed_536870948[0], [102,105,98,111,110,97,99,99,105]);
var frameTime_536870976 = [0.0];
var frameIndex_536870977 = [0];
var hasRequestedRerender_536870978 = [false];

function color_2365587528(r_2365587529, g_2365587530, b_2365587531, a_2365587532) {
  var result_2365587533 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2365587533 = nimCopy(result_2365587533, {r: r_2365587529, g: g_2365587530, b: b_2365587531, a: a_2365587532}, NTI2365587459);

  return result_2365587533;

}

function rawGet_3221225639(t_3221225642, key_3221225643, hc_3221225644, hc_3221225644_Idx) {
  var result_3221225645 = 0;

  BeforeRet: {
    hc_3221225644[hc_3221225644_Idx] = hash_1325400236(key_3221225643);
    if ((hc_3221225644[hc_3221225644_Idx] == 0)) {
    hc_3221225644[hc_3221225644_Idx] = 314159265;
    }
    
    if (((t_3221225642.data).length == 0)) {
    result_3221225645 = -1;
    break BeforeRet;
    }
    
    var h_3221225700 = (hc_3221225644[hc_3221225644_Idx] & (t_3221225642.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3221225642.data[chckIndx(h_3221225700, 0, (t_3221225642.data).length - 1)].Field0)) break Label2;
          if (((t_3221225642.data[chckIndx(h_3221225700, 0, (t_3221225642.data).length - 1)].Field0 == hc_3221225644[hc_3221225644_Idx]) && (t_3221225642.data[chckIndx(h_3221225700, 0, (t_3221225642.data).length - 1)].Field1 == key_3221225643))) {
          result_3221225645 = h_3221225700;
          break BeforeRet;
          }
          
          h_3221225700 = nextTry_1308622883(h_3221225700, (t_3221225642.data).length - 1);
        }
    };
    result_3221225645 = subInt(-1, h_3221225700);
  };

  return result_3221225645;

}

function hasKey_3221225632(t_3221225635, key_3221225636) {
  var result_3221225637 = false;

    var hc_3221225638 = [0];
    result_3221225637 = (0 <= rawGet_3221225639(t_3221225635, key_3221225636, hc_3221225638, 0));

  return result_3221225637;

}

function contains_3221225626(t_3221225629, key_3221225630) {
  var result_3221225631 = false;

  BeforeRet: {
    result_3221225631 = hasKey_3221225632(t_3221225629, key_3221225630);
    break BeforeRet;
  };

  return result_3221225631;

}

function HEX5BHEX5D_3221225925(t_3221225928, key_3221225929) {
  var result_3221225930 = null;
  var result_3221225930_Idx = 0;

    var hcHEX60gensym22_3221225931 = [0];
    var indexHEX60gensym22_3221225938 = rawGet_3221225639(t_3221225928, key_3221225929, hcHEX60gensym22_3221225931, 0);
    if ((0 <= indexHEX60gensym22_3221225938)) {
    result_3221225930 = t_3221225928.data[chckIndx(indexHEX60gensym22_3221225938, 0, (t_3221225928.data).length - 1)]; result_3221225930_Idx = "Field2";
    }
    else {
    raiseKeyError_1291850841(key_3221225929);
    }
    

  return [result_3221225930, result_3221225930_Idx];

}

function mustRehash_3221226217(t_3221226219) {
  var result_3221226220 = false;

    if (!((t_3221226219.counter < (t_3221226219.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3221226220 = ((mulInt((t_3221226219.data).length, 2) < mulInt(t_3221226219.counter, 3)) || (subInt((t_3221226219.data).length, t_3221226219.counter) < 4));

  return result_3221226220;

}

function rawInsert_3221226666(t_3221226670, data_3221226671, data_3221226671_Idx, key_3221226672, val_3221226673, hc_3221226674, h_3221226675) {
    data_3221226671[data_3221226671_Idx][chckIndx(h_3221226675, 0, (data_3221226671[data_3221226671_Idx]).length - 1)].Field1 = key_3221226672;
    data_3221226671[data_3221226671_Idx][chckIndx(h_3221226675, 0, (data_3221226671[data_3221226671_Idx]).length - 1)].Field2 = val_3221226673;
    data_3221226671[data_3221226671_Idx][chckIndx(h_3221226675, 0, (data_3221226671[data_3221226671_Idx]).length - 1)].Field0 = hc_3221226674;

  
}

function enlarge_3221226372(t_3221226375) {
    var n_3221226378 = [];
    n_3221226378 = new Array(chckRange(mulInt((t_3221226375.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3221226375.data).length, 2), 0, 2147483647) ; ++i) { n_3221226378[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_3221226375.data; t_3221226375.data = n_3221226378; n_3221226378 = Temporary1;    Label2: {
      var i_3221226442 = 0;
      var colontmp__536871830 = 0;
      colontmp__536871830 = (n_3221226378).length - 1;
      var res_536871831 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536871831 <= colontmp__536871830)) break Label4;
            i_3221226442 = res_536871831;
            var eh_3221226496 = n_3221226378[chckIndx(i_3221226442, 0, (n_3221226378).length - 1)].Field0;
            if (isFilled_1308622880(eh_3221226496)) {
            var j_3221226500 = (eh_3221226496 & (t_3221226375.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3221226375.data[chckIndx(j_3221226500, 0, (t_3221226375.data).length - 1)].Field0)) break Label6;
                  j_3221226500 = nextTry_1308622883(j_3221226500, (t_3221226375.data).length - 1);
                }
            };
            rawInsert_3221226666(t_3221226375, t_3221226375, "data", n_3221226378[chckIndx(i_3221226442, 0, (n_3221226378).length - 1)].Field1, n_3221226378[chckIndx(i_3221226442, 0, (n_3221226378).length - 1)].Field2, eh_3221226496, j_3221226500);
            }
            
            res_536871831 = addInt(res_536871831, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3221226835(t_3221226838, key_3221226839, hc_3221226840) {
  var result_3221226841 = 0;

  BeforeRet: {
    if (((t_3221226838.data).length == 0)) {
    result_3221226841 = -1;
    break BeforeRet;
    }
    
    var h_3221226892 = (hc_3221226840 & (t_3221226838.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3221226838.data[chckIndx(h_3221226892, 0, (t_3221226838.data).length - 1)].Field0)) break Label2;
          if (((t_3221226838.data[chckIndx(h_3221226892, 0, (t_3221226838.data).length - 1)].Field0 == hc_3221226840) && (t_3221226838.data[chckIndx(h_3221226892, 0, (t_3221226838.data).length - 1)].Field1 == key_3221226839))) {
          result_3221226841 = h_3221226892;
          break BeforeRet;
          }
          
          h_3221226892 = nextTry_1308622883(h_3221226892, (t_3221226838.data).length - 1);
        }
    };
    result_3221226841 = subInt(-1, h_3221226892);
  };

  return result_3221226841;

}

function HEX5BHEX5DHEX3D_3221226044(t_3221226047, key_3221226048, val_3221226049) {
    if (((t_3221226047.data).length == 0)) {
    var correctSizeHEX60gensym5_3221226098 = slotsNeeded_1308622891(32);
    t_3221226047.counter = 0;
    t_3221226047.data = new Array(chckRange(correctSizeHEX60gensym5_3221226098, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym5_3221226098, 0, 2147483647) ; ++i) { t_3221226047.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_3221226103 = [0];
    var index_3221226110 = rawGet_3221225639(t_3221226047, key_3221226048, hc_3221226103, 0);
    if ((0 <= index_3221226110)) {
    t_3221226047.data[chckIndx(index_3221226110, 0, (t_3221226047.data).length - 1)].Field2 = val_3221226049;
    }
    else {
      if (((t_3221226047.data).length == 0)) {
      var correctSizeHEX60gensym8_3221226212 = slotsNeeded_1308622891(32);
      t_3221226047.counter = 0;
      t_3221226047.data = new Array(chckRange(correctSizeHEX60gensym8_3221226212, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym8_3221226212, 0, 2147483647) ; ++i) { t_3221226047.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_3221226217(t_3221226047)) {
      enlarge_3221226372(t_3221226047);
      index_3221226110 = rawGetKnownHC_3221226835(t_3221226047, key_3221226048, hc_3221226103[0]);
      }
      
      index_3221226110 = subInt(-1, index_3221226110);
      rawInsert_3221226666(t_3221226047, t_3221226047, "data", key_3221226048, val_3221226049, hc_3221226103[0], index_3221226110);
      t_3221226047.counter = addInt(t_3221226047.counter, 1);
    }
    

  
}

function activeHEX3D_2147483758(self_2147483759, newActive_2147483760) {
    if (!((newActive_2147483760 == self_2147483759.active))) {
    markDirty_2147483686(self_2147483759);
    }
    
    self_2147483759.active = newActive_2147483760;

  
}

function HEX5BHEX5D_3221227089(s_3221227093, x_3221227094) {
  var result_3221227095 = [];

    var a_3221227097 = x_3221227094.a;
    var L_3221227103 = addInt(subInt(subInt((s_3221227093).length, x_3221227094.b), a_3221227097), 1);
    result_3221227095 = new Array(chckRange(L_3221227103, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_3221227103, 0, 2147483647) ; ++i) { result_3221227095[i] = null; }    Label1: {
      var i_3221227112 = 0;
      var i_536871835 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871835 < L_3221227103)) break Label3;
            i_3221227112 = i_536871835;
            result_3221227095[chckIndx(i_3221227112, 0, (result_3221227095).length - 1)] = s_3221227093[chckIndx(addInt(i_3221227112, a_3221227097), 0, (s_3221227093).length - 1)];
            i_536871835 = addInt(i_536871835, 1);
          }
      };
    };

  return result_3221227095;

}

function find_3221227317(a_3221227320, item_3221227321) {
  var result_3221227322 = 0;

  BeforeRet: {
    result_3221227322 = 0;
    Label1: {
      var i_3221227335 = null;
      var i_536871839 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536871839 < (a_3221227320).length)) break Label3;
            i_3221227335 = a_3221227320[chckIndx(i_536871839, 0, (a_3221227320).length - 1)];
            if ((i_3221227335 == item_3221227321)) {
            break BeforeRet;
            }
            
            result_3221227322 = addInt(result_3221227322, 1);
            i_536871839 = addInt(i_536871839, 1);
          }
      };
    };
    result_3221227322 = -1;
  };

  return result_3221227322;

}

function contains_3221227312(a_3221227314, item_3221227315) {
  var result_3221227316 = false;

  BeforeRet: {
    result_3221227316 = (0 <= find_3221227317(a_3221227314, item_3221227315));
    break BeforeRet;
  };

  return result_3221227316;

}

function contains_2063597766(a_2063597767, b_2063597768) {
  var result_2063597769 = false;

  BeforeRet: {
    result_2063597769 = ((((a_2063597767.x <= b_2063597768.x) && ((b_2063597768.x + b_2063597768.w) <= (a_2063597767.x + a_2063597767.w))) && (a_2063597767.y <= b_2063597768.y)) && ((b_2063597768.y + b_2063597768.h) <= (a_2063597767.y + a_2063597767.h)));
    break BeforeRet;
  };

  return result_2063597769;

}

function invalidate_2332033255(self_2332033256, currentIndex_2332033257, rect_2332033258) {
  BeforeRet: {
    if ((!(intersects_2063597753(self_2332033256.lastBounds, rect_2332033258)) || ((currentIndex_2332033257 <= self_2332033256.lastInvalidation) && contains_2063597766(self_2332033256.lastInvalidationRect, rect_2332033258)))) {
    break BeforeRet;
    }
    
    self_2332033256.lastInvalidationRect = nimCopy(self_2332033256.lastInvalidationRect, and_2080374876(rect_2332033258, self_2332033256.lastBounds), NTI2080374789);
    self_2332033256.lastInvalidation = currentIndex_2332033257;
    if (isObj(self_2332033256.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033268 = null;
      var colontmp__536871842 = [];
      colontmp__536871842 = self_2332033256.children;
      var i_536871843 = 0;
      var L_536871844 = (colontmp__536871842).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871843 < L_536871844)) break Label3;
            c_2332033268 = colontmp__536871842[chckIndx(i_536871843, 0, (colontmp__536871842).length - 1)];
            invalidate_2332033255(c_2332033268, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871843 = addInt(i_536871843, 1);
            if (!(((colontmp__536871842).length == L_536871844))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033278 = null;
      var colontmp__536871847 = [];
      colontmp__536871847 = self_2332033256.children;
      var i_536871848 = 0;
      var L_536871849 = (colontmp__536871847).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871848 < L_536871849)) break Label6;
            c_2332033278 = colontmp__536871847[chckIndx(i_536871848, 0, (colontmp__536871847).length - 1)];
            invalidate_2332033255(c_2332033278, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871848 = addInt(i_536871848, 1);
            if (!(((colontmp__536871847).length == L_536871849))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033288 = null;
      var colontmp__536871852 = [];
      colontmp__536871852 = self_2332033256.children;
      var i_536871853 = 0;
      var L_536871854 = (colontmp__536871852).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871853 < L_536871854)) break Label9;
            c_2332033288 = colontmp__536871852[chckIndx(i_536871853, 0, (colontmp__536871852).length - 1)];
            invalidate_2332033255(c_2332033288, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871853 = addInt(i_536871853, 1);
            if (!(((colontmp__536871852).length == L_536871854))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033256.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033298 = null;
      var colontmp__536871857 = [];
      colontmp__536871857 = self_2332033256.children;
      var i_536871858 = 0;
      var L_536871859 = (colontmp__536871857).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871858 < L_536871859)) break Label12;
            c_2332033298 = colontmp__536871857[chckIndx(i_536871858, 0, (colontmp__536871857).length - 1)];
            invalidate_2332033255(c_2332033298, currentIndex_2332033257, self_2332033256.lastInvalidationRect);
            i_536871858 = addInt(i_536871858, 1);
            if (!(((colontmp__536871857).length == L_536871859))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}
  };

  
}

function hasKey_3170894409(t_3170894412, key_3170894413) {
  var result_3170894414 = false;

    var hc_3170894415 = [0];
    result_3170894414 = (0 <= rawGet_2483028997(t_3170894412, key_3170894413, hc_3170894415, 0));

  return result_3170894414;

}

function contains_3170894403(t_3170894406, key_3170894407) {
  var result_3170894408 = false;

  BeforeRet: {
    result_3170894408 = hasKey_3170894409(t_3170894406, key_3170894407);
    break BeforeRet;
  };

  return result_3170894408;

}

function HEX5BHEX5D_3170894493(t_3170894496, key_3170894497) {
  var result_3170894498 = null;

    var hcHEX60gensym22_3170894499 = [0];
    var indexHEX60gensym22_3170894506 = rawGet_2483028997(t_3170894496, key_3170894497, hcHEX60gensym22_3170894499, 0);
    if ((0 <= indexHEX60gensym22_3170894506)) {
    result_3170894498 = t_3170894496.data[chckIndx(indexHEX60gensym22_3170894506, 0, (t_3170894496.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_3170894497);
    }
    

  return result_3170894498;

}

function max_855639778(x_855639780, y_855639781) {
    var Temporary1;

  var result_855639782 = 0;

    if ((y_855639781 <= x_855639780)) {
    Temporary1 = x_855639780;
    }
    else {
    Temporary1 = y_855639781;
    }
    
    result_855639782 = Temporary1;

  return result_855639782;

}

function nsuRFindStr(s_855639772, sub_855639773, start_855639774, last_855639775) {
    var Temporary1;
    var Temporary2;

  var result_855639776 = 0;

  BeforeRet: {
    if (((sub_855639773).length == 0)) {
    if ((last_855639775 < 0)) {
    Temporary1 = (s_855639772).length;
    }
    else {
    Temporary1 = last_855639775;
    }
    
    var rightIndex_855639777 = chckRange(Temporary1, 0, 2147483647);
    result_855639776 = max_855639778(start_855639774, rightIndex_855639777);
    break BeforeRet;
    }
    
    if ((subInt((s_855639772).length, start_855639774) < (sub_855639773).length)) {
    result_855639776 = -1;
    break BeforeRet;
    }
    
    if ((last_855639775 == -1)) {
    Temporary2 = (s_855639772).length - 1;
    }
    else {
    Temporary2 = last_855639775;
    }
    
    var last_855639783 = Temporary2;
    result_855639776 = 0;
    Label3: {
      var i_855639789 = 0;
      var colontmp__536871866 = 0;
      var colontmp__536871867 = 0;
      colontmp__536871866 = addInt(subInt(last_855639783, (sub_855639773).length), 1);
      colontmp__536871867 = start_855639774;
      var res_536871868 = colontmp__536871866;
      Label4: {
          Label5: while (true) {
          if (!(colontmp__536871867 <= res_536871868)) break Label5;
            i_855639789 = res_536871868;
            Label6: {
              var j_855639794 = 0;
              var colontmp__536871863 = 0;
              colontmp__536871863 = subInt((sub_855639773).length, 1);
              var res_536871864 = 0;
              Label7: {
                  Label8: while (true) {
                  if (!(res_536871864 <= colontmp__536871863)) break Label8;
                    j_855639794 = res_536871864;
                    result_855639776 = i_855639789;
                    if (!((sub_855639773[chckIndx(j_855639794, 0, (sub_855639773).length - 1)] == s_855639772[chckIndx(addInt(i_855639789, j_855639794), 0, (s_855639772).length - 1)]))) {
                    result_855639776 = -1;
                    break Label6;
                    }
                    
                    res_536871864 = addInt(res_536871864, 1);
                  }
              };
            };
            if (!((result_855639776 == -1))) {
            break BeforeRet;
            }
            
            res_536871868 = subInt(res_536871868, 1);
          }
      };
    };
    result_855639776 = -1;
    break BeforeRet;
  };

  return result_855639776;

}

function getCascading_3254780005(table_3254780007, key_3254780008, default_3254780009) {
  var result_3254780010 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    if (contains_3170894403(table_3254780007, key_3254780008)) {
    result_3254780010 = nimCopy(result_3254780010, HEX5BHEX5D_3170894493(table_3254780007, key_3254780008), NTI2365587459);
    break BeforeRet;
    }
    
    var index_3254780116 = nsuRFindStr(key_3254780008, [46], 0, -1);
    if (!((index_3254780116 == -1))) {
    result_3254780010 = nimCopy(result_3254780010, getCascading_3254780005(table_3254780007, HEX5BHEX5D_855639291(key_3254780008, HEX2EHEX2E_805306418(0, subInt(index_3254780116, 1))), default_3254780009), NTI2365587459);
    break BeforeRet;
    }
    
    result_3254780010 = nimCopy(result_3254780010, default_3254780009, NTI2365587459);
    break BeforeRet;
  };

  return result_3254780010;

}

function color_3254779994(theme_3254779996, name_3254779997, default_3254779998) {
  var result_3254779999 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3254779999 = nimCopy(result_3254779999, getCascading_3254780005(theme_3254779996.colors, name_3254779997, color_2449473569(default_3254779998)), NTI2365587459);
    break BeforeRet;
  };

  return result_3254779999;

}

function HEX3DHEX3D_2332033092(x_2332033094, y_2332033095) {
  var result_2332033096 = false;

  BeforeRet: {
    if (!((x_2332033094.r == y_2332033095.r))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.g == y_2332033095.g))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.b == y_2332033095.b))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    if (!((x_2332033094.a == y_2332033095.a))) {
    result_2332033096 = false;
    break BeforeRet;
    }
    
    result_2332033096 = true;
    break BeforeRet;
  };

  return result_2332033096;

}

function updateForegroundColor_2332033088(self_2332033089, color_2332033090, frameIndex_2332033091) {
    if (!(HEX3DHEX3D_2332033092(self_2332033089.foregroundColor, color_2332033090))) {
    self_2332033089.lastHierarchyChange = nimMax(self_2332033089.lastHierarchyChange, frameIndex_2332033091);
    }
    
    self_2332033089.foregroundColor = nimCopy(self_2332033089.foregroundColor, color_2332033090, NTI2365587459);

  
}

function updateLastHierarchyChangeFromChildren_2332033110(self_2332033111, currentIndex_2332033112) {
    if (isObj(self_2332033111.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033142 = null;
      var colontmp__536871871 = [];
      colontmp__536871871 = self_2332033111.children;
      var i_536871872 = 0;
      var L_536871873 = (colontmp__536871871).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871872 < L_536871873)) break Label3;
            c_2332033142 = colontmp__536871871[chckIndx(i_536871872, 0, (colontmp__536871871).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033142, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033142.lastHierarchyChange), c_2332033142.lastBoundsChange);
            i_536871872 = addInt(i_536871872, 1);
            if (!(((colontmp__536871871).length == L_536871873))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033153 = null;
      var colontmp__536871876 = [];
      colontmp__536871876 = self_2332033111.children;
      var i_536871877 = 0;
      var L_536871878 = (colontmp__536871876).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871877 < L_536871878)) break Label6;
            c_2332033153 = colontmp__536871876[chckIndx(i_536871877, 0, (colontmp__536871876).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033153, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033153.lastHierarchyChange), c_2332033153.lastBoundsChange);
            i_536871877 = addInt(i_536871877, 1);
            if (!(((colontmp__536871876).length == L_536871878))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033164 = null;
      var colontmp__536871881 = [];
      colontmp__536871881 = self_2332033111.children;
      var i_536871882 = 0;
      var L_536871883 = (colontmp__536871881).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871882 < L_536871883)) break Label9;
            c_2332033164 = colontmp__536871881[chckIndx(i_536871882, 0, (colontmp__536871881).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033164, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033164.lastHierarchyChange), c_2332033164.lastBoundsChange);
            i_536871882 = addInt(i_536871882, 1);
            if (!(((colontmp__536871881).length == L_536871883))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033175 = null;
      var colontmp__536871886 = [];
      colontmp__536871886 = self_2332033111.children;
      var i_536871887 = 0;
      var L_536871888 = (colontmp__536871886).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871887 < L_536871888)) break Label12;
            c_2332033175 = colontmp__536871886[chckIndx(i_536871887, 0, (colontmp__536871886).length - 1)];
            updateLastHierarchyChangeFromChildren_2332033110(c_2332033175, currentIndex_2332033112);
            self_2332033111.lastHierarchyChange = nimMax(nimMax(self_2332033111.lastHierarchyChange, c_2332033175.lastHierarchyChange), c_2332033175.lastBoundsChange);
            i_536871887 = addInt(i_536871887, 1);
            if (!(((colontmp__536871886).length == L_536871888))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033111.m_type, NTI2332033044)) {
    if (!(eqStrings(self_2332033111.text, self_2332033111.lastRenderedText))) {
    self_2332033111.lastHierarchyChange = nimMax(self_2332033111.lastHierarchyChange, currentIndex_2332033112);
    }
    
    }
    }}}}

  
}

function updateStatusBar_3221225488(self_3221225489, frameIndex_3221225490, statusBarWidget_3221225491) {
    var Temporary1;

    var statusWidget_3221225492 = null;
    var commandLineWidget_3221225493 = null;
    if (((statusBarWidget_3221225491.children).length == 0)) {
    statusWidget_3221225492 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.5)}, NTI2332033035), lastHierarchyChange: frameIndex_3221225490, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3221225491.children.push(statusWidget_3221225492);;
    commandLineWidget_3221225493 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.5), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3221225490, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    statusBarWidget_3221225491.children.push(commandLineWidget_3221225493);;
    layoutWidget_2332033348(statusWidget_3221225492, statusBarWidget_3221225491.lastBounds, frameIndex_3221225490, self_3221225489.platform.layoutOptions);
    layoutWidget_2332033348(commandLineWidget_3221225493, statusBarWidget_3221225491.lastBounds, frameIndex_3221225490, self_3221225489.platform.layoutOptions);
    }
    else {
      statusWidget_3221225492 = statusBarWidget_3221225491.children[chckIndx(0, 0, (statusBarWidget_3221225491.children).length - 1)];
      commandLineWidget_3221225493 = statusBarWidget_3221225491.children[chckIndx(1, 0, (statusBarWidget_3221225491.children).length - 1)];
    }
    
    var textColor_3221225510 = color_3254779994(self_3221225489.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((self_3221225489.currentMode).length == 0)) {
    Temporary1 = [110,111,114,109,97,108];
    }
    else {
    Temporary1 = self_3221225489.currentMode;
    }
    
    statusWidget_3221225492.text = nimCopy(null, Temporary1, NTI33554449);
    updateForegroundColor_2332033088(statusWidget_3221225492, textColor_3221225510, frameIndex_3221225490);
    updateLastHierarchyChangeFromChildren_2332033110(statusWidget_3221225492, frameIndex_3221225490);
    statusBarWidget_3221225491.lastHierarchyChange = nimMax(statusBarWidget_3221225491.lastHierarchyChange, statusWidget_3221225492.lastHierarchyChange);
    activeHEX3D_2147483758(getCommandLineTextEditor_1291851054(self_3221225489), self_3221225489.commandLineMode);
    updateWidget_3238002698(getCommandLineTextEditor_1291851054(self_3221225489), self_3221225489, commandLineWidget_3221225493, frameIndex_3221225490);
    statusBarWidget_3221225491.lastHierarchyChange = nimMax(statusBarWidget_3221225491.lastHierarchyChange, commandLineWidget_3221225493.lastHierarchyChange);

  
}

function updateInvalidationFromChildren_2332033299(self_2332033300, currentIndex_2332033301, recurse_2332033302) {
    if (isObj(self_2332033300.m_type, NTI2332033036)) {
    Label1: {
      var c_2332033312 = null;
      var colontmp__536871891 = [];
      colontmp__536871891 = self_2332033300.children;
      var i_536871892 = 0;
      var L_536871893 = (colontmp__536871891).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871892 < L_536871893)) break Label3;
            c_2332033312 = colontmp__536871891[chckIndx(i_536871892, 0, (colontmp__536871891).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033312, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033312.lastInvalidation), currentIndex_2332033301);
            i_536871892 = addInt(i_536871892, 1);
            if (!(((colontmp__536871891).length == L_536871893))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033038)) {
    Label4: {
      var c_2332033322 = null;
      var colontmp__536871896 = [];
      colontmp__536871896 = self_2332033300.children;
      var i_536871897 = 0;
      var L_536871898 = (colontmp__536871896).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536871897 < L_536871898)) break Label6;
            c_2332033322 = colontmp__536871896[chckIndx(i_536871897, 0, (colontmp__536871896).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033322, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033322.lastInvalidation), currentIndex_2332033301);
            i_536871897 = addInt(i_536871897, 1);
            if (!(((colontmp__536871896).length == L_536871898))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033040)) {
    Label7: {
      var c_2332033332 = null;
      var colontmp__536871901 = [];
      colontmp__536871901 = self_2332033300.children;
      var i_536871902 = 0;
      var L_536871903 = (colontmp__536871901).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536871902 < L_536871903)) break Label9;
            c_2332033332 = colontmp__536871901[chckIndx(i_536871902, 0, (colontmp__536871901).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033332, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033332.lastInvalidation), currentIndex_2332033301);
            i_536871902 = addInt(i_536871902, 1);
            if (!(((colontmp__536871901).length == L_536871903))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    else {
    if (isObj(self_2332033300.m_type, NTI2332033042)) {
    Label10: {
      var c_2332033342 = null;
      var colontmp__536871906 = [];
      colontmp__536871906 = self_2332033300.children;
      var i_536871907 = 0;
      var L_536871908 = (colontmp__536871906).length;
      Label11: {
          Label12: while (true) {
          if (!(i_536871907 < L_536871908)) break Label12;
            c_2332033342 = colontmp__536871906[chckIndx(i_536871907, 0, (colontmp__536871906).length - 1)];
            if (recurse_2332033302) {
            updateInvalidationFromChildren_2332033299(c_2332033342, currentIndex_2332033301, recurse_2332033302);
            }
            
            self_2332033300.lastInvalidation = nimMax(nimMax(self_2332033300.lastInvalidation, c_2332033342.lastInvalidation), currentIndex_2332033301);
            i_536871907 = addInt(i_536871907, 1);
            if (!(((colontmp__536871906).length == L_536871908))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    }}}

  
}

function updateWidgetTree_3221225550(self_3221225551, frameIndex_3221225552) {
            var Temporary4;
            var Temporary8;

    if ((self_3221225551.widget == null)) {
    mainStack_3221225512[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), right: -1.0, logLayout: false, m_type: NTI2332033038, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
    self_3221225551.widget = mainStack_3221225512[0];
    mainPanel_3221225514[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainStack_3221225512[0].children.push(mainPanel_3221225514[0]);;
    viewPanel_3221225513[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), bottom: (-2.0 * totalLineHeight_2315255960(self_3221225551.platform)), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    mainPanel_3221225514[0].children.push(viewPanel_3221225513[0]);;
    commandLineWidget_3221225511[0] = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 1.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), top: (-2.0 * totalLineHeight_2315255960(self_3221225551.platform)), fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    mainPanel_3221225514[0].children.push(commandLineWidget_3221225511[0]);;
    layoutWidget_2332033348(self_3221225551.widget, rect_2080374808(vec2_2097152992(0.0, 0.0), size_2315255913(self_3221225551.platform)), frameIndex_3221225552, self_3221225551.platform.layoutOptions);
    }
    
    if (viewPanel_3221225513[0].children.length < 0) { for (var i = viewPanel_3221225513[0].children.length ; i < 0 ; ++i) viewPanel_3221225513[0].children.push(null); }
               else { viewPanel_3221225513[0].children.length = 0; };
    var rects_3221225575 = layoutViews_1291848219(self_3221225551.layout, self_3221225551.layout_props, rect_2080374802(0.0, 0.0, 1.0, 1.0), (self_3221225551.views).length);
    Label1: {
      var i_3221225581 = 0;
      var view_3221225582 = null;
      var i_536871807 = 0;
      var L_536871808 = (self_3221225551.views).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536871807 < L_536871808)) break Label3;
            i_3221225581 = i_536871807;
            view_3221225582 = self_3221225551.views[chckIndx(i_536871807, 0, (self_3221225551.views).length - 1)];
            var widget_3221225583 = null;
            if (contains_3221225626(widgetsPerEditor_3221225540[0], view_3221225582.editor.id)) {
            widget_3221225583 = (Temporary4 = HEX5BHEX5D_3221225925(widgetsPerEditor_3221225540[0], view_3221225582.editor.id), Temporary4)[0][Temporary4[1]];
            }
            else {
              widget_3221225583 = {lastHierarchyChange: frameIndex_3221225552, logLayout: false, m_type: NTI2332033036, maskContent: false, children: [], anchor: {Field0: ({arr: new Float32Array(2)}), Field1: ({arr: new Float32Array(2)})}, pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3221226044(widgetsPerEditor_3221225540[0], view_3221225582.editor.id, widget_3221225583);
            }
            
            if ((i_3221225581 < (rects_3221225575).length)) {
            var colontmp__536871805 = xy_2080374820(rects_3221225575[chckIndx(i_3221225581, 0, (rects_3221225575).length - 1)]);
            var colontmp__536871806 = vec2_2097152992((rects_3221225575[chckIndx(i_3221225581, 0, (rects_3221225575).length - 1)].x + rects_3221225575[chckIndx(i_3221225581, 0, (rects_3221225575).length - 1)].w), (rects_3221225575[chckIndx(i_3221225581, 0, (rects_3221225575).length - 1)].y + rects_3221225575[chckIndx(i_3221225581, 0, (rects_3221225575).length - 1)].h));
            widget_3221225583.anchor = nimCopy(widget_3221225583.anchor, {Field0: nimCopy(null, colontmp__536871805, NTI2097152387), Field1: nimCopy(null, colontmp__536871806, NTI2097152387)}, NTI2332033035);
            layoutWidget_2332033348(widget_3221225583, viewPanel_3221225513[0].lastBounds, frameIndex_3221225552, self_3221225551.platform.layoutOptions);
            viewPanel_3221225513[0].children.push(widget_3221225583);;
            activeHEX3D_2147483758(view_3221225582.editor, (self_3221225551.currentView == i_3221225581));
            updateWidget_3238002698(view_3221225582.editor, self_3221225551, widget_3221225583, frameIndex_3221225552);
            viewPanel_3221225513[0].lastHierarchyChange = nimMax(viewPanel_3221225513[0].lastHierarchyChange, widget_3221225583.lastHierarchyChange);
            }
            
            i_536871807 = addInt(i_536871807, 1);
            if (!(((self_3221225551.views).length == L_536871808))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    mainPanel_3221225514[0].lastHierarchyChange = nimMax(mainPanel_3221225514[0].lastHierarchyChange, viewPanel_3221225513[0].lastHierarchyChange);
    var lastPopups_3221227113 = HEX5BHEX5D_3221227089(mainStack_3221225512[0].children, HEX2EHEX2E_1040187488(1, 1));
    if (mainStack_3221225512[0].children.length < 1) { for (var i = mainStack_3221225512[0].children.length ; i < 1 ; ++i) mainStack_3221225512[0].children.push(null); }
               else { mainStack_3221225512[0].children.length = 1; };
    Label5: {
      var i_3221227150 = 0;
      var popup_3221227151 = null;
      var i_536871814 = 0;
      var L_536871815 = (self_3221225551.popups).length;
      Label6: {
          Label7: while (true) {
          if (!(i_536871814 < L_536871815)) break Label7;
            i_3221227150 = i_536871814;
            popup_3221227151 = self_3221225551.popups[chckIndx(i_536871814, 0, (self_3221225551.popups).length - 1)];
            var widget_3221227152 = null;
            if (contains_3221225626(widgetsPerEditor_3221225540[0], popup_3221227151.id)) {
            widget_3221227152 = (Temporary8 = HEX5BHEX5D_3221225925(widgetsPerEditor_3221225540[0], popup_3221227151.id), Temporary8)[0][Temporary8[1]];
            }
            else {
              widget_3221227152 = {backgroundColor: color_2365587528(1.0, 0.0, 1.0, 1.0), fillBackground: true, lastHierarchyChange: frameIndex_3221225552, logLayout: false, m_type: NTI2332033036, maskContent: false, children: [], anchor: {Field0: ({arr: new Float32Array(2)}), Field1: ({arr: new Float32Array(2)})}, pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, allowAlpha: false};
              HEX5BHEX5DHEX3D_3221226044(widgetsPerEditor_3221225540[0], popup_3221227151.id, widget_3221227152);
            }
            
            var colontmp__536871811 = vec2_2097152992(0.25, 0.25);
            var colontmp__536871812 = vec2_2097152992(0.75, 0.75);
            widget_3221227152.anchor = nimCopy(widget_3221227152.anchor, {Field0: nimCopy(null, colontmp__536871811, NTI2097152387), Field1: nimCopy(null, colontmp__536871812, NTI2097152387)}, NTI2332033035);
            layoutWidget_2332033348(widget_3221227152, mainStack_3221225512[0].lastBounds, frameIndex_3221225552, self_3221225551.platform.layoutOptions);
            mainStack_3221225512[0].children.push(widget_3221227152);;
            updateWidget_3238002704(popup_3221227151, self_3221225551, widget_3221227152, frameIndex_3221225552);
            mainStack_3221225512[0].lastHierarchyChange = nimMax(mainStack_3221225512[0].lastHierarchyChange, widget_3221227152.lastHierarchyChange);
            i_536871814 = addInt(i_536871814, 1);
            if (!(((self_3221225551.popups).length == L_536871815))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    Label9: {
      var p_3221227311 = null;
      var i_536871824 = 0;
      var L_536871825 = (lastPopups_3221227113).length;
      Label10: {
          Label11: while (true) {
          if (!(i_536871824 < L_536871825)) break Label11;
            p_3221227311 = lastPopups_3221227113[chckIndx(i_536871824, 0, (lastPopups_3221227113).length - 1)];
            Label12: {
              if (contains_3221227312(mainStack_3221225512[0].children, p_3221227311)) {
              break Label12;
              }
              
              Label13: {
                var c_3221227348 = null;
                var i_536871821 = 0;
                var L_536871822 = (mainStack_3221225512[0].children).length;
                Label14: {
                    Label15: while (true) {
                    if (!(i_536871821 < L_536871822)) break Label15;
                      c_3221227348 = mainStack_3221225512[0].children[chckIndx(i_536871821, 0, (mainStack_3221225512[0].children).length - 1)];
                      invalidate_2332033255(c_3221227348, frameIndex_3221225552, p_3221227311.lastBounds);
                      i_536871821 = addInt(i_536871821, 1);
                      if (!(((mainStack_3221225512[0].children).length == L_536871822))) {
                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                };
              };
            };
            i_536871824 = addInt(i_536871824, 1);
            if (!(((lastPopups_3221227113).length == L_536871825))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    updateStatusBar_3221225488(self_3221225551, frameIndex_3221225552, commandLineWidget_3221225511[0]);
    mainPanel_3221225514[0].lastHierarchyChange = nimMax(mainPanel_3221225514[0].lastHierarchyChange, commandLineWidget_3221225511[0].lastHierarchyChange);
    mainStack_3221225512[0].lastHierarchyChange = nimMax(mainStack_3221225512[0].lastHierarchyChange, mainPanel_3221225514[0].lastHierarchyChange);
    updateInvalidationFromChildren_2332033299(mainStack_3221225512[0], -1, false);
    self_3221225551.widget.lastHierarchyChange = nimMax(self_3221225551.widget.lastHierarchyChange, commandLineWidget_3221225511[0].lastHierarchyChange);

  
}

function layoutWidgetTree_3221227367(self_3221227368, size_3221227369, frameIndex_3221227370) {
  BeforeRet: {
    self_3221227368.lastBounds = nimCopy(self_3221227368.lastBounds, rect_2080374808(vec2_2097152992(0.0, 0.0), size_3221227369), NTI2080374789);
    if ((self_3221227368.widget == null)) {
    break BeforeRet;
    }
    
    layoutWidget_2332033348(self_3221227368.widget, self_3221227368.lastBounds, frameIndex_3221227370, self_3221227368.platform.layoutOptions);
  };

  
}

function requestRender_536871233(redrawEverything_536871234) {
    
function HEX3Aanonymous_536871235(time_536871236) {
        hasRequestedRerender_536870978[0] = false;
        try {
        var layoutTime_536871242 = 0.0;
        var updateTime_536871243 = 0.0;
        var renderTime_536871244 = 0.0;
        Label2: {
          ed_536870948[0].frameTimer = nimCopy(ed_536870948[0].frameTimer, startTimer_2281701428(), NTI2281701407);
          var updateTimer_536871245 = startTimer_2281701428();
          updateWidgetTree_3221225550(ed_536870948[0], frameIndex_536870977[0]);
          updateTime_536871243 = ms_2281701425(elapsed_2281701439(updateTimer_536871245));
          var layoutTimer_536871246 = startTimer_2281701428();
          layoutWidgetTree_3221227367(ed_536870948[0], size_2315255913(rend_536870946[0]), frameIndex_536870977[0]);
          layoutTime_536871242 = ms_2281701425(elapsed_2281701439(layoutTimer_536871246));
          var renderTimer_536871247 = startTimer_2281701428();
          render_2315255904(rend_536870946[0], ed_536870948[0].widget, frameIndex_536870977[0]);
          renderTime_536871244 = ms_2281701425(elapsed_2281701439(renderTimer_536871247));
          frameTime_536870976[0] = ms_2281701425(elapsed_2281701439(ed_536870948[0].frameTimer));
        };
        if ((10.0 < frameTime_536870976[0])) {
        var fmtRes_536871252 = [mnewString(0)];
        fmtRes_536871252[0].push.apply(fmtRes_536871252[0], [70,114,97,109,101,58,32]);;
        formatValue_2332033664(fmtRes_536871252, 0, frameTime_536870976[0], [62,53,46,50]);
        fmtRes_536871252[0].push.apply(fmtRes_536871252[0], [109,115,32,40,117,58,32]);;
        formatValue_2332033664(fmtRes_536871252, 0, updateTime_536871243, [62,53,46,50]);
        fmtRes_536871252[0].push.apply(fmtRes_536871252[0], [109,115,44,32,108,58,32]);;
        formatValue_2332033664(fmtRes_536871252, 0, layoutTime_536871242, [62,53,46,50]);
        fmtRes_536871252[0].push.apply(fmtRes_536871252[0], [109,115,44,32,114,58,32]);;
        formatValue_2332033664(fmtRes_536871252, 0, renderTime_536871244, [62,53,46,50]);
        fmtRes_536871252[0].push.apply(fmtRes_536871252[0], [109,115,41]);;
        log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_536871252[0], NTI33554449)]);
        }
        
        } finally {
        frameIndex_536870977[0] = addInt(frameIndex_536870977[0], 1);
        }

      
    }

  BeforeRet: {
    if (!(initializedEditor_536870947[0])) {
    break BeforeRet;
    }
    
    if (hasRequestedRerender_536870978[0]) {
    break BeforeRet;
    }
    
    var _ = window.requestAnimationFrame(HEX3Aanonymous_536871235);
  };

  
}

function subscribe_536871720(event_536871722, callback_536871724) {
  var result_536871725 = ({padding: 0, time: 0, fuzz: 0, count: 0});

    result_536871725 = nimCopy(result_536871725, newId_2181038297(), NTI2181038083);
    event_536871722.handlers.push({Field0: nimCopy(null, result_536871725, NTI2181038083), Field1: callback_536871724});;

  return result_536871725;

}

function HEX3Aanonymous_536871302(event_536871320) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871351(event_536871369) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871400(event_536871418) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871449(event_536871467) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871498(event_536871516) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871547(event_536871565) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871596(event_536871614) {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871645() {
    requestRender_536871233(false);

  
}

function HEX3Aanonymous_536871694(redrawEverything_536871695) {
    requestRender_536871233(redrawEverything_536871695);

  
}
var _ = subscribe_1291851139(rend_536870946[0].onKeyPress, HEX3Aanonymous_536871302);
var _ = subscribe_1291851139(rend_536870946[0].onKeyRelease, HEX3Aanonymous_536871351);
var _ = subscribe_1291851139(rend_536870946[0].onRune, HEX3Aanonymous_536871400);
var _ = subscribe_1291851309(rend_536870946[0].onMousePress, HEX3Aanonymous_536871449);
var _ = subscribe_1291851309(rend_536870946[0].onMouseRelease, HEX3Aanonymous_536871498);
var _ = subscribe_1291851430(rend_536870946[0].onMouseMove, HEX3Aanonymous_536871547);
var _ = subscribe_1291851502(rend_536870946[0].onScroll, HEX3Aanonymous_536871596);
var _ = subscribe_1291851574(rend_536870946[0].onCloseRequested, HEX3Aanonymous_536871645);
var _ = subscribe_536871720(rend_536870946[0].onResized, HEX3Aanonymous_536871694);
Label307: {
  setHandleInputs_1291854078(ed_536870948[0], [101,100,105,116,111,114,46,116,101,120,116], true);
  scriptSetOptionString_1291859815([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,109,111,118,101,109,101,110,116,46], [98,111,116,104]);
  scriptSetOptionBool_1291859733([101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101,46], false);
  addCommandScript_1291858153(ed_536870948[0], [101,100,105,116,111,114], [60,65,45,104,62], [108,111,97,100,45,99,117,114,114,101,110,116,45,99,111,110,102,105,103], []);
  addCommandScript_1291858153(ed_536870948[0], [101,100,105,116,111,114], [60,65,45,103,62], [115,111,117,114,99,101,67,117,114,114,101,110,116,68,111,99,117,109,101,110,116], []);
};
initializedEditor_536870947[0] = true;
requestRender_536871233(false);

function formatValue_1291848856(result_1291848858, result_1291848858_Idx, value_1291848859, specifier_1291848860) {
    formatValue_721420459(result_1291848858, result_1291848858_Idx, HEX24_1627394481(value_1291848859), specifier_1291848860);

  
}

function handleUnknownDocumentEditorAction_1291848840(self_1291848841, editor_1291848842, action_1291848843, args_1291848844) {
  var result_1291848845 = 0;

  BeforeRet: {
++excHandler;
    try {
    if (false) {
    result_1291848845 = 3;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848855 = [mnewString(0)];
    fmtRes_1291848855[0].push.apply(fmtRes_1291848855[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,85,110,107,110,111,119,110,68,111,99,117,109,101,110,116,69,100,105,116,111,114,65,99,116,105,111,110,32,39]);;
    formatValue_721420459(fmtRes_1291848855, 0, action_1291848843, []);
    fmtRes_1291848855[0].push.apply(fmtRes_1291848855[0], [32]);;
    formatValue_1291848856(fmtRes_1291848855, 0, args_1291848844, []);
    fmtRes_1291848855[0].push.apply(fmtRes_1291848855[0], [39,58,32]);;
    formatValue_721420459(fmtRes_1291848855, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848855[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
    result_1291848845 = 0;
    break BeforeRet;
  };

  return result_1291848845;

}

function insert_2801811153(x_2801811155, x_2801811155_Idx, item_2801811156, i_2801811157) {
    var it_2801811177 = null;
    x_2801811155[x_2801811155_Idx] = x_2801811155[x_2801811155_Idx] || []; x_2801811155[x_2801811155_Idx].splice(i_2801811157, 0, it_2801811177);
    x_2801811155[x_2801811155_Idx][chckIndx(i_2801811157, 0, (x_2801811155[x_2801811155_Idx]).length - 1)] = item_2801811156;

  
}

function toJson_2801803675(self_2801803676, opt_2801803677) {
  var result_2801803678 = null;

    result_2801803678 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2801803678, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,116,101,120,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2801803678, [105,100], newJInt_1627390040(self_2801803676.id));

  return result_2801803678;

}

function none_2801803581() {
  var result_2801803587 = ({val: null});

  return result_2801803587;

}

function some_2801803640(val_2801803642) {
  var result_2801803643 = ({val: null});

    if (!(!((val_2801803642 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2801803643.val = val_2801803642;

  return result_2801803643;

}

function getTextDocumentEditor_2801803571(wrapper_2801803572) {
      var Temporary1;

  var result_2801803577 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2801803577 = nimCopy(result_2801803577, none_2801803581(), NTI2801799838);
    break BeforeRet;
    }
    
      var oHEX60gensym146_2801803590 = getEditorForId_1291850652(gEditor, wrapper_2801803572.id);
      if (!isSome_2801803595(oHEX60gensym146_2801803590)) Temporary1 = false; else {        var editor_2801803632 = get_2801803615(oHEX60gensym146_2801803590);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2801803632.m_type, NTI2801795279)) {
    result_2801803577 = nimCopy(result_2801803577, some_2801803640(editor_2801803632), NTI2801799838);
    break BeforeRet;
    }
    
    }
    
    result_2801803577 = nimCopy(result_2801803577, none_2801803581(), NTI2801799838);
    break BeforeRet;
  };

  return result_2801803577;

}

function isNone_2801803932(self_2801803934) {
  var result_2801803935 = false;

    result_2801803935 = (self_2801803934.val == null);

  return result_2801803935;

}

function get_2801803952(self_2801803954) {
  var result_2801803955 = null;

    if (isNone_2801803932(self_2801803954)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801803955 = self_2801803954["val"];

  return result_2801803955;

}

function setModeScript_2801803817_2801803924(self_2801803925, mode_2801803926) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym157_2801803927 = getTextDocumentEditor_2801803571(self_2801803925);
      if (isNone_2801803932(rHEX60gensym157_2801803927)) {
      break BeforeRet;
      }
      
    };
    setMode_2801803857(get_2801803952(rHEX60gensym157_2801803927), mode_2801803926);
  };

  
}

function fromJsonHook_2801803679(t_2801803680, jsonNode_2801803681) {
    t_2801803680.id = jsonTo_2801803682(HEX5BHEX5D_1627393037(jsonNode_2801803681, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2801803992(a_2801803994, b_2801803995, opt_2801803996) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801803995, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [84,101,120,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2801803995}));
    }
    
    fromJsonHook_2801803679(a_2801803994, b_2801803995);

  
}

function jsonTo_2801803986(b_2801803988, opt_2801803990) {
  var result_2801803991 = [({id: 0})];

    fromJson_2801803992(result_2801803991[0], b_2801803988, opt_2801803990);

  return result_2801803991[0];

}

function setModeApi_2801803984(HEX3Atmp_2801803820) {
  var result_2801803985 = null;

    result_2801803985 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript_2801803817_2801803924(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801803820, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801803820, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym162_2801804008 = [115,101,116,77,111,100,101];
    var fmtRes_2801804013 = [mnewString(0)];
    fmtRes_2801804013[0].push.apply(fmtRes_2801804013[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804013, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym162_2801804008 || [],fmtRes_2801804013[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801803985;

}

function modeScript_2801804108_2801804116(self_2801804117) {
  var result_2801804118 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym171_2801804119 = getTextDocumentEditor_2801803571(self_2801804117);
      if (isNone_2801803932(rHEX60gensym171_2801804119)) {
      break BeforeRet;
      }
      
    };
    result_2801804118 = nimCopy(null, mode_2801804113(get_2801803952(rHEX60gensym171_2801804119)), NTI33554449);
  };

  return result_2801804118;

}

function modeApi_2801804146(HEX3Atmp_2801804110) {
  var result_2801804147 = null;

  BeforeRet: {
    result_2801804147 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2801804147 = toJson_1811939932(modeScript_2801804108_2801804116(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801804110, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym177_2801804157 = [109,111,100,101];
    var fmtRes_2801804162 = [mnewString(0)];
    fmtRes_2801804162[0].push.apply(fmtRes_2801804162[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804162, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym177_2801804157 || [],fmtRes_2801804162[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801804147;

}

function getContextWithModeScript_2801804165_2801804174(self_2801804175, context_2801804176) {
  var result_2801804177 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym181_2801804178 = getTextDocumentEditor_2801803571(self_2801804175);
      if (isNone_2801803932(rHEX60gensym181_2801804178)) {
      break BeforeRet;
      }
      
    };
    result_2801804177 = nimCopy(null, getContextWithMode_2801803222(get_2801803952(rHEX60gensym181_2801804178), context_2801804176), NTI33554449);
  };

  return result_2801804177;

}

function getContextWithModeApi_2801804206(HEX3Atmp_2801804167) {
  var result_2801804207 = null;

  BeforeRet: {
    result_2801804207 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2801804207 = toJson_1811939932(getContextWithModeScript_2801804165_2801804174(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801804167, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801804167, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym187_2801804222 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2801804227 = [mnewString(0)];
    fmtRes_2801804227[0].push.apply(fmtRes_2801804227[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804227, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym187_2801804222 || [],fmtRes_2801804227[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801804207;

}

function updateTargetColumnScript_2801804230_2801804238(self_2801804239, cursor_2801804240) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym191_2801804241 = getTextDocumentEditor_2801803571(self_2801804239);
      if (isNone_2801803932(rHEX60gensym191_2801804241)) {
      break BeforeRet;
      }
      
    };
    updateTargetColumn_2801804235(get_2801803952(rHEX60gensym191_2801804241), cursor_2801804240);
  };

  
}

function getBiggestInt_1627390129(n_1627390130, default_1627390131) {
      var Temporary1;

  var result_1627390132 = 0;

  BeforeRet: {
    if (((n_1627390130 == null) || !((n_1627390130.kind == 2)))) {
    result_1627390132 = default_1627390131;
    break BeforeRet;
    }
    else {
      var Temporary1 = n_1627390130;
      if (ConstSet308[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'num\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI1627389955)); }
      result_1627390132 = Temporary1.num;
      break BeforeRet;
    }
    
  };

  return result_1627390132;

}

function parseEnum_2801804293(s_2801804295) {
    var Temporary1;

  var result_2801804296 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_2801804295))) {
    case "config":
      Temporary1 = 0;
      break;
    case "both":
      Temporary1 = 1;
      break;
    case "first":
      Temporary1 = 2;
      break;
    case "last":
      Temporary1 = 3;
      break;
    case "last-to-first":
      Temporary1 = 4;
      break;
    default: 
      raiseException({message: ([73,110,118,97,108,105,100,32,101,110,117,109,32,118,97,108,117,101,58,32] || []).concat(s_2801804295 || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_2801804296 = Temporary1;

  return result_2801804296;

}

function fromJson_2801804281(a_2801804283, a_2801804283_Idx, b_2801804284, opt_2801804285) {
    if (!(!(HEX3DHEX3D_1627392026(b_2801804284, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], Field1: b_2801804284}));
    }
    
    switch (b_2801804284.kind) {
    case 2:
      a_2801804283[a_2801804283_Idx] = chckRange(getBiggestInt_1627390129(b_2801804284, 0), 0, 4);
      break;
    case 4:
      a_2801804283[a_2801804283_Idx] = parseEnum_2801804293(getStr_1627390106(b_2801804284, []));
      break;
    default: 
      if (true) {
      var fmtRes_2801804321 = [mnewString(0)];
      fmtRes_2801804321[0].push.apply(fmtRes_2801804321[0], [69,120,112,101,99,116,105,110,103,32,105,110,116,47,115,116,114,105,110,103,32,102,111,114,32]);;
      formatValue_721420459(fmtRes_2801804321, 0, [83,101,108,101,99,116,105,111,110,67,117,114,115,111,114], []);
      fmtRes_2801804321[0].push.apply(fmtRes_2801804321[0], [32,103,111,116,32]);;
      formatValue_721420459(fmtRes_2801804321, 0, pretty_1627394477(b_2801804284, 2), []);
      raiseJsonException_1811939497([102,97,108,115,101], fmtRes_2801804321[0]);
      }
      
      break;
    }

  
}

function jsonTo_2801804275(b_2801804277, opt_2801804279) {
  var result_2801804280 = [0];

    fromJson_2801804281(result_2801804280, 0, b_2801804277, opt_2801804279);

  return result_2801804280[0];

}

function updateTargetColumnApi_2801804268(HEX3Atmp_2801804232) {
  var result_2801804269 = null;

    result_2801804269 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateTargetColumnScript_2801804230_2801804238(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801804232, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801804232, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym196_2801804325 = [117,112,100,97,116,101,84,97,114,103,101,116,67,111,108,117,109,110];
    var fmtRes_2801804330 = [mnewString(0)];
    fmtRes_2801804330[0].push.apply(fmtRes_2801804330[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804330, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym196_2801804325 || [],fmtRes_2801804330[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801804269;

}

function invertSelectionScript_2801804347_2801804354(self_2801804355) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym205_2801804356 = getTextDocumentEditor_2801803571(self_2801804355);
      if (isNone_2801803932(rHEX60gensym205_2801804356)) {
      break BeforeRet;
      }
      
    };
    invertSelection_2801804352(get_2801803952(rHEX60gensym205_2801804356));
  };

  
}

function invertSelectionApi_2801804382(HEX3Atmp_2801804349) {
  var result_2801804383 = null;

    result_2801804383 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    invertSelectionScript_2801804347_2801804354(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801804349, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym210_2801804389 = [105,110,118,101,114,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801804394 = [mnewString(0)];
    fmtRes_2801804394[0].push.apply(fmtRes_2801804394[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804394, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym210_2801804389 || [],fmtRes_2801804394[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801804383;

}

function insertScript_2801804410_2801804423(self_2801804424, selections_2801804425, text_2801804426, notify_2801804427, record_2801804428, autoIndent_2801804429) {
  var result_2801804430 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym218_2801804431 = getTextDocumentEditor_2801803571(self_2801804424);
      if (isNone_2801803932(rHEX60gensym218_2801804431)) {
      break BeforeRet;
      }
      
    };
    result_2801804430 = nimCopy(null, insert_2801804415(get_2801803952(rHEX60gensym218_2801804431), selections_2801804425, text_2801804426, notify_2801804427, record_2801804428, autoIndent_2801804429), NTI2801800521);
  };

  return result_2801804430;

}

function insertApi_2801804463(HEX3Atmp_2801804412) {
      var Temporary6;
      var Temporary8;
      var Temporary10;

  var result_2801804464 = null;

  BeforeRet: {
    result_2801804464 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2801804412))) {
      Temporary6 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801804412, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    Label7: {
      if ((4 < len_1627392983(HEX3Atmp_2801804412))) {
      Temporary8 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801804412, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary8 = true;
      }
      
    };
    Label9: {
      if ((5 < len_1627392983(HEX3Atmp_2801804412))) {
      Temporary10 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801804412, 5), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary10 = true;
      }
      
    };
    result_2801804464 = toJson_2801804762(insertScript_2801804410_2801804423(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801804412, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804470(HEX5BHEX5D_1627393116(HEX3Atmp_2801804412, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801804412, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6, Temporary8, Temporary10), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym224_2801804818 = [105,110,115,101,114,116];
    var fmtRes_2801804823 = [mnewString(0)];
    fmtRes_2801804823[0].push.apply(fmtRes_2801804823[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804823, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym224_2801804818 || [],fmtRes_2801804823[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801804464;

}

function deleteScript_2801804907_2801804918(self_2801804919, selections_2801804920, notify_2801804921, record_2801804922) {
  var result_2801804923 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym251_2801804924 = getTextDocumentEditor_2801803571(self_2801804919);
      if (isNone_2801803932(rHEX60gensym251_2801804924)) {
      break BeforeRet;
      }
      
    };
    result_2801804923 = nimCopy(null, delete_2801804912(get_2801803952(rHEX60gensym251_2801804924), selections_2801804920, notify_2801804921, record_2801804922), NTI2801801037);
  };

  return result_2801804923;

}

function deleteApi_2801804954(HEX3Atmp_2801804909) {
      var Temporary5;
      var Temporary7;

  var result_2801804955 = null;

  BeforeRet: {
    result_2801804955 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801804909))) {
      Temporary5 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801804909, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = true;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801804909))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801804909, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    result_2801804955 = toJson_2801804762(deleteScript_2801804907_2801804918(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801804909, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804470(HEX5BHEX5D_1627393116(HEX3Atmp_2801804909, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym257_2801804980 = [100,101,108,101,116,101];
    var fmtRes_2801804985 = [mnewString(0)];
    fmtRes_2801804985[0].push.apply(fmtRes_2801804985[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801804985, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym257_2801804980 || [],fmtRes_2801804985[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801804955;

}

function selectPrevScript_2801805023_2801805175(self_2801805176) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym262_2801805177 = getTextDocumentEditor_2801803571(self_2801805176);
      if (isNone_2801803932(rHEX60gensym262_2801805177)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2801805028(get_2801803952(rHEX60gensym262_2801805177));
  };

  
}

function selectPrevApi_2801805203(HEX3Atmp_2801805025) {
  var result_2801805204 = null;

    result_2801805204 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript_2801805023_2801805175(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805025, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym267_2801805210 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2801805215 = [mnewString(0)];
    fmtRes_2801805215[0].push.apply(fmtRes_2801805215[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805215, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym267_2801805210 || [],fmtRes_2801805215[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805204;

}

function selectNextScript_2801805219_2801805348(self_2801805349) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym273_2801805350 = getTextDocumentEditor_2801803571(self_2801805349);
      if (isNone_2801803932(rHEX60gensym273_2801805350)) {
      break BeforeRet;
      }
      
    };
    selectNext_2801805224(get_2801803952(rHEX60gensym273_2801805350));
  };

  
}

function selectNextApi_2801805376(HEX3Atmp_2801805221) {
  var result_2801805377 = null;

    result_2801805377 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript_2801805219_2801805348(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805221, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym278_2801805383 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2801805388 = [mnewString(0)];
    fmtRes_2801805388[0].push.apply(fmtRes_2801805388[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805388, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym278_2801805383 || [],fmtRes_2801805388[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805377;

}

function selectInsideScript_2801805391_2801805410(self_2801805411, cursor_2801805412) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym283_2801805413 = getTextDocumentEditor_2801803571(self_2801805411);
      if (isNone_2801803932(rHEX60gensym283_2801805413)) {
      break BeforeRet;
      }
      
    };
    selectInside_2801805396(get_2801803952(rHEX60gensym283_2801805413), cursor_2801805412);
  };

  
}

function jsonTo_2801805447(b_2801805449, opt_2801805451) {
  var result_2801805452 = [{Field0: 0, Field1: 0}];

    fromJson_2801804585(result_2801805452[0], b_2801805449, opt_2801805451);

  return result_2801805452[0];

}

function selectInsideApi_2801805440(HEX3Atmp_2801805393) {
  var result_2801805441 = null;

    result_2801805441 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectInsideScript_2801805391_2801805410(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805393, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805447(HEX5BHEX5D_1627393116(HEX3Atmp_2801805393, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym288_2801805458 = [115,101,108,101,99,116,73,110,115,105,100,101];
    var fmtRes_2801805463 = [mnewString(0)];
    fmtRes_2801805463[0].push.apply(fmtRes_2801805463[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805463, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym288_2801805458 || [],fmtRes_2801805463[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805441;

}

function selectInsideCurrentScript_2801805468_2801805475(self_2801805476) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym292_2801805477 = getTextDocumentEditor_2801803571(self_2801805476);
      if (isNone_2801803932(rHEX60gensym292_2801805477)) {
      break BeforeRet;
      }
      
    };
    selectInsideCurrent_2801805473(get_2801803952(rHEX60gensym292_2801805477));
  };

  
}

function selectInsideCurrentApi_2801805503(HEX3Atmp_2801805470) {
  var result_2801805504 = null;

    result_2801805504 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectInsideCurrentScript_2801805468_2801805475(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805470, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym297_2801805510 = [115,101,108,101,99,116,73,110,115,105,100,101,67,117,114,114,101,110,116];
    var fmtRes_2801805515 = [mnewString(0)];
    fmtRes_2801805515[0].push.apply(fmtRes_2801805515[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805515, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym297_2801805510 || [],fmtRes_2801805515[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805504;

}

function selectLineScript_2801805518_2801805526(self_2801805527, line_2801805528) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym301_2801805529 = getTextDocumentEditor_2801803571(self_2801805527);
      if (isNone_2801803932(rHEX60gensym301_2801805529)) {
      break BeforeRet;
      }
      
    };
    selectLine_2801805523(get_2801803952(rHEX60gensym301_2801805529), line_2801805528);
  };

  
}

function selectLineApi_2801805556(HEX3Atmp_2801805520) {
  var result_2801805557 = null;

    result_2801805557 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectLineScript_2801805518_2801805526(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805520, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801805520, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym306_2801805568 = [115,101,108,101,99,116,76,105,110,101];
    var fmtRes_2801805573 = [mnewString(0)];
    fmtRes_2801805573[0].push.apply(fmtRes_2801805573[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805573, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym306_2801805568 || [],fmtRes_2801805573[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805557;

}

function selectLineCurrentScript_2801805576_2801805583(self_2801805584) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym309_2801805585 = getTextDocumentEditor_2801803571(self_2801805584);
      if (isNone_2801803932(rHEX60gensym309_2801805585)) {
      break BeforeRet;
      }
      
    };
    selectLineCurrent_2801805581(get_2801803952(rHEX60gensym309_2801805585));
  };

  
}

function selectLineCurrentApi_2801805611(HEX3Atmp_2801805578) {
  var result_2801805612 = null;

    result_2801805612 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectLineCurrentScript_2801805576_2801805583(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805578, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym314_2801805618 = [115,101,108,101,99,116,76,105,110,101,67,117,114,114,101,110,116];
    var fmtRes_2801805623 = [mnewString(0)];
    fmtRes_2801805623[0].push.apply(fmtRes_2801805623[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805623, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym314_2801805618 || [],fmtRes_2801805623[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805612;

}

function selectParentTsScript_2801805626_2801805646(self_2801805647, selection_2801805648) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym318_2801805649 = getTextDocumentEditor_2801803571(self_2801805647);
      if (isNone_2801803932(rHEX60gensym318_2801805649)) {
      break BeforeRet;
      }
      
    };
    selectParentTs_2801805631(get_2801803952(rHEX60gensym318_2801805649), selection_2801805648);
  };

  
}

function selectParentTsApi_2801805676(HEX3Atmp_2801805628) {
  var result_2801805677 = null;

    result_2801805677 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectParentTsScript_2801805626_2801805646(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805628, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805683(HEX5BHEX5D_1627393116(HEX3Atmp_2801805628, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym323_2801805694 = [115,101,108,101,99,116,80,97,114,101,110,116,84,115];
    var fmtRes_2801805699 = [mnewString(0)];
    fmtRes_2801805699[0].push.apply(fmtRes_2801805699[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805699, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym323_2801805694 || [],fmtRes_2801805699[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805677;

}

function selectParentCurrentTsScript_2801805709_2801805716(self_2801805717) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym327_2801805718 = getTextDocumentEditor_2801803571(self_2801805717);
      if (isNone_2801803932(rHEX60gensym327_2801805718)) {
      break BeforeRet;
      }
      
    };
    selectParentCurrentTs_2801805714(get_2801803952(rHEX60gensym327_2801805718));
  };

  
}

function selectParentCurrentTsApi_2801805744(HEX3Atmp_2801805711) {
  var result_2801805745 = null;

    result_2801805745 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectParentCurrentTsScript_2801805709_2801805716(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805711, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym332_2801805751 = [115,101,108,101,99,116,80,97,114,101,110,116,67,117,114,114,101,110,116,84,115];
    var fmtRes_2801805756 = [mnewString(0)];
    fmtRes_2801805756[0].push.apply(fmtRes_2801805756[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805756, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym332_2801805751 || [],fmtRes_2801805756[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805745;

}

function insertTextScript_2801805762_2801805771(self_2801805772, text_2801805773) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym337_2801805774 = getTextDocumentEditor_2801803571(self_2801805772);
      if (isNone_2801803932(rHEX60gensym337_2801805774)) {
      break BeforeRet;
      }
      
    };
    insertText_2801805767(get_2801803952(rHEX60gensym337_2801805774), text_2801805773);
  };

  
}

function insertTextApi_2801805801(HEX3Atmp_2801805764) {
  var result_2801805802 = null;

    result_2801805802 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertTextScript_2801805762_2801805771(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805764, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801805764, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym342_2801805813 = [105,110,115,101,114,116,84,101,120,116];
    var fmtRes_2801805818 = [mnewString(0)];
    fmtRes_2801805818[0].push.apply(fmtRes_2801805818[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805818, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym342_2801805813 || [],fmtRes_2801805818[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805802;

}

function undoScript_2801805834_2801805889(self_2801805890) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym347_2801805891 = getTextDocumentEditor_2801803571(self_2801805890);
      if (isNone_2801803932(rHEX60gensym347_2801805891)) {
      break BeforeRet;
      }
      
    };
    undo_2801805839(get_2801803952(rHEX60gensym347_2801805891));
  };

  
}

function undoApi_2801805917(HEX3Atmp_2801805836) {
  var result_2801805918 = null;

    result_2801805918 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript_2801805834_2801805889(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805836, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym352_2801805924 = [117,110,100,111];
    var fmtRes_2801805929 = [mnewString(0)];
    fmtRes_2801805929[0].push.apply(fmtRes_2801805929[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801805929, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym352_2801805924 || [],fmtRes_2801805929[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805918;

}

function redoScript_2801805936_2801805969(self_2801805970) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym357_2801805971 = getTextDocumentEditor_2801803571(self_2801805970);
      if (isNone_2801803932(rHEX60gensym357_2801805971)) {
      break BeforeRet;
      }
      
    };
    redo_2801805941(get_2801803952(rHEX60gensym357_2801805971));
  };

  
}

function redoApi_2801805997(HEX3Atmp_2801805938) {
  var result_2801805998 = null;

    result_2801805998 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript_2801805936_2801805969(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801805938, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym362_2801806004 = [114,101,100,111];
    var fmtRes_2801806009 = [mnewString(0)];
    fmtRes_2801806009[0].push.apply(fmtRes_2801806009[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806009, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym362_2801806004 || [],fmtRes_2801806009[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801805998;

}

function scrollTextScript_2801806016_2801806028(self_2801806029, amount_2801806030) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym367_2801806031 = getTextDocumentEditor_2801803571(self_2801806029);
      if (isNone_2801803932(rHEX60gensym367_2801806031)) {
      break BeforeRet;
      }
      
    };
    scrollText_2801806021(get_2801803952(rHEX60gensym367_2801806031), amount_2801806030);
  };

  
}

function scrollTextApi_2801806058(HEX3Atmp_2801806018) {
  var result_2801806059 = null;

    result_2801806059 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollTextScript_2801806016_2801806028(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806018, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806065(HEX5BHEX5D_1627393116(HEX3Atmp_2801806018, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym372_2801806128 = [115,99,114,111,108,108,84,101,120,116];
    var fmtRes_2801806133 = [mnewString(0)];
    fmtRes_2801806133[0].push.apply(fmtRes_2801806133[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806133, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym372_2801806128 || [],fmtRes_2801806133[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806059;

}

function duplicateLastSelectionScript_2801806136_2801806185(self_2801806186) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym381_2801806187 = getTextDocumentEditor_2801803571(self_2801806186);
      if (isNone_2801803932(rHEX60gensym381_2801806187)) {
      break BeforeRet;
      }
      
    };
    duplicateLastSelection_2801806141(get_2801803952(rHEX60gensym381_2801806187));
  };

  
}

function duplicateLastSelectionApi_2801806213(HEX3Atmp_2801806138) {
  var result_2801806214 = null;

    result_2801806214 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    duplicateLastSelectionScript_2801806136_2801806185(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806138, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym386_2801806220 = [100,117,112,108,105,99,97,116,101,76,97,115,116,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801806225 = [mnewString(0)];
    fmtRes_2801806225[0].push.apply(fmtRes_2801806225[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806225, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym386_2801806220 || [],fmtRes_2801806225[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806214;

}

function addCursorBelowScript_2801806236_2801806255(self_2801806256) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym389_2801806257 = getTextDocumentEditor_2801803571(self_2801806256);
      if (isNone_2801803932(rHEX60gensym389_2801806257)) {
      break BeforeRet;
      }
      
    };
    addCursorBelow_2801806241(get_2801803952(rHEX60gensym389_2801806257));
  };

  
}

function addCursorBelowApi_2801806283(HEX3Atmp_2801806238) {
  var result_2801806284 = null;

    result_2801806284 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorBelowScript_2801806236_2801806255(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806238, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym394_2801806290 = [97,100,100,67,117,114,115,111,114,66,101,108,111,119];
    var fmtRes_2801806295 = [mnewString(0)];
    fmtRes_2801806295[0].push.apply(fmtRes_2801806295[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806295, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym394_2801806290 || [],fmtRes_2801806295[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806284;

}

function addCursorAboveScript_2801806302_2801806321(self_2801806322) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym397_2801806323 = getTextDocumentEditor_2801803571(self_2801806322);
      if (isNone_2801803932(rHEX60gensym397_2801806323)) {
      break BeforeRet;
      }
      
    };
    addCursorAbove_2801806307(get_2801803952(rHEX60gensym397_2801806323));
  };

  
}

function addCursorAboveApi_2801806349(HEX3Atmp_2801806304) {
  var result_2801806350 = null;

    result_2801806350 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addCursorAboveScript_2801806302_2801806321(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806304, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym402_2801806356 = [97,100,100,67,117,114,115,111,114,65,98,111,118,101];
    var fmtRes_2801806361 = [mnewString(0)];
    fmtRes_2801806361[0].push.apply(fmtRes_2801806361[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806361, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym402_2801806356 || [],fmtRes_2801806361[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806350;

}

function getPrevFindResultScript_2801806364_2801806625(self_2801806626, cursor_2801806627, offset_2801806628) {
  var result_2801806629 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym407_2801806630 = getTextDocumentEditor_2801803571(self_2801806626);
      if (isNone_2801803932(rHEX60gensym407_2801806630)) {
      break BeforeRet;
      }
      
    };
    result_2801806629 = nimCopy(result_2801806629, getPrevFindResult_2801803151(get_2801803952(rHEX60gensym407_2801806630), cursor_2801806627, offset_2801806628), NTI2231369739);
  };

  return result_2801806629;

}

function getPrevFindResultApi_2801806659(HEX3Atmp_2801806366) {
      var Temporary5;

  var result_2801806660 = null;

  BeforeRet: {
    result_2801806660 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801806366))) {
      Temporary5 = jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801806366, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2801806660 = toJson_2801804774(getPrevFindResultScript_2801806364_2801806625(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806366, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805447(HEX5BHEX5D_1627393116(HEX3Atmp_2801806366, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym413_2801806680 = [103,101,116,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801806685 = [mnewString(0)];
    fmtRes_2801806685[0].push.apply(fmtRes_2801806685[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806685, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym413_2801806680 || [],fmtRes_2801806685[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801806660;

}

function getNextFindResultScript_2801806696_2801806854(self_2801806855, cursor_2801806856, offset_2801806857) {
  var result_2801806858 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym419_2801806859 = getTextDocumentEditor_2801803571(self_2801806855);
      if (isNone_2801803932(rHEX60gensym419_2801806859)) {
      break BeforeRet;
      }
      
    };
    result_2801806858 = nimCopy(result_2801806858, getNextFindResult_2801803155(get_2801803952(rHEX60gensym419_2801806859), cursor_2801806856, offset_2801806857), NTI2231369739);
  };

  return result_2801806858;

}

function getNextFindResultApi_2801806888(HEX3Atmp_2801806698) {
      var Temporary5;

  var result_2801806889 = null;

  BeforeRet: {
    result_2801806889 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801806698))) {
      Temporary5 = jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801806698, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    result_2801806889 = toJson_2801804774(getNextFindResultScript_2801806696_2801806854(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806698, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805447(HEX5BHEX5D_1627393116(HEX3Atmp_2801806698, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym425_2801806909 = [103,101,116,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801806914 = [mnewString(0)];
    fmtRes_2801806914[0].push.apply(fmtRes_2801806914[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806914, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym425_2801806909 || [],fmtRes_2801806914[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801806889;

}

function addNextFindResultToSelectionScript_2801806927_2801806942(self_2801806943) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym429_2801806944 = getTextDocumentEditor_2801803571(self_2801806943);
      if (isNone_2801803932(rHEX60gensym429_2801806944)) {
      break BeforeRet;
      }
      
    };
    addNextFindResultToSelection_2801806932(get_2801803952(rHEX60gensym429_2801806944));
  };

  
}

function addNextFindResultToSelectionApi_2801806970(HEX3Atmp_2801806929) {
  var result_2801806971 = null;

    result_2801806971 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addNextFindResultToSelectionScript_2801806927_2801806942(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806929, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym434_2801806977 = [97,100,100,78,101,120,116,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801806982 = [mnewString(0)];
    fmtRes_2801806982[0].push.apply(fmtRes_2801806982[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801806982, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym434_2801806977 || [],fmtRes_2801806982[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801806971;

}

function addPrevFindResultToSelectionScript_2801806985_2801807000(self_2801807001) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym437_2801807002 = getTextDocumentEditor_2801803571(self_2801807001);
      if (isNone_2801803932(rHEX60gensym437_2801807002)) {
      break BeforeRet;
      }
      
    };
    addPrevFindResultToSelection_2801806990(get_2801803952(rHEX60gensym437_2801807002));
  };

  
}

function addPrevFindResultToSelectionApi_2801807028(HEX3Atmp_2801806987) {
  var result_2801807029 = null;

    result_2801807029 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    addPrevFindResultToSelectionScript_2801806985_2801807000(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801806987, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym442_2801807035 = [97,100,100,80,114,101,118,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801807040 = [mnewString(0)];
    fmtRes_2801807040[0].push.apply(fmtRes_2801807040[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807040, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym442_2801807035 || [],fmtRes_2801807040[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807029;

}

function setAllFindResultToSelectionScript_2801807043_2801807344(self_2801807345) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym445_2801807346 = getTextDocumentEditor_2801803571(self_2801807345);
      if (isNone_2801803932(rHEX60gensym445_2801807346)) {
      break BeforeRet;
      }
      
    };
    setAllFindResultToSelection_2801807048(get_2801803952(rHEX60gensym445_2801807346));
  };

  
}

function setAllFindResultToSelectionApi_2801807372(HEX3Atmp_2801807045) {
  var result_2801807373 = null;

    result_2801807373 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    setAllFindResultToSelectionScript_2801807043_2801807344(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807045, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym450_2801807379 = [115,101,116,65,108,108,70,105,110,100,82,101,115,117,108,116,84,111,83,101,108,101,99,116,105,111,110];
    var fmtRes_2801807384 = [mnewString(0)];
    fmtRes_2801807384[0].push.apply(fmtRes_2801807384[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807384, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym450_2801807379 || [],fmtRes_2801807384[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807373;

}

function moveCursorColumnScript_2801807402_2801807430(self_2801807431, distance_2801807432, cursor_2801807433, all_2801807434) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym458_2801807435 = getTextDocumentEditor_2801803571(self_2801807431);
      if (isNone_2801803932(rHEX60gensym458_2801807435)) {
      break BeforeRet;
      }
      
    };
    moveCursorColumn_2801807407(get_2801803952(rHEX60gensym458_2801807435), distance_2801807432, cursor_2801807433, all_2801807434);
  };

  
}

function moveCursorColumnApi_2801807464(HEX3Atmp_2801807404) {
      var Temporary5;
      var Temporary7;

  var result_2801807465 = null;

    result_2801807465 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801807404))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807404, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801807404))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807404, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorColumnScript_2801807402_2801807430(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807404, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801807404, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym463_2801807486 = [109,111,118,101,67,117,114,115,111,114,67,111,108,117,109,110];
    var fmtRes_2801807491 = [mnewString(0)];
    fmtRes_2801807491[0].push.apply(fmtRes_2801807491[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807491, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym463_2801807486 || [],fmtRes_2801807491[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807465;

}

function moveCursorLineScript_2801807510_2801807520(self_2801807521, distance_2801807522, cursor_2801807523, all_2801807524) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym471_2801807525 = getTextDocumentEditor_2801803571(self_2801807521);
      if (isNone_2801803932(rHEX60gensym471_2801807525)) {
      break BeforeRet;
      }
      
    };
    moveCursorLine_2801807515(get_2801803952(rHEX60gensym471_2801807525), distance_2801807522, cursor_2801807523, all_2801807524);
  };

  
}

function moveCursorLineApi_2801807554(HEX3Atmp_2801807512) {
      var Temporary5;
      var Temporary7;

  var result_2801807555 = null;

    result_2801807555 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801807512))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807512, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801807512))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807512, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorLineScript_2801807510_2801807520(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807512, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801807512, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym476_2801807576 = [109,111,118,101,67,117,114,115,111,114,76,105,110,101];
    var fmtRes_2801807581 = [mnewString(0)];
    fmtRes_2801807581[0].push.apply(fmtRes_2801807581[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807581, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym476_2801807576 || [],fmtRes_2801807581[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807555;

}

function moveCursorHomeScript_2801807584_2801807593(self_2801807594, cursor_2801807595, all_2801807596) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym483_2801807597 = getTextDocumentEditor_2801803571(self_2801807594);
      if (isNone_2801803932(rHEX60gensym483_2801807597)) {
      break BeforeRet;
      }
      
    };
    moveCursorHome_2801807589(get_2801803952(rHEX60gensym483_2801807597), cursor_2801807595, all_2801807596);
  };

  
}

function moveCursorHomeApi_2801807625(HEX3Atmp_2801807586) {
      var Temporary4;
      var Temporary6;

  var result_2801807626 = null;

    result_2801807626 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801807586))) {
      Temporary4 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807586, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801807586))) {
      Temporary6 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807586, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorHomeScript_2801807584_2801807593(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807586, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym488_2801807642 = [109,111,118,101,67,117,114,115,111,114,72,111,109,101];
    var fmtRes_2801807647 = [mnewString(0)];
    fmtRes_2801807647[0].push.apply(fmtRes_2801807647[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807647, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym488_2801807642 || [],fmtRes_2801807647[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807626;

}

function moveCursorEndScript_2801807652_2801807661(self_2801807662, cursor_2801807663, all_2801807664) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym495_2801807665 = getTextDocumentEditor_2801803571(self_2801807662);
      if (isNone_2801803932(rHEX60gensym495_2801807665)) {
      break BeforeRet;
      }
      
    };
    moveCursorEnd_2801807657(get_2801803952(rHEX60gensym495_2801807665), cursor_2801807663, all_2801807664);
  };

  
}

function moveCursorEndApi_2801807693(HEX3Atmp_2801807654) {
      var Temporary4;
      var Temporary6;

  var result_2801807694 = null;

    result_2801807694 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801807654))) {
      Temporary4 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807654, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801807654))) {
      Temporary6 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807654, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorEndScript_2801807652_2801807661(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807654, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym500_2801807710 = [109,111,118,101,67,117,114,115,111,114,69,110,100];
    var fmtRes_2801807715 = [mnewString(0)];
    fmtRes_2801807715[0].push.apply(fmtRes_2801807715[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807715, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym500_2801807710 || [],fmtRes_2801807715[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807694;

}

function moveCursorToScript_2801807720_2801807737(self_2801807738, str_2801807739, cursor_2801807740, all_2801807741) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym508_2801807742 = getTextDocumentEditor_2801803571(self_2801807738);
      if (isNone_2801803932(rHEX60gensym508_2801807742)) {
      break BeforeRet;
      }
      
    };
    moveCursorTo_2801807725(get_2801803952(rHEX60gensym508_2801807742), str_2801807739, cursor_2801807740, all_2801807741);
  };

  
}

function moveCursorToApi_2801807771(HEX3Atmp_2801807722) {
      var Temporary5;
      var Temporary7;

  var result_2801807772 = null;

    result_2801807772 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801807722))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807722, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801807722))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807722, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorToScript_2801807720_2801807737(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807722, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801807722, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym513_2801807793 = [109,111,118,101,67,117,114,115,111,114,84,111];
    var fmtRes_2801807798 = [mnewString(0)];
    fmtRes_2801807798[0].push.apply(fmtRes_2801807798[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807798, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym513_2801807793 || [],fmtRes_2801807798[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807772;

}

function moveCursorBeforeScript_2801807803_2801807820(self_2801807821, str_2801807822, cursor_2801807823, all_2801807824) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym522_2801807825 = getTextDocumentEditor_2801803571(self_2801807821);
      if (isNone_2801803932(rHEX60gensym522_2801807825)) {
      break BeforeRet;
      }
      
    };
    moveCursorBefore_2801807808(get_2801803952(rHEX60gensym522_2801807825), str_2801807822, cursor_2801807823, all_2801807824);
  };

  
}

function moveCursorBeforeApi_2801807854(HEX3Atmp_2801807805) {
      var Temporary5;
      var Temporary7;

  var result_2801807855 = null;

    result_2801807855 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801807805))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807805, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801807805))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807805, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    moveCursorBeforeScript_2801807803_2801807820(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807805, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801807805, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym527_2801807876 = [109,111,118,101,67,117,114,115,111,114,66,101,102,111,114,101];
    var fmtRes_2801807881 = [mnewString(0)];
    fmtRes_2801807881[0].push.apply(fmtRes_2801807881[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807881, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym527_2801807876 || [],fmtRes_2801807881[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807855;

}

function moveCursorNextFindResultScript_2801807886_2801807895(self_2801807896, cursor_2801807897, all_2801807898) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym535_2801807899 = getTextDocumentEditor_2801803571(self_2801807896);
      if (isNone_2801803932(rHEX60gensym535_2801807899)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextFindResult_2801807891(get_2801803952(rHEX60gensym535_2801807899), cursor_2801807897, all_2801807898);
  };

  
}

function moveCursorNextFindResultApi_2801807927(HEX3Atmp_2801807888) {
      var Temporary4;
      var Temporary6;

  var result_2801807928 = null;

    result_2801807928 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801807888))) {
      Temporary4 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807888, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801807888))) {
      Temporary6 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807888, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorNextFindResultScript_2801807886_2801807895(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807888, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym540_2801807944 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801807949 = [mnewString(0)];
    fmtRes_2801807949[0].push.apply(fmtRes_2801807949[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801807949, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym540_2801807944 || [],fmtRes_2801807949[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807928;

}

function moveCursorPrevFindResultScript_2801807952_2801807961(self_2801807962, cursor_2801807963, all_2801807964) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym547_2801807965 = getTextDocumentEditor_2801803571(self_2801807962);
      if (isNone_2801803932(rHEX60gensym547_2801807965)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevFindResult_2801807957(get_2801803952(rHEX60gensym547_2801807965), cursor_2801807963, all_2801807964);
  };

  
}

function moveCursorPrevFindResultApi_2801807993(HEX3Atmp_2801807954) {
      var Temporary4;
      var Temporary6;

  var result_2801807994 = null;

    result_2801807994 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801807954))) {
      Temporary4 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801807954, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    Label5: {
      if ((2 < len_1627392983(HEX3Atmp_2801807954))) {
      Temporary6 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801807954, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = true;
      }
      
    };
    moveCursorPrevFindResultScript_2801807952_2801807961(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801807954, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4, Temporary6);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym552_2801808010 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,70,105,110,100,82,101,115,117,108,116];
    var fmtRes_2801808015 = [mnewString(0)];
    fmtRes_2801808015[0].push.apply(fmtRes_2801808015[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808015, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym552_2801808010 || [],fmtRes_2801808015[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801807994;

}

function scrollToCursorScript_2801808018_2801808026(self_2801808027, cursor_2801808028) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym558_2801808029 = getTextDocumentEditor_2801803571(self_2801808027);
      if (isNone_2801803932(rHEX60gensym558_2801808029)) {
      break BeforeRet;
      }
      
    };
    scrollToCursor_2801803672(get_2801803952(rHEX60gensym558_2801808029), cursor_2801808028);
  };

  
}

function scrollToCursorApi_2801808056(HEX3Atmp_2801808020) {
      var Temporary4;

  var result_2801808057 = null;

    result_2801808057 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
      if ((1 < len_1627392983(HEX3Atmp_2801808020))) {
      Temporary4 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801808020, 1), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary4 = 0;
      }
      
    };
    scrollToCursorScript_2801808018_2801808026(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808020, 0), {allowExtraKeys: false, allowMissingKeys: false}), Temporary4);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym563_2801808068 = [115,99,114,111,108,108,84,111,67,117,114,115,111,114];
    var fmtRes_2801808073 = [mnewString(0)];
    fmtRes_2801808073[0].push.apply(fmtRes_2801808073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym563_2801808068 || [],fmtRes_2801808073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808057;

}

function reloadTreesitterScript_2801808076_2801808083(self_2801808084) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym567_2801808085 = getTextDocumentEditor_2801803571(self_2801808084);
      if (isNone_2801803932(rHEX60gensym567_2801808085)) {
      break BeforeRet;
      }
      
    };
    reloadTreesitter_2801808081(get_2801803952(rHEX60gensym567_2801808085));
  };

  
}

function reloadTreesitterApi_2801808111(HEX3Atmp_2801808078) {
  var result_2801808112 = null;

    result_2801808112 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    reloadTreesitterScript_2801808076_2801808083(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808078, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym572_2801808118 = [114,101,108,111,97,100,84,114,101,101,115,105,116,116,101,114];
    var fmtRes_2801808123 = [mnewString(0)];
    fmtRes_2801808123[0].push.apply(fmtRes_2801808123[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808123, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym572_2801808118 || [],fmtRes_2801808123[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808112;

}

function deleteLeftScript_2801808132_2801808147(self_2801808148) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym576_2801808149 = getTextDocumentEditor_2801803571(self_2801808148);
      if (isNone_2801803932(rHEX60gensym576_2801808149)) {
      break BeforeRet;
      }
      
    };
    deleteLeft_2801808137(get_2801803952(rHEX60gensym576_2801808149));
  };

  
}

function deleteLeftApi_2801808175(HEX3Atmp_2801808134) {
  var result_2801808176 = null;

    result_2801808176 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteLeftScript_2801808132_2801808147(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808134, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym581_2801808182 = [100,101,108,101,116,101,76,101,102,116];
    var fmtRes_2801808187 = [mnewString(0)];
    fmtRes_2801808187[0].push.apply(fmtRes_2801808187[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808187, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym581_2801808182 || [],fmtRes_2801808187[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808176;

}

function deleteRightScript_2801808196_2801808211(self_2801808212) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym584_2801808213 = getTextDocumentEditor_2801803571(self_2801808212);
      if (isNone_2801803932(rHEX60gensym584_2801808213)) {
      break BeforeRet;
      }
      
    };
    deleteRight_2801808201(get_2801803952(rHEX60gensym584_2801808213));
  };

  
}

function deleteRightApi_2801808239(HEX3Atmp_2801808198) {
  var result_2801808240 = null;

    result_2801808240 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteRightScript_2801808196_2801808211(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808198, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym589_2801808246 = [100,101,108,101,116,101,82,105,103,104,116];
    var fmtRes_2801808251 = [mnewString(0)];
    fmtRes_2801808251[0].push.apply(fmtRes_2801808251[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808251, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym589_2801808246 || [],fmtRes_2801808251[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808240;

}

function getCommandCountScript_2801808260_2801808268(self_2801808269) {
  var result_2801808270 = 0;

  BeforeRet: {
    Label1: {
      var rHEX60gensym592_2801808271 = getTextDocumentEditor_2801803571(self_2801808269);
      if (isNone_2801803932(rHEX60gensym592_2801808271)) {
      break BeforeRet;
      }
      
    };
    result_2801808270 = getCommandCount_2801808265(get_2801803952(rHEX60gensym592_2801808271));
  };

  return result_2801808270;

}

function getCommandCountApi_2801808298(HEX3Atmp_2801808262) {
  var result_2801808299 = null;

  BeforeRet: {
    result_2801808299 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2801808299 = toJson_2801804800(getCommandCountScript_2801808260_2801808268(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808262, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym598_2801808309 = [103,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2801808314 = [mnewString(0)];
    fmtRes_2801808314[0].push.apply(fmtRes_2801808314[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808314, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym598_2801808309 || [],fmtRes_2801808314[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801808299;

}

function setCommandCountScript_2801808317_2801808325(self_2801808326, count_2801808327) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym602_2801808328 = getTextDocumentEditor_2801803571(self_2801808326);
      if (isNone_2801803932(rHEX60gensym602_2801808328)) {
      break BeforeRet;
      }
      
    };
    setCommandCount_2801808322(get_2801803952(rHEX60gensym602_2801808328), count_2801808327);
  };

  
}

function setCommandCountApi_2801808355(HEX3Atmp_2801808319) {
  var result_2801808356 = null;

    result_2801808356 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountScript_2801808317_2801808325(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808319, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801808319, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym607_2801808367 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2801808372 = [mnewString(0)];
    fmtRes_2801808372[0].push.apply(fmtRes_2801808372[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808372, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym607_2801808367 || [],fmtRes_2801808372[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808356;

}

function setCommandCountRestoreScript_2801808375_2801808383(self_2801808384, count_2801808385) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym611_2801808386 = getTextDocumentEditor_2801803571(self_2801808384);
      if (isNone_2801803932(rHEX60gensym611_2801808386)) {
      break BeforeRet;
      }
      
    };
    setCommandCountRestore_2801808380(get_2801803952(rHEX60gensym611_2801808386), count_2801808385);
  };

  
}

function setCommandCountRestoreApi_2801808413(HEX3Atmp_2801808377) {
  var result_2801808414 = null;

    result_2801808414 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setCommandCountRestoreScript_2801808375_2801808383(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808377, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801808377, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym616_2801808425 = [115,101,116,67,111,109,109,97,110,100,67,111,117,110,116,82,101,115,116,111,114,101];
    var fmtRes_2801808430 = [mnewString(0)];
    fmtRes_2801808430[0].push.apply(fmtRes_2801808430[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808430, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym616_2801808425 || [],fmtRes_2801808430[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808414;

}

function updateCommandCountScript_2801808433_2801808441(self_2801808442, digit_2801808443) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym620_2801808444 = getTextDocumentEditor_2801803571(self_2801808442);
      if (isNone_2801803932(rHEX60gensym620_2801808444)) {
      break BeforeRet;
      }
      
    };
    updateCommandCount_2801808438(get_2801803952(rHEX60gensym620_2801808444), digit_2801808443);
  };

  
}

function updateCommandCountApi_2801808471(HEX3Atmp_2801808435) {
  var result_2801808472 = null;

    result_2801808472 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    updateCommandCountScript_2801808433_2801808441(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808435, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801808435, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym625_2801808483 = [117,112,100,97,116,101,67,111,109,109,97,110,100,67,111,117,110,116];
    var fmtRes_2801808488 = [mnewString(0)];
    fmtRes_2801808488[0].push.apply(fmtRes_2801808488[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808488, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym625_2801808483 || [],fmtRes_2801808488[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808472;

}

function setFlagScript_2801808491_2801808500(self_2801808501, name_2801808502, value_2801808503) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym630_2801808504 = getTextDocumentEditor_2801803571(self_2801808501);
      if (isNone_2801803932(rHEX60gensym630_2801808504)) {
      break BeforeRet;
      }
      
    };
    setFlag_2801808496(get_2801803952(rHEX60gensym630_2801808504), name_2801808502, value_2801808503);
  };

  
}

function setFlagApi_2801808532(HEX3Atmp_2801808493) {
  var result_2801808533 = null;

    result_2801808533 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    setFlagScript_2801808491_2801808500(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808493, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801808493, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801808493, 2), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym635_2801808549 = [115,101,116,70,108,97,103];
    var fmtRes_2801808554 = [mnewString(0)];
    fmtRes_2801808554[0].push.apply(fmtRes_2801808554[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808554, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym635_2801808549 || [],fmtRes_2801808554[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801808533;

}

function getFlagScript_2801808557_2801808566(self_2801808567, name_2801808568) {
  var result_2801808569 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym639_2801808570 = getTextDocumentEditor_2801803571(self_2801808567);
      if (isNone_2801803932(rHEX60gensym639_2801808570)) {
      break BeforeRet;
      }
      
    };
    result_2801808569 = getFlag_2801808562(get_2801803952(rHEX60gensym639_2801808570), name_2801808568);
  };

  return result_2801808569;

}

function getFlagApi_2801808598(HEX3Atmp_2801808559) {
  var result_2801808599 = null;

  BeforeRet: {
    result_2801808599 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2801808599 = toJson_2801808610(getFlagScript_2801808557_2801808566(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808559, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801808559, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym645_2801808619 = [103,101,116,70,108,97,103];
    var fmtRes_2801808624 = [mnewString(0)];
    fmtRes_2801808624[0].push.apply(fmtRes_2801808624[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808624, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym645_2801808619 || [],fmtRes_2801808624[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801808599;

}

function runActionScript_2801808627_2801808642(self_2801808643, action_2801808644, args_2801808645) {
  var result_2801808646 = false;

  BeforeRet: {
    Label1: {
      var rHEX60gensym650_2801808647 = getTextDocumentEditor_2801803571(self_2801808643);
      if (isNone_2801803932(rHEX60gensym650_2801808647)) {
      break BeforeRet;
      }
      
    };
    result_2801808646 = runAction_2801808632(get_2801803952(rHEX60gensym650_2801808647), action_2801808644, args_2801808645);
  };

  return result_2801808646;

}

function runActionApi_2801808676(HEX3Atmp_2801808629) {
  var result_2801808677 = null;

  BeforeRet: {
    result_2801808677 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    result_2801808677 = toJson_2801808610(runActionScript_2801808627_2801808642(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808629, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801808629, 1), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_1627393116(HEX3Atmp_2801808629, 2)), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym656_2801808692 = [114,117,110,65,99,116,105,111,110];
    var fmtRes_2801808697 = [mnewString(0)];
    fmtRes_2801808697[0].push.apply(fmtRes_2801808697[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808697, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym656_2801808692 || [],fmtRes_2801808697[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801808677;

}

function findWordBoundaryScript_2801808703_2801808739(self_2801808740, cursor_2801808741) {
  var result_2801808742 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym660_2801808743 = getTextDocumentEditor_2801803571(self_2801808740);
      if (isNone_2801803932(rHEX60gensym660_2801808743)) {
      break BeforeRet;
      }
      
    };
    result_2801808742 = nimCopy(result_2801808742, findWordBoundary_2801808708(get_2801803952(rHEX60gensym660_2801808743), cursor_2801808741), NTI2231369739);
  };

  return result_2801808742;

}

function findWordBoundaryApi_2801808771(HEX3Atmp_2801808705) {
  var result_2801808772 = null;

  BeforeRet: {
    result_2801808772 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2801808772 = toJson_2801804774(findWordBoundaryScript_2801808703_2801808739(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808705, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805447(HEX5BHEX5D_1627393116(HEX3Atmp_2801808705, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym666_2801808787 = [102,105,110,100,87,111,114,100,66,111,117,110,100,97,114,121];
    var fmtRes_2801808792 = [mnewString(0)];
    fmtRes_2801808792[0].push.apply(fmtRes_2801808792[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808792, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym666_2801808787 || [],fmtRes_2801808792[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801808772;

}

function getSelectionForMoveScript_2801808797_2801808900(self_2801808901, cursor_2801808902, move_2801808903, count_2801808904) {
  var result_2801808905 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

  BeforeRet: {
    Label1: {
      var rHEX60gensym676_2801808906 = getTextDocumentEditor_2801803571(self_2801808901);
      if (isNone_2801803932(rHEX60gensym676_2801808906)) {
      break BeforeRet;
      }
      
    };
    result_2801808905 = nimCopy(result_2801808905, getSelectionForMove_2801808802(get_2801803952(rHEX60gensym676_2801808906), cursor_2801808902, move_2801808903, count_2801808904), NTI2231369739);
  };

  return result_2801808905;

}

function getSelectionForMoveApi_2801808936(HEX3Atmp_2801808799) {
      var Temporary6;

  var result_2801808937 = null;

  BeforeRet: {
    result_2801808937 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
    };
    Label5: {
      if ((3 < len_1627392983(HEX3Atmp_2801808799))) {
      Temporary6 = jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801808799, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary6 = 0;
      }
      
    };
    result_2801808937 = toJson_2801804774(getSelectionForMoveScript_2801808797_2801808900(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801808799, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801805447(HEX5BHEX5D_1627393116(HEX3Atmp_2801808799, 1), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801808799, 2), {allowExtraKeys: false, allowMissingKeys: false}), Temporary6), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym682_2801808962 = [103,101,116,83,101,108,101,99,116,105,111,110,70,111,114,77,111,118,101];
    var fmtRes_2801808967 = [mnewString(0)];
    fmtRes_2801808967[0].push.apply(fmtRes_2801808967[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801808967, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym682_2801808962 || [],fmtRes_2801808967[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801808937;

}

function setMoveScript_2801809042_2801809238(self_2801809239, args_2801809240) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym698_2801809241 = getTextDocumentEditor_2801803571(self_2801809239);
      if (isNone_2801803932(rHEX60gensym698_2801809241)) {
      break BeforeRet;
      }
      
    };
    setMove_2801809047(get_2801803952(rHEX60gensym698_2801809241), args_2801809240);
  };

  
}

function HEX5BHEX5D_2801809282(a_2801809285, x_2801809286) {
  var result_2801809287 = null;

    if (!((a_2801809285.kind == 6))) {
    failedAssertImpl_268435515([106,115,111,110,46,110,105,109,40,53,53,48,44,32,57,41,32,96,97,46,107,105,110,100,32,61,61,32,74,65,114,114,97,121,96,32]);
    }
    
    result_2801809287 = newJArray_1627390082();
    var xa_2801809298 = x_2801809286.a;
    var L_2801809300 = addInt(subInt(subInt(len_1627392983(a_2801809285), x_2801809286.b), xa_2801809298), 1);
    Label1: {
      var i_2801809305 = 0;
      var i_536872070 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872070 < L_2801809300)) break Label3;
            i_2801809305 = i_536872070;
            add_1627390190(result_2801809287, HEX5BHEX5D_1627393116(a_2801809285, addInt(i_2801809305, xa_2801809298)));
            i_536872070 = addInt(i_536872070, 1);
          }
      };
    };

  return result_2801809287;

}

function setMoveApi_2801809268(HEX3Atmp_2801809044) {
  var result_2801809269 = null;

    result_2801809269 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setMoveScript_2801809042_2801809238(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809044, 0), {allowExtraKeys: false, allowMissingKeys: false}), HEX5BHEX5D_2801809282(HEX3Atmp_2801809044, HEX2EHEX2E_1040187488(1, 1)));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym703_2801809306 = [115,101,116,77,111,118,101];
    var fmtRes_2801809311 = [mnewString(0)];
    fmtRes_2801809311[0].push.apply(fmtRes_2801809311[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809311, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym703_2801809306 || [],fmtRes_2801809311[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809269;

}

function deleteMoveScript_2801809334_2801809374(self_2801809375, move_2801809376, which_2801809377, all_2801809378) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym725_2801809379 = getTextDocumentEditor_2801803571(self_2801809375);
      if (isNone_2801803932(rHEX60gensym725_2801809379)) {
      break BeforeRet;
      }
      
    };
    deleteMove_2801809339(get_2801803952(rHEX60gensym725_2801809379), move_2801809376, which_2801809377, all_2801809378);
  };

  
}

function deleteMoveApi_2801809408(HEX3Atmp_2801809336) {
      var Temporary5;
      var Temporary7;

  var result_2801809409 = null;

    result_2801809409 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809336))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801809336, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809336))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801809336, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    deleteMoveScript_2801809334_2801809374(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809336, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801809336, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym730_2801809430 = [100,101,108,101,116,101,77,111,118,101];
    var fmtRes_2801809435 = [mnewString(0)];
    fmtRes_2801809435[0].push.apply(fmtRes_2801809435[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809435, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym730_2801809430 || [],fmtRes_2801809435[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809409;

}

function selectMoveScript_2801809438_2801809503(self_2801809504, move_2801809505, which_2801809506, all_2801809507) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym738_2801809508 = getTextDocumentEditor_2801803571(self_2801809504);
      if (isNone_2801803932(rHEX60gensym738_2801809508)) {
      break BeforeRet;
      }
      
    };
    selectMove_2801809443(get_2801803952(rHEX60gensym738_2801809508), move_2801809505, which_2801809506, all_2801809507);
  };

  
}

function selectMoveApi_2801809537(HEX3Atmp_2801809440) {
      var Temporary5;
      var Temporary7;

  var result_2801809538 = null;

    result_2801809538 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809440))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801809440, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809440))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801809440, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    selectMoveScript_2801809438_2801809503(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809440, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801809440, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym743_2801809559 = [115,101,108,101,99,116,77,111,118,101];
    var fmtRes_2801809564 = [mnewString(0)];
    fmtRes_2801809564[0].push.apply(fmtRes_2801809564[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809564, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym743_2801809559 || [],fmtRes_2801809564[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809538;

}

function changeMoveScript_2801809567_2801809607(self_2801809608, move_2801809609, which_2801809610, all_2801809611) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym752_2801809612 = getTextDocumentEditor_2801803571(self_2801809608);
      if (isNone_2801803932(rHEX60gensym752_2801809612)) {
      break BeforeRet;
      }
      
    };
    changeMove_2801809572(get_2801803952(rHEX60gensym752_2801809612), move_2801809609, which_2801809610, all_2801809611);
  };

  
}

function changeMoveApi_2801809641(HEX3Atmp_2801809569) {
      var Temporary5;
      var Temporary7;

  var result_2801809642 = null;

    result_2801809642 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809569))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801809569, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809569))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801809569, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    changeMoveScript_2801809567_2801809607(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809569, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801809569, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym757_2801809663 = [99,104,97,110,103,101,77,111,118,101];
    var fmtRes_2801809668 = [mnewString(0)];
    fmtRes_2801809668[0].push.apply(fmtRes_2801809668[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809668, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym757_2801809663 || [],fmtRes_2801809668[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809642;

}

function moveLastScript_2801809671_2801809719(self_2801809720, move_2801809721, which_2801809722, all_2801809723, count_2801809724) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym766_2801809725 = getTextDocumentEditor_2801803571(self_2801809720);
      if (isNone_2801803932(rHEX60gensym766_2801809725)) {
      break BeforeRet;
      }
      
    };
    moveLast_2801809676(get_2801803952(rHEX60gensym766_2801809725), move_2801809721, which_2801809722, all_2801809723, count_2801809724);
  };

  
}

function moveLastApi_2801809755(HEX3Atmp_2801809673) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2801809756 = null;

    result_2801809756 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809673))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801809673, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809673))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801809673, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2801809673))) {
      Temporary9 = jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801809673, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveLastScript_2801809671_2801809719(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809673, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801809673, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym771_2801809782 = [109,111,118,101,76,97,115,116];
    var fmtRes_2801809787 = [mnewString(0)];
    fmtRes_2801809787[0].push.apply(fmtRes_2801809787[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809787, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym771_2801809782 || [],fmtRes_2801809787[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809756;

}

function moveFirstScript_2801809798_2801809846(self_2801809847, move_2801809848, which_2801809849, all_2801809850, count_2801809851) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym781_2801809852 = getTextDocumentEditor_2801803571(self_2801809847);
      if (isNone_2801803932(rHEX60gensym781_2801809852)) {
      break BeforeRet;
      }
      
    };
    moveFirst_2801809803(get_2801803952(rHEX60gensym781_2801809852), move_2801809848, which_2801809849, all_2801809850, count_2801809851);
  };

  
}

function moveFirstApi_2801809882(HEX3Atmp_2801809800) {
      var Temporary5;
      var Temporary7;
      var Temporary9;

  var result_2801809883 = null;

    result_2801809883 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801809800))) {
      Temporary5 = jsonTo_2801804275(HEX5BHEX5D_1627393116(HEX3Atmp_2801809800, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    Label6: {
      if ((3 < len_1627392983(HEX3Atmp_2801809800))) {
      Temporary7 = jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2801809800, 3), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary7 = true;
      }
      
    };
    Label8: {
      if ((4 < len_1627392983(HEX3Atmp_2801809800))) {
      Temporary9 = jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801809800, 4), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary9 = 0;
      }
      
    };
    moveFirstScript_2801809798_2801809846(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809800, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801809800, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5, Temporary7, Temporary9);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym786_2801809909 = [109,111,118,101,70,105,114,115,116];
    var fmtRes_2801809914 = [mnewString(0)];
    fmtRes_2801809914[0].push.apply(fmtRes_2801809914[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809914, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym786_2801809909 || [],fmtRes_2801809914[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809883;

}

function setSearchQueryScript_2801809917_2801809939(self_2801809940, query_2801809941) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym793_2801809942 = getTextDocumentEditor_2801803571(self_2801809940);
      if (isNone_2801803932(rHEX60gensym793_2801809942)) {
      break BeforeRet;
      }
      
    };
    setSearchQuery_2801809922(get_2801803952(rHEX60gensym793_2801809942), query_2801809941);
  };

  
}

function setSearchQueryApi_2801809969(HEX3Atmp_2801809919) {
  var result_2801809970 = null;

    result_2801809970 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setSearchQueryScript_2801809917_2801809939(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801809919, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801809919, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym798_2801809981 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121];
    var fmtRes_2801809986 = [mnewString(0)];
    fmtRes_2801809986[0].push.apply(fmtRes_2801809986[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801809986, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym798_2801809981 || [],fmtRes_2801809986[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801809970;

}

function setSearchQueryFromMoveScript_2801810009_2801810019(self_2801810020, move_2801810021, count_2801810022) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym803_2801810023 = getTextDocumentEditor_2801803571(self_2801810020);
      if (isNone_2801803932(rHEX60gensym803_2801810023)) {
      break BeforeRet;
      }
      
    };
    setSearchQueryFromMove_2801810014(get_2801803952(rHEX60gensym803_2801810023), move_2801810021, count_2801810022);
  };

  
}

function setSearchQueryFromMoveApi_2801810051(HEX3Atmp_2801810011) {
      var Temporary5;

  var result_2801810052 = null;

    result_2801810052 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    Label4: {
      if ((2 < len_1627392983(HEX3Atmp_2801810011))) {
      Temporary5 = jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2801810011, 2), {allowExtraKeys: false, allowMissingKeys: false});
      }
      else {
      Temporary5 = 0;
      }
      
    };
    setSearchQueryFromMoveScript_2801810009_2801810019(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810011, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2801810011, 1), {allowExtraKeys: false, allowMissingKeys: false}), Temporary5);
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym808_2801810068 = [115,101,116,83,101,97,114,99,104,81,117,101,114,121,70,114,111,109,77,111,118,101];
    var fmtRes_2801810073 = [mnewString(0)];
    fmtRes_2801810073[0].push.apply(fmtRes_2801810073[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810073, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym808_2801810068 || [],fmtRes_2801810073[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810052;

}

function gotoDefinitionScript_2801810404_2801810411(self_2801810412) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym830_2801810413 = getTextDocumentEditor_2801803571(self_2801810412);
      if (isNone_2801803932(rHEX60gensym830_2801810413)) {
      break BeforeRet;
      }
      
    };
    gotoDefinition_2801810409(get_2801803952(rHEX60gensym830_2801810413));
  };

  
}

function gotoDefinitionApi_2801810439(HEX3Atmp_2801810406) {
  var result_2801810440 = null;

    result_2801810440 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    gotoDefinitionScript_2801810404_2801810411(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810406, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym835_2801810446 = [103,111,116,111,68,101,102,105,110,105,116,105,111,110];
    var fmtRes_2801810451 = [mnewString(0)];
    fmtRes_2801810451[0].push.apply(fmtRes_2801810451[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810451, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym835_2801810446 || [],fmtRes_2801810451[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810440;

}

function getCompletionsScript_2801810468_2801810475(self_2801810476) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym839_2801810477 = getTextDocumentEditor_2801803571(self_2801810476);
      if (isNone_2801803932(rHEX60gensym839_2801810477)) {
      break BeforeRet;
      }
      
    };
    getCompletions_2801810473(get_2801803952(rHEX60gensym839_2801810477));
  };

  
}

function getCompletionsApi_2801810503(HEX3Atmp_2801810470) {
  var result_2801810504 = null;

    result_2801810504 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    getCompletionsScript_2801810468_2801810475(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810470, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym844_2801810510 = [103,101,116,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2801810515 = [mnewString(0)];
    fmtRes_2801810515[0].push.apply(fmtRes_2801810515[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810515, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym844_2801810510 || [],fmtRes_2801810515[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810504;

}

function hideCompletionsScript_2801810518_2801810525(self_2801810526) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym848_2801810527 = getTextDocumentEditor_2801803571(self_2801810526);
      if (isNone_2801803932(rHEX60gensym848_2801810527)) {
      break BeforeRet;
      }
      
    };
    hideCompletions_2801810523(get_2801803952(rHEX60gensym848_2801810527));
  };

  
}

function hideCompletionsApi_2801810553(HEX3Atmp_2801810520) {
  var result_2801810554 = null;

    result_2801810554 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    hideCompletionsScript_2801810518_2801810525(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810520, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym853_2801810560 = [104,105,100,101,67,111,109,112,108,101,116,105,111,110,115];
    var fmtRes_2801810565 = [mnewString(0)];
    fmtRes_2801810565[0].push.apply(fmtRes_2801810565[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810565, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym853_2801810560 || [],fmtRes_2801810565[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810554;

}

function selectPrevCompletionScript_2801810568_2801810589(self_2801810590) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym856_2801810591 = getTextDocumentEditor_2801803571(self_2801810590);
      if (isNone_2801803932(rHEX60gensym856_2801810591)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2801810573(get_2801803952(rHEX60gensym856_2801810591));
  };

  
}

function selectPrevCompletionApi_2801810617(HEX3Atmp_2801810570) {
  var result_2801810618 = null;

    result_2801810618 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript_2801810568_2801810589(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810570, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym861_2801810624 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2801810629 = [mnewString(0)];
    fmtRes_2801810629[0].push.apply(fmtRes_2801810629[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810629, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym861_2801810624 || [],fmtRes_2801810629[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810618;

}

function selectNextCompletionScript_2801810632_2801810653(self_2801810654) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym865_2801810655 = getTextDocumentEditor_2801803571(self_2801810654);
      if (isNone_2801803932(rHEX60gensym865_2801810655)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2801810637(get_2801803952(rHEX60gensym865_2801810655));
  };

  
}

function selectNextCompletionApi_2801810681(HEX3Atmp_2801810634) {
  var result_2801810682 = null;

    result_2801810682 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript_2801810632_2801810653(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810634, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym870_2801810688 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2801810693 = [mnewString(0)];
    fmtRes_2801810693[0].push.apply(fmtRes_2801810693[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810693, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym870_2801810688 || [],fmtRes_2801810693[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810682;

}

function applySelectedCompletionScript_2801810696_2801810845(self_2801810846) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym874_2801810847 = getTextDocumentEditor_2801803571(self_2801810846);
      if (isNone_2801803932(rHEX60gensym874_2801810847)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2801810701(get_2801803952(rHEX60gensym874_2801810847));
  };

  
}

function applySelectedCompletionApi_2801810873(HEX3Atmp_2801810698) {
  var result_2801810874 = null;

    result_2801810874 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript_2801810696_2801810845(jsonTo_2801803986(HEX5BHEX5D_1627393116(HEX3Atmp_2801810698, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym879_2801810880 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2801810885 = [mnewString(0)];
    fmtRes_2801810885[0].push.apply(fmtRes_2801810885[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2801810885, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym879_2801810880 || [],fmtRes_2801810885[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2801810874;

}

function dispatch_2801810912(command_2801810911, arg_2801810910) {
    var Temporary1;

  var result_2801810917 = ({val: null});

    switch (toJSStr(command_2801810911)) {
    case "setMode":
    case "set-mode":
      Temporary1 = some_2801810918(setModeApi_2801803984(arg_2801810910));
      break;
    case "mode":
      Temporary1 = some_2801810918(modeApi_2801804146(arg_2801810910));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2801810918(getContextWithModeApi_2801804206(arg_2801810910));
      break;
    case "updateTargetColumn":
    case "update-target-column":
      Temporary1 = some_2801810918(updateTargetColumnApi_2801804268(arg_2801810910));
      break;
    case "invertSelection":
    case "invert-selection":
      Temporary1 = some_2801810918(invertSelectionApi_2801804382(arg_2801810910));
      break;
    case "insert":
      Temporary1 = some_2801810918(insertApi_2801804463(arg_2801810910));
      break;
    case "delete":
      Temporary1 = some_2801810918(deleteApi_2801804954(arg_2801810910));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2801810918(selectPrevApi_2801805203(arg_2801810910));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2801810918(selectNextApi_2801805376(arg_2801810910));
      break;
    case "selectInside":
    case "select-inside":
      Temporary1 = some_2801810918(selectInsideApi_2801805440(arg_2801810910));
      break;
    case "selectInsideCurrent":
    case "select-inside-current":
      Temporary1 = some_2801810918(selectInsideCurrentApi_2801805503(arg_2801810910));
      break;
    case "selectLine":
    case "select-line":
      Temporary1 = some_2801810918(selectLineApi_2801805556(arg_2801810910));
      break;
    case "selectLineCurrent":
    case "select-line-current":
      Temporary1 = some_2801810918(selectLineCurrentApi_2801805611(arg_2801810910));
      break;
    case "selectParentTs":
    case "select-parent-ts":
      Temporary1 = some_2801810918(selectParentTsApi_2801805676(arg_2801810910));
      break;
    case "selectParentCurrentTs":
    case "select-parent-current-ts":
      Temporary1 = some_2801810918(selectParentCurrentTsApi_2801805744(arg_2801810910));
      break;
    case "insertText":
    case "insert-text":
      Temporary1 = some_2801810918(insertTextApi_2801805801(arg_2801810910));
      break;
    case "undo":
      Temporary1 = some_2801810918(undoApi_2801805917(arg_2801810910));
      break;
    case "redo":
      Temporary1 = some_2801810918(redoApi_2801805997(arg_2801810910));
      break;
    case "scrollText":
    case "scroll-text":
      Temporary1 = some_2801810918(scrollTextApi_2801806058(arg_2801810910));
      break;
    case "duplicateLastSelection":
    case "duplicate-last-selection":
      Temporary1 = some_2801810918(duplicateLastSelectionApi_2801806213(arg_2801810910));
      break;
    case "addCursorBelow":
    case "add-cursor-below":
      Temporary1 = some_2801810918(addCursorBelowApi_2801806283(arg_2801810910));
      break;
    case "addCursorAbove":
    case "add-cursor-above":
      Temporary1 = some_2801810918(addCursorAboveApi_2801806349(arg_2801810910));
      break;
    case "getPrevFindResult":
    case "get-prev-find-result":
      Temporary1 = some_2801810918(getPrevFindResultApi_2801806659(arg_2801810910));
      break;
    case "getNextFindResult":
    case "get-next-find-result":
      Temporary1 = some_2801810918(getNextFindResultApi_2801806888(arg_2801810910));
      break;
    case "addNextFindResultToSelection":
    case "add-next-find-result-to-selection":
      Temporary1 = some_2801810918(addNextFindResultToSelectionApi_2801806970(arg_2801810910));
      break;
    case "addPrevFindResultToSelection":
    case "add-prev-find-result-to-selection":
      Temporary1 = some_2801810918(addPrevFindResultToSelectionApi_2801807028(arg_2801810910));
      break;
    case "setAllFindResultToSelection":
    case "set-all-find-result-to-selection":
      Temporary1 = some_2801810918(setAllFindResultToSelectionApi_2801807372(arg_2801810910));
      break;
    case "moveCursorColumn":
    case "move-cursor-column":
      Temporary1 = some_2801810918(moveCursorColumnApi_2801807464(arg_2801810910));
      break;
    case "moveCursorLine":
    case "move-cursor-line":
      Temporary1 = some_2801810918(moveCursorLineApi_2801807554(arg_2801810910));
      break;
    case "moveCursorHome":
    case "move-cursor-home":
      Temporary1 = some_2801810918(moveCursorHomeApi_2801807625(arg_2801810910));
      break;
    case "moveCursorEnd":
    case "move-cursor-end":
      Temporary1 = some_2801810918(moveCursorEndApi_2801807693(arg_2801810910));
      break;
    case "moveCursorTo":
    case "move-cursor-to":
      Temporary1 = some_2801810918(moveCursorToApi_2801807771(arg_2801810910));
      break;
    case "moveCursorBefore":
    case "move-cursor-before":
      Temporary1 = some_2801810918(moveCursorBeforeApi_2801807854(arg_2801810910));
      break;
    case "moveCursorNextFindResult":
    case "move-cursor-next-find-result":
      Temporary1 = some_2801810918(moveCursorNextFindResultApi_2801807927(arg_2801810910));
      break;
    case "moveCursorPrevFindResult":
    case "move-cursor-prev-find-result":
      Temporary1 = some_2801810918(moveCursorPrevFindResultApi_2801807993(arg_2801810910));
      break;
    case "scrollToCursor":
    case "scroll-to-cursor":
      Temporary1 = some_2801810918(scrollToCursorApi_2801808056(arg_2801810910));
      break;
    case "reloadTreesitter":
    case "reload-treesitter":
      Temporary1 = some_2801810918(reloadTreesitterApi_2801808111(arg_2801810910));
      break;
    case "deleteLeft":
    case "delete-left":
      Temporary1 = some_2801810918(deleteLeftApi_2801808175(arg_2801810910));
      break;
    case "deleteRight":
    case "delete-right":
      Temporary1 = some_2801810918(deleteRightApi_2801808239(arg_2801810910));
      break;
    case "getCommandCount":
    case "get-command-count":
      Temporary1 = some_2801810918(getCommandCountApi_2801808298(arg_2801810910));
      break;
    case "setCommandCount":
    case "set-command-count":
      Temporary1 = some_2801810918(setCommandCountApi_2801808355(arg_2801810910));
      break;
    case "setCommandCountRestore":
    case "set-command-count-restore":
      Temporary1 = some_2801810918(setCommandCountRestoreApi_2801808413(arg_2801810910));
      break;
    case "updateCommandCount":
    case "update-command-count":
      Temporary1 = some_2801810918(updateCommandCountApi_2801808471(arg_2801810910));
      break;
    case "setFlag":
    case "set-flag":
      Temporary1 = some_2801810918(setFlagApi_2801808532(arg_2801810910));
      break;
    case "getFlag":
    case "get-flag":
      Temporary1 = some_2801810918(getFlagApi_2801808598(arg_2801810910));
      break;
    case "runAction":
    case "run-action":
      Temporary1 = some_2801810918(runActionApi_2801808676(arg_2801810910));
      break;
    case "findWordBoundary":
    case "find-word-boundary":
      Temporary1 = some_2801810918(findWordBoundaryApi_2801808771(arg_2801810910));
      break;
    case "getSelectionForMove":
    case "get-selection-for-move":
      Temporary1 = some_2801810918(getSelectionForMoveApi_2801808936(arg_2801810910));
      break;
    case "setMove":
    case "set-move":
      Temporary1 = some_2801810918(setMoveApi_2801809268(arg_2801810910));
      break;
    case "deleteMove":
    case "delete-move":
      Temporary1 = some_2801810918(deleteMoveApi_2801809408(arg_2801810910));
      break;
    case "selectMove":
    case "select-move":
      Temporary1 = some_2801810918(selectMoveApi_2801809537(arg_2801810910));
      break;
    case "changeMove":
    case "change-move":
      Temporary1 = some_2801810918(changeMoveApi_2801809641(arg_2801810910));
      break;
    case "moveLast":
    case "move-last":
      Temporary1 = some_2801810918(moveLastApi_2801809755(arg_2801810910));
      break;
    case "moveFirst":
    case "move-first":
      Temporary1 = some_2801810918(moveFirstApi_2801809882(arg_2801810910));
      break;
    case "setSearchQuery":
    case "set-search-query":
      Temporary1 = some_2801810918(setSearchQueryApi_2801809969(arg_2801810910));
      break;
    case "setSearchQueryFromMove":
    case "set-search-query-from-move":
      Temporary1 = some_2801810918(setSearchQueryFromMoveApi_2801810051(arg_2801810910));
      break;
    case "gotoDefinition":
    case "goto-definition":
      Temporary1 = some_2801810918(gotoDefinitionApi_2801810439(arg_2801810910));
      break;
    case "getCompletions":
    case "get-completions":
      Temporary1 = some_2801810918(getCompletionsApi_2801810503(arg_2801810910));
      break;
    case "hideCompletions":
    case "hide-completions":
      Temporary1 = some_2801810918(hideCompletionsApi_2801810553(arg_2801810910));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2801810918(selectPrevCompletionApi_2801810617(arg_2801810910));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2801810918(selectNextCompletionApi_2801810681(arg_2801810910));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2801810918(applySelectedCompletionApi_2801810873(arg_2801810910));
      break;
    default: 
      Temporary1 = none_2801811114();
      break;
    }
    result_2801810917 = nimCopy(result_2801810917, Temporary1, NTI2801805821);

  return result_2801810917;

}

function isNone_2801811199(self_2801811201) {
  var result_2801811202 = false;

    result_2801811202 = (self_2801811201.val == null);

  return result_2801811202;

}

function handleActionInternal_2801795422(self_2801795423, action_2801795424, args_2801795425) {
    var Temporary3;

  var result_2801811134 = 0;

  BeforeRet: {
    if ((handleUnknownDocumentEditorAction_1291848840(self_2801795423.editor, self_2801795423, action_2801795424, args_2801795425) == 3)) {
    self_2801795423.commandCount = subInt(self_2801795423.commandCount, 1);
    Label1: {
        Label2: while (true) {
        if (!(0 < self_2801795423.commandCount)) break Label2;
          if (!((handleUnknownDocumentEditorAction_1291848840(self_2801795423.editor, self_2801795423, action_2801795424, args_2801795425) == 3))) {
          break Label1;
          }
          
          self_2801795423.commandCount = subInt(self_2801795423.commandCount, 1);
        }
    };
    self_2801795423.commandCount = self_2801795423.commandCountRestore;
    self_2801795423.commandCountRestore = 0;
    result_2801811134 = 3;
    break BeforeRet;
    }
    
    var Temporary3 = args_2801795425;
    if (ConstSet307[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
    insert_2801811153(Temporary3, "elems", toJson_2801803675({id: self_2801795423.id}, initToJsonOptions_1811939362()), 0);
    if (isSome_2801811182(dispatch_2801810912(action_2801795424, args_2801795425))) {
    self_2801795423.commandCount = subInt(self_2801795423.commandCount, 1);
    Label4: {
        Label5: while (true) {
        if (!(0 < self_2801795423.commandCount)) break Label5;
          if (isNone_2801811199(dispatch_2801810912(action_2801795424, args_2801795425))) {
          break Label4;
          }
          
          self_2801795423.commandCount = subInt(self_2801795423.commandCount, 1);
        }
    };
    self_2801795423.commandCount = self_2801795423.commandCountRestore;
    self_2801795423.commandCountRestore = 0;
    result_2801811134 = 3;
    break BeforeRet;
    }
    
    result_2801811134 = 1;
    break BeforeRet;
  };

  return result_2801811134;

}

function handleAction_2801795418(self_2801795419, action_2801795420, arg_2801795421) {
  var result_2801811216 = 0;

  BeforeRet: {
    var args_2801811217 = newJArray_1627390082();
++excHandler;
    try {
    Label2: {
      var a_2801811218 = null;
      var colontmp__536871911 = null;
      colontmp__536871911 = newStringStream_1660945417(arg_2801795421);
      var p_536871912 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536871912[0], colontmp__536871911, [], false);
      try {
      var _ = getTok_1694499270(p_536871912[0]);
      Label4: {
          Label5: while (true) {
          if (!!((p_536871912[0].tok == 1))) break Label5;
            a_2801811218 = parseJson_1627395211(p_536871912[0], false, false, 0);
            add_1627390190(args_2801811217, a_2801811218);
          }
      };
      } finally {
      close_1694498967(p_536871912[0]);
      }
    };
    result_2801811216 = handleActionInternal_2801795422(self_2801795419, action_2801795420, args_2801811217);
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_2801811223 = [mnewString(0)];
    fmtRes_2801811223[0].push.apply(fmtRes_2801811223[0], [91,101,100,105,116,111,114,46,116,101,120,116,93,32,104,97,110,100,108,101,65,99,116,105,111,110,58,32]);;
    formatValue_721420459(fmtRes_2801811223, 0, action_2801795420, []);
    fmtRes_2801811223[0].push.apply(fmtRes_2801811223[0], [44,32,70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,97,114,103,115,58,32,39]);;
    formatValue_721420459(fmtRes_2801811223, 0, arg_2801795421, []);
    fmtRes_2801811223[0].push.apply(fmtRes_2801811223[0], [39]);;
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801811223[0], NTI33554449)]);
    result_2801811216 = 0;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2801811216;

}

function hasKey_1291847798(t_1291847801, key_1291847802) {
  var result_1291847803 = false;

    var hc_1291847804 = [0];
    result_1291847803 = (0 <= rawGet_1291847805(t_1291847801, key_1291847802, hc_1291847804, 0));

  return result_1291847803;

}

function contains_1291847792(t_1291847795, key_1291847796) {
  var result_1291847797 = false;

  BeforeRet: {
    result_1291847797 = hasKey_1291847798(t_1291847795, key_1291847796);
    break BeforeRet;
  };

  return result_1291847797;

}

function HEX5BHEX5D_1291848097(t_1291848100, key_1291848101) {
  var result_1291848102 = null;
  var result_1291848102_Idx = 0;

    var hcHEX60gensym22_1291848103 = [0];
    var indexHEX60gensym22_1291848110 = rawGet_1291847805(t_1291848100, key_1291848101, hcHEX60gensym22_1291848103, 0);
    if ((0 <= indexHEX60gensym22_1291848110)) {
    result_1291848102 = t_1291848100.data[chckIndx(indexHEX60gensym22_1291848110, 0, (t_1291848100.data).length - 1)]; result_1291848102_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1291848101);
    }
    

  return [result_1291848102, result_1291848102_Idx];

}

function invokeCallback_1291847745(self_1291847746, context_1291847747, args_1291847748) {
    var Temporary1;

  var result_1291847749 = false;

  BeforeRet: {
    if (!(contains_1291847792(self_1291847746.callbacks, context_1291847747))) {
    result_1291847749 = false;
    break BeforeRet;
    }
    
    var id_1291848167 = (Temporary1 = HEX5BHEX5D_1291848097(self_1291847746.callbacks, context_1291847747), Temporary1)[0][Temporary1[1]];
++excHandler;
    try {
    result_1291847749 = false;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var fmtRes_1291848178 = [mnewString(0)];
    fmtRes_1291848178[0].push.apply(fmtRes_1291848178[0], [91,101,100,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,115,99,114,105,112,116,32,104,97,110,100,108,101,67,97,108,108,98,97,99,107,32]);;
    formatValue_2332033544(fmtRes_1291848178, 0, id_1291848167, []);
    fmtRes_1291848178[0].push.apply(fmtRes_1291848178[0], [58,32]);;
    formatValue_721420459(fmtRes_1291848178, 0, getCurrentExceptionMsg_33556469(), []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_1291848178[0], NTI33554449)]);
    log_1174405220(logger_704643272[0], 5, [getStackTrace_33556599(getCurrentException())]);
    result_1291847749 = false;
    break BeforeRet;
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_1291847749;

}

function handleInput_2801795426(self_2801795427, input_2801795428) {
  var result_2801811227 = 0;

  BeforeRet: {
    if (invokeCallback_1291847745(self_2801795427.editor, getContextWithMode_2801803222(self_2801795427, [101,100,105,116,111,114,46,116,101,120,116,46,105,110,112,117,116,45,104,97,110,100,108,101,114]), newJString_1627389994(input_2801795428))) {
    result_2801811227 = 3;
    break BeforeRet;
    }
    
    insertText_2801805767(self_2801795427, input_2801795428);
    result_2801811227 = 3;
    break BeforeRet;
  };

  return result_2801811227;

}

function toJson_2936024739(self_2936024740, opt_2936024741) {
  var result_2936024742 = null;

    result_2936024742 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2936024742, [116,121,112,101], newJString_1627389994([101,100,105,116,111,114,46,97,115,116]));
    HEX5BHEX5DHEX3D_1627391903(result_2936024742, [105,100], newJInt_1627390040(self_2936024740.id));

  return result_2936024742;

}

function none_2936024662() {
  var result_2936024668 = ({val: null});

  return result_2936024668;

}

function some_2936024702(val_2936024704) {
  var result_2936024705 = ({val: null});

    if (!(!((val_2936024704 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_2936024705.val = val_2936024704;

  return result_2936024705;

}

function getAstDocumentEditor_2936024652(wrapper_2936024653) {
      var Temporary1;

  var result_2936024658 = ({val: null});

  BeforeRet: {
    if ((gEditor == null)) {
    result_2936024658 = nimCopy(result_2936024658, none_2936024662(), NTI2936020129);
    break BeforeRet;
    }
    
      var oHEX60gensym532_2936024671 = getEditorForId_1291850652(gEditor, wrapper_2936024653.id);
      if (!isSome_2801803595(oHEX60gensym532_2936024671)) Temporary1 = false; else {        var editor_2936024694 = get_2801803615(oHEX60gensym532_2936024671);
        Temporary1 = true;      }    if (Temporary1) {
    if (isObj(editor_2936024694.m_type, NTI2936014315)) {
    result_2936024658 = nimCopy(result_2936024658, some_2936024702(editor_2936024694), NTI2936020129);
    break BeforeRet;
    }
    
    }
    
    result_2936024658 = nimCopy(result_2936024658, none_2936024662(), NTI2936020129);
    break BeforeRet;
  };

  return result_2936024658;

}

function isNone_2936024770(self_2936024772) {
  var result_2936024773 = false;

    result_2936024773 = (self_2936024772.val == null);

  return result_2936024773;

}

function get_2936024790(self_2936024792) {
  var result_2936024793 = null;

    if (isNone_2936024770(self_2936024792)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2936024793 = self_2936024792["val"];

  return result_2936024793;

}

function moveCursorScript_2936024752_2936024762(self_2936024763, direction_2936024764) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym537_2936024765 = getAstDocumentEditor_2936024652(self_2936024763);
      if (isNone_2936024770(rHEX60gensym537_2936024765)) {
      break BeforeRet;
      }
      
    };
    moveCursor_2936024757(get_2936024790(rHEX60gensym537_2936024765), direction_2936024764);
  };

  
}

function fromJsonHook_2936024743(t_2936024744, jsonNode_2936024745) {
    t_2936024744.id = jsonTo_2801803682(HEX5BHEX5D_1627393037(jsonNode_2936024745, [105,100]), {allowExtraKeys: false, allowMissingKeys: false});

  
}

function fromJson_2936024823(a_2936024825, b_2936024826, opt_2936024827) {
    if (!(!(HEX3DHEX3D_1627392026(b_2936024826, null)))) {
    raiseJsonException_1811939497([10,110,111,116,32,40,98,32,61,61,32,110,105,108,41], HEX24_1811939763({Field0: [65,115,116,68,111,99,117,109,101,110,116,69,100,105,116,111,114], Field1: b_2936024826}));
    }
    
    fromJsonHook_2936024743(a_2936024825, b_2936024826);

  
}

function jsonTo_2936024817(b_2936024819, opt_2936024821) {
  var result_2936024822 = [({id: 0})];

    fromJson_2936024823(result_2936024822[0], b_2936024819, opt_2936024821);

  return result_2936024822[0];

}

function moveCursorApi_2936024815(HEX3Atmp_2936024754) {
  var result_2936024816 = null;

    result_2936024816 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    moveCursorScript_2936024752_2936024762(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936024754, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801803682(HEX5BHEX5D_1627393116(HEX3Atmp_2936024754, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym542_2936024839 = [109,111,118,101,67,117,114,115,111,114];
    var fmtRes_2936024844 = [mnewString(0)];
    fmtRes_2936024844[0].push.apply(fmtRes_2936024844[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024844, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym542_2936024839 || [],fmtRes_2936024844[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024816;

}

function moveCursorUpScript_2936024910_2936024929(self_2936024930) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym549_2936024931 = getAstDocumentEditor_2936024652(self_2936024930);
      if (isNone_2936024770(rHEX60gensym549_2936024931)) {
      break BeforeRet;
      }
      
    };
    moveCursorUp_2936024915(get_2936024790(rHEX60gensym549_2936024931));
  };

  
}

function moveCursorUpApi_2936024957(HEX3Atmp_2936024912) {
  var result_2936024958 = null;

    result_2936024958 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorUpScript_2936024910_2936024929(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936024912, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym554_2936024964 = [109,111,118,101,67,117,114,115,111,114,85,112];
    var fmtRes_2936024969 = [mnewString(0)];
    fmtRes_2936024969[0].push.apply(fmtRes_2936024969[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936024969, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym554_2936024964 || [],fmtRes_2936024969[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936024958;

}

function moveCursorDownScript_2936024972_2936024979(self_2936024980) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym560_2936024981 = getAstDocumentEditor_2936024652(self_2936024980);
      if (isNone_2936024770(rHEX60gensym560_2936024981)) {
      break BeforeRet;
      }
      
    };
    moveCursorDown_2936024977(get_2936024790(rHEX60gensym560_2936024981));
  };

  
}

function moveCursorDownApi_2936025007(HEX3Atmp_2936024974) {
  var result_2936025008 = null;

    result_2936025008 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorDownScript_2936024972_2936024979(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936024974, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym565_2936025014 = [109,111,118,101,67,117,114,115,111,114,68,111,119,110];
    var fmtRes_2936025019 = [mnewString(0)];
    fmtRes_2936025019[0].push.apply(fmtRes_2936025019[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025019, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym565_2936025014 || [],fmtRes_2936025019[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025008;

}

function moveCursorNextScript_2936025022_2936025036(self_2936025037) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym569_2936025038 = getAstDocumentEditor_2936024652(self_2936025037);
      if (isNone_2936024770(rHEX60gensym569_2936025038)) {
      break BeforeRet;
      }
      
    };
    moveCursorNext_2936025027(get_2936024790(rHEX60gensym569_2936025038));
  };

  
}

function moveCursorNextApi_2936025064(HEX3Atmp_2936025024) {
  var result_2936025065 = null;

    result_2936025065 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextScript_2936025022_2936025036(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025024, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym574_2936025071 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116];
    var fmtRes_2936025076 = [mnewString(0)];
    fmtRes_2936025076[0].push.apply(fmtRes_2936025076[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025076, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym574_2936025071 || [],fmtRes_2936025076[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025065;

}

function moveCursorPrevScript_2936025090_2936025103(self_2936025104) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym578_2936025105 = getAstDocumentEditor_2936024652(self_2936025104);
      if (isNone_2936024770(rHEX60gensym578_2936025105)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrev_2936025095(get_2936024790(rHEX60gensym578_2936025105));
  };

  
}

function moveCursorPrevApi_2936025131(HEX3Atmp_2936025092) {
  var result_2936025132 = null;

    result_2936025132 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevScript_2936025090_2936025103(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025092, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym583_2936025138 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118];
    var fmtRes_2936025143 = [mnewString(0)];
    fmtRes_2936025143[0].push.apply(fmtRes_2936025143[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025143, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym583_2936025138 || [],fmtRes_2936025143[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025132;

}

function moveCursorNextLineScript_2936025156_2936025189(self_2936025190) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym587_2936025191 = getAstDocumentEditor_2936024652(self_2936025190);
      if (isNone_2936024770(rHEX60gensym587_2936025191)) {
      break BeforeRet;
      }
      
    };
    moveCursorNextLine_2936025161(get_2936024790(rHEX60gensym587_2936025191));
  };

  
}

function moveCursorNextLineApi_2936025217(HEX3Atmp_2936025158) {
  var result_2936025218 = null;

    result_2936025218 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorNextLineScript_2936025156_2936025189(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025158, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym592_2936025224 = [109,111,118,101,67,117,114,115,111,114,78,101,120,116,76,105,110,101];
    var fmtRes_2936025229 = [mnewString(0)];
    fmtRes_2936025229[0].push.apply(fmtRes_2936025229[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025229, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym592_2936025224 || [],fmtRes_2936025229[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025218;

}

function moveCursorPrevLineScript_2936025241_2936025274(self_2936025275) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym596_2936025276 = getAstDocumentEditor_2936024652(self_2936025275);
      if (isNone_2936024770(rHEX60gensym596_2936025276)) {
      break BeforeRet;
      }
      
    };
    moveCursorPrevLine_2936025246(get_2936024790(rHEX60gensym596_2936025276));
  };

  
}

function moveCursorPrevLineApi_2936025302(HEX3Atmp_2936025243) {
  var result_2936025303 = null;

    result_2936025303 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveCursorPrevLineScript_2936025241_2936025274(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025243, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym601_2936025309 = [109,111,118,101,67,117,114,115,111,114,80,114,101,118,76,105,110,101];
    var fmtRes_2936025314 = [mnewString(0)];
    fmtRes_2936025314[0].push.apply(fmtRes_2936025314[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025314, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym601_2936025309 || [],fmtRes_2936025314[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025303;

}

function selectContainingScript_2936025327_2936025491(self_2936025492, container_2936025493) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym606_2936025494 = getAstDocumentEditor_2936024652(self_2936025492);
      if (isNone_2936024770(rHEX60gensym606_2936025494)) {
      break BeforeRet;
      }
      
    };
    selectContaining_2936025332(get_2936024790(rHEX60gensym606_2936025494), container_2936025493);
  };

  
}

function selectContainingApi_2936025521(HEX3Atmp_2936025329) {
  var result_2936025522 = null;

    result_2936025522 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    selectContainingScript_2936025327_2936025491(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025329, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936025329, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym611_2936025533 = [115,101,108,101,99,116,67,111,110,116,97,105,110,105,110,103];
    var fmtRes_2936025538 = [mnewString(0)];
    fmtRes_2936025538[0].push.apply(fmtRes_2936025538[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025538, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym611_2936025533 || [],fmtRes_2936025538[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025522;

}

function deleteSelectedScript_2936025541_2936025551(self_2936025552) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym620_2936025553 = getAstDocumentEditor_2936024652(self_2936025552);
      if (isNone_2936024770(rHEX60gensym620_2936025553)) {
      break BeforeRet;
      }
      
    };
    deleteSelected_2936025546(get_2936024790(rHEX60gensym620_2936025553));
  };

  
}

function deleteSelectedApi_2936025579(HEX3Atmp_2936025543) {
  var result_2936025580 = null;

    result_2936025580 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    deleteSelectedScript_2936025541_2936025551(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025543, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym625_2936025586 = [100,101,108,101,116,101,83,101,108,101,99,116,101,100];
    var fmtRes_2936025591 = [mnewString(0)];
    fmtRes_2936025591[0].push.apply(fmtRes_2936025591[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025591, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym625_2936025586 || [],fmtRes_2936025591[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025580;

}

function copySelectedScript_2936025657_2936025667(self_2936025668) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym628_2936025669 = getAstDocumentEditor_2936024652(self_2936025668);
      if (isNone_2936024770(rHEX60gensym628_2936025669)) {
      break BeforeRet;
      }
      
    };
    copySelected_2936025662(get_2936024790(rHEX60gensym628_2936025669));
  };

  
}

function copySelectedApi_2936025695(HEX3Atmp_2936025659) {
  var result_2936025696 = null;

    result_2936025696 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    copySelectedScript_2936025657_2936025667(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025659, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym633_2936025702 = [99,111,112,121,83,101,108,101,99,116,101,100];
    var fmtRes_2936025707 = [mnewString(0)];
    fmtRes_2936025707[0].push.apply(fmtRes_2936025707[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025707, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym633_2936025702 || [],fmtRes_2936025707[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025696;

}

function finishEditScript_2936025725_2936025775(self_2936025776, apply_2936025777) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym637_2936025778 = getAstDocumentEditor_2936024652(self_2936025776);
      if (isNone_2936024770(rHEX60gensym637_2936025778)) {
      break BeforeRet;
      }
      
    };
    finishEdit_2936021424(get_2936024790(rHEX60gensym637_2936025778), apply_2936025777);
  };

  
}

function finishEditApi_2936025805(HEX3Atmp_2936025727) {
  var result_2936025806 = null;

    result_2936025806 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    finishEditScript_2936025725_2936025775(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025727, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801804724(HEX5BHEX5D_1627393116(HEX3Atmp_2936025727, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym642_2936025817 = [102,105,110,105,115,104,69,100,105,116];
    var fmtRes_2936025822 = [mnewString(0)];
    fmtRes_2936025822[0].push.apply(fmtRes_2936025822[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025822, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym642_2936025817 || [],fmtRes_2936025822[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025806;

}

function undoScript2_2936025865_2936025898(self_2936025899) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym648_2936025900 = getAstDocumentEditor_2936024652(self_2936025899);
      if (isNone_2936024770(rHEX60gensym648_2936025900)) {
      break BeforeRet;
      }
      
    };
    undo_2936025870(get_2936024790(rHEX60gensym648_2936025900));
  };

  
}

function undoApi2_2936025926(HEX3Atmp_2936025867) {
  var result_2936025927 = null;

    result_2936025927 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    undoScript2_2936025865_2936025898(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025867, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym653_2936025933 = [117,110,100,111];
    var fmtRes_2936025938 = [mnewString(0)];
    fmtRes_2936025938[0].push.apply(fmtRes_2936025938[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936025938, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym653_2936025933 || [],fmtRes_2936025938[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936025927;

}

function redoScript2_2936025942_2936025975(self_2936025976) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym657_2936025977 = getAstDocumentEditor_2936024652(self_2936025976);
      if (isNone_2936024770(rHEX60gensym657_2936025977)) {
      break BeforeRet;
      }
      
    };
    redo_2936025947(get_2936024790(rHEX60gensym657_2936025977));
  };

  
}

function redoApi2_2936026003(HEX3Atmp_2936025944) {
  var result_2936026004 = null;

    result_2936026004 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    redoScript2_2936025942_2936025975(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936025944, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym662_2936026010 = [114,101,100,111];
    var fmtRes_2936026015 = [mnewString(0)];
    fmtRes_2936026015[0].push.apply(fmtRes_2936026015[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026015, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym662_2936026010 || [],fmtRes_2936026015[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026004;

}

function insertAfterSmartScript_2936026018_2936026143(self_2936026144, nodeTemplate_2936026145) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym667_2936026146 = getAstDocumentEditor_2936024652(self_2936026144);
      if (isNone_2936024770(rHEX60gensym667_2936026146)) {
      break BeforeRet;
      }
      
    };
    insertAfterSmart_2936026023(get_2936024790(rHEX60gensym667_2936026146), nodeTemplate_2936026145);
  };

  
}

function insertAfterSmartApi_2936026173(HEX3Atmp_2936026020) {
  var result_2936026174 = null;

    result_2936026174 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterSmartScript_2936026018_2936026143(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936026020, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026020, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym672_2936026185 = [105,110,115,101,114,116,65,102,116,101,114,83,109,97,114,116];
    var fmtRes_2936026190 = [mnewString(0)];
    fmtRes_2936026190[0].push.apply(fmtRes_2936026190[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026190, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym672_2936026185 || [],fmtRes_2936026190[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026174;

}

function insertAfterScript_2936026373_2936026466(self_2936026467, nodeTemplate_2936026468) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym680_2936026469 = getAstDocumentEditor_2936024652(self_2936026467);
      if (isNone_2936024770(rHEX60gensym680_2936026469)) {
      break BeforeRet;
      }
      
    };
    insertAfter_2936026378(get_2936024790(rHEX60gensym680_2936026469), nodeTemplate_2936026468);
  };

  
}

function insertAfterApi_2936026496(HEX3Atmp_2936026375) {
  var result_2936026497 = null;

    result_2936026497 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertAfterScript_2936026373_2936026466(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936026375, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026375, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym685_2936026508 = [105,110,115,101,114,116,65,102,116,101,114];
    var fmtRes_2936026513 = [mnewString(0)];
    fmtRes_2936026513[0].push.apply(fmtRes_2936026513[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026513, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym685_2936026508 || [],fmtRes_2936026513[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026497;

}

function insertBeforeScript_2936026528_2936026620(self_2936026621, nodeTemplate_2936026622) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym692_2936026623 = getAstDocumentEditor_2936024652(self_2936026621);
      if (isNone_2936024770(rHEX60gensym692_2936026623)) {
      break BeforeRet;
      }
      
    };
    insertBefore_2936026533(get_2936024790(rHEX60gensym692_2936026623), nodeTemplate_2936026622);
  };

  
}

function insertBeforeApi_2936026650(HEX3Atmp_2936026530) {
  var result_2936026651 = null;

    result_2936026651 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertBeforeScript_2936026528_2936026620(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936026530, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026530, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym697_2936026662 = [105,110,115,101,114,116,66,101,102,111,114,101];
    var fmtRes_2936026667 = [mnewString(0)];
    fmtRes_2936026667[0].push.apply(fmtRes_2936026667[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026667, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym697_2936026662 || [],fmtRes_2936026667[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026651;

}

function insertChildScript_2936026682_2936026773(self_2936026774, nodeTemplate_2936026775) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym704_2936026776 = getAstDocumentEditor_2936024652(self_2936026774);
      if (isNone_2936024770(rHEX60gensym704_2936026776)) {
      break BeforeRet;
      }
      
    };
    insertChild_2936026687(get_2936024790(rHEX60gensym704_2936026776), nodeTemplate_2936026775);
  };

  
}

function insertChildApi_2936026803(HEX3Atmp_2936026684) {
  var result_2936026804 = null;

    result_2936026804 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    insertChildScript_2936026682_2936026773(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936026684, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026684, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym709_2936026815 = [105,110,115,101,114,116,67,104,105,108,100];
    var fmtRes_2936026820 = [mnewString(0)];
    fmtRes_2936026820[0].push.apply(fmtRes_2936026820[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026820, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym709_2936026815 || [],fmtRes_2936026820[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026804;

}

function replaceScript_2936026835_2936026880(self_2936026881, nodeTemplate_2936026882) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym716_2936026883 = getAstDocumentEditor_2936024652(self_2936026881);
      if (isNone_2936024770(rHEX60gensym716_2936026883)) {
      break BeforeRet;
      }
      
    };
    replace_2936026840(get_2936024790(rHEX60gensym716_2936026883), nodeTemplate_2936026882);
  };

  
}

function replaceApi_2936026910(HEX3Atmp_2936026837) {
  var result_2936026911 = null;

    result_2936026911 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceScript_2936026835_2936026880(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936026837, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026837, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym721_2936026922 = [114,101,112,108,97,99,101];
    var fmtRes_2936026927 = [mnewString(0)];
    fmtRes_2936026927[0].push.apply(fmtRes_2936026927[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936026927, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym721_2936026922 || [],fmtRes_2936026927[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936026911;

}

function replaceEmptyScript_2936026942_2936026991(self_2936026992, nodeTemplate_2936026993) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym726_2936026994 = getAstDocumentEditor_2936024652(self_2936026992);
      if (isNone_2936024770(rHEX60gensym726_2936026994)) {
      break BeforeRet;
      }
      
    };
    replaceEmpty_2936026947(get_2936024790(rHEX60gensym726_2936026994), nodeTemplate_2936026993);
  };

  
}

function replaceEmptyApi_2936027021(HEX3Atmp_2936026944) {
  var result_2936027022 = null;

    result_2936027022 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    replaceEmptyScript_2936026942_2936026991(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936026944, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936026944, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym731_2936027033 = [114,101,112,108,97,99,101,69,109,112,116,121];
    var fmtRes_2936027038 = [mnewString(0)];
    fmtRes_2936027038[0].push.apply(fmtRes_2936027038[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027038, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym731_2936027033 || [],fmtRes_2936027038[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027022;

}

function replaceParentScript_2936027053_2936027070(self_2936027071) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym735_2936027072 = getAstDocumentEditor_2936024652(self_2936027071);
      if (isNone_2936024770(rHEX60gensym735_2936027072)) {
      break BeforeRet;
      }
      
    };
    replaceParent_2936027058(get_2936024790(rHEX60gensym735_2936027072));
  };

  
}

function replaceParentApi_2936027098(HEX3Atmp_2936027055) {
  var result_2936027099 = null;

    result_2936027099 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    replaceParentScript_2936027053_2936027070(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027055, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym740_2936027105 = [114,101,112,108,97,99,101,80,97,114,101,110,116];
    var fmtRes_2936027110 = [mnewString(0)];
    fmtRes_2936027110[0].push.apply(fmtRes_2936027110[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027110, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym740_2936027105 || [],fmtRes_2936027110[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027099;

}

function wrapScript_2936027113_2936027182(self_2936027183, nodeTemplate_2936027184) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym744_2936027185 = getAstDocumentEditor_2936024652(self_2936027183);
      if (isNone_2936024770(rHEX60gensym744_2936027185)) {
      break BeforeRet;
      }
      
    };
    wrap_2936027118(get_2936024790(rHEX60gensym744_2936027185), nodeTemplate_2936027184);
  };

  
}

function wrapApi_2936027212(HEX3Atmp_2936027115) {
  var result_2936027213 = null;

    result_2936027213 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    wrapScript_2936027113_2936027182(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027115, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936027115, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym749_2936027224 = [119,114,97,112];
    var fmtRes_2936027229 = [mnewString(0)];
    fmtRes_2936027229[0].push.apply(fmtRes_2936027229[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027229, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym749_2936027224 || [],fmtRes_2936027229[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027213;

}

function editPrevEmptyScript_2936027256_2936027269(self_2936027270) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym753_2936027271 = getAstDocumentEditor_2936024652(self_2936027270);
      if (isNone_2936024770(rHEX60gensym753_2936027271)) {
      break BeforeRet;
      }
      
    };
    editPrevEmpty_2936027261(get_2936024790(rHEX60gensym753_2936027271));
  };

  
}

function editPrevEmptyApi_2936027297(HEX3Atmp_2936027258) {
  var result_2936027298 = null;

    result_2936027298 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editPrevEmptyScript_2936027256_2936027269(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027258, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym758_2936027304 = [101,100,105,116,80,114,101,118,69,109,112,116,121];
    var fmtRes_2936027309 = [mnewString(0)];
    fmtRes_2936027309[0].push.apply(fmtRes_2936027309[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027309, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym758_2936027304 || [],fmtRes_2936027309[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027298;

}

function editNextEmptyScript_2936027319_2936027340(self_2936027341) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym762_2936027342 = getAstDocumentEditor_2936024652(self_2936027341);
      if (isNone_2936024770(rHEX60gensym762_2936027342)) {
      break BeforeRet;
      }
      
    };
    editNextEmpty_2936027324(get_2936024790(rHEX60gensym762_2936027342));
  };

  
}

function editNextEmptyApi_2936027368(HEX3Atmp_2936027321) {
  var result_2936027369 = null;

    result_2936027369 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    editNextEmptyScript_2936027319_2936027340(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027321, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym767_2936027375 = [101,100,105,116,78,101,120,116,69,109,112,116,121];
    var fmtRes_2936027380 = [mnewString(0)];
    fmtRes_2936027380[0].push.apply(fmtRes_2936027380[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027380, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym767_2936027375 || [],fmtRes_2936027380[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027369;

}

function renameScript_2936027396_2936027403(self_2936027404) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym771_2936027405 = getAstDocumentEditor_2936024652(self_2936027404);
      if (isNone_2936024770(rHEX60gensym771_2936027405)) {
      break BeforeRet;
      }
      
    };
    rename_2936027401(get_2936024790(rHEX60gensym771_2936027405));
  };

  
}

function renameApi_2936027431(HEX3Atmp_2936027398) {
  var result_2936027432 = null;

    result_2936027432 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    renameScript_2936027396_2936027403(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027398, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym776_2936027438 = [114,101,110,97,109,101];
    var fmtRes_2936027443 = [mnewString(0)];
    fmtRes_2936027443[0].push.apply(fmtRes_2936027443[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027443, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym776_2936027438 || [],fmtRes_2936027443[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027432;

}

function selectPrevCompletionScript2_2936027446_2936027464(self_2936027465) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym779_2936027466 = getAstDocumentEditor_2936024652(self_2936027465);
      if (isNone_2936024770(rHEX60gensym779_2936027466)) {
      break BeforeRet;
      }
      
    };
    selectPrevCompletion_2936027451(get_2936024790(rHEX60gensym779_2936027466));
  };

  
}

function selectPrevCompletionApi2_2936027492(HEX3Atmp_2936027448) {
  var result_2936027493 = null;

    result_2936027493 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevCompletionScript2_2936027446_2936027464(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027448, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym784_2936027499 = [115,101,108,101,99,116,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027504 = [mnewString(0)];
    fmtRes_2936027504[0].push.apply(fmtRes_2936027504[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027504, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym784_2936027499 || [],fmtRes_2936027504[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027493;

}

function selectNextCompletionScript2_2936027507_2936027525(editor_2936027526) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym788_2936027527 = getAstDocumentEditor_2936024652(editor_2936027526);
      if (isNone_2936024770(rHEX60gensym788_2936027527)) {
      break BeforeRet;
      }
      
    };
    selectNextCompletion_2936027512(get_2936024790(rHEX60gensym788_2936027527));
  };

  
}

function selectNextCompletionApi2_2936027553(HEX3Atmp_2936027509) {
  var result_2936027554 = null;

    result_2936027554 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextCompletionScript2_2936027507_2936027525(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027509, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym793_2936027560 = [115,101,108,101,99,116,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027565 = [mnewString(0)];
    fmtRes_2936027565[0].push.apply(fmtRes_2936027565[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027565, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym793_2936027560 || [],fmtRes_2936027565[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027554;

}

function applySelectedCompletionScript2_2936027568_2936027688(editor_2936027689) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym797_2936027690 = getAstDocumentEditor_2936024652(editor_2936027689);
      if (isNone_2936024770(rHEX60gensym797_2936027690)) {
      break BeforeRet;
      }
      
    };
    applySelectedCompletion_2936027573(get_2936024790(rHEX60gensym797_2936027690));
  };

  
}

function applySelectedCompletionApi2_2936027716(HEX3Atmp_2936027570) {
  var result_2936027717 = null;

    result_2936027717 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    applySelectedCompletionScript2_2936027568_2936027688(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027570, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym802_2936027723 = [97,112,112,108,121,83,101,108,101,99,116,101,100,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027728 = [mnewString(0)];
    fmtRes_2936027728[0].push.apply(fmtRes_2936027728[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027728, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym802_2936027723 || [],fmtRes_2936027728[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027717;

}

function cancelAndNextCompletionScript_2936027779_2936027786(self_2936027787) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym812_2936027788 = getAstDocumentEditor_2936024652(self_2936027787);
      if (isNone_2936024770(rHEX60gensym812_2936027788)) {
      break BeforeRet;
      }
      
    };
    cancelAndNextCompletion_2936027784(get_2936024790(rHEX60gensym812_2936027788));
  };

  
}

function cancelAndNextCompletionApi_2936027814(HEX3Atmp_2936027781) {
  var result_2936027815 = null;

    result_2936027815 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndNextCompletionScript_2936027779_2936027786(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027781, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym817_2936027821 = [99,97,110,99,101,108,65,110,100,78,101,120,116,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027826 = [mnewString(0)];
    fmtRes_2936027826[0].push.apply(fmtRes_2936027826[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027826, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym817_2936027821 || [],fmtRes_2936027826[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027815;

}

function cancelAndPrevCompletionScript_2936027829_2936027836(self_2936027837) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym820_2936027838 = getAstDocumentEditor_2936024652(self_2936027837);
      if (isNone_2936024770(rHEX60gensym820_2936027838)) {
      break BeforeRet;
      }
      
    };
    cancelAndPrevCompletion_2936027834(get_2936024790(rHEX60gensym820_2936027838));
  };

  
}

function cancelAndPrevCompletionApi_2936027864(HEX3Atmp_2936027831) {
  var result_2936027865 = null;

    result_2936027865 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndPrevCompletionScript_2936027829_2936027836(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027831, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym825_2936027871 = [99,97,110,99,101,108,65,110,100,80,114,101,118,67,111,109,112,108,101,116,105,111,110];
    var fmtRes_2936027876 = [mnewString(0)];
    fmtRes_2936027876[0].push.apply(fmtRes_2936027876[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027876, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym825_2936027871 || [],fmtRes_2936027876[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027865;

}

function cancelAndDeleteScript_2936027879_2936027889(self_2936027890) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym828_2936027891 = getAstDocumentEditor_2936024652(self_2936027890);
      if (isNone_2936024770(rHEX60gensym828_2936027891)) {
      break BeforeRet;
      }
      
    };
    cancelAndDelete_2936027884(get_2936024790(rHEX60gensym828_2936027891));
  };

  
}

function cancelAndDeleteApi_2936027917(HEX3Atmp_2936027881) {
  var result_2936027918 = null;

    result_2936027918 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    cancelAndDeleteScript_2936027879_2936027889(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027881, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym833_2936027924 = [99,97,110,99,101,108,65,110,100,68,101,108,101,116,101];
    var fmtRes_2936027929 = [mnewString(0)];
    fmtRes_2936027929[0].push.apply(fmtRes_2936027929[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936027929, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym833_2936027924 || [],fmtRes_2936027929[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936027918;

}

function moveNodeToPrevSpaceScript_2936027932_2936028043(self_2936028044) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym836_2936028045 = getAstDocumentEditor_2936024652(self_2936028044);
      if (isNone_2936024770(rHEX60gensym836_2936028045)) {
      break BeforeRet;
      }
      
    };
    moveNodeToPrevSpace_2936027937(get_2936024790(rHEX60gensym836_2936028045));
  };

  
}

function moveNodeToPrevSpaceApi_2936028071(HEX3Atmp_2936027934) {
  var result_2936028072 = null;

    result_2936028072 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToPrevSpaceScript_2936027932_2936028043(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936027934, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym841_2936028078 = [109,111,118,101,78,111,100,101,84,111,80,114,101,118,83,112,97,99,101];
    var fmtRes_2936028083 = [mnewString(0)];
    fmtRes_2936028083[0].push.apply(fmtRes_2936028083[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028083, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym841_2936028078 || [],fmtRes_2936028083[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028072;

}

function moveNodeToNextSpaceScript_2936028094_2936028206(self_2936028207) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym849_2936028208 = getAstDocumentEditor_2936024652(self_2936028207);
      if (isNone_2936024770(rHEX60gensym849_2936028208)) {
      break BeforeRet;
      }
      
    };
    moveNodeToNextSpace_2936028099(get_2936024790(rHEX60gensym849_2936028208));
  };

  
}

function moveNodeToNextSpaceApi_2936028234(HEX3Atmp_2936028096) {
  var result_2936028235 = null;

    result_2936028235 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    moveNodeToNextSpaceScript_2936028094_2936028206(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936028096, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym854_2936028241 = [109,111,118,101,78,111,100,101,84,111,78,101,120,116,83,112,97,99,101];
    var fmtRes_2936028246 = [mnewString(0)];
    fmtRes_2936028246[0].push.apply(fmtRes_2936028246[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028246, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym854_2936028241 || [],fmtRes_2936028246[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028235;

}

function selectPrevScript2_2936028260_2936028267(self_2936028268) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym861_2936028269 = getAstDocumentEditor_2936024652(self_2936028268);
      if (isNone_2936024770(rHEX60gensym861_2936028269)) {
      break BeforeRet;
      }
      
    };
    selectPrev_2936028265(get_2936024790(rHEX60gensym861_2936028269));
  };

  
}

function selectPrevApi2_2936028295(HEX3Atmp_2936028262) {
  var result_2936028296 = null;

    result_2936028296 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectPrevScript2_2936028260_2936028267(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936028262, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym866_2936028302 = [115,101,108,101,99,116,80,114,101,118];
    var fmtRes_2936028307 = [mnewString(0)];
    fmtRes_2936028307[0].push.apply(fmtRes_2936028307[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028307, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym866_2936028302 || [],fmtRes_2936028307[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028296;

}

function selectNextScript2_2936028311_2936028318(self_2936028319) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym869_2936028320 = getAstDocumentEditor_2936024652(self_2936028319);
      if (isNone_2936024770(rHEX60gensym869_2936028320)) {
      break BeforeRet;
      }
      
    };
    selectNext_2936028316(get_2936024790(rHEX60gensym869_2936028320));
  };

  
}

function selectNextApi2_2936028346(HEX3Atmp_2936028313) {
  var result_2936028347 = null;

    result_2936028347 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectNextScript2_2936028311_2936028318(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936028313, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym874_2936028353 = [115,101,108,101,99,116,78,101,120,116];
    var fmtRes_2936028358 = [mnewString(0)];
    fmtRes_2936028358[0].push.apply(fmtRes_2936028358[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936028358, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym874_2936028353 || [],fmtRes_2936028358[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936028347;

}

function gotoScript_2936028362_2936029149(self_2936029150, where_2936029151) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym878_2936029152 = getAstDocumentEditor_2936024652(self_2936029150);
      if (isNone_2936024770(rHEX60gensym878_2936029152)) {
      break BeforeRet;
      }
      
    };
    goto_2936028367(get_2936024790(rHEX60gensym878_2936029152), where_2936029151);
  };

  
}

function gotoApi_2936029179(HEX3Atmp_2936028364) {
  var result_2936029180 = null;

    result_2936029180 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    gotoScript_2936028362_2936029149(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936028364, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936028364, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym883_2936029191 = [103,111,116,111];
    var fmtRes_2936029196 = [mnewString(0)];
    fmtRes_2936029196[0].push.apply(fmtRes_2936029196[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029196, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym883_2936029191 || [],fmtRes_2936029196[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029180;

}

function runSelectedFunctionScript_2936029304_2936029530(self_2936029531) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym904_2936029532 = getAstDocumentEditor_2936024652(self_2936029531);
      if (isNone_2936024770(rHEX60gensym904_2936029532)) {
      break BeforeRet;
      }
      
    };
    runSelectedFunction_2936029309(get_2936024790(rHEX60gensym904_2936029532));
  };

  
}

function runSelectedFunctionApi_2936029558(HEX3Atmp_2936029306) {
  var result_2936029559 = null;

    result_2936029559 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    runSelectedFunctionScript_2936029304_2936029530(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936029306, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym909_2936029565 = [114,117,110,83,101,108,101,99,116,101,100,70,117,110,99,116,105,111,110];
    var fmtRes_2936029570 = [mnewString(0)];
    fmtRes_2936029570[0].push.apply(fmtRes_2936029570[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029570, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym909_2936029565 || [],fmtRes_2936029570[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029559;

}

function toggleOptionScript_2936029582_2936029590(self_2936029591, name_2936029592) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym927_2936029593 = getAstDocumentEditor_2936024652(self_2936029591);
      if (isNone_2936024770(rHEX60gensym927_2936029593)) {
      break BeforeRet;
      }
      
    };
    toggleOption_2936029587(get_2936024790(rHEX60gensym927_2936029593), name_2936029592);
  };

  
}

function toggleOptionApi_2936029620(HEX3Atmp_2936029584) {
  var result_2936029621 = null;

    result_2936029621 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    toggleOptionScript_2936029582_2936029590(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936029584, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936029584, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym932_2936029632 = [116,111,103,103,108,101,79,112,116,105,111,110];
    var fmtRes_2936029637 = [mnewString(0)];
    fmtRes_2936029637[0].push.apply(fmtRes_2936029637[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029637, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym932_2936029632 || [],fmtRes_2936029637[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029621;

}

function runLastCommandScript_2936029644_2936029652(self_2936029653, which_2936029654) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym936_2936029655 = getAstDocumentEditor_2936024652(self_2936029653);
      if (isNone_2936024770(rHEX60gensym936_2936029655)) {
      break BeforeRet;
      }
      
    };
    runLastCommand_2936029649(get_2936024790(rHEX60gensym936_2936029655), which_2936029654);
  };

  
}

function runLastCommandApi_2936029682(HEX3Atmp_2936029646) {
  var result_2936029683 = null;

    result_2936029683 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    runLastCommandScript_2936029644_2936029652(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936029646, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936029646, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym941_2936029694 = [114,117,110,76,97,115,116,67,111,109,109,97,110,100];
    var fmtRes_2936029699 = [mnewString(0)];
    fmtRes_2936029699[0].push.apply(fmtRes_2936029699[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936029699, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym941_2936029694 || [],fmtRes_2936029699[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936029683;

}

function selectCenterNodeScript_2936029702_2936030116(self_2936030117) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym944_2936030118 = getAstDocumentEditor_2936024652(self_2936030117);
      if (isNone_2936024770(rHEX60gensym944_2936030118)) {
      break BeforeRet;
      }
      
    };
    selectCenterNode_2936029707(get_2936024790(rHEX60gensym944_2936030118));
  };

  
}

function selectCenterNodeApi_2936030144(HEX3Atmp_2936029704) {
  var result_2936030145 = null;

    result_2936030145 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    selectCenterNodeScript_2936029702_2936030116(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936029704, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym949_2936030151 = [115,101,108,101,99,116,67,101,110,116,101,114,78,111,100,101];
    var fmtRes_2936030156 = [mnewString(0)];
    fmtRes_2936030156[0].push.apply(fmtRes_2936030156[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030156, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym949_2936030151 || [],fmtRes_2936030156[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936030145;

}

function scrollScript_2936030188_2936030200(self_2936030201, amount_2936030202) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym963_2936030203 = getAstDocumentEditor_2936024652(self_2936030201);
      if (isNone_2936024770(rHEX60gensym963_2936030203)) {
      break BeforeRet;
      }
      
    };
    scroll_2936030193(get_2936024790(rHEX60gensym963_2936030203), amount_2936030202);
  };

  
}

function scrollApi_2936030230(HEX3Atmp_2936030190) {
  var result_2936030231 = null;

    result_2936030231 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollScript_2936030188_2936030200(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936030190, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_2801806065(HEX5BHEX5D_1627393116(HEX3Atmp_2936030190, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym968_2936030242 = [115,99,114,111,108,108];
    var fmtRes_2936030247 = [mnewString(0)];
    fmtRes_2936030247[0].push.apply(fmtRes_2936030247[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030247, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym968_2936030242 || [],fmtRes_2936030247[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936030231;

}

function scrollOutputScript_2936030250_2936030269(self_2936030270, arg_2936030271) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym972_2936030272 = getAstDocumentEditor_2936024652(self_2936030270);
      if (isNone_2936024770(rHEX60gensym972_2936030272)) {
      break BeforeRet;
      }
      
    };
    scrollOutput_2936030255(get_2936024790(rHEX60gensym972_2936030272), arg_2936030271);
  };

  
}

function scrollOutputApi_2936030299(HEX3Atmp_2936030252) {
  var result_2936030300 = null;

    result_2936030300 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    scrollOutputScript_2936030250_2936030269(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936030252, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936030252, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym977_2936030311 = [115,99,114,111,108,108,79,117,116,112,117,116];
    var fmtRes_2936030316 = [mnewString(0)];
    fmtRes_2936030316[0].push.apply(fmtRes_2936030316[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030316, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym977_2936030311 || [],fmtRes_2936030316[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936030300;

}

function dumpContextScript_2936030319_2936030326(self_2936030327) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym980_2936030328 = getAstDocumentEditor_2936024652(self_2936030327);
      if (isNone_2936024770(rHEX60gensym980_2936030328)) {
      break BeforeRet;
      }
      
    };
    dumpContext_2936030324(get_2936024790(rHEX60gensym980_2936030328));
  };

  
}

function dumpContextApi_2936030354(HEX3Atmp_2936030321) {
  var result_2936030355 = null;

    result_2936030355 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    dumpContextScript_2936030319_2936030326(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936030321, 0), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym985_2936030361 = [100,117,109,112,67,111,110,116,101,120,116];
    var fmtRes_2936030366 = [mnewString(0)];
    fmtRes_2936030366[0].push.apply(fmtRes_2936030366[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030366, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym985_2936030361 || [],fmtRes_2936030366[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936030355;

}

function setModeScript2_2936030513_2936030553(self_2936030554, mode_2936030555) {
  BeforeRet: {
    Label1: {
      var rHEX60gensym989_2936030556 = getAstDocumentEditor_2936024652(self_2936030554);
      if (isNone_2936024770(rHEX60gensym989_2936030556)) {
      break BeforeRet;
      }
      
    };
    setMode_2936030518(get_2936024790(rHEX60gensym989_2936030556), mode_2936030555);
  };

  
}

function setModeApi2_2936030583(HEX3Atmp_2936030515) {
  var result_2936030584 = null;

    result_2936030584 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    setModeScript2_2936030513_2936030553(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936030515, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936030515, 1), {allowExtraKeys: false, allowMissingKeys: false}));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym994_2936030595 = [115,101,116,77,111,100,101];
    var fmtRes_2936030600 = [mnewString(0)];
    fmtRes_2936030600[0].push.apply(fmtRes_2936030600[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030600, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym994_2936030595 || [],fmtRes_2936030600[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }

  return result_2936030584;

}

function modeScript2_2936030604_2936030612(self_2936030613) {
  var result_2936030614 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1000_2936030615 = getAstDocumentEditor_2936024652(self_2936030613);
      if (isNone_2936024770(rHEX60gensym1000_2936030615)) {
      break BeforeRet;
      }
      
    };
    result_2936030614 = nimCopy(null, mode_2936030609(get_2936024790(rHEX60gensym1000_2936030615)), NTI33554449);
  };

  return result_2936030614;

}

function modeApi2_2936030642(HEX3Atmp_2936030606) {
  var result_2936030643 = null;

  BeforeRet: {
    result_2936030643 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    result_2936030643 = toJson_1811939932(modeScript2_2936030604_2936030612(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936030606, 0), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1006_2936030653 = [109,111,100,101];
    var fmtRes_2936030658 = [mnewString(0)];
    fmtRes_2936030658[0].push.apply(fmtRes_2936030658[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030658, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1006_2936030653 || [],fmtRes_2936030658[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2936030643;

}

function getContextWithModeScript2_2936030661_2936030670(self_2936030671, context_2936030672) {
  var result_2936030673 = [];

  BeforeRet: {
    Label1: {
      var rHEX60gensym1010_2936030674 = getAstDocumentEditor_2936024652(self_2936030671);
      if (isNone_2936024770(rHEX60gensym1010_2936030674)) {
      break BeforeRet;
      }
      
    };
    result_2936030673 = nimCopy(null, getContextWithMode_2936030666(get_2936024790(rHEX60gensym1010_2936030674), context_2936030672), NTI33554449);
  };

  return result_2936030673;

}

function getContextWithModeApi2_2936030702(HEX3Atmp_2936030663) {
  var result_2936030703 = null;

  BeforeRet: {
    result_2936030703 = newJNull_1627390049();
++excHandler;
    try {
    Label2: {
    };
    Label3: {
    };
    result_2936030703 = toJson_1811939932(getContextWithModeScript2_2936030661_2936030670(jsonTo_2936024817(HEX5BHEX5D_1627393116(HEX3Atmp_2936030663, 0), {allowExtraKeys: false, allowMissingKeys: false}), jsonTo_1811939884(HEX5BHEX5D_1627393116(HEX3Atmp_2936030663, 1), {allowExtraKeys: false, allowMissingKeys: false})), initToJsonOptions_1811939362());
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    if (lastJSError && (isObj(lastJSError.m_type, NTI33555177))) {
    var nameHEX60gensym1016_2936030718 = [103,101,116,67,111,110,116,101,120,116,87,105,116,104,77,111,100,101];
    var fmtRes_2936030723 = [mnewString(0)];
    fmtRes_2936030723[0].push.apply(fmtRes_2936030723[0], [58,32,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,115,58,32]);;
    formatValue_721420459(fmtRes_2936030723, 0, getCurrentExceptionMsg_33556469(), []);
    rawEcho(([91,101,100,105,116,111,114,93,32,70,97,105,108,101,100,32,116,111,32,114,117,110,32,102,117,110,99,116,105,111,110,32] || []).concat(nameHEX60gensym1016_2936030718 || [],fmtRes_2936030723[0] || []));
    rawEcho(getStackTrace_33556599(getCurrentException()));
    }
    else {
    	reraiseException();
    }
    lastJSError = prevJSError;
    } finally {
    }
  };

  return result_2936030703;

}

function dispatch_2936030728(command_2936030727, arg_2936030726) {
    var Temporary1;

  var result_2936030730 = ({val: null});

    switch (toJSStr(command_2936030727)) {
    case "moveCursor":
    case "move-cursor":
      Temporary1 = some_2801810918(moveCursorApi_2936024815(arg_2936030726));
      break;
    case "moveCursorUp":
    case "move-cursor-up":
      Temporary1 = some_2801810918(moveCursorUpApi_2936024957(arg_2936030726));
      break;
    case "moveCursorDown":
    case "move-cursor-down":
      Temporary1 = some_2801810918(moveCursorDownApi_2936025007(arg_2936030726));
      break;
    case "moveCursorNext":
    case "move-cursor-next":
      Temporary1 = some_2801810918(moveCursorNextApi_2936025064(arg_2936030726));
      break;
    case "moveCursorPrev":
    case "move-cursor-prev":
      Temporary1 = some_2801810918(moveCursorPrevApi_2936025131(arg_2936030726));
      break;
    case "moveCursorNextLine":
    case "move-cursor-next-line":
      Temporary1 = some_2801810918(moveCursorNextLineApi_2936025217(arg_2936030726));
      break;
    case "moveCursorPrevLine":
    case "move-cursor-prev-line":
      Temporary1 = some_2801810918(moveCursorPrevLineApi_2936025302(arg_2936030726));
      break;
    case "selectContaining":
    case "select-containing":
      Temporary1 = some_2801810918(selectContainingApi_2936025521(arg_2936030726));
      break;
    case "deleteSelected":
    case "delete-selected":
      Temporary1 = some_2801810918(deleteSelectedApi_2936025579(arg_2936030726));
      break;
    case "copySelected":
    case "copy-selected":
      Temporary1 = some_2801810918(copySelectedApi_2936025695(arg_2936030726));
      break;
    case "finishEdit":
    case "finish-edit":
      Temporary1 = some_2801810918(finishEditApi_2936025805(arg_2936030726));
      break;
    case "undo":
      Temporary1 = some_2801810918(undoApi2_2936025926(arg_2936030726));
      break;
    case "redo":
      Temporary1 = some_2801810918(redoApi2_2936026003(arg_2936030726));
      break;
    case "insertAfterSmart":
    case "insert-after-smart":
      Temporary1 = some_2801810918(insertAfterSmartApi_2936026173(arg_2936030726));
      break;
    case "insertAfter":
    case "insert-after":
      Temporary1 = some_2801810918(insertAfterApi_2936026496(arg_2936030726));
      break;
    case "insertBefore":
    case "insert-before":
      Temporary1 = some_2801810918(insertBeforeApi_2936026650(arg_2936030726));
      break;
    case "insertChild":
    case "insert-child":
      Temporary1 = some_2801810918(insertChildApi_2936026803(arg_2936030726));
      break;
    case "replace":
      Temporary1 = some_2801810918(replaceApi_2936026910(arg_2936030726));
      break;
    case "replaceEmpty":
    case "replace-empty":
      Temporary1 = some_2801810918(replaceEmptyApi_2936027021(arg_2936030726));
      break;
    case "replaceParent":
    case "replace-parent":
      Temporary1 = some_2801810918(replaceParentApi_2936027098(arg_2936030726));
      break;
    case "wrap":
      Temporary1 = some_2801810918(wrapApi_2936027212(arg_2936030726));
      break;
    case "editPrevEmpty":
    case "edit-prev-empty":
      Temporary1 = some_2801810918(editPrevEmptyApi_2936027297(arg_2936030726));
      break;
    case "editNextEmpty":
    case "edit-next-empty":
      Temporary1 = some_2801810918(editNextEmptyApi_2936027368(arg_2936030726));
      break;
    case "rename":
      Temporary1 = some_2801810918(renameApi_2936027431(arg_2936030726));
      break;
    case "selectPrevCompletion":
    case "select-prev-completion":
      Temporary1 = some_2801810918(selectPrevCompletionApi2_2936027492(arg_2936030726));
      break;
    case "selectNextCompletion":
    case "select-next-completion":
      Temporary1 = some_2801810918(selectNextCompletionApi2_2936027553(arg_2936030726));
      break;
    case "applySelectedCompletion":
    case "apply-selected-completion":
      Temporary1 = some_2801810918(applySelectedCompletionApi2_2936027716(arg_2936030726));
      break;
    case "cancelAndNextCompletion":
    case "cancel-and-next-completion":
      Temporary1 = some_2801810918(cancelAndNextCompletionApi_2936027814(arg_2936030726));
      break;
    case "cancelAndPrevCompletion":
    case "cancel-and-prev-completion":
      Temporary1 = some_2801810918(cancelAndPrevCompletionApi_2936027864(arg_2936030726));
      break;
    case "cancelAndDelete":
    case "cancel-and-delete":
      Temporary1 = some_2801810918(cancelAndDeleteApi_2936027917(arg_2936030726));
      break;
    case "moveNodeToPrevSpace":
    case "move-node-to-prev-space":
      Temporary1 = some_2801810918(moveNodeToPrevSpaceApi_2936028071(arg_2936030726));
      break;
    case "moveNodeToNextSpace":
    case "move-node-to-next-space":
      Temporary1 = some_2801810918(moveNodeToNextSpaceApi_2936028234(arg_2936030726));
      break;
    case "selectPrev":
    case "select-prev":
      Temporary1 = some_2801810918(selectPrevApi2_2936028295(arg_2936030726));
      break;
    case "selectNext":
    case "select-next":
      Temporary1 = some_2801810918(selectNextApi2_2936028346(arg_2936030726));
      break;
    case "goto":
      Temporary1 = some_2801810918(gotoApi_2936029179(arg_2936030726));
      break;
    case "runSelectedFunction":
    case "run-selected-function":
      Temporary1 = some_2801810918(runSelectedFunctionApi_2936029558(arg_2936030726));
      break;
    case "toggleOption":
    case "toggle-option":
      Temporary1 = some_2801810918(toggleOptionApi_2936029620(arg_2936030726));
      break;
    case "runLastCommand":
    case "run-last-command":
      Temporary1 = some_2801810918(runLastCommandApi_2936029682(arg_2936030726));
      break;
    case "selectCenterNode":
    case "select-center-node":
      Temporary1 = some_2801810918(selectCenterNodeApi_2936030144(arg_2936030726));
      break;
    case "scroll":
      Temporary1 = some_2801810918(scrollApi_2936030230(arg_2936030726));
      break;
    case "scrollOutput":
    case "scroll-output":
      Temporary1 = some_2801810918(scrollOutputApi_2936030299(arg_2936030726));
      break;
    case "dumpContext":
    case "dump-context":
      Temporary1 = some_2801810918(dumpContextApi_2936030354(arg_2936030726));
      break;
    case "setMode":
    case "set-mode":
      Temporary1 = some_2801810918(setModeApi2_2936030583(arg_2936030726));
      break;
    case "mode":
      Temporary1 = some_2801810918(modeApi2_2936030642(arg_2936030726));
      break;
    case "getContextWithMode":
    case "get-context-with-mode":
      Temporary1 = some_2801810918(getContextWithModeApi2_2936030702(arg_2936030726));
      break;
    default: 
      Temporary1 = none_2801811114();
      break;
    }
    result_2936030730 = nimCopy(result_2936030730, Temporary1, NTI2801805821);

  return result_2936030730;

}

function handleAction_2936029639(self_2936029640, action_2936029641, arg_2936029642) {
  var result_2936030876 = 0;

  BeforeRet: {
    var args_2936030877 = newJArray_1627390082();
    add_1627390190(args_2936030877, toJson_2936024739({id: self_2936029640.id}, initToJsonOptions_1811939362()));
    Label1: {
      var a_2936030878 = null;
      var colontmp__536872119 = null;
      colontmp__536872119 = newStringStream_1660945417(arg_2936029642);
      var p_536872120 = [({m_type: NTI1694498823, a: [], tok: 0, kind: 0, err: 0, state: [], filename: [], rawStringLiterals: false, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
      open_1694498913(p_536872120[0], colontmp__536872119, [], false);
      try {
      var _ = getTok_1694499270(p_536872120[0]);
      Label3: {
          Label4: while (true) {
          if (!!((p_536872120[0].tok == 1))) break Label4;
            a_2936030878 = parseJson_1627395211(p_536872120[0], false, false, 0);
            add_1627390190(args_2936030877, a_2936030878);
          }
      };
      } finally {
      close_1694498967(p_536872120[0]);
      }
    };
    var newLastCommand_2936030879 = {Field0: nimCopy(null, action_2936029641, NTI33554449), Field1: nimCopy(null, arg_2936029642, NTI33554449)};
    try {
    if ((handleUnknownDocumentEditorAction_1291848840(self_2936029640.editor, self_2936029640, action_2936029641, args_2936030877) == 3)) {
    result_2936030876 = 3;
    break BeforeRet;
    }
    
    if (isSome_2801811182(dispatch_2936030728(action_2936029641, args_2936030877))) {
    result_2936030876 = 3;
    break BeforeRet;
    }
    
    result_2936030876 = 1;
    break BeforeRet;
    } finally {
    self_2936029640.lastCommand = nimCopy(self_2936029640.lastCommand, newLastCommand_2936030879, NTI2936014338);
    }
  };

  return result_2936030876;

}

function sysFatal_33556946(message_33556949) {
    raiseException({message: nimCopy(null, message_33556949, NTI33554449), m_type: NTI134217763, parent: null, name: null, trace: [], up: null}, "NilAccessDefect");

  
}

function chckNilDisp(p_33556945, p_33556945_Idx) {
    if ((p_33556945 == null && p_33556945_Idx == 0)) {
    sysFatal_33556946([99,97,110,110,111,116,32,100,105,115,112,97,116,99,104,59,32,100,105,115,112,97,116,99,104,101,114,32,105,115,32,110,105,108]);
    }
    

  
}

function isSome_704643153(self_704643155) {
  var result_704643156 = false;

    result_704643156 = !((self_704643155.val == null));

  return result_704643156;

}

function isNone_704643181(self_704643183) {
  var result_704643184 = false;

    result_704643184 = (self_704643183.val == null);

  return result_704643184;

}

function get_704643173(self_704643175) {
  var result_704643176 = null;

    if (isNone_704643181(self_704643175)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643176 = self_704643175["val"];

  return result_704643176;

}

function isSome_704643207(self_704643209) {
  var result_704643210 = false;

    result_704643210 = !((self_704643209.val == null));

  return result_704643210;

}

function isNone_704643235(self_704643237) {
  var result_704643238 = false;

    result_704643238 = (self_704643237.val == null);

  return result_704643238;

}

function get_704643227(self_704643229) {
  var result_704643230 = null;

    if (isNone_704643235(self_704643229)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_704643230 = self_704643229["val"];

  return result_704643230;

}

function log_704643142(self_704643143, level_704643144, args_704643145) {
      var Temporary1;
      var Temporary2;

      var oHEX60gensym2_704643148 = nimCopy(null, self_704643143.fileLogger, NTI704643097);
      if (!isSome_704643153(oHEX60gensym2_704643148)) Temporary1 = false; else {        var l_704643199 = get_704643173(oHEX60gensym2_704643148);
        Temporary1 = true;      }    if (Temporary1) {
    log_1174405220(l_704643199, level_704643144, args_704643145);
    }
    
      var oHEX60gensym4_704643202 = nimCopy(null, self_704643143.consoleLogger, NTI704643084);
      if (!isSome_704643207(oHEX60gensym4_704643202)) Temporary2 = false; else {        var l_704643253 = get_704643227(oHEX60gensym4_704643202);
        Temporary2 = true;      }    if (Temporary2) {
    log_1174405220(l_704643253, level_704643144, args_704643145);
    }
    

  
}

function nsuToLowerAsciiChar(c_855638100) {
  var result_855638101 = 0;

    if ((ConstSet310[c_855638100] != undefined)) {
    result_855638101 = (c_855638100 ^ 32);
    }
    else {
      result_855638101 = c_855638100;
    }
    

  return result_855638101;

}

function nsuIntToStr(x_855638860, minchars_855638861) {
  var result_855638862 = [];

    result_855638862 = nimCopy(null, HEX24_369098760(absInt(x_855638860)), NTI33554449);
    Label1: {
      var i_855638867 = 0;
      var colontmp__536872238 = 0;
      colontmp__536872238 = subInt(minchars_855638861, (result_855638862).length);
      var res_536872239 = 1;
      Label2: {
          Label3: while (true) {
          if (!(res_536872239 <= colontmp__536872238)) break Label3;
            i_855638867 = res_536872239;
            result_855638862 = nimCopy(null, [48].concat(result_855638862 || []), NTI33554449);
            res_536872239 = addInt(res_536872239, 1);
          }
      };
    };
    if ((x_855638860 < 0)) {
    result_855638862 = nimCopy(null, [45].concat(result_855638862 || []), NTI33554449);
    }
    

  return result_855638862;

}

function monthday_1191183564(dt_1191183565) {
  var result_1191183566 = 0;

    if (!(!((dt_1191183565.monthdayZero == 0)))) {
    failedAssertImpl_268435515(makeNimstrLit("times.nim(1062, 28) `dt.monthdayZero != 0` Uninitialized datetime"));
    }
    
    result_1191183566 = dt_1191183565.monthdayZero;

  return result_1191183566;

}

function ntgetDateStr(dt_1191183915) {
  var result_1191183916 = [];

    if (!(!((dt_1191183915.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,56,56,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183916 = nimCopy(null, (HEX24_369098760(dt_1191183915.year) || []).concat([45],nsuIntToStr(dt_1191183915.monthZero, 2) || [],[45],nsuIntToStr(monthday_1191183564(dt_1191183915), 2) || []), NTI33554449);

  return result_1191183916;

}

function HEX2B_1191182354(a_1191182355, b_1191182356) {
  var result_1191182357 = 0;

    result_1191182357 = (a_1191182355 + b_1191182356);

  return result_1191182357;

}

function convert_1191182803(unitFrom_1191182805, unitTo_1191182806, quantity_1191182807) {
    var Temporary1;

  var result_1191182808 = 0;

    if ((unitFrom_1191182805 < unitTo_1191182806)) {
    Temporary1 = divInt(quantity_1191182807, divInt(unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)]));
    }
    else {
    Temporary1 = HEX2A_1191182346(divInt(unitWeights_1191182486[chckIndx(unitFrom_1191182805, 0, (unitWeights_1191182486).length - 1)], unitWeights_1191182486[chckIndx(unitTo_1191182806, 0, (unitWeights_1191182486).length - 1)]), quantity_1191182807);
    }
    
    result_1191182808 = Temporary1;

  return result_1191182808;

}

function normalize_1191183440(seconds_1191183442, nanoseconds_1191183443) {
  var result_1191183444 = ({seconds: 0, nanosecond: 0});

    result_1191183444.seconds = HEX2B_1191182354(seconds_1191183442, convert_1191182803(0, 3, nanoseconds_1191183443));
    var nanosecond_1191183455 = modInt(nanoseconds_1191183443, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191183455 < 0)) {
    nanosecond_1191183455 = addInt(nanosecond_1191183455, convert_1191182870(3, 0, 1));
    result_1191183444.seconds = subInt(result_1191183444.seconds, 1);
    }
    
    result_1191183444.nanosecond = chckRange(chckRange(nanosecond_1191183455, -2147483648, 2147483647), 0, 999999999);

  return result_1191183444;

}

function HEX2D_1191182362(a_1191182363, b_1191182364) {
  var result_1191182365 = 0;

    result_1191182365 = (a_1191182363 - b_1191182364);

  return result_1191182365;

}

function HEX2D_1191182366(a_1191182367, b_1191182368) {
  var result_1191182369 = 0;

    result_1191182369 = (a_1191182367 - b_1191182368);

  return result_1191182369;

}

function ntSubTime(a_1191183470, b_1191183471) {
  var result_1191183472 = ({seconds: 0, nanosecond: 0});

    result_1191183472 = nimCopy(result_1191183472, normalize_1191183440(HEX2D_1191182362(a_1191183470.seconds, b_1191183471.seconds), HEX2D_1191182366(a_1191183470.nanosecond, b_1191183471.nanosecond)), NTI1191182368);

  return result_1191183472;

}

function normalize_1191182860(seconds_1191182862, nanoseconds_1191182863) {
  var result_1191182864 = ({seconds: 0, nanosecond: 0});

    result_1191182864.seconds = HEX2B_1191182354(seconds_1191182862, convert_1191182803(0, 3, nanoseconds_1191182863));
    var nanosecond_1191182880 = modInt(nanoseconds_1191182863, convert_1191182870(3, 0, 1));
    if ((nanosecond_1191182880 < 0)) {
    nanosecond_1191182880 = addInt(nanosecond_1191182880, convert_1191182870(3, 0, 1));
    result_1191182864.seconds = subInt(result_1191182864.seconds, 1);
    }
    
    result_1191182864.nanosecond = chckRange(chckRange(nanosecond_1191182880, -2147483648, 2147483647), 0, 999999999);

  return result_1191182864;

}

function initDuration_1191182793(nanoseconds_1191182794, microseconds_1191182795, milliseconds_1191182796, seconds_1191182797, minutes_1191182798, hours_1191182799, days_1191182800, weeks_1191182801) {
  var result_1191182802 = ({seconds: 0, nanosecond: 0});

    var seconds_1191182848 = HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(7, 3, weeks_1191182801), convert_1191182803(6, 3, days_1191182800)), convert_1191182803(4, 3, minutes_1191182798)), convert_1191182803(5, 3, hours_1191182799)), convert_1191182803(3, 3, seconds_1191182797)), convert_1191182803(2, 3, milliseconds_1191182796)), convert_1191182803(1, 3, microseconds_1191182795)), convert_1191182803(0, 3, nanoseconds_1191182794));
    var nanoseconds_1191182859 = chckRange(HEX2B_1191182354(HEX2B_1191182354(convert_1191182803(2, 0, modInt(milliseconds_1191182796, 1000)), convert_1191182803(1, 0, modInt(microseconds_1191182795, 1000000))), modInt(nanoseconds_1191182794, 1000000000)), -2147483648, 2147483647);
    result_1191182802 = nimCopy(result_1191182802, normalize_1191182860(seconds_1191182848, nanoseconds_1191182859), NTI1191182370);

  return result_1191182802;

}

function floorDiv_1191182634(x_1191182636, y_1191182637) {
  var result_1191182638 = 0;

    result_1191182638 = Math.trunc(x_1191182636 / y_1191182637);
    var r_1191182639 = Math.trunc(x_1191182636 % y_1191182637);
    if ((((0 < r_1191182639) && (y_1191182637 < 0)) || ((r_1191182639 < 0) && (0 < y_1191182637)))) {
    result_1191182638 -= 1;
    }
    

  return result_1191182638;

}

function inc_1191182378(a_1191182379, a_1191182379_Idx, b_1191182380) {
    a_1191182379[a_1191182379_Idx] += b_1191182380;

  
}

function fromEpochDay_1191182567(epochday_1191182568) {
    var Temporary1;
    var Temporary2;

  var result_1191182572 = {Field0: 0, Field1: 0, Field2: 0};

  BeforeRet: {
    var z_1191182573 = [epochday_1191182568];
    inc_1191182378(z_1191182573, 0, 719468);
    if ((0 <= z_1191182573[0])) {
    Temporary1 = z_1191182573[0];
    }
    else {
    Temporary1 = HEX2D_1191182362(z_1191182573[0], 146096);
    }
    
    var era_1191182574 = divInt(Temporary1, 146097);
    var doe_1191182575 = HEX2D_1191182362(z_1191182573[0], HEX2A_1191182346(era_1191182574, 146097));
    var yoe_1191182576 = divInt(HEX2D_1191182362(HEX2B_1191182354(HEX2D_1191182362(doe_1191182575, divInt(doe_1191182575, 1460)), divInt(doe_1191182575, 36524)), divInt(doe_1191182575, 146096)), 365);
    var y_1191182577 = HEX2B_1191182354(yoe_1191182576, HEX2A_1191182346(era_1191182574, 400));
    var doy_1191182578 = HEX2D_1191182362(doe_1191182575, HEX2D_1191182362(HEX2B_1191182354(HEX2A_1191182346(365, yoe_1191182576), divInt(yoe_1191182576, 4)), divInt(yoe_1191182576, 100)));
    var mp_1191182579 = divInt(HEX2B_1191182354(HEX2A_1191182346(5, doy_1191182578), 2), 153);
    var d_1191182580 = HEX2B_1191182354(HEX2D_1191182362(doy_1191182578, divInt(HEX2B_1191182354(HEX2A_1191182346(153, mp_1191182579), 2), 5)), 1);
    if ((mp_1191182579 < 10)) {
    Temporary2 = 3;
    }
    else {
    Temporary2 = -9;
    }
    
    var m_1191182581 = HEX2B_1191182354(mp_1191182579, Temporary2);
    var colontmp__536872242 = chckRange(d_1191182580, 1, 31);
    var colontmp__536872243 = chckRange(m_1191182581, 1, 12);
    var colontmp__536872244 = chckRange(HEX2B_1191182354(y_1191182577, ((m_1191182581 <= 2) ? 1 : 0)), -2147483648, 2147483647);
    result_1191182572 = nimCopy(result_1191182572, {Field0: nimCopy(null, colontmp__536872242, NTI1191182360), Field1: colontmp__536872243, Field2: colontmp__536872244}, NTI1191182532);
    break BeforeRet;
  };

  return result_1191182572;

}

function isLeapYear_1191182509(year_1191182510) {
  var result_1191182511 = false;

    result_1191182511 = ((modInt(year_1191182510, 4) == 0) && (!((modInt(year_1191182510, 100) == 0)) || (modInt(year_1191182510, 400) == 0)));

  return result_1191182511;

}

function getDaysInMonth_1191182512(month_1191182513, year_1191182514) {
      var Temporary1;

  var result_1191182515 = 0;

    switch (month_1191182513) {
    case 2:
      if (isLeapYear_1191182509(year_1191182514)) {
      Temporary1 = 29;
      }
      else {
      Temporary1 = 28;
      }
      
      result_1191182515 = Temporary1;
      break;
    case 4:
    case 6:
    case 9:
    case 11:
      result_1191182515 = 30;
      break;
    default: 
      result_1191182515 = 31;
      break;
    }

  return result_1191182515;

}

function assertValidDate_1191182516(monthday_1191182517, month_1191182518, year_1191182519) {
    if (!((monthday_1191182517 <= getDaysInMonth_1191182512(month_1191182518, year_1191182519)))) {
    failedAssertImpl_268435515(([116,105,109,101,115,46,110,105,109,40,52,54,49,44,32,51,41,32,96,109,111,110,116,104,100,97,121,32,60,61,32,103,101,116,68,97,121,115,73,110,77,111,110,116,104,40,109,111,110,116,104,44,32,121,101,97,114,41,96,32] || []).concat(HEX24_369098760(year_1191182519) || [],[45] || [],nsuIntToStr(month_1191182518, 2) || [],[45] || [],HEX24_369098760(monthday_1191182517) || [],[32,105,115,32,110,111,116,32,97,32,118,97,108,105,100,32,100,97,116,101] || []));
    }
    

  
}

function HEX2A_1191182350(a_1191182351, b_1191182352) {
  var result_1191182353 = 0;

    result_1191182353 = (a_1191182351 * b_1191182352);

  return result_1191182353;

}

function HEX2B_1191182358(a_1191182359, b_1191182360) {
  var result_1191182361 = 0;

    result_1191182361 = (a_1191182359 + b_1191182360);

  return result_1191182361;

}

function toEpochDay_1191182538(monthday_1191182539, month_1191182540, year_1191182541) {
    var Temporary1;
    var Temporary2;

  var result_1191182542 = 0;

  BeforeRet: {
    assertValidDate_1191182516(monthday_1191182539, month_1191182540, year_1191182541);
    var colontmp__536872245 = {Field0: year_1191182541, Field1: month_1191182540, Field2: monthday_1191182539};
    var y_1191182546 = colontmp__536872245["Field0"];
    var m_1191182547 = colontmp__536872245["Field1"];
    var d_1191182548 = colontmp__536872245["Field2"];
    if ((m_1191182547 <= 2)) {
    y_1191182546 = subInt(y_1191182546, 1);
    }
    
    if ((0 <= y_1191182546)) {
    Temporary1 = y_1191182546;
    }
    else {
    Temporary1 = HEX2D_1191182366(y_1191182546, 399);
    }
    
    var era_1191182554 = divInt(Temporary1, 400);
    var yoe_1191182555 = HEX2D_1191182366(y_1191182546, HEX2A_1191182350(era_1191182554, 400));
    if ((2 < m_1191182547)) {
    Temporary2 = -3;
    }
    else {
    Temporary2 = 9;
    }
    
    var doy_1191182556 = HEX2D_1191182366(HEX2B_1191182358(divInt(HEX2B_1191182358(HEX2A_1191182350(153, HEX2B_1191182358(m_1191182547, Temporary2)), 2), 5), d_1191182548), 1);
    var doe_1191182557 = HEX2B_1191182358(HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(yoe_1191182555, 365), divInt(yoe_1191182555, 4)), divInt(yoe_1191182555, 100)), doy_1191182556);
    result_1191182542 = HEX2D_1191182366(HEX2B_1191182358(HEX2A_1191182350(era_1191182554, 146097), doe_1191182557), 719468);
    break BeforeRet;
  };

  return result_1191182542;

}

function getDayOfWeek_1191182628(monthday_1191182629, month_1191182630, year_1191182631) {
    var Temporary1;

  var result_1191182632 = 0;

    assertValidDate_1191182516(monthday_1191182629, month_1191182630, year_1191182631);
    var days_1191182633 = HEX2D_1191182362(toEpochDay_1191182538(monthday_1191182629, month_1191182630, year_1191182631), 3);
    var weeks_1191182645 = floorDiv_1191182634(days_1191182633, 7);
    var wd_1191182646 = HEX2D_1191182362(days_1191182633, HEX2A_1191182346(weeks_1191182645, 7));
    if ((wd_1191182646 == 0)) {
    Temporary1 = 6;
    }
    else {
    Temporary1 = chckRange(HEX2D_1191182362(wd_1191182646, 1), 0, 6);
    }
    
    result_1191182632 = Temporary1;

  return result_1191182632;

}

function getDayOfYear_1191182603(monthday_1191182604, month_1191182605, year_1191182606) {
  var result_1191182607 = 0;

    assertValidDate_1191182516(monthday_1191182604, month_1191182605, year_1191182606);
    if (isLeapYear_1191182509(year_1191182606)) {
    result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonthLeap_1191182609[chckIndx(month_1191182605, 1, (daysUntilMonthLeap_1191182609).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    else {
      result_1191182607 = chckRange(HEX2D_1191182366(HEX2B_1191182358(daysUntilMonth_1191182608[chckIndx(month_1191182605, 1, (daysUntilMonth_1191182608).length + (1) - 1) - (1)], monthday_1191182604), 1), 0, 365);
    }
    

  return result_1191182607;

}

function initDateTime_1191183671(zt_1191183672, zone_1191183673) {
  var result_1191183674 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    var adjTime_1191183675 = ntSubTime(zt_1191183672.time, initDuration_1191182793(0, 0, 0, zt_1191183672.utcOffset, 0, 0, 0, 0));
    var s_1191183676 = adjTime_1191183675.seconds;
    var epochday_1191183681 = floorDiv_1191182634(s_1191183676, 86400);
    var rem_1191183682 = HEX2D_1191182362(s_1191183676, HEX2A_1191182346(epochday_1191183681, 86400));
    var hour_1191183683 = divInt(rem_1191183682, 3600);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(hour_1191183683, 3600));
    var minute_1191183684 = divInt(rem_1191183682, 60);
    rem_1191183682 = HEX2D_1191182362(rem_1191183682, HEX2A_1191182346(minute_1191183684, 60));
    var second_1191183685 = rem_1191183682;
    var colontmp__536872241 = fromEpochDay_1191182567(epochday_1191183681);
    var d_1191183686 = colontmp__536872241["Field0"];
    var m_1191183687 = colontmp__536872241["Field1"];
    var y_1191183688 = colontmp__536872241["Field2"];
    result_1191183674 = nimCopy(result_1191183674, {year: y_1191183688, monthZero: ((m_1191183687) | 0), monthdayZero: d_1191183686, hour: nimCopy(null, chckRange(hour_1191183683, 0, 23), NTI1191182361), minute: nimCopy(null, chckRange(minute_1191183684, 0, 59), NTI1191182362), second: nimCopy(null, chckRange(second_1191183685, 0, 60), NTI1191182363), nanosecond: nimCopy(null, zt_1191183672.time.nanosecond, NTI1191182365), weekday: getDayOfWeek_1191182628(d_1191183686, m_1191183687, y_1191183688), yearday: getDayOfYear_1191182603(d_1191183686, m_1191183687, y_1191183688), isDst: zt_1191183672.isDst, timezone: zone_1191183673, utcOffset: zt_1191183672.utcOffset, m_type: NTI1191182369}, NTI1191182369);

  return result_1191183674;

}

function zonedTimeFromTime_1191183728(zone_1191183729, time_1191183730) {
  var result_1191183731 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    result_1191183731 = nimCopy(result_1191183731, zone_1191183729.zonedTimeFromTimeImpl(time_1191183730), NTI1191182375);

  return result_1191183731;

}

function inZone_1191183768(time_1191183769, zone_1191183770) {
  var result_1191183771 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183771 = nimCopy(result_1191183771, initDateTime_1191183671(zonedTimeFromTime_1191183728(zone_1191183770, time_1191183769), zone_1191183770), NTI1191182369);

  return result_1191183771;

}

function newTimezone_1191183698(name_1191183699, zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl_1191183705) {
  var result_1191183706 = null;

    result_1191183706 = {name: nimCopy(null, name_1191183699, NTI33554449), zonedTimeFromTimeImpl: zonedTimeFromTimeImpl_1191183702, zonedTimeFromAdjTimeImpl: zonedTimeFromAdjTimeImpl_1191183705};

  return result_1191183706;

}

function localZonedTimeFromTime_1191183786(time_1191183787) {
  var result_1191183788 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var jsDate_1191183792 = new Date(HEX2A_1191182346(time_1191183787.seconds, 1000));
    var offset_1191183793 = HEX2A_1191182350(jsDate_1191183792.getTimezoneOffset(), 60);
    result_1191183788.time = nimCopy(result_1191183788.time, time_1191183787, NTI1191182368);
    result_1191183788.utcOffset = offset_1191183793;
    result_1191183788.isDst = false;

  return result_1191183788;

}

function ntAddTime(a_1191183434, b_1191183435) {
  var result_1191183436 = ({seconds: 0, nanosecond: 0});

    result_1191183436 = nimCopy(result_1191183436, normalize_1191183440(HEX2B_1191182354(a_1191183434.seconds, b_1191183435.seconds), HEX2B_1191182358(a_1191183434.nanosecond, b_1191183435.nanosecond)), NTI1191182368);

  return result_1191183436;

}

function localZonedTimeFromAdjTime_1191183794(adjTime_1191183795) {
  var result_1191183796 = ({time: ({seconds: 0, nanosecond: 0}), utcOffset: 0, isDst: false});

    var utcDate_1191183800 = new Date(HEX2A_1191182346(adjTime_1191183795.seconds, 1000));
    var localDate_1191183801 = new Date(utcDate_1191183800.getUTCFullYear(),utcDate_1191183800.getUTCMonth(),utcDate_1191183800.getUTCDate(),utcDate_1191183800.getUTCHours(),utcDate_1191183800.getUTCMinutes(),utcDate_1191183800.getUTCSeconds(),0);
    if (contains_1191183809(HEX2EHEX2E_805306418(0, 99), utcDate_1191183800.getUTCFullYear())) {
    localDate_1191183801.setFullYear(utcDate_1191183800.getUTCFullYear());
    }
    
    result_1191183796.utcOffset = HEX2A_1191182350(localDate_1191183801.getTimezoneOffset(), 60);
    result_1191183796.time = nimCopy(result_1191183796.time, ntAddTime(adjTime_1191183795, initDuration_1191182793(0, 0, 0, result_1191183796.utcOffset, 0, 0, 0, 0)), NTI1191182368);
    result_1191183796.isDst = false;

  return result_1191183796;

}

function local_1191183835() {
  var result_1191183836 = null;

    if ((localInstance_1191183820[0] == null)) {
    localInstance_1191183820[0] = newTimezone_1191183698([76,79,67,65,76], localZonedTimeFromTime_1191183786, localZonedTimeFromAdjTime_1191183794);
    }
    
    result_1191183836 = localInstance_1191183820[0];

  return result_1191183836;

}

function local_1191183849(t_1191183850) {
  var result_1191183851 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183851 = nimCopy(result_1191183851, inZone_1191183768(t_1191183850, local_1191183835()), NTI1191182369);

  return result_1191183851;

}

function now_1191183852() {
  var result_1191183853 = ({m_type: NTI1191182369, nanosecond: 0, second: 0, minute: 0, hour: 0, monthdayZero: 0, monthZero: 0, year: 0, weekday: 0, yearday: 0, isDst: false, timezone: null, utcOffset: 0});

    result_1191183853 = nimCopy(result_1191183853, local_1191183849(getTime_1191183389()), NTI1191182369);

  return result_1191183853;

}

function ntgetClockStr(dt_1191183923) {
  var result_1191183924 = [];

    if (!(!((dt_1191183923.monthdayZero == 0)))) {
    failedAssertImpl_268435515([116,105,109,101,115,46,110,105,109,40,49,52,57,54,44,32,51,41,32,96,100,116,46,109,111,110,116,104,100,97,121,90,101,114,111,32,33,61,32,48,96,32,85,110,105,110,105,116,105,97,108,105,122,101,100,32,100,97,116,101,116,105,109,101]);
    }
    
    result_1191183924 = nimCopy(null, (nsuIntToStr(dt_1191183923.hour, 2) || []).concat([58],nsuIntToStr(dt_1191183923.minute, 2) || [],[58],nsuIntToStr(dt_1191183923.second, 2) || []), NTI33554449);

  return result_1191183924;

}

function substituteLog_1174405176(frmt_1174405177, level_1174405178, args_1174405179) {
                  var Temporary8;

  var result_1174405180 = [];

    var msgLen_1174405181 = 0;
    Label1: {
      var arg_1174405185 = [];
      var i_536872230 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872230 < (args_1174405179).length)) break Label3;
            arg_1174405185 = args_1174405179[chckIndx(i_536872230, 0, (args_1174405179).length - 1)];
            msgLen_1174405181 = addInt(msgLen_1174405181, (arg_1174405185).length);
            i_536872230 = addInt(i_536872230, 1);
          }
      };
    };
    result_1174405180 = nimCopy(null, mnewString(0), NTI33554449);
    var i_1174405190 = 0;
    Label4: {
        Label5: while (true) {
        if (!(i_1174405190 < (frmt_1174405177).length)) break Label5;
          if (!((frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)] == 36))) {
          addChar(result_1174405180, frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]);;
          i_1174405190 = addInt(i_1174405190, 1);
          }
          else {
            i_1174405190 = addInt(i_1174405190, 1);
            var v_1174405201 = [];
            var app_1174405202 = [];
            Label6: {
                Label7: while (true) {
                  if (!(i_1174405190 < (frmt_1174405177).length)) Temporary8 = false; else {                    Temporary8 = (ConstSet309[frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]] != undefined);                  }                if (!Temporary8) break Label7;
                  addChar(v_1174405201, nsuToLowerAsciiChar(frmt_1174405177[chckIndx(i_1174405190, 0, (frmt_1174405177).length - 1)]));;
                  i_1174405190 = addInt(i_1174405190, 1);
                }
            };
            switch (toJSStr(v_1174405201)) {
            case "date":
              result_1174405180.push.apply(result_1174405180, ntgetDateStr(now_1191183852()));;
              break;
            case "time":
              result_1174405180.push.apply(result_1174405180, ntgetClockStr(now_1191183852()));;
              break;
            case "datetime":
              result_1174405180.push.apply(result_1174405180, (ntgetDateStr(now_1191183852()) || []).concat([84] || [],ntgetClockStr(now_1191183852()) || []));;
              break;
            case "app":
              result_1174405180.push.apply(result_1174405180, app_1174405202);;
              break;
            case "appdir":
              break;
            case "appname":
              break;
            case "levelid":
              addChar(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)][chckIndx(0, 0, (LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]).length - 1)]);;
              break;
            case "levelname":
              result_1174405180.push.apply(result_1174405180, LevelNames_1174405135[chckIndx(level_1174405178, 0, (LevelNames_1174405135).length - 1)]);;
              break;
            default: 
              break;
            }
          }
          
        }
    };
    Label9: {
      var arg_1174405215 = [];
      var i_536872235 = 0;
      Label10: {
          Label11: while (true) {
          if (!(i_536872235 < (args_1174405179).length)) break Label11;
            arg_1174405215 = args_1174405179[chckIndx(i_536872235, 0, (args_1174405179).length - 1)];
            result_1174405180.push.apply(result_1174405180, arg_1174405215);;
            i_536872235 = addInt(i_536872235, 1);
          }
      };
    };

  return result_1174405180;

}

function log_1174405221(logger_1174405222, level_1174405223, args_1174405224) {
    if (((level_1174405147[0] <= level_1174405223) && (logger_1174405222.levelThreshold <= level_1174405223))) {
    var ln_1174405233 = substituteLog_1174405176(logger_1174405222.fmtStr, level_1174405223, args_1174405224);
    var cln_1174405234 = toJSStr(ln_1174405233);
    switch (level_1174405223) {
    case 1:
      console.debug(cln_1174405234);
      break;
    case 2:
      console.info(cln_1174405234);
      break;
    case 4:
      console.warn(cln_1174405234);
      break;
    case 5:
      console.error(cln_1174405234);
      break;
    default: 
      console.log(cln_1174405234);
      break;
    }
    }
    

  
}

function log_1174405216(logger_1174405217, level_1174405218, args_1174405219) {
  
}

function log_1174405220(logger_1174405217, level_1174405218, args_1174405219) {
    chckNilDisp(logger_1174405217);
    if (isObj(logger_1174405217.m_type, NTI704643078)) {
    log_704643142(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405134)) {
    log_1174405221(logger_1174405217, level_1174405218, args_1174405219);
    }
    else {
    if (isObj(logger_1174405217.m_type, NTI1174405133)) {
    log_1174405216(logger_1174405217, level_1174405218, args_1174405219);
    }
    }}

  
}

function HEX24_2936017758(document_2936017759) {
  var result_2936017760 = [];

  BeforeRet: {
    result_2936017760 = nimCopy(null, document_2936017759.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2936017760;

}

function HEX24_2801799116(document_2801799117) {
  var result_2801799118 = [];

  BeforeRet: {
    result_2801799118 = nimCopy(null, document_2801799117.filename, NTI33554449);
    break BeforeRet;
  };

  return result_2801799118;

}

function HEX24_2130706435(document_2130706436) {
  var result_2130706437 = [];

  BeforeRet: {
    result_2130706437 = nimCopy(null, [], NTI33554449);
    break BeforeRet;
  };

  return result_2130706437;

}

function HEX24_2130706438(document_2130706436) {
  var result_2130706439 = [];

  BeforeRet: {
    chckNilDisp(document_2130706436);
    if (isObj(document_2130706436.m_type, NTI2936014286)) {
    result_2130706439 = HEX24_2936017758(document_2130706436);
    break BeforeRet;
    }
    else {
    if (isObj(document_2130706436.m_type, NTI2801795207)) {
    result_2130706439 = HEX24_2801799116(document_2130706436);
    break BeforeRet;
    }
    else {
    if (isObj(document_2130706436.m_type, NTI2130706436)) {
    result_2130706439 = HEX24_2130706435(document_2130706436);
    break BeforeRet;
    }
    }}
  };

  return result_2130706439;

}

function toJson_2969569467(kind_2969569468, opt_2969569469) {
  var result_2969569470 = null;

  BeforeRet: {
    result_2969569470 = newJString_1627389994(reprEnum(kind_2969569468, NTI2969567235));
    break BeforeRet;
  };

  return result_2969569470;

}

function toJson_2181038348(id_2181038349, opt_2181038350) {
  var result_2181038351 = null;

  BeforeRet: {
    result_2181038351 = newJString_1627389994(HEX24_2181038317(id_2181038349));
    break BeforeRet;
  };

  return result_2181038351;

}

function join_2969569509(a_2969569511, sep_2969569512) {
  var result_2969569513 = [];

    result_2969569513 = nimCopy(null, [], NTI33554449);
    Label1: {
      var i_2969569528 = 0;
      var x_2969569529 = 0;
      var i_536872252 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872252 < (a_2969569511).length)) break Label3;
            i_2969569528 = i_536872252;
            x_2969569529 = a_2969569511[chckIndx(i_536872252, 0, (a_2969569511).length - 1)];
            if ((0 < i_2969569528)) {
            result_2969569513.push.apply(result_2969569513, sep_2969569512);;
            }
            
            result_2969569513.push.apply(result_2969569513, HEX24_369098760(x_2969569529));;
            i_536872252 = addInt(i_536872252, 1);
          }
      };
    };

  return result_2969569513;

}

function toJson_2969569501(node_2969569502, opt_2969569503) {
  var result_2969569504 = null;

    result_2969569504 = newJObject_1627390051();
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [107,105,110,100], toJson_2969569467(node_2969569502.kind, opt_2969569503));
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [105,100], toJson_2181038348(node_2969569502.id, opt_2969569503));
    if (!(HEX3DHEX3D_2181038320(node_2969569502.reff, null_2181038340))) {
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [114,101,102,102], toJson_2181038348(node_2969569502.reff, opt_2969569503));
    }
    
    if ((0 < (node_2969569502.text).length)) {
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [116,101,120,116], toJson_1811939932(node_2969569502.text, opt_2969569503));
    }
    
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [112,97,116,104], newJString_1627389994(join_2969569509(path_2969569187(node_2969569502), [44,32])));
    if ((0 < len_2969567320(node_2969569502))) {
    var children_2969569530 = newJArray_1627390082();
    Label1: {
      var child_2969569534 = null;
      var i_536872247 = 0;
      var L_536872248 = (node_2969569502.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872247 < L_536872248)) break Label3;
            child_2969569534 = node_2969569502.children[chckIndx(i_536872247, 0, (node_2969569502.children).length - 1)];
            add_1627390190(children_2969569530, toJson_2969569501(child_2969569534, opt_2969569503));
            i_536872247 = addInt(i_536872247, 1);
            if (!(((node_2969569502.children).length == L_536872248))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    HEX5BHEX5DHEX3D_1627391903(result_2969569504, [99,104,105,108,100,114,101,110], children_2969569530);
    }
    

  return result_2969569504;

}

function saveFile_2516582411(self_2516582412, path_2516582413, content_2516582414) {
  
}

function saveFile_2499805193(self_2499805194, path_2499805195, content_2499805196) {
  
}

function saveFile_2499805197(self_2499805194, path_2499805195, content_2499805196) {
    chckNilDisp(self_2499805194);
    if (isObj(self_2499805194.m_type, NTI2516582404)) {
    saveFile_2516582411(self_2499805194, path_2499805195, content_2499805196);
    }
    else {
    if (isObj(self_2499805194.m_type, NTI2499805188)) {
    saveFile_2499805193(self_2499805194, path_2499805195, content_2499805196);
    }
    }

  
}

function serializeHtml_3170894940(self_3170894941, theme_3170894942) {
  var result_3170894943 = [];

  BeforeRet: {
    var title_3170894944 = nimCopy(null, nossplitFile(self_3170894941.filename).Field1, NTI33554449);
    var body_3170894945 = [];
    var diagnosticsCss_3170894946 = [];
    var fmtRes_3170894951 = [mnewString(0)];
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("<!DOCTYPE html>\x0A<html>\x0A  <head>\x0A    <meta charset=utf-8>\x0A    <title>"));;
    formatValue_721420459(fmtRes_3170894951, 0, title_3170894944, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("</title>\x0A    <style>\x0A      body {\x0A        margin: 0px;\x0A        font-family: \"Courier New\", monospace;\x0A        background: #222222;\x0A      }\x0A      .code span {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code a {\x0A        text-decoration: none;\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A      .code div {\x0A        vertical-align: top;\x0A        border-width: 1px;\x0A      }\x0A\x0A      .code a:hover {\x0A        text-decoration: underline;\x0A      }\x0A\x0A      .highlight {\x0A        outline-width: 1px;\x0A        outline-color: yellow;\x0A        outline-style: solid;\x0A      }\x0A\x0A      .primary {\x0A        outline-width: 1px;\x0A        outline-color: red;\x0A        outline-style: solid;\x0A      }\x0A\x0A      "));;
    formatValue_721420459(fmtRes_3170894951, 0, diagnosticsCss_3170894946, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("\x0A\x0A      .collapsible {\x0A        cursor: pointer; /* Add a cursor to the div */\x0A\x0A        -webkit-touch-callout: none; /* Disable callout on iOS */\x0A        -webkit-user-select: none; /* Disable selection on iOS */\x0A        -khtml-user-select: none; /* Disable selection on Konqueror */\x0A        -moz-user-select: none; /* Disable selection on Firefox */\x0A        -ms-user-select: none; /* Disable selection on IE 10+ */\x0A        user-select: none; /* Disable selection on modern browsers */\x0A      }\x0A\x0A      /* Style the sidebar */\x0A      .sidebar {\x0A        height: 100%; /* Set the height to 100% */\x0A        width: 100; /* Set the width */\x0A        position: fixed; /* Fix the position */\x0A        top: 0; /* Set the top position */\x0A        left: 0; /* Set the left position */\x0A        background-color: #444;\x0A        padding: 8px; /* Add some padding */\x0A      }\x0A\x0A      /* Style the main content */\x0A      .main {\x0A        margin-left: 116px; /* Set the margin to the left of the sidebar */\x0A        padding: 8px;\x0A      }\x0A\x0A      @media (max-width: 600px) {\x0A        .sidebar {\x0A          position: sticky; /* Set the position to relative */\x0A          width: 100%; /* Set the width to 100% */\x0A        }\x0A        .main {\x0A          margin-left: 0; /* Remove the margin */\x0A        }\x0A      }\x0A\x0A    </style>\x0A  </head>\x0A\x0A  <body>\x0A    <div class=\"sidebar\">\x0A      <button onclick=\"collapseAll(true)\">Collapse All</button><br>\x0A      <button onclick=\"collapseAll(false)\">Expand All</button>\x0A    </div>\x0A\x0A    <div class=\"main\">\x0A      <h1><a href=\"./"));;
    formatValue_721420459(fmtRes_3170894951, 0, title_3170894944, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], [46,97,115,116,34,32,115,116,121,108,101,61,34,99,111,108,111,114,58,32,119,104,105,116,101,34,62]);;
    formatValue_721420459(fmtRes_3170894951, 0, title_3170894944, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], [60,47,97,62,60,47,104,49,62,10,32,32,32,32,32,32]);;
    formatValue_721420459(fmtRes_3170894951, 0, body_3170894945, []);
    fmtRes_3170894951[0].push.apply(fmtRes_3170894951[0], makeNimstrLit("\x0A    </div>\x0A\x0A    <script>\x0A\x0A      function clearAllHighlights() {\x0A        // Remove the highlight class from all elements\x0A        let elements = document.querySelectorAll(\'.highlight\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'highlight\');\x0A        }\x0A        elements = document.querySelectorAll(\'.primary\');\x0A        for (let i = 0; i < elements.length; i++) {\x0A          elements[i].classList.remove(\'primary\');\x0A        }\x0A      }\x0A\x0A      let links = document.querySelectorAll(\'a\');\x0A      for (let i = 0; i < links.length; i++) {\x0A        links[i].addEventListener(\'click\', function() {\x0A          clearAllHighlights();\x0A\x0A          // Add the highlight class to the element with the same id as the clicked link\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            let element = document.getElementById(this.getAttribute(\'href\').substring(1));\x0A            if (element !== null) {\x0A              element.classList.add(\'highlight\');\x0A              console.log(\"test\");\x0A              element.scrollIntoView({\x0A                behavior: \"smooth\",\x0A                block: \"center\"\x0A              });\x0A              return false;\x0A            }\x0A          }\x0A\x0A          return true;\x0A        });\x0A\x0A        links[i].addEventListener(\'mouseenter\', function() {\x0A          const href = this.getAttribute(\'href\')\x0A          if (href.startsWith(\'#\')) {\x0A            clearAllHighlights();\x0A            let href = this.getAttribute(\'href\').substring(1);\x0A            let element = document.getElementById(href);\x0A            if (element !== null) {\x0A              //element.classList.add(\'highlight\');\x0A              element.classList.add(\'primary\');\x0A            }\x0A            highlightReferences(href);\x0A          }\x0A          this.classList.add(\'highlight\');\x0A        });\x0A      }\x0A\x0A      let defs = document.querySelectorAll(\'.def\');\x0A      for (let i = 0; i < defs.length; i++) {\x0A        defs[i].addEventListener(\'mouseleave\', function() {\x0A          clearAllHighlights();\x0A          return true;\x0A        })\x0A        defs[i].addEventListener(\'mouseenter\', function() {\x0A          clearAllHighlights();\x0A          highlightReferences(this.id);\x0A          // this.classList.add(\'highlight\');\x0A          this.classList.add(\'primary\');\x0A          return true;\x0A        })\x0A      }\x0A\x0A      function highlightReferences(id) {\x0A        let links = document.querySelectorAll(`a[href=\"#${id}\"]`);\x0A        for (let link of links) {\x0A          link.classList.add(\'highlight\');\x0A        }\x0A      }\x0A\x0A      var coll = document.getElementsByClassName(\"collapsible\");\x0A      var i;\x0A\x0A      for (i = 0; i < coll.length; i++) {\x0A        coll[i].addEventListener(\"click\", function() {\x0A          this.classList.toggle(\"active\");\x0A          var content = this.nextElementSibling;\x0A          if (content.style.display !== \"none\") {\x0A            content.style.display = \"none\";\x0A            this.innerHTML = \"+\";\x0A          } else {\x0A            this.innerHTML = \"-\";\x0A            if (this.classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (this.classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        });\x0A      }\x0A\x0A      function collapseAll(collapse) {\x0A        var coll = document.getElementsByClassName(\"collapsible\");\x0A\x0A        for (let i = 0; i < coll.length; i++) {\x0A          var content = coll[i].nextElementSibling;\x0A          if (collapse) {\x0A            coll[i].classList.add(\"active\");\x0A            content.style.display = \"none\";\x0A            coll[i].innerHTML = \"+\";\x0A          } else {\x0A            coll[i].classList.remove(\"active\");\x0A            coll[i].innerHTML = \"-\";\x0A            if (coll[i].classList.contains(\"block\"))\x0A              content.style.display = \"block\";\x0A            else if (coll[i].classList.contains(\"inline-block\"))\x0A              content.style.display = \"inline-block\";\x0A            else\x0A              content.style.display = \"block\";\x0A          }\x0A        }\x0A      }\x0A    </script>\x0A  </body>\x0A</html>"));;
    result_3170894943 = nimCopy(null, fmtRes_3170894951[0], NTI33554449);
    break BeforeRet;
  };

  return result_3170894943;

}

function saveHtml_2936017793(self_2936017794) {
    var pathParts_2936017795 = nossplitFile(self_2936017794.filename);
    var htmlPath_2936017796 = HEX2F_1426063446(pathParts_2936017795.Field0, (pathParts_2936017795.Field1 || []).concat([46,104,116,109,108] || []));
    var html_2936017797 = serializeHtml_3170894940(self_2936017794, gEditor.theme);
    saveFile_2499805197(fs_2499805237, htmlPath_2936017796, html_2936017797);

  
}

function save_2936017798(self_2936017799, filename_2936017800) {
    var Temporary1;

    if ((0 < (filename_2936017800).length)) {
    Temporary1 = filename_2936017800;
    }
    else {
    Temporary1 = self_2936017799.filename;
    }
    
    self_2936017799.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2936017799.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    var fmtRes_2936017806 = [mnewString(0)];
    fmtRes_2936017806[0].push.apply(fmtRes_2936017806[0], [91,97,115,116,100,111,99,93,32,83,97,118,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017806, 0, self_2936017799.filename, []);
    fmtRes_2936017806[0].push.apply(fmtRes_2936017806[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936017806[0], NTI33554449)]);
    var serialized_2936017807 = toJson_2969569501(self_2936017799.rootNode, initToJsonOptions_1811939362());
    saveFile_2499805197(fs_2499805237, self_2936017799.filename, pretty_1627394477(serialized_2936017807, 2));
    saveHtml_2936017793(self_2936017799);

  
}

function save_2801799119(self_2801799120, filename_2801799121) {
    var Temporary1;

    if ((0 < (filename_2801799121).length)) {
    Temporary1 = filename_2801799121;
    }
    else {
    Temporary1 = self_2801799120.filename;
    }
    
    self_2801799120.filename = nimCopy(null, Temporary1, NTI33554449);
    if (((self_2801799120.filename).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    saveFile_2499805197(fs_2499805237, self_2801799120.filename, nsuJoinSep(self_2801799120.lines, [10]));

  
}

function save_2130706440(self_2130706441, filename_2130706442) {
  
}

function save_2130706443(self_2130706441, filename_2130706442) {
    chckNilDisp(self_2130706441);
    if (isObj(self_2130706441.m_type, NTI2936014286)) {
    save_2936017798(self_2130706441, filename_2130706442);
    }
    else {
    if (isObj(self_2130706441.m_type, NTI2801795207)) {
    save_2801799119(self_2130706441, filename_2130706442);
    }
    else {
    if (isObj(self_2130706441.m_type, NTI2130706436)) {
    save_2130706440(self_2130706441, filename_2130706442);
    }
    }}

  
}

function loadFile_2516582407(self_2516582408, path_2516582409) {
  var result_2516582410 = [];

  BeforeRet: {
    result_2516582410 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(path_2516582409))), NTI33554449);
    break BeforeRet;
  };

  return result_2516582410;

}

function loadFile_2499805187(self_2499805188, path_2499805189) {
  var result_2499805190 = [];

  return result_2499805190;

}

function loadFile_2499805191(self_2499805188, path_2499805189) {
  var result_2499805192 = [];

  BeforeRet: {
    chckNilDisp(self_2499805188);
    if (isObj(self_2499805188.m_type, NTI2516582404)) {
    result_2499805192 = loadFile_2516582407(self_2499805188, path_2499805189);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805188.m_type, NTI2499805188)) {
    result_2499805192 = loadFile_2499805187(self_2499805188, path_2499805189);
    break BeforeRet;
    }
    }
  };

  return result_2499805192;

}

function clear_2986457388(t_2986457391) {
    Label1: {
      var i_2986457477 = 0;
      var colontmp__536872255 = 0;
      colontmp__536872255 = (t_2986457391.data).length;
      var i_536872256 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872256 < colontmp__536872255)) break Label3;
            i_2986457477 = i_536872256;
            t_2986457391.data[chckIndx(i_2986457477, 0, (t_2986457391.data).length - 1)].Field0 = 0;
            t_2986457391.data[chckIndx(i_2986457477, 0, (t_2986457391.data).length - 1)].Field1 = nimCopy(t_2986457391.data[chckIndx(i_2986457477, 0, (t_2986457391.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986457391.data[chckIndx(i_2986457477, 0, (t_2986457391.data).length - 1)].Field2 = null;
            i_536872256 = addInt(i_536872256, 1);
          }
      };
    };
    t_2986457391.counter = 0;

  
}

function clear_2986457306(cache_2986457309) {
    cache_2986457309.list = nimCopy(cache_2986457309.list, initDoublyLinkedList_3003123938(), NTI3003121734);
    clear_2986457388(cache_2986457309.table);

  
}

function clear_2986458200(t_2986458203) {
    Label1: {
      var i_2986458289 = 0;
      var colontmp__536872259 = 0;
      colontmp__536872259 = (t_2986458203.data).length;
      var i_536872260 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872260 < colontmp__536872259)) break Label3;
            i_2986458289 = i_536872260;
            t_2986458203.data[chckIndx(i_2986458289, 0, (t_2986458203.data).length - 1)].Field0 = 0;
            t_2986458203.data[chckIndx(i_2986458289, 0, (t_2986458203.data).length - 1)].Field1 = nimCopy(t_2986458203.data[chckIndx(i_2986458289, 0, (t_2986458203.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986458203.data[chckIndx(i_2986458289, 0, (t_2986458203.data).length - 1)].Field2 = null;
            i_536872260 = addInt(i_536872260, 1);
          }
      };
    };
    t_2986458203.counter = 0;

  
}

function clear_2986458118(cache_2986458121) {
    cache_2986458121.list = nimCopy(cache_2986458121.list, initDoublyLinkedList_3003124010(), NTI3003121813);
    clear_2986458200(cache_2986458121.table);

  
}

function clear_2986458934(t_2986458937) {
    Label1: {
      var i_2986459023 = 0;
      var colontmp__536872263 = 0;
      colontmp__536872263 = (t_2986458937.data).length;
      var i_536872264 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872264 < colontmp__536872263)) break Label3;
            i_2986459023 = i_536872264;
            t_2986458937.data[chckIndx(i_2986459023, 0, (t_2986458937.data).length - 1)].Field0 = 0;
            t_2986458937.data[chckIndx(i_2986459023, 0, (t_2986458937.data).length - 1)].Field1 = nimCopy(t_2986458937.data[chckIndx(i_2986459023, 0, (t_2986458937.data).length - 1)].Field1, {Field0: {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, Field1: 0}, NTI3003121692);
            t_2986458937.data[chckIndx(i_2986459023, 0, (t_2986458937.data).length - 1)].Field2 = null;
            i_536872264 = addInt(i_536872264, 1);
          }
      };
    };
    t_2986458937.counter = 0;

  
}

function clear_2986458852(cache_2986458855) {
    cache_2986458855.list = nimCopy(cache_2986458855.list, initDoublyLinkedList_3003124078(), NTI3003121880);
    clear_2986458934(cache_2986458855.table);

  
}

function clear_2986459668(t_2986459671) {
    Label1: {
      var i_2986459757 = 0;
      var colontmp__536872267 = 0;
      colontmp__536872267 = (t_2986459671.data).length;
      var i_536872268 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872268 < colontmp__536872267)) break Label3;
            i_2986459757 = i_536872268;
            t_2986459671.data[chckIndx(i_2986459757, 0, (t_2986459671.data).length - 1)].Field0 = 0;
            t_2986459671.data[chckIndx(i_2986459757, 0, (t_2986459671.data).length - 1)].Field1 = nimCopy(t_2986459671.data[chckIndx(i_2986459757, 0, (t_2986459671.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986459671.data[chckIndx(i_2986459757, 0, (t_2986459671.data).length - 1)].Field2 = null;
            i_536872268 = addInt(i_536872268, 1);
          }
      };
    };
    t_2986459671.counter = 0;

  
}

function clear_2986459586(cache_2986459589) {
    cache_2986459589.list = nimCopy(cache_2986459589.list, initDoublyLinkedList_2986396190(), NTI2986344528);
    clear_2986459668(cache_2986459589.table);

  
}

function clear_2986460402(t_2986460405) {
    Label1: {
      var i_2986460491 = 0;
      var colontmp__536872271 = 0;
      colontmp__536872271 = (t_2986460405.data).length;
      var i_536872272 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872272 < colontmp__536872271)) break Label3;
            i_2986460491 = i_536872272;
            t_2986460405.data[chckIndx(i_2986460491, 0, (t_2986460405.data).length - 1)].Field0 = 0;
            t_2986460405.data[chckIndx(i_2986460491, 0, (t_2986460405.data).length - 1)].Field1 = nimCopy(t_2986460405.data[chckIndx(i_2986460491, 0, (t_2986460405.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986460405.data[chckIndx(i_2986460491, 0, (t_2986460405.data).length - 1)].Field2 = null;
            i_536872272 = addInt(i_536872272, 1);
          }
      };
    };
    t_2986460405.counter = 0;

  
}

function clear_2986460320(cache_2986460323) {
    cache_2986460323.list = nimCopy(cache_2986460323.list, initDoublyLinkedList_2986396386(), NTI2986344665);
    clear_2986460402(cache_2986460323.table);

  
}

function clear_2986461136(t_2986461139) {
    Label1: {
      var i_2986461225 = 0;
      var colontmp__536872275 = 0;
      colontmp__536872275 = (t_2986461139.data).length;
      var i_536872276 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872276 < colontmp__536872275)) break Label3;
            i_2986461225 = i_536872276;
            t_2986461139.data[chckIndx(i_2986461225, 0, (t_2986461139.data).length - 1)].Field0 = 0;
            t_2986461139.data[chckIndx(i_2986461225, 0, (t_2986461139.data).length - 1)].Field1 = nimCopy(t_2986461139.data[chckIndx(i_2986461225, 0, (t_2986461139.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986461139.data[chckIndx(i_2986461225, 0, (t_2986461139.data).length - 1)].Field2 = null;
            i_536872276 = addInt(i_536872276, 1);
          }
      };
    };
    t_2986461139.counter = 0;

  
}

function clear_2986461054(cache_2986461057) {
    cache_2986461057.list = nimCopy(cache_2986461057.list, initDoublyLinkedList_2986396288(), NTI2986344601);
    clear_2986461136(cache_2986461057.table);

  
}

function clear_2986461870(t_2986461873) {
    Label1: {
      var i_2986461959 = 0;
      var colontmp__536872279 = 0;
      colontmp__536872279 = (t_2986461873.data).length;
      var i_536872280 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872280 < colontmp__536872279)) break Label3;
            i_2986461959 = i_536872280;
            t_2986461873.data[chckIndx(i_2986461959, 0, (t_2986461873.data).length - 1)].Field0 = 0;
            t_2986461873.data[chckIndx(i_2986461959, 0, (t_2986461873.data).length - 1)].Field1 = nimCopy(t_2986461873.data[chckIndx(i_2986461959, 0, (t_2986461873.data).length - 1)].Field1, {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: 0}, NTI3003121689);
            t_2986461873.data[chckIndx(i_2986461959, 0, (t_2986461873.data).length - 1)].Field2 = null;
            i_536872280 = addInt(i_536872280, 1);
          }
      };
    };
    t_2986461873.counter = 0;

  
}

function clear_2986461788(cache_2986461791) {
    cache_2986461791.list = nimCopy(cache_2986461791.list, initDoublyLinkedList_2986396484(), NTI2986344729);
    clear_2986461870(cache_2986461791.table);

  
}

function clear_2986462604(t_2986462607) {
    Label1: {
      var i_2986462693 = 0;
      var colontmp__536872283 = 0;
      colontmp__536872283 = (t_2986462607.data).length;
      var i_536872284 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872284 < colontmp__536872283)) break Label3;
            i_2986462693 = i_536872284;
            t_2986462607.data[chckIndx(i_2986462693, 0, (t_2986462607.data).length - 1)].Field0 = 0;
            t_2986462607.data[chckIndx(i_2986462693, 0, (t_2986462607.data).length - 1)].Field1 = null;
            t_2986462607.data[chckIndx(i_2986462693, 0, (t_2986462607.data).length - 1)].Field2 = null;
            i_536872284 = addInt(i_536872284, 1);
          }
      };
    };
    t_2986462607.counter = 0;

  
}

function clear_2986462522(cache_2986462525) {
    cache_2986462525.list = nimCopy(cache_2986462525.list, initDoublyLinkedList_2986353154(), NTI2986344831);
    clear_2986462604(cache_2986462525.table);

  
}

function clear_2986463338(t_2986463341) {
    Label1: {
      var i_2986463427 = 0;
      var colontmp__536872287 = 0;
      colontmp__536872287 = (t_2986463341.data).length;
      var i_536872288 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872288 < colontmp__536872287)) break Label3;
            i_2986463427 = i_536872288;
            t_2986463341.data[chckIndx(i_2986463427, 0, (t_2986463341.data).length - 1)].Field0 = 0;
            t_2986463341.data[chckIndx(i_2986463427, 0, (t_2986463341.data).length - 1)].Field1 = null;
            t_2986463341.data[chckIndx(i_2986463427, 0, (t_2986463341.data).length - 1)].Field2 = null;
            i_536872288 = addInt(i_536872288, 1);
          }
      };
    };
    t_2986463341.counter = 0;

  
}

function clear_2986463256(cache_2986463259) {
    cache_2986463259.list = nimCopy(cache_2986463259.list, initDoublyLinkedList_2986357423(), NTI2986344906);
    clear_2986463338(cache_2986463259.table);

  
}

function clear_2986464072(t_2986464075) {
    Label1: {
      var i_2986464161 = 0;
      var colontmp__536872291 = 0;
      colontmp__536872291 = (t_2986464075.data).length;
      var i_536872292 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872292 < colontmp__536872291)) break Label3;
            i_2986464161 = i_536872292;
            t_2986464075.data[chckIndx(i_2986464161, 0, (t_2986464075.data).length - 1)].Field0 = 0;
            t_2986464075.data[chckIndx(i_2986464161, 0, (t_2986464075.data).length - 1)].Field1 = null;
            t_2986464075.data[chckIndx(i_2986464161, 0, (t_2986464075.data).length - 1)].Field2 = null;
            i_536872292 = addInt(i_536872292, 1);
          }
      };
    };
    t_2986464075.counter = 0;

  
}

function clear_2986463990(cache_2986463993) {
    cache_2986463993.list = nimCopy(cache_2986463993.list, initDoublyLinkedList_2986373819(), NTI2986345116);
    clear_2986464072(cache_2986463993.table);

  
}

function clear_2986464806(t_2986464809) {
    Label1: {
      var i_2986464895 = 0;
      var colontmp__536872295 = 0;
      colontmp__536872295 = (t_2986464809.data).length;
      var i_536872296 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872296 < colontmp__536872295)) break Label3;
            i_2986464895 = i_536872296;
            t_2986464809.data[chckIndx(i_2986464895, 0, (t_2986464809.data).length - 1)].Field0 = 0;
            t_2986464809.data[chckIndx(i_2986464895, 0, (t_2986464809.data).length - 1)].Field1 = null;
            t_2986464809.data[chckIndx(i_2986464895, 0, (t_2986464809.data).length - 1)].Field2 = null;
            i_536872296 = addInt(i_536872296, 1);
          }
      };
    };
    t_2986464809.counter = 0;

  
}

function clear_2986464724(cache_2986464727) {
    cache_2986464727.list = nimCopy(cache_2986464727.list, initDoublyLinkedList_2986378080(), NTI2986345191);
    clear_2986464806(cache_2986464727.table);

  
}

function clear_2986465540(t_2986465543) {
    Label1: {
      var i_2986465629 = 0;
      var colontmp__536872299 = 0;
      colontmp__536872299 = (t_2986465543.data).length;
      var i_536872300 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872300 < colontmp__536872299)) break Label3;
            i_2986465629 = i_536872300;
            t_2986465543.data[chckIndx(i_2986465629, 0, (t_2986465543.data).length - 1)].Field0 = 0;
            t_2986465543.data[chckIndx(i_2986465629, 0, (t_2986465543.data).length - 1)].Field1 = null;
            t_2986465543.data[chckIndx(i_2986465629, 0, (t_2986465543.data).length - 1)].Field2 = null;
            i_536872300 = addInt(i_536872300, 1);
          }
      };
    };
    t_2986465543.counter = 0;

  
}

function clear_2986465458(cache_2986465461) {
    cache_2986465461.list = nimCopy(cache_2986465461.list, initDoublyLinkedList_2986361684(), NTI2986344977);
    clear_2986465540(cache_2986465461.table);

  
}

function clear_2986466274(t_2986466277) {
    Label1: {
      var i_2986466363 = 0;
      var colontmp__536872303 = 0;
      colontmp__536872303 = (t_2986466277.data).length;
      var i_536872304 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872304 < colontmp__536872303)) break Label3;
            i_2986466363 = i_536872304;
            t_2986466277.data[chckIndx(i_2986466363, 0, (t_2986466277.data).length - 1)].Field0 = 0;
            t_2986466277.data[chckIndx(i_2986466363, 0, (t_2986466277.data).length - 1)].Field1 = null;
            t_2986466277.data[chckIndx(i_2986466363, 0, (t_2986466277.data).length - 1)].Field2 = null;
            i_536872304 = addInt(i_536872304, 1);
          }
      };
    };
    t_2986466277.counter = 0;

  
}

function clear_2986466192(cache_2986466195) {
    cache_2986466195.list = nimCopy(cache_2986466195.list, initDoublyLinkedList_2986365946(), NTI2986345050);
    clear_2986466274(cache_2986466195.table);

  
}

function clear_2986467008(t_2986467011) {
    Label1: {
      var i_2986467097 = 0;
      var colontmp__536872307 = 0;
      colontmp__536872307 = (t_2986467011.data).length;
      var i_536872308 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872308 < colontmp__536872307)) break Label3;
            i_2986467097 = i_536872308;
            t_2986467011.data[chckIndx(i_2986467097, 0, (t_2986467011.data).length - 1)].Field0 = 0;
            t_2986467011.data[chckIndx(i_2986467097, 0, (t_2986467011.data).length - 1)].Field1 = null;
            t_2986467011.data[chckIndx(i_2986467097, 0, (t_2986467011.data).length - 1)].Field2 = null;
            i_536872308 = addInt(i_536872308, 1);
          }
      };
    };
    t_2986467011.counter = 0;

  
}

function clear_2986466926(cache_2986466929) {
    cache_2986466929.list = nimCopy(cache_2986466929.list, initDoublyLinkedList_2986385975(), NTI2986345257);
    clear_2986467008(cache_2986466929.table);

  
}

function clear_2986467742(t_2986467745) {
    Label1: {
      var i_2986467831 = 0;
      var colontmp__536872311 = 0;
      colontmp__536872311 = (t_2986467745.data).length;
      var i_536872312 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872312 < colontmp__536872311)) break Label3;
            i_2986467831 = i_536872312;
            t_2986467745.data[chckIndx(i_2986467831, 0, (t_2986467745.data).length - 1)].Field0 = 0;
            t_2986467745.data[chckIndx(i_2986467831, 0, (t_2986467745.data).length - 1)].Field1 = null;
            t_2986467745.data[chckIndx(i_2986467831, 0, (t_2986467745.data).length - 1)].Field2 = null;
            i_536872312 = addInt(i_536872312, 1);
          }
      };
    };
    t_2986467745.counter = 0;

  
}

function clear_2986467660(cache_2986467663) {
    cache_2986467663.list = nimCopy(cache_2986467663.list, initDoublyLinkedList_2986393870(), NTI2986345332);
    clear_2986467742(cache_2986467663.table);

  
}

function deleteAllNodesAndSymbols_2986457226(ctx_2986457227) {
    ctx_2986457227.depGraph.revision = addInt(ctx_2986457227.depGraph.revision, 1);
    clear_2986457306(ctx_2986457227.depGraph.changed);
    clear_2986457306(ctx_2986457227.depGraph.verified);
    clear_2986458118(ctx_2986457227.depGraph.fingerprints);
    clear_2986458852(ctx_2986457227.depGraph.dependencies);
    clear_2986459586(ctx_2986457227.itemsAstNode);
    clear_2986460320(ctx_2986457227.itemsSymbol);
    clear_2986461054(ctx_2986457227.itemsNodeLayoutInput);
    clear_2986461788(ctx_2986457227.itemsFunctionExecutionContext);
    clear_2986462522(ctx_2986457227.queryCacheType);
    clear_2986463256(ctx_2986457227.queryCacheValue);
    clear_2986463990(ctx_2986457227.queryCacheSymbolType);
    clear_2986464724(ctx_2986457227.queryCacheSymbolValue);
    clear_2986465458(ctx_2986457227.queryCacheSymbol);
    clear_2986466192(ctx_2986457227.queryCacheSymbols);
    clear_2986466926(ctx_2986457227.queryCacheFunctionExecution);
    clear_2986467660(ctx_2986457227.queryCacheNodeLayout);

  
}

function load_2936017808(self_2936017809, filename_2936017810) {
    var Temporary1;

    if ((0 < (filename_2936017810).length)) {
    Temporary1 = filename_2936017810;
    }
    else {
    Temporary1 = self_2936017809.filename;
    }
    
    var filename_2936017811 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2936017811).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2936017809.filename = nimCopy(null, filename_2936017811, NTI33554449);
    var fmtRes_2936017817 = [mnewString(0)];
    fmtRes_2936017817[0].push.apply(fmtRes_2936017817[0], [91,97,115,116,100,111,99,93,32,76,111,97,100,105,110,103,32,97,115,116,32,115,111,117,114,99,101,32,102,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2936017817, 0, self_2936017809.filename, []);
    fmtRes_2936017817[0].push.apply(fmtRes_2936017817[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936017817[0], NTI33554449)]);
    var jsonText_2936017818 = loadFile_2499805191(fs_2499805237, self_2936017809.filename);
    var json_2936017819 = parseJson_1627395313(jsonText_2936017818);
    var newAst_2936017820 = jsonToAstNode_2969569535(json_2936017819, {allowExtraKeys: false, allowMissingKeys: false});
    deleteAllNodesAndSymbols_2986457226(ctx_2936012853);
    self_2936017809.rootNode = newAst_2936017820;
    insertNode_2986456078(ctx_2936012853, self_2936017809.rootNode);
    if (self_2936017809.undoOps.length < 0) { for (var i = self_2936017809.undoOps.length ; i < 0 ; ++i) self_2936017809.undoOps.push(null); }
               else { self_2936017809.undoOps.length = 0; };
    if (self_2936017809.redoOps.length < 0) { for (var i = self_2936017809.redoOps.length ; i < 0 ; ++i) self_2936017809.redoOps.push(null); }
               else { self_2936017809.redoOps.length = 0; };
    saveHtml_2936017793(self_2936017809);

  
}

function load_2801799123(self_2801799124, filename_2801799125) {
    var Temporary1;

    if ((0 < (filename_2801799125).length)) {
    Temporary1 = filename_2801799125;
    }
    else {
    Temporary1 = self_2801799124.filename;
    }
    
    var filename_2801799126 = nimCopy(null, Temporary1, NTI33554449);
    if (((filename_2801799126).length == 0)) {
    raiseException({message: [77,105,115,115,105,110,103,32,102,105,108,101,110,97,109,101], parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    
    self_2801799124.filename = nimCopy(null, filename_2801799126, NTI33554449);
    var file_2801799128 = loadFile_2499805191(fs_2499805237, self_2801799124.filename);
    contentHEX3D_2801795987(self_2801799124, file_2801799128);

  
}

function load_2130706444(self_2130706445, filename_2130706446) {
  
}

function load_2130706447(self_2130706445, filename_2130706446) {
    chckNilDisp(self_2130706445);
    if (isObj(self_2130706445.m_type, NTI2936014286)) {
    load_2936017808(self_2130706445, filename_2130706446);
    }
    else {
    if (isObj(self_2130706445.m_type, NTI2801795207)) {
    load_2801799123(self_2130706445, filename_2130706446);
    }
    else {
    if (isObj(self_2130706445.m_type, NTI2130706436)) {
    load_2130706444(self_2130706445, filename_2130706446);
    }
    }}

  
}

function hasKey_2902461652(t_2902461655, key_2902461656) {
  var result_2902461657 = false;

    var hc_2902461658 = [0];
    result_2902461657 = (0 <= rawGet_2902458969(t_2902461655, key_2902461656, hc_2902461658, 0));

  return result_2902461657;

}

function contains_2902461646(t_2902461649, key_2902461650) {
  var result_2902461651 = false;

  BeforeRet: {
    result_2902461651 = hasKey_2902461652(t_2902461649, key_2902461650);
    break BeforeRet;
  };

  return result_2902461651;

}

function del_2902461705(t_2902461708, key_2902461709) {
    var hc_2902461710 = [0];
    var i_2902461717 = rawGet_2902458969(t_2902461708, key_2902461709, hc_2902461710, 0);
    var mskHEX60gensym36_2902461721 = (t_2902461708.data).length - 1;
    if ((0 <= i_2902461717)) {
    t_2902461708.counter = subInt(t_2902461708.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_2902461728 = i_2902461717;
            var rHEX60gensym36_2902461729 = jHEX60gensym36_2902461728;
            t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field0 = 0;
            t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field1 = 0;
            t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_2902461717 = (addInt(i_2902461717, 1) & mskHEX60gensym36_2902461721);
                  if (isEmpty_1308622877(t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_2902461729 = (t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)].Field0 & mskHEX60gensym36_2902461721);
                  if (!(((((rHEX60gensym36_2902461729 <= i_2902461717) && (jHEX60gensym36_2902461728 < rHEX60gensym36_2902461729)) || ((jHEX60gensym36_2902461728 < rHEX60gensym36_2902461729) && (i_2902461717 < jHEX60gensym36_2902461728))) || ((i_2902461717 < jHEX60gensym36_2902461728) && (rHEX60gensym36_2902461729 <= i_2902461717))))) {
                  break Label4;
                  }
                  
                }
            };
            t_2902461708.data[chckIndx(jHEX60gensym36_2902461728, 0, (t_2902461708.data).length - 1)] = nimCopy(t_2902461708.data[chckIndx(jHEX60gensym36_2902461728, 0, (t_2902461708.data).length - 1)], t_2902461708.data[chckIndx(i_2902461717, 0, (t_2902461708.data).length - 1)], NTI2902458392);
          }
      };
    };
    }
    

  
}

function len_2902462261(t_2902462264) {
  var result_2902462265 = 0;

    result_2902462265 = t_2902462264.counter;

  return result_2902462265;

}

function find_2902462498(a_2902462501, item_2902462502) {
  var result_2902462503 = 0;

  BeforeRet: {
    result_2902462503 = 0;
    Label1: {
      var i_2902462507 = 0;
      var i_536872331 = 0;
      var L_536872332 = (a_2902462501).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872331 < L_536872332)) break Label3;
            i_2902462507 = a_2902462501[chckIndx(i_536872331, 0, (a_2902462501).length - 1)];
            if ((i_2902462507 == item_2902462502)) {
            break BeforeRet;
            }
            
            result_2902462503 = addInt(result_2902462503, 1);
            i_536872331 = addInt(i_536872331, 1);
            if (!(((a_2902462501).length == L_536872332))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2902462503 = -1;
  };

  return result_2902462503;

}

function del_2902462514(x_2902462516, x_2902462516_Idx, i_2902462517) {
    var xl_2902462521 = subInt((x_2902462516[x_2902462516_Idx]).length, 1);
    x_2902462516[x_2902462516_Idx][chckIndx(i_2902462517, 0, (x_2902462516[x_2902462516_Idx]).length - 1)] = x_2902462516[x_2902462516_Idx][chckIndx(xl_2902462521, 0, (x_2902462516[x_2902462516_Idx]).length - 1)];
    if (x_2902462516[x_2902462516_Idx].length < chckRange(xl_2902462521, 0, 2147483647)) { for (var i = x_2902462516[x_2902462516_Idx].length ; i < chckRange(xl_2902462521, 0, 2147483647) ; ++i) x_2902462516[x_2902462516_Idx].push(0); }
               else { x_2902462516[x_2902462516_Idx].length = chckRange(xl_2902462521, 0, 2147483647); };

  
}

function removeOnRequestSaveHandler_2902461601(self_2902461602, handle_2902461603) {
    if (contains_2902461646(self_2902461602.onRequestSave, handle_2902461603)) {
    del_2902461705(self_2902461602.onRequestSave, handle_2902461603);
    Label1: {
      var __2902462496 = [];
      var list_2902462497 = null;
      var list_2902462497_Idx = 0;
      var L_536872319 = len_2902462261(self_2902461602.onRequestSaveIndex);
      Label2: {
        var h_536872321 = 0;
        var colontmp__536872322 = 0;
        colontmp__536872322 = (self_2902461602.onRequestSaveIndex.data).length - 1;
        var res_536872323 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872323 <= colontmp__536872322)) break Label4;
              h_536872321 = res_536872323;
              if (isFilled_1308622880(self_2902461602.onRequestSaveIndex.data[chckIndx(h_536872321, 0, (self_2902461602.onRequestSaveIndex.data).length - 1)].Field0)) {
              var colontmp__536872326 = nimCopy(null, {Field0: nimCopy(null, self_2902461602.onRequestSaveIndex.data[chckIndx(h_536872321, 0, (self_2902461602.onRequestSaveIndex.data).length - 1)].Field1, NTI33554449), Field1: [self_2902461602.onRequestSaveIndex.data[chckIndx(h_536872321, 0, (self_2902461602.onRequestSaveIndex.data).length - 1)], "Field2"]}, NTI2902460332);
              __2902462496 = colontmp__536872326["Field0"];
              list_2902462497 = colontmp__536872326["Field1"][0]; list_2902462497_Idx = colontmp__536872326["Field1"][1];
              var index_2902462513 = find_2902462498(list_2902462497[list_2902462497_Idx], handle_2902461603);
              if ((0 <= index_2902462513)) {
              del_2902462514(list_2902462497, list_2902462497_Idx, chckRange(index_2902462513, 0, 2147483647));
              }
              
              if (!((len_2902462261(self_2902461602.onRequestSaveIndex) == L_536872319))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(723, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872323 = addInt(res_536872323, 1);
            }
        };
      };
    };
    }
    

  
}

function stop_2902458420(self_2902458421) {
  
}

function stop_2902458422(self_2902458421) {
    stop_2902458420(self_2902458421);

  
}

function destroy_2801799038(self_2801799039) {
    var Temporary1;
    var Temporary2;

    if (!((self_2801799039.tsParser == null))) {
    deinit_2868904376(self_2801799039.tsParser);
    self_2801799039.tsParser = null;
    }
    
    if (isSome_2801799047(self_2801799039.languageServer)) {
    removeOnRequestSaveHandler_2902461601((Temporary1 = get_2801799067(self_2801799039.languageServer), Temporary1)[0][Temporary1[1]], self_2801799039.onRequestSaveHandle);
    stop_2902458422((Temporary2 = get_2801799067(self_2801799039.languageServer), Temporary2)[0][Temporary2[1]]);
    self_2801799039.languageServer = nimCopy(self_2801799039.languageServer, none_2919235608(), NTI2801795266);
    }
    

  
}

function shutdown_2801799114(self_2801799115) {
    destroy_2801799038(self_2801799115.document);

  
}

function shutdown_2147483764(self_2147483765) {
  
}

function shutdown_2147483766(self_2147483765) {
    chckNilDisp(self_2147483765);
    if (isObj(self_2147483765.m_type, NTI2801795279)) {
    shutdown_2801799114(self_2147483765);
    }
    else {
    if (isObj(self_2147483765.m_type, NTI2147483652)) {
    shutdown_2147483764(self_2147483765);
    }
    }

  
}

function canEdit_2936021432(self_2936021433, document_2936021434) {
  var result_2936021435 = false;

  BeforeRet: {
    if (isObj(document_2936021434.m_type, NTI2936014286)) {
    result_2936021435 = true;
    break BeforeRet;
    }
    else {
      result_2936021435 = false;
      break BeforeRet;
    }
    
  };

  return result_2936021435;

}

function canEdit_2801800088(self_2801800089, document_2801800090) {
  var result_2801800091 = false;

  BeforeRet: {
    if (isObj(document_2801800090.m_type, NTI2801795207)) {
    result_2801800091 = true;
    break BeforeRet;
    }
    else {
      result_2801800091 = false;
      break BeforeRet;
    }
    
  };

  return result_2801800091;

}

function canEdit_2147483767(self_2147483768, document_2147483769) {
  var result_2147483770 = false;

  BeforeRet: {
    result_2147483770 = false;
    break BeforeRet;
  };

  return result_2147483770;

}

function canEdit_2147483771(self_2147483768, document_2147483769) {
  var result_2147483772 = false;

  BeforeRet: {
    chckNilDisp(self_2147483768);
    if (isObj(self_2147483768.m_type, NTI2936014315)) {
    result_2147483772 = canEdit_2936021432(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483768.m_type, NTI2801795279)) {
    result_2147483772 = canEdit_2801800088(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483768.m_type, NTI2147483652)) {
    result_2147483772 = canEdit_2147483767(self_2147483768, document_2147483769);
    break BeforeRet;
    }
    }}
  };

  return result_2147483772;

}

function addQuoted_2936020950(s_2936020952, s_2936020952_Idx, x_2936020953) {
    s_2936020952[s_2936020952_Idx].push.apply(s_2936020952[s_2936020952_Idx], HEX24_2969569239(x_2936020953));;

  
}

function HEX24_2936020939(self_2936020941) {
  var result_2936020942 = [[]];

    if (isSome_2969569114(self_2936020941)) {
    result_2936020942[0] = nimCopy(null, [115,111,109,101,40], NTI33554449);
    addQuoted_2936020950(result_2936020942, 0, self_2936020941.val);
    result_2936020942[0].push.apply(result_2936020942[0], [41]);;
    }
    else {
      result_2936020942[0] = nimCopy(null, [110,111,110,101,40,65,115,116,78,111,100,101,41], NTI33554449);
    }
    

  return result_2936020942[0];

}

function formatValue_2936020872(result_2936020874, result_2936020874_Idx, value_2936020875, specifier_2936020876) {
    formatValue_721420459(result_2936020874, result_2936020874_Idx, HEX24_2936020939(value_2936020875), specifier_2936020876);

  
}

function handleNodeInserted_2936020858(self_2936020859, doc_2936020860, node_2936020861) {
      var Temporary1;
      var Temporary2;

    var fmtRes_2936020866 = [mnewString(0)];
    fmtRes_2936020866[0].push.apply(fmtRes_2936020866[0], [91,97,115,116,101,100,105,116,111,114,93,32,78,111,100,101,32,105,110,115,101,114,116,101,100,58,32]);;
    formatValue_3070231363(fmtRes_2936020866, 0, node_2936020861, []);
    fmtRes_2936020866[0].push.apply(fmtRes_2936020866[0], [44,32]);;
    formatValue_2936020872(fmtRes_2936020866, 0, self_2936020859.deletedNode, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020866[0], NTI33554449)]);
      var oHEX60gensym113_2936020962 = nimCopy(null, self_2936020859.deletedNode, NTI2969567351);
      if (!isSome_2969569114(oHEX60gensym113_2936020962)) Temporary2 = false; else {        var deletedNode_2936020985 = get_2969569134(oHEX60gensym113_2936020962);
        Temporary2 = true;      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (deletedNode_2936020985 == node_2936020861);      }    if (Temporary1) {
    self_2936020859.deletedNode = nimCopy(self_2936020859.deletedNode, some_2969567458(cloneAndMapIds_2969569065(node_2936020861)), NTI2969567351);
    var fmtRes_2936020997 = mnewString(0);
    fmtRes_2936020997.push.apply(fmtRes_2936020997, makeNimstrLit("[asteditor] Clearing editor.deletedNode because it was just inserted"));;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936020997, NTI33554449)]);
    }
    

  
}

function createWithDocument_2936031248(self_2936031249, document_2936031250) {
    
function HEX3Aanonymous_2936031253(doc_2936031254, node_2936031255) {
        handleNodeInserted_2936020858(editor_2936031252, doc_2936031254, node_2936031255);

      
    }

  var result_2936031251 = null;

  BeforeRet: {
    var editor_2936031252 = {eventHandler: null, document: document_2936031250, textDocument: null, textEditor: null, m_type: NTI2936014315, editor: null, selectedNode: null, selectionHistory: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), selectionFuture: ({data: [], head: 0, tail: 0, count: 0, mask: 0}), deletedNode: ({val: null}), currentlyEditedSymbol: ({padding: 0, time: 0, fuzz: 0, count: 0}), currentlyEditedNode: null, textEditEventHandler: null, modeEventHandler: null, currentMode: [], completionText: [], completions: [], selectedCompletion: 0, lastItems: [], scrollOffset: 0.0, previousBaseIndex: 0, lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastLayouts: [], lastEditCommand: {Field0: [], Field1: []}, lastMoveCommand: {Field0: [], Field1: []}, lastOtherCommand: {Field0: [], Field1: []}, lastCommand: {Field0: [], Field1: []}, id: 0, renderHeader: false, fillAvailableSpace: false, lastContentBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), onMarkedDirty: ({handlers: []}), mDirty: false, active: false};
    editor_2936031252 = createWithPrototype(editor_ast_prototype, editor_2936031252);
    init_2147483681(editor_2936031252);
    editor_2936031252.document.onNodeInserted.push(HEX3Aanonymous_2936031253);;
    editor_2936031252.selectedCompletion = 0;
    editor_2936031252.completions = nimCopy(null, [], NTI3154116626);
    if ((len_2969567320(editor_2936031252.document.rootNode) == 0)) {
    var paramA_2936031265 = newId_2181038297();
    var paramB_2936031266 = newId_2181038297();
    var resultId_2936031267 = newId_2181038297();
    Label1: {
      var tmpHEX60gensym1072_2936031272 = null;
      Label2: {
        var res_2936031278 = null;
        res_2936031278 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2936031278.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2936031278.text = nimCopy(null, [97,100,100], NTI33554449);
        Label4: {
          Label5: {
            var res_2936031281 = null;
            res_2936031281 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936031281.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label7: {
              Label8: {
                var res_2936031283 = null;
                res_2936031283 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936031283.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label10: {
                  Label11: {
                    var res_2936031285 = null;
                    res_2936031285 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936031285.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936031285.id = nimCopy(res_2936031285.id, paramA_2936031265, NTI2181038083);
                    res_2936031285.text = nimCopy(null, [97], NTI33554449);
                    Label13: {
                      Label14: {
                        var res_2936031289 = null;
                        res_2936031289 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031289.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936031289.reff = nimCopy(res_2936031289.reff, IdInt_2952790028, NTI2181038083);
                      };
                      add_2969567270(res_2936031285, res_2936031289);
                      Label16: {
                        var res_2936031292 = null;
                        res_2936031292 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031292.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2969567270(res_2936031285, res_2936031292);
                    };
                  };
                  add_2969567270(res_2936031283, res_2936031285);
                  Label18: {
                    var res_2936031294 = null;
                    res_2936031294 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936031294.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936031294.id = nimCopy(res_2936031294.id, paramB_2936031266, NTI2181038083);
                    res_2936031294.text = nimCopy(null, [98], NTI33554449);
                    Label20: {
                      Label21: {
                        var res_2936031298 = null;
                        res_2936031298 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031298.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936031298.reff = nimCopy(res_2936031298.reff, IdInt_2952790028, NTI2181038083);
                      };
                      add_2969567270(res_2936031294, res_2936031298);
                      Label23: {
                        var res_2936031301 = null;
                        res_2936031301 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031301.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2969567270(res_2936031294, res_2936031301);
                    };
                  };
                  add_2969567270(res_2936031283, res_2936031294);
                };
              };
              add_2969567270(res_2936031281, res_2936031283);
              Label25: {
                var res_2936031303 = null;
                res_2936031303 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936031303.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2936031303.reff = nimCopy(res_2936031303.reff, IdInt_2952790028, NTI2181038083);
              };
              add_2969567270(res_2936031281, res_2936031303);
              Label27: {
                var res_2936031306 = null;
                res_2936031306 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936031306.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label29: {
                  Label30: {
                    var res_2936031308 = null;
                    res_2936031308 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936031308.kind = 5;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936031308.id = nimCopy(res_2936031308.id, resultId_2936031267, NTI2181038083);
                    res_2936031308.text = nimCopy(null, [114,101,115,117,108,116], NTI33554449);
                    Label32: {
                      Label33: {
                        var res_2936031312 = null;
                        res_2936031312 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031312.kind = 0;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                      };
                      add_2969567270(res_2936031308, res_2936031312);
                      Label35: {
                        var res_2936031314 = null;
                        res_2936031314 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031314.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        Label37: {
                          Label38: {
                            var res_2936031316 = null;
                            res_2936031316 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2936031316.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2936031316.reff = nimCopy(res_2936031316.reff, IdAdd_2952790019, NTI2181038083);
                          };
                          add_2969567270(res_2936031314, res_2936031316);
                          Label40: {
                            var res_2936031319 = null;
                            res_2936031319 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2936031319.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2936031319.reff = nimCopy(res_2936031319.reff, paramA_2936031265, NTI2181038083);
                          };
                          add_2969567270(res_2936031314, res_2936031319);
                          Label42: {
                            var res_2936031322 = null;
                            res_2936031322 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                            try {
                            res_2936031322.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                            }
                            else {
                            	reraiseException();
                            }
                            lastJSError = prevJSError;
                            } finally {
                            }
                            res_2936031322.reff = nimCopy(res_2936031322.reff, paramB_2936031266, NTI2181038083);
                          };
                          add_2969567270(res_2936031314, res_2936031322);
                        };
                      };
                      add_2969567270(res_2936031308, res_2936031314);
                    };
                  };
                  add_2969567270(res_2936031306, res_2936031308);
                  Label44: {
                    var res_2936031325 = null;
                    res_2936031325 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936031325.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    res_2936031325.reff = nimCopy(res_2936031325.reff, resultId_2936031267, NTI2181038083);
                  };
                  add_2969567270(res_2936031306, res_2936031325);
                };
              };
              add_2969567270(res_2936031281, res_2936031306);
            };
          };
        };
        add_2969567270(res_2936031278, res_2936031281);
      };
    };
    add_2969567270(editor_2936031252.document.rootNode, res_2936031278);
    var addId_2936031489 = nimCopy(null, last_2969567490(editor_2936031252.document.rootNode).id, NTI2181038083);
    Label46: {
      var tmpHEX60gensym1127_2936031494 = null;
      Label47: {
        var res_2936031500 = null;
        res_2936031500 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
        try {
        res_2936031500.kind = 4;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
        }
        else {
        	reraiseException();
        }
        lastJSError = prevJSError;
        } finally {
        }
        res_2936031500.text = nimCopy(null, [109,97,105,110], NTI33554449);
        Label49: {
          Label50: {
            var res_2936031503 = null;
            res_2936031503 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
            try {
            res_2936031503.kind = 11;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
            raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
            }
            else {
            	reraiseException();
            }
            lastJSError = prevJSError;
            } finally {
            }
            Label52: {
              Label53: {
                var res_2936031505 = null;
                res_2936031505 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936031505.kind = 12;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
              };
              add_2969567270(res_2936031503, res_2936031505);
              Label55: {
                var res_2936031507 = null;
                res_2936031507 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936031507.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                res_2936031507.reff = nimCopy(res_2936031507.reff, IdVoid_2952790030, NTI2181038083);
              };
              add_2969567270(res_2936031503, res_2936031507);
              Label57: {
                var res_2936031510 = null;
                res_2936031510 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                try {
                res_2936031510.kind = 7;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                }
                else {
                	reraiseException();
                }
                lastJSError = prevJSError;
                } finally {
                }
                Label59: {
                  Label60: {
                    var res_2936031512 = null;
                    res_2936031512 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                    try {
                    res_2936031512.kind = 8;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                    if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                    raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                    }
                    else {
                    	reraiseException();
                    }
                    lastJSError = prevJSError;
                    } finally {
                    }
                    Label62: {
                      Label63: {
                        var res_2936031514 = null;
                        res_2936031514 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031514.kind = 1;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936031514.reff = nimCopy(res_2936031514.reff, addId_2936031489, NTI2181038083);
                      };
                      add_2969567270(res_2936031512, res_2936031514);
                      Label65: {
                        var res_2936031517 = null;
                        res_2936031517 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031517.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936031517.text = nimCopy(null, [54,57], NTI33554449);
                      };
                      add_2969567270(res_2936031512, res_2936031517);
                      Label67: {
                        var res_2936031520 = null;
                        res_2936031520 = ({parent: null, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), reff: ({padding: 0, time: 0, fuzz: 0, count: 0}), kind: 0, text: [], children: []});
++excHandler;
                        try {
                        res_2936031520.kind = 2;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
                        if (lastJSError && (isObj(lastJSError.m_type, NTI134217750))) {
                        raiseException({message: makeNimstrLit("Error while setting `kind` for AstNode - type does not provide `kind=` override."), parent: null, m_type: NTI134217750, name: null, trace: [], up: null}, "FieldDefect");
                        }
                        else {
                        	reraiseException();
                        }
                        lastJSError = prevJSError;
                        } finally {
                        }
                        res_2936031520.text = nimCopy(null, [52,50,48], NTI33554449);
                      };
                      add_2969567270(res_2936031512, res_2936031520);
                    };
                  };
                };
                add_2969567270(res_2936031510, res_2936031512);
              };
              add_2969567270(res_2936031503, res_2936031510);
            };
          };
        };
        add_2969567270(res_2936031500, res_2936031503);
      };
    };
    add_2969567270(editor_2936031252.document.rootNode, res_2936031500);
    }
    
    Label69: {
      var c_2936031606 = null;
      var i_536872376 = 0;
      var L_536872377 = (editor_2936031252.document.rootNode.children).length;
      Label70: {
          Label71: while (true) {
          if (!(i_536872376 < L_536872377)) break Label71;
            c_2936031606 = editor_2936031252.document.rootNode.children[chckIndx(i_536872376, 0, (editor_2936031252.document.rootNode.children).length - 1)];
            handleNodeInserted_2936018151(editor_2936031252.document, c_2936031606);
            i_536872376 = addInt(i_536872376, 1);
            if (!(((editor_2936031252.document.rootNode.children).length == L_536872377))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    insertNode_2986456078(ctx_2936012853, editor_2936031252.document.rootNode);
    nodeHEX3D_2936017358(editor_2936031252, HEX5BHEX5D_2969567316(editor_2936031252.document.rootNode, 0));
    result_2936031251 = editor_2936031252;
    break BeforeRet;
  };

  return result_2936031251;

}

function createWithDocument_2801811388(self_2801811389, document_2801811390) {
    
function HEX3Aanonymous_2801811411(__2801811412) {
        handleTextDocumentTextChanged_2801811294(editor_2801811392);

      
    }

  var result_2801811391 = null;

  BeforeRet: {
    var editor_2801811392 = createTextEditorInstance_2801811296();
    editor_2801811392.document = document_2801811390;
    init_2147483681(editor_2801811392);
    if (((editor_2801811392.document.lines).length == 0)) {
    editor_2801811392.document.lines = nimCopy(null, [[]], NTI1560281203);
    }
    
    var _ = subscribe_2801811360(editor_2801811392.document.textChanged, HEX3Aanonymous_2801811411);
    result_2801811391 = editor_2801811392;
    break BeforeRet;
  };

  return result_2801811391;

}

function createWithDocument_2147483773(self_2147483774, document_2147483775) {
  var result_2147483776 = null;

  BeforeRet: {
    result_2147483776 = null;
    break BeforeRet;
  };

  return result_2147483776;

}

function createWithDocument_2147483786(self_2147483774, document_2147483775) {
  var result_2147483787 = null;

  BeforeRet: {
    chckNilDisp(self_2147483774);
    if (isObj(self_2147483774.m_type, NTI2936014315)) {
    result_2147483787 = createWithDocument_2936031248(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483774.m_type, NTI2801795279)) {
    result_2147483787 = createWithDocument_2801811388(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483774.m_type, NTI2147483652)) {
    result_2147483787 = createWithDocument_2147483773(self_2147483774, document_2147483775);
    break BeforeRet;
    }
    }}
  };

  return result_2147483787;

}

function getEventHandlers_2936021443(self_2936021444) {
  var result_2936021445 = [[]];

    result_2936021445[0].push(self_2936021444.eventHandler);;
    if (!((self_2936021444.modeEventHandler == null))) {
    result_2936021445[0].push(self_2936021444.modeEventHandler);;
    }
    
    if (!((self_2936021444.textEditor == null))) {
    add_2936021461(result_2936021445, 0, getEventHandlers_2147483804(self_2936021444.textEditor));
    result_2936021445[0].push(self_2936021444.textEditEventHandler);;
    }
    

  return result_2936021445[0];

}

function getEventHandlers_2801800099(self_2801800100) {
  var result_2801800101 = [];

    result_2801800101 = nimCopy(null, [self_2801800100.eventHandler], NTI2248146958);
    if (!((self_2801800100.modeEventHandler == null))) {
    result_2801800101.push(self_2801800100.modeEventHandler);;
    }
    
    if (self_2801800100.showCompletions) {
    result_2801800101.push(self_2801800100.completionEventHandler);;
    }
    

  return result_2801800101;

}

function getEventHandlers_2248146949(self_2248146950) {
  var result_2248146951 = [];

  BeforeRet: {
    result_2248146951 = nimCopy(null, [self_2248146950.eventHandler], NTI2248146958);
    break BeforeRet;
  };

  return result_2248146951;

}

function getEventHandlers_2147483788(self_2147483789) {
  var result_2147483790 = [];

  BeforeRet: {
    result_2147483790 = nimCopy(null, [], NTI2147483731);
    break BeforeRet;
  };

  return result_2147483790;

}

function getEventHandlers_2147483804(self_2147483789) {
  var result_2147483805 = [];

  BeforeRet: {
    chckNilDisp(self_2147483789);
    if (isObj(self_2147483789.m_type, NTI2936014315)) {
    result_2147483805 = getEventHandlers_2936021443(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2801795279)) {
    result_2147483805 = getEventHandlers_2801800099(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2248146948)) {
    result_2147483805 = getEventHandlers_2248146949(self_2147483789);
    break BeforeRet;
    }
    else {
    if (isObj(self_2147483789.m_type, NTI2147483652)) {
    result_2147483805 = getEventHandlers_2147483788(self_2147483789);
    break BeforeRet;
    }
    }}}
  };

  return result_2147483805;

}

function reset_2936021558(obj_2936021560, obj_2936021560_Idx) {
    obj_2936021560[obj_2936021560_Idx] = null;

  
}

function clear_2936021551(deq_2936021553) {
    Label1: {
      var el_2936021557 = null;
      var el_2936021557_Idx = 0;
      var i_536872387 = deq_2936021553.head;
      Label2: {
        var c_536872389 = 0;
        var i_536872390 = 0;
        Label3: {
            Label4: while (true) {
            if (!(i_536872390 < deq_2936021553.count)) break Label4;
              c_536872389 = i_536872390;
              el_2936021557 = deq_2936021553.data; el_2936021557_Idx = chckIndx(i_536872387, 0, (deq_2936021553.data).length - 1);
              reset_2936021558(el_2936021557, el_2936021557_Idx);
              i_536872387 = (addInt(i_536872387, 1) & deq_2936021553.mask);
              i_536872390 = addInt(i_536872390, 1);
            }
        };
      };
    };
    deq_2936021553.count = 0;
    deq_2936021553.tail = deq_2936021553.head;

  
}

function handleDocumentChanged_2936021488(self_2936021489) {
    var fmtRes_2936021494 = mnewString(0);
    fmtRes_2936021494.push.apply(fmtRes_2936021494, [91,97,115,116,45,101,100,105,116,111,114,93,32,68,111,99,117,109,101,110,116,32,99,104,97,110,103,101,100]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2936021494, NTI33554449)]);
    clear_2936021551(self_2936021489.selectionHistory);
    clear_2936021551(self_2936021489.selectionFuture);
    finishEdit_2936021424(self_2936021489, false);
    Label1: {
      var symbol_2936021628 = null;
      var L_536872380 = len_2986455580(ctx_2936012853.globalScope);
      Label2: {
        var h_536872382 = 0;
        var colontmp__536872383 = 0;
        colontmp__536872383 = (ctx_2936012853.globalScope.data).length - 1;
        var res_536872384 = 0;
        Label3: {
            Label4: while (true) {
            if (!(res_536872384 <= colontmp__536872383)) break Label4;
              h_536872382 = res_536872384;
              if (isFilled_1308622880(ctx_2936012853.globalScope.data[chckIndx(h_536872382, 0, (ctx_2936012853.globalScope.data).length - 1)].Field0)) {
              symbol_2936021628 = ctx_2936012853.globalScope.data[chckIndx(h_536872382, 0, (ctx_2936012853.globalScope.data).length - 1)]["Field2"];
              var _ = newSymbol_2986414031(ctx_2936012853, symbol_2936021628);
              if (!((len_2986455580(ctx_2936012853.globalScope) == L_536872380))) {
              failedAssertImpl_268435515(makeNimstrLit("tables.nim(765, 13) `len(t) == L` the length of the table changed while iterating over it"));
              }
              
              }
              
              res_536872384 = addInt(res_536872384, 1);
            }
        };
      };
    };
    nodeHEX3D_2936017358(self_2936021489, HEX5BHEX5D_2969567316(self_2936021489.document.rootNode, 0));

  
}

function handleDocumentChanged_2801803116(self_2801803117) {
    selectionHEX3D_2801795574(self_2801803117, {Field0: clampCursor_2801795471(self_2801803117, selection_2801795568(self_2801803117).Field0), Field1: clampCursor_2801795471(self_2801803117, selection_2801795568(self_2801803117).Field1)});
    updateSearchResults_2801800117(self_2801803117);

  
}

function handleDocumentChanged_2147483806(self_2147483807) {
  
}

function handleDocumentChanged_2147483808(self_2147483807) {
    chckNilDisp(self_2147483807);
    if (isObj(self_2147483807.m_type, NTI2936014315)) {
    handleDocumentChanged_2936021488(self_2147483807);
    }
    else {
    if (isObj(self_2147483807.m_type, NTI2801795279)) {
    handleDocumentChanged_2801803116(self_2147483807);
    }
    else {
    if (isObj(self_2147483807.m_type, NTI2147483652)) {
    handleDocumentChanged_2147483806(self_2147483807);
    }
    }}

  
}

function del_1291847207(t_1291847210, key_1291847211) {
    var hc_1291847212 = [0];
    var i_1291847219 = rawGet_1291845891(t_1291847210, key_1291847211, hc_1291847212, 0);
    var mskHEX60gensym36_1291847223 = (t_1291847210.data).length - 1;
    if ((0 <= i_1291847219)) {
    t_1291847210.counter = subInt(t_1291847210.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_1291847230 = i_1291847219;
            var rHEX60gensym36_1291847231 = jHEX60gensym36_1291847230;
            t_1291847210.data[chckIndx(i_1291847219, 0, (t_1291847210.data).length - 1)].Field0 = 0;
            t_1291847210.data[chckIndx(i_1291847219, 0, (t_1291847210.data).length - 1)].Field1 = 0;
            t_1291847210.data[chckIndx(i_1291847219, 0, (t_1291847210.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_1291847219 = (addInt(i_1291847219, 1) & mskHEX60gensym36_1291847223);
                  if (isEmpty_1308622877(t_1291847210.data[chckIndx(i_1291847219, 0, (t_1291847210.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_1291847231 = (t_1291847210.data[chckIndx(i_1291847219, 0, (t_1291847210.data).length - 1)].Field0 & mskHEX60gensym36_1291847223);
                  if (!(((((rHEX60gensym36_1291847231 <= i_1291847219) && (jHEX60gensym36_1291847230 < rHEX60gensym36_1291847231)) || ((jHEX60gensym36_1291847230 < rHEX60gensym36_1291847231) && (i_1291847219 < jHEX60gensym36_1291847230))) || ((i_1291847219 < jHEX60gensym36_1291847230) && (rHEX60gensym36_1291847231 <= i_1291847219))))) {
                  break Label4;
                  }
                  
                }
            };
            t_1291847210.data[chckIndx(jHEX60gensym36_1291847230, 0, (t_1291847210.data).length - 1)] = nimCopy(t_1291847210.data[chckIndx(jHEX60gensym36_1291847230, 0, (t_1291847210.data).length - 1)], t_1291847210.data[chckIndx(i_1291847219, 0, (t_1291847210.data).length - 1)], NTI1291845712);
          }
      };
    };
    }
    

  
}

function invoke_1291847117(event_1291847119, arg_1291847120) {
    Label1: {
      var h_1291847143 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872396 = 0;
      var L_536872397 = (event_1291847119.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872396 < L_536872397)) break Label3;
            h_1291847143 = event_1291847119.handlers[chckIndx(i_536872396, 0, (event_1291847119.handlers).length - 1)];
            h_1291847143.Field1(arg_1291847120);
            i_536872396 = addInt(i_536872396, 1);
            if (!(((event_1291847119.handlers).length == L_536872397))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function unregisterEditor_1291847164(self_1291847165, editor_1291847166) {
    del_1291847207(self_1291847165.editors, editor_1291847166.id);
    invoke_1291847117(self_1291847165.onEditorDeregistered, editor_1291847166);

  
}

function unregister_2936031690(self_2936031691) {
    finishEdit_2936021424(self_2936031691, false);
    unregisterEditor_1291847164(self_2936031691.editor, self_2936031691);

  
}

function unregister_2801812048(self_2801812049) {
    unregisterEditor_1291847164(self_2801812049.editor, self_2801812049);

  
}

function unregister_2147483809(self_2147483810) {
  
}

function unregister_2147483811(self_2147483810) {
    chckNilDisp(self_2147483810);
    if (isObj(self_2147483810.m_type, NTI2936014315)) {
    unregister_2936031690(self_2147483810);
    }
    else {
    if (isObj(self_2147483810.m_type, NTI2801795279)) {
    unregister_2801812048(self_2147483810);
    }
    else {
    if (isObj(self_2147483810.m_type, NTI2147483652)) {
    unregister_2147483809(self_2147483810);
    }
    }}

  
}

function getItemAtPixelPosition_2936030895(self_2936030896, posWindow_2936030897) {
  var result_2936030899 = ({val: 0, has: false});

  BeforeRet: {
    result_2936030899 = nimCopy(result_2936030899, none_2969567410(), NTI1191183280);
    Label1: {
      var index_2936030910 = 0;
      var rect_2936030911 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872401 = 0;
      var L_536872402 = (self_2936030896.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872401 < L_536872402)) break Label3;
            index_2936030910 = self_2936030896.lastItems[chckIndx(i_536872401, 0, (self_2936030896.lastItems).length - 1)]["Field0"];
            rect_2936030911 = self_2936030896.lastItems[chckIndx(i_536872401, 0, (self_2936030896.lastItems).length - 1)]["Field1"];
            if (((contains_2063597758(rect_2936030911, posWindow_2936030897) && (0 <= index_2936030910)) && (index_2936030910 <= (self_2936030896.completions).length - 1))) {
            result_2936030899 = nimCopy(result_2936030899, some_1191184367(index_2936030910), NTI1191183280);
            break BeforeRet;
            }
            
            i_536872401 = addInt(i_536872401, 1);
            if (!(((self_2936030896.lastItems).length == L_536872402))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2936030899;

}

function getOption_2801803540(editor_2801803542, path_2801803543, default_2801803544) {
  var result_2801803550 = 0.0;

  BeforeRet: {
    Label1: {
      if ((editor_2801803542 == null)) {
      result_2801803550 = default_2801803544;
      break BeforeRet;
      }
      
      var nodeHEX60gensym145_2801803563 = HEX7BHEX7D_1627393316(editor_2801803542.options, nsuSplitString(path_2801803543, [46], -1));
      if ((nodeHEX60gensym145_2801803563 == null)) {
      result_2801803550 = default_2801803544;
      break BeforeRet;
      }
      
    };
    result_2801803550 = getFloat_1627390140(nodeHEX60gensym145_2801803563, default_2801803544);
    break BeforeRet;
  };

  return result_2801803550;

}

function handleScroll_2936030918(self_2936030919, scroll_2936030920, mousePosWindow_2936030921) {
    if (isSome_1191185117(getItemAtPixelPosition_2936030895(self_2936030919, mousePosWindow_2936030921))) {
    self_2936030919.selectedCompletion = clamp_1660945119(subInt(self_2936030919.selectedCompletion, ((scroll_2936030920.arr[chckIndx(1, 0, (scroll_2936030920.arr).length - 1)]) | 0)), 0, (self_2936030919.completions).length - 1);
    }
    else {
    HEX2BHEX3D_855640304(self_2936030919, "scrollOffset", (scroll_2936030920.arr[chckIndx(1, 0, (scroll_2936030920.arr).length - 1)] * getOption_2801803540(self_2936030919.editor, [97,115,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 20.0)));
    }
    

  
}

function handleScroll_2801803462(self_2801803463, scroll_2801803464, mousePosWindow_2801803465) {
    HEX2BHEX3D_855640304(self_2801803463, "scrollOffset", (scroll_2801803464.arr[chckIndx(1, 0, (scroll_2801803464.arr).length - 1)] * getOption_2801803540(self_2801803463.editor, [116,101,120,116,46,115,99,114,111,108,108,45,115,112,101,101,100], 40.0)));
    markDirty_2147483686(self_2801803463);

  
}

function handleScroll_2147483812(self_2147483813, scroll_2147483814, mousePosWindow_2147483815) {
  
}

function handleScroll_2147483816(self_2147483813, scroll_2147483814, mousePosWindow_2147483815) {
    chckNilDisp(self_2147483813);
    if (isObj(self_2147483813.m_type, NTI2936014315)) {
    handleScroll_2936030918(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    else {
    if (isObj(self_2147483813.m_type, NTI2801795279)) {
    handleScroll_2801803462(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    else {
    if (isObj(self_2147483813.m_type, NTI2147483652)) {
    handleScroll_2147483812(self_2147483813, scroll_2147483814, mousePosWindow_2147483815);
    }
    }}

  
}

function HEX2D_2080375094(aHEX60gensym154_2080375096, bHEX60gensym154_2080375097) {
  var result_2080375098 = ({arr: new Float32Array(2)});

    result_2080375098 = nimCopy(result_2080375098, {arr: new Float32Array([(aHEX60gensym154_2080375096.arr[0] - bHEX60gensym154_2080375097.arr[0]), (aHEX60gensym154_2080375096.arr[1] - bHEX60gensym154_2080375097.arr[1])])}, NTI2097152387);

  return result_2080375098;

}

function getNodeAtPixelPosition_2936024292(self_2936024293, posContent_2936024294) {
                      var Temporary8;

  var result_2936024296 = ({val: null});

  BeforeRet: {
    result_2936024296 = nimCopy(result_2936024296, none_2969567439(), NTI2969567351);
    Label1: {
      var layout_2936024324 = ({root: null, nodeToVisualNode: ({data: [], counter: 0}), node: null});
      var offset_2936024325 = ({arr: new Float32Array(2)});
      var i_536872415 = 0;
      var L_536872416 = (self_2936024293.lastLayouts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872415 < L_536872416)) break Label3;
            layout_2936024324 = self_2936024293.lastLayouts[chckIndx(i_536872415, 0, (self_2936024293.lastLayouts).length - 1)]["Field0"];
            offset_2936024325 = self_2936024293.lastLayouts[chckIndx(i_536872415, 0, (self_2936024293.lastLayouts).length - 1)]["Field1"];
            var bounds_2936024329 = HEX2B_2063597727(bounds_3070232665(layout_2936024324), offset_2936024325);
            var smallestRange_2936024330 = ({parent: null, first: 0, last: 0});
            if (contains_2063597758(bounds_2936024329, posContent_2936024294)) {
            Label4: {
              var __2936024331 = 0;
              var child_2936024332 = null;
              var n_536872407 = layout_2936024324.node;
              var idx_536872408 = -1;
              var i_536872409 = 0;
              Label5: {
                  Label6: while (true) {
                  if (!true) break Label6;
                    try {
                    if ((idx_536872408 == -1)) {
                    var colontmp__536872412 = nimCopy(null, {Field0: i_536872409, Field1: n_536872407}, NTI2969568569);
                    __2936024331 = colontmp__536872412["Field0"];
                    child_2936024332 = colontmp__536872412["Field1"];
                    if (contains_2936015556(layout_2936024324.nodeToVisualNode, child_2936024332.id)) {
                    var visualNode_2936024478 = HEX5BHEX5D_2936017217(layout_2936024324.nodeToVisualNode, child_2936024332.id);
                    var bounds_2936024560 = HEX2B_2063597727(absoluteBounds_3070232308(visualNode_2936024478), vec2_2097152992(0.0, offset_2936024325.arr[chckIndx(1, 0, (offset_2936024325.arr).length - 1)]));
                    if (contains_2063597758(bounds_2936024560, posContent_2936024294)) {
                    if (((((smallestRange_2936024330.parent == null) || (smallestRange_2936024330.parent.depth < visualNode_2936024478.parent.depth)) || ((visualNode_2936024478.parent.depth == smallestRange_2936024330.parent.depth) && (smallestRange_2936024330.parent.indent < visualNode_2936024478.parent.indent))) || ((visualNode_2936024478.parent.depth == smallestRange_2936024330.parent.depth) && (subInt(visualNode_2936024478.last, visualNode_2936024478.first) < subInt(smallestRange_2936024330.last, smallestRange_2936024330.first))))) {
                    smallestRange_2936024330 = nimCopy(smallestRange_2936024330, visualNode_2936024478, NTI3070230558);
                    result_2936024296 = nimCopy(result_2936024296, some_2969567458(child_2936024332), NTI2969567351);
                    }
                    
                    }
                    
                    }
                    
                    }
                    
                    if ((addInt(idx_536872408, 1) < len_2969567320(n_536872407))) {
                    n_536872407 = HEX5BHEX5D_2969567316(n_536872407, addInt(idx_536872408, 1));
                    idx_536872408 = -1;
                    }
                    else {
                      var oHEX60gensym74_536872413 = next_2969567425(n_536872407);
                      if (!isSome_2969569114(oHEX60gensym74_536872413)) Temporary8 = false; else {                        var ne_536872414 = get_2969569134(oHEX60gensym74_536872413);
                        Temporary8 = true;                      }                    if (Temporary8) {
                    n_536872407 = ne_536872414;
                    idx_536872408 = -1;
                    }
                    else {
                    if ((!((n_536872407.parent == null)) && !((n_536872407.parent == layout_2936024324.node)))) {
                    idx_536872408 = index_2969567340(n_536872407);
                    n_536872407 = n_536872407.parent;
                    }
                    else {
                      break Label5;
                    }
                    }}
                    } finally {
                    i_536872409 = addInt(i_536872409, 1);
                    }
                  }
              };
            };
            if (isNone_2969569142(result_2936024296)) {
            result_2936024296 = nimCopy(result_2936024296, some_2969567458(layout_2936024324.node), NTI2969567351);
            }
            
            break BeforeRet;
            }
            
            i_536872415 = addInt(i_536872415, 1);
            if (!(((self_2936024293.lastLayouts).length == L_536872416))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_2936024296;

}

function handleMousePress_2936031106(self_2936031107, button_2936031108, mousePosWindow_2936031109) {
      var Temporary1;
      var Temporary2;
        var Temporary3;

    var mousePosContent_2936031130 = HEX2D_2080375094(mousePosWindow_2936031109, xy_2080374820(self_2936031107.lastBounds));
    if ((button_2936031108 == 0)) {
      var oHEX60gensym1068_2936031137 = getItemAtPixelPosition_2936030895(self_2936031107, mousePosWindow_2936031109);
      if (!isSome_1191185117(oHEX60gensym1068_2936031137)) Temporary1 = false; else {        var index_2936031160 = get_1191185211(oHEX60gensym1068_2936031137);
        Temporary1 = true;      }    if (Temporary1) {
    self_2936031107.selectedCompletion = index_2936031160;
    applySelectedCompletion_2936027573(self_2936031107);
    }
    else {
      if (!!(isEditing_2936021000(self_2936031107))) Temporary2 = false; else {        var oHEX60gensym1069_2936031163 = getNodeAtPixelPosition_2936024292(self_2936031107, mousePosContent_2936031130);
        if (!isSome_2969569114(oHEX60gensym1069_2936031163)) Temporary3 = false; else {          var n_2936031186 = get_2969569134(oHEX60gensym1069_2936031163);
          Temporary3 = true;        }        Temporary2 = Temporary3;      }    if (Temporary2) {
    nodeHEX3D_2936017358(self_2936031107, n_2936031186);
    }
    }
    }
    

  
}

function updateFontSettings_3288334411(self_3288334412) {
    var newFontSize_3288335496 = nsuParseFloat(HEX5BHEX5D_855639319(cstrToNimstr(window.getComputedStyle(self_3288334412.content, null).fontSize), HEX2EHEX2E_1040187488(0, 3)));
    if (!((newFontSize_3288335496 == self_3288334412.mFontSize))) {
    self_3288334412.mFontSize = newFontSize_3288335496;
    var d_3288335497 = document.createElement("div");
    d_3288335497.setAttribute("style", "position: absolute; visibility: hidden; height: auto; width: auto;");
    d_3288335497.innerHTML = "#";
    self_3288334412.content.appendChild(d_3288335497);
    var fmtRes_3288335503 = [mnewString(0)];
    fmtRes_3288335503[0].push.apply(fmtRes_3288335503[0], [99,104,97,114,87,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3288335503, 0, d_3288335497.clientWidth, []);
    fmtRes_3288335503[0].push.apply(fmtRes_3288335503[0], [44,32,108,105,110,101,72,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335503, 0, d_3288335497.clientHeight, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_3288335503[0], NTI33554449)]);
    self_3288334412.mLineHeight = d_3288335497.clientHeight;
    self_3288334412.mCharWidth = d_3288335497.clientWidth;
    self_3288334412.content.removeChild(d_3288335497);
    }
    

  
}

function charWidth_3288335541(self_3288335542) {
  var result_3288335543 = 0.0;

    updateFontSettings_3288334411(self_3288335542);
    result_3288335543 = self_3288335542.mCharWidth;

  return result_3288335543;

}

function charWidth_2315255949(self_2315255950) {
  var result_2315255951 = 0.0;

  return result_2315255951;

}

function charWidth_2315255952(self_2315255950) {
  var result_2315255953 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255950);
    if (isObj(self_2315255950.m_type, NTI3288334342)) {
    result_2315255953 = charWidth_3288335541(self_2315255950);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255950.m_type, NTI2315255812)) {
    result_2315255953 = charWidth_2315255949(self_2315255950);
    break BeforeRet;
    }
    }
  };

  return result_2315255953;

}

function isThickCursor_2801803225(self_2801803226) {
  var result_2801803227 = false;

  BeforeRet: {
    result_2801803227 = getOption_2801803228(self_2801803226.editor, getContextWithMode_2801803222(self_2801803226, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
    break BeforeRet;
  };

  return result_2801803227;

}

function HEX2DHEX3D_2801811837(x_2801811839, x_2801811839_Idx, y_2801811840) {
    x_2801811839[x_2801811839_Idx] = (x_2801811839[x_2801811839_Idx] - y_2801811840);

  
}

function some_2801811851(val_2801811853) {
  var result_2801811858 = ({val: {Field0: 0, Field1: 0}, has: false});

    result_2801811858.has = true;
    result_2801811858.val = nimCopy(result_2801811858.val, val_2801811853, NTI2801806466);

  return result_2801811858;

}

function none_2801811864() {
  var result_2801811871 = ({val: {Field0: 0, Field1: 0}, has: false});

  return result_2801811871;

}

function getCursorAtPixelPos_2801811441(self_2801811442, mousePosWindow_2801811443) {
  var result_2801811449 = ({val: {Field0: 0, Field1: 0}, has: false});

  BeforeRet: {
    var mousePosContent_2801811466 = HEX2D_2080375094(mousePosWindow_2801811443, xy_2080374820(self_2801811442.lastContentBounds));
    Label1: {
      var li_2801811500 = 0;
      var line_2801811501 = null;
      var i_536872425 = 0;
      var L_536872426 = (self_2801811442.lastRenderedLines).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872425 < L_536872426)) break Label3;
            li_2801811500 = i_536872425;
            line_2801811501 = self_2801811442.lastRenderedLines[chckIndx(i_536872425, 0, (self_2801811442.lastRenderedLines).length - 1)];
            var startOffset_2801811502 = 0;
            Label4: {
              var i_2801811535 = 0;
              var part_2801811536 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
              var i_536872421 = 0;
              var L_536872422 = (line_2801811501.parts).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872421 < L_536872422)) break Label6;
                    i_2801811535 = i_536872421;
                    part_2801811536 = nimCopy(part_2801811536, line_2801811501.parts[chckIndx(i_536872421, 0, (line_2801811501.parts).length - 1)], NTI2801795274);
                    if ((contains_2063597758(part_2801811536.bounds, mousePosContent_2801811466) || ((((i_2801811535 == (line_2801811501.parts).length - 1) && (part_2801811536.bounds.y <= mousePosContent_2801811466.arr[chckIndx(1, 0, (mousePosContent_2801811466.arr).length - 1)])) && (mousePosContent_2801811466.arr[chckIndx(1, 0, (mousePosContent_2801811466.arr).length - 1)] <= (part_2801811536.bounds.y + part_2801811536.bounds.h))) && (part_2801811536.bounds.x <= mousePosContent_2801811466.arr[chckIndx(0, 0, (mousePosContent_2801811466.arr).length - 1)])))) {
                    var offsetFromLeft_2801811836 = [((mousePosContent_2801811466.arr[chckIndx(0, 0, (mousePosContent_2801811466.arr).length - 1)] - part_2801811536.bounds.x) / charWidth_2315255952(self_2801811442.editor.platform))];
                    if (isThickCursor_2801803225(self_2801811442)) {
                    HEX2DHEX3D_2801811837(offsetFromLeft_2801811836, 0, 0.0);
                    }
                    else {
                    HEX2BHEX3D_855640304(offsetFromLeft_2801811836, 0, 0.5);
                    }
                    
                    var index_2801811850 = clamp_1660945119(((offsetFromLeft_2801811836[0]) | 0), 0, (part_2801811536.text).length);
                    result_2801811449 = nimCopy(result_2801811449, some_2801811851({Field0: line_2801811501.index, Field1: addInt(startOffset_2801811502, index_2801811850)}), NTI2801806267);
                    break BeforeRet;
                    }
                    
                    startOffset_2801811502 = addInt(startOffset_2801811502, (part_2801811536.text).length);
                    i_536872421 = addInt(i_536872421, 1);
                    if (!(((line_2801811501.parts).length == L_536872422))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872425 = addInt(i_536872425, 1);
            if (!(((self_2801811442.lastRenderedLines).length == L_536872426))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2801811449 = nimCopy(result_2801811449, none_2801811864(), NTI2801806267);
    break BeforeRet;
  };

  return result_2801811449;

}

function isSome_2801811906(self_2801811908) {
  var result_2801811909 = false;

    result_2801811909 = self_2801811908.has;

  return result_2801811909;

}

function isNone_2801811931(self_2801811933) {
  var result_2801811934 = false;

    result_2801811934 = !(self_2801811933.has);

  return result_2801811934;

}

function get_2801811923(self_2801811925) {
  var result_2801811926 = {Field0: 0, Field1: 0};

    if (isNone_2801811931(self_2801811925)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2801811926 = self_2801811925.val;

  return result_2801811926;

}

function handleMousePress_2801811890(self_2801811891, button_2801811892, mousePosWindow_2801811893) {
      var Temporary1;
        var Temporary2;
      var Temporary3;
        var Temporary4;
      var Temporary5;
        var Temporary6;

      if (!(button_2801811892 == 0)) Temporary1 = false; else {        var oHEX60gensym995_2801811901 = getCursorAtPixelPos_2801811441(self_2801811891, mousePosWindow_2801811893);
        if (!isSome_2801811906(oHEX60gensym995_2801811901)) Temporary2 = false; else {          var cursor_2801811946 = nimCopy(null, get_2801811923(oHEX60gensym995_2801811901), NTI2231369737);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2801795574(self_2801811891, toSelection_2231370221(cursor_2801811946));
    }
    
      if (!(button_2801811892 == 3)) Temporary3 = false; else {        var oHEX60gensym997_2801811953 = getCursorAtPixelPos_2801811441(self_2801811891, mousePosWindow_2801811893);
        if (!isSome_2801811906(oHEX60gensym997_2801811953)) Temporary4 = false; else {          var cursor_2801811976 = nimCopy(null, get_2801811923(oHEX60gensym997_2801811953), NTI2231369737);
          Temporary4 = true;        }        Temporary3 = Temporary4;      }    if (Temporary3) {
    selectInside_2801805396(self_2801811891, cursor_2801811976);
    }
    
      if (!(button_2801811892 == 4)) Temporary5 = false; else {        var oHEX60gensym998_2801811983 = getCursorAtPixelPos_2801811441(self_2801811891, mousePosWindow_2801811893);
        if (!isSome_2801811906(oHEX60gensym998_2801811983)) Temporary6 = false; else {          var cursor_2801812006 = nimCopy(null, get_2801811923(oHEX60gensym998_2801811983), NTI2231369737);
          Temporary6 = true;        }        Temporary5 = Temporary6;      }    if (Temporary5) {
    selectLine_2801805523(self_2801811891, cursor_2801812006.Field0);
    }
    

  
}

function handleMousePress_2147483817(self_2147483818, button_2147483819, mousePosWindow_2147483820) {
  
}

function handleMousePress_2147483821(self_2147483818, button_2147483819, mousePosWindow_2147483820) {
    chckNilDisp(self_2147483818);
    if (isObj(self_2147483818.m_type, NTI2936014315)) {
    handleMousePress_2936031106(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    else {
    if (isObj(self_2147483818.m_type, NTI2801795279)) {
    handleMousePress_2801811890(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    else {
    if (isObj(self_2147483818.m_type, NTI2147483652)) {
    handleMousePress_2147483817(self_2147483818, button_2147483819, mousePosWindow_2147483820);
    }
    }}

  
}

function handleMouseRelease_2936031187(self_2936031188, button_2936031189, mousePosWindow_2936031190) {
  
}

function handleMouseRelease_2801812007(self_2801812008, button_2801812009, mousePosWindow_2801812010) {
  
}

function handleMouseRelease_2147483822(self_2147483823, button_2147483824, mousePosWindow_2147483825) {
  
}

function handleMouseRelease_2147483826(self_2147483823, button_2147483824, mousePosWindow_2147483825) {
    chckNilDisp(self_2147483823);
    if (isObj(self_2147483823.m_type, NTI2936014315)) {
    handleMouseRelease_2936031187(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    else {
    if (isObj(self_2147483823.m_type, NTI2801795279)) {
    handleMouseRelease_2801812007(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    else {
    if (isObj(self_2147483823.m_type, NTI2147483652)) {
    handleMouseRelease_2147483822(self_2147483823, button_2147483824, mousePosWindow_2147483825);
    }
    }}

  
}

function handleMouseMove_2936031191(self_2936031192, mousePosWindow_2936031193, mousePosDelta_2936031194, modifiers_2936031195, buttons_2936031196) {
      var Temporary1;
        var Temporary2;

    if ((buttons_2936031196[0] != undefined)) {
    var mousePosContent_2936031221 = HEX2D_2080375094(mousePosWindow_2936031193, xy_2080374820(self_2936031192.lastBounds));
      if (!!(isEditing_2936021000(self_2936031192))) Temporary1 = false; else {        var oHEX60gensym1071_2936031224 = getNodeAtPixelPosition_2936024292(self_2936031192, mousePosContent_2936031221);
        if (!isSome_2969569114(oHEX60gensym1071_2936031224)) Temporary2 = false; else {          var n_2936031247 = get_2969569134(oHEX60gensym1071_2936031224);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    nodeHEX3D_2936017358(self_2936031192, n_2936031247);
    }
    
    }
    

  
}

function handleMouseMove_2801812011(self_2801812012, mousePosWindow_2801812013, mousePosDelta_2801812014, modifiers_2801812015, buttons_2801812016) {
      var Temporary1;
        var Temporary2;

      if (!(buttons_2801812016[0] != undefined)) Temporary1 = false; else {        var oHEX60gensym1000_2801812024 = getCursorAtPixelPos_2801811441(self_2801812012, mousePosWindow_2801812013);
        if (!isSome_2801811906(oHEX60gensym1000_2801812024)) Temporary2 = false; else {          var cursor_2801812047 = nimCopy(null, get_2801811923(oHEX60gensym1000_2801812024), NTI2231369737);
          Temporary2 = true;        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    selectionHEX3D_2801795574(self_2801812012, toSelection_2231370224(cursor_2801812047, selection_2801795568(self_2801812012), 3));
    }
    

  
}

function handleMouseMove_2147483827(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832) {
  
}

function handleMouseMove_2147483833(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832) {
    chckNilDisp(self_2147483828);
    if (isObj(self_2147483828.m_type, NTI2936014315)) {
    handleMouseMove_2936031191(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    else {
    if (isObj(self_2147483828.m_type, NTI2801795279)) {
    handleMouseMove_2801812011(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    else {
    if (isObj(self_2147483828.m_type, NTI2147483652)) {
    handleMouseMove_2147483827(self_2147483828, mousePosWindow_2147483829, mousePosDelta_2147483830, modifiers_2147483831, buttons_2147483832);
    }
    }}

  
}

function HEX26_3154116982(x_3154116984, y_3154116985) {
  var result_3154116986 = [];

    result_3154116986 = new Array(chckRange(addInt((x_3154116984).length, (y_3154116985).length), 0, 2147483647)); for (var i = 0 ; i < chckRange(addInt((x_3154116984).length, (y_3154116985).length), 0, 2147483647) ; ++i) { result_3154116986[i] = null; }    Label1: {
      var i_3154117004 = 0;
      var colontmp__536872429 = 0;
      colontmp__536872429 = subInt((x_3154116984).length, 1);
      var res_536872430 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872430 <= colontmp__536872429)) break Label3;
            i_3154117004 = res_536872430;
            result_3154116986[chckIndx(i_3154117004, 0, (result_3154116986).length - 1)] = x_3154116984[chckIndx(i_3154117004, 0, (x_3154116984).length - 1)];
            res_536872430 = addInt(res_536872430, 1);
          }
      };
    };
    Label4: {
      var i_3154117012 = 0;
      var colontmp__536872433 = 0;
      colontmp__536872433 = subInt((y_3154116985).length, 1);
      var res_536872434 = 0;
      Label5: {
          Label6: while (true) {
          if (!(res_536872434 <= colontmp__536872433)) break Label6;
            i_3154117012 = res_536872434;
            result_3154116986[chckIndx(addInt(i_3154117012, (x_3154116984).length), 0, (result_3154116986).length - 1)] = y_3154116985[chckIndx(i_3154117012, 0, (y_3154116985).length - 1)];
            res_536872434 = addInt(res_536872434, 1);
          }
      };
    };

  return result_3154116986;

}

function getEventHandlers_3204448482(self_3204448483) {
  var result_3204448484 = [];

  BeforeRet: {
    result_3204448484 = nimCopy(null, HEX26_3154116982(getEventHandlers_2147483804(self_3204448483.textEditor), [self_3204448483.eventHandler]), NTI3154116841);
    break BeforeRet;
  };

  return result_3204448484;

}

function getEventHandlers_3154116975(self_3154116976) {
  var result_3154116977 = [];

  BeforeRet: {
    result_3154116977 = nimCopy(null, HEX26_3154116982(getEventHandlers_2147483804(self_3154116976.textEditor), [self_3154116976.eventHandler]), NTI3154116841);
    break BeforeRet;
  };

  return result_3154116977;

}

function getEventHandlers_2264924212(self_2264924213) {
  var result_2264924214 = [];

  BeforeRet: {
    result_2264924214 = nimCopy(null, [self_2264924213.eventHandler], NTI2248146958);
    break BeforeRet;
  };

  return result_2264924214;

}

function getEventHandlers_2264924219(self_2264924213) {
  var result_2264924220 = [];

  BeforeRet: {
    chckNilDisp(self_2264924213);
    if (isObj(self_2264924213.m_type, NTI3204448274)) {
    result_2264924220 = getEventHandlers_3204448482(self_2264924213);
    break BeforeRet;
    }
    else {
    if (isObj(self_2264924213.m_type, NTI3154116612)) {
    result_2264924220 = getEventHandlers_3154116975(self_2264924213);
    break BeforeRet;
    }
    else {
    if (isObj(self_2264924213.m_type, NTI2264924164)) {
    result_2264924220 = getEventHandlers_2264924212(self_2264924213);
    break BeforeRet;
    }
    }}
  };

  return result_2264924220;

}

function handleScroll_3204448934(self_3204448935, scroll_3204448936, mousePosWindow_3204448937) {
    self_3204448935.selected = clamp_1660945119(subInt(self_3204448935.selected, ((scroll_3204448936.arr[chckIndx(1, 0, (scroll_3204448936.arr).length - 1)]) | 0)), 0, subInt((self_3204448935.completions).length, 1));

  
}

function handleScroll_3154117052(self_3154117053, scroll_3154117054, mousePosWindow_3154117055) {
    self_3154117053.selected = clamp_1660945119(subInt(self_3154117053.selected, ((scroll_3154117054.arr[chckIndx(1, 0, (scroll_3154117054.arr).length - 1)]) | 0)), 0, subInt((self_3154117053.completions).length, 1));

  
}

function handleScroll_2264924221(self_2264924222, scroll_2264924223, mousePosWindow_2264924224) {
  
}

function handleScroll_2264924225(self_2264924222, scroll_2264924223, mousePosWindow_2264924224) {
    chckNilDisp(self_2264924222);
    if (isObj(self_2264924222.m_type, NTI3204448274)) {
    handleScroll_3204448934(self_2264924222, scroll_2264924223, mousePosWindow_2264924224);
    }
    else {
    if (isObj(self_2264924222.m_type, NTI3154116612)) {
    handleScroll_3154117052(self_2264924222, scroll_2264924223, mousePosWindow_2264924224);
    }
    else {
    if (isObj(self_2264924222.m_type, NTI2264924164)) {
    handleScroll_2264924221(self_2264924222, scroll_2264924223, mousePosWindow_2264924224);
    }
    }}

  
}

function none_3204448436() {
  var result_3204448442 = ({val: null});

  return result_3204448442;

}

function some_3204448451(val_3204448453) {
  var result_3204448454 = ({val: null});

    if (!(!((val_3204448453 == null)))) {
    failedAssertImpl_268435515([111,112,116,105,111,110,115,46,110,105,109,40,49,51,55,44,32,53,41,32,96,110,111,116,32,118,97,108,46,105,115,78,105,108,96,32]);
    }
    
    result_3204448454.val = val_3204448453;

  return result_3204448454;

}

function getItemAtPixelPosition_3204448428(self_3204448429, posWindow_3204448430) {
  var result_3204448435 = ({val: null});

  BeforeRet: {
    result_3204448435 = nimCopy(result_3204448435, none_3204448436(), NTI3204448371);
    Label1: {
      var index_3204448446 = 0;
      var rect_3204448447 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872437 = 0;
      var L_536872438 = (self_3204448429.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872437 < L_536872438)) break Label3;
            index_3204448446 = self_3204448429.lastItems[chckIndx(i_536872437, 0, (self_3204448429.lastItems).length - 1)]["Field0"];
            rect_3204448447 = self_3204448429.lastItems[chckIndx(i_536872437, 0, (self_3204448429.lastItems).length - 1)]["Field1"];
            if (((contains_2063597758(rect_3204448447, posWindow_3204448430) && (0 <= index_3204448446)) && (index_3204448446 <= (self_3204448429.completions).length - 1))) {
            result_3204448435 = nimCopy(result_3204448435, some_3204448451(self_3204448429.completions[chckIndx(index_3204448446, 0, (self_3204448429.completions).length - 1)]), NTI3204448371);
            break BeforeRet;
            }
            
            i_536872437 = addInt(i_536872437, 1);
            if (!(((self_3204448429.lastItems).length == L_536872438))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3204448435;

}

function isSome_3204448962(self_3204448964) {
  var result_3204448965 = false;

    result_3204448965 = !((self_3204448964.val == null));

  return result_3204448965;

}

function isNone_3204448990(self_3204448992) {
  var result_3204448993 = false;

    result_3204448993 = (self_3204448992.val == null);

  return result_3204448993;

}

function get_3204448982(self_3204448984) {
  var result_3204448985 = null;

    if (isNone_3204448990(self_3204448984)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3204448985 = self_3204448984["val"];

  return result_3204448985;

}

function handleMousePress_3204448947(self_3204448948, button_3204448949, mousePosWindow_3204448950) {
      var Temporary1;

    if ((button_3204448949 == 0)) {
      var oHEX60gensym61_3204448957 = getItemAtPixelPosition_3204448428(self_3204448948, mousePosWindow_3204448950);
      if (!isSome_3204448962(oHEX60gensym61_3204448957)) Temporary1 = false; else {        var item_3204449008 = get_3204448982(oHEX60gensym61_3204448957);
        Temporary1 = true;      }    if (Temporary1) {
    self_3204448948.handleItemConfirmed(item_3204449008);
    popPopup_1291849106(self_3204448948.editor, self_3204448948);
    }
    
    }
    

  
}

function none_3154116880() {
  var result_3154116887 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  return result_3154116887;

}

function some_3154116915(val_3154116917) {
  var result_3154116918 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

    result_3154116918.has = true;
    result_3154116918.val = nimCopy(result_3154116918.val, val_3154116917, NTI2936014312);

  return result_3154116918;

}

function getItemAtPixelPosition_3154116871(self_3154116872, posWindow_3154116873) {
  var result_3154116879 = ({val: ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []}), has: false});

  BeforeRet: {
    result_3154116879 = nimCopy(result_3154116879, none_3154116880(), NTI3154116752);
    Label1: {
      var index_3154116910 = 0;
      var rect_3154116911 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});
      var i_536872441 = 0;
      var L_536872442 = (self_3154116872.lastItems).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872441 < L_536872442)) break Label3;
            index_3154116910 = self_3154116872.lastItems[chckIndx(i_536872441, 0, (self_3154116872.lastItems).length - 1)]["Field0"];
            rect_3154116911 = self_3154116872.lastItems[chckIndx(i_536872441, 0, (self_3154116872.lastItems).length - 1)]["Field1"];
            if (((contains_2063597758(rect_3154116911, posWindow_3154116873) && (0 <= index_3154116910)) && (index_3154116910 <= (self_3154116872.completions).length - 1))) {
            result_3154116879 = nimCopy(result_3154116879, some_3154116915(self_3154116872.completions[chckIndx(index_3154116910, 0, (self_3154116872.completions).length - 1)]), NTI3154116752);
            break BeforeRet;
            }
            
            i_536872441 = addInt(i_536872441, 1);
            if (!(((self_3154116872.lastItems).length == L_536872442))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
  };

  return result_3154116879;

}

function isSome_3154117133(self_3154117135) {
  var result_3154117136 = false;

    result_3154117136 = self_3154117135.has;

  return result_3154117136;

}

function isNone_3154117158(self_3154117160) {
  var result_3154117161 = false;

    result_3154117161 = !(self_3154117160.has);

  return result_3154117161;

}

function get_3154117150(self_3154117152) {
  var result_3154117153 = ({score: 0.0, kind: 0, id: ({padding: 0, time: 0, fuzz: 0, count: 0}), nodeKind: 0, name: []});

    if (isNone_3154117158(self_3154117152)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_3154117153 = self_3154117152.val;

  return result_3154117153;

}

function handleMousePress_3154117118(self_3154117119, button_3154117120, mousePosWindow_3154117121) {
      var Temporary1;
    var Temporary2;

    if ((button_3154117120 == 0)) {
      var oHEX60gensym8_3154117128 = getItemAtPixelPosition_3154116871(self_3154117119, mousePosWindow_3154117121);
      if (!isSome_3154117133(oHEX60gensym8_3154117128)) Temporary1 = false; else {        var item_3154117173 = nimCopy(null, get_3154117150(oHEX60gensym8_3154117128), NTI2936014312);
        Temporary1 = true;      }    if (Temporary1) {
    var Temporary2 = item_3154117173;
    if (ConstSet311[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'id\' is not accessible for type \'Completion\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2936014311)); }
    self_3154117119.handleSymbolSelected(Temporary2.id);
    popPopup_1291849106(self_3154117119.editor, self_3154117119);
    }
    
    }
    

  
}

function handleMousePress_2264924226(self_2264924227, button_2264924228, mousePosWindow_2264924229) {
  
}

function handleMousePress_2264924230(self_2264924227, button_2264924228, mousePosWindow_2264924229) {
    chckNilDisp(self_2264924227);
    if (isObj(self_2264924227.m_type, NTI3204448274)) {
    handleMousePress_3204448947(self_2264924227, button_2264924228, mousePosWindow_2264924229);
    }
    else {
    if (isObj(self_2264924227.m_type, NTI3154116612)) {
    handleMousePress_3154117118(self_2264924227, button_2264924228, mousePosWindow_2264924229);
    }
    else {
    if (isObj(self_2264924227.m_type, NTI2264924164)) {
    handleMousePress_2264924226(self_2264924227, button_2264924228, mousePosWindow_2264924229);
    }
    }}

  
}

function handleMouseRelease_3204449011(self_3204449012, button_3204449013, mousePosWindow_3204449014) {
  
}

function handleMouseRelease_3154117176(self_3154117177, button_3154117178, mousePosWindow_3154117179) {
  
}

function handleMouseRelease_2264924231(self_2264924232, button_2264924233, mousePosWindow_2264924234) {
  
}

function handleMouseRelease_2264924235(self_2264924232, button_2264924233, mousePosWindow_2264924234) {
    chckNilDisp(self_2264924232);
    if (isObj(self_2264924232.m_type, NTI3204448274)) {
    handleMouseRelease_3204449011(self_2264924232, button_2264924233, mousePosWindow_2264924234);
    }
    else {
    if (isObj(self_2264924232.m_type, NTI3154116612)) {
    handleMouseRelease_3154117176(self_2264924232, button_2264924233, mousePosWindow_2264924234);
    }
    else {
    if (isObj(self_2264924232.m_type, NTI2264924164)) {
    handleMouseRelease_2264924231(self_2264924232, button_2264924233, mousePosWindow_2264924234);
    }
    }}

  
}

function handleMouseMove_3204449015(self_3204449016, mousePosWindow_3204449017, mousePosDelta_3204449018, modifiers_3204449019, buttons_3204449020) {
  
}

function handleMouseMove_3154117180(self_3154117181, mousePosWindow_3154117182, mousePosDelta_3154117183, modifiers_3154117184, buttons_3154117185) {
  
}

function handleMouseMove_2264924236(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241) {
  
}

function handleMouseMove_2264924242(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241) {
    chckNilDisp(self_2264924237);
    if (isObj(self_2264924237.m_type, NTI3204448274)) {
    handleMouseMove_3204449015(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241);
    }
    else {
    if (isObj(self_2264924237.m_type, NTI3154116612)) {
    handleMouseMove_3154117180(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241);
    }
    else {
    if (isObj(self_2264924237.m_type, NTI2264924164)) {
    handleMouseMove_2264924236(self_2264924237, mousePosWindow_2264924238, mousePosDelta_2264924239, modifiers_2264924240, buttons_2264924241);
    }
    }}

  
}

function loadApplicationFile_2516582417(self_2516582418, name_2516582419) {
  var result_2516582420 = [];

  BeforeRet: {
    if ((window.localStorage.getItem(toJSStr(name_2516582419)) !== null)) {
    result_2516582420 = nimCopy(null, cstrToNimstr(window.localStorage.getItem(toJSStr(name_2516582419))), NTI33554449);
    break BeforeRet;
    }
    
    result_2516582420 = nimCopy(null, cstrToNimstr(loadFileSync(toJSStr(name_2516582419))), NTI33554449);
    break BeforeRet;
  };

  return result_2516582420;

}

function loadApplicationFile_2499805198(self_2499805199, name_2499805200) {
  var result_2499805201 = [];

  return result_2499805201;

}

function loadApplicationFile_2499805202(self_2499805199, name_2499805200) {
  var result_2499805203 = [];

  BeforeRet: {
    chckNilDisp(self_2499805199);
    if (isObj(self_2499805199.m_type, NTI2516582404)) {
    result_2499805203 = loadApplicationFile_2516582417(self_2499805199, name_2499805200);
    break BeforeRet;
    }
    else {
    if (isObj(self_2499805199.m_type, NTI2499805188)) {
    result_2499805203 = loadApplicationFile_2499805198(self_2499805199, name_2499805200);
    break BeforeRet;
    }
    }
  };

  return result_2499805203;

}

function saveApplicationFile_2516582421(self_2516582422, name_2516582423, content_2516582424) {
    window.localStorage.setItem(toJSStr(name_2516582423), toJSStr(content_2516582424));

  
}

function saveApplicationFile_2499805204(self_2499805205, name_2499805206, content_2499805207) {
  
}

function saveApplicationFile_2499805208(self_2499805205, name_2499805206, content_2499805207) {
    chckNilDisp(self_2499805205);
    if (isObj(self_2499805205.m_type, NTI2516582404)) {
    saveApplicationFile_2516582421(self_2499805205, name_2499805206, content_2499805207);
    }
    else {
    if (isObj(self_2499805205.m_type, NTI2499805188)) {
    saveApplicationFile_2499805204(self_2499805205, name_2499805206, content_2499805207);
    }
    }

  
}

function HEX2A_2332033374(aHEX60gensym155_2332033376, bHEX60gensym155_2332033377) {
  var result_2332033378 = ({arr: new Float32Array(2)});

    result_2332033378 = nimCopy(result_2332033378, {arr: new Float32Array([(aHEX60gensym155_2332033376.arr[0] * bHEX60gensym155_2332033377.arr[0]), (aHEX60gensym155_2332033376.arr[1] * bHEX60gensym155_2332033377.arr[1])])}, NTI2097152387);

  return result_2332033378;

}

function calculateBounds_2332033353(self_2332033354, container_2332033355) {
  var result_2332033356 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var topLeft_2332033410 = HEX2B_2080375257(HEX2B_2080375257(xy_2080374820(container_2332033355), HEX2A_2332033374(self_2332033354.anchor.Field0, wh_2080374828(container_2332033355))), vec2_2097152992(self_2332033354.left, self_2332033354.top));
    var bottomRight_2332033457 = HEX2B_2080375257(HEX2B_2080375257(xy_2080374820(container_2332033355), HEX2A_2332033374(self_2332033354.anchor.Field1, wh_2080374828(container_2332033355))), vec2_2097152992(self_2332033354.right, self_2332033354.bottom));
    var pivotOffset_2332033494 = HEX2A_2332033374(self_2332033354.pivot, HEX2D_2080375094(bottomRight_2332033457, topLeft_2332033410));
    result_2332033356 = nimCopy(result_2332033356, rect_2080374808(HEX2D_2080375094(topLeft_2332033410, pivotOffset_2332033494), HEX2D_2080375094(bottomRight_2332033457, topLeft_2332033410)), NTI2080374789);

  return result_2332033356;

}

function formatValue_2332033539(result_2332033541, result_2332033541_Idx, value_2332033542, specifier_2332033543) {
    formatValue_721420459(result_2332033541, result_2332033541_Idx, HEX24_2080374857(value_2332033542), specifier_2332033543);

  
}

function nsuToLowerAsciiStr(s_855638110) {
  var result_855638111 = [];

    result_855638111 = nimCopy(null, mnewString(chckRange((s_855638110).length, 0, 2147483647)), NTI33554449);
    Label1: {
      var iHEX60gensym7_855638117 = 0;
      var colontmp__536872449 = 0;
      colontmp__536872449 = subInt((s_855638110).length, 1);
      var res_536872450 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872450 <= colontmp__536872449)) break Label3;
            iHEX60gensym7_855638117 = res_536872450;
            result_855638111[chckIndx(iHEX60gensym7_855638117, 0, (result_855638111).length - 1)] = nsuToLowerAsciiChar(s_855638110[chckIndx(iHEX60gensym7_855638117, 0, (s_855638110).length - 1)]);
            res_536872450 = addInt(res_536872450, 1);
          }
      };
    };

  return result_855638111;

}

function HEX24_2097153055(aHEX60gensym72_2097153056) {
  var result_2097153057 = [];

    result_2097153057 = nimCopy(null, (nsuToLowerAsciiStr([86,101,99,50]) || []).concat([40] || [],HEX24_2097153062(aHEX60gensym72_2097153056.arr[0]) || [],[44,32] || [],HEX24_2097153062(aHEX60gensym72_2097153056.arr[1]) || [],[41] || []), NTI33554449);

  return result_2097153057;

}

function addQuoted_2332033623(s_2332033625, s_2332033625_Idx, x_2332033626) {
    s_2332033625[s_2332033625_Idx].push.apply(s_2332033625[s_2332033625_Idx], HEX24_2097153055(x_2332033626));;

  
}

function HEX24_2332033591(x_2332033593) {
  var result_2332033594 = [[]];

    result_2332033594[0] = nimCopy(null, [40], NTI33554449);
    var countHEX60gensym19_2332033605 = 0;
    if ((0 < countHEX60gensym19_2332033605)) {
    result_2332033594[0].push.apply(result_2332033594[0], [44,32]);;
    }
    
    result_2332033594[0].push.apply(result_2332033594[0], [109,105,110]);;
    result_2332033594[0].push.apply(result_2332033594[0], [58,32]);;
    countHEX60gensym19_2332033605 += 1;
    addQuoted_2332033623(result_2332033594, 0, x_2332033593["Field0"]);
    if ((0 < countHEX60gensym19_2332033605)) {
    result_2332033594[0].push.apply(result_2332033594[0], [44,32]);;
    }
    
    result_2332033594[0].push.apply(result_2332033594[0], [109,97,120]);;
    result_2332033594[0].push.apply(result_2332033594[0], [58,32]);;
    countHEX60gensym19_2332033605 += 1;
    addQuoted_2332033623(result_2332033594, 0, x_2332033593["Field1"]);
    result_2332033594[0].push.apply(result_2332033594[0], [41]);;

  return result_2332033594[0];

}

function formatValue_2332033586(result_2332033588, result_2332033588_Idx, value_2332033589, specifier_2332033590) {
    formatValue_721420459(result_2332033588, result_2332033588_Idx, HEX24_2332033591(value_2332033589), specifier_2332033590);

  
}

function formatValue_2332033653(result_2332033655, result_2332033655_Idx, value_2332033656, specifier_2332033657) {
    formatValue_721420459(result_2332033655, result_2332033655_Idx, HEX24_2097153055(value_2332033656), specifier_2332033657);

  
}

function layoutWidget_2332033527(self_2332033528, container_2332033529, frameIndex_2332033530, options_2332033531) {
    var newBounds_2332033532 = calculateBounds_2332033353(self_2332033528, container_2332033529);
    if (self_2332033528.logLayout) {
    var fmtRes_2332033538 = [mnewString(0)];
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [108,97,121,111,117,116,80,97,110,101,108,40]);;
    formatValue_2332033539(fmtRes_2332033538, 0, container_2332033529, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332033538, 0, frameIndex_2332033530, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332033538, 0, self_2332033528.anchor, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332033538, 0, self_2332033528.pivot, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.left, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.top, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.right, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [44]);;
    formatValue_2332033664(fmtRes_2332033538, 0, self_2332033528.bottom, []);
    fmtRes_2332033538[0].push.apply(fmtRes_2332033538[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033538, 0, newBounds_2332033532, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033538[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033532, self_2332033528.lastBounds))) {
    var fmtRes_2332033750 = [mnewString(0)];
    fmtRes_2332033750[0].push.apply(fmtRes_2332033750[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332033750, 0, self_2332033528.lastBounds, []);
    fmtRes_2332033750[0].push.apply(fmtRes_2332033750[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033750, 0, newBounds_2332033532, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033750[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033532, self_2332033528.lastBounds))) {
    self_2332033528.lastBounds = nimCopy(self_2332033528.lastBounds, newBounds_2332033532, NTI2080374789);
    self_2332033528.lastBoundsChange = frameIndex_2332033530;
    }
    
    if (((frameIndex_2332033530 <= self_2332033528.lastHierarchyChange) || (frameIndex_2332033530 <= self_2332033528.lastBoundsChange))) {
    Label1: {
      var c_2332033768 = null;
      var i_536872445 = 0;
      var L_536872446 = (self_2332033528.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872445 < L_536872446)) break Label3;
            c_2332033768 = self_2332033528.children[chckIndx(i_536872445, 0, (self_2332033528.children).length - 1)];
            layoutWidget_2332033348(c_2332033768, newBounds_2332033532, frameIndex_2332033530, options_2332033531);
            i_536872445 = addInt(i_536872445, 1);
            if (!(((self_2332033528.children).length == L_536872446))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function height_2332033079(self_2332033080) {
  var result_2332033081 = 0.0;

    result_2332033081 = (self_2332033080.bottom - self_2332033080.top);

  return result_2332033081;

}

function layoutWidget_2332034001(self_2332034002, container_2332034003, frameIndex_2332034004, options_2332034005) {
    var newBounds_2332034006 = calculateBounds_2332033353(self_2332034002, container_2332034003);
    if (self_2332034002.logLayout) {
    var fmtRes_2332034012 = [mnewString(0)];
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [108,97,121,111,117,116,86,101,114,116,105,99,97,108,76,105,115,116,40]);;
    formatValue_2332033539(fmtRes_2332034012, 0, container_2332034003, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332034012, 0, frameIndex_2332034004, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332034012, 0, self_2332034002.anchor, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332034012, 0, self_2332034002.pivot, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.left, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.top, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.right, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [44]);;
    formatValue_2332033664(fmtRes_2332034012, 0, self_2332034002.bottom, []);
    fmtRes_2332034012[0].push.apply(fmtRes_2332034012[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034012, 0, newBounds_2332034006, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034012[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034006, self_2332034002.lastBounds))) {
    var fmtRes_2332034067 = [mnewString(0)];
    fmtRes_2332034067[0].push.apply(fmtRes_2332034067[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332034067, 0, self_2332034002.lastBounds, []);
    fmtRes_2332034067[0].push.apply(fmtRes_2332034067[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034067, 0, newBounds_2332034006, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034067[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034006, self_2332034002.lastBounds))) {
    self_2332034002.lastBounds = nimCopy(self_2332034002.lastBounds, newBounds_2332034006, NTI2080374789);
    self_2332034002.lastBoundsChange = frameIndex_2332034004;
    }
    
    if (((frameIndex_2332034004 <= self_2332034002.lastHierarchyChange) || (frameIndex_2332034004 <= self_2332034002.lastBoundsChange))) {
    var lastY_2332034082 = 0.0;
    Label1: {
      var c_2332034086 = null;
      var i_536872453 = 0;
      var L_536872454 = (self_2332034002.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872453 < L_536872454)) break Label3;
            c_2332034086 = self_2332034002.children[chckIndx(i_536872453, 0, (self_2332034002.children).length - 1)];
            var height_2332034087 = height_2332033079(c_2332034086);
            c_2332034086.top = lastY_2332034082;
            c_2332034086.bottom = (lastY_2332034082 + height_2332034087);
            layoutWidget_2332033348(c_2332034086, newBounds_2332034006, frameIndex_2332034004, options_2332034005);
            lastY_2332034082 = ((c_2332034086.lastBounds.y + c_2332034086.lastBounds.h) - newBounds_2332034006.y);
            i_536872453 = addInt(i_536872453, 1);
            if (!(((self_2332034002.children).length == L_536872454))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function none_2332033902() {
  var result_2332033909 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

  return result_2332033909;

}

function isSome_2332033922(self_2332033924) {
  var result_2332033925 = false;

    result_2332033925 = self_2332033924.has;

  return result_2332033925;

}

function isNone_2332033947(self_2332033949) {
  var result_2332033950 = false;

    result_2332033950 = !(self_2332033949.has);

  return result_2332033950;

}

function get_2332033939(self_2332033941) {
  var result_2332033942 = null;

  BeforeRet: {
    if (isNone_2332033947(self_2332033941)) {
    raiseException({message: [67,97,110,39,116,32,111,98,116,97,105,110,32,97,32,118,97,108,117,101,32,102,114,111,109,32,97,32,96,110,111,110,101,96], parent: null, m_type: NTI1157627924, name: null, trace: [], up: null}, "UnpackDefect");
    }
    
    result_2332033942 = self_2332033941.val;
    break BeforeRet;
  };

  return result_2332033942;

}

function some_2332033984(val_2332033986) {
  var result_2332033987 = ({val: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), has: false});

    result_2332033987.has = true;
    result_2332033987.val = nimCopy(result_2332033987.val, val_2332033986, NTI2080374789);

  return result_2332033987;

}

function layoutWidget_2332033769(self_2332033770, container_2332033771, frameIndex_2332033772, options_2332033773) {
            var Temporary10;

    var newBounds_2332033774 = calculateBounds_2332033353(self_2332033770, container_2332033771);
    if (self_2332033770.logLayout) {
    var fmtRes_2332033780 = [mnewString(0)];
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [108,97,121,111,117,116,83,116,97,99,107,40]);;
    formatValue_2332033539(fmtRes_2332033780, 0, container_2332033771, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332033780, 0, frameIndex_2332033772, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332033780, 0, self_2332033770.anchor, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332033780, 0, self_2332033770.pivot, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.left, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.top, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.right, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [44]);;
    formatValue_2332033664(fmtRes_2332033780, 0, self_2332033770.bottom, []);
    fmtRes_2332033780[0].push.apply(fmtRes_2332033780[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033780, 0, newBounds_2332033774, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033780[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033774, self_2332033770.lastBounds))) {
    var fmtRes_2332033835 = [mnewString(0)];
    fmtRes_2332033835[0].push.apply(fmtRes_2332033835[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332033835, 0, self_2332033770.lastBounds, []);
    fmtRes_2332033835[0].push.apply(fmtRes_2332033835[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332033835, 0, newBounds_2332033774, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332033835[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332033774, self_2332033770.lastBounds))) {
    self_2332033770.lastBounds = nimCopy(self_2332033770.lastBounds, newBounds_2332033774, NTI2080374789);
    self_2332033770.lastBoundsChange = frameIndex_2332033772;
    }
    
    if (((frameIndex_2332033772 <= self_2332033770.lastHierarchyChange) || (frameIndex_2332033772 <= self_2332033770.lastBoundsChange))) {
    Label1: {
      var i_2332033882 = 0;
      var c_2332033883 = null;
      var i_536872462 = 0;
      var L_536872463 = (self_2332033770.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872462 < L_536872463)) break Label3;
            i_2332033882 = i_536872462;
            c_2332033883 = self_2332033770.children[chckIndx(i_536872462, 0, (self_2332033770.children).length - 1)];
            var oldBounds_2332033884 = nimCopy(null, c_2332033883.lastBounds, NTI2080374789);
            layoutWidget_2332033348(c_2332033883, newBounds_2332033774, frameIndex_2332033772, options_2332033773);
            var newBounds_2332033885 = nimCopy(null, c_2332033883.lastBounds, NTI2080374789);
            if ((!(HEX3DHEX3D_2332033735(oldBounds_2332033884, newBounds_2332033885)) && !(contains_2063597766(newBounds_2332033885, oldBounds_2332033884)))) {
            var invalidationRect_2332033890 = nimCopy(null, oldBounds_2332033884, NTI2080374789);
            Label4: {
              var k_2332033896 = 0;
              var colontmp__536872458 = 0;
              colontmp__536872458 = subInt(i_2332033882, 1);
              var res_536872459 = colontmp__536872458;
              Label5: {
                  Label6: while (true) {
                  if (!(0 <= res_536872459)) break Label6;
                    k_2332033896 = res_536872459;
                    invalidate_2332033255(self_2332033770.children[chckIndx(k_2332033896, 0, (self_2332033770.children).length - 1)], frameIndex_2332033772, invalidationRect_2332033890);
                    if (contains_2063597766(self_2332033770.children[chckIndx(k_2332033896, 0, (self_2332033770.children).length - 1)].lastBounds, invalidationRect_2332033890)) {
                    break Label4;
                    }
                    
                    res_536872459 = subInt(res_536872459, 1);
                  }
              };
            };
            }
            
            i_536872462 = addInt(i_536872462, 1);
            if (!(((self_2332033770.children).length == L_536872463))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var invalidationRect_2332033910 = [none_2332033902()];
    Label7: {
      var i_2332033916 = 0;
      var c_2332033917 = null;
      var i_536872466 = 0;
      var L_536872467 = (self_2332033770.children).length;
      Label8: {
          Label9: while (true) {
          if (!(i_536872466 < L_536872467)) break Label9;
            i_2332033916 = i_536872466;
            c_2332033917 = self_2332033770.children[chckIndx(i_536872466, 0, (self_2332033770.children).length - 1)];
            if (isSome_2332033922(invalidationRect_2332033910[0])) {
            invalidate_2332033255(c_2332033917, frameIndex_2332033772, get_2332033939(invalidationRect_2332033910[0]));
            }
            
            if (isSome_2332033922(invalidationRect_2332033910[0])) {
            Temporary10 = some_2332033984(or_2080374872(get_2332033939(invalidationRect_2332033910[0]), c_2332033917.lastBounds));
            }
            else {
            Temporary10 = some_2332033984(c_2332033917.lastBounds);
            }
            
            invalidationRect_2332033910[0] = nimCopy(invalidationRect_2332033910[0], Temporary10, NTI2332033636);
            i_536872466 = addInt(i_536872466, 1);
            if (!(((self_2332033770.children).length == L_536872467))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function HEX2DHEX3D_2449473546(x_2449473548, x_2449473548_Idx, y_2449473549) {
    x_2449473548[x_2449473548_Idx] = (x_2449473548[x_2449473548_Idx] - y_2449473549);

  
}

function layoutWidget_2332034175(self_2332034176, container_2332034177, frameIndex_2332034178, options_2332034179) {
    var newBounds_2332034180 = calculateBounds_2332033353(self_2332034176, container_2332034177);
    if (self_2332034176.sizeToContent) {
    var size_2332034181 = options_2332034179.getTextBounds(self_2332034176.text);
    var incX_2332034183 = max_33555642((size_2332034181.arr[chckIndx(0, 0, (size_2332034181.arr).length - 1)] - newBounds_2332034180.w), 0.0);
    var incY_2332034185 = max_33555642((size_2332034181.arr[chckIndx(1, 0, (size_2332034181.arr).length - 1)] - newBounds_2332034180.h), 0.0);
    newBounds_2332034180.w = size_2332034181.arr[chckIndx(0, 0, (size_2332034181.arr).length - 1)];
    newBounds_2332034180.h = size_2332034181.arr[chckIndx(1, 0, (size_2332034181.arr).length - 1)];
    HEX2DHEX3D_2449473546(newBounds_2332034180, "x", (incX_2332034183 * self_2332034176.pivot.arr[chckIndx(0, 0, (self_2332034176.pivot.arr).length - 1)]));
    HEX2DHEX3D_2449473546(newBounds_2332034180, "y", (incY_2332034185 * self_2332034176.pivot.arr[chckIndx(1, 0, (self_2332034176.pivot.arr).length - 1)]));
    }
    
    if (self_2332034176.logLayout) {
    var fmtRes_2332034203 = [mnewString(0)];
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [108,97,121,111,117,116,84,101,120,116,40,39]);;
    formatValue_721420459(fmtRes_2332034203, 0, self_2332034176.text, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [39,44,32]);;
    formatValue_2332033539(fmtRes_2332034203, 0, container_2332034177, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332034203, 0, frameIndex_2332034178, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332034203, 0, self_2332034176.anchor, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332034203, 0, self_2332034176.pivot, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.left, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.top, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.right, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [44]);;
    formatValue_2332033664(fmtRes_2332034203, 0, self_2332034176.bottom, []);
    fmtRes_2332034203[0].push.apply(fmtRes_2332034203[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034203, 0, newBounds_2332034180, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034203[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034180, self_2332034176.lastBounds))) {
    var fmtRes_2332034258 = [mnewString(0)];
    fmtRes_2332034258[0].push.apply(fmtRes_2332034258[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332034258, 0, self_2332034176.lastBounds, []);
    fmtRes_2332034258[0].push.apply(fmtRes_2332034258[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034258, 0, newBounds_2332034180, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034258[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034180, self_2332034176.lastBounds))) {
    self_2332034176.lastBounds = nimCopy(self_2332034176.lastBounds, newBounds_2332034180, NTI2080374789);
    self_2332034176.lastBoundsChange = frameIndex_2332034178;
    }
    

  
}

function width_2332033076(self_2332033077) {
  var result_2332033078 = 0.0;

    result_2332033078 = (self_2332033077.right - self_2332033077.left);

  return result_2332033078;

}

function layoutWidget_2332034088(self_2332034089, container_2332034090, frameIndex_2332034091, options_2332034092) {
    var newBounds_2332034093 = calculateBounds_2332033353(self_2332034089, container_2332034090);
    if (self_2332034089.logLayout) {
    var fmtRes_2332034099 = [mnewString(0)];
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [108,97,121,111,117,116,72,111,114,105,122,111,110,116,97,108,76,105,115,116,40]);;
    formatValue_2332033539(fmtRes_2332034099, 0, container_2332034090, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32]);;
    formatValue_2332033544(fmtRes_2332034099, 0, frameIndex_2332034091, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [41,58,32,97,110,99,104,111,114,61]);;
    formatValue_2332033586(fmtRes_2332034099, 0, self_2332034089.anchor, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32,112,105,118,111,116,61]);;
    formatValue_2332033653(fmtRes_2332034099, 0, self_2332034089.pivot, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.left, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.top, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44,32]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.right, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [44]);;
    formatValue_2332033664(fmtRes_2332034099, 0, self_2332034089.bottom, []);
    fmtRes_2332034099[0].push.apply(fmtRes_2332034099[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034099, 0, newBounds_2332034093, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034099[0], NTI33554449)]);
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034093, self_2332034089.lastBounds))) {
    var fmtRes_2332034154 = [mnewString(0)];
    fmtRes_2332034154[0].push.apply(fmtRes_2332034154[0], [98,111,117,110,100,115,32,99,104,97,110,103,101,100,32]);;
    formatValue_2332033539(fmtRes_2332034154, 0, self_2332034089.lastBounds, []);
    fmtRes_2332034154[0].push.apply(fmtRes_2332034154[0], [32,45,62,32]);;
    formatValue_2332033539(fmtRes_2332034154, 0, newBounds_2332034093, []);
    log_1174405220(logger_704643272[0], 1, [nimCopy(null, fmtRes_2332034154[0], NTI33554449)]);
    }
    
    }
    
    if (!(HEX3DHEX3D_2332033735(newBounds_2332034093, self_2332034089.lastBounds))) {
    self_2332034089.lastBounds = nimCopy(self_2332034089.lastBounds, newBounds_2332034093, NTI2080374789);
    self_2332034089.lastBoundsChange = frameIndex_2332034091;
    }
    
    if (((frameIndex_2332034091 <= self_2332034089.lastHierarchyChange) || (frameIndex_2332034091 <= self_2332034089.lastBoundsChange))) {
    var lastX_2332034169 = 0.0;
    Label1: {
      var c_2332034173 = null;
      var i_536872470 = 0;
      var L_536872471 = (self_2332034089.children).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872470 < L_536872471)) break Label3;
            c_2332034173 = self_2332034089.children[chckIndx(i_536872470, 0, (self_2332034089.children).length - 1)];
            var width_2332034174 = width_2332033076(c_2332034173);
            c_2332034173.left = lastX_2332034169;
            c_2332034173.right = (lastX_2332034169 + width_2332034174);
            layoutWidget_2332033348(c_2332034173, newBounds_2332034093, frameIndex_2332034091, options_2332034092);
            lastX_2332034169 = ((c_2332034173.lastBounds.x + c_2332034173.lastBounds.w) - newBounds_2332034093.x);
            i_536872470 = addInt(i_536872470, 1);
            if (!(((self_2332034089.children).length == L_536872471))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    }
    

  
}

function layoutWidget_2332033343(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347) {
  
}

function layoutWidget_2332033348(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347) {
    chckNilDisp(self_2332033344);
    if (isObj(self_2332033344.m_type, NTI2332033036)) {
    layoutWidget_2332033527(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033040)) {
    layoutWidget_2332034001(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033038)) {
    layoutWidget_2332033769(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033044)) {
    layoutWidget_2332034175(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033042)) {
    layoutWidget_2332034088(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    else {
    if (isObj(self_2332033344.m_type, NTI2332033034)) {
    layoutWidget_2332033343(self_2332033344, bounds_2332033345, frameIndex_2332033346, options_2332033347);
    }
    }}}}}

  
}

function invoke_3288334700(event_3288334702, arg_3288334703) {
    Label1: {
      var h_3288334726 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872475 = 0;
      var L_536872476 = (event_3288334702.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872475 < L_536872476)) break Label3;
            h_3288334726 = event_3288334702.handlers[chckIndx(i_536872475, 0, (event_3288334702.handlers).length - 1)];
            h_3288334726.Field1(arg_3288334703);
            i_536872475 = addInt(i_536872475, 1);
            if (!(((event_3288334702.handlers).length == L_536872476))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function requestRender_3288335442(self_3288335443, redrawEverything_3288335444) {
    invoke_3288334700(self_3288335443.onResized, redrawEverything_3288335444);

  
}

function requestRender_2315255896(self_2315255897, redrawEverything_2315255898) {
  
}

function requestRender_2315255899(self_2315255897, redrawEverything_2315255898) {
    chckNilDisp(self_2315255897);
    if (isObj(self_2315255897.m_type, NTI3288334342)) {
    requestRender_3288335442(self_2315255897, redrawEverything_2315255898);
    }
    else {
    if (isObj(self_2315255897.m_type, NTI2315255812)) {
    requestRender_2315255896(self_2315255897, redrawEverything_2315255898);
    }
    }

  
}

function size_3288335473(self_3288335474) {
  var result_3288335475 = ({arr: new Float32Array(2)});

    result_3288335475 = nimCopy(result_3288335475, vec2_2097152992(self_3288335474.content.clientWidth, self_3288335474.content.clientHeight), NTI2097152387);

  return result_3288335475;

}

function size_2315255910(self_2315255911) {
  var result_2315255912 = ({arr: new Float32Array(2)});

  return result_2315255912;

}

function size_2315255913(self_2315255911) {
  var result_2315255914 = ({arr: new Float32Array(2)});

  BeforeRet: {
    chckNilDisp(self_2315255911);
    if (isObj(self_2315255911.m_type, NTI3288334342)) {
    result_2315255914 = nimCopy(result_2315255914, size_3288335473(self_2315255911), NTI2097152387);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255911.m_type, NTI2315255812)) {
    result_2315255914 = nimCopy(result_2315255914, size_2315255910(self_2315255911), NTI2097152387);
    break BeforeRet;
    }
    }
  };

  return result_2315255914;

}

function HEX2D_2063597733(a_2063597734, b_2063597735) {
  var result_2063597736 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    result_2063597736.x = (a_2063597734.x - b_2063597735.arr[chckIndx(0, 0, (b_2063597735.arr).length - 1)]);
    result_2063597736.y = (a_2063597734.y - b_2063597735.arr[chckIndx(1, 0, (b_2063597735.arr).length - 1)]);
    result_2063597736.w = a_2063597734.w;
    result_2063597736.h = a_2063597734.h;

  return result_2063597736;

}

function toHex_2348810254(x_2348810256) {
  var result_2348810257 = [];

    result_2348810257 = nimCopy(null, toHexImpl_855638788((x_2348810256 >>> 0), 8, (x_2348810256 < 0)), NTI33554449);

  return result_2348810257;

}

function toHex_2348810251(a_2348810252) {
  var result_2348810253 = [];

    result_2348810253 = nimCopy(null, toHex_2348810254(((a_2348810252) | 0)), NTI33554449);

  return result_2348810253;

}

function toHex_2348810490(c_2348810491) {
  var result_2348810492 = [];

    result_2348810492 = nimCopy(null, (HEX5BHEX5D_2348810522(toHex_2348810251((c_2348810491.r * 255.0)), HEX2EHEX2E_2348810495(2, 1)) || []).concat(HEX5BHEX5D_2348810522(toHex_2348810251((c_2348810491.g * 255.0)), HEX2EHEX2E_2348810495(2, 1)) || [],HEX5BHEX5D_2348810522(toHex_2348810251((c_2348810491.b * 255.0)), HEX2EHEX2E_2348810495(2, 1)) || []), NTI33554449);

  return result_2348810492;

}

function toHtmlHex_2348810680(c_2348810681) {
  var result_2348810682 = [];

    result_2348810682 = nimCopy(null, [35].concat(toHex_2348810490(c_2348810681) || []), NTI33554449);

  return result_2348810682;

}

function pop_3288335567(s_3288335569, s_3288335569_Idx) {
  var result_3288335570 = ({x: 0.0, y: 0.0, w: 0.0, h: 0.0});

    var L_3288335574 = subInt((s_3288335569[s_3288335569_Idx]).length, 1);
    result_3288335570 = nimCopy(result_3288335570, s_3288335569[s_3288335569_Idx][chckIndx(L_3288335574, 0, (s_3288335569[s_3288335569_Idx]).length - 1)], NTI2080374789);
    if (s_3288335569[s_3288335569_Idx].length < chckRange(L_3288335574, 0, 2147483647)) { for (var i = s_3288335569[s_3288335569_Idx].length ; i < chckRange(L_3288335574, 0, 2147483647) ; ++i) s_3288335569[s_3288335569_Idx].push(({x: 0.0, y: 0.0, w: 0.0, h: 0.0})); }
               else { s_3288335569[s_3288335569_Idx].length = chckRange(L_3288335574, 0, 2147483647); };

  return result_3288335570;

}

function renderWidget_3288335580(self_3288335581, renderer_3288335582, forceRedraw_3288335583, frameIndex_3288335584, buffer_3288335585, buffer_3288335585_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3288335581.lastHierarchyChange < frameIndex_3288335584) && (self_3288335581.lastBoundsChange < frameIndex_3288335584)) && (self_3288335581.lastInvalidation < frameIndex_3288335584)) && !(forceRedraw_3288335583))) {
    break BeforeRet;
    }
    
    var relBounds_3288335592 = HEX2D_2063597733(self_3288335581.lastBounds, xy_2080374820(renderer_3288335582.boundsStack[chckIndx((renderer_3288335582.boundsStack).length - 1, 0, (renderer_3288335582.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3288335581.lastBounds, NTI2080374789);
    renderer_3288335582.boundsStack.push(Temporary1);;
    try {
    if (self_3288335581.fillBackground) {
    var fmtRes_3288335604 = [mnewString(0)];
    fmtRes_3288335604[0].push.apply(fmtRes_3288335604[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3288335604, 0, toHtmlHex_2348810680(self_3288335581.backgroundColor), []);
    fmtRes_3288335604[0].push.apply(fmtRes_3288335604[0], [59]);;
    Temporary3 = fmtRes_3288335604[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3288335605 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3288335585[buffer_3288335585_Idx].push.apply(buffer_3288335585[buffer_3288335585_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3288335610 = [mnewString(0)];
    fmtRes_3288335610[0].push.apply(fmtRes_3288335610[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335610, 0, ((relBounds_3288335592.x) | 0), []);
    fmtRes_3288335610[0].push.apply(fmtRes_3288335610[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3288335610, 0, ((relBounds_3288335592.y) | 0), []);
    fmtRes_3288335610[0].push.apply(fmtRes_3288335610[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3288335610, 0, ((relBounds_3288335592.w) | 0), []);
    fmtRes_3288335610[0].push.apply(fmtRes_3288335610[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335610, 0, ((relBounds_3288335592.h) | 0), []);
    fmtRes_3288335610[0].push.apply(fmtRes_3288335610[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3288335610, 0, backgroundColor_3288335605, []);
    buffer_3288335585[buffer_3288335585_Idx].push.apply(buffer_3288335585[buffer_3288335585_Idx], fmtRes_3288335610[0]);;
    buffer_3288335585[buffer_3288335585_Idx].push.apply(buffer_3288335585[buffer_3288335585_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3288335634 = null;
      var i_536872479 = 0;
      var L_536872480 = (self_3288335581.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872479 < L_536872480)) break Label6;
            c_3288335634 = self_3288335581.children[chckIndx(i_536872479, 0, (self_3288335581.children).length - 1)];
            renderWidget_3288335558(c_3288335634, renderer_3288335582, (forceRedraw_3288335583 || self_3288335581.fillBackground), frameIndex_3288335584, buffer_3288335585, buffer_3288335585_Idx);
            i_536872479 = addInt(i_536872479, 1);
            if (!(((self_3288335581.children).length == L_536872480))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3288335585[buffer_3288335585_Idx].push.apply(buffer_3288335585[buffer_3288335585_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3288335567(renderer_3288335582, "boundsStack");
    }
  };

  
}

function renderWidget_3288335699(self_3288335700, renderer_3288335701, forceRedraw_3288335702, frameIndex_3288335703, buffer_3288335704, buffer_3288335704_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3288335700.lastHierarchyChange < frameIndex_3288335703) && (self_3288335700.lastBoundsChange < frameIndex_3288335703)) && (self_3288335700.lastInvalidation < frameIndex_3288335703)) && !(forceRedraw_3288335702))) {
    break BeforeRet;
    }
    
    var relBounds_3288335711 = HEX2D_2063597733(self_3288335700.lastBounds, xy_2080374820(renderer_3288335701.boundsStack[chckIndx((renderer_3288335701.boundsStack).length - 1, 0, (renderer_3288335701.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3288335700.lastBounds, NTI2080374789);
    renderer_3288335701.boundsStack.push(Temporary1);;
    try {
    if (self_3288335700.fillBackground) {
    var fmtRes_3288335723 = [mnewString(0)];
    fmtRes_3288335723[0].push.apply(fmtRes_3288335723[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3288335723, 0, toHtmlHex_2348810680(self_3288335700.backgroundColor), []);
    fmtRes_3288335723[0].push.apply(fmtRes_3288335723[0], [59]);;
    Temporary3 = fmtRes_3288335723[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3288335724 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3288335704[buffer_3288335704_Idx].push.apply(buffer_3288335704[buffer_3288335704_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3288335729 = [mnewString(0)];
    fmtRes_3288335729[0].push.apply(fmtRes_3288335729[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335729, 0, ((relBounds_3288335711.x) | 0), []);
    fmtRes_3288335729[0].push.apply(fmtRes_3288335729[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3288335729, 0, ((relBounds_3288335711.y) | 0), []);
    fmtRes_3288335729[0].push.apply(fmtRes_3288335729[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3288335729, 0, ((relBounds_3288335711.w) | 0), []);
    fmtRes_3288335729[0].push.apply(fmtRes_3288335729[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335729, 0, ((relBounds_3288335711.h) | 0), []);
    fmtRes_3288335729[0].push.apply(fmtRes_3288335729[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3288335729, 0, backgroundColor_3288335724, []);
    buffer_3288335704[buffer_3288335704_Idx].push.apply(buffer_3288335704[buffer_3288335704_Idx], fmtRes_3288335729[0]);;
    buffer_3288335704[buffer_3288335704_Idx].push.apply(buffer_3288335704[buffer_3288335704_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3288335753 = null;
      var i_536872483 = 0;
      var L_536872484 = (self_3288335700.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872483 < L_536872484)) break Label6;
            c_3288335753 = self_3288335700.children[chckIndx(i_536872483, 0, (self_3288335700.children).length - 1)];
            renderWidget_3288335558(c_3288335753, renderer_3288335701, (forceRedraw_3288335702 || self_3288335700.fillBackground), frameIndex_3288335703, buffer_3288335704, buffer_3288335704_Idx);
            i_536872483 = addInt(i_536872483, 1);
            if (!(((self_3288335700.children).length == L_536872484))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3288335704[buffer_3288335704_Idx].push.apply(buffer_3288335704[buffer_3288335704_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3288335567(renderer_3288335701, "boundsStack");
    }
  };

  
}

function renderWidget_3288335644(self_3288335645, renderer_3288335646, forceRedraw_3288335647, frameIndex_3288335648, buffer_3288335649, buffer_3288335649_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3288335645.lastHierarchyChange < frameIndex_3288335648) && (self_3288335645.lastBoundsChange < frameIndex_3288335648)) && (self_3288335645.lastInvalidation < frameIndex_3288335648)) && !(forceRedraw_3288335647))) {
    break BeforeRet;
    }
    
    var relBounds_3288335656 = HEX2D_2063597733(self_3288335645.lastBounds, xy_2080374820(renderer_3288335646.boundsStack[chckIndx((renderer_3288335646.boundsStack).length - 1, 0, (renderer_3288335646.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3288335645.lastBounds, NTI2080374789);
    renderer_3288335646.boundsStack.push(Temporary1);;
    try {
    if (self_3288335645.fillBackground) {
    var fmtRes_3288335668 = [mnewString(0)];
    fmtRes_3288335668[0].push.apply(fmtRes_3288335668[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3288335668, 0, toHtmlHex_2348810680(self_3288335645.backgroundColor), []);
    fmtRes_3288335668[0].push.apply(fmtRes_3288335668[0], [59]);;
    Temporary3 = fmtRes_3288335668[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3288335669 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3288335649[buffer_3288335649_Idx].push.apply(buffer_3288335649[buffer_3288335649_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3288335674 = [mnewString(0)];
    fmtRes_3288335674[0].push.apply(fmtRes_3288335674[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335674, 0, ((relBounds_3288335656.x) | 0), []);
    fmtRes_3288335674[0].push.apply(fmtRes_3288335674[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3288335674, 0, ((relBounds_3288335656.y) | 0), []);
    fmtRes_3288335674[0].push.apply(fmtRes_3288335674[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3288335674, 0, ((relBounds_3288335656.w) | 0), []);
    fmtRes_3288335674[0].push.apply(fmtRes_3288335674[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335674, 0, ((relBounds_3288335656.h) | 0), []);
    fmtRes_3288335674[0].push.apply(fmtRes_3288335674[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3288335674, 0, backgroundColor_3288335669, []);
    buffer_3288335649[buffer_3288335649_Idx].push.apply(buffer_3288335649[buffer_3288335649_Idx], fmtRes_3288335674[0]);;
    buffer_3288335649[buffer_3288335649_Idx].push.apply(buffer_3288335649[buffer_3288335649_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3288335698 = null;
      var i_536872487 = 0;
      var L_536872488 = (self_3288335645.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872487 < L_536872488)) break Label6;
            c_3288335698 = self_3288335645.children[chckIndx(i_536872487, 0, (self_3288335645.children).length - 1)];
            renderWidget_3288335558(c_3288335698, renderer_3288335646, (forceRedraw_3288335647 || self_3288335645.fillBackground), frameIndex_3288335648, buffer_3288335649, buffer_3288335649_Idx);
            i_536872487 = addInt(i_536872487, 1);
            if (!(((self_3288335645.children).length == L_536872488))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3288335649[buffer_3288335649_Idx].push.apply(buffer_3288335649[buffer_3288335649_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3288335567(renderer_3288335646, "boundsStack");
    }
  };

  
}

function rawGet_3288336001(t_3288336004, key_3288336005, hc_3288336006, hc_3288336006_Idx) {
  var result_3288336007 = 0;

  BeforeRet: {
    hc_3288336006[hc_3288336006_Idx] = hash_1325400491(key_3288336005);
    if ((hc_3288336006[hc_3288336006_Idx] == 0)) {
    hc_3288336006[hc_3288336006_Idx] = 314159265;
    }
    
    if (((t_3288336004.data).length == 0)) {
    result_3288336007 = -1;
    break BeforeRet;
    }
    
    var h_3288336082 = (hc_3288336006[hc_3288336006_Idx] & (t_3288336004.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3288336004.data[chckIndx(h_3288336082, 0, (t_3288336004.data).length - 1)].Field0)) break Label2;
          if (((t_3288336004.data[chckIndx(h_3288336082, 0, (t_3288336004.data).length - 1)].Field0 == hc_3288336006[hc_3288336006_Idx]) && eqStrings(t_3288336004.data[chckIndx(h_3288336082, 0, (t_3288336004.data).length - 1)].Field1, key_3288336005))) {
          result_3288336007 = h_3288336082;
          break BeforeRet;
          }
          
          h_3288336082 = nextTry_1308622883(h_3288336082, (t_3288336004.data).length - 1);
        }
    };
    result_3288336007 = subInt(-1, h_3288336082);
  };

  return result_3288336007;

}

function hasKey_3288335994(t_3288335997, key_3288335998) {
  var result_3288335999 = false;

    var hc_3288336000 = [0];
    result_3288335999 = (0 <= rawGet_3288336001(t_3288335997, key_3288335998, hc_3288336000, 0));

  return result_3288335999;

}

function contains_3288335988(t_3288335991, key_3288335992) {
  var result_3288335993 = false;

  BeforeRet: {
    result_3288335993 = hasKey_3288335994(t_3288335991, key_3288335992);
    break BeforeRet;
  };

  return result_3288335993;

}

function contains_3288335894(cache_3288335897, key_3288335898) {
  var result_3288335899 = false;

    result_3288335899 = contains_3288335988(cache_3288335897.table, key_3288335898);

  return result_3288335899;

}

function HEX5BHEX5D_3288336485(t_3288336488, key_3288336489) {
  var result_3288336490 = null;
  var result_3288336490_Idx = 0;

    var hcHEX60gensym22_3288336491 = [0];
    var indexHEX60gensym22_3288336498 = rawGet_3288336001(t_3288336488, key_3288336489, hcHEX60gensym22_3288336491, 0);
    if ((0 <= indexHEX60gensym22_3288336498)) {
    result_3288336490 = t_3288336488.data[chckIndx(indexHEX60gensym22_3288336498, 0, (t_3288336488.data).length - 1)]; result_3288336490_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_3288336489);
    }
    

  return [result_3288336490, result_3288336490_Idx];

}

function remove_3288336601(L_3288336603, n_3288336604) {
    if ((n_3288336604 == L_3288336603.tail)) {
    L_3288336603.tail = n_3288336604.prev;
    }
    
    if ((n_3288336604 == L_3288336603.head)) {
    L_3288336603.head = n_3288336604.next;
    }
    
    if (!((n_3288336604.next == null))) {
    n_3288336604.next.prev = n_3288336604.prev;
    }
    
    if (!((n_3288336604.prev == null))) {
    n_3288336604.prev.next = n_3288336604.next;
    }
    

  
}

function prepend_3288336845(L_3288336847, n_3288336848) {
    n_3288336848.prev = null;
    n_3288336848.next = L_3288336847.head;
    if (!((L_3288336847.head == null))) {
    if (!((L_3288336847.head.prev == null))) {
    failedAssertImpl_268435515([108,105,115,116,115,46,110,105,109,40,54,48,53,44,32,49,49,41,32,96,76,46,104,101,97,100,46,112,114,101,118,32,61,61,32,110,105,108,96,32]);
    }
    
    L_3288336847.head.prev = n_3288336848;
    }
    
    L_3288336847.head = n_3288336848;
    if ((L_3288336847.tail == null)) {
    L_3288336847.tail = n_3288336848;
    }
    

  
}

function HEX5BHEX5D_3288336399(cache_3288336402, key_3288336403) {
    var Temporary1;

  var result_3288336404 = [];

    var node_3288336587 = (Temporary1 = HEX5BHEX5D_3288336485(cache_3288336402.table, key_3288336403), Temporary1)[0][Temporary1[1]];
    result_3288336404 = nimCopy(null, node_3288336587.value.val, NTI33554449);
    remove_3288336601(cache_3288336402.list, node_3288336587);
    prepend_3288336845(cache_3288336402.list, node_3288336587);

  return result_3288336404;

}

function nsuContinuesWith(s_855639504, substr_855639505, start_855639506) {
  var result_855639507 = false;

  BeforeRet: {
    var i_855639508 = 0;
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          if (((substr_855639505).length <= i_855639508)) {
          result_855639507 = true;
          break BeforeRet;
          }
          
          if ((((s_855639504).length <= addInt(i_855639508, start_855639506)) || !((s_855639504[chckIndx(addInt(i_855639508, start_855639506), 0, (s_855639504).length - 1)] == substr_855639505[chckIndx(i_855639508, 0, (substr_855639505).length - 1)])))) {
          result_855639507 = false;
          break BeforeRet;
          }
          
          i_855639508 = addInt(i_855639508, 1);
        }
    };
  };

  return result_855639507;

}

function multiReplace_855639929(s_855639930, replacements_855639931) {
                      var Temporary10;

  var result_855639932 = [];

    result_855639932 = nimCopy(null, mnewString(0), NTI33554449);
    var i_855639933 = 0;
    var fastChk_855639934 = nimCopy(null, ConstSet312, NTI855639351);
    Label1: {
      var sub_855639948 = [];
      var by_855639949 = [];
      var i_536872492 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872492 < (replacements_855639931).length)) break Label3;
            sub_855639948 = replacements_855639931[chckIndx(i_536872492, 0, (replacements_855639931).length - 1)]["Field0"];
            by_855639949 = replacements_855639931[chckIndx(i_536872492, 0, (replacements_855639931).length - 1)]["Field1"];
            if ((0 < (sub_855639948).length)) {
            fastChk_855639934[sub_855639948[chckIndx(0, 0, (sub_855639948).length - 1)]] = true;
            }
            
            i_536872492 = addInt(i_536872492, 1);
          }
      };
    };
    Label4: {
        Label5: while (true) {
        if (!(i_855639933 < (s_855639930).length)) break Label5;
          Label6: {
            if ((fastChk_855639934[s_855639930[chckIndx(i_855639933, 0, (s_855639930).length - 1)]] != undefined)) {
            Label7: {
              var sub_855639962 = [];
              var by_855639963 = [];
              var i_536872496 = 0;
              Label8: {
                  Label9: while (true) {
                  if (!(i_536872496 < (replacements_855639931).length)) break Label9;
                    sub_855639962 = replacements_855639931[chckIndx(i_536872496, 0, (replacements_855639931).length - 1)]["Field0"];
                    by_855639963 = replacements_855639931[chckIndx(i_536872496, 0, (replacements_855639931).length - 1)]["Field1"];
                      if (!(0 < (sub_855639962).length)) Temporary10 = false; else {                        Temporary10 = nsuContinuesWith(s_855639930, sub_855639962, chckRange(i_855639933, 0, 2147483647));                      }                    if (Temporary10) {
                    result_855639932.push.apply(result_855639932, by_855639963);;
                    i_855639933 = addInt(i_855639933, (sub_855639962).length);
                    break Label6;
                    }
                    
                    i_536872496 = addInt(i_536872496, 1);
                  }
              };
            };
            }
            
            addChar(result_855639932, s_855639930[chckIndx(i_855639933, 0, (s_855639930).length - 1)]);;
            i_855639933 = addInt(i_855639933, 1);
          };
        }
    };

  return result_855639932;

}

function getOrDefault_3288337154(t_3288337157, key_3288337158, default_3288337159) {
    var Temporary1;

  var result_3288337160 = null;

    var hcHEX60gensym38_3288337163 = [0];
    var indexHEX60gensym38_3288337170 = rawGet_3288336001(t_3288337157, key_3288337158, hcHEX60gensym38_3288337163, 0);
    if ((0 <= indexHEX60gensym38_3288337170)) {
    Temporary1 = t_3288337157.data[chckIndx(indexHEX60gensym38_3288337170, 0, (t_3288337157.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3288337159;
    }
    
    result_3288337160 = Temporary1;

  return result_3288337160;

}

function newDoublyLinkedNode_3288337282(value_3288337284) {
  var result_3288337285 = null;

    result_3288337285 = ({next: null, prev: null, value: ({key: [], val: []})});
    result_3288337285.value = nimCopy(result_3288337285.value, value_3288337284, NTI3288334373);

  return result_3288337285;

}

function mustRehash_3288337606(t_3288337608) {
  var result_3288337609 = false;

    if (!((t_3288337608.counter < (t_3288337608.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3288337609 = ((mulInt((t_3288337608.data).length, 2) < mulInt(t_3288337608.counter, 3)) || (subInt((t_3288337608.data).length, t_3288337608.counter) < 4));

  return result_3288337609;

}

function rawInsert_3288338239(t_3288338243, data_3288338244, data_3288338244_Idx, key_3288338245, val_3288338246, hc_3288338247, h_3288338248) {
    data_3288338244[data_3288338244_Idx][chckIndx(h_3288338248, 0, (data_3288338244[data_3288338244_Idx]).length - 1)].Field1 = nimCopy(null, key_3288338245, NTI33554449);
    data_3288338244[data_3288338244_Idx][chckIndx(h_3288338248, 0, (data_3288338244[data_3288338244_Idx]).length - 1)].Field2 = val_3288338246;
    data_3288338244[data_3288338244_Idx][chckIndx(h_3288338248, 0, (data_3288338244[data_3288338244_Idx]).length - 1)].Field0 = hc_3288338247;

  
}

function enlarge_3288337830(t_3288337833) {
    var n_3288337836 = [];
    n_3288337836 = new Array(chckRange(mulInt((t_3288337833.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_3288337833.data).length, 2), 0, 2147483647) ; ++i) { n_3288337836[i] = {Field0: 0, Field1: [], Field2: null}; }    var Temporary1 = t_3288337833.data; t_3288337833.data = n_3288337836; n_3288337836 = Temporary1;    Label2: {
      var i_3288337923 = 0;
      var colontmp__536872501 = 0;
      colontmp__536872501 = (n_3288337836).length - 1;
      var res_536872502 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872502 <= colontmp__536872501)) break Label4;
            i_3288337923 = res_536872502;
            var eh_3288338000 = n_3288337836[chckIndx(i_3288337923, 0, (n_3288337836).length - 1)].Field0;
            if (isFilled_1308622880(eh_3288338000)) {
            var j_3288338004 = (eh_3288338000 & (t_3288337833.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_3288337833.data[chckIndx(j_3288338004, 0, (t_3288337833.data).length - 1)].Field0)) break Label6;
                  j_3288338004 = nextTry_1308622883(j_3288338004, (t_3288337833.data).length - 1);
                }
            };
            rawInsert_3288338239(t_3288337833, t_3288337833, "data", n_3288337836[chckIndx(i_3288337923, 0, (n_3288337836).length - 1)].Field1, n_3288337836[chckIndx(i_3288337923, 0, (n_3288337836).length - 1)].Field2, eh_3288338000, j_3288338004);
            }
            
            res_536872502 = addInt(res_536872502, 1);
          }
      };
    };

  
}

function rawGetKnownHC_3288338477(t_3288338480, key_3288338481, hc_3288338482) {
  var result_3288338483 = 0;

  BeforeRet: {
    if (((t_3288338480.data).length == 0)) {
    result_3288338483 = -1;
    break BeforeRet;
    }
    
    var h_3288338557 = (hc_3288338482 & (t_3288338480.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_3288338480.data[chckIndx(h_3288338557, 0, (t_3288338480.data).length - 1)].Field0)) break Label2;
          if (((t_3288338480.data[chckIndx(h_3288338557, 0, (t_3288338480.data).length - 1)].Field0 == hc_3288338482) && eqStrings(t_3288338480.data[chckIndx(h_3288338557, 0, (t_3288338480.data).length - 1)].Field1, key_3288338481))) {
          result_3288338483 = h_3288338557;
          break BeforeRet;
          }
          
          h_3288338557 = nextTry_1308622883(h_3288338557, (t_3288338480.data).length - 1);
        }
    };
    result_3288338483 = subInt(-1, h_3288338557);
  };

  return result_3288338483;

}

function HEX5BHEX5DHEX3D_3288337364(t_3288337367, key_3288337368, val_3288337369) {
    if (((t_3288337367.data).length == 0)) {
    var correctSizeHEX60gensym41_3288337441 = slotsNeeded_1308622891(32);
    t_3288337367.counter = 0;
    t_3288337367.data = new Array(chckRange(correctSizeHEX60gensym41_3288337441, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym41_3288337441, 0, 2147483647) ; ++i) { t_3288337367.data[i] = {Field0: 0, Field1: [], Field2: null}; }    }
    
    var hc_3288337446 = [0];
    var index_3288337453 = rawGet_3288336001(t_3288337367, key_3288337368, hc_3288337446, 0);
    if ((0 <= index_3288337453)) {
    t_3288337367.data[chckIndx(index_3288337453, 0, (t_3288337367.data).length - 1)].Field2 = val_3288337369;
    }
    else {
      if (((t_3288337367.data).length == 0)) {
      var correctSizeHEX60gensym44_3288337601 = slotsNeeded_1308622891(32);
      t_3288337367.counter = 0;
      t_3288337367.data = new Array(chckRange(correctSizeHEX60gensym44_3288337601, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym44_3288337601, 0, 2147483647) ; ++i) { t_3288337367.data[i] = {Field0: 0, Field1: [], Field2: null}; }      }
      
      if (mustRehash_3288337606(t_3288337367)) {
      enlarge_3288337830(t_3288337367);
      index_3288337453 = rawGetKnownHC_3288338477(t_3288337367, key_3288337368, hc_3288337446[0]);
      }
      
      index_3288337453 = subInt(-1, index_3288337453);
      rawInsert_3288338239(t_3288337367, t_3288337367, "data", key_3288337368, val_3288337369, hc_3288337446[0], index_3288337453);
      t_3288337367.counter = addInt(t_3288337367.counter, 1);
    }
    

  
}

function rawGet_3288338890(t_3288338893, key_3288338894, hc_3288338895, hc_3288338895_Idx) {
  var result_3288338896 = 0;

  BeforeRet: {
    hc_3288338895[hc_3288338895_Idx] = hash_1325400491(key_3288338894);
    if ((hc_3288338895[hc_3288338895_Idx] == 0)) {
    hc_3288338895[hc_3288338895_Idx] = 314159265;
    }
    
    if (((t_3288338893.data).length == 0)) {
    result_3288338896 = -1;
    break BeforeRet;
    }
    
    var h_3288338971 = (hc_3288338895[hc_3288338895_Idx] & (t_3288338893.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3288338893.data[chckIndx(h_3288338971, 0, (t_3288338893.data).length - 1)].Field0)) break Label2;
          if (((t_3288338893.data[chckIndx(h_3288338971, 0, (t_3288338893.data).length - 1)].Field0 == hc_3288338895[hc_3288338895_Idx]) && eqStrings(t_3288338893.data[chckIndx(h_3288338971, 0, (t_3288338893.data).length - 1)].Field1, key_3288338894))) {
          result_3288338896 = h_3288338971;
          break BeforeRet;
          }
          
          h_3288338971 = nextTry_1828716586(h_3288338971, (t_3288338893.data).length - 1);
        }
    };
    result_3288338896 = subInt(-1, h_3288338971);
  };

  return result_3288338896;

}

function exclImpl_3288338884(s_3288338886, key_3288338887) {
          var Temporary5;

  var result_3288338888 = false;

  BeforeRet: {
    var hc_3288338889 = [0];
    var i_3288339221 = rawGet_3288338890(s_3288338886, key_3288338887, hc_3288338889, 0);
    var msk_3288339225 = (s_3288338886.data).length - 1;
    result_3288338888 = true;
    if ((0 <= i_3288339221)) {
    result_3288338888 = false;
    s_3288338886.counter = subInt(s_3288338886.counter, 1);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var j_3288339231 = i_3288339221;
          var r_3288339232 = j_3288339231;
          s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)].Field0 = 0;
          s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
          Label3: {
              Label4: while (true) {
              if (!true) break Label4;
                i_3288339221 = (addInt(i_3288339221, 1) & msk_3288339225);
                if (isEmpty_1828716580(s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)].Field0)) {
                break BeforeRet;
                }
                
                r_3288339232 = (s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)].Field0 & msk_3288339225);
                if (!(((((r_3288339232 <= i_3288339221) && (j_3288339231 < r_3288339232)) || ((j_3288339231 < r_3288339232) && (i_3288339221 < j_3288339231))) || ((i_3288339221 < j_3288339231) && (r_3288339232 <= i_3288339221))))) {
                break Label3;
                }
                
              }
          };
          Temporary5 = s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)];
          s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)] = genericReset(s_3288338886.data[chckIndx(i_3288339221, 0, (s_3288338886.data).length - 1)], NTI3288334429);
          s_3288338886.data[chckIndx(j_3288339231, 0, (s_3288338886.data).length - 1)] = nimCopy(s_3288338886.data[chckIndx(j_3288339231, 0, (s_3288338886.data).length - 1)], Temporary5, NTI3288334429);
        }
    };
    }
    
  };

  return result_3288338888;

}

function excl_3288338869(s_3288338871, key_3288338872) {
    var _ = exclImpl_3288338884(s_3288338871, key_3288338872);

  
}

function len_3288339951(t_3288339954) {
  var result_3288339955 = 0;

    result_3288339955 = t_3288339954.counter;

  return result_3288339955;

}

function len_3288339868(cache_3288339871) {
  var result_3288339872 = 0;

    result_3288339872 = len_3288339951(cache_3288339871.table);

  return result_3288339872;

}

function mustRehash_3288340085(t_3288340087) {
  var result_3288340088 = false;

    if (!((t_3288340087.counter < (t_3288340087.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_3288340088 = ((mulInt((t_3288340087.data).length, 2) < mulInt(t_3288340087.counter, 3)) || (subInt((t_3288340087.data).length, t_3288340087.counter) < 4));

  return result_3288340088;

}

function rawGetKnownHC_3288340635(t_3288340638, key_3288340639, hc_3288340640) {
  var result_3288340641 = 0;

  BeforeRet: {
    if (((t_3288340638.data).length == 0)) {
    result_3288340641 = -1;
    break BeforeRet;
    }
    
    var h_3288340715 = (hc_3288340640 & (t_3288340638.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1828716583(t_3288340638.data[chckIndx(h_3288340715, 0, (t_3288340638.data).length - 1)].Field0)) break Label2;
          if (((t_3288340638.data[chckIndx(h_3288340715, 0, (t_3288340638.data).length - 1)].Field0 == hc_3288340640) && eqStrings(t_3288340638.data[chckIndx(h_3288340715, 0, (t_3288340638.data).length - 1)].Field1, key_3288340639))) {
          result_3288340641 = h_3288340715;
          break BeforeRet;
          }
          
          h_3288340715 = nextTry_1828716586(h_3288340715, (t_3288340638.data).length - 1);
        }
    };
    result_3288340641 = subInt(-1, h_3288340715);
  };

  return result_3288340641;

}

function rawInsert_3288341104(s_3288341106, data_3288341107, data_3288341107_Idx, key_3288341108, hc_3288341109, h_3288341110) {
    if (((data_3288341107[data_3288341107_Idx]).length == 0)) {
    var correctSizeHEX60gensym61_3288341182 = slotsNeeded_1828716594(64);
    s_3288341106.counter = 0;
    s_3288341106.data = new Array(chckRange(correctSizeHEX60gensym61_3288341182, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym61_3288341182, 0, 2147483647) ; ++i) { s_3288341106.data[i] = {Field0: 0, Field1: []}; }    }
    
    data_3288341107[data_3288341107_Idx][chckIndx(h_3288341110, 0, (data_3288341107[data_3288341107_Idx]).length - 1)].Field1 = nimCopy(null, key_3288341108, NTI33554449);
    data_3288341107[data_3288341107_Idx][chckIndx(h_3288341110, 0, (data_3288341107[data_3288341107_Idx]).length - 1)].Field0 = hc_3288341109;

  
}

function enlarge_3288340315(s_3288340317) {
    var n_3288340319 = [];
    n_3288340319 = new Array(chckRange(mulInt((s_3288340317.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((s_3288340317.data).length, 2), 0, 2147483647) ; ++i) { n_3288340319[i] = {Field0: 0, Field1: []}; }    var Temporary1 = s_3288340317.data; s_3288340317.data = n_3288340319; n_3288340319 = Temporary1;    Label2: {
      var i_3288340406 = 0;
      var colontmp__536872510 = 0;
      colontmp__536872510 = (n_3288340319).length - 1;
      var res_536872511 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872511 <= colontmp__536872510)) break Label4;
            i_3288340406 = res_536872511;
            if (isFilled_1828716583(n_3288340319[chckIndx(i_3288340406, 0, (n_3288340319).length - 1)].Field0)) {
            var j_3288340947 = subInt(-1, rawGetKnownHC_3288340635(s_3288340317, n_3288340319[chckIndx(i_3288340406, 0, (n_3288340319).length - 1)].Field1, n_3288340319[chckIndx(i_3288340406, 0, (n_3288340319).length - 1)].Field0));
            rawInsert_3288341104(s_3288340317, s_3288340317, "data", n_3288340319[chckIndx(i_3288340406, 0, (n_3288340319).length - 1)].Field1, n_3288340319[chckIndx(i_3288340406, 0, (n_3288340319).length - 1)].Field0, j_3288340947);
            }
            
            res_536872511 = addInt(res_536872511, 1);
          }
      };
    };

  
}

function incl_3288339976(s_3288339978, key_3288339979) {
    if (((s_3288339978.data).length == 0)) {
    var correctSizeHEX60gensym54_3288340055 = slotsNeeded_1828716594(64);
    s_3288339978.counter = 0;
    s_3288339978.data = new Array(chckRange(correctSizeHEX60gensym54_3288340055, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym54_3288340055, 0, 2147483647) ; ++i) { s_3288339978.data[i] = {Field0: 0, Field1: []}; }    }
    
    var hc_3288340070 = [0];
    var index_3288340084 = rawGet_3288338890(s_3288339978, key_3288339979, hc_3288340070, 0);
    if ((index_3288340084 < 0)) {
    if (mustRehash_3288340085(s_3288339978)) {
    enlarge_3288340315(s_3288339978);
    index_3288340084 = rawGetKnownHC_3288340635(s_3288339978, key_3288339979, hc_3288340070[0]);
    }
    
    rawInsert_3288341104(s_3288339978, s_3288339978, "data", key_3288339979, hc_3288340070[0], subInt(-1, index_3288340084));
    s_3288339978.counter = addInt(s_3288339978.counter, 1);
    }
    

  
}

function del_3288341441(t_3288341444, key_3288341445) {
    var hc_3288341446 = [0];
    var i_3288341453 = rawGet_3288336001(t_3288341444, key_3288341445, hc_3288341446, 0);
    var mskHEX60gensym36_3288341457 = (t_3288341444.data).length - 1;
    if ((0 <= i_3288341453)) {
    t_3288341444.counter = subInt(t_3288341444.counter, 1);
    Label1: {
      Label2: {
          Label3: while (true) {
          if (!true) break Label3;
            var jHEX60gensym36_3288341464 = i_3288341453;
            var rHEX60gensym36_3288341465 = jHEX60gensym36_3288341464;
            t_3288341444.data[chckIndx(i_3288341453, 0, (t_3288341444.data).length - 1)].Field0 = 0;
            t_3288341444.data[chckIndx(i_3288341453, 0, (t_3288341444.data).length - 1)].Field1 = nimCopy(null, [], NTI33554449);
            t_3288341444.data[chckIndx(i_3288341453, 0, (t_3288341444.data).length - 1)].Field2 = null;
            Label4: {
                Label5: while (true) {
                if (!true) break Label5;
                  i_3288341453 = (addInt(i_3288341453, 1) & mskHEX60gensym36_3288341457);
                  if (isEmpty_1308622877(t_3288341444.data[chckIndx(i_3288341453, 0, (t_3288341444.data).length - 1)].Field0)) {
                  break Label1;
                  }
                  
                  rHEX60gensym36_3288341465 = (t_3288341444.data[chckIndx(i_3288341453, 0, (t_3288341444.data).length - 1)].Field0 & mskHEX60gensym36_3288341457);
                  if (!(((((rHEX60gensym36_3288341465 <= i_3288341453) && (jHEX60gensym36_3288341464 < rHEX60gensym36_3288341465)) || ((jHEX60gensym36_3288341464 < rHEX60gensym36_3288341465) && (i_3288341453 < jHEX60gensym36_3288341464))) || ((i_3288341453 < jHEX60gensym36_3288341464) && (rHEX60gensym36_3288341465 <= i_3288341453))))) {
                  break Label4;
                  }
                  
                }
            };
            t_3288341444.data[chckIndx(jHEX60gensym36_3288341464, 0, (t_3288341444.data).length - 1)] = nimCopy(t_3288341444.data[chckIndx(jHEX60gensym36_3288341464, 0, (t_3288341444.data).length - 1)], t_3288341444.data[chckIndx(i_3288341453, 0, (t_3288341444.data).length - 1)], NTI3288334409);
          }
      };
    };
    }
    

  
}

function resize_3288339786(cache_3288339789) {
    Label1: {
        Label2: while (true) {
        if (!(cache_3288339789.capacity < len_3288339868(cache_3288339789))) break Label2;
          var t_3288339956 = cache_3288339789.list.tail;
          if (cache_3288339789.recordRemovedKeys) {
          incl_3288339976(cache_3288339789.removedKeys, t_3288339956.value.key);
          }
          
          del_3288341441(cache_3288339789.table, t_3288339956.value.key);
          remove_3288336601(cache_3288339789.list, t_3288339956);
        }
    };

  
}

function addNewNode_3288337274(cache_3288337277, key_3288337278, val_3288337279) {
    var node_3288337300 = newDoublyLinkedNode_3288337282({key: nimCopy(null, key_3288337278, NTI33554449), val: nimCopy(null, val_3288337279, NTI33554449)});
    HEX5BHEX5DHEX3D_3288337364(cache_3288337277.table, key_3288337278, node_3288337300);
    prepend_3288336845(cache_3288337277.list, node_3288337300);
    if (cache_3288337277.recordRemovedKeys) {
    excl_3288338869(cache_3288337277.removedKeys, key_3288337278);
    }
    
    resize_3288339786(cache_3288337277);

  
}

function HEX5BHEX5DHEX3D_3288337059(cache_3288337062, key_3288337063, val_3288337064) {
    var node_3288337247 = getOrDefault_3288337154(cache_3288337062.table, key_3288337063, null);
    if ((node_3288337247 == null)) {
    addNewNode_3288337274(cache_3288337062, key_3288337063, val_3288337064);
    }
    else {
      node_3288337247.value.val = nimCopy(null, val_3288337064, NTI33554449);
      remove_3288336601(cache_3288337062.list, node_3288337247);
      prepend_3288336845(cache_3288337062.list, node_3288337247);
    }
    

  
}

function renderWidget_3288335809(self_3288335810, renderer_3288335811, forceRedraw_3288335812, frameIndex_3288335813, buffer_3288335814, buffer_3288335814_Idx) {
    var Temporary1;
    var Temporary2;

  BeforeRet: {
    if (((((self_3288335810.lastHierarchyChange < frameIndex_3288335813) && (self_3288335810.lastBoundsChange < frameIndex_3288335813)) && (self_3288335810.lastInvalidation < frameIndex_3288335813)) && !(forceRedraw_3288335812))) {
    break BeforeRet;
    }
    
    var relBounds_3288335821 = HEX2D_2063597733(self_3288335810.lastBounds, xy_2080374820(renderer_3288335811.boundsStack[chckIndx((renderer_3288335811.boundsStack).length - 1, 0, (renderer_3288335811.boundsStack).length - 1)]));
    if (self_3288335810.fillBackground) {
    var fmtRes_3288335826 = [mnewString(0)];
    fmtRes_3288335826[0].push.apply(fmtRes_3288335826[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3288335826, 0, toHtmlHex_2348810680(self_3288335810.backgroundColor), []);
    fmtRes_3288335826[0].push.apply(fmtRes_3288335826[0], [59]);;
    Temporary1 = fmtRes_3288335826[0];
    }
    else {
    Temporary1 = [];
    }
    
    var backgroundColor_3288335827 = nimCopy(null, Temporary1, NTI33554449);
    var color_3288335828 = toHtmlHex_2348810680(self_3288335810.foregroundColor);
    if (contains_3288335894(renderer_3288335811.escapedText, self_3288335810.text)) {
    Temporary2 = HEX5BHEX5D_3288336399(renderer_3288335811.escapedText, self_3288335810.text);
    }
    else {
      var escapedText_3288336995 = multiReplace_855639929(self_3288335810.text, [{Field0: [38], Field1: [38,97,109,112,59]}, {Field0: [60], Field1: [38,108,116,59]}, {Field0: [62], Field1: [38,103,116,59]}, {Field0: [34], Field1: [38,113,117,111,116,59]}, {Field0: [39], Field1: [38,35,48,51,57,59]}]);
      HEX5BHEX5DHEX3D_3288337059(renderer_3288335811.escapedText, self_3288335810.text, escapedText_3288336995);
    Temporary2 = escapedText_3288336995;
    }
    
    var text_3288342236 = nimCopy(null, Temporary2, NTI33554449);
    buffer_3288335814[buffer_3288335814_Idx].push.apply(buffer_3288335814[buffer_3288335814_Idx], [60,115,112,97,110,32,115,116,121,108,101,61,34]);;
    var fmtRes_3288342241 = [mnewString(0)];
    fmtRes_3288342241[0].push.apply(fmtRes_3288342241[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3288342241, 0, ((relBounds_3288335821.x) | 0), []);
    fmtRes_3288342241[0].push.apply(fmtRes_3288342241[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3288342241, 0, ((relBounds_3288335821.y) | 0), []);
    fmtRes_3288342241[0].push.apply(fmtRes_3288342241[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3288342241, 0, ((relBounds_3288335821.w) | 0), []);
    fmtRes_3288342241[0].push.apply(fmtRes_3288342241[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3288342241, 0, ((relBounds_3288335821.h) | 0), []);
    fmtRes_3288342241[0].push.apply(fmtRes_3288342241[0], [112,120,59,32,111,118,101,114,102,108,111,119,58,32,118,105,115,105,98,108,101,59,32,99,111,108,111,114,58,32]);;
    formatValue_721420459(fmtRes_3288342241, 0, color_3288335828, []);
    fmtRes_3288342241[0].push.apply(fmtRes_3288342241[0], [59,32]);;
    formatValue_721420459(fmtRes_3288342241, 0, backgroundColor_3288335827, []);
    buffer_3288335814[buffer_3288335814_Idx].push.apply(buffer_3288335814[buffer_3288335814_Idx], fmtRes_3288342241[0]);;
    buffer_3288335814[buffer_3288335814_Idx].push.apply(buffer_3288335814[buffer_3288335814_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    buffer_3288335814[buffer_3288335814_Idx].push.apply(buffer_3288335814[buffer_3288335814_Idx], text_3288342236);;
    buffer_3288335814[buffer_3288335814_Idx].push.apply(buffer_3288335814[buffer_3288335814_Idx], [60,47,115,112,97,110,62]);;
    self_3288335810.lastRenderedText = nimCopy(null, self_3288335810.text, NTI33554449);
  };

  
}

function renderWidget_3288335754(self_3288335755, renderer_3288335756, forceRedraw_3288335757, frameIndex_3288335758, buffer_3288335759, buffer_3288335759_Idx) {
    var Temporary3;

  BeforeRet: {
    if (((((self_3288335755.lastHierarchyChange < frameIndex_3288335758) && (self_3288335755.lastBoundsChange < frameIndex_3288335758)) && (self_3288335755.lastInvalidation < frameIndex_3288335758)) && !(forceRedraw_3288335757))) {
    break BeforeRet;
    }
    
    var relBounds_3288335766 = HEX2D_2063597733(self_3288335755.lastBounds, xy_2080374820(renderer_3288335756.boundsStack[chckIndx((renderer_3288335756.boundsStack).length - 1, 0, (renderer_3288335756.boundsStack).length - 1)]));
    var Temporary1 = nimCopy(null, self_3288335755.lastBounds, NTI2080374789);
    renderer_3288335756.boundsStack.push(Temporary1);;
    try {
    if (self_3288335755.fillBackground) {
    var fmtRes_3288335778 = [mnewString(0)];
    fmtRes_3288335778[0].push.apply(fmtRes_3288335778[0], [98,97,99,107,103,114,111,117,110,100,58,32]);;
    formatValue_721420459(fmtRes_3288335778, 0, toHtmlHex_2348810680(self_3288335755.backgroundColor), []);
    fmtRes_3288335778[0].push.apply(fmtRes_3288335778[0], [59]);;
    Temporary3 = fmtRes_3288335778[0];
    }
    else {
    Temporary3 = [];
    }
    
    var backgroundColor_3288335779 = nimCopy(null, Temporary3, NTI33554449);
    buffer_3288335759[buffer_3288335759_Idx].push.apply(buffer_3288335759[buffer_3288335759_Idx], [60,100,105,118,32,115,116,121,108,101,61,34]);;
    var fmtRes_3288335784 = [mnewString(0)];
    fmtRes_3288335784[0].push.apply(fmtRes_3288335784[0], [108,101,102,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335784, 0, ((relBounds_3288335766.x) | 0), []);
    fmtRes_3288335784[0].push.apply(fmtRes_3288335784[0], [112,120,59,32,116,111,112,58,32]);;
    formatValue_2332033544(fmtRes_3288335784, 0, ((relBounds_3288335766.y) | 0), []);
    fmtRes_3288335784[0].push.apply(fmtRes_3288335784[0], [112,120,59,32,119,105,100,116,104,58,32]);;
    formatValue_2332033544(fmtRes_3288335784, 0, ((relBounds_3288335766.w) | 0), []);
    fmtRes_3288335784[0].push.apply(fmtRes_3288335784[0], [112,120,59,32,104,101,105,103,104,116,58,32]);;
    formatValue_2332033544(fmtRes_3288335784, 0, ((relBounds_3288335766.h) | 0), []);
    fmtRes_3288335784[0].push.apply(fmtRes_3288335784[0], [112,120,59,32]);;
    formatValue_721420459(fmtRes_3288335784, 0, backgroundColor_3288335779, []);
    buffer_3288335759[buffer_3288335759_Idx].push.apply(buffer_3288335759[buffer_3288335759_Idx], fmtRes_3288335784[0]);;
    buffer_3288335759[buffer_3288335759_Idx].push.apply(buffer_3288335759[buffer_3288335759_Idx], [34,32,99,108,97,115,115,61,34,119,105,100,103,101,116,34,62]);;
    Label4: {
      var c_3288335808 = null;
      var i_536872517 = 0;
      var L_536872518 = (self_3288335755.children).length;
      Label5: {
          Label6: while (true) {
          if (!(i_536872517 < L_536872518)) break Label6;
            c_3288335808 = self_3288335755.children[chckIndx(i_536872517, 0, (self_3288335755.children).length - 1)];
            renderWidget_3288335558(c_3288335808, renderer_3288335756, (forceRedraw_3288335757 || self_3288335755.fillBackground), frameIndex_3288335758, buffer_3288335759, buffer_3288335759_Idx);
            i_536872517 = addInt(i_536872517, 1);
            if (!(((self_3288335755.children).length == L_536872518))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    buffer_3288335759[buffer_3288335759_Idx].push.apply(buffer_3288335759[buffer_3288335759_Idx], [60,47,100,105,118,62]);;
    } finally {
    var _ = pop_3288335567(renderer_3288335756, "boundsStack");
    }
  };

  
}

function renderWidget_3288335552(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx) {
  
}

function renderWidget_3288335558(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx) {
    chckNilDisp(self_3288335553);
    if (isObj(self_3288335553.m_type, NTI2332033036)) {
    renderWidget_3288335580(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx);
    }
    else {
    if (isObj(self_3288335553.m_type, NTI2332033040)) {
    renderWidget_3288335699(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx);
    }
    else {
    if (isObj(self_3288335553.m_type, NTI2332033038)) {
    renderWidget_3288335644(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx);
    }
    else {
    if (isObj(self_3288335553.m_type, NTI2332033044)) {
    renderWidget_3288335809(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx);
    }
    else {
    if (isObj(self_3288335553.m_type, NTI2332033042)) {
    renderWidget_3288335754(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx);
    }
    else {
    if (isObj(self_3288335553.m_type, NTI2332033034)) {
    renderWidget_3288335552(self_3288335553, renderer_3288335554, forceRedraw_3288335555, frameIndex_3288335556, buffer_3288335557, buffer_3288335557_Idx);
    }
    }}}}}

  
}

function render_3288335559(self_3288335560, widget_3288335561, frameIndex_3288335562) {
    self_3288335560.boundsStack.push(rect_2080374808(vec2_2097152926(), size_2315255913(self_3288335560)));;
    try {
    self_3288335560.redrawEverything = true;
    var buffer_3288335579 = [[]];
    renderWidget_3288335558(widget_3288335561, self_3288335560, self_3288335560.redrawEverything, frameIndex_3288335562, buffer_3288335579, 0);
    self_3288335560.content.innerHTML = toJSStr(buffer_3288335579[0]);
    self_3288335560.redrawEverything = false;
    } finally {
    var _ = pop_3288335567(self_3288335560, "boundsStack");
    }

  
}

function render_2315255900(self_2315255901, widget_2315255902, frameIndex_2315255903) {
  
}

function render_2315255904(self_2315255901, widget_2315255902, frameIndex_2315255903) {
    chckNilDisp(self_2315255901);
    if (isObj(self_2315255901.m_type, NTI3288334342)) {
    render_3288335559(self_2315255901, widget_2315255902, frameIndex_2315255903);
    }
    else {
    if (isObj(self_2315255901.m_type, NTI2315255812)) {
    render_2315255900(self_2315255901, widget_2315255902, frameIndex_2315255903);
    }
    }

  
}

function sizeChanged_2315255905(self_2315255906) {
  var result_2315255907 = false;

  return result_2315255907;

}

function sizeChanged_2315255908(self_2315255906) {
  var result_2315255909 = false;

  BeforeRet: {
    result_2315255909 = sizeChanged_2315255905(self_2315255906);
    break BeforeRet;
  };

  return result_2315255909;

}

function initDoublyLinkedList_3288334483() {
  var result_3288334485 = ({head: null, tail: null});

  return result_3288334485;

}

function initTable_3288334489(initialSize_3288334492) {
  var result_3288334493 = ({data: [], counter: 0});

    var correctSizeHEX60gensym3_3288334495 = slotsNeeded_1308622891(chckRange(initialSize_3288334492, 0, 2147483647));
    result_3288334493.counter = 0;
    result_3288334493.data = new Array(chckRange(correctSizeHEX60gensym3_3288334495, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym3_3288334495, 0, 2147483647) ; ++i) { result_3288334493.data[i] = {Field0: 0, Field1: [], Field2: null}; }
  return result_3288334493;

}

function newLruCache_3288334473(capacity_3288334476, recordRemovedKeys_3288334477) {
  var result_3288334478 = null;

    result_3288334478 = {capacity: capacity_3288334476, list: initDoublyLinkedList_3288334483(), table: initTable_3288334489(correctSize_3019898901(capacity_3288334476)), recordRemovedKeys: recordRemovedKeys_3288334477, removedKeys: ({data: [], counter: 0})};

  return result_3288334478;

}

function getModifiers_3288334413(self_3288334414) {
  var result_3288334415 = {};

    if (self_3288334414.altKey) {
    result_3288334415[2] = true;
    }
    
    if (self_3288334414.shiftKey) {
    result_3288334415[1] = true;
    }
    
    if (self_3288334414.ctrlKey) {
    result_3288334415[0] = true;
    }
    

  return result_3288334415;

}

function runeAt_788536179(s_788536180, i_788536181) {
  var result_788536182 = 0;

    if ((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] <= 127)) {
    result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 5) == 6)) {
    if ((i_788536181 <= subInt((s_788536180).length, 2))) {
    result_788536182 = chckRange((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 31) << 6) | (s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 4) == 14)) {
    if ((i_788536181 <= subInt((s_788536180).length, 3))) {
    result_788536182 = chckRange(((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 15) << 12) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 3) == 30)) {
    if ((i_788536181 <= subInt((s_788536180).length, 4))) {
    result_788536182 = chckRange((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 7) << 18) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 2) == 62)) {
    if ((i_788536181 <= subInt((s_788536180).length, 5))) {
    result_788536182 = chckRange(((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 3) << 24) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
    if (((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] >>> 1) == 126)) {
    if ((i_788536181 <= subInt((s_788536180).length, 6))) {
    result_788536182 = chckRange((((((((s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)] & 1) << 30) | ((s_788536180[chckIndx(addInt(i_788536181, 1), 0, (s_788536180).length - 1)] & 63) << 24)) | ((s_788536180[chckIndx(addInt(i_788536181, 2), 0, (s_788536180).length - 1)] & 63) << 18)) | ((s_788536180[chckIndx(addInt(i_788536181, 3), 0, (s_788536180).length - 1)] & 63) << 12)) | ((s_788536180[chckIndx(addInt(i_788536181, 4), 0, (s_788536180).length - 1)] & 63) << 6)) | (s_788536180[chckIndx(addInt(i_788536181, 5), 0, (s_788536180).length - 1)] & 63)), -2147483648, 2147483647);
    }
    else {
      result_788536182 = 65533;
    }
    
    }
    else {
      result_788536182 = chckRange(s_788536180[chckIndx(i_788536181, 0, (s_788536180).length - 1)], -2147483648, 2147483647);
    }
    }}}}}

  return result_788536182;

}

function toInput_3288334407(key_3288334408, code_3288334409, keyCode_3288334410) {
  var result_3288335548 = 0;

    switch (key_3288334408) {
    case "Enter":
      result_3288335548 = -1;
      break;
    case "Escape":
      result_3288335548 = -2;
      break;
    case "Backspace":
      result_3288335548 = -3;
      break;
    case " ":
      result_3288335548 = -4;
      break;
    case "Delete":
      result_3288335548 = -5;
      break;
    case "Tab":
      result_3288335548 = -6;
      break;
    case "ArrowLeft":
      result_3288335548 = -7;
      break;
    case "ArrowRight":
      result_3288335548 = -8;
      break;
    case "ArrowUp":
      result_3288335548 = -9;
      break;
    case "ArrowDown":
      result_3288335548 = -10;
      break;
    case "Home":
      result_3288335548 = -11;
      break;
    case "End":
      result_3288335548 = -12;
      break;
    case "PageUp":
      result_3288335548 = -13;
      break;
    case "PageDown":
      result_3288335548 = -14;
      break;
    default: 
      if (      keyCode_3288334410 >= 112 && keyCode_3288334410 <= 123      ){        result_3288335548 = addInt(-20, subInt(keyCode_3288334410, 112));
        }
      else{
        if ((((key_3288334408) == null ? 0 : (key_3288334408).length) == 1)) {
        result_3288335548 = runeAt_788536179(cstrToNimstr(key_3288334408), 0);
        }
        
        }
      break;
    }

  return result_3288335548;

}

function invoke_3288334774(event_3288334776, arg_3288334777) {
    Label1: {
      var h_3288334800 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872522 = 0;
      var L_536872523 = (event_3288334776.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872522 < L_536872523)) break Label3;
            h_3288334800 = event_3288334776.handlers[chckIndx(i_536872522, 0, (event_3288334776.handlers).length - 1)];
            h_3288334800.Field1(arg_3288334777);
            i_536872522 = addInt(i_536872522, 1);
            if (!(((event_3288334776.handlers).length == L_536872523))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getModifiers_3288334428(self_3288334429) {
  var result_3288334430 = {};

    if (self_3288334429.altKey) {
    result_3288334430[2] = true;
    }
    
    if (self_3288334429.shiftKey) {
    result_3288334430[1] = true;
    }
    
    if (self_3288334429.ctrlKey) {
    result_3288334430[0] = true;
    }
    

  return result_3288334430;

}

function invoke_3288335191(event_3288335193, arg_3288335194) {
    Label1: {
      var h_3288335217 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872527 = 0;
      var L_536872528 = (event_3288335193.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872527 < L_536872528)) break Label3;
            h_3288335217 = event_3288335193.handlers[chckIndx(i_536872527, 0, (event_3288335193.handlers).length - 1)];
            h_3288335217.Field1(arg_3288335194);
            i_536872527 = addInt(i_536872527, 1);
            if (!(((event_3288335193.handlers).length == L_536872528))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function HEX2A_3288334878(aHEX60gensym155_3288334880, bHEX60gensym155_3288334881) {
  var result_3288334882 = ({arr: new Float32Array(2)});

    result_3288334882 = nimCopy(result_3288334882, {arr: new Float32Array([(aHEX60gensym155_3288334880.arr[0] * bHEX60gensym155_3288334881), (aHEX60gensym155_3288334880.arr[1] * bHEX60gensym155_3288334881)])}, NTI2097152387);

  return result_3288334882;

}

function getMouseButton_3288334459(event_3288334460) {
    var Temporary1;

  var result_3288334461 = 0;

    if (    event_3288334460.button == 0    ){      Temporary1 = 0;
      }
    else if (    event_3288334460.button == 1    ){      Temporary1 = 1;
      }
    else if (    event_3288334460.button == 2    ){      Temporary1 = 2;
      }
    else{
      Temporary1 = 5;
      }
    result_3288334461 = Temporary1;

  return result_3288334461;

}

function invoke_3288335286(event_3288335288, arg_3288335289) {
    Label1: {
      var h_3288335312 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872532 = 0;
      var L_536872533 = (event_3288335288.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872532 < L_536872533)) break Label3;
            h_3288335312 = event_3288335288.handlers[chckIndx(i_536872532, 0, (event_3288335288.handlers).length - 1)];
            h_3288335312.Field1(arg_3288335289);
            i_536872532 = addInt(i_536872532, 1);
            if (!(((event_3288335288.handlers).length == L_536872533))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function invoke_3288335359(event_3288335361, arg_3288335362) {
    Label1: {
      var h_3288335385 = {Field0: ({padding: 0, time: 0, fuzz: 0, count: 0}), Field1: null};
      var i_536872537 = 0;
      var L_536872538 = (event_3288335361.handlers).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872537 < L_536872538)) break Label3;
            h_3288335385 = event_3288335361.handlers[chckIndx(i_536872537, 0, (event_3288335361.handlers).length - 1)];
            h_3288335385.Field1(arg_3288335362);
            i_536872537 = addInt(i_536872537, 1);
            if (!(((event_3288335361.handlers).length == L_536872538))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  
}

function getMouseButtons_3288334443(event_3288334444) {
  var result_3288334445 = {};

    var buttons_3288334446 = event_3288334444.buttons;
    if (!(((buttons_3288334446 & 1) == 0))) {
    result_3288334445[0] = true;
    }
    
    if (!(((buttons_3288334446 & 2) == 0))) {
    result_3288334445[2] = true;
    }
    
    if (!(((buttons_3288334446 & 4) == 0))) {
    result_3288334445[1] = true;
    }
    

  return result_3288334445;

}

function init_3288334471(self_3288334472) {
    
function HEX3Aanonymous_3288334536(text_3288334537) {
      var result_3288334538 = ({arr: new Float32Array(2)});

        result_3288334538.arr[chckIndx(0, 0, (result_3288334538.arr).length - 1)] = ((text_3288334537).length * self_3288334472.mCharWidth);
        result_3288334538.arr[chckIndx(1, 0, (result_3288334538.arr).length - 1)] = totalLineHeight_2315255960(self_3288334472);

      return result_3288334538;

    }
    
function HEX3Aanonymous_3288334676(e_3288334677) {
        invoke_3288334700(self_3288334472.onResized, true);

      
    }
    
function HEX3Aanonymous_3288334747(e_3288334748) {
        var ke_3288334749 = e_3288334748;
        var modifiers_3288334750 = getModifiers_3288334413(ke_3288334749);
        var input_3288334751 = toInput_3288334407(ke_3288334749.key, ke_3288334749.code, ke_3288334749.keyCode);
        invoke_3288334774(self_3288334472.onKeyPress, {Field0: input_3288334751, Field1: nimCopy(null, modifiers_3288334750, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3288334839(e_3288334840) {
        var we_3288334841 = e_3288334840;
        var modifiers_3288334842 = getModifiers_3288334428(we_3288334841);
        invoke_3288335191(self_3288334472.onScroll, {Field0: vec2_2097152992(we_3288334841.clientX, we_3288334841.clientY), Field1: HEX2A_3288334878(vec2_2097152992(we_3288334841.deltaX, -(we_3288334841.deltaY)), 0.01), Field2: nimCopy(null, modifiers_3288334842, NTI2013265950)});

      
    }
    
function HEX3Aanonymous_3288335256(e_3288335257) {
        var me_3288335258 = e_3288335257;
        var modifiers_3288335259 = getModifiers_3288334428(me_3288335258);
        var mouseButton_3288335260 = getMouseButton_3288334459(me_3288335258);
        var currentTargetRect_3288335261 = me_3288335258.currentTarget.getBoundingClientRect();
        var x_3288335262 = (me_3288335258.pageX - currentTargetRect_3288335261.x);
        var y_3288335263 = (me_3288335258.pageY - currentTargetRect_3288335261.y);
        invoke_3288335286(self_3288334472.onMousePress, {Field0: mouseButton_3288335260, Field1: nimCopy(null, modifiers_3288335259, NTI2013265950), Field2: vec2_2097152992(x_3288335262, y_3288335263)});

      
    }
    
function HEX3Aanonymous_3288335333(e_3288335334) {
        var me_3288335335 = e_3288335334;
        var modifiers_3288335336 = getModifiers_3288334428(me_3288335335);
        invoke_3288335359(self_3288334472.onMouseMove, {Field0: vec2_2097152992(me_3288335335.clientX, me_3288335335.clientY), Field1: vec2_2097152992(me_3288335335.movementX, me_3288335335.movementY), Field2: nimCopy(null, modifiers_3288335336, NTI2013265950), Field3: getMouseButtons_3288334443(me_3288335335)});

      
    }

    self_3288334472.mFontSize = 18.0;
    self_3288334472.mLineHeight = 20.0;
    self_3288334472.mLineDistance = 2.0;
    self_3288334472.mCharWidth = 18.0;
    self_3288334472.escapedText = newLruCache_3288334473(1000, false);
    self_3288334472.layoutOptions.getTextBounds = HEX3Aanonymous_3288334536;
    window.addEventListener("resize", HEX3Aanonymous_3288334676, false);
    self_3288334472.content = document.getElementById("view");
    self_3288334472.content.addEventListener("keydown", HEX3Aanonymous_3288334747, false);
    self_3288334472.content.addEventListener("wheel", HEX3Aanonymous_3288334839, {passive: true, capture: false, once: false});
    self_3288334472.content.addEventListener("mousedown", HEX3Aanonymous_3288335256, false);
    self_3288334472.content.addEventListener("mousemove", HEX3Aanonymous_3288335333, false);
    updateFontSettings_3288334411(self_3288334472);
    self_3288334472.content.focus();

  
}

function init_2315255915(self_2315255916) {
  
}

function init_2315255917(self_2315255916) {
    chckNilDisp(self_2315255916);
    if (isObj(self_2315255916.m_type, NTI3288334342)) {
    init_3288334471(self_2315255916);
    }
    else {
    if (isObj(self_2315255916.m_type, NTI2315255812)) {
    init_2315255915(self_2315255916);
    }
    }

  
}

function deinit_3288335471(self_3288335472) {
  
}

function deinit_2315255918(self_2315255919) {
  
}

function deinit_2315255920(self_2315255919) {
    chckNilDisp(self_2315255919);
    if (isObj(self_2315255919.m_type, NTI3288334342)) {
    deinit_3288335471(self_2315255919);
    }
    else {
    if (isObj(self_2315255919.m_type, NTI2315255812)) {
    deinit_2315255918(self_2315255919);
    }
    }

  
}

function processEvents_3288335549(self_3288335550) {
  var result_3288335551 = 0;

    result_3288335551 = 0;

  return result_3288335551;

}

function processEvents_2315255921(self_2315255922) {
  var result_2315255923 = 0;

  return result_2315255923;

}

function processEvents_2315255924(self_2315255922) {
  var result_2315255925 = 0;

  BeforeRet: {
    chckNilDisp(self_2315255922);
    if (isObj(self_2315255922.m_type, NTI3288334342)) {
    result_2315255925 = processEvents_3288335549(self_2315255922);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255922.m_type, NTI2315255812)) {
    result_2315255925 = processEvents_2315255921(self_2315255922);
    break BeforeRet;
    }
    }
  };

  return result_2315255925;

}

function fontSizeHEX3D_2315255926(self_2315255927, fontSize_2315255928) {
  
}

function fontSizeHEX3D_2315255929(self_2315255927, fontSize_2315255928) {
    fontSizeHEX3D_2315255926(self_2315255927, fontSize_2315255928);

  
}

function lineDistanceHEX3D_2315255930(self_2315255931, lineDistance_2315255932) {
  
}

function lineDistanceHEX3D_2315255933(self_2315255931, lineDistance_2315255932) {
    lineDistanceHEX3D_2315255930(self_2315255931, lineDistance_2315255932);

  
}

function fontSize_3288335532(self_3288335533) {
  var result_3288335534 = 0.0;

    updateFontSettings_3288334411(self_3288335533);
    result_3288335534 = self_3288335533.mFontSize;

  return result_3288335534;

}

function fontSize_2315255934(self_2315255935) {
  var result_2315255936 = 0.0;

  return result_2315255936;

}

function fontSize_2315255937(self_2315255935) {
  var result_2315255938 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255935);
    if (isObj(self_2315255935.m_type, NTI3288334342)) {
    result_2315255938 = fontSize_3288335532(self_2315255935);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255935.m_type, NTI2315255812)) {
    result_2315255938 = fontSize_2315255934(self_2315255935);
    break BeforeRet;
    }
    }
  };

  return result_2315255938;

}

function lineDistance_3288335535(self_3288335536) {
  var result_3288335537 = 0.0;

    updateFontSettings_3288334411(self_3288335536);
    result_3288335537 = self_3288335536.mLineDistance;

  return result_3288335537;

}

function lineDistance_2315255939(self_2315255940) {
  var result_2315255941 = 0.0;

  return result_2315255941;

}

function lineDistance_2315255942(self_2315255940) {
  var result_2315255943 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255940);
    if (isObj(self_2315255940.m_type, NTI3288334342)) {
    result_2315255943 = lineDistance_3288335535(self_2315255940);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255940.m_type, NTI2315255812)) {
    result_2315255943 = lineDistance_2315255939(self_2315255940);
    break BeforeRet;
    }
    }
  };

  return result_2315255943;

}

function lineHeight_3288335538(self_3288335539) {
  var result_3288335540 = 0.0;

    updateFontSettings_3288334411(self_3288335539);
    result_3288335540 = self_3288335539.mLineHeight;

  return result_3288335540;

}

function lineHeight_2315255944(self_2315255945) {
  var result_2315255946 = 0.0;

  return result_2315255946;

}

function lineHeight_2315255947(self_2315255945) {
  var result_2315255948 = 0.0;

  BeforeRet: {
    chckNilDisp(self_2315255945);
    if (isObj(self_2315255945.m_type, NTI3288334342)) {
    result_2315255948 = lineHeight_3288335538(self_2315255945);
    break BeforeRet;
    }
    else {
    if (isObj(self_2315255945.m_type, NTI2315255812)) {
    result_2315255948 = lineHeight_2315255944(self_2315255945);
    break BeforeRet;
    }
    }
  };

  return result_2315255948;

}

function measureText_2315255954(self_2315255955, text_2315255956) {
  var result_2315255957 = ({arr: new Float32Array(2)});

  return result_2315255957;

}

function measureText_2315255958(self_2315255955, text_2315255956) {
  var result_2315255959 = ({arr: new Float32Array(2)});

  BeforeRet: {
    result_2315255959 = nimCopy(result_2315255959, measureText_2315255954(self_2315255955, text_2315255956), NTI2097152387);
    break BeforeRet;
  };

  return result_2315255959;

}

function init_2785017885(self_2785017886, path_2785017887) {
    loadScript("config.js");

  
}

function init_2650800137(self_2650800138, path_2650800139) {
  
}

function init_2650800140(self_2650800138, path_2650800139) {
    chckNilDisp(self_2650800138);
    if (isObj(self_2650800138.m_type, NTI2785017860)) {
    init_2785017885(self_2650800138, path_2650800139);
    }
    else {
    if (isObj(self_2650800138.m_type, NTI2650800132)) {
    init_2650800137(self_2650800138, path_2650800139);
    }
    }

  
}

function reload_2785017888(self_2785017889) {
  
}

function reload_2650800141(self_2650800142) {
  
}

function reload_2650800143(self_2650800142) {
    chckNilDisp(self_2650800142);
    if (isObj(self_2650800142.m_type, NTI2785017860)) {
    reload_2785017888(self_2650800142);
    }
    else {
    if (isObj(self_2650800142.m_type, NTI2650800132)) {
    reload_2650800141(self_2650800142);
    }
    }

  
}

function isReadOnly_2701131831(self_2701131832) {
  var result_2701131833 = false;

    result_2701131833 = false;

  return result_2701131833;

}

function isReadOnly_2684354572(self_2684354573) {
  var result_2684354574 = false;

    result_2684354574 = false;

  return result_2684354574;

}

function isReadOnly_2667577355(self_2667577356) {
  var result_2667577357 = false;

    result_2667577357 = true;

  return result_2667577357;

}

function isReadOnly_2667577358(self_2667577356) {
  var result_2667577359 = false;

  BeforeRet: {
    chckNilDisp(self_2667577356);
    if (isObj(self_2667577356.m_type, NTI2701131780)) {
    result_2667577359 = isReadOnly_2701131831(self_2667577356);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577356.m_type, NTI2684354564)) {
    result_2667577359 = isReadOnly_2684354572(self_2667577356);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577356.m_type, NTI2667577352)) {
    result_2667577359 = isReadOnly_2667577355(self_2667577356);
    break BeforeRet;
    }
    }}
  };

  return result_2667577359;

}

function getAccessToken_2701131806() {
  var result_2701131808 = ({val: [], has: false});

  BeforeRet: {
    var token_2701131809 = loadApplicationFile_2499805202(fs_2499805237, [71,105,116,104,117,98,65,99,99,101,115,115,84,111,107,101,110]);
    if ((0 < (token_2701131809).length)) {
    result_2701131808 = nimCopy(result_2701131808, some_2701131810(token_2701131809), NTI2768240657);
    break BeforeRet;
    }
    
    result_2701131808 = nimCopy(result_2701131808, none_2768240658(), NTI2768240657);
    break BeforeRet;
  };

  return result_2701131808;

}

function get_2768240690(self_2768240692, otherwise_2768240693) {
    var Temporary1;

  var result_2768240694 = [];

    if (isSome_2768240699(self_2768240692)) {
    Temporary1 = self_2768240692.val;
    }
    else {
    Temporary1 = otherwise_2768240693;
    }
    
    result_2768240694 = nimCopy(null, Temporary1, NTI33554449);

  return result_2768240694;

}
async function httpGet_2768240651(url_2768240652, authToken_2768240666) {
  var result_2768240668 = null;

  BeforeRet: {
    var cstr_2768240708 = (await getAsyncJs(toJSStr(url_2768240652), toJSStr(get_2768240690(authToken_2768240666, []))));
    result_2768240668 = cstrToNimstr(cstr_2768240708);
    break BeforeRet;
  };

  return result_2768240668;

}

function decode_2734686703(s_2734686704) {
    
function decodeSize_2734686706(size_2734686707) {
      var result_2734686708 = 0;

      BeforeRet: {
        result_2734686708 = addInt(divInt(mulInt(size_2734686707, 3), 4), 6);
        break BeforeRet;
      };

      return result_2734686708;

    }
    var Temporary1;

  var result_2734686705 = [];

  BeforeRet: {
    if (((s_2734686704).length == 0)) {
    break BeforeRet;
    }
    
    if (result_2734686705.length < (Temporary1 = chckRange(decodeSize_2734686706((s_2734686704).length), 0, 2147483647), Temporary1)) { for (var i = result_2734686705.length; i < Temporary1; ++i) result_2734686705.push(0); }
         else {result_2734686705.length = Temporary1; };
    var inputIndex_2734686713 = 0;
    var outputIndex_2734686714 = 0;
    var inputLen_2734686715 = (s_2734686704).length;
    var inputEnds_2734686716 = 0;
    Label2: {
        Label3: while (true) {
        if (!(ConstSet313[s_2734686704[chckIndx(subInt(inputLen_2734686715, 1), 0, (s_2734686704).length - 1)]] != undefined)) break Label3;
          inputLen_2734686715 = subInt(inputLen_2734686715, 1);
        }
    };
    inputEnds_2734686716 = subInt(inputLen_2734686715, 4);
    Label4: {
        Label5: while (true) {
        if (!(inputIndex_2734686713 <= inputEnds_2734686716)) break Label5;
          Label6: {
              Label7: while (true) {
              if (!(ConstSet314[s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]] != undefined)) break Label7;
                inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
              }
          };
          var a_2734686738 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((a_2734686738 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          var b_2734686751 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((b_2734686751 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          var c_2734686764 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((c_2734686764 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          var d_2734686777 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
          if ((d_2734686777 == 255)) {
          raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
          }
          
          inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
          result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((a_2734686738 << 2) | (b_2734686751 >> 4)) & 255), 0, 255);
          outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
          result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((b_2734686751 << 4) | (c_2734686764 >> 2)) & 255), 0, 255);
          outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
          result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((c_2734686764 << 6) | (d_2734686777 >> 0)) & 255), 0, 255);
          outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
        }
    };
    var leftLen_2734686826 = absInt(modInt(subInt(inputIndex_2734686713, inputLen_2734686715), 4));
    if ((leftLen_2734686826 == 2)) {
    var a_2734686830 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((a_2734686830 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    var b_2734686843 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((b_2734686843 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((a_2734686830 << 2) | (b_2734686843 >> 4)) & 255), 0, 255);
    outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
    }
    else {
    if ((leftLen_2734686826 == 3)) {
    var a_2734686869 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((a_2734686869 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    var b_2734686882 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((b_2734686882 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    var c_2734686895 = ((decodeTable_2734686693[chckIndx(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)], 0, (decodeTable_2734686693).length - 1)]) | 0);
    if ((c_2734686895 == 255)) {
    raiseException({message: ([73,110,118,97,108,105,100,32,98,97,115,101,54,52,32,102,111,114,109,97,116,32,99,104,97,114,97,99,116,101,114,32,96] || []).concat([s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]],[96,32,40,111,114,100,32] || [],HEX24_369098760(s_2734686704[chckIndx(inputIndex_2734686713, 0, (s_2734686704).length - 1)]) || [],[41,32,97,116,32,108,111,99,97,116,105,111,110,32] || [],HEX24_369098760(inputIndex_2734686713) || [],[46] || []), parent: null, m_type: NTI134217746, name: null, trace: [], up: null}, "ValueError");
    }
    
    inputIndex_2734686713 = addInt(inputIndex_2734686713, 1);
    result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((a_2734686869 << 2) | (b_2734686882 >> 4)) & 255), 0, 255);
    outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
    result_2734686705[chckIndx(outputIndex_2734686714, 0, (result_2734686705).length - 1)] = chckRange((((b_2734686882 << 4) | (c_2734686895 >> 2)) & 255), 0, 255);
    outputIndex_2734686714 = addInt(outputIndex_2734686714, 1);
    }
    }
    if (result_2734686705.length < chckRange(outputIndex_2734686714, 0, 2147483647)) { for (var i = result_2734686705.length; i < chckRange(outputIndex_2734686714, 0, 2147483647); ++i) result_2734686705.push(0); }
         else {result_2734686705.length = chckRange(outputIndex_2734686714, 0, 2147483647); };
  };

  return result_2734686705;

}
async function loadFile_2701131837(self_2701131838, relativePath_2701131839) {
    var Temporary1;

  var result_2701131841 = null;

  BeforeRet: {
    if (nsuStartsWith(relativePath_2701131839, [46,47])) {
    Temporary1 = HEX5BHEX5D_855639319(relativePath_2701131839, HEX2EHEX2E_1040187488(2, 1));
    }
    else {
    Temporary1 = relativePath_2701131839;
    }
    
    var relativePath_2701131869 = nimCopy(null, Temporary1, NTI33554449);
    var url_2701131870 = (self_2701131838.baseUrl || []).concat([47,99,111,110,116,101,110,116,115,47] || [],relativePath_2701131869 || [],[63,114,101,102,61] || [],self_2701131838.branchOrHash || []);
    var fmtRes_2701131875 = [mnewString(0)];
    fmtRes_2701131875[0].push.apply(fmtRes_2701131875[0], [91,103,105,116,104,117,98,93,32,108,111,97,100,70,105,108,101,32,39]);;
    formatValue_721420459(fmtRes_2701131875, 0, url_2701131870, []);
    fmtRes_2701131875[0].push.apply(fmtRes_2701131875[0], [39]);;
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2701131875[0], NTI33554449)]);
    var token_2701131876 = getAccessToken_2701131806();
    var response_2701131881 = (await httpGet_2768240651(url_2701131870, token_2701131876));
++excHandler;
    try {
    var jsn_2701131882 = parseJson_1627395313(response_2701131881);
    if (hasKey_1627393154(jsn_2701131882, [99,111,110,116,101,110,116])) {
    var contentBase64_2701131883 = getStr_1627390106(HEX5BHEX5D_1627393037(jsn_2701131882, [99,111,110,116,101,110,116]), []);
    var content_2701131884 = decode_2734686703(contentBase64_2701131883);
    result_2701131841 = content_2701131884;
    break BeforeRet;
    }
    
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2701131892 = [mnewString(0)];
    fmtRes_2701131892[0].push.apply(fmtRes_2701131892[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2701131892, 0, response_2701131881, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2701131892[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2701131841 = [];
    break BeforeRet;
  };

  return result_2701131841;

}

function open_503316852(f_503316853, f_503316853_Idx, filename_503316854, mode_503316855, bufSize_503316856) {
    var Temporary1;

  var result_503316857 = false;

    var p_503316858 = (Temporary1 = fopen(toJSStr(filename_503316854), FormatOpen_503316842[chckIndx(mode_503316855, 0, (FormatOpen_503316842).length - 1)]), Temporary1)[0], p_503316858_Idx = Temporary1[1];
    if (!((p_503316858 == null && p_503316858_Idx == 0))) {
    var f2_503316859 = p_503316858;
    result_503316857 = true;
    f_503316853[f_503316853_Idx] = p_503316858;
    if (((0 < bufSize_503316856) && ((bufSize_503316856 >>> 0) <= 4294967295))) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IOFBF, (bufSize_503316856 >>> 0));
    }
    else {
    if ((bufSize_503316856 == 0)) {
    var _ = setvbuf(f_503316853[f_503316853_Idx], null, 0, _IONBF, 0);
    }
    }
    }
    

  return result_503316857;

}

function rawFileSize_503316808(file_503316809) {
  var result_503316810 = 0;

    var oldPos_503316811 = ftello(file_503316809);
    var _ = fseeko(file_503316809, 0, 2);
    result_503316810 = ftello(file_503316809);
    var _ = fseeko(file_503316809, oldPos_503316811, 0);

  return result_503316810;

}

function raiseEIO_503316567(msg_503316568) {
    raiseException({message: nimCopy(null, msg_503316568, NTI33554449), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");

  
}

function checkErr_503316612(f_503316613) {
    if (!((ferror(f_503316613) == 0))) {
    var msg_503316614 = ([101,114,114,110,111,58,32] || []).concat(HEX24_369098760(((errno) | 0)) || [],[32,96] || [],cstrToNimstr(strerror(errno)) || [],[96] || []);
    clearerr(f_503316613);
    raiseEIO_503316567(msg_503316614);
    }
    

  
}

function readBuffer_503316615(f_503316616, buffer_503316617, buffer_503316617_Idx, len_503316618) {
  var result_503316619 = 0;

    result_503316619 = (fread(buffer_503316617, buffer_503316617_Idx, 1, (len_503316618 >>> 0), f_503316616) | 0);
    if (!((result_503316619 == len_503316618))) {
    checkErr_503316612(f_503316616);
    }
    

  return result_503316619;

}

function endOfFile_503316812(f_503316813) {
  var result_503316814 = false;

  BeforeRet: {
    var c_503316815 = fgetc(f_503316813);
    var _ = ungetc(c_503316815, f_503316813);
    result_503316814 = (c_503316815 < 0);
    break BeforeRet;
  };

  return result_503316814;

}

function readAllBuffer_503316803(file_503316804) {
  var result_503316805 = [];

    result_503316805 = nimCopy(null, [], NTI33554449);
    var buffer_503316806 = mnewString(4000);
    Label1: {
        Label2: while (true) {
        if (!true) break Label2;
          var bytesRead_503316807 = readBuffer_503316615(file_503316804, buffer_503316806, chckIndx(0, 0, (buffer_503316806).length - 1), 4000);
          if ((bytesRead_503316807 == 4000)) {
          result_503316805.push.apply(result_503316805, buffer_503316806);;
          }
          else {
            if (buffer_503316806.length < chckRange(bytesRead_503316807, 0, 2147483647)) { for (var i = buffer_503316806.length; i < chckRange(bytesRead_503316807, 0, 2147483647); ++i) buffer_503316806.push(0); }
         else {buffer_503316806.length = chckRange(bytesRead_503316807, 0, 2147483647); };
            result_503316805.push.apply(result_503316805, buffer_503316806);;
            break Label1;
          }
          
        }
    };

  return result_503316805;

}

function readAllFile_503316816(file_503316817, len_503316818) {
  var result_503316819 = [];

    result_503316819 = nimCopy(null, mnewString(chckRange(len_503316818, 0, 2147483647)), NTI33554449);
    var bytes_503316820 = readBuffer_503316615(file_503316817, result_503316819, chckIndx(0, 0, (result_503316819).length - 1), chckRange(len_503316818, 0, 2147483647));
    if (endOfFile_503316812(file_503316817)) {
    if ((bytes_503316820 < len_503316818)) {
    if (result_503316819.length < chckRange(bytes_503316820, 0, 2147483647)) { for (var i = result_503316819.length; i < chckRange(bytes_503316820, 0, 2147483647); ++i) result_503316819.push(0); }
         else {result_503316819.length = chckRange(bytes_503316820, 0, 2147483647); };
    }
    
    }
    else {
    result_503316819.push.apply(result_503316819, readAllBuffer_503316803(file_503316817));;
    }
    

  return result_503316819;

}

function readAll_503316825(file_503316826) {
  var result_503316827 = [];

    var len_503316828 = rawFileSize_503316808(file_503316826);
    if ((0 < len_503316828)) {
    result_503316827 = nimCopy(null, readAllFile_503316816(file_503316826, len_503316828), NTI33554449);
    }
    else {
      result_503316827 = nimCopy(null, readAllBuffer_503316803(file_503316826), NTI33554449);
    }
    

  return result_503316827;

}

function close_503316691(f_503316692) {
    if (!((f_503316692 == null))) {
    var _ = fclose(f_503316692);
    }
    

  
}

function readFile_503316918(filename_503316919) {
  var result_503316920 = [];

    var f_503316921 = [null];
    if (open_503316852(f_503316921, 0, filename_503316919, 0, -1)) {
    try {
    result_503316920 = nimCopy(null, readAll_503316825(f_503316921[0]), NTI33554449);
    } finally {
    close_503316691(f_503316921[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316919 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  return result_503316920;

}

function getAbsolutePath_2684354568(self_2684354569, relativePath_2684354570) {
  var result_2684354571 = [];

    result_2684354571 = nimCopy(null, HEX2F_1426063446(self_2684354569.path, relativePath_2684354570), NTI33554449);

  return result_2684354571;

}
async function loadFile_2684354596(self_2684354597, relativePath_2684354598) {
  var result_2684354600 = null;

  BeforeRet: {
    result_2684354600 = readFile_503316918(getAbsolutePath_2684354568(self_2684354597, relativePath_2684354598));
    break BeforeRet;
  };

  return result_2684354600;

}

function loadFile_2667577360(self_2667577361, relativePath_2667577362) {
  var result_2667577365 = null;

  return result_2667577365;

}

function loadFile_2667577366(self_2667577361, relativePath_2667577362) {
  var result_2667577367 = null;

  BeforeRet: {
    chckNilDisp(self_2667577361);
    if (isObj(self_2667577361.m_type, NTI2701131780)) {
    result_2667577367 = loadFile_2701131837(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577361.m_type, NTI2684354564)) {
    result_2667577367 = loadFile_2684354596(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577361.m_type, NTI2667577352)) {
    result_2667577367 = loadFile_2667577360(self_2667577361, relativePath_2667577362);
    break BeforeRet;
    }
    }}
  };

  return result_2667577367;

}
async function saveFile_2701131897(self_2701131898, relativePath_2701131899, content_2701131900) {
  var result_2701131902 = null;

  BeforeRet: {
    result_2701131902 = undefined;
    break BeforeRet;
  };

  return result_2701131902;

}

function writeBuffer_503316646(f_503316647, buffer_503316648, buffer_503316648_Idx, len_503316649) {
  var result_503316650 = 0;

    result_503316650 = (fwrite(buffer_503316648, buffer_503316648_Idx, 1, (len_503316649 >>> 0), f_503316647) | 0);
    checkErr_503316612(f_503316647);

  return result_503316650;

}

function write_503316684(f_503316685, s_503316686) {
    if (!((writeBuffer_503316646(f_503316685, toJSStr(s_503316686), chckRange((s_503316686).length, 0, 2147483647)) == (s_503316686).length))) {
    raiseEIO_503316567([99,97,110,110,111,116,32,119,114,105,116,101,32,115,116,114,105,110,103,32,116,111,32,102,105,108,101]);
    }
    

  
}

function writeFile_503316923(filename_503316924, content_503316925) {
    var f_503316926 = [null];
    if (open_503316852(f_503316926, 0, filename_503316924, 1, -1)) {
    try {
    write_503316684(f_503316926[0], content_503316925);
    } finally {
    close_503316691(f_503316926[0]);
    }
    }
    else {
      raiseException({message: ([99,97,110,110,111,116,32,111,112,101,110,58,32] || []).concat(filename_503316924 || []), parent: null, m_type: NTI134217736, name: null, trace: [], up: null}, "IOError");
    }
    

  
}
async function saveFile_2684354623(self_2684354624, relativePath_2684354625, content_2684354626) {
  var result_2684354628 = null;

  BeforeRet: {
    writeFile_503316923(getAbsolutePath_2684354568(self_2684354624, relativePath_2684354625), content_2684354626);
    result_2684354628 = undefined;
    break BeforeRet;
  };

  return result_2684354628;

}

function saveFile_2667577368(self_2667577369, relativePath_2667577370, content_2667577371) {
  var result_2667577373 = null;

  return result_2667577373;

}

function saveFile_2667577374(self_2667577369, relativePath_2667577370, content_2667577371) {
  var result_2667577375 = null;

  BeforeRet: {
    chckNilDisp(self_2667577369);
    if (isObj(self_2667577369.m_type, NTI2701131780)) {
    result_2667577375 = saveFile_2701131897(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577369.m_type, NTI2684354564)) {
    result_2667577375 = saveFile_2684354623(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577369.m_type, NTI2667577352)) {
    result_2667577375 = saveFile_2667577368(self_2667577369, relativePath_2667577370, content_2667577371);
    break BeforeRet;
    }
    }}
  };

  return result_2667577375;

}

function rawGet_2701132053(t_2701132056, key_2701132057, hc_2701132058, hc_2701132058_Idx) {
  var result_2701132059 = 0;

  BeforeRet: {
    hc_2701132058[hc_2701132058_Idx] = hash_1325400491(key_2701132057);
    if ((hc_2701132058[hc_2701132058_Idx] == 0)) {
    hc_2701132058[hc_2701132058_Idx] = 314159265;
    }
    
    if (((t_2701132056.data).length == 0)) {
    result_2701132059 = -1;
    break BeforeRet;
    }
    
    var h_2701132111 = (hc_2701132058[hc_2701132058_Idx] & (t_2701132056.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2701132056.data[chckIndx(h_2701132111, 0, (t_2701132056.data).length - 1)].Field0)) break Label2;
          if (((t_2701132056.data[chckIndx(h_2701132111, 0, (t_2701132056.data).length - 1)].Field0 == hc_2701132058[hc_2701132058_Idx]) && eqStrings(t_2701132056.data[chckIndx(h_2701132111, 0, (t_2701132056.data).length - 1)].Field1, key_2701132057))) {
          result_2701132059 = h_2701132111;
          break BeforeRet;
          }
          
          h_2701132111 = nextTry_1308622883(h_2701132111, (t_2701132056.data).length - 1);
        }
    };
    result_2701132059 = subInt(-1, h_2701132111);
  };

  return result_2701132059;

}

function hasKey_2701132046(t_2701132049, key_2701132050) {
  var result_2701132051 = false;

    var hc_2701132052 = [0];
    result_2701132051 = (0 <= rawGet_2701132053(t_2701132049, key_2701132050, hc_2701132052, 0));

  return result_2701132051;

}

function contains_2701132040(t_2701132043, key_2701132044) {
  var result_2701132045 = false;

  BeforeRet: {
    result_2701132045 = hasKey_2701132046(t_2701132043, key_2701132044);
    break BeforeRet;
  };

  return result_2701132045;

}

function HEX5BHEX5D_2701132345(t_2701132348, key_2701132349) {
  var result_2701132350 = null;

    var hcHEX60gensym22_2701132351 = [0];
    var indexHEX60gensym22_2701132358 = rawGet_2701132053(t_2701132348, key_2701132349, hcHEX60gensym22_2701132351, 0);
    if ((0 <= indexHEX60gensym22_2701132358)) {
    result_2701132350 = t_2701132348.data[chckIndx(indexHEX60gensym22_2701132358, 0, (t_2701132348.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2701132349);
    }
    

  return result_2701132350;

}

function hasKey_1795162450(t_1795162453, key_1795162454) {
  var result_1795162455 = false;

    var hc_1795162456 = [0];
    result_1795162455 = (0 <= rawGet_1795162457(t_1795162453, key_1795162454, hc_1795162456, 0));

  return result_1795162455;

}

function contains_2348810883(t_2348810886, key_2348810887) {
  var result_2348810888 = false;

  BeforeRet: {
    result_2348810888 = hasKey_1795162450(t_2348810886, key_2348810887);
    break BeforeRet;
  };

  return result_2348810888;

}

function HEX5BHEX5D_1795163814(t_1795163817, key_1795163818) {
  var result_1795163819 = null;
  var result_1795163819_Idx = 0;

    var hcHEX60gensym22_1795163820 = [0];
    var indexHEX60gensym22_1795163827 = rawGet_1795162457(t_1795163817, key_1795163818, hcHEX60gensym22_1795163820, 0);
    if ((0 <= indexHEX60gensym22_1795163827)) {
    result_1795163819 = t_1795163817.data[chckIndx(indexHEX60gensym22_1795163827, 0, (t_1795163817.data).length - 1)]; result_1795163819_Idx = "Field2";
    }
    else {
    raiseKeyError_1627392893(key_1795163818);
    }
    

  return [result_1795163819, result_1795163819_Idx];

}

function parseDirectoryListing_2701131908(self_2701131909, basePath_2701131910, jsn_2701131911) {
        var Temporary3;

  var result_2701131912 = ({files: [], folders: []});

    if ((hasKey_1627393154(jsn_2701131911, [116,114,101,101]) && (HEX5BHEX5D_1627393037(jsn_2701131911, [116,114,101,101]).kind == 6))) {
    var tree_2701131917 = HEX5BHEX5D_1627393037(jsn_2701131911, [116,114,101,101]);
    Label1: {
      var item_2701131918 = null;
      if (!((tree_2701131917.kind == 6))) {
      failedAssertImpl_268435515((makeNimstrLit("json.nim(823, 3) `node.kind == JArray` : items() can not iterate a JsonNode of kind ") || []).concat(reprEnum(tree_2701131917.kind, NTI1627389955) || []));
      }
      
      Label2: {
        var i_536872548 = null;
        var colontmp__536872549 = [];
        var Temporary3 = tree_2701131917;
        if (ConstSet315[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'elems\' is not accessible for type \'JsonNodeObj\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI1627389955)); }
        colontmp__536872549 = Temporary3.elems;
        var i_536872550 = 0;
        var L_536872551 = (colontmp__536872549).length;
        Label4: {
            Label5: while (true) {
            if (!(i_536872550 < L_536872551)) break Label5;
              i_536872548 = colontmp__536872549[chckIndx(i_536872550, 0, (colontmp__536872549).length - 1)];
              item_2701131918 = i_536872548;
              Label6: {
                if (!((item_2701131918.kind == 5))) {
                break Label6;
                }
                
                var path_2701131923 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [112,97,116,104]), []);
                var typ_2701131924 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [116,121,112,101]), []);
                var url_2701131925 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [117,114,108]), []);
                var sha_2701131926 = getStr_1627390106(HEX5BHEX5D_1627393037(item_2701131918, [115,104,97]), []);
                HEX5BHEX5DHEX3D_1795162732(self_2701131909.pathToSha, HEX2F_1426063446(basePath_2701131910, path_2701131923), sha_2701131926);
                switch (toJSStr(typ_2701131924)) {
                case "blob":
                  var Temporary7 = nimCopy(null, path_2701131923, NTI33554449);
                  result_2701131912.files.push(Temporary7);;
                  break;
                case "tree":
                  var Temporary8 = nimCopy(null, path_2701131923, NTI33554449);
                  result_2701131912.folders.push(Temporary8);;
                  break;
                default: 
                  break;
                }
              };
              i_536872550 = addInt(i_536872550, 1);
              if (!(((colontmp__536872549).length == L_536872551))) {
              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        };
      };
    };
    }
    

  return result_2701131912;

}

function mustRehash_2701132767(t_2701132769) {
  var result_2701132770 = false;

    if (!((t_2701132769.counter < (t_2701132769.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2701132770 = ((mulInt((t_2701132769.data).length, 2) < mulInt(t_2701132769.counter, 3)) || (subInt((t_2701132769.data).length, t_2701132769.counter) < 4));

  return result_2701132770;

}

function rawInsert_2701133216(t_2701133220, data_2701133221, data_2701133221_Idx, key_2701133222, val_2701133223, hc_2701133224, h_2701133225) {
    data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field1 = nimCopy(null, key_2701133222, NTI33554449);
    data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field2 = nimCopy(data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field2, val_2701133223, NTI2667577349);
    data_2701133221[data_2701133221_Idx][chckIndx(h_2701133225, 0, (data_2701133221[data_2701133221_Idx]).length - 1)].Field0 = hc_2701133224;

  
}

function enlarge_2701132922(t_2701132925) {
    var n_2701132928 = [];
    n_2701132928 = new Array(chckRange(mulInt((t_2701132925.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2701132925.data).length, 2), 0, 2147483647) ; ++i) { n_2701132928[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    var Temporary1 = t_2701132925.data; t_2701132925.data = n_2701132928; n_2701132928 = Temporary1;    Label2: {
      var i_2701132992 = 0;
      var colontmp__536872555 = 0;
      colontmp__536872555 = (n_2701132928).length - 1;
      var res_536872556 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872556 <= colontmp__536872555)) break Label4;
            i_2701132992 = res_536872556;
            var eh_2701133046 = n_2701132928[chckIndx(i_2701132992, 0, (n_2701132928).length - 1)].Field0;
            if (isFilled_1308622880(eh_2701133046)) {
            var j_2701133050 = (eh_2701133046 & (t_2701132925.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2701132925.data[chckIndx(j_2701133050, 0, (t_2701132925.data).length - 1)].Field0)) break Label6;
                  j_2701133050 = nextTry_1308622883(j_2701133050, (t_2701132925.data).length - 1);
                }
            };
            rawInsert_2701133216(t_2701132925, t_2701132925, "data", n_2701132928[chckIndx(i_2701132992, 0, (n_2701132928).length - 1)].Field1, n_2701132928[chckIndx(i_2701132992, 0, (n_2701132928).length - 1)].Field2, eh_2701133046, j_2701133050);
            }
            
            res_536872556 = addInt(res_536872556, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2701133394(t_2701133397, key_2701133398, hc_2701133399) {
  var result_2701133400 = 0;

  BeforeRet: {
    if (((t_2701133397.data).length == 0)) {
    result_2701133400 = -1;
    break BeforeRet;
    }
    
    var h_2701133451 = (hc_2701133399 & (t_2701133397.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2701133397.data[chckIndx(h_2701133451, 0, (t_2701133397.data).length - 1)].Field0)) break Label2;
          if (((t_2701133397.data[chckIndx(h_2701133451, 0, (t_2701133397.data).length - 1)].Field0 == hc_2701133399) && eqStrings(t_2701133397.data[chckIndx(h_2701133451, 0, (t_2701133397.data).length - 1)].Field1, key_2701133398))) {
          result_2701133400 = h_2701133451;
          break BeforeRet;
          }
          
          h_2701133451 = nextTry_1308622883(h_2701133451, (t_2701133397.data).length - 1);
        }
    };
    result_2701133400 = subInt(-1, h_2701133451);
  };

  return result_2701133400;

}

function HEX5BHEX5DHEX3D_2701132594(t_2701132597, key_2701132598, val_2701132599) {
    if (((t_2701132597.data).length == 0)) {
    var correctSizeHEX60gensym21_2701132648 = slotsNeeded_1308622891(32);
    t_2701132597.counter = 0;
    t_2701132597.data = new Array(chckRange(correctSizeHEX60gensym21_2701132648, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym21_2701132648, 0, 2147483647) ; ++i) { t_2701132597.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }    }
    
    var hc_2701132653 = [0];
    var index_2701132660 = rawGet_2701132053(t_2701132597, key_2701132598, hc_2701132653, 0);
    if ((0 <= index_2701132660)) {
    t_2701132597.data[chckIndx(index_2701132660, 0, (t_2701132597.data).length - 1)].Field2 = nimCopy(t_2701132597.data[chckIndx(index_2701132660, 0, (t_2701132597.data).length - 1)].Field2, val_2701132599, NTI2667577349);
    }
    else {
      if (((t_2701132597.data).length == 0)) {
      var correctSizeHEX60gensym24_2701132762 = slotsNeeded_1308622891(32);
      t_2701132597.counter = 0;
      t_2701132597.data = new Array(chckRange(correctSizeHEX60gensym24_2701132762, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym24_2701132762, 0, 2147483647) ; ++i) { t_2701132597.data[i] = {Field0: 0, Field1: [], Field2: ({files: [], folders: []})}; }      }
      
      if (mustRehash_2701132767(t_2701132597)) {
      enlarge_2701132922(t_2701132597);
      index_2701132660 = rawGetKnownHC_2701133394(t_2701132597, key_2701132598, hc_2701132653[0]);
      }
      
      index_2701132660 = subInt(-1, index_2701132660);
      rawInsert_2701133216(t_2701132597, t_2701132597, "data", key_2701132598, val_2701132599, hc_2701132653[0], index_2701132660);
      t_2701132597.counter = addInt(t_2701132597.counter, 1);
    }
    

  
}
async function getDirectoryListing_2701131984(self_2701131985, relativePath_2701131986) {
    var Temporary1;
    var Temporary2;

  var result_2701131988 = null;

  BeforeRet: {
    if (contains_2701132040(self_2701131985.cachedDirectoryListings, relativePath_2701131986)) {
    result_2701131988 = HEX5BHEX5D_2701132345(self_2701131985.cachedDirectoryListings, relativePath_2701131986);
    break BeforeRet;
    }
    
    var fmtRes_2701132431 = [mnewString(0)];
    fmtRes_2701132431[0].push.apply(fmtRes_2701132431[0], [91,103,105,116,104,117,98,93,32,103,101,116,68,105,114,101,99,116,111,114,121,76,105,115,116,105,110,103,32,102,111,114,32]);;
    formatValue_721420459(fmtRes_2701132431, 0, self_2701131985.baseUrl, []);
    log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2701132431[0], NTI33554449)]);
    var token_2701132432 = getAccessToken_2701131806();
    if ((((relativePath_2701131986).length == 0) || eqStrings(relativePath_2701131986, [46]))) {
    Temporary1 = (self_2701131985.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],self_2701131985.branchOrHash || []);
    }
    else {
    if (contains_2348810883(self_2701131985.pathToSha, relativePath_2701131986)) {
    Temporary1 = (self_2701131985.baseUrl || []).concat([47,103,105,116,47,116,114,101,101,115,47] || [],(Temporary2 = HEX5BHEX5D_1795163814(self_2701131985.pathToSha, relativePath_2701131986), Temporary2)[0][Temporary2[1]] || []);
    }
    else {
      var fmtRes_2701132542 = [mnewString(0)];
      fmtRes_2701132542[0].push.apply(fmtRes_2701132542[0], [91,103,105,116,104,117,98,93,32,70,97,105,108,101,100,32,116,111,32,103,101,116,32,100,105,114,101,99,116,111,114,121,32,108,105,115,116,105,110,103,32,102,111,114,32,39]);;
      formatValue_721420459(fmtRes_2701132542, 0, relativePath_2701131986, []);
      fmtRes_2701132542[0].push.apply(fmtRes_2701132542[0], [39]);;
      log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2701132542[0], NTI33554449)]);
      result_2701131988 = {files: [], folders: []};
      break BeforeRet;
    }
    }
    var url_2701132546 = nimCopy(null, Temporary1, NTI33554449);
    var response_2701132551 = (await httpGet_2768240651(url_2701132546, token_2701132432));
++excHandler;
    try {
    var jsn_2701132552 = parseJson_1627395313(response_2701132551);
    var listing_2701132553 = parseDirectoryListing_2701131908(self_2701131985, relativePath_2701131986, jsn_2701132552);
    HEX5BHEX5DHEX3D_2701132594(self_2701131985.cachedDirectoryListings, relativePath_2701131986, listing_2701132553);
    result_2701131988 = listing_2701132553;
    break BeforeRet;
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    var fmtRes_2701133639 = [mnewString(0)];
    fmtRes_2701133639[0].push.apply(fmtRes_2701133639[0], [70,97,105,108,101,100,32,116,111,32,112,97,114,115,101,32,103,105,116,104,117,98,32,114,101,115,112,111,110,115,101,58,32]);;
    formatValue_721420459(fmtRes_2701133639, 0, response_2701132551, []);
    log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2701133639[0], NTI33554449)]);
    lastJSError = prevJSError;
    } finally {
    }
    result_2701131988 = {files: [], folders: []};
    break BeforeRet;
  };

  return result_2701131988;

}
async function getDirectoryListing_2684354646(self_2684354647, relativePath_2684354648) {
  var result_2684354650 = null;

  return result_2684354650;

}

function getDirectoryListing_2667577376(self_2667577377, relativePath_2667577378) {
  var result_2667577381 = null;

  return result_2667577381;

}

function getDirectoryListing_2667577382(self_2667577377, relativePath_2667577378) {
  var result_2667577383 = null;

  BeforeRet: {
    chckNilDisp(self_2667577377);
    if (isObj(self_2667577377.m_type, NTI2701131780)) {
    result_2667577383 = getDirectoryListing_2701131984(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577377.m_type, NTI2684354564)) {
    result_2667577383 = getDirectoryListing_2684354646(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    else {
    if (isObj(self_2667577377.m_type, NTI2667577352)) {
    result_2667577383 = getDirectoryListing_2667577376(self_2667577377, relativePath_2667577378);
    break BeforeRet;
    }
    }}
  };

  return result_2667577383;

}

function mustRehash_1291846239(t_1291846241) {
  var result_1291846242 = false;

    if (!((t_1291846241.counter < (t_1291846241.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_1291846242 = ((mulInt((t_1291846241.data).length, 2) < mulInt(t_1291846241.counter, 3)) || (subInt((t_1291846241.data).length, t_1291846241.counter) < 4));

  return result_1291846242;

}

function rawInsert_1291846688(t_1291846692, data_1291846693, data_1291846693_Idx, key_1291846694, val_1291846695, hc_1291846696, h_1291846697) {
    data_1291846693[data_1291846693_Idx][chckIndx(h_1291846697, 0, (data_1291846693[data_1291846693_Idx]).length - 1)].Field1 = key_1291846694;
    data_1291846693[data_1291846693_Idx][chckIndx(h_1291846697, 0, (data_1291846693[data_1291846693_Idx]).length - 1)].Field2 = val_1291846695;
    data_1291846693[data_1291846693_Idx][chckIndx(h_1291846697, 0, (data_1291846693[data_1291846693_Idx]).length - 1)].Field0 = hc_1291846696;

  
}

function enlarge_1291846394(t_1291846397) {
    var n_1291846400 = [];
    n_1291846400 = new Array(chckRange(mulInt((t_1291846397.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_1291846397.data).length, 2), 0, 2147483647) ; ++i) { n_1291846400[i] = {Field0: 0, Field1: 0, Field2: null}; }    var Temporary1 = t_1291846397.data; t_1291846397.data = n_1291846400; n_1291846400 = Temporary1;    Label2: {
      var i_1291846464 = 0;
      var colontmp__536872563 = 0;
      colontmp__536872563 = (n_1291846400).length - 1;
      var res_536872564 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872564 <= colontmp__536872563)) break Label4;
            i_1291846464 = res_536872564;
            var eh_1291846518 = n_1291846400[chckIndx(i_1291846464, 0, (n_1291846400).length - 1)].Field0;
            if (isFilled_1308622880(eh_1291846518)) {
            var j_1291846522 = (eh_1291846518 & (t_1291846397.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_1291846397.data[chckIndx(j_1291846522, 0, (t_1291846397.data).length - 1)].Field0)) break Label6;
                  j_1291846522 = nextTry_1308622883(j_1291846522, (t_1291846397.data).length - 1);
                }
            };
            rawInsert_1291846688(t_1291846397, t_1291846397, "data", n_1291846400[chckIndx(i_1291846464, 0, (n_1291846400).length - 1)].Field1, n_1291846400[chckIndx(i_1291846464, 0, (n_1291846400).length - 1)].Field2, eh_1291846518, j_1291846522);
            }
            
            res_536872564 = addInt(res_536872564, 1);
          }
      };
    };

  
}

function rawGetKnownHC_1291846857(t_1291846860, key_1291846861, hc_1291846862) {
  var result_1291846863 = 0;

  BeforeRet: {
    if (((t_1291846860.data).length == 0)) {
    result_1291846863 = -1;
    break BeforeRet;
    }
    
    var h_1291846914 = (hc_1291846862 & (t_1291846860.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_1291846860.data[chckIndx(h_1291846914, 0, (t_1291846860.data).length - 1)].Field0)) break Label2;
          if (((t_1291846860.data[chckIndx(h_1291846914, 0, (t_1291846860.data).length - 1)].Field0 == hc_1291846862) && (t_1291846860.data[chckIndx(h_1291846914, 0, (t_1291846860.data).length - 1)].Field1 == key_1291846861))) {
          result_1291846863 = h_1291846914;
          break BeforeRet;
          }
          
          h_1291846914 = nextTry_1308622883(h_1291846914, (t_1291846860.data).length - 1);
        }
    };
    result_1291846863 = subInt(-1, h_1291846914);
  };

  return result_1291846863;

}

function HEX5BHEX5DHEX3D_1291845830(t_1291845833, key_1291845834, val_1291845835) {
    if (((t_1291845833.data).length == 0)) {
    var correctSizeHEX60gensym1_1291845885 = slotsNeeded_1308622891(32);
    t_1291845833.counter = 0;
    t_1291845833.data = new Array(chckRange(correctSizeHEX60gensym1_1291845885, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym1_1291845885, 0, 2147483647) ; ++i) { t_1291845833.data[i] = {Field0: 0, Field1: 0, Field2: null}; }    }
    
    var hc_1291845890 = [0];
    var index_1291846132 = rawGet_1291845891(t_1291845833, key_1291845834, hc_1291845890, 0);
    if ((0 <= index_1291846132)) {
    t_1291845833.data[chckIndx(index_1291846132, 0, (t_1291845833.data).length - 1)].Field2 = val_1291845835;
    }
    else {
      if (((t_1291845833.data).length == 0)) {
      var correctSizeHEX60gensym6_1291846234 = slotsNeeded_1308622891(32);
      t_1291845833.counter = 0;
      t_1291845833.data = new Array(chckRange(correctSizeHEX60gensym6_1291846234, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym6_1291846234, 0, 2147483647) ; ++i) { t_1291845833.data[i] = {Field0: 0, Field1: 0, Field2: null}; }      }
      
      if (mustRehash_1291846239(t_1291845833)) {
      enlarge_1291846394(t_1291845833);
      index_1291846132 = rawGetKnownHC_1291846857(t_1291845833, key_1291845834, hc_1291845890[0]);
      }
      
      index_1291846132 = subInt(-1, index_1291846132);
      rawInsert_1291846688(t_1291845833, t_1291845833, "data", key_1291845834, val_1291845835, hc_1291845890[0], index_1291846132);
      t_1291845833.counter = addInt(t_1291845833.counter, 1);
    }
    

  
}

function registerEditor_1291845787(self_1291845788, editor_1291845789) {
    HEX5BHEX5DHEX3D_1291845830(self_1291845788.editors, editor_1291845789.id, editor_1291845789);
    invoke_1291847117(self_1291845788.onEditorRegistered, editor_1291845789);

  
}

function handleInput_2936030891(self_2936030892, input_2936030893) {
  var result_2936030894 = 0;

  BeforeRet: {
    result_2936030894 = 1;
    break BeforeRet;
  };

  return result_2936030894;

}

function injectDependencies_2936031625(self_2936031626, ed_2936031627) {
      
function HEX3Aanonymous_2936031647(actionHEX60gensym1155HEX60gensym1156_2936031648, argHEX60gensym1155HEX60gensym1156_2936031649) {
        var result_2936031650 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1155_2936031635.config.handleActions) {
          var action_2936031651 = nimCopy(null, actionHEX60gensym1155HEX60gensym1156_2936031648, NTI33554449);
          var arg_2936031652 = nimCopy(null, argHEX60gensym1155HEX60gensym1156_2936031649, NTI33554449);
          var responseHEX60gensym1155HEX60gensym1156_2936031653 = handleAction_2936029639(self_2936031626, action_2936031651, arg_2936031652);
          if (handlerHEX60gensym1155_2936031635.config.consumeAllActions) {
          result_2936031650 = 3;
          break BeforeRet;
          }
          
          result_2936031650 = responseHEX60gensym1155HEX60gensym1156_2936031653;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1155_2936031635.config.consumeAllActions) {
          result_2936031650 = 3;
          break BeforeRet;
          }
          else {
            result_2936031650 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2936031650;

      }
      
function HEX3Aanonymous_2936031655(inputHEX60gensym1155HEX60gensym1157_2936031656) {
        var result_2936031657 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1155_2936031635.config.handleInputs) {
          var input_2936031658 = nimCopy(null, inputHEX60gensym1155HEX60gensym1157_2936031656, NTI33554449);
          result_2936031657 = handleInput_2936030891(self_2936031626, input_2936031658);
          break BeforeRet;
          }
          else {
            result_2936031657 = 1;
            break BeforeRet;
          }
          
        };

        return result_2936031657;

      }
      
function HEX3Aanonymous_2936031678(actionHEX60gensym1158HEX60gensym1159_2936031679, argHEX60gensym1158HEX60gensym1159_2936031680) {
        var result_2936031681 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1158_2936031666.config.handleActions) {
          var action_2936031682 = nimCopy(null, actionHEX60gensym1158HEX60gensym1159_2936031679, NTI33554449);
          var arg_2936031683 = nimCopy(null, argHEX60gensym1158HEX60gensym1159_2936031680, NTI33554449);
          var responseHEX60gensym1158HEX60gensym1159_2936031684 = handleAction_2936029639(self_2936031626, action_2936031682, arg_2936031683);
          if (handlerHEX60gensym1158_2936031666.config.consumeAllActions) {
          result_2936031681 = 3;
          break BeforeRet;
          }
          
          result_2936031681 = responseHEX60gensym1158HEX60gensym1159_2936031684;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym1158_2936031666.config.consumeAllActions) {
          result_2936031681 = 3;
          break BeforeRet;
          }
          else {
            result_2936031681 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2936031681;

      }
      
function HEX3Aanonymous_2936031686(inputHEX60gensym1158HEX60gensym1160_2936031687) {
        var result_2936031688 = 0;

        BeforeRet: {
          if (handlerHEX60gensym1158_2936031666.config.handleInputs) {
          var input_2936031689 = nimCopy(null, inputHEX60gensym1158HEX60gensym1160_2936031687, NTI33554449);
          result_2936031688 = 1;
          break BeforeRet;
          }
          else {
            result_2936031688 = 1;
            break BeforeRet;
          }
          
        };

        return result_2936031688;

      }

    self_2936031626.editor = ed_2936031627;
    registerEditor_1291845787(self_2936031626.editor, self_2936031626);
    Label1: {
      var handlerHEX60gensym1155_2936031635 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1155_2936031635.config = getEventHandlerConfig_1291849153(ed_2936031627, [101,100,105,116,111,114,46,97,115,116]);
      handlerHEX60gensym1155_2936031635.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(ed_2936031627, [101,100,105,116,111,114,46,97,115,116]));
      handlerHEX60gensym1155_2936031635.handleAction = HEX3Aanonymous_2936031647;
      handlerHEX60gensym1155_2936031635.handleInput = HEX3Aanonymous_2936031655;
    };
    self_2936031626.eventHandler = handlerHEX60gensym1155_2936031635;
    Label2: {
      var handlerHEX60gensym1158_2936031666 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym1158_2936031666.config = getEventHandlerConfig_1291849153(ed_2936031627, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym1158_2936031666.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(ed_2936031627, [101,100,105,116,111,114,46,97,115,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym1158_2936031666.handleAction = HEX3Aanonymous_2936031678;
      handlerHEX60gensym1158_2936031666.handleInput = HEX3Aanonymous_2936031686;
    };
    self_2936031626.textEditEventHandler = handlerHEX60gensym1158_2936031666;

  
}

function injectDependencies_2801811228(self_2801811229, ed_2801811230) {
      
function HEX3Aanonymous_2801811251(actionHEX60gensym978HEX60gensym979_2801811252, argHEX60gensym978HEX60gensym979_2801811253) {
        var result_2801811254 = 0;

        BeforeRet: {
          if (handlerHEX60gensym978_2801811239.config.handleActions) {
          var action_2801811255 = nimCopy(null, actionHEX60gensym978HEX60gensym979_2801811252, NTI33554449);
          var arg_2801811256 = nimCopy(null, argHEX60gensym978HEX60gensym979_2801811253, NTI33554449);
          var responseHEX60gensym978HEX60gensym979_2801811257 = handleAction_2801795418(self_2801811229, action_2801811255, arg_2801811256);
          if (handlerHEX60gensym978_2801811239.config.consumeAllActions) {
          result_2801811254 = 3;
          break BeforeRet;
          }
          
          result_2801811254 = responseHEX60gensym978HEX60gensym979_2801811257;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym978_2801811239.config.consumeAllActions) {
          result_2801811254 = 3;
          break BeforeRet;
          }
          else {
            result_2801811254 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2801811254;

      }
      
function HEX3Aanonymous_2801811259(inputHEX60gensym978HEX60gensym980_2801811260) {
        var result_2801811261 = 0;

        BeforeRet: {
          if (handlerHEX60gensym978_2801811239.config.handleInputs) {
          var input_2801811262 = nimCopy(null, inputHEX60gensym978HEX60gensym980_2801811260, NTI33554449);
          result_2801811261 = handleInput_2801795426(self_2801811229, input_2801811262);
          break BeforeRet;
          }
          else {
            result_2801811261 = 1;
            break BeforeRet;
          }
          
        };

        return result_2801811261;

      }
      
function HEX3Aanonymous_2801811282(actionHEX60gensym981HEX60gensym982_2801811283, argHEX60gensym981HEX60gensym982_2801811284) {
        var result_2801811285 = 0;

        BeforeRet: {
          if (handlerHEX60gensym981_2801811270.config.handleActions) {
          var action_2801811286 = nimCopy(null, actionHEX60gensym981HEX60gensym982_2801811283, NTI33554449);
          var arg_2801811287 = nimCopy(null, argHEX60gensym981HEX60gensym982_2801811284, NTI33554449);
          var responseHEX60gensym981HEX60gensym982_2801811288 = handleAction_2801795418(self_2801811229, action_2801811286, arg_2801811287);
          if (handlerHEX60gensym981_2801811270.config.consumeAllActions) {
          result_2801811285 = 3;
          break BeforeRet;
          }
          
          result_2801811285 = responseHEX60gensym981HEX60gensym982_2801811288;
          break BeforeRet;
          }
          else {
          if (handlerHEX60gensym981_2801811270.config.consumeAllActions) {
          result_2801811285 = 3;
          break BeforeRet;
          }
          else {
            result_2801811285 = 1;
            break BeforeRet;
          }
          }
        };

        return result_2801811285;

      }
      
function HEX3Aanonymous_2801811290(inputHEX60gensym981HEX60gensym983_2801811291) {
        var result_2801811292 = 0;

        BeforeRet: {
          if (handlerHEX60gensym981_2801811270.config.handleInputs) {
          var input_2801811293 = nimCopy(null, inputHEX60gensym981HEX60gensym983_2801811291, NTI33554449);
          result_2801811292 = handleInput_2801795426(self_2801811229, input_2801811293);
          break BeforeRet;
          }
          else {
            result_2801811292 = 1;
            break BeforeRet;
          }
          
        };

        return result_2801811292;

      }

    self_2801811229.editor = ed_2801811230;
    registerEditor_1291845787(self_2801811229.editor, self_2801811229);
    var config_2801811231 = getEventHandlerConfig_1291849153(ed_2801811230, [101,100,105,116,111,114,46,116,101,120,116]);
    Label1: {
      var handlerHEX60gensym978_2801811239 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym978_2801811239.config = config_2801811231;
      handlerHEX60gensym978_2801811239.dfaInternal = buildDFA_2046820415(config_2801811231);
      handlerHEX60gensym978_2801811239.handleAction = HEX3Aanonymous_2801811251;
      handlerHEX60gensym978_2801811239.handleInput = HEX3Aanonymous_2801811259;
    };
    self_2801811229.eventHandler = handlerHEX60gensym978_2801811239;
    Label2: {
      var handlerHEX60gensym981_2801811270 = {state: ({current: 0, persistent: 0}), config: null, revision: 0, dfaInternal: null, handleAction: null, handleInput: null};
      handlerHEX60gensym981_2801811270.config = getEventHandlerConfig_1291849153(ed_2801811230, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]);
      handlerHEX60gensym981_2801811270.dfaInternal = buildDFA_2046820415(getEventHandlerConfig_1291849153(ed_2801811230, [101,100,105,116,111,114,46,116,101,120,116,46,99,111,109,112,108,101,116,105,111,110]));
      handlerHEX60gensym981_2801811270.handleAction = HEX3Aanonymous_2801811282;
      handlerHEX60gensym981_2801811270.handleInput = HEX3Aanonymous_2801811290;
    };
    self_2801811229.completionEventHandler = handlerHEX60gensym981_2801811270;

  
}

function injectDependencies_1291847741(self_1291847742, ed_1291847743) {
  
}

function injectDependencies_1291847744(self_1291847742, ed_1291847743) {
    chckNilDisp(self_1291847742);
    if (isObj(self_1291847742.m_type, NTI2936014315)) {
    injectDependencies_2936031625(self_1291847742, ed_1291847743);
    }
    else {
    if (isObj(self_1291847742.m_type, NTI2801795279)) {
    injectDependencies_2801811228(self_1291847742, ed_1291847743);
    }
    else {
    if (isObj(self_1291847742.m_type, NTI2147483652)) {
    injectDependencies_1291847741(self_1291847742, ed_1291847743);
    }
    }}

  
}

function getOrDefault_1291848293(t_1291848296, key_1291848297, default_1291848298) {
    var Temporary1;

  var result_1291848299 = 0.0;

    var hcHEX60gensym20_1291848302 = [0];
    var indexHEX60gensym20_1291848542 = rawGet_1291848303(t_1291848296, key_1291848297, hcHEX60gensym20_1291848302, 0);
    if ((0 <= indexHEX60gensym20_1291848542)) {
    Temporary1 = t_1291848296.data[chckIndx(indexHEX60gensym20_1291848542, 0, (t_1291848296.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_1291848298;
    }
    
    result_1291848299 = Temporary1;

  return result_1291848299;

}

function value_2063597618(m_2063597619) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_2063597620 = 0.0;

  BeforeRet: {
    switch (m_2063597619.kind) {
    case 0:
      var Temporary1 = m_2063597619;
      if (ConstSet316[Temporary1.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'rel\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary1.kind, NTI2063597571)); }
      result_2063597620 = Temporary1.rel;
      break BeforeRet;
      break;
    case 1:
      var Temporary2 = m_2063597619;
      if (ConstSet317[Temporary2.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'abs\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary2.kind, NTI2063597571)); }
      result_2063597620 = Temporary2.abs;
      break BeforeRet;
      break;
    case 2:
      var Temporary3 = m_2063597619;
      if (ConstSet318[Temporary3.kind]===undefined) { raiseFieldError2(makeNimstrLit("field \'per\' is not accessible for type \'Measurement\' using \'kind = "), reprDiscriminant(Temporary3.kind, NTI2063597571)); }
      result_2063597620 = Temporary3.per;
      break BeforeRet;
      break;
    }
  };

  return result_2063597620;

}

function apply_2063597643(m_2063597644, a_2063597645, b_2063597646) {
  var result_2063597647 = 0.0;

  BeforeRet: {
    switch (m_2063597644.kind) {
    case 0:
      var v_2063597658 = value_2063597618(m_2063597644);
      result_2063597647 = (a_2063597645 + v_2063597658);
      break BeforeRet;
      break;
    case 1:
      var v_2063597659 = value_2063597618(m_2063597644);
      result_2063597647 = v_2063597659;
      break BeforeRet;
      break;
    case 2:
      var v_2063597660 = value_2063597618(m_2063597644);
      result_2063597647 = (a_2063597645 + (v_2063597660 * (b_2063597646 - a_2063597645)));
      break BeforeRet;
      break;
    }
  };

  return result_2063597647;

}

function splitV_2063597673(r_2063597674, x_2063597675) {
  var result_2063597678 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2063597678.Field0 = nimCopy(result_2063597678.Field0, r_2063597674, NTI2080374789);
    result_2063597678.Field1 = nimCopy(result_2063597678.Field1, r_2063597674, NTI2080374789);
    result_2063597678.Field0.w = (apply_2063597643(x_2063597675, r_2063597674.x, (r_2063597674.x + r_2063597674.w)) - r_2063597674.x);
    result_2063597678.Field1.x = (result_2063597678.Field0.x + result_2063597678.Field0.w);
    result_2063597678.Field1.w = (result_2063597678.Field1.w - result_2063597678.Field0.w);

  return result_2063597678;

}

function percent_2063597615(value_2063597616) {
  var result_2063597617 = ({kind: 0, rel: 0.0, abs: 0.0, per: 0.0});

  BeforeRet: {
    result_2063597617 = nimCopy(result_2063597617, {kind: 2, per: value_2063597616, rel: 0.0, abs: 0.0}, NTI2063597572);
    break BeforeRet;
  };

  return result_2063597617;

}

function splitH_2063597661(r_2063597662, y_2063597663) {
  var result_2063597666 = {Field0: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), Field1: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})};

    result_2063597666.Field0 = nimCopy(result_2063597666.Field0, r_2063597662, NTI2080374789);
    result_2063597666.Field1 = nimCopy(result_2063597666.Field1, r_2063597662, NTI2080374789);
    result_2063597666.Field0.h = (apply_2063597643(y_2063597663, r_2063597662.y, (r_2063597662.y + r_2063597662.h)) - r_2063597662.y);
    result_2063597666.Field1.y = (result_2063597666.Field0.y + result_2063597666.Field0.h);
    result_2063597666.Field1.h = (result_2063597666.Field1.h - result_2063597666.Field0.h);

  return result_2063597666;

}

function layoutViews_1291848728(layout_1291848729, props_1291848730, bounds_1291848731, views_1291848732) {
            var Temporary4;
            var Temporary5;

  var result_1291848733 = [];

    var mainSplit_1291848806 = getOrDefault_1291848293(props_1291848730.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848733 = nimCopy(null, [], NTI1291847196);
    var rect_1291848811 = nimCopy(null, bounds_1291848731, NTI2080374789);
    Label1: {
      var i_1291848816 = 0;
      var i_536872570 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872570 < views_1291848732)) break Label3;
            i_1291848816 = i_536872570;
            if (((i_1291848816 == 0) && (1 < views_1291848732))) {
            Temporary4 = mainSplit_1291848806;
            }
            else {
            if ((i_1291848816 == subInt(views_1291848732, 1))) {
            Temporary4 = 1.0;
            }
            else {
            Temporary4 = 0.5;
            }
            }
            var ratio_1291848817 = Temporary4;
            if ((modInt(i_1291848816, 2) == 0)) {
            Temporary5 = splitV_2063597673(rect_1291848811, percent_2063597615(ratio_1291848817));
            }
            else {
            Temporary5 = splitH_2063597661(rect_1291848811, percent_2063597615(ratio_1291848817));
            }
            
            var colontmp__536872572 = nimCopy(null, Temporary5, NTI2063597631);
            var view_rect_1291848818 = nimCopy(null, colontmp__536872572["Field0"], NTI2080374789);
            var remaining_1291848819 = nimCopy(null, colontmp__536872572["Field1"], NTI2080374789);
            rect_1291848811 = nimCopy(rect_1291848811, remaining_1291848819, NTI2080374789);
            var Temporary6 = nimCopy(null, view_rect_1291848818, NTI2080374789);
            result_1291848733.push(Temporary6);;
            i_536872570 = addInt(i_536872570, 1);
          }
      };
    };

  return result_1291848733;

}

function layoutViews_1291848632(layout_1291848633, props_1291848634, bounds_1291848635, views_1291848636) {
            var Temporary4;

  var result_1291848637 = [];

    var mainSplit_1291848710 = getOrDefault_1291848293(props_1291848634.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848637 = nimCopy(null, [], NTI1291847196);
    var rect_1291848715 = nimCopy(null, bounds_1291848635, NTI2080374789);
    Label1: {
      var i_1291848720 = 0;
      var i_536872574 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872574 < views_1291848636)) break Label3;
            i_1291848720 = i_536872574;
            if (((i_1291848720 == 0) && (1 < views_1291848636))) {
            Temporary4 = mainSplit_1291848710;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848636, i_1291848720));
            }
            
            var ratio_1291848721 = Temporary4;
            var colontmp__536872576 = splitH_2063597661(rect_1291848715, percent_2063597615(ratio_1291848721));
            var view_rect_1291848722 = nimCopy(null, colontmp__536872576["Field0"], NTI2080374789);
            var remaining_1291848723 = nimCopy(null, colontmp__536872576["Field1"], NTI2080374789);
            rect_1291848715 = nimCopy(rect_1291848715, remaining_1291848723, NTI2080374789);
            var Temporary5 = nimCopy(null, view_rect_1291848722, NTI2080374789);
            result_1291848637.push(Temporary5);;
            i_536872574 = addInt(i_536872574, 1);
          }
      };
    };

  return result_1291848637;

}

function layoutViews_1291848221(layout_1291848222, props_1291848223, bounds_1291848224, views_1291848225) {
            var Temporary4;

  var result_1291848226 = [];

    var mainSplit_1291848596 = getOrDefault_1291848293(props_1291848223.props, [109,97,105,110,45,115,112,108,105,116], 0.5);
    result_1291848226 = nimCopy(null, [], NTI1291847196);
    var rect_1291848601 = nimCopy(null, bounds_1291848224, NTI2080374789);
    Label1: {
      var i_1291848606 = 0;
      var i_536872578 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872578 < views_1291848225)) break Label3;
            i_1291848606 = i_536872578;
            if (((i_1291848606 == 0) && (1 < views_1291848225))) {
            Temporary4 = mainSplit_1291848596;
            }
            else {
            Temporary4 = (1.0 / subInt(views_1291848225, i_1291848606));
            }
            
            var ratio_1291848607 = Temporary4;
            var colontmp__536872580 = splitV_2063597673(rect_1291848601, percent_2063597615(ratio_1291848607));
            var view_rect_1291848608 = nimCopy(null, colontmp__536872580["Field0"], NTI2080374789);
            var remaining_1291848609 = nimCopy(null, colontmp__536872580["Field1"], NTI2080374789);
            rect_1291848601 = nimCopy(rect_1291848601, remaining_1291848609, NTI2080374789);
            var Temporary5 = nimCopy(null, view_rect_1291848608, NTI2080374789);
            result_1291848226.push(Temporary5);;
            i_536872578 = addInt(i_536872578, 1);
          }
      };
    };

  return result_1291848226;

}

function layoutViews_1291848191(layout_1291848192, props_1291848193, bounds_1291848194, views_1291848195) {
  var result_1291848196 = [];

  BeforeRet: {
    result_1291848196 = nimCopy(null, [nimCopy(null, bounds_1291848194, NTI2080374789)], NTI1291846985);
    break BeforeRet;
  };

  return result_1291848196;

}

function layoutViews_1291848219(layout_1291848192, props_1291848193, bounds_1291848194, views_1291848195) {
  var result_1291848220 = [];

  BeforeRet: {
    chckNilDisp(layout_1291848192);
    if (isObj(layout_1291848192.m_type, NTI1291845645)) {
    result_1291848220 = layoutViews_1291848728(layout_1291848192, props_1291848193, bounds_1291848194, views_1291848195);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848192.m_type, NTI1291845644)) {
    result_1291848220 = layoutViews_1291848632(layout_1291848192, props_1291848193, bounds_1291848194, views_1291848195);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848192.m_type, NTI1291845643)) {
    result_1291848220 = layoutViews_1291848221(layout_1291848192, props_1291848193, bounds_1291848194, views_1291848195);
    break BeforeRet;
    }
    else {
    if (isObj(layout_1291848192.m_type, NTI1291845642)) {
    result_1291848220 = layoutViews_1291848191(layout_1291848192, props_1291848193, bounds_1291848194, views_1291848195);
    break BeforeRet;
    }
    }}}
  };

  return result_1291848220;

}

function start_2902458417(self_2902458418) {
  
}

function start_2902458419(self_2902458418) {
    start_2902458417(self_2902458418);

  
}

function getDefinition_2902458423(self_2902458424, filename_2902458425, location_2902458426) {
  var result_2902458434 = null;

  return result_2902458434;

}

function getDefinition_2902458435(self_2902458424, filename_2902458425, location_2902458426) {
  var result_2902458436 = null;

  BeforeRet: {
    result_2902458436 = getDefinition_2902458423(self_2902458424, filename_2902458425, location_2902458426);
    break BeforeRet;
  };

  return result_2902458436;

}

function getCompletions_2902458437(self_2902458438, languageId_2902458439, filename_2902458440, location_2902458441) {
  var result_2902458444 = null;

  return result_2902458444;

}

function getCompletions_2902458445(self_2902458438, languageId_2902458439, filename_2902458440, location_2902458441) {
  var result_2902458446 = null;

  BeforeRet: {
    result_2902458446 = getCompletions_2902458437(self_2902458438, languageId_2902458439, filename_2902458440, location_2902458441);
    break BeforeRet;
  };

  return result_2902458446;

}

function changed_1291850983(self_1291850984, other_1291850985) {
  var result_1291850986 = false;

  BeforeRet: {
    var other_1291850987 = other_1291850985;
    result_1291850986 = (!(eqStrings(self_1291850984.name, other_1291850987.name)) || !(eqStrings(self_1291850984.path, other_1291850987.path)));
    break BeforeRet;
  };

  return result_1291850986;

}

function changed_1291850969(self_1291850970, other_1291850971) {
  var result_1291850972 = false;

  BeforeRet: {
    var other_1291850973 = other_1291850971;
    result_1291850972 = !(eqStrings(self_1291850970.path, other_1291850973.path));
    break BeforeRet;
  };

  return result_1291850972;

}

function changed_3204448314(self_3204448315, other_3204448316) {
  var result_3204448317 = false;

  return result_3204448317;

}

function changed_3204448318(self_3204448315, other_3204448316) {
  var result_3204448319 = false;

  BeforeRet: {
    chckNilDisp(self_3204448315);
    if (isObj(self_3204448315.m_type, NTI1291848510)) {
    result_3204448319 = changed_1291850983(self_3204448315, other_3204448316);
    break BeforeRet;
    }
    else {
    if (isObj(self_3204448315.m_type, NTI1291848512)) {
    result_3204448319 = changed_1291850969(self_3204448315, other_3204448316);
    break BeforeRet;
    }
    else {
    if (isObj(self_3204448315.m_type, NTI3204448263)) {
    result_3204448319 = changed_3204448314(self_3204448315, other_3204448316);
    break BeforeRet;
    }
    }}
  };

  return result_3204448319;

}

function active_2147483761(self_2147483762) {
  var result_2147483763 = false;

    result_2147483763 = self_2147483762.active;

  return result_2147483763;

}

function updateBackgroundColor_2332033102(self_2332033103, color_2332033104, frameIndex_2332033105) {
    if (!(HEX3DHEX3D_2332033092(self_2332033103.backgroundColor, color_2332033104))) {
    self_2332033103.lastHierarchyChange = nimMax(self_2332033103.lastHierarchyChange, frameIndex_2332033105);
    }
    
    self_2332033103.backgroundColor = nimCopy(self_2332033103.backgroundColor, color_2332033104, NTI2365587459);

  
}

function HEX24_2231370052(selection_2231370053) {
  var result_2231370054 = [];

  BeforeRet: {
    result_2231370054 = nimCopy(null, (HEX24_2231370049(selection_2231370053.Field0) || []).concat([45] || [],HEX24_2231370049(selection_2231370053.Field1) || []), NTI33554449);
    break BeforeRet;
  };

  return result_2231370054;

}

function formatValue_2801795196(result_2801795198, result_2801795198_Idx, value_2801795199, specifier_2801795200) {
    formatValue_721420459(result_2801795198, result_2801795198_Idx, HEX24_2231370052(value_2801795199), specifier_2801795200);

  
}

function HEX2A_2382364675(c_2382364676, v_2382364677) {
  var result_2382364678 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2382364678.r = (c_2382364676.r * v_2382364677);
    result_2382364678.g = (c_2382364676.g * v_2382364677);
    result_2382364678.b = (c_2382364676.b * v_2382364677);
    result_2382364678.a = (c_2382364676.a * v_2382364677);

  return result_2382364678;

}

function changed_2332033349(self_2332033350, frameIndex_2332033351) {
  var result_2332033352 = false;

    result_2332033352 = (((frameIndex_2332033351 <= self_2332033350.lastBoundsChange) || (frameIndex_2332033351 <= self_2332033350.lastHierarchyChange)) || (frameIndex_2332033351 <= self_2332033350.lastInvalidation));

  return result_2332033352;

}

function dirty_2147483683(self_2147483684) {
  var result_2147483685 = false;

    result_2147483685 = self_2147483684.mDirty;

  return result_2147483685;

}

function resetDirty_2147483756(self_2147483757) {
    self_2147483757.mDirty = false;

  
}

function clamp_3254780229(val_3254780231, bounds_3254780232) {
  var result_3254780233 = 0;

    if (!((bounds_3254780232.a <= bounds_3254780232.b))) {
    failedAssertImpl_268435515(([109,97,116,104,46,110,105,109,40,49,50,53,51,44,32,51,41,32,96,98,111,117,110,100,115,46,97,32,60,61,32,98,111,117,110,100,115,46,98,96,32] || []).concat(HEX24_2231370049({Field0: bounds_3254780232.a, Field1: bounds_3254780232.b}) || []));
    }
    
    result_3254780233 = clamp_1660945119(val_3254780231, bounds_3254780232.a, bounds_3254780232.b);

  return result_3254780233;

}

function initTable_3254780263(initialSize_3254780266) {
  var result_3254780267 = ({data: [], counter: 0});

    var correctSizeHEX60gensym10_3254780269 = slotsNeeded_1308622891(chckRange(initialSize_3254780266, 0, 2147483647));
    result_3254780267.counter = 0;
    result_3254780267.data = new Array(chckRange(correctSizeHEX60gensym10_3254780269, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym10_3254780269, 0, 2147483647) ; ++i) { result_3254780267.data[i] = {Field0: 0, Field1: 0, Field2: []}; }
  return result_3254780267;

}

function mgetOrPut_3254780315(t_3254780318, key_3254780319, val_3254780320) {
  var result_3254780321 = null;
  var result_3254780321_Idx = 0;

    if (((t_3254780318.data).length == 0)) {
    var correctSizeHEX60gensym13_3254780370 = slotsNeeded_1308622891(32);
    t_3254780318.counter = 0;
    t_3254780318.data = new Array(chckRange(correctSizeHEX60gensym13_3254780370, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym13_3254780370, 0, 2147483647) ; ++i) { t_3254780318.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    var hc_3254780375 = [0];
    var index_3254780382 = rawGet_2801800872(t_3254780318, key_3254780319, hc_3254780375, 0);
    if ((index_3254780382 < 0)) {
    if (((t_3254780318.data).length == 0)) {
    var correctSizeHEX60gensym16_3254780431 = slotsNeeded_1308622891(32);
    t_3254780318.counter = 0;
    t_3254780318.data = new Array(chckRange(correctSizeHEX60gensym16_3254780431, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym16_3254780431, 0, 2147483647) ; ++i) { t_3254780318.data[i] = {Field0: 0, Field1: 0, Field2: []}; }    }
    
    if (mustRehash_2801801310(t_3254780318)) {
    enlarge_2801801480(t_3254780318);
    index_3254780382 = rawGetKnownHC_2801802088(t_3254780318, key_3254780319, hc_3254780375[0]);
    }
    
    index_3254780382 = subInt(-1, index_3254780382);
    rawInsert_2801801859(t_3254780318, t_3254780318, "data", key_3254780319, val_3254780320, hc_3254780375[0], index_3254780382);
    t_3254780318.counter = addInt(t_3254780318.counter, 1);
    }
    
    result_3254780321 = t_3254780318.data[chckIndx(index_3254780382, 0, (t_3254780318.data).length - 1)]; result_3254780321_Idx = "Field2";

  return [result_3254780321, result_3254780321_Idx];

}

function isSome_3254780602(self_3254780604) {
  var result_3254780605 = false;

    result_3254780605 = self_3254780604.has;

  return result_3254780605;

}

function get_3254780593(self_3254780595, otherwise_3254780596) {
    var Temporary1;

  var result_3254780597 = 0;

    if (isSome_3254780602(self_3254780595)) {
    Temporary1 = self_3254780595.val;
    }
    else {
    Temporary1 = otherwise_3254780596;
    }
    
    result_3254780597 = Temporary1;

  return result_3254780597;

}

function parseEnum_3254780568(s_3254780570, default_3254780571) {
    var Temporary1;

  var result_3254780572 = 0;

    switch (toJSStr(nimIdentNormalize_855638137(s_3254780570))) {
    case "none":
      Temporary1 = 0;
      break;
    case "Absolute":
      Temporary1 = 1;
      break;
    case "relative":
      Temporary1 = 2;
      break;
    default: 
      Temporary1 = default_3254780571;
      break;
    }
    result_3254780572 = Temporary1;

  return result_3254780572;

}

function getOption_3254780542(editor_3254780544, path_3254780545, default_3254780546) {
  var result_3254780552 = 0;

  BeforeRet: {
    Label1: {
      if ((editor_3254780544 == null)) {
      result_3254780552 = default_3254780546;
      break BeforeRet;
      }
      
      var nodeHEX60gensym18_3254780564 = HEX7BHEX7D_1627393316(editor_3254780544.options, nsuSplitString(path_3254780545, [46], -1));
      if ((nodeHEX60gensym18_3254780564 == null)) {
      result_3254780552 = default_3254780546;
      break BeforeRet;
      }
      
    };
    result_3254780552 = parseEnum_3254780568(getStr_1627390106(nodeHEX60gensym18_3254780564, []), default_3254780546);
    break BeforeRet;
  };

  return result_3254780552;

}

function initTable_2801796485(initialSize_2801796488) {
  var result_2801796494 = ({data: [], counter: 0});

    var correctSizeHEX60gensym39_2801796496 = slotsNeeded_1308622891(chckRange(initialSize_2801796488, 0, 2147483647));
    result_2801796494.counter = 0;
    result_2801796494.data = new Array(chckRange(correctSizeHEX60gensym39_2801796496, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym39_2801796496, 0, 2147483647) ; ++i) { result_2801796494.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }
  return result_2801796494;

}

function matches_2868904056(self_2868904057, node_2868904058, selection_2868904059) {
  var result_2868904060 = [];

  BeforeRet: {
    result_2868904060 = nimCopy(null, self_2868904057.matches(node_2868904058, {row: selection_2868904059.Field0.Field0, column: selection_2868904059.Field0.Field1, m_type: NTI2868903950}, {row: selection_2868904059.Field1.Field0, column: selection_2868904059.Field1.Field1, m_type: NTI2868903950}), NTI2868904033);
    break BeforeRet;
  };

  return result_2868904060;

}

function rawGet_2801796677(t_2801796680, key_2801796681, hc_2801796682, hc_2801796682_Idx) {
  var result_2801796683 = 0;

  BeforeRet: {
    hc_2801796682[hc_2801796682_Idx] = hash_1325400491(key_2801796681);
    if ((hc_2801796682[hc_2801796682_Idx] == 0)) {
    hc_2801796682[hc_2801796682_Idx] = 314159265;
    }
    
    if (((t_2801796680.data).length == 0)) {
    result_2801796683 = -1;
    break BeforeRet;
    }
    
    var h_2801796740 = (hc_2801796682[hc_2801796682_Idx] & (t_2801796680.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801796680.data[chckIndx(h_2801796740, 0, (t_2801796680.data).length - 1)].Field0)) break Label2;
          if (((t_2801796680.data[chckIndx(h_2801796740, 0, (t_2801796680.data).length - 1)].Field0 == hc_2801796682[hc_2801796682_Idx]) && eqStrings(t_2801796680.data[chckIndx(h_2801796740, 0, (t_2801796680.data).length - 1)].Field1, key_2801796681))) {
          result_2801796683 = h_2801796740;
          break BeforeRet;
          }
          
          h_2801796740 = nextTry_1308622883(h_2801796740, (t_2801796680.data).length - 1);
        }
    };
    result_2801796683 = subInt(-1, h_2801796740);
  };

  return result_2801796683;

}

function hasKey_2801796670(t_2801796673, key_2801796674) {
  var result_2801796675 = false;

    var hc_2801796676 = [0];
    result_2801796675 = (0 <= rawGet_2801796677(t_2801796673, key_2801796674, hc_2801796676, 0));

  return result_2801796675;

}

function contains_2801796664(t_2801796667, key_2801796668) {
  var result_2801796669 = false;

  BeforeRet: {
    result_2801796669 = hasKey_2801796670(t_2801796667, key_2801796668);
    break BeforeRet;
  };

  return result_2801796669;

}

function HEX5BHEX5D_2801797045(t_2801797048, key_2801797049) {
  var result_2801797050 = null;

    var hcHEX60gensym22_2801797051 = [0];
    var indexHEX60gensym22_2801797058 = rawGet_2801796677(t_2801797048, key_2801797049, hcHEX60gensym22_2801797051, 0);
    if ((0 <= indexHEX60gensym22_2801797058)) {
    result_2801797050 = t_2801797048.data[chckIndx(indexHEX60gensym22_2801797058, 0, (t_2801797048.data).length - 1)].Field2;
    }
    else {
    raiseKeyError_1627392893(key_2801797049);
    }
    

  return result_2801797050;

}

function mustRehash_2801797398(t_2801797400) {
  var result_2801797401 = false;

    if (!((t_2801797400.counter < (t_2801797400.data).length))) {
    failedAssertImpl_268435515([104,97,115,104,99,111,109,109,111,110,46,110,105,109,40,51,52,44,32,57,41,32,96,10,116,46,99,111,117,110,116,101,114,32,60,32,116,46,100,97,116,97,76,101,110,96,32]);
    }
    
    result_2801797401 = ((mulInt((t_2801797400.data).length, 2) < mulInt(t_2801797400.counter, 3)) || (subInt((t_2801797400.data).length, t_2801797400.counter) < 4));

  return result_2801797401;

}

function rawInsert_2801797947(t_2801797951, data_2801797952, data_2801797952_Idx, key_2801797953, val_2801797954, hc_2801797955, h_2801797956) {
    data_2801797952[data_2801797952_Idx][chckIndx(h_2801797956, 0, (data_2801797952[data_2801797952_Idx]).length - 1)].Field1 = nimCopy(null, key_2801797953, NTI33554449);
    data_2801797952[data_2801797952_Idx][chckIndx(h_2801797956, 0, (data_2801797952[data_2801797952_Idx]).length - 1)].Field2 = nimCopy(data_2801797952[data_2801797952_Idx][chckIndx(h_2801797956, 0, (data_2801797952[data_2801797952_Idx]).length - 1)].Field2, val_2801797954, NTI2835349507);
    data_2801797952[data_2801797952_Idx][chckIndx(h_2801797956, 0, (data_2801797952[data_2801797952_Idx]).length - 1)].Field0 = hc_2801797955;

  
}

function enlarge_2801797568(t_2801797571) {
    var n_2801797574 = [];
    n_2801797574 = new Array(chckRange(mulInt((t_2801797571.data).length, 2), 0, 2147483647)); for (var i = 0 ; i < chckRange(mulInt((t_2801797571.data).length, 2), 0, 2147483647) ; ++i) { n_2801797574[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    var Temporary1 = t_2801797571.data; t_2801797571.data = n_2801797574; n_2801797574 = Temporary1;    Label2: {
      var i_2801797643 = 0;
      var colontmp__536872636 = 0;
      colontmp__536872636 = (n_2801797574).length - 1;
      var res_536872637 = 0;
      Label3: {
          Label4: while (true) {
          if (!(res_536872637 <= colontmp__536872636)) break Label4;
            i_2801797643 = res_536872637;
            var eh_2801797717 = n_2801797574[chckIndx(i_2801797643, 0, (n_2801797574).length - 1)].Field0;
            if (isFilled_1308622880(eh_2801797717)) {
            var j_2801797721 = (eh_2801797717 & (t_2801797571.data).length - 1);
            Label5: {
                Label6: while (true) {
                if (!isFilled_1308622880(t_2801797571.data[chckIndx(j_2801797721, 0, (t_2801797571.data).length - 1)].Field0)) break Label6;
                  j_2801797721 = nextTry_1308622883(j_2801797721, (t_2801797571.data).length - 1);
                }
            };
            rawInsert_2801797947(t_2801797571, t_2801797571, "data", n_2801797574[chckIndx(i_2801797643, 0, (n_2801797574).length - 1)].Field1, n_2801797574[chckIndx(i_2801797643, 0, (n_2801797574).length - 1)].Field2, eh_2801797717, j_2801797721);
            }
            
            res_536872637 = addInt(res_536872637, 1);
          }
      };
    };

  
}

function rawGetKnownHC_2801798176(t_2801798179, key_2801798180, hc_2801798181) {
  var result_2801798182 = 0;

  BeforeRet: {
    if (((t_2801798179.data).length == 0)) {
    result_2801798182 = -1;
    break BeforeRet;
    }
    
    var h_2801798238 = (hc_2801798181 & (t_2801798179.data).length - 1);
    Label1: {
        Label2: while (true) {
        if (!isFilled_1308622880(t_2801798179.data[chckIndx(h_2801798238, 0, (t_2801798179.data).length - 1)].Field0)) break Label2;
          if (((t_2801798179.data[chckIndx(h_2801798238, 0, (t_2801798179.data).length - 1)].Field0 == hc_2801798181) && eqStrings(t_2801798179.data[chckIndx(h_2801798238, 0, (t_2801798179.data).length - 1)].Field1, key_2801798180))) {
          result_2801798182 = h_2801798238;
          break BeforeRet;
          }
          
          h_2801798238 = nextTry_1308622883(h_2801798238, (t_2801798179.data).length - 1);
        }
    };
    result_2801798182 = subInt(-1, h_2801798238);
  };

  return result_2801798182;

}

function HEX5BHEX5DHEX3D_2801797195(t_2801797198, key_2801797199, val_2801797200) {
    if (((t_2801797198.data).length == 0)) {
    var correctSizeHEX60gensym53_2801797254 = slotsNeeded_1308622891(32);
    t_2801797198.counter = 0;
    t_2801797198.data = new Array(chckRange(correctSizeHEX60gensym53_2801797254, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym53_2801797254, 0, 2147483647) ; ++i) { t_2801797198.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }    }
    
    var hc_2801797259 = [0];
    var index_2801797266 = rawGet_2801796677(t_2801797198, key_2801797199, hc_2801797259, 0);
    if ((0 <= index_2801797266)) {
    t_2801797198.data[chckIndx(index_2801797266, 0, (t_2801797198.data).length - 1)].Field2 = nimCopy(t_2801797198.data[chckIndx(index_2801797266, 0, (t_2801797198.data).length - 1)].Field2, val_2801797200, NTI2835349507);
    }
    else {
      if (((t_2801797198.data).length == 0)) {
      var correctSizeHEX60gensym56_2801797393 = slotsNeeded_1308622891(32);
      t_2801797198.counter = 0;
      t_2801797198.data = new Array(chckRange(correctSizeHEX60gensym56_2801797393, 0, 2147483647)); for (var i = 0 ; i < chckRange(correctSizeHEX60gensym56_2801797393, 0, 2147483647) ; ++i) { t_2801797198.data[i] = {Field0: 0, Field1: [], Field2: ({impl: null})}; }      }
      
      if (mustRehash_2801797398(t_2801797198)) {
      enlarge_2801797568(t_2801797198);
      index_2801797266 = rawGetKnownHC_2801798176(t_2801797198, key_2801797199, hc_2801797259[0]);
      }
      
      index_2801797266 = subInt(-1, index_2801797266);
      rawInsert_2801797947(t_2801797198, t_2801797198, "data", key_2801797199, val_2801797200, hc_2801797259[0], index_2801797266);
      t_2801797198.counter = addInt(t_2801797198.counter, 1);
    }
    

  
}

function HEX24_2868904103(node_2868904104) {
  var result_2868904105 = [];

  BeforeRet: {
    result_2868904105 = nimCopy(null, cstrToNimstr(node_2868904104.toString()), NTI33554449);
    break BeforeRet;
  };

  return result_2868904105;

}

function formatValue_2801798688(result_2801798690, result_2801798690_Idx, value_2801798691, specifier_2801798692) {
    formatValue_721420459(result_2801798690, result_2801798690_Idx, HEX24_2868904103(value_2801798691), specifier_2801798692);

  
}

function insert_2801796413(x_2801796415, x_2801796415_Idx, item_2801796416, i_2801796417) {
    var it_2801796437 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
    x_2801796415[x_2801796415_Idx] = x_2801796415[x_2801796415_Idx] || []; x_2801796415[x_2801796415_Idx].splice(i_2801796417, 0, it_2801796437);
    x_2801796415[x_2801796415_Idx][chckIndx(i_2801796417, 0, (x_2801796415[x_2801796415_Idx]).length - 1)] = nimCopy(x_2801796415[x_2801796415_Idx][chckIndx(i_2801796417, 0, (x_2801796415[x_2801796415_Idx]).length - 1)], item_2801796416, NTI2801795274);

  
}

function splitAt_2801796351(line_2801796352, line_2801796352_Idx, index_2801796353) {
    var index_2801796354 = index_2801796353;
    var i_2801796355 = 0;
    Label1: {
        Label2: while (true) {
        if (!((i_2801796355 < (line_2801796352[line_2801796352_Idx].parts).length) && ((line_2801796352[line_2801796352_Idx].parts[chckIndx(i_2801796355, 0, (line_2801796352[line_2801796352_Idx].parts).length - 1)].text).length <= index_2801796354))) break Label2;
          index_2801796354 = subInt(index_2801796354, (line_2801796352[line_2801796352_Idx].parts[chckIndx(i_2801796355, 0, (line_2801796352[line_2801796352_Idx].parts).length - 1)].text).length);
          i_2801796355 = addInt(i_2801796355, 1);
        }
    };
    if ((((i_2801796355 < (line_2801796352[line_2801796352_Idx].parts).length) && !((index_2801796354 == 0))) && !((index_2801796354 == (line_2801796352[line_2801796352_Idx].parts[chckIndx(i_2801796355, 0, (line_2801796352[line_2801796352_Idx].parts).length - 1)].text).length)))) {
    var copy_2801796370 = nimCopy(null, line_2801796352[line_2801796352_Idx].parts[chckIndx(i_2801796355, 0, (line_2801796352[line_2801796352_Idx].parts).length - 1)], NTI2801795274);
    line_2801796352[line_2801796352_Idx].parts[chckIndx(i_2801796355, 0, (line_2801796352[line_2801796352_Idx].parts).length - 1)].text = nimCopy(null, HEX5BHEX5D_855639291(line_2801796352[line_2801796352_Idx].parts[chckIndx(i_2801796355, 0, (line_2801796352[line_2801796352_Idx].parts).length - 1)].text, HEX2EHEX2E_805306418(0, subInt(index_2801796354, 1))), NTI33554449);
    copy_2801796370.text = nimCopy(null, HEX5BHEX5D_855639319(copy_2801796370.text, HEX2EHEX2E_1040187488(index_2801796354, 1)), NTI33554449);
    insert_2801796413(line_2801796352[line_2801796352_Idx], "parts", copy_2801796370, chckRange(addInt(i_2801796355, 1), 0, 2147483647));
    }
    

  
}

function overrideStyle_2801796447(line_2801796448, line_2801796448_Idx, first_2801796449, last_2801796450, scope_2801796451, priority_2801796452) {
    var index_2801796453 = 0;
    Label1: {
      var i_2801796461 = 0;
      var colontmp__536872643 = 0;
      colontmp__536872643 = (line_2801796448[line_2801796448_Idx].parts).length - 1;
      var res_536872644 = 0;
      Label2: {
          Label3: while (true) {
          if (!(res_536872644 <= colontmp__536872643)) break Label3;
            i_2801796461 = res_536872644;
            if ((((first_2801796449 <= index_2801796453) && (addInt(index_2801796453, (line_2801796448[line_2801796448_Idx].parts[chckIndx(i_2801796461, 0, (line_2801796448[line_2801796448_Idx].parts).length - 1)].text).length) <= last_2801796450)) && (priority_2801796452 < line_2801796448[line_2801796448_Idx].parts[chckIndx(i_2801796461, 0, (line_2801796448[line_2801796448_Idx].parts).length - 1)].priority))) {
            line_2801796448[line_2801796448_Idx].parts[chckIndx(i_2801796461, 0, (line_2801796448[line_2801796448_Idx].parts).length - 1)].scope = nimCopy(null, scope_2801796451, NTI33554449);
            line_2801796448[line_2801796448_Idx].parts[chckIndx(i_2801796461, 0, (line_2801796448[line_2801796448_Idx].parts).length - 1)].priority = priority_2801796452;
            }
            
            index_2801796453 = addInt(index_2801796453, (line_2801796448[line_2801796448_Idx].parts[chckIndx(i_2801796461, 0, (line_2801796448[line_2801796448_Idx].parts).length - 1)].text).length);
            res_536872644 = addInt(res_536872644, 1);
          }
      };
    };

  
}

function getStyledText_2801796475(self_2801796476, i_2801796477) {
                                        var Temporary14;
                                        var Temporary15;
                      var Temporary16;
                      var Temporary17;

  var result_2801796478 = null;

  BeforeRet: {
    var line_2801796479 = nimCopy(null, self_2801796476.lines[chckIndx(i_2801796477, 0, (self_2801796476.lines).length - 1)], NTI33554449);
    var styledLine_2801796484 = [{index: i_2801796477, parts: [{text: nimCopy(null, line_2801796479, NTI33554449), scope: [], priority: 1000000000, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})}]}];
    var regexes_2801796510 = [initTable_2801796485(32)];
    if ((((self_2801796476.tsParser == null) || (self_2801796476.highlightQuery == null)) || (self_2801796476.currentTree == null))) {
    result_2801796478 = styledLine_2801796484[0];
    break BeforeRet;
    }
    
    Label1: {
      var match_2801796542 = null;
      var colontmp__536872628 = [];
      colontmp__536872628 = matches_2868904056(self_2801796476.highlightQuery, self_2801796476.currentTree.rootNode, {Field0: {Field0: i_2801796477, Field1: 0}, Field1: {Field0: i_2801796477, Field1: (line_2801796479).length}});
      var i_536872630 = 0;
      var L_536872631 = (colontmp__536872628).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872630 < L_536872631)) break Label3;
            match_2801796542 = colontmp__536872628[chckIndx(i_536872630, 0, (colontmp__536872628).length - 1)];
            var predicates_2801796543 = self_2801796476.highlightQuery.predicatesForPattern(match_2801796542.pattern);
            Label4: {
              var capture_2801796566 = null;
              var colontmp__536872623 = [];
              colontmp__536872623 = match_2801796542.captures;
              var i_536872625 = 0;
              var L_536872626 = (colontmp__536872623).length;
              Label5: {
                  Label6: while (true) {
                  if (!(i_536872625 < L_536872626)) break Label6;
                    capture_2801796566 = colontmp__536872623[chckIndx(i_536872625, 0, (colontmp__536872623).length - 1)];
                    Label7: {
                      var scope_2801796567 = capture_2801796566.name;
                      var node_2801796568 = capture_2801796566.node;
                      var matches_2801796569 = true;
                      Label8: {
                        var predicate_2801796592 = null;
                        var i_536872620 = 0;
                        var L_536872621 = (predicates_2801796543).length;
                        Label9: {
                            Label10: while (true) {
                            if (!(i_536872620 < L_536872621)) break Label10;
                              predicate_2801796592 = predicates_2801796543[chckIndx(i_536872620, 0, (predicates_2801796543).length - 1)];
                              if (!(matches_2801796569)) {
                              break Label8;
                              }
                              
                              Label11: {
                                var operand_2801796615 = null;
                                var colontmp__536872614 = [];
                                colontmp__536872614 = predicate_2801796592.operands;
                                var i_536872616 = 0;
                                var L_536872617 = (colontmp__536872614).length;
                                Label12: {
                                    Label13: while (true) {
                                    if (!(i_536872616 < L_536872617)) break Label13;
                                      operand_2801796615 = colontmp__536872614[chckIndx(i_536872616, 0, (colontmp__536872614).length - 1)];
                                      var value_2801796616 = cstrToNimstr(operand_2801796615.type);
                                      if (!((operand_2801796615.name == scope_2801796567))) {
                                      matches_2801796569 = false;
                                      break Label11;
                                      }
                                      
                                      switch (toJSStr(cstrToNimstr(predicate_2801796592.operator))) {
                                      case "match?":
                                        if (contains_2801796664(regexes_2801796510[0], value_2801796616)) {
                                        Temporary14 = HEX5BHEX5D_2801797045(regexes_2801796510[0], value_2801796616);
                                        }
                                        else {
                                          var regex_2801797144 = re_2835349563(value_2801796616);
                                          HEX5BHEX5DHEX3D_2801797195(regexes_2801796510[0], value_2801796616, regex_2801797144);
                                        Temporary14 = regex_2801797144;
                                        }
                                        
                                        var regex_2801798479 = nimCopy(null, Temporary14, NTI2835349507);
                                        var nodeText_2801798480 = contentString_2801796225(self_2801796476, getRange_2868904120(node_2801796568));
                                        if (!((matchLen_2835349540(nodeText_2801798480, regex_2801798479, 0) == (nodeText_2801798480).length))) {
                                        matches_2801796569 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      case "not-match?":
                                        if (contains_2801796664(regexes_2801796510[0], value_2801796616)) {
                                        Temporary15 = HEX5BHEX5D_2801797045(regexes_2801796510[0], value_2801796616);
                                        }
                                        else {
                                          var regex_2801798611 = re_2835349563(value_2801796616);
                                          HEX5BHEX5DHEX3D_2801797195(regexes_2801796510[0], value_2801796616, regex_2801798611);
                                        Temporary15 = regex_2801798611;
                                        }
                                        
                                        var regex_2801798668 = nimCopy(null, Temporary15, NTI2835349507);
                                        var nodeText_2801798669 = contentString_2801796225(self_2801796476, getRange_2868904120(node_2801796568));
                                        if ((matchLen_2835349540(nodeText_2801798669, regex_2801798668, 0) == (nodeText_2801798669).length)) {
                                        matches_2801796569 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      case "eq?":
                                        var nodeText_2801798670 = contentString_2801796225(self_2801796476, getRange_2868904120(node_2801796568));
                                        if (!(eqStrings(nodeText_2801798670, value_2801796616))) {
                                        matches_2801796569 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      case "not-eq?":
                                        var nodeText_2801798671 = contentString_2801796225(self_2801796476, getRange_2868904120(node_2801796568));
                                        if (eqStrings(nodeText_2801798671, value_2801796616)) {
                                        matches_2801796569 = false;
                                        break Label11;
                                        }
                                        
                                        break;
                                      default: 
                                        var fmtRes_2801798676 = [mnewString(0)];
                                        fmtRes_2801798676[0].push.apply(fmtRes_2801798676[0], [85,110,107,110,111,119,110,32,112,114,101,100,105,99,97,116,101,32,39]);;
                                        add_33556386(fmtRes_2801798676, 0, predicate_2801796592.operator);
                                        fmtRes_2801798676[0].push.apply(fmtRes_2801798676[0], [39]);;
                                        log_1174405220(logger_704643272[0], 5, [nimCopy(null, fmtRes_2801798676[0], NTI33554449)]);
                                        break;
                                      }
                                      i_536872616 = addInt(i_536872616, 1);
                                      if (!(((colontmp__536872614).length == L_536872617))) {
                                      failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                      }
                                      
                                    }
                                };
                              };
                              if (getFlag_1291848865(gEditor, [116,101,120,116,46,112,114,105,110,116,45,109,97,116,99,104,101,115], false)) {
                              var nodeText_2801798677 = contentString_2801796225(self_2801796476, getRange_2868904120(node_2801796568));
                              var fmtRes_2801798682 = [mnewString(0)];
                              formatValue_2332033544(fmtRes_2801798682, 0, match_2801796542.pattern, []);
                              fmtRes_2801798682[0].push.apply(fmtRes_2801798682[0], [58,32,39]);;
                              formatValue_721420459(fmtRes_2801798682, 0, nodeText_2801798677, []);
                              fmtRes_2801798682[0].push.apply(fmtRes_2801798682[0], [39,32]);;
                              formatValue_2801798688(fmtRes_2801798682, 0, node_2801796568, []);
                              fmtRes_2801798682[0].push.apply(fmtRes_2801798682[0], [32,40,109,97,116,99,104,101,115,58,32]);;
                              formatValue_2801798693(fmtRes_2801798682, 0, matches_2801796569, []);
                              fmtRes_2801798682[0].push.apply(fmtRes_2801798682[0], [41]);;
                              log_1174405220(logger_704643272[0], 2, [nimCopy(null, fmtRes_2801798682[0], NTI33554449)]);
                              }
                              
                              i_536872620 = addInt(i_536872620, 1);
                              if (!(((predicates_2801796543).length == L_536872621))) {
                              failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                              }
                              
                            }
                        };
                      };
                      if (!(matches_2801796569)) {
                      break Label7;
                      }
                      
                      var nodeRange_2801798698 = getRange_2868904120(node_2801796568);
                      if ((nodeRange_2801798698.Field0.Field0 == i_2801796477)) {
                      splitAt_2801796351(styledLine_2801796484, 0, nodeRange_2801798698.Field0.Field1);
                      }
                      
                      if ((nodeRange_2801798698.Field1.Field0 == i_2801796477)) {
                      splitAt_2801796351(styledLine_2801796484, 0, nodeRange_2801798698.Field1.Field1);
                      }
                      
                      if ((nodeRange_2801798698.Field0.Field0 < i_2801796477)) {
                      Temporary16 = 0;
                      }
                      else {
                      if ((nodeRange_2801798698.Field0.Field0 == i_2801796477)) {
                      Temporary16 = nodeRange_2801798698.Field0.Field1;
                      }
                      else {
                      Temporary16 = (line_2801796479).length;
                      }
                      }
                      var first_2801798699 = Temporary16;
                      if ((nodeRange_2801798698.Field1.Field0 < i_2801796477)) {
                      Temporary17 = 0;
                      }
                      else {
                      if ((nodeRange_2801798698.Field1.Field0 == i_2801796477)) {
                      Temporary17 = nodeRange_2801798698.Field1.Field1;
                      }
                      else {
                      Temporary17 = (line_2801796479).length;
                      }
                      }
                      var last_2801798700 = Temporary17;
                      overrideStyle_2801796447(styledLine_2801796484, 0, first_2801798699, last_2801798700, cstrToNimstr(scope_2801796567), match_2801796542.pattern);
                    };
                    i_536872625 = addInt(i_536872625, 1);
                    if (!(((colontmp__536872623).length == L_536872626))) {
                    failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              };
            };
            i_536872630 = addInt(i_536872630, 1);
            if (!(((colontmp__536872628).length == L_536872631))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_2801796478 = styledLine_2801796484[0];
    break BeforeRet;
  };

  return result_2801796478;

}

function getOrDefault_3254780691(t_3254780694, key_3254780695, default_3254780696) {
    var Temporary1;

  var result_3254780697 = [];

    var hcHEX60gensym21_3254780700 = [0];
    var indexHEX60gensym21_3254780707 = rawGet_2801800872(t_3254780694, key_3254780695, hcHEX60gensym21_3254780700, 0);
    if ((0 <= indexHEX60gensym21_3254780707)) {
    Temporary1 = t_3254780694.data[chckIndx(indexHEX60gensym21_3254780707, 0, (t_3254780694.data).length - 1)].Field2;
    }
    else {
    Temporary1 = default_3254780696;
    }
    
    result_3254780697 = nimCopy(null, Temporary1, NTI2801795304);

  return result_3254780697;

}

function map_3254780792(s_3254780795, op_3254780797) {
  var result_3254780798 = [];

    result_3254780798 = new Array(chckRange((s_3254780795).length, 0, 2147483647)); for (var i = 0 ; i < chckRange((s_3254780795).length, 0, 2147483647) ; ++i) { result_3254780798[i] = {Field0: 0, Field1: 0}; }    Label1: {
      var i_3254780813 = 0;
      var colontmp__536872647 = 0;
      colontmp__536872647 = (s_3254780795).length;
      var i_536872648 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872648 < colontmp__536872647)) break Label3;
            i_3254780813 = i_536872648;
            result_3254780798[chckIndx(i_3254780813, 0, (result_3254780798).length - 1)] = nimCopy(result_3254780798[chckIndx(i_3254780813, 0, (result_3254780798).length - 1)], op_3254780797(s_3254780795[chckIndx(i_3254780813, 0, (s_3254780795).length - 1)]), NTI3254779908);
            i_536872648 = addInt(i_536872648, 1);
          }
      };
    };

  return result_3254780798;

}

function clampToLine_3254779921(selection_3254779922, line_3254779923, lineLength_3254779924) {
    var Temporary1;
    var Temporary2;

  var result_3254779927 = {Field0: 0, Field1: 0};

    if ((selection_3254779922.Field0.Field0 < line_3254779923)) {
    Temporary1 = 0;
    }
    else {
    if ((selection_3254779922.Field0.Field0 == line_3254779923)) {
    Temporary1 = selection_3254779922.Field0.Field1;
    }
    else {
    Temporary1 = lineLength_3254779924;
    }
    }
    result_3254779927.Field0 = Temporary1;
    if ((selection_3254779922.Field1.Field0 < line_3254779923)) {
    Temporary2 = 0;
    }
    else {
    if ((selection_3254779922.Field1.Field0 == line_3254779923)) {
    Temporary2 = selection_3254779922.Field1.Field1;
    }
    else {
    Temporary2 = lineLength_3254779924;
    }
    }
    result_3254779927.Field1 = Temporary2;

  return result_3254779927;

}

function len_2801796303(line_2801796304) {
  var result_2801796305 = 0;

    result_2801796305 = 0;
    Label1: {
      var p_2801796328 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
      var i_536872652 = 0;
      var L_536872653 = (line_2801796304.parts).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872652 < L_536872653)) break Label3;
            p_2801796328 = line_2801796304.parts[chckIndx(i_536872652, 0, (line_2801796304.parts).length - 1)];
            result_2801796305 = addInt(result_2801796305, (p_2801796328.text).length);
            i_536872652 = addInt(i_536872652, 1);
            if (!(((line_2801796304.parts).length == L_536872653))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };

  return result_2801796305;

}

function contains_2231370107(selection_2231370108, cursor_2231370109) {
  var result_2231370110 = false;

    result_2231370110 = (HEX3CHEX3D_2231370071(selection_2231370108.Field0, cursor_2231370109) && HEX3CHEX3D_2231370071(cursor_2231370109, selection_2231370108.Field1));

  return result_2231370110;

}

function renderTextHighlight_3254779928(panel_3254779929, app_3254779930, startOffset_3254779931, endOffset_3254779932, line_3254779933, startIndex_3254779934, selection_3254779935, selectionClamped_3254779938, part_3254779939, color_3254779940) {
  BeforeRet: {
    var left_3254779941 = 0.0;
    var right_3254779942 = 0.0;
    if ((((startIndex_3254779934 < selectionClamped_3254779938.Field1) && (selectionClamped_3254779938.Field0 < addInt(startIndex_3254779934, (part_3254779939.text).length))) && (0 < (part_3254779939.text).length))) {
    left_3254779941 = (startOffset_3254779931 + ((nimMax(0, subInt(selectionClamped_3254779938.Field0, startIndex_3254779934)) / ((part_3254779939.text).length - 0.0)) * (endOffset_3254779932 - startOffset_3254779931)));
    right_3254779942 = (startOffset_3254779931 + ((nimMin((part_3254779939.text).length, subInt(selectionClamped_3254779938.Field1, startIndex_3254779934)) / ((part_3254779939.text).length - 0.0)) * (endOffset_3254779932 - startOffset_3254779931)));
    }
    else {
    if (((((part_3254779939.text).length == 0) && contains_2231370107(selection_3254779935, {Field0: line_3254779933, Field1: startIndex_3254779934})) && !(isEmpty_2231370100(selection_3254779935)))) {
    left_3254779941 = 0.0;
    right_3254779942 = Math.ceil((charWidth_2315255952(app_3254779930.platform) * 0.5));
    }
    else {
      break BeforeRet;
    }
    }
    panel_3254779929.children.push({anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), left: left_3254779941, right: right_3254779942, fillBackground: true, backgroundColor: nimCopy(null, color_3254779940, NTI2365587459), lastHierarchyChange: panel_3254779929.lastHierarchyChange, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
  };

  
}

function renderTextHighlight_3254779965(panel_3254779966, app_3254779967, startOffset_3254779968, endOffset_3254779969, line_3254779970, startIndex_3254779971, selections_3254779972, selectionClamped_3254779975, part_3254779976, color_3254779977) {
    Label1: {
      var i_3254779985 = 0;
      var colontmp__536872656 = 0;
      colontmp__536872656 = (selections_3254779972).length;
      var i_536872657 = 0;
      Label2: {
          Label3: while (true) {
          if (!(i_536872657 < colontmp__536872656)) break Label3;
            i_3254779985 = i_536872657;
            renderTextHighlight_3254779928(panel_3254779966, app_3254779967, startOffset_3254779968, endOffset_3254779969, line_3254779970, startIndex_3254779971, selections_3254779972[chckIndx(i_3254779985, 0, (selections_3254779972).length - 1)], selectionClamped_3254779975[chckIndx(i_3254779985, 0, (selectionClamped_3254779975).length - 1)], part_3254779976, color_3254779977);
            i_536872657 = addInt(i_536872657, 1);
          }
      };
    };

  
}

function color_3254780959(theme_3254780961, names_3254780962, default_3254780963) {
  var result_3254780964 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3254780968 = [];
      var i_536872660 = 0;
      var L_536872661 = (names_3254780962).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872660 < L_536872661)) break Label3;
            name_3254780968 = names_3254780962[chckIndx(i_536872660, 0, (names_3254780962).length - 1)];
            if (contains_3170894403(theme_3254780961.colors, name_3254780968)) {
            result_3254780964 = nimCopy(result_3254780964, HEX5BHEX5D_3170894493(theme_3254780961.colors, name_3254780968), NTI2365587459);
            break BeforeRet;
            }
            
            i_536872660 = addInt(i_536872660, 1);
            if (!(((names_3254780962).length == L_536872661))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254780964 = nimCopy(result_3254780964, color_2449473569(default_3254780963), NTI2365587459);
    break BeforeRet;
  };

  return result_3254780964;

}

function color_2449473587(c_2449473588) {
  var result_2449473589 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    result_2449473589.r = (c_2449473588.r / 255.0);
    result_2449473589.g = (c_2449473588.g / 255.0);
    result_2449473589.b = (c_2449473588.b / 255.0);
    result_2449473589.a = (c_2449473588.a / 255.0);

  return result_2449473589;

}

function color_3254781090(theme_3254781092, names_3254781093, default_3254781094) {
  var result_3254781095 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    Label1: {
      var name_3254781099 = [];
      var i_536872664 = 0;
      var L_536872665 = (names_3254781093).length;
      Label2: {
          Label3: while (true) {
          if (!(i_536872664 < L_536872665)) break Label3;
            name_3254781099 = names_3254781093[chckIndx(i_536872664, 0, (names_3254781093).length - 1)];
            if (contains_3170894403(theme_3254781092.colors, name_3254781099)) {
            result_3254781095 = nimCopy(result_3254781095, HEX5BHEX5D_3170894493(theme_3254781092.colors, name_3254781099), NTI2365587459);
            break BeforeRet;
            }
            
            i_536872664 = addInt(i_536872664, 1);
            if (!(((names_3254781093).length == L_536872665))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    result_3254781095 = nimCopy(result_3254781095, color_2449473587(default_3254781094), NTI2365587459);
    break BeforeRet;
  };

  return result_3254781095;

}

function rgba_2365587557(r_2365587558, g_2365587559, b_2365587560, a_2365587561) {
  var result_2365587562 = ({r: 0, g: 0, b: 0, a: 0});

    result_2365587562 = nimCopy(result_2365587562, {r: r_2365587558, g: g_2365587559, b: b_2365587560, a: a_2365587561}, NTI2365587461);

  return result_2365587562;

}

function isSome_3170894682(self_3170894684) {
  var result_3170894685 = false;

    result_3170894685 = self_3170894684.has;

  return result_3170894685;

}

function get_3254781319(self_3254781321, otherwise_3254781322) {
    var Temporary1;

  var result_3254781323 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

    if (isSome_3170894682(self_3254781321)) {
    Temporary1 = self_3254781321.val;
    }
    else {
    Temporary1 = otherwise_3254781322;
    }
    
    result_3254781323 = nimCopy(result_3254781323, Temporary1, NTI2365587459);

  return result_3254781323;

}

function getCascading_2483028172(table_2483028174, key_2483028175, default_2483028176) {
  var result_2483028177 = ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}});

  BeforeRet: {
    if (contains_2483028220(table_2483028174, key_2483028175)) {
    result_2483028177 = nimCopy(result_2483028177, HEX5BHEX5D_2483028525(table_2483028174, key_2483028175), NTI2483027972);
    break BeforeRet;
    }
    
    var index_2483028604 = nsuRFindStr(key_2483028175, [46], 0, -1);
    if (!((index_2483028604 == -1))) {
    result_2483028177 = nimCopy(result_2483028177, getCascading_2483028172(table_2483028174, HEX5BHEX5D_855639291(key_2483028175, HEX2EHEX2E_805306418(0, subInt(index_2483028604, 1))), default_2483028176), NTI2483027972);
    break BeforeRet;
    }
    
    result_2483028177 = nimCopy(result_2483028177, default_2483028176, NTI2483027972);
    break BeforeRet;
  };

  return result_2483028177;

}

function tokenColor_3254781291(theme_3254781293, name_3254781294, default_3254781295) {
  var result_3254781296 = ({r: 0.0, g: 0.0, b: 0.0, a: 0.0});

  BeforeRet: {
    result_3254781296 = nimCopy(result_3254781296, get_3254781319(getCascading_2483028172(theme_3254781293.tokenColors, name_3254781294, {foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}).foreground, color_2449473569(default_3254781295)), NTI2365587459);
    break BeforeRet;
  };

  return result_3254781296;

}

function updateWidget_3254779986(self_3254779987, app_3254779988, widget_3254779989, frameIndex_3254779990) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;
      var Temporary5;
                    var Temporary17;
    var Temporary19;
              
function renderLine_3254780615(i_3254780616, down_3254780617) {
                  
function HEX3Aanonymous_3254780761(s_3254780769) {
                    var result_3254780772 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3254780772 = nimCopy(result_3254780772, normalized_2231370094(s_3254780769), NTI2231369739);

                    return result_3254780772;

                  }
                  
function HEX3Aanonymous_3254780781(s_3254780788) {
                    var result_3254780791 = {Field0: 0, Field1: 0};

                      result_3254780791 = nimCopy(result_3254780791, clampToLine_3254779921(s_3254780788, i_3254780616, len_2801796303(styledText_3254780620)), NTI3254779908);

                    return result_3254780791;

                  }
                  
function HEX3Aanonymous_3254780900(s_3254780908) {
                    var result_3254780911 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};

                      result_3254780911 = nimCopy(result_3254780911, normalized_2231370094(s_3254780908), NTI2231369739);

                    return result_3254780911;

                  }
                  
function HEX3Aanonymous_3254780920(s_3254780927) {
                    var result_3254780930 = {Field0: 0, Field1: 0};

                      result_3254780930 = nimCopy(result_3254780930, clampToLine_3254779921(s_3254780927, i_3254780616, len_2801796303(styledText_3254780620)), NTI3254779908);

                    return result_3254780930;

                  }
                          var Temporary4;
                                  var Temporary8;
                          var Temporary9;

                var result_3254780618 = false;

                BeforeRet: {
                  var top_3254780619 = ((subInt(i_3254780616, self_3254779987.previousBaseIndex) * totalLineHeight_3254779992) + self_3254779987.scrollOffset);
                  if ((contentPanel_3254780155.lastBounds.h <= top_3254780619)) {
                  result_3254780618 = !(down_3254780617);
                  break BeforeRet;
                  }
                  
                  if (((top_3254780619 + totalLineHeight_3254779992) <= 0.0)) {
                  result_3254780618 = down_3254780617;
                  break BeforeRet;
                  }
                  
                  var styledText_3254780620 = getStyledText_2801796475(self_3254779987.document, i_3254780616);
                  var selectionsNormalizedOnLine_3254780780 = map_2801795498(getOrDefault_3254780691(selectionsPerLine_3254780274[0], i_3254780616, []), HEX3Aanonymous_3254780761);
                  var selectionsClampedOnLine_3254780823 = map_3254780792(selectionsNormalizedOnLine_3254780780, HEX3Aanonymous_3254780781);
                  var highlightsNormalizedOnLine_3254780919 = map_2801795498(getOrDefault_3254780691(highlightsPerLine_3254780529, i_3254780616, []), HEX3Aanonymous_3254780900);
                  var highlightsClampedOnLine_3254780937 = map_3254780792(highlightsNormalizedOnLine_3254780919, HEX3Aanonymous_3254780920);
                  var lineWidget_3254780938 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.0)}, NTI2332033035), left: 1.0, right: -1.0, top: top_3254780619, bottom: (top_3254780619 + totalLineHeight_3254779992), lastHierarchyChange: frameIndex_3254779990, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                  var startOffset_3254780939 = [0.0];
                  var startIndex_3254780940 = 0;
                  Label1: {
                    var partIndex_3254780946 = 0;
                    var part_3254780947 = ({text: [], scope: [], priority: 0, bounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0})});
                    var i_536872599 = 0;
                    var L_536872600 = (styledText_3254780620.parts).length;
                    Label2: {
                        Label3: while (true) {
                        if (!(i_536872599 < L_536872600)) break Label3;
                          partIndex_3254780946 = i_536872599;
                          part_3254780947 = nimCopy(part_3254780947, styledText_3254780620.parts[chckIndx(i_536872599, 0, (styledText_3254780620.parts).length - 1)], NTI2801795274);
                          var width_3254780948 = ((part_3254780947.text).length * charWidth_3254779993);
                          var selectionColor_3254780954 = color_3254779994(app_3254779988.theme, [115,101,108,101,99,116,105,111,110,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(200, 200, 200));
                          renderTextHighlight_3254779965(lineWidget_3254780938, app_3254779988, startOffset_3254780939[0], (startOffset_3254780939[0] + width_3254780948), i_3254780616, startIndex_3254780940, selectionsNormalizedOnLine_3254780780, selectionsClampedOnLine_3254780823, part_3254780947, selectionColor_3254780954);
                          var highlightColor_3254781074 = color_3254780959(app_3254779988.theme, [[101,100,105,116,111,114,46,114,97,110,103,101,72,105,103,104,108,105,103,104,116,66,97,99,107,103,114,111,117,110,100]], rgb_2365587543(200, 200, 200));
                          renderTextHighlight_3254779965(lineWidget_3254780938, app_3254779988, startOffset_3254780939[0], (startOffset_3254780939[0] + width_3254780948), i_3254780616, startIndex_3254780940, highlightsNormalizedOnLine_3254780919, highlightsClampedOnLine_3254780937, part_3254780947, highlightColor_3254781074);
                          var isWide_3254781084 = getOption_2801803228(app_3254779988, getContextWithMode_2801803222(self_3254779987, [101,100,105,116,111,114,46,116,101,120,116,46,99,117,114,115,111,114,46,119,105,100,101]), false);
                          if (isWide_3254781084) {
                          Temporary4 = 1.0;
                          }
                          else {
                          Temporary4 = 0.2;
                          }
                          
                          var cursorWidth_3254781085 = Temporary4;
                          var cursorColor_3254781205 = color_3254781090(app_3254779988.theme, [[101,100,105,116,111,114,67,117,114,115,111,114,46,102,111,114,101,103,114,111,117,110,100], [102,111,114,101,103,114,111,117,110,100]], rgba_2365587557(255, 255, 255, 127));
                          Label5: {
                            var selection_3254781285 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
                            var colontmp__536872595 = [];
                            colontmp__536872595 = getOrDefault_3254780691(selectionsPerLine_3254780274[0], i_3254780616, []);
                            var i_536872596 = 0;
                            var L_536872597 = (colontmp__536872595).length;
                            Label6: {
                                Label7: while (true) {
                                if (!(i_536872596 < L_536872597)) break Label7;
                                  selection_3254781285 = colontmp__536872595[chckIndx(i_536872596, 0, (colontmp__536872595).length - 1)];
                                  if ((((selection_3254781285.Field1.Field0 == i_3254780616) && (startIndex_3254780940 <= selection_3254781285.Field1.Field1)) && (selection_3254781285.Field1.Field1 <= addInt(startIndex_3254780940, (part_3254780947.text).length)))) {
                                  if (((part_3254780947.text).length == 0)) {
                                  Temporary8 = 0.0;
                                  }
                                  else {
                                  Temporary8 = ((subInt(selection_3254781285.Field1.Field1, startIndex_3254780940) / (part_3254780947.text).length) * width_3254780948);
                                  }
                                  
                                  var offsetFromPartStart_3254781286 = Temporary8;
                                  lineWidget_3254780938.children.push({anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), left: (startOffset_3254780939[0] + offsetFromPartStart_3254781286), right: ((startOffset_3254780939[0] + offsetFromPartStart_3254781286) + (cursorWidth_3254781085 * charWidth_3254779993)), fillBackground: true, backgroundColor: nimCopy(null, cursorColor_3254781205, NTI2365587459), lastHierarchyChange: frameIndex_3254779990, m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false});;
                                  }
                                  
                                  i_536872596 = addInt(i_536872596, 1);
                                  if (!(((colontmp__536872595).length == L_536872597))) {
                                  failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                                  }
                                  
                                }
                            };
                          };
                          if (((part_3254780947.scope).length == 0)) {
                          Temporary9 = textColor_3254780151;
                          }
                          else {
                          Temporary9 = tokenColor_3254781291(app_3254779988.theme, part_3254780947.scope, rgb_2365587543(255, 200, 200));
                          }
                          
                          var color_3254781331 = nimCopy(null, Temporary9, NTI2365587459);
                          var partWidget_3254781332 = {text: nimCopy(null, part_3254780947.text, NTI33554449), anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), left: startOffset_3254780939[0], right: (startOffset_3254780939[0] + width_3254780948), foregroundColor: nimCopy(null, color_3254781331, NTI2365587459), lastHierarchyChange: frameIndex_3254779990, m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
                          styledText_3254780620.parts[chckIndx(partIndex_3254780946, 0, (styledText_3254780620.parts).length - 1)].bounds = nimCopy(styledText_3254780620.parts[chckIndx(partIndex_3254780946, 0, (styledText_3254780620.parts).length - 1)].bounds, rect_2080374802(partWidget_3254781332.left, lineWidget_3254780938.top, (partWidget_3254781332.right - partWidget_3254781332.left), (lineWidget_3254780938.bottom - lineWidget_3254780938.top)), NTI2080374789);
                          HEX2BHEX3D_855640304(startOffset_3254780939, 0, width_3254780948);
                          startIndex_3254780940 = addInt(startIndex_3254780940, (part_3254780947.text).length);
                          lineWidget_3254780938.children.push(partWidget_3254781332);;
                          i_536872599 = addInt(i_536872599, 1);
                          if (!(((styledText_3254780620.parts).length == L_536872600))) {
                          failedAssertImpl_268435515(makeNimstrLit("iterators.nim(179, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                          }
                          
                        }
                    };
                  };
                  self_3254779987.lastRenderedLines.push(styledText_3254780620);;
                  contentPanel_3254780155.children.push(lineWidget_3254780938);;
                  result_3254780618 = true;
                  break BeforeRet;
                };

                return result_3254780618;

              }

  BeforeRet: {
    var lineHeight_3254779991 = lineHeight_2315255947(app_3254779988.platform);
    var totalLineHeight_3254779992 = totalLineHeight_2315255960(app_3254779988.platform);
    var charWidth_3254779993 = charWidth_2315255952(app_3254779988.platform);
    var textColor_3254780151 = color_3254779994(app_3254779988.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    var headerPanel_3254780152 = null;
    var headerPart1Text_3254780153 = null;
    var headerPart2Text_3254780154 = null;
    var contentPanel_3254780155 = null;
    if (((widget_3254779989.children).length == 0)) {
    headerPanel_3254780152 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.0)}, NTI2332033035), bottom: totalLineHeight_3254779992, lastHierarchyChange: frameIndex_3254779990, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3254779989.children.push(headerPanel_3254780152);;
    headerPart1Text_3254780153 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(0.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3254779990, foregroundColor: nimCopy(null, textColor_3254780151, NTI2365587459), m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3254780152.children.push(headerPart1Text_3254780153);;
    headerPart2Text_3254780154 = {text: [], sizeToContent: true, anchor: nimCopy(null, {Field0: vec2_2097152992(1.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), pivot: vec2_2097152992(1.0, 0.0), lastHierarchyChange: frameIndex_3254779990, foregroundColor: nimCopy(null, textColor_3254780151, NTI2365587459), m_type: NTI2332033044, lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    headerPanel_3254780152.children.push(headerPart2Text_3254780154);;
    contentPanel_3254780155 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), top: totalLineHeight_3254779992, lastHierarchyChange: frameIndex_3254779990, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3254780155.maskContent = true;
    widget_3254779989.children.push(contentPanel_3254780155);;
    layoutWidget_2332033348(headerPanel_3254780152, widget_3254779989.lastBounds, frameIndex_3254779990, app_3254779988.platform.layoutOptions);
    layoutWidget_2332033348(contentPanel_3254780155, widget_3254779989.lastBounds, frameIndex_3254779990, app_3254779988.platform.layoutOptions);
    }
    else {
      headerPanel_3254780152 = widget_3254779989.children[chckIndx(0, 0, (widget_3254779989.children).length - 1)];
      headerPart1Text_3254780153 = headerPanel_3254780152.children[chckIndx(0, 0, (headerPanel_3254780152.children).length - 1)];
      headerPart2Text_3254780154 = headerPanel_3254780152.children[chckIndx(1, 0, (headerPanel_3254780152.children).length - 1)];
      contentPanel_3254780155 = widget_3254779989.children[chckIndx(1, 0, (widget_3254779989.children).length - 1)];
    }
    
    if (self_3254779987.renderHeader) {
    headerPanel_3254780152.bottom = totalLineHeight_3254779992;
    contentPanel_3254780155.top = totalLineHeight_3254779992;
    if (active_2147483761(self_3254779987)) {
    Temporary1 = color_3254779994(app_3254779988.theme, [116,97,98,46,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(45, 45, 60));
    }
    else {
    Temporary1 = color_3254779994(app_3254779988.theme, [116,97,98,46,105,110,97,99,116,105,118,101,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(45, 45, 45));
    }
    
    var color_3254780185 = nimCopy(null, Temporary1, NTI2365587459);
    updateBackgroundColor_2332033102(headerPanel_3254780152, color_3254780185, frameIndex_3254779990);
    if (((self_3254779987.currentMode).length == 0)) {
    Temporary2 = [110,111,114,109,97,108];
    }
    else {
    Temporary2 = self_3254779987.currentMode;
    }
    
    var mode_3254780186 = nimCopy(null, Temporary2, NTI33554449);
    var fmtRes_3254780191 = [mnewString(0)];
    fmtRes_3254780191[0].push.apply(fmtRes_3254780191[0], [32]);;
    formatValue_721420459(fmtRes_3254780191, 0, mode_3254780186, []);
    fmtRes_3254780191[0].push.apply(fmtRes_3254780191[0], [32,45,32]);;
    formatValue_721420459(fmtRes_3254780191, 0, self_3254779987.document.filename, []);
    fmtRes_3254780191[0].push.apply(fmtRes_3254780191[0], [32]);;
    headerPart1Text_3254780153.text = nimCopy(null, fmtRes_3254780191[0], NTI33554449);
    var fmtRes_3254780196 = [mnewString(0)];
    fmtRes_3254780196[0].push.apply(fmtRes_3254780196[0], [32]);;
    formatValue_2801795196(fmtRes_3254780196, 0, selection_2801795568(self_3254779987), []);
    fmtRes_3254780196[0].push.apply(fmtRes_3254780196[0], [32,45,32]);;
    formatValue_2332033544(fmtRes_3254780196, 0, self_3254779987.id, []);
    fmtRes_3254780196[0].push.apply(fmtRes_3254780196[0], [32]);;
    headerPart2Text_3254780154.text = nimCopy(null, fmtRes_3254780196[0], NTI33554449);
    updateLastHierarchyChangeFromChildren_2332033110(headerPanel_3254780152, frameIndex_3254779990);
    }
    else {
      headerPanel_3254780152.bottom = 0.0;
      contentPanel_3254780155.top = 0.0;
    }
    
    self_3254779987.lastContentBounds = nimCopy(self_3254779987.lastContentBounds, contentPanel_3254780155.lastBounds, NTI2080374789);
    widget_3254779989.lastHierarchyChange = nimMax(widget_3254779989.lastHierarchyChange, headerPanel_3254780152.lastHierarchyChange);
    if (active_2147483761(self_3254779987)) {
    Temporary3 = color_3254779994(app_3254779988.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 40));
    }
    else {
    Temporary3 = HEX2A_2382364675(color_3254779994(app_3254779988.theme, [101,100,105,116,111,114,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 25)), 0.75);
    }
    
    updateBackgroundColor_2332033102(contentPanel_3254780155, Temporary3, frameIndex_3254779990);
      if (changed_2332033349(contentPanel_3254780155, frameIndex_3254779990)) Temporary5 = true; else {        Temporary5 = dirty_2147483683(self_3254779987);      }      if (Temporary5) Temporary4 = true; else {        Temporary4 = app_3254779988.platform.redrawEverything;      }    if (!(Temporary4)) {
    break BeforeRet;
    }
    
    resetDirty_2147483756(self_3254779987);
    if (contentPanel_3254780155.children.length < 0) { for (var i = contentPanel_3254780155.children.length ; i < 0 ; ++i) contentPanel_3254780155.children.push(null); }
               else { contentPanel_3254780155.children.length = 0; };
    Label6: {
      self_3254779987.previousBaseIndex = clamp_3254780229(self_3254779987.previousBaseIndex, HEX2EHEX2E_805306418(0, (self_3254779987.document.lines).length));
      Label7: {
          Label8: while (true) {
          if (!((self_3254779987.scrollOffset < 0.0) && (addInt(self_3254779987.previousBaseIndex, 1) < (self_3254779987.document.lines).length))) break Label8;
            if ((contentPanel_3254780155.lastBounds.h <= (self_3254779987.scrollOffset + totalLineHeight_3254779992))) {
            break Label7;
            }
            
            self_3254779987.previousBaseIndex = addInt(self_3254779987.previousBaseIndex, 1);
            HEX2BHEX3D_855640304(self_3254779987, "scrollOffset", totalLineHeight_3254779992);
          }
      };
      Label9: {
          Label10: while (true) {
          if (!((contentPanel_3254780155.lastBounds.h < self_3254779987.scrollOffset) && (0 < self_3254779987.previousBaseIndex))) break Label10;
            if (((self_3254779987.scrollOffset - lineHeight_3254779991) <= 0.0)) {
            break Label9;
            }
            
            self_3254779987.previousBaseIndex = subInt(self_3254779987.previousBaseIndex, 1);
            HEX2DHEX3D_2801811837(self_3254779987, "scrollOffset", totalLineHeight_3254779992);
          }
      };
    };
    var selectionsPerLine_3254780274 = [initTable_3254780263(32)];
    Label11: {
      var s_3254780278 = {Field0: {Field0: 0, Field1: 0}, Field1: {Field0: 0, Field1: 0}};
      var colontmp__536872588 = [];
      colontmp__536872588 = selections_2801795565(self_3254779987);
      var i_536872589 = 0;
      var L_536872590 = (colontmp__536872588).length;
      Label12: {
          Label13: while (true) {
          if (!(i_536872589 < L_536872590)) break Label13;
            s_3254780278 = colontmp__536872588[chckIndx(i_536872589, 0, (colontmp__536872588).length - 1)];
            var sn_3254780279 = normalized_2231370094(s_3254780278);
            Label14: {
              var line_3254780284 = 0;
              var res_536872586 = sn_3254780279.Field0.Field0;
              Label15: {
                  Label16: while (true) {
                  if (!(res_536872586 <= sn_3254780279.Field1.Field0)) break Label16;
                    line_3254780284 = res_536872586;
                    var Temporary18 = nimCopy(null, s_3254780278, NTI2231369739);
                    (Temporary17 = mgetOrPut_3254780315(selectionsPerLine_3254780274[0], line_3254780284, []), Temporary17)[0][Temporary17[1]].push(Temporary18);;
                    res_536872586 = addInt(res_536872586, 1);
                  }
              };
            };
            i_536872589 = addInt(i_536872589, 1);
            if (!(((colontmp__536872588).length == L_536872590))) {
            failedAssertImpl_268435515(makeNimstrLit("iterators.nim(246, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      };
    };
    var highlightsPerLine_3254780529 = nimCopy(null, self_3254779987.searchResults, NTI2801795310);
    var lineNumbers_3254780607 = get_3254780593(self_3254779987.lineNumbers, getOption_3254780542(app_3254779988, [101,100,105,116,111,114,46,116,101,120,116,46,108,105,110,101,45,110,117,109,98,101,114,115], 1));
    switch (lineNumbers_3254780607) {
    case 1:
      Temporary19 = addInt(self_3254779987.previousBaseIndex, ((((contentPanel_3254780155.lastBounds.h - self_3254779987.scrollOffset) / totalLineHeight_3254779992)) | 0));
      break;
    case 2:
      Temporary19 = 99;
      break;
    default: 
      Temporary19 = 0;
      break;
    }
    var maxLineNumber_3254780608 = Temporary19;
    var maxLineNumberLen_3254780609 = addInt((HEX24_369098760(maxLineNumber_3254780608)).length, 1);
    var cursorLine_3254780610 = selection_2801795568(self_3254779987).Field1.Field0;
    if (self_3254779987.lastRenderedLines.length < 0) { for (var i = self_3254779987.lastRenderedLines.length ; i < 0 ; ++i) self_3254779987.lastRenderedLines.push(null); }
               else { self_3254779987.lastRenderedLines.length = 0; };
    Label20: {
      var i_3254781378 = 0;
      var colontmp__536872602 = 0;
      colontmp__536872602 = (self_3254779987.document.lines).length - 1;
      var res_536872603 = self_3254779987.previousBaseIndex;
      Label21: {
          Label22: while (true) {
          if (!(res_536872603 <= colontmp__536872602)) break Label22;
            i_3254781378 = res_536872603;
            if (!(renderLine_3254780615(i_3254781378, true))) {
            break Label20;
            }
            
            res_536872603 = addInt(res_536872603, 1);
          }
      };
    };
    Label23: {
      var k_3254781383 = 0;
      var res_536872606 = 1;
      Label24: {
          Label25: while (true) {
          if (!(res_536872606 <= self_3254779987.previousBaseIndex)) break Label25;
            k_3254781383 = res_536872606;
            var i_3254781384 = subInt(self_3254779987.previousBaseIndex, k_3254781383);
            if (!(renderLine_3254780615(i_3254781384, false))) {
            break Label23;
            }
            
            res_536872606 = addInt(res_536872606, 1);
          }
      };
    };
    contentPanel_3254780155.lastHierarchyChange = frameIndex_3254779990;
    widget_3254779989.lastHierarchyChange = nimMax(widget_3254779989.lastHierarchyChange, contentPanel_3254780155.lastHierarchyChange);
    self_3254779987.lastContentBounds = nimCopy(self_3254779987.lastContentBounds, contentPanel_3254780155.lastBounds, NTI2080374789);
  };

  
}

function updateWidget_3238002693(self_3238002694, app_3238002695, widget_3238002696, frameIndex_3238002697) {
  
}

function updateWidget_3238002698(self_3238002694, app_3238002695, widget_3238002696, frameIndex_3238002697) {
    chckNilDisp(self_3238002694);
    if (isObj(self_3238002694.m_type, NTI2801795279)) {
    updateWidget_3254779986(self_3238002694, app_3238002695, widget_3238002696, frameIndex_3238002697);
    }
    else {
    if (isObj(self_3238002694.m_type, NTI2147483652)) {
    updateWidget_3238002693(self_3238002694, app_3238002695, widget_3238002696, frameIndex_3238002697);
    }
    }

  
}

function dirty_2264924178(self_2264924179) {
  var result_2264924180 = false;

    result_2264924180 = self_2264924179.mDirty;

  return result_2264924180;

}

function resetDirty_2264924208(self_2264924209) {
    self_2264924209.mDirty = false;

  
}

function pop_3271557237(s_3271557239, s_3271557239_Idx) {
  var result_3271557240 = null;

    var L_3271557244 = subInt((s_3271557239[s_3271557239_Idx]).length, 1);
    result_3271557240 = s_3271557239[s_3271557239_Idx][chckIndx(L_3271557244, 0, (s_3271557239[s_3271557239_Idx]).length - 1)];
    if (s_3271557239[s_3271557239_Idx].length < chckRange(L_3271557244, 0, 2147483647)) { for (var i = s_3271557239[s_3271557239_Idx].length ; i < chckRange(L_3271557244, 0, 2147483647) ; ++i) s_3271557239[s_3271557239_Idx].push(null); }
               else { s_3271557239[s_3271557239_Idx].length = chckRange(L_3271557244, 0, 2147483647); };

  return result_3271557240;

}

function updateWidget_3271557163(self_3271557164, app_3271557165, widget_3271557166, frameIndex_3271557167) {
    var Temporary1;

    var textColor_3271557173 = color_3254779994(app_3271557165.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((widget_3271557166.children).length == 0)) {
    var text_3271557177 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3271557167, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3271557166.children.push(text_3271557177);;
    Temporary1 = text_3271557177;
    }
    else {
    Temporary1 = widget_3271557166.children[chckIndx(0, 0, (widget_3271557166.children).length - 1)];
    }
    
    var text_3271557182 = Temporary1;
    text_3271557182.text = nimCopy(null, self_3271557164.path, NTI33554449);
    updateForegroundColor_2332033088(text_3271557182, textColor_3271557173, frameIndex_3271557167);
    updateLastHierarchyChangeFromChildren_2332033110(text_3271557182, -1);

  
}

function updateWidget_3271557143(self_3271557144, app_3271557145, widget_3271557146, frameIndex_3271557147) {
    var Temporary1;

    var textColor_3271557153 = color_3254779994(app_3271557145.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    if (((widget_3271557146.children).length == 0)) {
    var text_3271557157 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), lastHierarchyChange: frameIndex_3271557147, m_type: NTI2332033044, text: [], lastRenderedText: [], style: ({foreground: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), background: ({val: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), has: false}), fontStyle: {}}), pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false};
    widget_3271557146.children.push(text_3271557157);;
    Temporary1 = text_3271557157;
    }
    else {
    Temporary1 = widget_3271557146.children[chckIndx(0, 0, (widget_3271557146.children).length - 1)];
    }
    
    var text_3271557162 = Temporary1;
    text_3271557162.text = nimCopy(null, self_3271557144.path, NTI33554449);
    updateForegroundColor_2332033088(text_3271557162, textColor_3271557153, frameIndex_3271557147);
    updateLastHierarchyChangeFromChildren_2332033110(text_3271557162, -1);

  
}

function updateWidget_3271557137(self_3271557138, app_3271557139, widget_3271557140, frameIndex_3271557141) {
  
}

function updateWidget_3271557142(self_3271557138, app_3271557139, widget_3271557140, frameIndex_3271557141) {
    chckNilDisp(self_3271557138);
    if (isObj(self_3271557138.m_type, NTI1291848510)) {
    updateWidget_3271557163(self_3271557138, app_3271557139, widget_3271557140, frameIndex_3271557141);
    }
    else {
    if (isObj(self_3271557138.m_type, NTI1291848512)) {
    updateWidget_3271557143(self_3271557138, app_3271557139, widget_3271557140, frameIndex_3271557141);
    }
    else {
    if (isObj(self_3271557138.m_type, NTI3204448263)) {
    updateWidget_3271557137(self_3271557138, app_3271557139, widget_3271557140, frameIndex_3271557141);
    }
    }}

  
}

function updateWidget_3271557183(self_3271557184, app_3271557185, widget_3271557186, frameIndex_3271557187) {
      var Temporary1;
      var Temporary2;

  BeforeRet: {
    var lineHeight_3271557188 = lineHeight_2315255947(app_3271557185.platform);
    var totalLineHeight_3271557189 = totalLineHeight_2315255960(app_3271557185.platform);
    var charWidth_3271557190 = charWidth_2315255952(app_3271557185.platform);
    var textColor_3271557196 = color_3254779994(app_3271557185.theme, [101,100,105,116,111,114,46,102,111,114,101,103,114,111,117,110,100], rgb_2365587543(225, 200, 200));
    var headerPanel_3271557197 = null;
    var contentPanel_3271557198 = null;
    if (((widget_3271557186.children).length == 0)) {
    headerPanel_3271557197 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.0)}, NTI2332033035), bottom: totalLineHeight_3271557189, lastHierarchyChange: frameIndex_3271557187, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    widget_3271557186.children.push(headerPanel_3271557197);;
    contentPanel_3271557198 = {anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 1.0)}, NTI2332033035), top: totalLineHeight_3271557189, lastHierarchyChange: frameIndex_3271557187, fillBackground: true, backgroundColor: color_2365587528(0.0, 0.0, 0.0, 1.0), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, bottom: 0.0, foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, logLayout: false, allowAlpha: false};
    contentPanel_3271557198.maskContent = true;
    widget_3271557186.children.push(contentPanel_3271557198);;
    layoutWidget_2332033348(headerPanel_3271557197, widget_3271557186.lastBounds, frameIndex_3271557187, app_3271557185.platform.layoutOptions);
    layoutWidget_2332033348(contentPanel_3271557198, widget_3271557186.lastBounds, frameIndex_3271557187, app_3271557185.platform.layoutOptions);
    }
    else {
      headerPanel_3271557197 = widget_3271557186.children[chckIndx(0, 0, (widget_3271557186.children).length - 1)];
      contentPanel_3271557198 = widget_3271557186.children[chckIndx(1, 0, (widget_3271557186.children).length - 1)];
    }
    
    updateWidget_3238002698(self_3271557184.textEditor, app_3271557185, headerPanel_3271557197, frameIndex_3271557187);
    updateLastHierarchyChangeFromChildren_2332033110(headerPanel_3271557197, frameIndex_3271557187);
    widget_3271557186.lastHierarchyChange = nimMax(widget_3271557186.lastHierarchyChange, headerPanel_3271557197.lastHierarchyChange);
    updateBackgroundColor_2332033102(contentPanel_3271557198, color_3254779994(app_3271557185.theme, [112,97,110,101,108,46,98,97,99,107,103,114,111,117,110,100], rgb_2365587543(25, 25, 25)), frameIndex_3271557187);
      if (changed_2332033349(contentPanel_3271557198, frameIndex_3271557187)) Temporary2 = true; else {        Temporary2 = dirty_2264924178(self_3271557184);      }      if (Temporary2) Temporary1 = true; else {        Temporary1 = app_3271557185.platform.redrawEverything;      }    if (!(Temporary1)) {
    break BeforeRet;
    }
    
    resetDirty_2264924208(self_3271557184);
    var maxLineCount_3271557215 = ((Math.floor((widget_3271557186.lastBounds.h / totalLineHeight_3271557189))) | 0);
    var targetNumRenderedItems_3271557219 = nimMin(maxLineCount_3271557215, (self_3271557184.completions).length);
    var lastRenderedIndex_3271557223 = nimMin(subInt(addInt(self_3271557184.scrollOffset, targetNumRenderedItems_3271557219), 1), (self_3271557184.completions).length - 1);
    if ((self_3271557184.selected < self_3271557184.scrollOffset)) {
    self_3271557184.scrollOffset = self_3271557184.selected;
    lastRenderedIndex_3271557223 = nimMin(subInt(addInt(self_3271557184.scrollOffset, targetNumRenderedItems_3271557219), 1), (self_3271557184.completions).length - 1);
    }
    
    if ((lastRenderedIndex_3271557223 < self_3271557184.selected)) {
    self_3271557184.scrollOffset = nimMax(addInt(subInt(self_3271557184.selected, targetNumRenderedItems_3271557219), 1), 0);
    lastRenderedIndex_3271557223 = nimMin(subInt(addInt(self_3271557184.scrollOffset, targetNumRenderedItems_3271557219), 1), (self_3271557184.completions).length - 1);
    }
    
    var numRenderedItems_3271557230 = nimMax(addInt(subInt(lastRenderedIndex_3271557223, self_3271557184.scrollOffset), 1), 0);
    Label3: {
        Label4: while (true) {
        if (!(numRenderedItems_3271557230 < (contentPanel_3271557198.children).length)) break Label4;
          var _ = pop_3271557237(contentPanel_3271557198, "children");
        }
    };
    Label5: {
        Label6: while (true) {
        if (!((contentPanel_3271557198.children).length < numRenderedItems_3271557230)) break Label6;
          contentPanel_3271557198.children.push({anchor: nimCopy(null, {Field0: vec2_2097152992(0.0, 0.0), Field1: vec2_2097152992(1.0, 0.0)}, NTI2332033035), m_type: NTI2332033036, maskContent: false, children: [], pivot: ({arr: new Float32Array(2)}), left: 0.0, right: 0.0, top: 0.0, bottom: 0.0, backgroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), foregroundColor: ({r: 0.0, g: 0.0, b: 0.0, a: 0.0}), lastBounds: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastBoundsChange: 0, lastHierarchyChange: 0, lastInvalidationRect: ({x: 0.0, y: 0.0, w: 0.0, h: 0.0}), lastInvalidation: 0, sizeToContent: false, drawBorder: false, fillBackground: false, logLayout: false, allowAlpha: false});;
        }
    };
    var selectionColor_3271557261 = color_3254779994(app_3271557185.theme, [108,105,115,116,46,97,99,116,105,118,101,83,101,108,101,99,116,105,111,110,66,97,99,107,103,114,111,117,110,100], rgb_2365587543(200, 200, 200));
    var top_3271557262 = 0.0;
    var widgetIndex_3271557263 = 0;
    Label7: {
      var completionIndex_3271557268 = 0;
      var res_536872670 = self_3271557184.scrollOffset;
      Label8: {
          Label9: while (true) {
          if (!(res_536872670 <= lastRenderedIndex_3271557223)) break Label9;
            completionIndex_3271557268 = res_536872670;
            try {
            var lineWidget_3271557274 = contentPanel_3271557198.children[chckIndx(widgetIndex_3271557263, 0, (contentPanel_3271557198.children).length - 1)];
            lineWidget_3271557274.top = top_3271557262;
            lineWidget_3271557274.bottom = (top_3271557262 + totalLineHeight_3271557189);
            lineWidget_3271557274.lastHierarchyChange = frameIndex_3271557187;
            if ((completionIndex_3271557268 == self_3271557184.selected)) {
            lineWidget_3271557274.fillBackground = true;
            updateBackgroundColor_2332033102(lineWidget_3271557274, selectionColor_3271557261, frameIndex_3271557187);
            }
            else {
              lineWidget_3271557274.fillBackground = false;
              updateBackgroundColor_2332033102(lineWidget_3271557274, color_2365587528(0.0, 0.0, 0.0, 1.0), frameIndex_3271557187);
            }
            
            updateWidget_3271557142(self_3271557184.completions[chckIndx(completionIndex_3271557268, 0, (self_3271557184.completions).length - 1)], app_3271557185, lineWidget_3271557274, frameIndex_3271557187);
            top_3271557262 = lineWidget_3271557274.bottom;
            res_536872670 = addInt(res_536872670, 1);
            } finally {
            widgetIndex_3271557263 = addInt(widgetIndex_3271557263, 1);
            }
          }
      };
    };
    contentPanel_3271557198.lastHierarchyChange = frameIndex_3271557187;
    widget_3271557186.lastHierarchyChange = nimMax(widget_3271557186.lastHierarchyChange, contentPanel_3271557198.lastHierarchyChange);
  };

  
}

function updateWidget_3238002699(self_3238002700, app_3238002701, widget_3238002702, frameIndex_3238002703) {
  
}

function updateWidget_3238002704(self_3238002700, app_3238002701, widget_3238002702, frameIndex_3238002703) {
    chckNilDisp(self_3238002700);
    if (isObj(self_3238002700.m_type, NTI3204448274)) {
    updateWidget_3271557183(self_3238002700, app_3238002701, widget_3238002702, frameIndex_3238002703);
    }
    else {
    if (isObj(self_3238002700.m_type, NTI2264924164)) {
    updateWidget_3238002699(self_3238002700, app_3238002701, widget_3238002702, frameIndex_3238002703);
    }
    }

  
}
